{
    "sourceFile": "node_modules/fast-json-stable-stringify/test/nested.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892292562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar stringify = require('../');\n\ntest('nested', function (t) {\n    t.plan(1);\n    var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\n    t.equal(stringify(obj), '{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}');\n});\n\ntest('cyclic (default)', function (t) {\n    t.plan(1);\n    var one = { a: 1 };\n    var two = { a: 2, one: one };\n    one.two = two;\n    try {\n        stringify(one);\n    } catch (ex) {\n        t.equal(ex.toString(), 'TypeError: Converting circular structure to JSON');\n    }\n});\n\ntest('cyclic (specifically allowed)', function (t) {\n    t.plan(1);\n    var one = { a: 1 };\n    var two = { a: 2, one: one };\n    one.two = two;\n    t.equal(stringify(one, {cycles:true}), '{\"a\":1,\"two\":{\"a\":2,\"one\":\"__cycle__\"}}');\n});\n\ntest('repeated non-cyclic value', function(t) {\n    t.plan(1);\n    var one = { x: 1 };\n    var two = { a: one, b: one };\n    t.equal(stringify(two), '{\"a\":{\"x\":1},\"b\":{\"x\":1}}');\n});\n\ntest('acyclic but with reused obj-property pointers', function (t) {\n    t.plan(1);\n    var x = { a: 1 };\n    var y = { b: x, c: x };\n    t.equal(stringify(y), '{\"b\":{\"a\":1},\"c\":{\"a\":1}}');\n});\n"
        }
    ]
}
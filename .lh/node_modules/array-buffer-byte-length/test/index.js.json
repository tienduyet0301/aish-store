{
    "sourceFile": "node_modules/array-buffer-byte-length/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892024961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar forEach = require('for-each');\nvar v = require('es-value-fixtures');\nvar inspect = require('object-inspect');\n\nvar byteLength = require('../');\n\ntest('byteLength', function (t) {\n\tforEach(v.objects.concat(v.primitives), function (nonAB) {\n\t\tt.equal(byteLength(nonAB), NaN, inspect(nonAB) + ' is not an ArrayBuffer, and yields NaN');\n\t});\n\n\tt.test('ArrayBuffers', { skip: typeof ArrayBuffer !== 'function' }, function (st) {\n\t\tvar ab32 = new ArrayBuffer(32);\n\t\tst.equal(byteLength(ab32), 32, 'works on an ArrayBuffer of length 32: ' + inspect(ab32));\n\n\t\tvar ab0 = new ArrayBuffer(0);\n\t\tst.equal(byteLength(ab0), 0, 'works on an ArrayBuffer of length 0: ' + inspect(ab0));\n\n\t\tvar dv = new DataView(ab32);\n\t\tst.equal(byteLength(dv), NaN, 'a DataView returns NaN');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"
        }
    ]
}
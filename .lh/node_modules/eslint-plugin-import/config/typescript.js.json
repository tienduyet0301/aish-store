{
    "sourceFile": "node_modules/eslint-plugin-import/config/typescript.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892249695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * This config:\n * 1) adds `.jsx`, `.ts`, `.cts`, `.mts`, and `.tsx` as an extension\n * 2) enables JSX/TSX parsing\n */\n\n// Omit `.d.ts` because 1) TypeScript compilation already confirms that\n// types are resolved, and 2) it would mask an unresolved\n// `.ts`/`.tsx`/`.js`/`.jsx` implementation.\nconst typeScriptExtensions = ['.ts', '.cts', '.mts', '.tsx'];\n\nconst allExtensions = [...typeScriptExtensions, '.js', '.jsx', '.mjs', '.cjs'];\n\nmodule.exports = {\n  settings: {\n    'import/extensions': allExtensions,\n    'import/external-module-folders': ['node_modules', 'node_modules/@types'],\n    'import/parsers': {\n      '@typescript-eslint/parser': typeScriptExtensions,\n    },\n    'import/resolver': {\n      node: {\n        extensions: allExtensions,\n      },\n    },\n  },\n\n  rules: {\n    // analysis/correctness\n\n    // TypeScript compilation already ensures that named imports exist in the referenced module\n    'import/named': 'off',\n  },\n};\n"
        }
    ]
}
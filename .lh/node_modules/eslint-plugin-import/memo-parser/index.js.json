{
    "sourceFile": "node_modules/eslint-plugin-import/memo-parser/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892255610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nconst crypto = require('crypto');\nconst moduleRequire = require('eslint-module-utils/module-require').default;\nconst hashObject = require('eslint-module-utils/hash').hashObject;\n\nconst cache = new Map();\n\n// must match ESLint default options or we'll miss the cache every time\nconst parserOptions = {\n  loc: true,\n  range: true,\n  raw: true,\n  tokens: true,\n  comment: true,\n  attachComment: true,\n};\n\nexports.parse = function parse(content, options) {\n  options = { ...options, ...parserOptions };\n\n  if (!options.filePath) {\n    throw new Error('no file path provided!');\n  }\n\n  const keyHash = crypto.createHash('sha256');\n  keyHash.update(content);\n  hashObject(options, keyHash);\n\n  const key = keyHash.digest('hex');\n\n  let ast = cache.get(key);\n  if (ast != null) { return ast; }\n\n  const realParser = moduleRequire(options.parser);\n\n  ast = realParser.parse(content, options);\n  cache.set(key, ast);\n\n  return ast;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-import/docs/rules/no-named-as-default.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892251045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# import/no-named-as-default\n\n‚ö†Ô∏è This rule _warns_ in the following configs: ‚òëÔ∏è `recommended`, üö∏ `warnings`.\n\n<!-- end auto-generated rule header -->\n\nReports use of an exported name as the locally imported name of a default export.\n\nRationale: using an exported name as the name of the default export is likely...\n\n - _misleading_: others familiar with `foo.js` probably expect the name to be `foo`\n - _a mistake_: only needed to import `bar` and forgot the brackets (the case that is prompting this)\n\n## Rule Details\n\nGiven:\n\n```js\n// foo.js\nexport default 'foo';\nexport const bar = 'baz';\n```\n\n...this would be valid:\n\n```js\nimport foo from './foo.js';\n```\n\n...and this would be reported:\n\n```js\n// message: Using exported name 'bar' as identifier for default export.\nimport bar from './foo.js';\n```\n\nFor post-ES2015 `export` extensions, this also prevents exporting the default from a referenced module as a name within that module, for the same reasons:\n\n```js\n// valid:\nexport foo from './foo.js';\n\n// message: Using exported name 'bar' as identifier for default export.\nexport bar from './foo.js';\n```\n\n## Further Reading\n\n - ECMAScript Proposal: [export ns from]\n - ECMAScript Proposal: [export default from]\n\n[export ns from]: https://github.com/leebyron/ecmascript-export-ns-from\n[export default from]: https://github.com/leebyron/ecmascript-export-default-from\n"
        }
    ]
}
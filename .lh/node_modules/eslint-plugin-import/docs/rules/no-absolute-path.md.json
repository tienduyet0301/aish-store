{
    "sourceFile": "node_modules/eslint-plugin-import/docs/rules/no-absolute-path.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892250251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# import/no-absolute-path\n\nðŸ”§ This rule is automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).\n\n<!-- end auto-generated rule header -->\n\nNode.js allows the import of modules using an absolute path such as `/home/xyz/file.js`. That is a bad practice as it ties the code using it to your computer, and therefore makes it unusable in packages distributed on `npm` for instance.\n\nThis rule forbids the import of modules using absolute paths.\n\n## Rule Details\n\n### Fail\n\n```js\nimport f from '/foo';\nimport f from '/some/path';\n\nvar f = require('/foo');\nvar f = require('/some/path');\n```\n\n### Pass\n\n```js\nimport _ from 'lodash';\nimport foo from 'foo';\nimport foo from './foo';\n\nvar _ = require('lodash');\nvar foo = require('foo');\nvar foo = require('./foo');\n```\n\n### Options\n\nBy default, only ES6 imports and CommonJS `require` calls will have this rule enforced.\n\nYou may provide an options object providing true/false for any of\n\n - `esmodule`: defaults to `true`\n - `commonjs`: defaults to `true`\n - `amd`: defaults to `false`\n\nIf `{ amd: true }` is provided, dependency paths for AMD-style `define` and `require`\ncalls will be resolved:\n\n```js\n/*eslint import/no-absolute-path: [2, { commonjs: false, amd: true }]*/\ndefine(['/foo'], function (foo) { /*...*/ }) // reported\nrequire(['/foo'], function (foo) { /*...*/ }) // reported\n\nconst foo = require('/foo') // ignored because of explicit `commonjs: false`\n```\n"
        }
    ]
}
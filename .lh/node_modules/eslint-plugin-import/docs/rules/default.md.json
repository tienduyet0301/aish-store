{
    "sourceFile": "node_modules/eslint-plugin-import/docs/rules/default.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892249795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# import/default\n\nüíº This rule is enabled in the following configs: ‚ùó `errors`, ‚òëÔ∏è `recommended`.\n\n<!-- end auto-generated rule header -->\n\nIf a default import is requested, this rule will report if there is no default\nexport in the imported module.\n\nFor [ES7], reports if a default is named and exported but is not found in the\nreferenced module.\n\nNote: for packages, the plugin will find exported names\nfrom [`jsnext:main`], if present in `package.json`.\nRedux's npm module includes this key, and thereby is lintable, for example.\n\nA module path that is [ignored] or not [unambiguously an ES module] will not be reported when imported.\n\n[ignored]: ../README.md#importignore\n[unambiguously an ES module]: https://github.com/bmeck/UnambiguousJavaScriptGrammar\n\n## Rule Details\n\nGiven:\n\n```js\n// ./foo.js\nexport default function () { return 42 }\n\n// ./bar.js\nexport function bar() { return null }\n\n// ./baz.js\nmodule.exports = function () { /* ... */ }\n\n// node_modules/some-module/index.js\nexports.sharedFunction = function shared() { /* ... */ }\n```\n\nThe following is considered valid:\n\n```js\nimport foo from './foo'\n\n// assuming 'node_modules' are ignored (true by default)\nimport someModule from 'some-module'\n```\n\n...and the following cases are reported:\n\n```js\nimport bar from './bar' // no default export found in ./bar\nimport baz from './baz' // no default export found in ./baz\n```\n\n## When Not To Use It\n\nIf you are using CommonJS and/or modifying the exported namespace of any module at\nruntime, you will likely see false positives with this rule.\n\nThis rule currently does not interpret `module.exports = ...` as a `default` export,\neither, so such a situation will be reported in the importing module.\n\n## Further Reading\n\n - Lee Byron's [ES7] export proposal\n - [`import/ignore`] setting\n - [`jsnext:main`] (Rollup)\n\n[ES7]: https://github.com/leebyron/ecmascript-more-export-from\n[`import/ignore`]: ../../README.md#importignore\n[`jsnext:main`]: https://github.com/rollup/rollup/wiki/jsnext:main\n"
        }
    ]
}
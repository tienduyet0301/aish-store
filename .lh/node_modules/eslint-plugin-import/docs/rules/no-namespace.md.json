{
    "sourceFile": "node_modules/eslint-plugin-import/docs/rules/no-namespace.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892251187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# import/no-namespace\n\nðŸ”§ This rule is automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).\n\n<!-- end auto-generated rule header -->\n\nEnforce a convention of not using namespace (a.k.a. \"wildcard\" `*`) imports.\n\nThe rule is auto-fixable when the namespace object is only used for direct member access, e.g. `namespace.a`.\n\n## Options\n\nThis rule supports the following options:\n\n - `ignore`: array of glob strings for modules that should be ignored by the rule.\n\n## Rule Details\n\nValid:\n\n```js\nimport defaultExport from './foo'\nimport { a, b }  from './bar'\nimport defaultExport, { a, b }  from './foobar'\n```\n\n```js\n/* eslint import/no-namespace: [\"error\", {ignore: ['*.ext']}] */\nimport * as bar from './ignored-module.ext';\n```\n\nInvalid:\n\n```js\nimport * as foo from 'foo';\n```\n\n```js\nimport defaultExport, * as foo from 'foo';\n```\n\n## When Not To Use It\n\nIf you want to use namespaces, you don't want to use this rule.\n"
        }
    ]
}
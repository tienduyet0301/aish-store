{
    "sourceFile": "node_modules/eslint-plugin-import/docs/rules/no-relative-packages.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892251293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# import/no-relative-packages\n\nðŸ”§ This rule is automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).\n\n<!-- end auto-generated rule header -->\n\nUse this rule to prevent importing packages through relative paths.\n\nIt's useful in Yarn/Lerna workspaces, where it's possible to import a sibling package using `../package` relative path, while direct `package` is the correct one.\n\n## Examples\n\nGiven the following folder structure:\n\n```pt\nmy-project\nâ”œâ”€â”€ packages\nâ”‚   â”œâ”€â”€ foo\nâ”‚   â”‚   â”œâ”€â”€ index.js\nâ”‚   â”‚   â””â”€â”€ package.json\nâ”‚   â””â”€â”€ bar\nâ”‚       â”œâ”€â”€ index.js\nâ”‚       â””â”€â”€ package.json\nâ””â”€â”€ entry.js\n```\n\nAnd the .eslintrc file:\n\n```json\n{\n  ...\n  \"rules\": {\n    \"import/no-relative-packages\": \"error\"\n  }\n}\n```\n\nThe following patterns are considered problems:\n\n```js\n/**\n *  in my-project/packages/foo.js\n */\n\nimport bar from '../bar'; // Import sibling package using relative path\nimport entry from '../../entry.js'; // Import from parent package using relative path\n\n/**\n *  in my-project/entry.js\n */\n\nimport bar from './packages/bar'; // Import child package using relative path\n```\n\nThe following patterns are NOT considered problems:\n\n```js\n/**\n *  in my-project/packages/foo.js\n */\n\nimport bar from 'bar'; // Import sibling package using package name\n\n/**\n *  in my-project/entry.js\n */\n\nimport bar from 'bar'; // Import sibling package using package name\n```\n"
        }
    ]
}
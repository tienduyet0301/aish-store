{
    "sourceFile": "node_modules/eslint-plugin-import/docs/rules/no-internal-modules.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892250892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# import/no-internal-modules\n\n<!-- end auto-generated rule header -->\n\nUse this rule to prevent importing the submodules of other modules.\n\n## Rule Details\n\nThis rule has two mutally exclusive options that are arrays of [minimatch/glob patterns](https://github.com/isaacs/node-glob#glob-primer) patterns:\n\n - `allow` that include paths and import statements that can be imported with reaching.\n - `forbid` that exclude paths and import statements that can be imported with reaching.\n\n### Examples\n\nGiven the following folder structure:\n\n```pt\nmy-project\n├── actions\n│   └── getUser.js\n│   └── updateUser.js\n├── reducer\n│   └── index.js\n│   └── user.js\n├── redux\n│   └── index.js\n│   └── configureStore.js\n└── app\n│   └── index.js\n│   └── settings.js\n└── entry.js\n```\n\nAnd the .eslintrc file:\n\n```json\n{\n  ...\n  \"rules\": {\n    \"import/no-internal-modules\": [ \"error\", {\n      \"allow\": [ \"**/actions/*\", \"source-map-support/*\" ],\n    } ]\n  }\n}\n```\n\nThe following patterns are considered problems:\n\n```js\n/**\n *  in my-project/entry.js\n */\n\nimport { settings } from './app/index'; // Reaching to \"./app/index\" is not allowed\nimport userReducer from './reducer/user'; // Reaching to \"./reducer/user\" is not allowed\nimport configureStore from './redux/configureStore'; // Reaching to \"./redux/configureStore\" is not allowed\n\nexport { settings } from './app/index'; // Reaching to \"./app/index\" is not allowed\nexport * from './reducer/user'; // Reaching to \"./reducer/user\" is not allowed\n```\n\nThe following patterns are NOT considered problems:\n\n```js\n/**\n *  in my-project/entry.js\n */\n\nimport 'source-map-support/register';\nimport { settings } from '../app';\nimport getUser from '../actions/getUser';\n\nexport * from 'source-map-support/register';\nexport { settings } from '../app';\n```\n\nGiven the following folder structure:\n\n```pt\nmy-project\n├── actions\n│   └── getUser.js\n│   └── updateUser.js\n├── reducer\n│   └── index.js\n│   └── user.js\n├── redux\n│   └── index.js\n│   └── configureStore.js\n└── app\n│   └── index.js\n│   └── settings.js\n└── entry.js\n```\n\nAnd the .eslintrc file:\n\n```json\n{\n  ...\n  \"rules\": {\n    \"import/no-internal-modules\": [ \"error\", {\n      \"forbid\": [ \"**/actions/*\", \"source-map-support/*\" ],\n    } ]\n  }\n}\n```\n\nThe following patterns are considered problems:\n\n```js\n/**\n *  in my-project/entry.js\n */\n\nimport 'source-map-support/register';\nimport getUser from '../actions/getUser';\n\nexport * from 'source-map-support/register';\nexport getUser from '../actions/getUser';\n```\n\nThe following patterns are NOT considered problems:\n\n```js\n/**\n *  in my-project/entry.js\n */\n\nimport 'source-map-support';\nimport { getUser } from '../actions';\n\nexport * from 'source-map-support';\nexport { getUser } from '../actions';\n```\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-import/docs/rules/unambiguous.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892251812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# import/unambiguous\n\n<!-- end auto-generated rule header -->\n\nWarn if a `module` could be mistakenly parsed as a `script` by a consumer leveraging\n[Unambiguous JavaScript Grammar] to determine correct parsing goal.\n\nWill respect the [`parserOptions.sourceType`] from ESLint config, i.e. files parsed\nas `script` per that setting will not be reported.\n\nThis plugin uses [Unambiguous JavaScript Grammar] internally to decide whether\ndependencies should be parsed as modules and searched for exports matching the\n`import`ed names, so it may be beneficial to keep this rule on even if your application\nwill run in an explicit `module`-only environment.\n\n## Rule Details\n\nFor files parsed as `module` by ESLint, the following are valid:\n\n```js\nimport 'foo'\nfunction x() { return 42 }\n```\n\n```js\nexport function x() { return 42 }\n```\n\n```js\n(function x() { return 42 })()\nexport {} // simple way to mark side-effects-only file as 'module' without any imports/exports\n```\n\n...whereas the following file would be reported:\n\n```js\n(function x() { return 42 })()\n```\n\n## When Not To Use It\n\nIf your application environment will always know via [some other means](https://github.com/nodejs/node-eps/issues/13)\nhow to parse, regardless of syntax, you may not need this rule.\n\nRemember, though, that this plugin uses this strategy internally, so if you were\nto `import` from a module with no `import`s or `export`s, this plugin would not\nreport it as it would not be clear whether it should be considered a `script` or\na `module`.\n\n## Further Reading\n\n - [Unambiguous JavaScript Grammar]\n - [`parserOptions.sourceType`]\n - [node-eps#13](https://github.com/nodejs/node-eps/issues/13)\n\n[`parserOptions.sourceType`]: https://eslint.org/docs/user-guide/configuring#specifying-parser-options\n[Unambiguous JavaScript Grammar]: https://github.com/nodejs/node-eps/blob/HEAD/002-es-modules.md#32-determining-if-source-is-an-es-module\n"
        }
    ]
}
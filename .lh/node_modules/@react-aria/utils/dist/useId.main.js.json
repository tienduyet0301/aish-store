{
    "sourceFile": "node_modules/@react-aria/utils/dist/useId.main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891916009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var $78605a5d7424e31b$exports = require(\"./useLayoutEffect.main.js\");\nvar $19a2307bfabafaf1$exports = require(\"./useValueEffect.main.js\");\nvar $dG5aF$react = require(\"react\");\nvar $dG5aF$reactariassr = require(\"@react-aria/ssr\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"useId\", () => $8c61827343eed941$export$f680877a34711e37);\n$parcel$export(module.exports, \"mergeIds\", () => $8c61827343eed941$export$cd8c9cb68f842629);\n$parcel$export(module.exports, \"useSlotId\", () => $8c61827343eed941$export$b4cc09c592e8fdb8);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\n// copied from SSRProvider.tsx to reduce exports, if needed again, consider sharing\nlet $8c61827343eed941$var$canUseDOM = Boolean(typeof window !== 'undefined' && window.document && window.document.createElement);\nlet $8c61827343eed941$export$d41a04c74483c6ef = new Map();\n// This allows us to clean up the idsUpdaterMap when the id is no longer used.\n// Map is a strong reference, so unused ids wouldn't be cleaned up otherwise.\n// This can happen in suspended components where mount/unmount is not called.\nlet $8c61827343eed941$var$registry;\nif (typeof FinalizationRegistry !== 'undefined') $8c61827343eed941$var$registry = new FinalizationRegistry((heldValue)=>{\n    $8c61827343eed941$export$d41a04c74483c6ef.delete(heldValue);\n});\nfunction $8c61827343eed941$export$f680877a34711e37(defaultId) {\n    let [value, setValue] = (0, $dG5aF$react.useState)(defaultId);\n    let nextId = (0, $dG5aF$react.useRef)(null);\n    let res = (0, $dG5aF$reactariassr.useSSRSafeId)(value);\n    let cleanupRef = (0, $dG5aF$react.useRef)(null);\n    if ($8c61827343eed941$var$registry) $8c61827343eed941$var$registry.register(cleanupRef, res);\n    if ($8c61827343eed941$var$canUseDOM) {\n        const cacheIdRef = $8c61827343eed941$export$d41a04c74483c6ef.get(res);\n        if (cacheIdRef && !cacheIdRef.includes(nextId)) cacheIdRef.push(nextId);\n        else $8c61827343eed941$export$d41a04c74483c6ef.set(res, [\n            nextId\n        ]);\n    }\n    (0, $78605a5d7424e31b$exports.useLayoutEffect)(()=>{\n        let r = res;\n        return ()=>{\n            // In Suspense, the cleanup function may be not called\n            // when it is though, also remove it from the finalization registry.\n            if ($8c61827343eed941$var$registry) $8c61827343eed941$var$registry.unregister(cleanupRef);\n            $8c61827343eed941$export$d41a04c74483c6ef.delete(r);\n        };\n    }, [\n        res\n    ]);\n    // This cannot cause an infinite loop because the ref is always cleaned up.\n    // eslint-disable-next-line\n    (0, $dG5aF$react.useEffect)(()=>{\n        let newId = nextId.current;\n        if (newId) setValue(newId);\n        return ()=>{\n            if (newId) nextId.current = null;\n        };\n    });\n    return res;\n}\nfunction $8c61827343eed941$export$cd8c9cb68f842629(idA, idB) {\n    if (idA === idB) return idA;\n    let setIdsA = $8c61827343eed941$export$d41a04c74483c6ef.get(idA);\n    if (setIdsA) {\n        setIdsA.forEach((ref)=>ref.current = idB);\n        return idB;\n    }\n    let setIdsB = $8c61827343eed941$export$d41a04c74483c6ef.get(idB);\n    if (setIdsB) {\n        setIdsB.forEach((ref)=>ref.current = idA);\n        return idA;\n    }\n    return idB;\n}\nfunction $8c61827343eed941$export$b4cc09c592e8fdb8(depArray = []) {\n    let id = $8c61827343eed941$export$f680877a34711e37();\n    let [resolvedId, setResolvedId] = (0, $19a2307bfabafaf1$exports.useValueEffect)(id);\n    let updateId = (0, $dG5aF$react.useCallback)(()=>{\n        setResolvedId(function*() {\n            yield id;\n            yield document.getElementById(id) ? id : undefined;\n        });\n    }, [\n        id,\n        setResolvedId\n    ]);\n    (0, $78605a5d7424e31b$exports.useLayoutEffect)(updateId, [\n        id,\n        updateId,\n        ...depArray\n    ]);\n    return resolvedId;\n}\n\n\n//# sourceMappingURL=useId.main.js.map\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@react-aria/utils/dist/useResizeObserver.main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891916895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var $aM4zL$react = require(\"react\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"useResizeObserver\", () => $37733e1652f47193$export$683480f191c0e3ea);\n\nfunction $37733e1652f47193$var$hasResizeObserver() {\n    return typeof window.ResizeObserver !== 'undefined';\n}\nfunction $37733e1652f47193$export$683480f191c0e3ea(options) {\n    const { ref: ref, box: box, onResize: onResize } = options;\n    (0, $aM4zL$react.useEffect)(()=>{\n        let element = ref === null || ref === void 0 ? void 0 : ref.current;\n        if (!element) return;\n        if (!$37733e1652f47193$var$hasResizeObserver()) {\n            window.addEventListener('resize', onResize, false);\n            return ()=>{\n                window.removeEventListener('resize', onResize, false);\n            };\n        } else {\n            const resizeObserverInstance = new window.ResizeObserver((entries)=>{\n                if (!entries.length) return;\n                onResize();\n            });\n            resizeObserverInstance.observe(element, {\n                box: box\n            });\n            return ()=>{\n                if (element) resizeObserverInstance.unobserve(element);\n            };\n        }\n    }, [\n        onResize,\n        ref,\n        box\n    ]);\n}\n\n\n//# sourceMappingURL=useResizeObserver.main.js.map\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@react-aria/utils/dist/useFormReset.main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891915633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var $1254e5bb94ac8761$exports = require(\"./useEffectEvent.main.js\");\nvar $81vbz$react = require(\"react\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"useFormReset\", () => $1f205e845604a423$export$5add1d006293d136);\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nfunction $1f205e845604a423$export$5add1d006293d136(ref, initialValue, onReset) {\n    let resetValue = (0, $81vbz$react.useRef)(initialValue);\n    let handleReset = (0, $1254e5bb94ac8761$exports.useEffectEvent)(()=>{\n        if (onReset) onReset(resetValue.current);\n    });\n    (0, $81vbz$react.useEffect)(()=>{\n        var _ref_current;\n        let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;\n        form === null || form === void 0 ? void 0 : form.addEventListener('reset', handleReset);\n        return ()=>{\n            form === null || form === void 0 ? void 0 : form.removeEventListener('reset', handleReset);\n        };\n    }, [\n        ref,\n        handleReset\n    ]);\n}\n\n\n//# sourceMappingURL=useFormReset.main.js.map\n"
        }
    ]
}
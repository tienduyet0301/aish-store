{
    "sourceFile": "node_modules/@react-aria/utils/dist/useDeepMemo.main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891914679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var $4FGhO$react = require(\"react\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"useDeepMemo\", () => $20e6e72fbf5dc81e$export$722debc0e56fea39);\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /* eslint-disable rulesdir/pure-render */ \nfunction $20e6e72fbf5dc81e$export$722debc0e56fea39(value, isEqual) {\n    // Using a ref during render is ok here because it's only an optimization â€“ both values are equivalent.\n    // If a render is thrown away, it'll still work the same no matter if the next render is the same or not.\n    let lastValue = (0, $4FGhO$react.useRef)(null);\n    if (value && lastValue.current && isEqual(value, lastValue.current)) value = lastValue.current;\n    lastValue.current = value;\n    return value;\n}\n\n\n//# sourceMappingURL=useDeepMemo.main.js.map\n"
        }
    ]
}
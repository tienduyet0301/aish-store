{
    "sourceFile": "node_modules/@react-aria/utils/dist/DOMFunctions.main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891910789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var $aaa611146751592e$exports = require(\"./domHelpers.main.js\");\nvar $loak6$reactstatelyflags = require(\"@react-stately/flags\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"nodeContains\", () => $d723bea02f3e2567$export$4282f70798064fe0);\n$parcel$export(module.exports, \"getActiveElement\", () => $d723bea02f3e2567$export$cd4e5573fbe2b576);\n$parcel$export(module.exports, \"getEventTarget\", () => $d723bea02f3e2567$export$e58f029f0fbfdb29);\n// Source: https://github.com/microsoft/tabster/blob/a89fc5d7e332d48f68d03b1ca6e344489d1c3898/src/Shadowdomize/DOMFunctions.ts#L16\n\n\nfunction $d723bea02f3e2567$export$4282f70798064fe0(node, otherNode) {\n    if (!(0, $loak6$reactstatelyflags.shadowDOM)()) return otherNode && node ? node.contains(otherNode) : false;\n    if (!node || !otherNode) return false;\n    let currentNode = otherNode;\n    while(currentNode !== null){\n        if (currentNode === node) return true;\n        if (currentNode.tagName === 'SLOT' && currentNode.assignedSlot) // Element is slotted\n        currentNode = currentNode.assignedSlot.parentNode;\n        else if ((0, $aaa611146751592e$exports.isShadowRoot)(currentNode)) // Element is in shadow root\n        currentNode = currentNode.host;\n        else currentNode = currentNode.parentNode;\n    }\n    return false;\n}\nconst $d723bea02f3e2567$export$cd4e5573fbe2b576 = (doc = document)=>{\n    var _activeElement_shadowRoot;\n    if (!(0, $loak6$reactstatelyflags.shadowDOM)()) return doc.activeElement;\n    let activeElement = doc.activeElement;\n    while(activeElement && 'shadowRoot' in activeElement && ((_activeElement_shadowRoot = activeElement.shadowRoot) === null || _activeElement_shadowRoot === void 0 ? void 0 : _activeElement_shadowRoot.activeElement))activeElement = activeElement.shadowRoot.activeElement;\n    return activeElement;\n};\nfunction $d723bea02f3e2567$export$e58f029f0fbfdb29(event) {\n    if ((0, $loak6$reactstatelyflags.shadowDOM)() && event.target.shadowRoot) {\n        if (event.composedPath) return event.composedPath()[0];\n    }\n    return event.target;\n}\n\n\n//# sourceMappingURL=DOMFunctions.main.js.map\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@react-aria/utils/dist/useViewportSize.main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891917745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var $4gIVO$react = require(\"react\");\nvar $4gIVO$reactariassr = require(\"@react-aria/ssr\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"useViewportSize\", () => $8b24bab62f5c65ad$export$d699905dd57c73ca);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nlet $8b24bab62f5c65ad$var$visualViewport = typeof document !== 'undefined' && window.visualViewport;\nfunction $8b24bab62f5c65ad$export$d699905dd57c73ca() {\n    let isSSR = (0, $4gIVO$reactariassr.useIsSSR)();\n    let [size, setSize] = (0, $4gIVO$react.useState)(()=>isSSR ? {\n            width: 0,\n            height: 0\n        } : $8b24bab62f5c65ad$var$getViewportSize());\n    (0, $4gIVO$react.useEffect)(()=>{\n        // Use visualViewport api to track available height even on iOS virtual keyboard opening\n        let onResize = ()=>{\n            setSize((size)=>{\n                let newSize = $8b24bab62f5c65ad$var$getViewportSize();\n                if (newSize.width === size.width && newSize.height === size.height) return size;\n                return newSize;\n            });\n        };\n        if (!$8b24bab62f5c65ad$var$visualViewport) window.addEventListener('resize', onResize);\n        else $8b24bab62f5c65ad$var$visualViewport.addEventListener('resize', onResize);\n        return ()=>{\n            if (!$8b24bab62f5c65ad$var$visualViewport) window.removeEventListener('resize', onResize);\n            else $8b24bab62f5c65ad$var$visualViewport.removeEventListener('resize', onResize);\n        };\n    }, []);\n    return size;\n}\nfunction $8b24bab62f5c65ad$var$getViewportSize() {\n    return {\n        width: $8b24bab62f5c65ad$var$visualViewport && ($8b24bab62f5c65ad$var$visualViewport === null || $8b24bab62f5c65ad$var$visualViewport === void 0 ? void 0 : $8b24bab62f5c65ad$var$visualViewport.width) || window.innerWidth,\n        height: $8b24bab62f5c65ad$var$visualViewport && ($8b24bab62f5c65ad$var$visualViewport === null || $8b24bab62f5c65ad$var$visualViewport === void 0 ? void 0 : $8b24bab62f5c65ad$var$visualViewport.height) || window.innerHeight\n    };\n}\n\n\n//# sourceMappingURL=useViewportSize.main.js.map\n"
        }
    ]
}
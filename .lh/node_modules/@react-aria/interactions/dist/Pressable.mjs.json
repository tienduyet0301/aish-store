{
    "sourceFile": "node_modules/@react-aria/interactions/dist/Pressable.mjs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891906935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import {usePress as $f6c31cce2adf654f$export$45712eceda6fad21} from \"./usePress.mjs\";\nimport {useFocusable as $f645667febf57a63$export$4c014de7c8940b4c} from \"./useFocusable.mjs\";\nimport {useObjectRef as $hhDyF$useObjectRef, getOwnerWindow as $hhDyF$getOwnerWindow, isFocusable as $hhDyF$isFocusable, mergeProps as $hhDyF$mergeProps, mergeRefs as $hhDyF$mergeRefs} from \"@react-aria/utils\";\nimport $hhDyF$react, {useEffect as $hhDyF$useEffect} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\nconst $3b117e43dc0ca95d$export$27c701ed9e449e99 = /*#__PURE__*/ (0, $hhDyF$react).forwardRef(({ children: children, ...props }, ref)=>{\n    ref = (0, $hhDyF$useObjectRef)(ref);\n    let { pressProps: pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({\n        ...props,\n        ref: ref\n    });\n    let { focusableProps: focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);\n    let child = (0, $hhDyF$react).Children.only(children);\n    (0, $hhDyF$useEffect)(()=>{\n        if (process.env.NODE_ENV === 'production') return;\n        let el = ref.current;\n        if (!el || !(el instanceof (0, $hhDyF$getOwnerWindow)(el).Element)) {\n            console.error('<Pressable> child must forward its ref to a DOM element.');\n            return;\n        }\n        if (!(0, $hhDyF$isFocusable)(el)) {\n            console.warn('<Pressable> child must be focusable. Please ensure the tabIndex prop is passed through.');\n            return;\n        }\n        if (el.localName !== 'button' && el.localName !== 'input' && el.localName !== 'select' && el.localName !== 'textarea' && el.localName !== 'a' && el.localName !== 'area' && el.localName !== 'summary') {\n            let role = el.getAttribute('role');\n            if (!role) console.warn('<Pressable> child must have an interactive ARIA role.');\n            else if (// https://w3c.github.io/aria/#widget_roles\n            role !== 'application' && role !== 'button' && role !== 'checkbox' && role !== 'combobox' && role !== 'gridcell' && role !== 'link' && role !== 'menuitem' && role !== 'menuitemcheckbox' && role !== 'menuitemradio' && role !== 'option' && role !== 'radio' && role !== 'searchbox' && role !== 'separator' && role !== 'slider' && role !== 'spinbutton' && role !== 'switch' && role !== 'tab' && role !== 'textbox' && role !== 'treeitem') console.warn(`<Pressable> child must have an interactive ARIA role. Got \"${role}\".`);\n        }\n    }, [\n        ref\n    ]);\n    // @ts-ignore\n    let childRef = parseInt((0, $hhDyF$react).version, 10) < 19 ? child.ref : child.props.ref;\n    return /*#__PURE__*/ (0, $hhDyF$react).cloneElement(child, {\n        ...(0, $hhDyF$mergeProps)(pressProps, focusableProps, child.props),\n        // @ts-ignore\n        ref: (0, $hhDyF$mergeRefs)(childRef, ref)\n    });\n});\n\n\nexport {$3b117e43dc0ca95d$export$27c701ed9e449e99 as Pressable};\n//# sourceMappingURL=Pressable.module.js.map\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@react-aria/interactions/dist/useInteractOutside.main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891908073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var $9Icr4$reactariautils = require(\"@react-aria/utils\");\nvar $9Icr4$react = require(\"react\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"useInteractOutside\", () => $edcfa848c42f94f4$export$872b660ac5a1ff98);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\n\nfunction $edcfa848c42f94f4$export$872b660ac5a1ff98(props) {\n    let { ref: ref, onInteractOutside: onInteractOutside, isDisabled: isDisabled, onInteractOutsideStart: onInteractOutsideStart } = props;\n    let stateRef = (0, $9Icr4$react.useRef)({\n        isPointerDown: false,\n        ignoreEmulatedMouseEvents: false\n    });\n    let onPointerDown = (0, $9Icr4$reactariautils.useEffectEvent)((e)=>{\n        if (onInteractOutside && $edcfa848c42f94f4$var$isValidEvent(e, ref)) {\n            if (onInteractOutsideStart) onInteractOutsideStart(e);\n            stateRef.current.isPointerDown = true;\n        }\n    });\n    let triggerInteractOutside = (0, $9Icr4$reactariautils.useEffectEvent)((e)=>{\n        if (onInteractOutside) onInteractOutside(e);\n    });\n    (0, $9Icr4$react.useEffect)(()=>{\n        let state = stateRef.current;\n        if (isDisabled) return;\n        const element = ref.current;\n        const documentObject = (0, $9Icr4$reactariautils.getOwnerDocument)(element);\n        // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n        if (typeof PointerEvent !== 'undefined') {\n            let onPointerUp = (e)=>{\n                if (state.isPointerDown && $edcfa848c42f94f4$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n                state.isPointerDown = false;\n            };\n            // changing these to capture phase fixed combobox\n            documentObject.addEventListener('pointerdown', onPointerDown, true);\n            documentObject.addEventListener('pointerup', onPointerUp, true);\n            return ()=>{\n                documentObject.removeEventListener('pointerdown', onPointerDown, true);\n                documentObject.removeEventListener('pointerup', onPointerUp, true);\n            };\n        } else if (process.env.NODE_ENV === 'test') {\n            let onMouseUp = (e)=>{\n                if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;\n                else if (state.isPointerDown && $edcfa848c42f94f4$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n                state.isPointerDown = false;\n            };\n            let onTouchEnd = (e)=>{\n                state.ignoreEmulatedMouseEvents = true;\n                if (state.isPointerDown && $edcfa848c42f94f4$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n                state.isPointerDown = false;\n            };\n            documentObject.addEventListener('mousedown', onPointerDown, true);\n            documentObject.addEventListener('mouseup', onMouseUp, true);\n            documentObject.addEventListener('touchstart', onPointerDown, true);\n            documentObject.addEventListener('touchend', onTouchEnd, true);\n            return ()=>{\n                documentObject.removeEventListener('mousedown', onPointerDown, true);\n                documentObject.removeEventListener('mouseup', onMouseUp, true);\n                documentObject.removeEventListener('touchstart', onPointerDown, true);\n                documentObject.removeEventListener('touchend', onTouchEnd, true);\n            };\n        }\n    }, [\n        ref,\n        isDisabled,\n        onPointerDown,\n        triggerInteractOutside\n    ]);\n}\nfunction $edcfa848c42f94f4$var$isValidEvent(event, ref) {\n    if (event.button > 0) return false;\n    if (event.target) {\n        // if the event target is no longer in the document, ignore\n        const ownerDocument = event.target.ownerDocument;\n        if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;\n        // If the target is within a top layer element (e.g. toasts), ignore.\n        if (event.target.closest('[data-react-aria-top-layer]')) return false;\n    }\n    if (!ref.current) return false;\n    // When the event source is inside a Shadow DOM, event.target is just the shadow root.\n    // Using event.composedPath instead means we can get the actual element inside the shadow root.\n    // This only works if the shadow root is open, there is no way to detect if it is closed.\n    // If the event composed path contains the ref, interaction is inside.\n    return !event.composedPath().includes(ref.current);\n}\n\n\n//# sourceMappingURL=useInteractOutside.main.js.map\n"
        }
    ]
}
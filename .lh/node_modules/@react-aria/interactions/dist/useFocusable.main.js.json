{
    "sourceFile": "node_modules/@react-aria/interactions/dist/useFocusable.main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891907499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var $2833058fcd3993f5$exports = require(\"./focusSafely.main.js\");\nvar $5cb73d0ce355b0dc$exports = require(\"./useFocus.main.js\");\nvar $892d64db2a3c53b0$exports = require(\"./useKeyboard.main.js\");\nvar $cvQje$reactariautils = require(\"@react-aria/utils\");\nvar $cvQje$react = require(\"react\");\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"FocusableContext\", () => $15f8fd80892557ff$export$f9762fab77588ecb);\n$parcel$export(module.exports, \"FocusableProvider\", () => $15f8fd80892557ff$export$13f3202a3e5ddd5);\n$parcel$export(module.exports, \"useFocusable\", () => $15f8fd80892557ff$export$4c014de7c8940b4c);\n$parcel$export(module.exports, \"Focusable\", () => $15f8fd80892557ff$export$35a3bebf7ef2d934);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\n\nlet $15f8fd80892557ff$export$f9762fab77588ecb = /*#__PURE__*/ (0, ($parcel$interopDefault($cvQje$react))).createContext(null);\nfunction $15f8fd80892557ff$var$useFocusableContext(ref) {\n    let context = (0, $cvQje$react.useContext)($15f8fd80892557ff$export$f9762fab77588ecb) || {};\n    (0, $cvQje$reactariautils.useSyncRef)(context, ref);\n    // eslint-disable-next-line\n    let { ref: _, ...otherProps } = context;\n    return otherProps;\n}\nconst $15f8fd80892557ff$export$13f3202a3e5ddd5 = /*#__PURE__*/ (0, ($parcel$interopDefault($cvQje$react))).forwardRef(function FocusableProvider(props, ref) {\n    let { children: children, ...otherProps } = props;\n    let objRef = (0, $cvQje$reactariautils.useObjectRef)(ref);\n    let context = {\n        ...otherProps,\n        ref: objRef\n    };\n    return /*#__PURE__*/ (0, ($parcel$interopDefault($cvQje$react))).createElement($15f8fd80892557ff$export$f9762fab77588ecb.Provider, {\n        value: context\n    }, children);\n});\nfunction $15f8fd80892557ff$export$4c014de7c8940b4c(props, domRef) {\n    let { focusProps: focusProps } = (0, $5cb73d0ce355b0dc$exports.useFocus)(props);\n    let { keyboardProps: keyboardProps } = (0, $892d64db2a3c53b0$exports.useKeyboard)(props);\n    let interactions = (0, $cvQje$reactariautils.mergeProps)(focusProps, keyboardProps);\n    let domProps = $15f8fd80892557ff$var$useFocusableContext(domRef);\n    let interactionProps = props.isDisabled ? {} : domProps;\n    let autoFocusRef = (0, $cvQje$react.useRef)(props.autoFocus);\n    (0, $cvQje$react.useEffect)(()=>{\n        if (autoFocusRef.current && domRef.current) (0, $2833058fcd3993f5$exports.focusSafely)(domRef.current);\n        autoFocusRef.current = false;\n    }, [\n        domRef\n    ]);\n    // Always set a tabIndex so that Safari allows focusing native buttons and inputs.\n    let tabIndex = props.excludeFromTabOrder ? -1 : 0;\n    if (props.isDisabled) tabIndex = undefined;\n    return {\n        focusableProps: (0, $cvQje$reactariautils.mergeProps)({\n            ...interactions,\n            tabIndex: tabIndex\n        }, interactionProps)\n    };\n}\nconst $15f8fd80892557ff$export$35a3bebf7ef2d934 = /*#__PURE__*/ (0, $cvQje$react.forwardRef)(({ children: children, ...props }, ref)=>{\n    ref = (0, $cvQje$reactariautils.useObjectRef)(ref);\n    let { focusableProps: focusableProps } = $15f8fd80892557ff$export$4c014de7c8940b4c(props, ref);\n    let child = (0, ($parcel$interopDefault($cvQje$react))).Children.only(children);\n    (0, $cvQje$react.useEffect)(()=>{\n        if (process.env.NODE_ENV === 'production') return;\n        let el = ref.current;\n        if (!el || !(el instanceof (0, $cvQje$reactariautils.getOwnerWindow)(el).Element)) {\n            console.error('<Focusable> child must forward its ref to a DOM element.');\n            return;\n        }\n        if (!props.isDisabled && !(0, $cvQje$reactariautils.isFocusable)(el)) {\n            console.warn('<Focusable> child must be focusable. Please ensure the tabIndex prop is passed through.');\n            return;\n        }\n        if (el.localName !== 'button' && el.localName !== 'input' && el.localName !== 'select' && el.localName !== 'textarea' && el.localName !== 'a' && el.localName !== 'area' && el.localName !== 'summary' && el.localName !== 'img' && el.localName !== 'svg') {\n            let role = el.getAttribute('role');\n            if (!role) console.warn('<Focusable> child must have an interactive ARIA role.');\n            else if (// https://w3c.github.io/aria/#widget_roles\n            role !== 'application' && role !== 'button' && role !== 'checkbox' && role !== 'combobox' && role !== 'gridcell' && role !== 'link' && role !== 'menuitem' && role !== 'menuitemcheckbox' && role !== 'menuitemradio' && role !== 'option' && role !== 'radio' && role !== 'searchbox' && role !== 'separator' && role !== 'slider' && role !== 'spinbutton' && role !== 'switch' && role !== 'tab' && role !== 'tabpanel' && role !== 'textbox' && role !== 'treeitem' && // aria-describedby is also announced on these roles\n            role !== 'img' && role !== 'meter' && role !== 'progressbar') console.warn(`<Focusable> child must have an interactive ARIA role. Got \"${role}\".`);\n        }\n    }, [\n        ref,\n        props.isDisabled\n    ]);\n    // @ts-ignore\n    let childRef = parseInt((0, ($parcel$interopDefault($cvQje$react))).version, 10) < 19 ? child.ref : child.props.ref;\n    return /*#__PURE__*/ (0, ($parcel$interopDefault($cvQje$react))).cloneElement(child, {\n        ...(0, $cvQje$reactariautils.mergeProps)(focusableProps, child.props),\n        // @ts-ignore\n        ref: (0, $cvQje$reactariautils.mergeRefs)(childRef, ref)\n    });\n});\n\n\n//# sourceMappingURL=useFocusable.main.js.map\n"
        }
    ]
}
{
    "sourceFile": "node_modules/openid-client/types/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892952110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/// <reference types=\"node\" />\n// TypeScript Version: 3.6\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as http2 from 'http2';\n\nimport { URL } from 'url';\nimport * as jose from 'jose';\nimport * as crypto from 'crypto';\nimport { format } from 'util';\n\nexport type HttpOptions = Partial<\n  Pick<\n    https.RequestOptions,\n    | 'agent'\n    | 'ca'\n    | 'cert'\n    | 'crl'\n    | 'headers'\n    | 'key'\n    | 'lookup'\n    | 'passphrase'\n    | 'pfx'\n    | 'timeout'\n  >\n>;\nexport type RetryFunction = (retry: number, error: Error) => number;\nexport type CustomHttpOptionsProvider = (\n  url: URL,\n  options: Omit<https.RequestOptions, keyof URL>,\n) => HttpOptions;\nexport type TokenTypeHint = 'access_token' | 'refresh_token' | string;\nexport type DPoPInput = crypto.KeyObject | Parameters<typeof crypto.createPrivateKey>[0];\n\ninterface UnknownObject {\n  [key: string]: unknown;\n}\n\nexport const custom: {\n  setHttpOptionsDefaults(params: HttpOptions): undefined;\n  readonly http_options: unique symbol;\n  readonly clock_tolerance: unique symbol;\n};\n\nexport type ResponseType = 'code' | 'id_token' | 'code id_token' | 'none' | string;\nexport type ClientAuthMethod =\n  | 'client_secret_basic'\n  | 'client_secret_post'\n  | 'client_secret_jwt'\n  | 'private_key_jwt'\n  | 'tls_client_auth'\n  | 'self_signed_tls_client_auth'\n  | 'none';\n\nexport interface ClientMetadata {\n  // important\n  client_id: string;\n  id_token_signed_response_alg?: string;\n  token_endpoint_auth_method?: ClientAuthMethod;\n  client_secret?: string;\n  redirect_uris?: string[];\n  response_types?: ResponseType[];\n  post_logout_redirect_uris?: string[];\n  default_max_age?: number;\n  require_auth_time?: boolean;\n  tls_client_certificate_bound_access_tokens?: boolean;\n  request_object_signing_alg?: string;\n\n  // less important\n  id_token_encrypted_response_alg?: string;\n  id_token_encrypted_response_enc?: string;\n  introspection_endpoint_auth_method?: ClientAuthMethod;\n  introspection_endpoint_auth_signing_alg?: string;\n  request_object_encryption_alg?: string;\n  request_object_encryption_enc?: string;\n  revocation_endpoint_auth_method?: ClientAuthMethod;\n  revocation_endpoint_auth_signing_alg?: string;\n  token_endpoint_auth_signing_alg?: string;\n  userinfo_encrypted_response_alg?: string;\n  userinfo_encrypted_response_enc?: string;\n  userinfo_signed_response_alg?: string;\n  authorization_encrypted_response_alg?: string;\n  authorization_encrypted_response_enc?: string;\n  authorization_signed_response_alg?: string;\n\n  [key: string]: unknown;\n}\n\nexport interface ClaimsParameterMember {\n  essential?: boolean;\n  value?: string;\n  values?: string[];\n\n  [key: string]: unknown;\n}\n\nexport interface AuthorizationParameters {\n  acr_values?: string;\n  audience?: string;\n  claims?:\n    | string\n    | {\n        id_token?: {\n          [key: string]: null | ClaimsParameterMember;\n        };\n        userinfo?: {\n          [key: string]: null | ClaimsParameterMember;\n        };\n      };\n  claims_locales?: string;\n  client_id?: string;\n  code_challenge_method?: string;\n  code_challenge?: string;\n  display?: string;\n  id_token_hint?: string;\n  login_hint?: string;\n  max_age?: number;\n  nonce?: string;\n  prompt?: string;\n  redirect_uri?: string;\n  registration?: string;\n  request_uri?: string;\n  request?: string;\n  resource?: string | string[];\n  response_mode?: string;\n  response_type?: string;\n  scope?: string;\n  state?: string;\n  ui_locales?: string;\n\n  [key: string]: unknown;\n}\n\nexport interface EndSessionParameters {\n  id_token_hint?: TokenSet | string;\n  post_logout_redirect_uri?: string;\n  state?: string;\n  client_id?: string;\n  logout_hint?: string;\n\n  [key: string]: unknown;\n}\n\nexport interface CallbackParamsType {\n  access_token?: string;\n  code?: string;\n  error?: string;\n  error_description?: string;\n  error_uri?: string;\n  expires_in?: string;\n  id_token?: string;\n  state?: string;\n  token_type?: string;\n  session_state?: string;\n  response?: string;\n\n  [key: string]: unknown;\n}\n\nexport interface OAuthCallbackChecks {\n  response_type?: string;\n  state?: string;\n  code_verifier?: string;\n  jarm?: boolean;\n  scope?: string; // TODO: remove in v6.x\n}\n\nexport interface OpenIDCallbackChecks extends OAuthCallbackChecks {\n  max_age?: number;\n  nonce?: string;\n}\n\nexport interface CallbackExtras {\n  exchangeBody?: object;\n  clientAssertionPayload?: object;\n  DPoP?: DPoPInput;\n}\n\nexport interface RefreshExtras {\n  exchangeBody?: object;\n  clientAssertionPayload?: object;\n  DPoP?: DPoPInput;\n}\n\nexport interface GrantBody {\n  grant_type: string;\n\n  [key: string]: unknown;\n}\n\nexport interface GrantExtras {\n  clientAssertionPayload?: object;\n  DPoP?: DPoPInput;\n}\n\nexport interface IntrospectExtras {\n  introspectBody?: object;\n  clientAssertionPayload?: object;\n}\n\nexport interface RevokeExtras {\n  revokeBody?: object;\n  clientAssertionPayload?: object;\n}\n\nexport interface RequestObjectPayload extends AuthorizationParameters {\n  client_id?: string;\n  iss?: string;\n  aud?: string;\n  iat?: number;\n  exp?: number;\n  jti?: string;\n\n  [key: string]: unknown;\n}\n\nexport interface RegisterOther {\n  jwks?: { keys: jose.JWK[] };\n  initialAccessToken?: string;\n}\n\nexport interface DeviceAuthorizationParameters {\n  client_id?: string;\n  scope?: string;\n\n  [key: string]: unknown;\n}\n\nexport interface DeviceAuthorizationExtras {\n  exchangeBody?: object;\n  clientAssertionPayload?: object;\n  DPoP?: DPoPInput;\n}\n\nexport interface PushedAuthorizationRequestExtras {\n  clientAssertionPayload?: object;\n}\n\nexport type Address<ExtendedAddress extends {} = UnknownObject> = Override<\n  {\n    formatted?: string;\n    street_address?: string;\n    locality?: string;\n    region?: string;\n    postal_code?: string;\n    country?: string;\n  },\n  ExtendedAddress\n>;\n\nexport type UserinfoResponse<\n  UserInfo extends {} = UnknownObject,\n  ExtendedAddress extends {} = UnknownObject,\n> = Override<\n  {\n    sub: string;\n    name?: string;\n    given_name?: string;\n    family_name?: string;\n    middle_name?: string;\n    nickname?: string;\n    preferred_username?: string;\n    profile?: string;\n    picture?: string;\n    website?: string;\n    email?: string;\n    email_verified?: boolean;\n    gender?: string;\n    birthdate?: string;\n    zoneinfo?: string;\n    locale?: string;\n    phone_number?: string;\n    updated_at?: number;\n    address?: Address<ExtendedAddress>;\n  },\n  UserInfo\n>;\n\nexport interface IntrospectionResponse {\n  active: boolean;\n  client_id?: string;\n  exp?: number;\n  iat?: number;\n  sid?: string;\n  iss?: string;\n  jti?: string;\n  username?: string;\n  aud?: string | string[];\n  scope: string;\n  sub?: string;\n  nbf?: number;\n  token_type?: string;\n  cnf?: {\n    'x5t#S256'?: string;\n\n    [key: string]: unknown;\n  };\n\n  [key: string]: unknown;\n}\n\nexport interface ClientOptions {\n  additionalAuthorizedParties?: string | string[];\n}\n\nexport type Client = InstanceType<Issuer['Client']>;\ndeclare class BaseClient {\n  constructor(metadata: ClientMetadata, jwks?: { keys: jose.JWK[] }, options?: ClientOptions);\n  [custom.http_options]: CustomHttpOptionsProvider;\n  [custom.clock_tolerance]: number;\n  metadata: ClientMetadata;\n  issuer: Issuer<this>;\n  static issuer: Issuer<BaseClient>;\n\n  authorizationUrl(parameters?: AuthorizationParameters): string;\n  endSessionUrl(parameters?: EndSessionParameters): string;\n  callbackParams(\n    input: string | http.IncomingMessage | http2.Http2ServerRequest,\n  ): CallbackParamsType;\n  callback(\n    redirectUri: string | undefined,\n    parameters: CallbackParamsType,\n    checks?: OpenIDCallbackChecks,\n    extras?: CallbackExtras,\n  ): Promise<TokenSet>;\n  oauthCallback(\n    redirectUri: string | undefined,\n    parameters: CallbackParamsType,\n    checks?: OAuthCallbackChecks,\n    extras?: CallbackExtras,\n  ): Promise<TokenSet>;\n  refresh(refreshToken: TokenSet | string, extras?: RefreshExtras): Promise<TokenSet>;\n  userinfo<TUserInfo extends {} = UnknownObject, TAddress extends {} = UnknownObject>(\n    accessToken: TokenSet | string,\n    options?: {\n      method?: 'GET' | 'POST';\n      via?: 'header' | 'body';\n      tokenType?: string;\n      params?: object;\n      DPoP?: DPoPInput;\n    },\n  ): Promise<UserinfoResponse<TUserInfo, TAddress>>;\n  requestResource(\n    resourceUrl: string | URL,\n    accessToken: TokenSet | string,\n    options?: {\n      headers?: object;\n      body?: string | Buffer;\n      method?: 'GET' | 'POST' | 'PUT' | 'HEAD' | 'DELETE' | 'OPTIONS' | 'TRACE' | 'PATCH';\n      tokenType?: string;\n      DPoP?: DPoPInput;\n    },\n  ): Promise<{ body?: Buffer } & http.IncomingMessage>;\n  grant(body: GrantBody, extras?: GrantExtras): Promise<TokenSet>;\n  introspect(\n    token: string,\n    tokenTypeHint?: TokenTypeHint,\n    extras?: IntrospectExtras,\n  ): Promise<IntrospectionResponse>;\n  revoke(token: string, tokenTypeHint?: TokenTypeHint, extras?: RevokeExtras): Promise<undefined>;\n  requestObject(payload: RequestObjectPayload): Promise<string>;\n  deviceAuthorization(\n    parameters?: DeviceAuthorizationParameters,\n    extras?: DeviceAuthorizationExtras,\n  ): Promise<DeviceFlowHandle<BaseClient>>;\n  pushedAuthorizationRequest(\n    parameters?: AuthorizationParameters,\n    extras?: PushedAuthorizationRequestExtras,\n  ): Promise<{\n    request_uri: string;\n    expires_in: number;\n    [key: string]: unknown;\n  }>;\n  static register(metadata: object, other?: RegisterOther & ClientOptions): Promise<BaseClient>;\n  static fromUri(\n    registrationClientUri: string,\n    registrationAccessToken: string,\n    jwks?: { keys: jose.JWK[] },\n    clientOptions?: ClientOptions,\n  ): Promise<BaseClient>;\n  static [custom.http_options]: CustomHttpOptionsProvider;\n\n  [key: string]: unknown;\n}\n\ninterface DeviceFlowPollOptions {\n  // @ts-ignore\n  signal?: AbortSignal;\n}\n\nexport class DeviceFlowHandle<TClient extends BaseClient = BaseClient> {\n  poll(options?: DeviceFlowPollOptions): Promise<TokenSet>;\n  abort(): void;\n  expired(): boolean;\n  expires_at: number;\n  client: TClient;\n  user_code: string;\n  device_code: string;\n  verification_uri: string;\n  verification_uri_complete: string;\n  expires_in: number;\n}\n\nexport interface IssuerMetadata {\n  issuer: string;\n  authorization_endpoint?: string;\n  token_endpoint?: string;\n  jwks_uri?: string;\n  userinfo_endpoint?: string;\n  revocation_endpoint?: string;\n  end_session_endpoint?: string;\n  registration_endpoint?: string;\n  token_endpoint_auth_methods_supported?: string[];\n  token_endpoint_auth_signing_alg_values_supported?: string[];\n  introspection_endpoint_auth_methods_supported?: string[];\n  introspection_endpoint_auth_signing_alg_values_supported?: string[];\n  revocation_endpoint_auth_methods_supported?: string[];\n  revocation_endpoint_auth_signing_alg_values_supported?: string[];\n  request_object_signing_alg_values_supported?: string[];\n  mtls_endpoint_aliases?: MtlsEndpointAliases;\n\n  [key: string]: unknown;\n}\n\nexport interface MtlsEndpointAliases {\n  token_endpoint?: string;\n  userinfo_endpoint?: string;\n  revocation_endpoint?: string;\n  introspection_endpoint?: string;\n  device_authorization_endpoint?: string;\n}\n\nexport interface TypeOfGenericClient<TClient extends BaseClient = BaseClient> {\n  new (metadata: ClientMetadata, jwks?: { keys: jose.JWK[] }, options?: ClientOptions): TClient;\n  [custom.http_options]: CustomHttpOptionsProvider;\n  [custom.clock_tolerance]: number;\n}\n\nexport class Issuer<TClient extends BaseClient = BaseClient> {\n  constructor(metadata: IssuerMetadata);\n\n  Client: TypeOfGenericClient<TClient>;\n\n  FAPI1Client: TypeOfGenericClient<TClient>;\n  FAPI2Client: TypeOfGenericClient<TClient>;\n\n  metadata: IssuerMetadata;\n  [custom.http_options]: CustomHttpOptionsProvider;\n  static discover(issuer: string): Promise<Issuer<BaseClient>>;\n  static webfinger(input: string): Promise<Issuer<BaseClient>>;\n  static [custom.http_options]: CustomHttpOptionsProvider;\n  [key: string]: unknown;\n}\n\nexport interface TokenSetParameters {\n  access_token?: string;\n  token_type?: string;\n  id_token?: string;\n  refresh_token?: string;\n  scope?: string;\n\n  expires_at?: number;\n  session_state?: string;\n\n  [key: string]: unknown;\n}\n\nexport interface IdTokenClaims extends UserinfoResponse {\n  acr?: string;\n  amr?: string[];\n  at_hash?: string;\n  aud: string | string[];\n  auth_time?: number;\n  azp?: string;\n  c_hash?: string;\n  exp: number;\n  iat: number;\n  iss: string;\n  nonce?: string;\n  s_hash?: string;\n  sub: string;\n\n  [key: string]: unknown;\n}\n\nexport class TokenSet implements TokenSetParameters {\n  access_token?: string;\n  token_type?: string;\n  id_token?: string;\n  refresh_token?: string;\n  expires_in?: number;\n  expires_at?: number;\n  session_state?: string;\n  scope?: string;\n\n  constructor(input?: TokenSetParameters);\n\n  expired(): boolean;\n  claims(): IdTokenClaims;\n\n  [key: string]: unknown;\n}\n\nexport type StrategyVerifyCallbackUserInfo<\n  TUser,\n  TUserInfo extends {} = UnknownObject,\n  TAddress extends {} = UnknownObject,\n> = (\n  tokenset: TokenSet,\n  userinfo: UserinfoResponse<TUserInfo, TAddress>,\n  done: (err: any, user?: TUser) => void,\n) => void;\nexport type StrategyVerifyCallback<TUser> = (\n  tokenset: TokenSet,\n  done: (err: any, user?: TUser) => void,\n) => void;\nexport type StrategyVerifyCallbackReqUserInfo<\n  TUser,\n  TUserInfo extends {} = UnknownObject,\n  TAddress extends {} = UnknownObject,\n> = (\n  req: http.IncomingMessage,\n  tokenset: TokenSet,\n  userinfo: UserinfoResponse<TUserInfo, TAddress>,\n  done: (err: any, user?: TUser) => void,\n) => void;\nexport type StrategyVerifyCallbackReq<TUser> = (\n  req: http.IncomingMessage,\n  tokenset: TokenSet,\n  done: (err: any, user?: TUser) => void,\n) => void;\n\nexport interface StrategyOptions<TClient extends BaseClient = BaseClient> {\n  client: TClient;\n  params?: AuthorizationParameters;\n  extras?: CallbackExtras;\n  passReqToCallback?: boolean;\n  usePKCE?: boolean | string;\n  sessionKey?: string;\n}\n\nexport class Strategy<TUser, TClient extends BaseClient = BaseClient> {\n  constructor(\n    options: StrategyOptions<TClient>,\n    verify:\n      | StrategyVerifyCallback<TUser>\n      | StrategyVerifyCallbackUserInfo<TUser>\n      | StrategyVerifyCallbackReq<TUser>\n      | StrategyVerifyCallbackReqUserInfo<TUser>,\n  );\n\n  authenticate(req: any, options?: any): void;\n  success(user: any, info?: any): void;\n  fail(challenge: any, status: number): void;\n  fail(status: number): void;\n  redirect(url: string, status?: number): void;\n  pass(): void;\n  error(err: Error): void;\n}\n\nexport namespace generators {\n  function random(bytes?: number): string;\n  function state(bytes?: number): string;\n  function nonce(bytes?: number): string;\n  function codeVerifier(bytes?: number): string;\n  function codeChallenge(verifier: string): string;\n}\n\nexport namespace errors {\n  class OPError extends Error {\n    error_description?: string;\n    error?: string;\n    error_uri?: string;\n    state?: string;\n    scope?: string;\n    session_state?: string;\n    response?: { body?: UnknownObject | Buffer } & http.IncomingMessage;\n\n    constructor(\n      params: {\n        error: string;\n        error_description?: string;\n        error_uri?: string;\n        state?: string;\n        scope?: string;\n        session_state?: string;\n      },\n      response?: { body?: UnknownObject | Buffer } & http.IncomingMessage,\n    );\n  }\n\n  class RPError extends Error {\n    jwt?: string;\n    checks?: object;\n    params?: object;\n    body?: object;\n    response?: { body?: UnknownObject | Buffer } & http.IncomingMessage;\n    now?: number;\n    tolerance?: number;\n    nbf?: number;\n    exp?: number;\n    iat?: number;\n    auth_time?: number;\n\n    constructor(...args: Parameters<typeof format>);\n    constructor(options: {\n      message?: string;\n      printf?: Parameters<typeof format>;\n      response?: { body?: UnknownObject | Buffer } & http.IncomingMessage;\n      [key: string]: unknown;\n    });\n  }\n}\n\ntype KnownKeys<T> = {\n  [K in keyof T]: string extends K ? never : number extends K ? never : K;\n} extends { [_ in keyof T]: infer U }\n  ? {} extends U\n    ? never\n    : U\n  : never;\ntype Override<T1, T2> = Omit<T1, keyof Omit<T2, keyof KnownKeys<T2>>> & T2;\n"
        }
    ]
}
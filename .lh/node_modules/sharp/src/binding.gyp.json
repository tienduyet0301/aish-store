{
    "sourceFile": "node_modules/sharp/src/binding.gyp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893029046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# Copyright 2013 Lovell Fuller and others.\n# SPDX-License-Identifier: Apache-2.0\n\n{\n  'variables': {\n    'vips_version': '<!(node -p \"require(\\'../lib/libvips\\').minimumLibvipsVersion\")',\n    'platform_and_arch': '<!(node -p \"require(\\'../lib/libvips\\').buildPlatformArch()\")',\n    'sharp_libvips_version': '<!(node -p \"require(\\'../package.json\\').optionalDependencies[\\'@img/sharp-libvips-<(platform_and_arch)\\']\")',\n    'sharp_libvips_yarn_locator': '<!(node -p \"require(\\'../lib/libvips\\').yarnLocator()\")',\n    'sharp_libvips_include_dir': '<!(node -p \"require(\\'../lib/libvips\\').buildSharpLibvipsIncludeDir()\")',\n    'sharp_libvips_cplusplus_dir': '<!(node -p \"require(\\'../lib/libvips\\').buildSharpLibvipsCPlusPlusDir()\")',\n    'sharp_libvips_lib_dir': '<!(node -p \"require(\\'../lib/libvips\\').buildSharpLibvipsLibDir()\")'\n  },\n  'targets': [{\n    'target_name': 'libvips-cpp-<(vips_version)',\n    'conditions': [\n      ['OS == \"win\"', {\n        # Build libvips C++ binding for Windows due to MSVC std library ABI changes\n        'type': 'shared_library',\n        'defines': [\n          '_VIPS_PUBLIC=__declspec(dllexport)',\n          '_ALLOW_KEYWORD_MACROS',\n          'G_DISABLE_ASSERT',\n          'G_DISABLE_CAST_CHECKS',\n          'G_DISABLE_CHECKS'\n        ],\n        'sources': [\n          '<(sharp_libvips_cplusplus_dir)/VConnection.cpp',\n          '<(sharp_libvips_cplusplus_dir)/VError.cpp',\n          '<(sharp_libvips_cplusplus_dir)/VImage.cpp',\n          '<(sharp_libvips_cplusplus_dir)/VInterpolate.cpp',\n          '<(sharp_libvips_cplusplus_dir)/VRegion.cpp'\n        ],\n        'include_dirs': [\n          '<(sharp_libvips_include_dir)',\n          '<(sharp_libvips_include_dir)/glib-2.0',\n          '<(sharp_libvips_lib_dir)/glib-2.0/include'\n        ],\n        'link_settings': {\n          'library_dirs': [\n            '<(sharp_libvips_lib_dir)'\n          ],\n          'libraries': [\n            'libvips.lib'\n          ],\n        },\n        'configurations': {\n          'Release': {\n            'msvs_settings': {\n              'VCCLCompilerTool': {\n                \"AdditionalOptions\": [\n                  \"/std:c++17\"\n                ],\n                'ExceptionHandling': 1,\n                'Optimization': 1,\n                'WholeProgramOptimization': 'true'\n              },\n              'VCLibrarianTool': {\n                'AdditionalOptions': [\n                  '/LTCG:INCREMENTAL'\n                ]\n              },\n              'VCLinkerTool': {\n                'ImageHasSafeExceptionHandlers': 'false',\n                'OptimizeReferences': 2,\n                'EnableCOMDATFolding': 2,\n                'LinkIncremental': 1,\n                'AdditionalOptions': [\n                  '/LTCG:INCREMENTAL'\n                ]\n              }\n            },\n            'msvs_disabled_warnings': [\n              4275\n            ]\n          }\n        }\n      }, {\n        # Ignore this target for non-Windows\n        'type': 'none'\n      }]\n    ]\n  }, {\n    'target_name': 'sharp-<(platform_and_arch)',\n    'defines': [\n      'G_DISABLE_ASSERT',\n      'G_DISABLE_CAST_CHECKS',\n      'G_DISABLE_CHECKS',\n      'NAPI_VERSION=9',\n      'NODE_ADDON_API_DISABLE_DEPRECATED',\n      'NODE_API_SWALLOW_UNTHROWABLE_EXCEPTIONS'\n    ],\n    'dependencies': [\n      '<!(node -p \"require(\\'node-addon-api\\').gyp\")',\n      'libvips-cpp-<(vips_version)'\n    ],\n    'variables': {\n      'conditions': [\n        ['OS != \"win\"', {\n          'pkg_config_path': '<!(node -p \"require(\\'../lib/libvips\\').pkgConfigPath()\")',\n          'use_global_libvips': '<!(node -p \"Boolean(require(\\'../lib/libvips\\').useGlobalLibvips()).toString()\")'\n        }, {\n          'pkg_config_path': '',\n          'use_global_libvips': ''\n        }]\n      ]\n    },\n    'sources': [\n      'common.cc',\n      'metadata.cc',\n      'stats.cc',\n      'operations.cc',\n      'pipeline.cc',\n      'utilities.cc',\n      'sharp.cc'\n    ],\n    'include_dirs': [\n      '<!(node -p \"require(\\'node-addon-api\\').include_dir\")',\n    ],\n    'conditions': [\n      ['use_global_libvips == \"true\"', {\n        # Use pkg-config for include and lib\n        'include_dirs': ['<!@(PKG_CONFIG_PATH=\"<(pkg_config_path)\" pkg-config --cflags-only-I vips-cpp vips glib-2.0 | sed s\\/-I//g)'],\n        'libraries': ['<!@(PKG_CONFIG_PATH=\"<(pkg_config_path)\" pkg-config --libs vips-cpp)'],\n        'defines': [\n          'SHARP_USE_GLOBAL_LIBVIPS'\n        ],\n        'conditions': [\n          ['OS == \"linux\"', {\n            'defines': [\n              # Inspect libvips-cpp.so to determine which C++11 ABI version was used and set _GLIBCXX_USE_CXX11_ABI accordingly. This is quite horrible.\n              '_GLIBCXX_USE_CXX11_ABI=<!(if readelf -Ws \"$(PKG_CONFIG_PATH=\"<(pkg_config_path)\" pkg-config --variable libdir vips-cpp)/libvips-cpp.so\" | c++filt | grep -qF __cxx11;then echo \"1\";else echo \"0\";fi)'\n            ]\n          }]\n        ]\n      }, {\n        # Use pre-built libvips stored locally within node_modules\n        'include_dirs': [\n          '<(sharp_libvips_include_dir)',\n          '<(sharp_libvips_include_dir)/glib-2.0',\n          '<(sharp_libvips_lib_dir)/glib-2.0/include'\n        ],\n        'library_dirs': [\n          '<(sharp_libvips_lib_dir)'\n        ],\n        'conditions': [\n          ['OS == \"win\"', {\n            'defines': [\n              '_ALLOW_KEYWORD_MACROS',\n              '_FILE_OFFSET_BITS=64'\n            ],\n            'link_settings': {\n              'libraries': [\n                'libvips.lib'\n              ]\n            }\n          }],\n          ['OS == \"mac\"', {\n            'link_settings': {\n              'libraries': [\n                'libvips-cpp.<(vips_version).dylib'\n              ]\n            },\n            'xcode_settings': {\n              'OTHER_LDFLAGS': [\n                # Ensure runtime linking is relative to sharp.node\n                '-Wl,-rpath,\\'@loader_path/../../sharp-libvips-<(platform_and_arch)/lib\\'',\n                '-Wl,-rpath,\\'@loader_path/../../../sharp-libvips-<(platform_and_arch)/<(sharp_libvips_version)/lib\\'',\n                '-Wl,-rpath,\\'@loader_path/../../node_modules/@img/sharp-libvips-<(platform_and_arch)/lib\\'',\n                '-Wl,-rpath,\\'@loader_path/../../../node_modules/@img/sharp-libvips-<(platform_and_arch)/lib\\'',\n                '-Wl,-rpath,\\'@loader_path/../../../../../@img-sharp-libvips-<(platform_and_arch)-npm-<(sharp_libvips_version)-<(sharp_libvips_yarn_locator)/node_modules/@img/sharp-libvips-<(platform_and_arch)/lib\\''\n              ]\n            }\n          }],\n          ['OS == \"linux\"', {\n            'defines': [\n              '_GLIBCXX_USE_CXX11_ABI=1'\n            ],\n            'link_settings': {\n              'libraries': [\n                '-l:libvips-cpp.so.<(vips_version)'\n              ],\n              'ldflags': [\n                '-lstdc++fs',\n                '-Wl,-s',\n                '-Wl,--disable-new-dtags',\n                '-Wl,-z,nodelete',\n                '-Wl,-Bsymbolic-functions',\n                '-Wl,-rpath=\\'$$ORIGIN/../../sharp-libvips-<(platform_and_arch)/lib\\'',\n                '-Wl,-rpath=\\'$$ORIGIN/../../../sharp-libvips-<(platform_and_arch)/<(sharp_libvips_version)/lib\\'',\n                '-Wl,-rpath=\\'$$ORIGIN/../../node_modules/@img/sharp-libvips-<(platform_and_arch)/lib\\'',\n                '-Wl,-rpath=\\'$$ORIGIN/../../../node_modules/@img/sharp-libvips-<(platform_and_arch)/lib\\'',\n                '-Wl,-rpath,\\'$$ORIGIN/../../../../../@img-sharp-libvips-<(platform_and_arch)-npm-<(sharp_libvips_version)-<(sharp_libvips_yarn_locator)/node_modules/@img/sharp-libvips-<(platform_and_arch)/lib\\''\n              ]\n            }\n          }],\n          ['OS == \"emscripten\"', {\n            'product_extension': 'node.js',\n            'link_settings': {\n              'ldflags': [\n                '-fexceptions',\n                '--pre-js=<!(node -p \"require.resolve(\\'./emscripten/pre.js\\')\")',\n                '-Oz',\n                '-sALLOW_MEMORY_GROWTH',\n                '-sENVIRONMENT=node',\n                '-sEXPORTED_FUNCTIONS=[\"emnapiInit\", \"_vips_shutdown\", \"_uv_library_shutdown\"]',\n                '-sNODERAWFS',\n                '-sTEXTDECODER=0',\n                '-sWASM_ASYNC_COMPILATION=0',\n                '-sWASM_BIGINT'\n              ],\n              'libraries': [\n                '<!@(PKG_CONFIG_PATH=\"<!(node -p \"require(\\'@img/sharp-libvips-dev-wasm32/lib\\')\")/pkgconfig\" pkg-config --static --libs vips-cpp)'\n              ],\n            }\n          }]\n        ]\n      }]\n    ],\n    'cflags_cc': [\n      '-std=c++17',\n      '-fexceptions',\n      '-Wall',\n      '-Os'\n    ],\n    'xcode_settings': {\n      'CLANG_CXX_LANGUAGE_STANDARD': 'c++17',\n      'MACOSX_DEPLOYMENT_TARGET': '10.15',\n      'GCC_ENABLE_CPP_EXCEPTIONS': 'YES',\n      'GCC_ENABLE_CPP_RTTI': 'YES',\n      'OTHER_CPLUSPLUSFLAGS': [\n        '-fexceptions',\n        '-Wall',\n        '-Oz'\n      ]\n    },\n    'configurations': {\n      'Release': {\n        'conditions': [\n          ['target_arch == \"arm\"', {\n            'cflags_cc': [\n              '-Wno-psabi'\n            ]\n          }],\n          ['OS == \"win\"', {\n            'msvs_settings': {\n              'VCCLCompilerTool': {\n                \"AdditionalOptions\": [\n                  \"/std:c++17\"\n                ],\n                'ExceptionHandling': 1,\n                'Optimization': 1,\n                'WholeProgramOptimization': 'true'\n              },\n              'VCLibrarianTool': {\n                'AdditionalOptions': [\n                  '/LTCG:INCREMENTAL'\n                ]\n              },\n              'VCLinkerTool': {\n                'ImageHasSafeExceptionHandlers': 'false',\n                'OptimizeReferences': 2,\n                'EnableCOMDATFolding': 2,\n                'LinkIncremental': 1,\n                'AdditionalOptions': [\n                  '/LTCG:INCREMENTAL'\n                ]\n              }\n            },\n            'msvs_disabled_warnings': [\n              4275\n            ]\n          }]\n        ]\n      }\n    },\n  }, {\n    'target_name': 'copy-dll',\n    'type': 'none',\n    'dependencies': [\n      'sharp-<(platform_and_arch)'\n    ],\n    'conditions': [\n      ['OS == \"win\"', {\n        'copies': [{\n          'destination': 'build/Release',\n          'files': [\n            '<(sharp_libvips_lib_dir)/libvips-42.dll'\n          ]\n        }]\n      }]\n    ]\n  }]\n}\n"
        }
    ]
}
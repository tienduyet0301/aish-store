{
    "sourceFile": "node_modules/fast-glob/out/managers/tasks.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892288419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import Settings from '../settings';\nimport { Pattern, PatternsGroup } from '../types';\nexport type Task = {\n    base: string;\n    dynamic: boolean;\n    patterns: Pattern[];\n    positive: Pattern[];\n    negative: Pattern[];\n};\nexport declare function generate(input: Pattern[], settings: Settings): Task[];\n/**\n * Returns tasks grouped by basic pattern directories.\n *\n * Patterns that can be found inside (`./`) and outside (`../`) the current directory are handled separately.\n * This is necessary because directory traversal starts at the base directory and goes deeper.\n */\nexport declare function convertPatternsToTasks(positive: Pattern[], negative: Pattern[], dynamic: boolean): Task[];\nexport declare function getPositivePatterns(patterns: Pattern[]): Pattern[];\nexport declare function getNegativePatternsAsPositive(patterns: Pattern[], ignore: Pattern[]): Pattern[];\nexport declare function groupPatternsByBaseDirectory(patterns: Pattern[]): PatternsGroup;\nexport declare function convertPatternGroupsToTasks(positive: PatternsGroup, negative: Pattern[], dynamic: boolean): Task[];\nexport declare function convertPatternGroupToTask(base: string, positive: Pattern[], negative: Pattern[], dynamic: boolean): Task;\n"
        }
    ]
}
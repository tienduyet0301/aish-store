{
    "sourceFile": "node_modules/formidable/src/parsers/Querystring.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892298817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/* eslint-disable no-underscore-dangle */\n\nimport { Transform } from 'node:stream';\n\n// This is a buffering parser, have a look at StreamingQuerystring.js for a streaming parser\nclass QuerystringParser extends Transform {\n  constructor(options = {}) {\n    super({ readableObjectMode: true });\n    this.globalOptions = { ...options };\n    this.buffer = '';\n    this.bufferLength = 0;\n  }\n\n  _transform(buffer, encoding, callback) {\n    this.buffer += buffer.toString('ascii');\n    this.bufferLength = this.buffer.length;\n    callback();\n  }\n\n  _flush(callback) {\n    const fields = new URLSearchParams(this.buffer);\n    for (const [key, value] of fields) {\n      this.push({\n        key,\n        value,\n      });\n    }\n    this.buffer = '';\n    callback();\n  }\n}\n\nexport default QuerystringParser;\n"
        }
    ]
}
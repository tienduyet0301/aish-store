{
    "sourceFile": "node_modules/jsx-ast-utils/__tests__/src/propName-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892382418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/* eslint-env mocha */\nimport assert from 'assert';\nimport { extractProp, setParserName } from '../helper';\nimport propName from '../../src/propName';\n\ndescribe('propName', () => {\n  beforeEach(() => {\n    setParserName('babel');\n  });\n  it('should export a function', () => {\n    const expected = 'function';\n    const actual = typeof propName;\n\n    assert.equal(actual, expected);\n  });\n\n  it('should throw an error if the argument is missing', () => {\n    assert.throws(() => { propName(); }, Error);\n  });\n\n  it('should throw an error if the argument not a JSX node', () => {\n    assert.throws(() => { propName({ a: 'foo' }); }, Error);\n  });\n\n  it('should return correct name for normal prop', () => {\n    const prop = extractProp('<div foo=\"bar\" />');\n\n    const expected = 'foo';\n    const actual = propName(prop);\n\n    assert.equal(actual, expected);\n  });\n\n  it('should return correct name for namespaced prop', () => {\n    const prop = extractProp('<div foo:bar=\"baz\" />', 'foo:bar');\n\n    const expected = 'foo:bar';\n    const actual = propName(prop);\n\n    assert.equal(actual, expected);\n  });\n});\n"
        }
    ]
}
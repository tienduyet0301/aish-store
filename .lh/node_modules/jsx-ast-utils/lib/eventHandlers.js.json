{
    "sourceFile": "node_modules/jsx-ast-utils/lib/eventHandlers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892377116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.eventHandlersByType = undefined;\n\nvar _arrayPrototype = require('array.prototype.flat');\n\nvar _arrayPrototype2 = _interopRequireDefault(_arrayPrototype);\n\nvar _object = require('object.values');\n\nvar _object2 = _interopRequireDefault(_object);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Common event handlers for JSX element event binding.\n */\n\nvar eventHandlersByType = {\n  clipboard: ['onCopy', 'onCut', 'onPaste'],\n  composition: ['onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate'],\n  keyboard: ['onKeyDown', 'onKeyPress', 'onKeyUp'],\n  focus: ['onFocus', 'onBlur'],\n  form: ['onChange', 'onInput', 'onSubmit'],\n  mouse: ['onClick', 'onContextMenu', 'onDblClick', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp'],\n  selection: ['onSelect'],\n  touch: ['onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'],\n  ui: ['onScroll'],\n  wheel: ['onWheel'],\n  media: ['onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting'],\n  image: ['onLoad', 'onError'],\n  animation: ['onAnimationStart', 'onAnimationEnd', 'onAnimationIteration'],\n  transition: ['onTransitionEnd']\n};\n\nexports.default = (0, _arrayPrototype2.default)((0, _object2.default)(eventHandlersByType));\nexports.eventHandlersByType = eventHandlersByType;"
        }
    ]
}
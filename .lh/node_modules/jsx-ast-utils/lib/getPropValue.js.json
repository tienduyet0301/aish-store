{
    "sourceFile": "node_modules/jsx-ast-utils/lib/getPropValue.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892377199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getPropValue;\nexports.getLiteralPropValue = getLiteralPropValue;\n\nvar _values = require('./values');\n\nvar _values2 = _interopRequireDefault(_values);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar extractValue = function extractValue(attribute, extractor) {\n  if (attribute && attribute.type === 'JSXAttribute') {\n    if (attribute.value === null) {\n      // Null valued attributes imply truthiness.\n      // For example: <div aria-hidden />\n      // See: https://facebook.github.io/react/docs/jsx-in-depth.html#boolean-attributes\n      return true;\n    }\n\n    return extractor(attribute.value);\n  }\n\n  return undefined;\n};\n\n/**\n * Returns the value of a given attribute.\n * Different types of attributes have their associated\n * values in different properties on the object.\n *\n * This function should return the most *closely* associated\n * value with the intention of the JSX.\n *\n * @param attribute - The JSXAttribute collected by AST parser.\n */\nfunction getPropValue(attribute) {\n  return extractValue(attribute, _values2.default);\n}\n\n/**\n * Returns the value of a given attribute.\n * Different types of attributes have their associated\n * values in different properties on the object.\n *\n * This function should return a value only if we can extract\n * a literal value from its attribute (i.e. values that have generic\n * types in JavaScript - strings, numbers, booleans, etc.)\n *\n * @param attribute - The JSXAttribute collected by AST parser.\n */\nfunction getLiteralPropValue(attribute) {\n  return extractValue(attribute, _values.getLiteralValue);\n}"
        }
    ]
}
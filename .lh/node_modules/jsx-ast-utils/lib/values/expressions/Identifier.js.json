{
    "sourceFile": "node_modules/jsx-ast-utils/lib/values/expressions/Identifier.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892377849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromIdentifier;\nvar JS_RESERVED = {\n  Array: Array,\n  Date: Date,\n  Infinity: Infinity,\n  Math: Math,\n  Number: Number,\n  Object: Object,\n  String: String,\n  undefined: undefined\n};\n\n/**\n * Extractor function for a Identifier type value node.\n * An Identifier is usually a reference to a variable.\n * Just return variable name to determine its existence.\n *\n * @param - value - AST Value object with type `Identifier`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromIdentifier(value) {\n  var name = value.name;\n\n\n  if (Object.hasOwnProperty.call(JS_RESERVED, name)) {\n    return JS_RESERVED[name];\n  }\n\n  return name;\n}"
        }
    ]
}
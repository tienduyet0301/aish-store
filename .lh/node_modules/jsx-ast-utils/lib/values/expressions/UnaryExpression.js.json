{
    "sourceFile": "node_modules/jsx-ast-utils/lib/values/expressions/UnaryExpression.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892379189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromUnaryExpression;\n/**\n * Extractor function for a UnaryExpression type value node.\n * A unary expression is an expression with a unary operator.\n * For example, !\"foobar\" will evaluate to false, so this will return false.\n *\n * @param - value - AST Value object with type `UnaryExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromUnaryExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n      argument = value.argument;\n\n\n  switch (operator) {\n    case '-':\n      return -getValue(argument);\n    case '+':\n      return +getValue(argument); // eslint-disable-line no-implicit-coercion\n    case '!':\n      return !getValue(argument);\n    case '~':\n      return ~getValue(argument); // eslint-disable-line no-bitwise\n    case 'delete':\n      // I believe delete statements evaluate to true.\n      return true;\n    case 'typeof':\n    case 'void':\n    default:\n      return undefined;\n  }\n}"
        }
    ]
}
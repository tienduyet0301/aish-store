{
    "sourceFile": "node_modules/jsx-ast-utils/src/elementType.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892379897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "function resolveMemberExpressions(object = {}, property = {}) {\n  if (object.type === 'JSXMemberExpression') {\n    return `${resolveMemberExpressions(object.object, object.property)}.${property.name}`;\n  }\n\n  return `${object.name}.${property.name}`;\n}\n\n/**\n * Returns the tagName associated with a JSXElement.\n */\nexport default function elementType(node = {}) {\n  const { name } = node;\n\n  if (node.type === 'JSXOpeningFragment') {\n    return '<>';\n  }\n\n  if (!name) {\n    throw new Error('The argument provided is not a JSXElement node.');\n  }\n\n  if (name.type === 'JSXMemberExpression') {\n    const { object = {}, property = {} } = name;\n    return resolveMemberExpressions(object, property);\n  }\n\n  if (name.type === 'JSXNamespacedName') {\n    return `${name.namespace.name}:${name.name.name}`;\n  }\n\n  return node.name.name;\n}\n"
        }
    ]
}
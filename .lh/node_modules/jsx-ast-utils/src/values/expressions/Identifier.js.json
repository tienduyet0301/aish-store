{
    "sourceFile": "node_modules/jsx-ast-utils/src/values/expressions/Identifier.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892380932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "const JS_RESERVED = {\n  Array,\n  Date,\n  Infinity,\n  Math,\n  Number,\n  Object,\n  String,\n  undefined,\n};\n\n/**\n * Extractor function for a Identifier type value node.\n * An Identifier is usually a reference to a variable.\n * Just return variable name to determine its existence.\n *\n * @param - value - AST Value object with type `Identifier`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromIdentifier(value) {\n  const { name } = value;\n\n  if (Object.hasOwnProperty.call(JS_RESERVED, name)) {\n    return JS_RESERVED[name];\n  }\n\n  return name;\n}\n"
        }
    ]
}
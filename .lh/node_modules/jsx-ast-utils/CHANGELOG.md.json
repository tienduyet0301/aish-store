{
    "sourceFile": "node_modules/jsx-ast-utils/CHANGELOG.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892376721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v3.3.5](https://github.com/jsx-eslint/jsx-ast-utils/compare/v3.3.4...v3.3.5) - 2023-07-28\n\n### Fixed\n\n- [Fix] `extractProp`: support `JSXFragment` [`#132`](https://github.com/jsx-eslint/jsx-ast-utils/issues/132)\n\n### Commits\n\n- [Dev Deps] update `@babel/core`, `@babel/eslint-parser`, `@babel/parser`, `eslint` [`e5555d1`](https://github.com/jsx-eslint/jsx-ast-utils/commit/e5555d152dbe1e85324139756f637e65fe047976)\n- [Tests] fix a test [`bde3ba9`](https://github.com/jsx-eslint/jsx-ast-utils/commit/bde3ba9c9dc294d5472eefa0b3f31ab0e1aed739)\n\n## [v3.3.4](https://github.com/jsx-eslint/jsx-ast-utils/compare/v3.3.3...v3.3.4) - 2023-06-28\n\n### Commits\n\n- [Refactor] use `array.prototype.flat` `object.values` over `.reduce` [`bad51d0`](https://github.com/jsx-eslint/jsx-ast-utils/commit/bad51d062000ffdc19d925723a6515458318cf92)\n- [meta] add `auto-changelog` [`af1de69`](https://github.com/jsx-eslint/jsx-ast-utils/commit/af1de693d1005144c13a75573631a670fa44547e)\n- [Tests] add test for `import.meta` [`1d39f58`](https://github.com/jsx-eslint/jsx-ast-utils/commit/1d39f58c7bc6a89aa936e666b76e355c9436e854)\n- [Dev Deps] update `@babel/core`, `@babel/eslint-parser`, `@babel/parser`, `aud`, `eslint`, `eslint-plugin-import` [`3baaf76`](https://github.com/jsx-eslint/jsx-ast-utils/commit/3baaf76c9c48ae85687ed23a3b9894c45927e081)\n- [Fix] `TSNonNullExpression`: Handle function calls [`26cc3c4`](https://github.com/jsx-eslint/jsx-ast-utils/commit/26cc3c48165518b9fcdc9c625d918accc3e00107)\n- [Dev Deps] update `eslint`, `@babel/core`, `@babel/parser`, `object.entries`, `object.fromentries` [`0e4f80c`](https://github.com/jsx-eslint/jsx-ast-utils/commit/0e4f80c2129c5b5ee50e4df2f25c5fb6728cbe8e)\n- [Dev Deps] update `@babel/core`, `@babel/eslint-parser`, `@babel/parser`, `aud` [`b5427a6`](https://github.com/jsx-eslint/jsx-ast-utils/commit/b5427a65fac33e2264461b072b3edb078242dc85)\n- [meta] run build in prepack, not prepublish [`a0f4f38`](https://github.com/jsx-eslint/jsx-ast-utils/commit/a0f4f383ddf82cd2914c7e594f356d9a78c80570)\n- [Deps] update `array-includes` [`c479841`](https://github.com/jsx-eslint/jsx-ast-utils/commit/c479841d0b65188a3223541e885fa6286756a2c6)\n- [Deps] update `object.assign` [`9685dce`](https://github.com/jsx-eslint/jsx-ast-utils/commit/9685dce823d71ac06fccd61d8aa8e13ba3d42f38)\n\n<!-- auto-changelog-above -->\n\n3.3.3 / 2022-08-08\n==================\n- [Fix] Mark ChainExpression as a noop (#109)\n- [Deps] update `object.assign`\n- [Dev Deps] update `@babel/core`, `@babel/eslint-parser`, `@babel/parser`, `eslint`\n\n3.3.2 / 2022-07-06\n==================\n- [Fix] Handle `as` casts in TSNonNullExpression\n\n3.3.1 / 2022-06-22\n==================\n- [Fix] `ArrayExpression`: handle sparse array (#117)\n- [Deps] update `array-includes`\n- [meta] move jest config to separate file\n- [meta] use `npmignore` to autogenerate an npmignore file\n- [Dev Deps] update `@babel/core`, `@babel/eslint-parser`, `@babel/parser`, `eslint`\n\n3.3.0 / 2022-04-30\n==================\n- [New] add `JSXFragment`, `JSXText`; fix `JSXElement` to handle children\n- [Dev Deps] update `@babel/core`, `@babel/parser`, `eslint`, `eslint-plugin-import`\n\n3.2.2 / 2022-03-31\n==================\n- [Fix] `TSNonNullExpression`: handle computed MemberExpressions (#109)\n- [Fix] avoid a crash in ChainExpressions in a TSAsExpression\n\n3.2.1 / 2021-09-16\n==================\n- [patch] include project name in error logging (#113)\n- [readme] update badges, URLs\n- [Deps] update `array-includes`\n- [meta] donâ€˜t lint coverage results\n- [meta] add GitHub org to FUNDING.yml\n- [meta] add OpenCollective to FUNDING.yml\n- [meta] run `aud` in `posttest`\n- [meta] add Automatic Rebase and Require Allow Edits workflows\n- [actions] use `node/install` instead of `node/run`; use `codecov` action\n- [Tests] unpin `caniuse-lite`, since breaking change is fixed\n- [Tests] pin `caniuse-lite`, due to breaking change in patch version\n- [Tests] fix linting errors\n- [Tests] migrate tests to Github Actions\n- [Tests] stop using coveralls\n- [Tests] skip failing fragment test in node 4\n- [Dev Deps] update `@babel/core`, `@babel/parser`, `aud`, `eslint`, `eslint-plugin-import`, `object.entries`, `object.fromentries`\n\n3.2.0 / 2020-12-16\n==================\n- [New] add support for fragment syntax (`<>`) (#108)\n- [Fix] `TSNonNullExpression`: handle `ThisExpression`s (#108)\n- [Deps] update `array-includes`, `object.assign`\n- [Dev Deps] update `@babel/core`, `@babel/parser`, `eslint`, `eslint-config-airbnb-base`, `object.entries`, `object.fromentries`\n\n3.1.0 / 2020-10-13\n==================\n- [New] add `TSNonNullExpression` (#105)\n- [New] add `AssignmentExpression` (#106)\n- [Dev Deps] update `eslint`\n\n3.0.0 / 2020-10-06\n==================\n- [Breaking] Don't return node.start & node.end (#100)\n- [Breaking] add `ChainExpression`; `CallExpression` now includes arguments (#102)\n- [New] add `SequenceExpression` (#101)\n- [Deps] update `object.assign`\n- [Dev Deps] update `eslint`, `eslint-plugin-import`\n- [Dev Deps] update `@babel/core`, `@babel/parser`, `eslint`, `eslint-plugin-import`\n- [Tests] use proper `actual, expected` ordering for non-confusing failure messages\n\n2.4.1 / 2020-06-11\n==================\n- [Fix] `expressions/TemplateLiteral`: use `.range[0]` instead of `.start`\n\n2.4.0 / 2020-06-11\n==================\n- [New] Provide both range and start & end property on Node, support eslint v7 (#97)\n- [Dev Deps] update `@babel/core`, `@babel/parser`, `eslint`, `eslint-config-airbnb-base`, `eslint-plugin-import`, `flow-parser`\n- [meta] remove yarn registry from npmrc, so `npm publish` works\n\n2.3.0 / 2020-05-24\n==================\n- [New] add nullish coalescing (#99)\n- [New] add OptionalCallExpression (#99)\n- [Deps] update `array-includes`\n- [meta] add `safe-publish-latest`\n- [Dev Deps] update `@babel/parser`, `babel-eslint`, `coveralls`, `eslint`, `eslint-config-airbnb-base`, `eslint-plugin-import`, `in-publish`, `object.entries`, `object.fromentries`, `rimraf`\n- [Tests] on `node` `v14`; test all branches\n\n2.2.3 / 2019-10-24\n==================\n- (fix) Fix crash on spread (#94)\n\n2.2.2 / 2019-10-24\n==================\n- (improvement) Add support for retrieving props from a spread with object expression (#93)\n\n2.2.1 / 2019-06-30\n==================\n- (improvement) Account for TypeCastExpression in the utils\n\n2.2.0 / 2019-06-25\n==================\n- (fix) Fix getLiteralPropValue for TS-specific node types.\n- (chore) upgrade dependencies.\n- (improvement) Stop throwing errors when unknown AST nodes are encountered.\n- (dev) CI changes.\n\n2.1.0 / 2018-04-19\n==================\n- Fix undefined bug for template strings. #45\n- Adding support for `objectRestSpread` within props #60\n- Accommodate ExperimentalSpreadProperty in prop values #75\n- Account for SpreadElement AST Nodes #76\n- Support OptionalMemberExpression AST nodes #77\n- Add support to Typescript's node types #72\n\n2.0.1 / 2017-08-31\n==================\n- [fix] Add support for BindExpression\n\n\n2.0.0 / 2017-07-07\n==================\n- [breaking] Remove undefined return from `propName` so it always returns a value.\n\n\n1.4.1 / 2017-04-19\n==================\n- [fix] - Fixing fatal throw in `getPropValue` for `ArrowFunctionExpression`\n\n\n1.4.0 / 2017-02-02\n==================\n- [new] Add eventHandlers and eventHandlersByType to API. These are the event names for DOM elements on JSX-using libraries such as React, inferno, and preact.\n\n\n1.3.5 / 2016-12-14\n==================\n- [fix] Normalize literals \"true\" and \"false\" before converting to boolean in Literal prop value extractor.\n\n\n1.3.4 / 2016-11-15\n==================\n- [fix] Recursively resolve JSXMemberExpression names for elementType. (i.e. `<Component.Render.Me />`). Fixes [#9](https://github.com/evcohen/jsx-ast-utils/issues/9)\n\n\n1.3.3 / 2016-10-28\n==================\n- [fix] Add support for `ArrayExpression`.\n\n\n1.3.2 / 2016-10-11\n==================\n- [fix] Add support for `UpdateExpression`.\n\n\n1.3.1 / 2016-07-13\n==================\n- [fix] Add `JSXElement` to expression types to handle recursively extracting prop value.\n\n\n1.3.0 / 2016-07-12\n==================\n- [new] Add support for `TaggedTemplateExpression`.\n\n\n1.2.1 / 2016-06-15\n==================\n- [fix] Point to `lib` instead of `src` for root exports.\n\n\n1.2.0 / 2016-06-15\n==================\n- [new] Export functions from root so they can be imported like the following: `require('jsx-ast-utils/{function}')`.\n\n\n1.1.1 / 2016-06-12\n==================\n- [fix] Better support for expressions in `TemplateLiteral` extraction.\n\n\n1.1.0 / 2016-06-10\n==================\n- [new] Support for namespaced element names.\n- [new] Add `propName` to API to get correct name for prop.\n\n\n1.0.1 / 2016-06-10\n==================\n- [fix] Return actual reserved words instead of string representations of them.\n\n\n1.0.0 / 2016-06-09\n==================\n- Initial stable release\n"
        }
    ]
}
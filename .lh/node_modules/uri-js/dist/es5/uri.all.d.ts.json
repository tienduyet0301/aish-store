{
    "sourceFile": "node_modules/uri-js/dist/es5/uri.all.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893087928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export interface URIComponents {\n    scheme?: string;\n    userinfo?: string;\n    host?: string;\n    port?: number | string;\n    path?: string;\n    query?: string;\n    fragment?: string;\n    reference?: string;\n    error?: string;\n}\nexport interface URIOptions {\n    scheme?: string;\n    reference?: string;\n    tolerant?: boolean;\n    absolutePath?: boolean;\n    iri?: boolean;\n    unicodeSupport?: boolean;\n    domainHost?: boolean;\n}\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n    scheme: string;\n    parse(components: ParentComponents, options: Options): Components;\n    serialize(components: Components, options: Options): ParentComponents;\n    unicodeSupport?: boolean;\n    domainHost?: boolean;\n    absolutePath?: boolean;\n}\nexport interface URIRegExps {\n    NOT_SCHEME: RegExp;\n    NOT_USERINFO: RegExp;\n    NOT_HOST: RegExp;\n    NOT_PATH: RegExp;\n    NOT_PATH_NOSCHEME: RegExp;\n    NOT_QUERY: RegExp;\n    NOT_FRAGMENT: RegExp;\n    ESCAPE: RegExp;\n    UNRESERVED: RegExp;\n    OTHER_CHARS: RegExp;\n    PCT_ENCODED: RegExp;\n    IPV4ADDRESS: RegExp;\n    IPV6ADDRESS: RegExp;\n}\nexport declare const SCHEMES: {\n    [scheme: string]: URISchemeHandler;\n};\nexport declare function pctEncChar(chr: string): string;\nexport declare function pctDecChars(str: string): string;\nexport declare function parse(uriString: string, options?: URIOptions): URIComponents;\nexport declare function removeDotSegments(input: string): string;\nexport declare function serialize(components: URIComponents, options?: URIOptions): string;\nexport declare function resolveComponents(base: URIComponents, relative: URIComponents, options?: URIOptions, skipNormalization?: boolean): URIComponents;\nexport declare function resolve(baseURI: string, relativeURI: string, options?: URIOptions): string;\nexport declare function normalize(uri: string, options?: URIOptions): string;\nexport declare function normalize(uri: URIComponents, options?: URIOptions): URIComponents;\nexport declare function equal(uriA: string, uriB: string, options?: URIOptions): boolean;\nexport declare function equal(uriA: URIComponents, uriB: URIComponents, options?: URIOptions): boolean;\nexport declare function escapeComponent(str: string, options?: URIOptions): string;\nexport declare function unescapeComponent(str: string, options?: URIOptions): string;\n"
        }
    ]
}
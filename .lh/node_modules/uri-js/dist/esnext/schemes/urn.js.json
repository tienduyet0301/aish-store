{
    "sourceFile": "node_modules/uri-js/dist/esnext/schemes/urn.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893096385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { SCHEMES } from \"../uri\";\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n//RFC 2141\nconst handler = {\n    scheme: \"urn\",\n    parse: function (components, options) {\n        const matches = components.path && components.path.match(URN_PARSE);\n        let urnComponents = components;\n        if (matches) {\n            const scheme = options.scheme || urnComponents.scheme || \"urn\";\n            const nid = matches[1].toLowerCase();\n            const nss = matches[2];\n            const urnScheme = `${scheme}:${options.nid || nid}`;\n            const schemeHandler = SCHEMES[urnScheme];\n            urnComponents.nid = nid;\n            urnComponents.nss = nss;\n            urnComponents.path = undefined;\n            if (schemeHandler) {\n                urnComponents = schemeHandler.parse(urnComponents, options);\n            }\n        }\n        else {\n            urnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n        }\n        return urnComponents;\n    },\n    serialize: function (urnComponents, options) {\n        const scheme = options.scheme || urnComponents.scheme || \"urn\";\n        const nid = urnComponents.nid;\n        const urnScheme = `${scheme}:${options.nid || nid}`;\n        const schemeHandler = SCHEMES[urnScheme];\n        if (schemeHandler) {\n            urnComponents = schemeHandler.serialize(urnComponents, options);\n        }\n        const uriComponents = urnComponents;\n        const nss = urnComponents.nss;\n        uriComponents.path = `${nid || options.nid}:${nss}`;\n        return uriComponents;\n    },\n};\nexport default handler;\n//# sourceMappingURL=urn.js.map"
        }
    ]
}
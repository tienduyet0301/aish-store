{
    "sourceFile": "node_modules/uri-js/dist/esnext/util.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893097282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export function merge(...sets) {\n    if (sets.length > 1) {\n        sets[0] = sets[0].slice(0, -1);\n        const xl = sets.length - 1;\n        for (let x = 1; x < xl; ++x) {\n            sets[x] = sets[x].slice(1, -1);\n        }\n        sets[xl] = sets[xl].slice(1);\n        return sets.join('');\n    }\n    else {\n        return sets[0];\n    }\n}\nexport function subexp(str) {\n    return \"(?:\" + str + \")\";\n}\nexport function typeOf(o) {\n    return o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\nexport function toUpperCase(str) {\n    return str.toUpperCase();\n}\nexport function toArray(obj) {\n    return obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\nexport function assign(target, source) {\n    const obj = target;\n    if (source) {\n        for (const key in source) {\n            obj[key] = source[key];\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=util.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/nanoid/non-secure/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892647995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * Generate URL-friendly unique ID. This method uses the non-secure\n * predictable random generator with bigger collision probability.\n *\n * ```js\n * import { nanoid } from 'nanoid/non-secure'\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n * ```\n *\n * @param size Size of the ID. The default size is 21.\n * @returns A random string.\n */\nexport function nanoid(size?: number): string\n\n/**\n * Generate a unique ID based on a custom alphabet.\n * This method uses the non-secure predictable random generator\n * with bigger collision probability.\n *\n * @param alphabet Alphabet used to generate the ID.\n * @param defaultSize Size of the ID. The default size is 21.\n * @returns A random string generator.\n *\n * ```js\n * import { customAlphabet } from 'nanoid/non-secure'\n * const nanoid = customAlphabet('0123456789абвгдеё', 5)\n * model.id = //=> \"8ё56а\"\n * ```\n */\nexport function customAlphabet(\n  alphabet: string,\n  defaultSize?: number\n): (size?: number) => string\n"
        }
    ]
}
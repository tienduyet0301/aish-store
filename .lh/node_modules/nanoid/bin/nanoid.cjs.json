{
    "sourceFile": "node_modules/nanoid/bin/nanoid.cjs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892647604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "#!/usr/bin/env node\n\nlet { nanoid, customAlphabet } = require('..')\n\nfunction print(msg) {\n  process.stdout.write(msg + '\\n')\n}\n\nfunction error(msg) {\n  process.stderr.write(msg + '\\n')\n  process.exit(1)\n}\n\nif (process.argv.includes('--help') || process.argv.includes('-h')) {\n  print(`\n  Usage\n    $ nanoid [options]\n\n  Options\n    -s, --size       Generated ID size\n    -a, --alphabet   Alphabet to use\n    -h, --help       Show this help\n\n  Examples\n    $ nanoid --s 15\n    S9sBF77U6sDB8Yg\n\n    $ nanoid --size 10 --alphabet abc\n    bcabababca`)\n  process.exit()\n}\n\nlet alphabet, size\nfor (let i = 2; i < process.argv.length; i++) {\n  let arg = process.argv[i]\n  if (arg === '--size' || arg === '-s') {\n    size = Number(process.argv[i + 1])\n    i += 1\n    if (Number.isNaN(size) || size <= 0) {\n      error('Size must be positive integer')\n    }\n  } else if (arg === '--alphabet' || arg === '-a') {\n    alphabet = process.argv[i + 1]\n    i += 1\n  } else {\n    error('Unknown argument ' + arg)\n  }\n}\n\nif (alphabet) {\n  let customNanoid = customAlphabet(alphabet, size)\n  print(customNanoid())\n} else {\n  print(nanoid(size))\n}\n"
        }
    ]
}
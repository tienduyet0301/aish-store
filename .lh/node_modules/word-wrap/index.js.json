{
    "sourceFile": "node_modules/word-wrap/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893114282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/*!\n * word-wrap <https://github.com/jonschlinkert/word-wrap>\n *\n * Copyright (c) 2014-2023, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction trimEnd(str) {\n  let lastCharPos = str.length - 1;\n  let lastChar = str[lastCharPos];\n  while(lastChar === ' ' || lastChar === '\\t') {\n    lastChar = str[--lastCharPos];\n  }\n  return str.substring(0, lastCharPos + 1);\n}\n\nfunction trimTabAndSpaces(str) {\n  const lines = str.split('\\n');\n  const trimmedLines = lines.map((line) => trimEnd(line));\n  return trimmedLines.join('\\n');\n}\n\nmodule.exports = function(str, options) {\n  options = options || {};\n  if (str == null) {\n    return str;\n  }\n\n  var width = options.width || 50;\n  var indent = (typeof options.indent === 'string')\n    ? options.indent\n    : '  ';\n\n  var newline = options.newline || '\\n' + indent;\n  var escape = typeof options.escape === 'function'\n    ? options.escape\n    : identity;\n\n  var regexString = '.{1,' + width + '}';\n  if (options.cut !== true) {\n    regexString += '([\\\\s\\u200B]+|$)|[^\\\\s\\u200B]+?([\\\\s\\u200B]+|$)';\n  }\n\n  var re = new RegExp(regexString, 'g');\n  var lines = str.match(re) || [];\n  var result = indent + lines.map(function(line) {\n    if (line.slice(-1) === '\\n') {\n      line = line.slice(0, line.length - 1);\n    }\n    return escape(line);\n  }).join(newline);\n\n  if (options.trim === true) {\n    result = trimTabAndSpaces(result);\n  }\n  return result;\n};\n\nfunction identity(str) {\n  return str;\n}\n"
        }
    ]
}
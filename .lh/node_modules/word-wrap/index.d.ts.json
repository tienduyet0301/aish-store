{
    "sourceFile": "node_modules/word-wrap/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893114178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * Wrap words to a specified length.\n */\nexport = wrap;\n\ndeclare function wrap(str: string, options?: wrap.IOptions): string;\n\ndeclare namespace wrap {\n    export interface IOptions {\n\n        /**\n         * The width of the text before wrapping to a new line.\n         * @default ´50´\n         */\n        width?: number;\n\n        /**\n         * The string to use at the beginning of each line.\n         * @default ´  ´ (two spaces)\n         */\n        indent?: string;\n\n        /**\n         * The string to use at the end of each line.\n         * @default ´\\n´\n         */\n        newline?: string;\n\n        /**\n         * An escape function to run on each line after splitting them.\n         * @default (str: string) => string;\n         */\n        escape?: (str: string) => string;\n\n        /**\n         * Trim trailing whitespace from the returned string.\n         * This option is included since .trim() would also strip\n         * the leading indentation from the first line.\n         * @default true\n         */\n        trim?: boolean;\n\n        /**\n         * Break a word between any two letters when the word is longer\n         * than the specified width.\n         * @default false\n         */\n        cut?: boolean;\n    }\n}\n"
        }
    ]
}
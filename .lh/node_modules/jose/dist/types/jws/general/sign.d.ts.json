{
    "sourceFile": "node_modules/jose/dist/types/jws/general/sign.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892370278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { KeyLike, GeneralJWS, JWSHeaderParameters, SignOptions } from '../../types';\nexport interface Signature {\n    /**\n     * Sets the JWS Protected Header on the Signature object.\n     *\n     * @param protectedHeader JWS Protected Header.\n     */\n    setProtectedHeader(protectedHeader: JWSHeaderParameters): Signature;\n    /**\n     * Sets the JWS Unprotected Header on the Signature object.\n     *\n     * @param unprotectedHeader JWS Unprotected Header.\n     */\n    setUnprotectedHeader(unprotectedHeader: JWSHeaderParameters): Signature;\n    /** A shorthand for calling addSignature() on the enclosing GeneralSign instance */\n    addSignature(...args: Parameters<GeneralSign['addSignature']>): Signature;\n    /** A shorthand for calling encrypt() on the enclosing GeneralSign instance */\n    sign(...args: Parameters<GeneralSign['sign']>): Promise<GeneralJWS>;\n    /** Returns the enclosing GeneralSign */\n    done(): GeneralSign;\n}\n/**\n * The GeneralSign class is used to build and sign General JWS objects.\n *\n */\nexport declare class GeneralSign {\n    private _payload;\n    private _signatures;\n    /** @param payload Binary representation of the payload to sign. */\n    constructor(payload: Uint8Array);\n    /**\n     * Adds an additional signature for the General JWS object.\n     *\n     * @param key Private Key or Secret to sign the individual JWS signature with. See\n     *   {@link https://github.com/panva/jose/issues/210#jws-alg Algorithm Key Requirements}.\n     * @param options JWS Sign options.\n     */\n    addSignature(key: KeyLike | Uint8Array, options?: SignOptions): Signature;\n    /** Signs and resolves the value of the General JWS object. */\n    sign(): Promise<GeneralJWS>;\n}\n"
        }
    ]
}
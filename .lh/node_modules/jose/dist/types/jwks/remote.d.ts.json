{
    "sourceFile": "node_modules/jose/dist/types/jwks/remote.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892370084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { KeyLike, JWSHeaderParameters, FlattenedJWSInput } from '../types';\n/** Options for the remote JSON Web Key Set. */\nexport interface RemoteJWKSetOptions {\n    /**\n     * Timeout (in milliseconds) for the HTTP request. When reached the request will be aborted and\n     * the verification will fail. Default is 5000 (5 seconds).\n     */\n    timeoutDuration?: number;\n    /**\n     * Duration (in milliseconds) for which no more HTTP requests will be triggered after a previous\n     * successful fetch. Default is 30000 (30 seconds).\n     */\n    cooldownDuration?: number;\n    /**\n     * Maximum time (in milliseconds) between successful HTTP requests. Default is 600000 (10\n     * minutes).\n     */\n    cacheMaxAge?: number | typeof Infinity;\n    /**\n     * An instance of {@link https://nodejs.org/api/http.html#class-httpagent http.Agent} or\n     * {@link https://nodejs.org/api/https.html#class-httpsagent https.Agent} to pass to the\n     * {@link https://nodejs.org/api/http.html#httpgetoptions-callback http.get} or\n     * {@link https://nodejs.org/api/https.html#httpsgetoptions-callback https.get} method's options.\n     * Use when behind an http(s) proxy. This is a Node.js runtime specific option, it is ignored when\n     * used outside of Node.js runtime.\n     */\n    agent?: any;\n    /** Optional headers to be sent with the HTTP request. */\n    headers?: Record<string, string>;\n}\n/**\n * Returns a function that resolves to a key object downloaded from a remote endpoint returning a\n * JSON Web Key Set, that is, for example, an OAuth 2.0 or OIDC jwks_uri. The JSON Web Key Set is\n * fetched when no key matches the selection process but only as frequently as the\n * `cooldownDuration` option allows to prevent abuse.\n *\n * It uses the \"alg\" (JWS Algorithm) Header Parameter to determine the right JWK \"kty\" (Key Type),\n * then proceeds to match the JWK \"kid\" (Key ID) with one found in the JWS Header Parameters (if\n * there is one) while also respecting the JWK \"use\" (Public Key Use) and JWK \"key_ops\" (Key\n * Operations) Parameters (if they are present on the JWK).\n *\n * Only a single public key must match the selection process. As shown in the example below when\n * multiple keys get matched it is possible to opt-in to iterate over the matched keys and attempt\n * verification in an iterative manner.\n *\n * @param url URL to fetch the JSON Web Key Set from.\n * @param options Options for the remote JSON Web Key Set.\n */\nexport declare function createRemoteJWKSet<T extends KeyLike = KeyLike>(url: URL, options?: RemoteJWKSetOptions): (protectedHeader?: JWSHeaderParameters, token?: FlattenedJWSInput) => Promise<T>;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/jose/dist/types/jwk/embedded.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892369995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { KeyLike, FlattenedJWSInput, JWSHeaderParameters } from '../types';\n/**\n * EmbeddedJWK is an implementation of a GetKeyFunction intended to be used with the JWS/JWT verify\n * operations whenever you need to opt-in to verify signatures with a public key embedded in the\n * token's \"jwk\" (JSON Web Key) Header Parameter. It is recommended to combine this with the verify\n * function's `algorithms` option to define accepted JWS \"alg\" (Algorithm) Header Parameter values.\n *\n */\nexport declare function EmbeddedJWK<T extends KeyLike = KeyLike>(protectedHeader?: JWSHeaderParameters, token?: FlattenedJWSInput): Promise<T>;\n"
        }
    ]
}
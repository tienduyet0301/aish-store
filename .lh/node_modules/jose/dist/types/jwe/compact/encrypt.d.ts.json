{
    "sourceFile": "node_modules/jose/dist/types/jwe/compact/encrypt.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892369831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { KeyLike, JWEKeyManagementHeaderParameters, CompactJWEHeaderParameters, EncryptOptions } from '../../types';\n/**\n * The CompactEncrypt class is used to build and encrypt Compact JWE strings.\n *\n */\nexport declare class CompactEncrypt {\n    private _flattened;\n    /** @param plaintext Binary representation of the plaintext to encrypt. */\n    constructor(plaintext: Uint8Array);\n    /**\n     * Sets a content encryption key to use, by default a random suitable one is generated for the JWE\n     * enc\" (Encryption Algorithm) Header Parameter.\n     *\n     * @deprecated You should not use this method. It is only really intended for test and vector\n     *   validation purposes.\n     *\n     * @param cek JWE Content Encryption Key.\n     */\n    setContentEncryptionKey(cek: Uint8Array): this;\n    /**\n     * Sets the JWE Initialization Vector to use for content encryption, by default a random suitable\n     * one is generated for the JWE enc\" (Encryption Algorithm) Header Parameter.\n     *\n     * @deprecated You should not use this method. It is only really intended for test and vector\n     *   validation purposes.\n     *\n     * @param iv JWE Initialization Vector.\n     */\n    setInitializationVector(iv: Uint8Array): this;\n    /**\n     * Sets the JWE Protected Header on the CompactEncrypt object.\n     *\n     * @param protectedHeader JWE Protected Header object.\n     */\n    setProtectedHeader(protectedHeader: CompactJWEHeaderParameters): this;\n    /**\n     * Sets the JWE Key Management parameters to be used when encrypting the Content Encryption Key.\n     * You do not need to invoke this method, it is only really intended for test and vector\n     * validation purposes.\n     *\n     * @param parameters JWE Key Management parameters.\n     */\n    setKeyManagementParameters(parameters: JWEKeyManagementHeaderParameters): this;\n    /**\n     * Encrypts and resolves the value of the Compact JWE string.\n     *\n     * @param key Public Key or Secret to encrypt the JWE with. See\n     *   {@link https://github.com/panva/jose/issues/210#jwe-alg Algorithm Key Requirements}.\n     * @param options JWE Encryption options.\n     */\n    encrypt(key: KeyLike | Uint8Array, options?: EncryptOptions): Promise<string>;\n}\n"
        }
    ]
}
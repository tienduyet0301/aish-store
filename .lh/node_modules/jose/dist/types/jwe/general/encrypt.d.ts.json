{
    "sourceFile": "node_modules/jose/dist/types/jwe/general/encrypt.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892369959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { KeyLike, GeneralJWE, JWEHeaderParameters, CritOption, DeflateOption } from '../../types';\nexport interface Recipient {\n    /**\n     * Sets the JWE Per-Recipient Unprotected Header on the Recipient object.\n     *\n     * @param unprotectedHeader JWE Per-Recipient Unprotected Header.\n     */\n    setUnprotectedHeader(unprotectedHeader: JWEHeaderParameters): Recipient;\n    /** A shorthand for calling addRecipient() on the enclosing GeneralEncrypt instance */\n    addRecipient(...args: Parameters<GeneralEncrypt['addRecipient']>): Recipient;\n    /** A shorthand for calling encrypt() on the enclosing GeneralEncrypt instance */\n    encrypt(...args: Parameters<GeneralEncrypt['encrypt']>): Promise<GeneralJWE>;\n    /** Returns the enclosing GeneralEncrypt */\n    done(): GeneralEncrypt;\n}\n/**\n * The GeneralEncrypt class is used to build and encrypt General JWE objects.\n *\n */\nexport declare class GeneralEncrypt {\n    private _plaintext;\n    private _recipients;\n    private _protectedHeader;\n    private _unprotectedHeader;\n    private _aad;\n    /** @param plaintext Binary representation of the plaintext to encrypt. */\n    constructor(plaintext: Uint8Array);\n    /**\n     * Adds an additional recipient for the General JWE object.\n     *\n     * @param key Public Key or Secret to encrypt the Content Encryption Key for the recipient with.\n     *   See {@link https://github.com/panva/jose/issues/210#jwe-alg Algorithm Key Requirements}.\n     * @param options JWE Encryption options.\n     */\n    addRecipient(key: KeyLike | Uint8Array, options?: CritOption): Recipient;\n    /**\n     * Sets the JWE Protected Header on the GeneralEncrypt object.\n     *\n     * @param protectedHeader JWE Protected Header object.\n     */\n    setProtectedHeader(protectedHeader: JWEHeaderParameters): this;\n    /**\n     * Sets the JWE Shared Unprotected Header on the GeneralEncrypt object.\n     *\n     * @param sharedUnprotectedHeader JWE Shared Unprotected Header object.\n     */\n    setSharedUnprotectedHeader(sharedUnprotectedHeader: JWEHeaderParameters): this;\n    /**\n     * Sets the Additional Authenticated Data on the GeneralEncrypt object.\n     *\n     * @param aad Additional Authenticated Data.\n     */\n    setAdditionalAuthenticatedData(aad: Uint8Array): this;\n    /**\n     * Encrypts and resolves the value of the General JWE object.\n     *\n     * @param options JWE Encryption options.\n     */\n    encrypt(options?: DeflateOption): Promise<GeneralJWE>;\n}\n"
        }
    ]
}
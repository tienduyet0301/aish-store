{
    "sourceFile": "node_modules/jose/dist/types/jwe/general/decrypt.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892369927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { KeyLike, DecryptOptions, JWEHeaderParameters, GetKeyFunction, FlattenedJWE, GeneralJWE, GeneralDecryptResult, ResolvedKey } from '../../types';\n/**\n * Interface for General JWE Decryption dynamic key resolution. No token components have been\n * verified at the time of this function call.\n */\nexport interface GeneralDecryptGetKey extends GetKeyFunction<JWEHeaderParameters, FlattenedJWE> {\n}\n/**\n * Decrypts a General JWE.\n *\n * @param jwe General JWE.\n * @param key Private Key or Secret to decrypt the JWE with. See\n *   {@link https://github.com/panva/jose/issues/210#jwe-alg Algorithm Key Requirements}.\n * @param options JWE Decryption options.\n */\nexport declare function generalDecrypt(jwe: GeneralJWE, key: KeyLike | Uint8Array, options?: DecryptOptions): Promise<GeneralDecryptResult>;\n/**\n * @param jwe General JWE.\n * @param getKey Function resolving Private Key or Secret to decrypt the JWE with. See\n *   {@link https://github.com/panva/jose/issues/210#jwe-alg Algorithm Key Requirements}.\n * @param options JWE Decryption options.\n */\nexport declare function generalDecrypt<T extends KeyLike = KeyLike>(jwe: GeneralJWE, getKey: GeneralDecryptGetKey, options?: DecryptOptions): Promise<GeneralDecryptResult & ResolvedKey<T>>;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/jose/dist/types/jwt/encrypt.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892370392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { EncryptOptions, CompactJWEHeaderParameters, JWEKeyManagementHeaderParameters, KeyLike } from '../types';\nimport { ProduceJWT } from './produce';\n/**\n * The EncryptJWT class is used to build and encrypt Compact JWE formatted JSON Web Tokens.\n *\n */\nexport declare class EncryptJWT extends ProduceJWT {\n    private _cek;\n    private _iv;\n    private _keyManagementParameters;\n    private _protectedHeader;\n    private _replicateIssuerAsHeader;\n    private _replicateSubjectAsHeader;\n    private _replicateAudienceAsHeader;\n    /**\n     * Sets the JWE Protected Header on the EncryptJWT object.\n     *\n     * @param protectedHeader JWE Protected Header. Must contain an \"alg\" (JWE Algorithm) and \"enc\"\n     *   (JWE Encryption Algorithm) properties.\n     */\n    setProtectedHeader(protectedHeader: CompactJWEHeaderParameters): this;\n    /**\n     * Sets the JWE Key Management parameters to be used when encrypting. Use of this is method is\n     * really only needed for ECDH based algorithms when utilizing the Agreement PartyUInfo or\n     * Agreement PartyVInfo parameters. Other parameters will always be randomly generated when needed\n     * and missing.\n     *\n     * @param parameters JWE Key Management parameters.\n     */\n    setKeyManagementParameters(parameters: JWEKeyManagementHeaderParameters): this;\n    /**\n     * Sets a content encryption key to use, by default a random suitable one is generated for the JWE\n     * enc\" (Encryption Algorithm) Header Parameter.\n     *\n     * @deprecated You should not use this method. It is only really intended for test and vector\n     *   validation purposes.\n     *\n     * @param cek JWE Content Encryption Key.\n     */\n    setContentEncryptionKey(cek: Uint8Array): this;\n    /**\n     * Sets the JWE Initialization Vector to use for content encryption, by default a random suitable\n     * one is generated for the JWE enc\" (Encryption Algorithm) Header Parameter.\n     *\n     * @deprecated You should not use this method. It is only really intended for test and vector\n     *   validation purposes.\n     *\n     * @param iv JWE Initialization Vector.\n     */\n    setInitializationVector(iv: Uint8Array): this;\n    /**\n     * Replicates the \"iss\" (Issuer) Claim as a JWE Protected Header Parameter.\n     *\n     * @see {@link https://www.rfc-editor.org/rfc/rfc7519#section-5.3 RFC7519#section-5.3}\n     */\n    replicateIssuerAsHeader(): this;\n    /**\n     * Replicates the \"sub\" (Subject) Claim as a JWE Protected Header Parameter.\n     *\n     * @see {@link https://www.rfc-editor.org/rfc/rfc7519#section-5.3 RFC7519#section-5.3}\n     */\n    replicateSubjectAsHeader(): this;\n    /**\n     * Replicates the \"aud\" (Audience) Claim as a JWE Protected Header Parameter.\n     *\n     * @see {@link https://www.rfc-editor.org/rfc/rfc7519#section-5.3 RFC7519#section-5.3}\n     */\n    replicateAudienceAsHeader(): this;\n    /**\n     * Encrypts and returns the JWT.\n     *\n     * @param key Public Key or Secret to encrypt the JWT with. See\n     *   {@link https://github.com/panva/jose/issues/210#jwe-alg Algorithm Key Requirements}.\n     * @param options JWE Encryption options.\n     */\n    encrypt(key: KeyLike | Uint8Array, options?: EncryptOptions): Promise<string>;\n}\n"
        }
    ]
}
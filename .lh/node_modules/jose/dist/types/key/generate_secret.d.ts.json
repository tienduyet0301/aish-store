{
    "sourceFile": "node_modules/jose/dist/types/key/generate_secret.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892370657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { KeyLike } from '../types';\nexport interface GenerateSecretOptions {\n    /**\n     * (Only effective in Web Crypto API runtimes) The value to use as\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/generateKey SubtleCrypto.generateKey()}\n     * `extractable` argument. Default is false.\n     */\n    extractable?: boolean;\n}\n/**\n * Generates a symmetric secret key for a given JWA algorithm identifier.\n *\n * Note: Under Web Crypto API runtime the secret key is generated with `extractable` set to `false`\n * by default.\n *\n * @param alg JWA Algorithm Identifier to be used with the generated secret.\n * @param options Additional options passed down to the secret generation.\n */\nexport declare function generateSecret<T extends KeyLike = KeyLike>(alg: string, options?: GenerateSecretOptions): Promise<T | Uint8Array>;\n"
        }
    ]
}
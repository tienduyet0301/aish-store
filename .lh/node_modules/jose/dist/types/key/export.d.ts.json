{
    "sourceFile": "node_modules/jose/dist/types/key/export.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892370581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { JWK, KeyLike } from '../types';\n/**\n * Exports a runtime-specific public key representation (KeyObject or CryptoKey) to a PEM-encoded\n * SPKI string format.\n *\n * @param key Key representation to transform to a PEM-encoded SPKI string format.\n */\nexport declare function exportSPKI(key: KeyLike): Promise<string>;\n/**\n * Exports a runtime-specific private key representation (KeyObject or CryptoKey) to a PEM-encoded\n * PKCS8 string format.\n *\n * @param key Key representation to transform to a PEM-encoded PKCS8 string format.\n */\nexport declare function exportPKCS8(key: KeyLike): Promise<string>;\n/**\n * Exports a runtime-specific key representation (KeyLike) to a JWK.\n *\n * @param key Key representation to export as JWK.\n */\nexport declare function exportJWK(key: KeyLike | Uint8Array): Promise<JWK>;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/tailwind-merge/dist/types.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893045956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\ntype ClassNameValue = ClassNameArray | string | null | undefined | 0 | 0n | false;\ntype ClassNameArray = ClassNameValue[];\ndeclare function twJoin(...classLists: ClassNameValue[]): string;\n\n/**\n * Type the tailwind-merge configuration adheres to.\n */\ninterface Config<ClassGroupIds extends string, ThemeGroupIds extends string> extends ConfigStaticPart, ConfigGroupsPart<ClassGroupIds, ThemeGroupIds> {\n}\n/**\n * The static part of the tailwind-merge configuration. When merging multiple configurations, the properties of this interface are always overridden.\n */\ninterface ConfigStaticPart {\n    /**\n     * Integer indicating size of LRU cache used for memoizing results.\n     * - Cache might be up to twice as big as `cacheSize`\n     * - No cache is used for values <= 0\n     */\n    cacheSize: number;\n    /**\n     * Prefix added to Tailwind-generated classes\n     * @see https://tailwindcss.com/docs/configuration#prefix\n     */\n    prefix?: string;\n    /**\n     * Allows to customize parsing of individual classes passed to `twMerge`.\n     * All classes passed to `twMerge` outside of cache hits are passed to this function before it is determined whether the class is a valid Tailwind CSS class.\n     *\n     * This is an experimental feature and may introduce breaking changes in any minor version update.\n     */\n    experimentalParseClassName?(param: ExperimentalParseClassNameParam): ParsedClassName;\n}\n/**\n * Type of param passed to the `experimentalParseClassName` function.\n *\n * This is an experimental feature and may introduce breaking changes in any minor version update.\n */\ninterface ExperimentalParseClassNameParam {\n    className: string;\n    parseClassName(className: string): ParsedClassName;\n}\n/**\n * Type of the result returned by the `experimentalParseClassName` function.\n *\n * This is an experimental feature and may introduce breaking changes in any minor version update.\n */\ninterface ParsedClassName {\n    /**\n     * Whether the class is external and merging logic should be sipped.\n     *\n     * If this is `true`, the class will be treated as if it wasn't a Tailwind class and will be passed through as is.\n     */\n    isExternal?: boolean;\n    /**\n     * Modifiers of the class in the order they appear in the class.\n     *\n     * @example ['hover', 'dark'] // for `hover:dark:bg-gray-100`\n     */\n    modifiers: string[];\n    /**\n     * Whether the class has an `!important` modifier.\n     *\n     * @example true // for `hover:dark:!bg-gray-100`\n     */\n    hasImportantModifier: boolean;\n    /**\n     * Base class without preceding modifiers.\n     *\n     * @example 'bg-gray-100' // for `hover:dark:bg-gray-100`\n     */\n    baseClassName: string;\n    /**\n     * Index position of a possible postfix modifier in the class.\n     * If the class has no postfix modifier, this is `undefined`.\n     *\n     * This property is prefixed with \"maybe\" because tailwind-merge does not know whether something is a postfix modifier or part of the base class since it's possible to configure Tailwind CSS classes which include a `/` in the base class name.\n     *\n     * If a `maybePostfixModifierPosition` is present, tailwind-merge first tries to match the `baseClassName` without the possible postfix modifier to a class group. If that fails, it tries again with the possible postfix modifier.\n     *\n     * @example 11 // for `bg-gray-100/50`\n     */\n    maybePostfixModifierPosition: number | undefined;\n}\n/**\n * The dynamic part of the tailwind-merge configuration. When merging multiple configurations, the user can choose to either override or extend the properties of this interface.\n */\ninterface ConfigGroupsPart<ClassGroupIds extends string, ThemeGroupIds extends string> {\n    /**\n     * Theme scales used in classGroups.\n     *\n     * The keys are the same as in the Tailwind config but the values are sometimes defined more broadly.\n     */\n    theme: NoInfer<ThemeObject<ThemeGroupIds>>;\n    /**\n     * Object with groups of classes.\n     *\n     * @example\n     * {\n     *     // Creates group of classes `group`, `of` and `classes`\n     *     'group-id': ['group', 'of', 'classes'],\n     *     // Creates group of classes `look-at-me-other` and `look-at-me-group`.\n     *     'other-group': [{ 'look-at-me': ['other', 'group']}]\n     * }\n     */\n    classGroups: NoInfer<Record<ClassGroupIds, ClassGroup<ThemeGroupIds>>>;\n    /**\n     * Conflicting classes across groups.\n     *\n     * The key is the ID of a class group which creates a conflict, values are IDs of class groups which receive a conflict. That means if a class from from the key ID is present, all preceding classes from the values are removed.\n     *\n     * A class group ID is the key of a class group in the classGroups object.\n     *\n     * @example { gap: ['gap-x', 'gap-y'] }\n     */\n    conflictingClassGroups: NoInfer<Partial<Record<ClassGroupIds, readonly ClassGroupIds[]>>>;\n    /**\n     * Postfix modifiers conflicting with other class groups.\n     *\n     * A class group ID is the key of a class group in classGroups object.\n     *\n     * @example { 'font-size': ['leading'] }\n     */\n    conflictingClassGroupModifiers: NoInfer<Partial<Record<ClassGroupIds, readonly ClassGroupIds[]>>>;\n    /**\n     * Modifiers whose order among multiple modifiers should be preserved because their order changes which element gets targeted.\n     *\n     * tailwind-merge makes sure that classes with these modifiers are not overwritten by classes with the same modifiers with order-sensitive modifiers being in a different position.\n     */\n    orderSensitiveModifiers: string[];\n}\n/**\n * Type of the configuration object that can be passed to `extendTailwindMerge`.\n */\ninterface ConfigExtension<ClassGroupIds extends string, ThemeGroupIds extends string> extends Partial<ConfigStaticPart> {\n    override?: PartialPartial<ConfigGroupsPart<ClassGroupIds, ThemeGroupIds>>;\n    extend?: PartialPartial<ConfigGroupsPart<ClassGroupIds, ThemeGroupIds>>;\n}\ntype PartialPartial<T> = {\n    [P in keyof T]?: T[P] extends any[] ? T[P] : Partial<T[P]>;\n};\ntype ThemeObject<ThemeGroupIds extends string> = Record<ThemeGroupIds, ClassGroup<ThemeGroupIds>>;\ntype ClassGroup<ThemeGroupIds extends string> = readonly ClassDefinition<ThemeGroupIds>[];\ntype ClassDefinition<ThemeGroupIds extends string> = string | ClassValidator | ThemeGetter | ClassObject<ThemeGroupIds>;\ntype ClassValidator = (classPart: string) => boolean;\ninterface ThemeGetter {\n    (theme: ThemeObject<AnyThemeGroupIds>): ClassGroup<AnyClassGroupIds>;\n    isThemeGetter: true;\n}\ntype ClassObject<ThemeGroupIds extends string> = Record<string, readonly ClassDefinition<ThemeGroupIds>[]>;\n/**\n * Hack from https://stackoverflow.com/questions/56687668/a-way-to-disable-type-argument-inference-in-generics/56688073#56688073\n *\n * Could be replaced with NoInfer utility type from TypeScript (https://www.typescriptlang.org/docs/handbook/utility-types.html#noinfertype), but that is only supported in TypeScript 5.4 or higher, so I should wait some time before using it.\n */\ntype NoInfer<T> = [T][T extends any ? 0 : never];\n/**\n * Theme group IDs included in the default configuration of tailwind-merge.\n *\n * If you want to use a scale that is not supported in the `ThemeObject` type,\n * consider using `classGroups` instead of `theme`.\n *\n * @see https://github.com/dcastil/tailwind-merge/blob/main/docs/configuration.md#theme\n *      (the list of supported keys may vary between `tailwind-merge` versions)\n */\ntype DefaultThemeGroupIds = 'animate' | 'aspect' | 'blur' | 'breakpoint' | 'color' | 'container' | 'drop-shadow' | 'ease' | 'font-weight' | 'font' | 'inset-shadow' | 'leading' | 'perspective' | 'radius' | 'shadow' | 'spacing' | 'text' | 'text-shadow' | 'tracking';\n/**\n * Class group IDs included in the default configuration of tailwind-merge.\n */\ntype DefaultClassGroupIds = 'accent' | 'align-content' | 'align-items' | 'align-self' | 'animate' | 'appearance' | 'aspect' | 'auto-cols' | 'auto-rows' | 'backdrop-blur' | 'backdrop-brightness' | 'backdrop-contrast' | 'backdrop-filter' | 'backdrop-grayscale' | 'backdrop-hue-rotate' | 'backdrop-invert' | 'backdrop-opacity' | 'backdrop-saturate' | 'backdrop-sepia' | 'backface' | 'basis' | 'bg-attachment' | 'bg-blend' | 'bg-clip' | 'bg-color' | 'bg-image' | 'bg-origin' | 'bg-position' | 'bg-repeat' | 'bg-size' | 'blur' | 'border-collapse' | 'border-color-b' | 'border-color-e' | 'border-color-l' | 'border-color-r' | 'border-color-s' | 'border-color-t' | 'border-color-x' | 'border-color-y' | 'border-color' | 'border-spacing-x' | 'border-spacing-y' | 'border-spacing' | 'border-style' | 'border-w-b' | 'border-w-e' | 'border-w-l' | 'border-w-r' | 'border-w-s' | 'border-w-t' | 'border-w-x' | 'border-w-y' | 'border-w' | 'bottom' | 'box-decoration' | 'box' | 'break-after' | 'break-before' | 'break-inside' | 'break' | 'brightness' | 'caption' | 'caret-color' | 'clear' | 'col-end' | 'col-start-end' | 'col-start' | 'color-scheme' | 'columns' | 'container' | 'content' | 'contrast' | 'cursor' | 'delay' | 'display' | 'divide-color' | 'divide-style' | 'divide-x-reverse' | 'divide-x' | 'divide-y-reverse' | 'divide-y' | 'drop-shadow' | 'drop-shadow-color' | 'duration' | 'ease' | 'end' | 'field-sizing' | 'fill' | 'filter' | 'flex-direction' | 'flex-wrap' | 'flex' | 'float' | 'font-family' | 'font-size' | 'font-smoothing' | 'font-stretch' | 'font-style' | 'font-weight' | 'forced-color-adjust' | 'fvn-figure' | 'fvn-fraction' | 'fvn-normal' | 'fvn-ordinal' | 'fvn-slashed-zero' | 'fvn-spacing' | 'gap-x' | 'gap-y' | 'gap' | 'gradient-from-pos' | 'gradient-from' | 'gradient-to-pos' | 'gradient-to' | 'gradient-via-pos' | 'gradient-via' | 'grayscale' | 'grid-cols' | 'grid-flow' | 'grid-rows' | 'grow' | 'h' | 'hue-rotate' | 'hyphens' | 'indent' | 'inset-ring-color' | 'inset-ring-w' | 'inset-shadow-color' | 'inset-shadow' | 'inset-x' | 'inset-y' | 'inset' | 'invert' | 'isolation' | 'justify-content' | 'justify-items' | 'justify-self' | 'leading' | 'left' | 'line-clamp' | 'list-image' | 'list-style-position' | 'list-style-type' | 'm' | 'mask-clip' | 'mask-composite' | 'mask-image-b-from-color' | 'mask-image-b-from-pos' | 'mask-image-b-to-color' | 'mask-image-b-to-pos' | 'mask-image-conic-from-color' | 'mask-image-conic-from-pos' | 'mask-image-conic-pos' | 'mask-image-conic-to-color' | 'mask-image-conic-to-pos' | 'mask-image-l-from-color' | 'mask-image-l-from-pos' | 'mask-image-l-to-color' | 'mask-image-l-to-pos' | 'mask-image-linear-from-color' | 'mask-image-linear-from-pos' | 'mask-image-linear-pos' | 'mask-image-linear-to-color' | 'mask-image-linear-to-pos' | 'mask-image-r-from-color' | 'mask-image-r-from-pos' | 'mask-image-r-to-color' | 'mask-image-r-to-pos' | 'mask-image-radial-from-color' | 'mask-image-radial-from-pos' | 'mask-image-radial-pos' | 'mask-image-radial-shape' | 'mask-image-radial-size' | 'mask-image-radial-to-color' | 'mask-image-radial-to-pos' | 'mask-image-radial' | 'mask-image-t-from-color' | 'mask-image-t-from-pos' | 'mask-image-t-to-color' | 'mask-image-t-to-pos' | 'mask-image-x-from-color' | 'mask-image-x-from-pos' | 'mask-image-x-to-color' | 'mask-image-x-to-pos' | 'mask-image-y-from-color' | 'mask-image-y-from-pos' | 'mask-image-y-to-color' | 'mask-image-y-to-pos' | 'mask-image' | 'mask-mode' | 'mask-origin' | 'mask-position' | 'mask-repeat' | 'mask-size' | 'mask-type' | 'max-h' | 'max-w' | 'mb' | 'me' | 'min-h' | 'min-w' | 'mix-blend' | 'ml' | 'mr' | 'ms' | 'mt' | 'mx' | 'my' | 'object-fit' | 'object-position' | 'opacity' | 'order' | 'outline-color' | 'outline-offset' | 'outline-style' | 'outline-w' | 'overflow-x' | 'overflow-y' | 'overflow' | 'overscroll-x' | 'overscroll-y' | 'overscroll' | 'p' | 'pb' | 'pe' | 'perspective-origin' | 'perspective' | 'pl' | 'place-content' | 'place-items' | 'place-self' | 'placeholder-color' | 'pointer-events' | 'position' | 'pr' | 'ps' | 'pt' | 'px' | 'py' | 'resize' | 'right' | 'ring-color' | 'ring-offset-color' | 'ring-offset-w' | 'ring-w-inset' | 'ring-w' | 'rotate-x' | 'rotate-y' | 'rotate-z' | 'rotate' | 'rounded-b' | 'rounded-bl' | 'rounded-br' | 'rounded-e' | 'rounded-ee' | 'rounded-es' | 'rounded-l' | 'rounded-r' | 'rounded-s' | 'rounded-se' | 'rounded-ss' | 'rounded-t' | 'rounded-tl' | 'rounded-tr' | 'rounded' | 'row-end' | 'row-start-end' | 'row-start' | 'saturate' | 'scale-3d' | 'scale-x' | 'scale-y' | 'scale-z' | 'scale' | 'scroll-behavior' | 'scroll-m' | 'scroll-mb' | 'scroll-me' | 'scroll-ml' | 'scroll-mr' | 'scroll-ms' | 'scroll-mt' | 'scroll-mx' | 'scroll-my' | 'scroll-p' | 'scroll-pb' | 'scroll-pe' | 'scroll-pl' | 'scroll-pr' | 'scroll-ps' | 'scroll-pt' | 'scroll-px' | 'scroll-py' | 'select' | 'sepia' | 'shadow-color' | 'shadow' | 'shrink' | 'size' | 'skew-x' | 'skew-y' | 'skew' | 'snap-align' | 'snap-stop' | 'snap-strictness' | 'snap-type' | 'space-x-reverse' | 'space-x' | 'space-y-reverse' | 'space-y' | 'sr' | 'start' | 'stroke-w' | 'stroke' | 'table-layout' | 'text-alignment' | 'text-color' | 'text-decoration-color' | 'text-decoration-style' | 'text-decoration-thickness' | 'text-decoration' | 'text-overflow' | 'text-shadow' | 'text-shadow-color' | 'text-transform' | 'text-wrap' | 'top' | 'touch-pz' | 'touch-x' | 'touch-y' | 'touch' | 'tracking' | 'transform-origin' | 'transform-style' | 'transform' | 'transition-behavior' | 'transition' | 'translate-none' | 'translate-x' | 'translate-y' | 'translate-z' | 'translate' | 'underline-offset' | 'vertical-align' | 'visibility' | 'w' | 'whitespace' | 'will-change' | 'wrap' | 'z';\ntype AnyClassGroupIds = string;\ntype AnyThemeGroupIds = string;\n/**\n * type of the tailwind-merge configuration that allows for any possible configuration.\n */\ntype AnyConfig = Config<AnyClassGroupIds, AnyThemeGroupIds>;\n\ntype CreateConfigFirst = () => AnyConfig;\ntype CreateConfigSubsequent$1 = (config: AnyConfig) => AnyConfig;\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string;\ndeclare function createTailwindMerge(createConfigFirst: CreateConfigFirst, ...createConfigRest: CreateConfigSubsequent$1[]): TailwindMerge;\n\ndeclare const getDefaultConfig: () => {\n    readonly cacheSize: 500;\n    readonly theme: {\n        readonly animate: readonly [\"spin\", \"ping\", \"pulse\", \"bounce\"];\n        readonly aspect: readonly [\"video\"];\n        readonly blur: readonly [(value: string) => boolean];\n        readonly breakpoint: readonly [(value: string) => boolean];\n        readonly color: readonly [() => boolean];\n        readonly container: readonly [(value: string) => boolean];\n        readonly 'drop-shadow': readonly [(value: string) => boolean];\n        readonly ease: readonly [\"in\", \"out\", \"in-out\"];\n        readonly font: readonly [(value: string) => boolean];\n        readonly 'font-weight': readonly [\"thin\", \"extralight\", \"light\", \"normal\", \"medium\", \"semibold\", \"bold\", \"extrabold\", \"black\"];\n        readonly 'inset-shadow': readonly [(value: string) => boolean];\n        readonly leading: readonly [\"none\", \"tight\", \"snug\", \"normal\", \"relaxed\", \"loose\"];\n        readonly perspective: readonly [\"dramatic\", \"near\", \"normal\", \"midrange\", \"distant\", \"none\"];\n        readonly radius: readonly [(value: string) => boolean];\n        readonly shadow: readonly [(value: string) => boolean];\n        readonly spacing: readonly [\"px\", (value: string) => boolean];\n        readonly text: readonly [(value: string) => boolean];\n        readonly 'text-shadow': readonly [(value: string) => boolean];\n        readonly tracking: readonly [\"tighter\", \"tight\", \"normal\", \"wide\", \"wider\", \"widest\"];\n    };\n    readonly classGroups: {\n        /**\n         * Aspect Ratio\n         * @see https://tailwindcss.com/docs/aspect-ratio\n         */\n        readonly aspect: readonly [{\n            readonly aspect: readonly [\"auto\", \"square\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Container\n         * @see https://tailwindcss.com/docs/container\n         * @deprecated since Tailwind CSS v4.0.0\n         */\n        readonly container: readonly [\"container\"];\n        /**\n         * Columns\n         * @see https://tailwindcss.com/docs/columns\n         */\n        readonly columns: readonly [{\n            readonly columns: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Break After\n         * @see https://tailwindcss.com/docs/break-after\n         */\n        readonly 'break-after': readonly [{\n            readonly 'break-after': readonly [\"auto\", \"avoid\", \"all\", \"avoid-page\", \"page\", \"left\", \"right\", \"column\"];\n        }];\n        /**\n         * Break Before\n         * @see https://tailwindcss.com/docs/break-before\n         */\n        readonly 'break-before': readonly [{\n            readonly 'break-before': readonly [\"auto\", \"avoid\", \"all\", \"avoid-page\", \"page\", \"left\", \"right\", \"column\"];\n        }];\n        /**\n         * Break Inside\n         * @see https://tailwindcss.com/docs/break-inside\n         */\n        readonly 'break-inside': readonly [{\n            readonly 'break-inside': readonly [\"auto\", \"avoid\", \"avoid-page\", \"avoid-column\"];\n        }];\n        /**\n         * Box Decoration Break\n         * @see https://tailwindcss.com/docs/box-decoration-break\n         */\n        readonly 'box-decoration': readonly [{\n            readonly 'box-decoration': readonly [\"slice\", \"clone\"];\n        }];\n        /**\n         * Box Sizing\n         * @see https://tailwindcss.com/docs/box-sizing\n         */\n        readonly box: readonly [{\n            readonly box: readonly [\"border\", \"content\"];\n        }];\n        /**\n         * Display\n         * @see https://tailwindcss.com/docs/display\n         */\n        readonly display: readonly [\"block\", \"inline-block\", \"inline\", \"flex\", \"inline-flex\", \"table\", \"inline-table\", \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row-group\", \"table-row\", \"flow-root\", \"grid\", \"inline-grid\", \"contents\", \"list-item\", \"hidden\"];\n        /**\n         * Screen Reader Only\n         * @see https://tailwindcss.com/docs/display#screen-reader-only\n         */\n        readonly sr: readonly [\"sr-only\", \"not-sr-only\"];\n        /**\n         * Floats\n         * @see https://tailwindcss.com/docs/float\n         */\n        readonly float: readonly [{\n            readonly float: readonly [\"right\", \"left\", \"none\", \"start\", \"end\"];\n        }];\n        /**\n         * Clear\n         * @see https://tailwindcss.com/docs/clear\n         */\n        readonly clear: readonly [{\n            readonly clear: readonly [\"left\", \"right\", \"both\", \"none\", \"start\", \"end\"];\n        }];\n        /**\n         * Isolation\n         * @see https://tailwindcss.com/docs/isolation\n         */\n        readonly isolation: readonly [\"isolate\", \"isolation-auto\"];\n        /**\n         * Object Fit\n         * @see https://tailwindcss.com/docs/object-fit\n         */\n        readonly 'object-fit': readonly [{\n            readonly object: readonly [\"contain\", \"cover\", \"fill\", \"none\", \"scale-down\"];\n        }];\n        /**\n         * Object Position\n         * @see https://tailwindcss.com/docs/object-position\n         */\n        readonly 'object-position': readonly [{\n            readonly object: readonly [\"center\", \"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"left-top\", \"top-right\", \"right-top\", \"bottom-right\", \"right-bottom\", \"bottom-left\", \"left-bottom\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Overflow\n         * @see https://tailwindcss.com/docs/overflow\n         */\n        readonly overflow: readonly [{\n            readonly overflow: readonly [\"auto\", \"hidden\", \"clip\", \"visible\", \"scroll\"];\n        }];\n        /**\n         * Overflow X\n         * @see https://tailwindcss.com/docs/overflow\n         */\n        readonly 'overflow-x': readonly [{\n            readonly 'overflow-x': readonly [\"auto\", \"hidden\", \"clip\", \"visible\", \"scroll\"];\n        }];\n        /**\n         * Overflow Y\n         * @see https://tailwindcss.com/docs/overflow\n         */\n        readonly 'overflow-y': readonly [{\n            readonly 'overflow-y': readonly [\"auto\", \"hidden\", \"clip\", \"visible\", \"scroll\"];\n        }];\n        /**\n         * Overscroll Behavior\n         * @see https://tailwindcss.com/docs/overscroll-behavior\n         */\n        readonly overscroll: readonly [{\n            readonly overscroll: readonly [\"auto\", \"contain\", \"none\"];\n        }];\n        /**\n         * Overscroll Behavior X\n         * @see https://tailwindcss.com/docs/overscroll-behavior\n         */\n        readonly 'overscroll-x': readonly [{\n            readonly 'overscroll-x': readonly [\"auto\", \"contain\", \"none\"];\n        }];\n        /**\n         * Overscroll Behavior Y\n         * @see https://tailwindcss.com/docs/overscroll-behavior\n         */\n        readonly 'overscroll-y': readonly [{\n            readonly 'overscroll-y': readonly [\"auto\", \"contain\", \"none\"];\n        }];\n        /**\n         * Position\n         * @see https://tailwindcss.com/docs/position\n         */\n        readonly position: readonly [\"static\", \"fixed\", \"absolute\", \"relative\", \"sticky\"];\n        /**\n         * Top / Right / Bottom / Left\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly inset: readonly [{\n            readonly inset: readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Right / Left\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly 'inset-x': readonly [{\n            readonly 'inset-x': readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Top / Bottom\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly 'inset-y': readonly [{\n            readonly 'inset-y': readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Start\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly start: readonly [{\n            readonly start: readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * End\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly end: readonly [{\n            readonly end: readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Top\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly top: readonly [{\n            readonly top: readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Right\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly right: readonly [{\n            readonly right: readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Bottom\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly bottom: readonly [{\n            readonly bottom: readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Left\n         * @see https://tailwindcss.com/docs/top-right-bottom-left\n         */\n        readonly left: readonly [{\n            readonly left: readonly [(value: string) => boolean, \"full\", \"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Visibility\n         * @see https://tailwindcss.com/docs/visibility\n         */\n        readonly visibility: readonly [\"visible\", \"invisible\", \"collapse\"];\n        /**\n         * Z-Index\n         * @see https://tailwindcss.com/docs/z-index\n         */\n        readonly z: readonly [{\n            readonly z: readonly [(value: string) => boolean, \"auto\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Flex Basis\n         * @see https://tailwindcss.com/docs/flex-basis\n         */\n        readonly basis: readonly [{\n            readonly basis: readonly [(value: string) => boolean, \"full\", \"auto\", ThemeGetter, (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Flex Direction\n         * @see https://tailwindcss.com/docs/flex-direction\n         */\n        readonly 'flex-direction': readonly [{\n            readonly flex: readonly [\"row\", \"row-reverse\", \"col\", \"col-reverse\"];\n        }];\n        /**\n         * Flex Wrap\n         * @see https://tailwindcss.com/docs/flex-wrap\n         */\n        readonly 'flex-wrap': readonly [{\n            readonly flex: readonly [\"nowrap\", \"wrap\", \"wrap-reverse\"];\n        }];\n        /**\n         * Flex\n         * @see https://tailwindcss.com/docs/flex\n         */\n        readonly flex: readonly [{\n            readonly flex: readonly [(value: string) => boolean, (value: string) => boolean, \"auto\", \"initial\", \"none\", (value: string) => boolean];\n        }];\n        /**\n         * Flex Grow\n         * @see https://tailwindcss.com/docs/flex-grow\n         */\n        readonly grow: readonly [{\n            readonly grow: readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Flex Shrink\n         * @see https://tailwindcss.com/docs/flex-shrink\n         */\n        readonly shrink: readonly [{\n            readonly shrink: readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Order\n         * @see https://tailwindcss.com/docs/order\n         */\n        readonly order: readonly [{\n            readonly order: readonly [(value: string) => boolean, \"first\", \"last\", \"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Template Columns\n         * @see https://tailwindcss.com/docs/grid-template-columns\n         */\n        readonly 'grid-cols': readonly [{\n            readonly 'grid-cols': readonly [(value: string) => boolean, \"none\", \"subgrid\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Column Start / End\n         * @see https://tailwindcss.com/docs/grid-column\n         */\n        readonly 'col-start-end': readonly [{\n            readonly col: readonly [\"auto\", {\n                readonly span: readonly [\"full\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n            }, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Column Start\n         * @see https://tailwindcss.com/docs/grid-column\n         */\n        readonly 'col-start': readonly [{\n            readonly 'col-start': readonly [(value: string) => boolean, \"auto\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Column End\n         * @see https://tailwindcss.com/docs/grid-column\n         */\n        readonly 'col-end': readonly [{\n            readonly 'col-end': readonly [(value: string) => boolean, \"auto\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Template Rows\n         * @see https://tailwindcss.com/docs/grid-template-rows\n         */\n        readonly 'grid-rows': readonly [{\n            readonly 'grid-rows': readonly [(value: string) => boolean, \"none\", \"subgrid\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Row Start / End\n         * @see https://tailwindcss.com/docs/grid-row\n         */\n        readonly 'row-start-end': readonly [{\n            readonly row: readonly [\"auto\", {\n                readonly span: readonly [\"full\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n            }, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Row Start\n         * @see https://tailwindcss.com/docs/grid-row\n         */\n        readonly 'row-start': readonly [{\n            readonly 'row-start': readonly [(value: string) => boolean, \"auto\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Row End\n         * @see https://tailwindcss.com/docs/grid-row\n         */\n        readonly 'row-end': readonly [{\n            readonly 'row-end': readonly [(value: string) => boolean, \"auto\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Auto Flow\n         * @see https://tailwindcss.com/docs/grid-auto-flow\n         */\n        readonly 'grid-flow': readonly [{\n            readonly 'grid-flow': readonly [\"row\", \"col\", \"dense\", \"row-dense\", \"col-dense\"];\n        }];\n        /**\n         * Grid Auto Columns\n         * @see https://tailwindcss.com/docs/grid-auto-columns\n         */\n        readonly 'auto-cols': readonly [{\n            readonly 'auto-cols': readonly [\"auto\", \"min\", \"max\", \"fr\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grid Auto Rows\n         * @see https://tailwindcss.com/docs/grid-auto-rows\n         */\n        readonly 'auto-rows': readonly [{\n            readonly 'auto-rows': readonly [\"auto\", \"min\", \"max\", \"fr\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Gap\n         * @see https://tailwindcss.com/docs/gap\n         */\n        readonly gap: readonly [{\n            readonly gap: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Gap X\n         * @see https://tailwindcss.com/docs/gap\n         */\n        readonly 'gap-x': readonly [{\n            readonly 'gap-x': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Gap Y\n         * @see https://tailwindcss.com/docs/gap\n         */\n        readonly 'gap-y': readonly [{\n            readonly 'gap-y': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Justify Content\n         * @see https://tailwindcss.com/docs/justify-content\n         */\n        readonly 'justify-content': readonly [{\n            readonly justify: readonly [\"start\", \"end\", \"center\", \"between\", \"around\", \"evenly\", \"stretch\", \"baseline\", \"center-safe\", \"end-safe\", \"normal\"];\n        }];\n        /**\n         * Justify Items\n         * @see https://tailwindcss.com/docs/justify-items\n         */\n        readonly 'justify-items': readonly [{\n            readonly 'justify-items': readonly [\"start\", \"end\", \"center\", \"stretch\", \"center-safe\", \"end-safe\", \"normal\"];\n        }];\n        /**\n         * Justify Self\n         * @see https://tailwindcss.com/docs/justify-self\n         */\n        readonly 'justify-self': readonly [{\n            readonly 'justify-self': readonly [\"auto\", \"start\", \"end\", \"center\", \"stretch\", \"center-safe\", \"end-safe\"];\n        }];\n        /**\n         * Align Content\n         * @see https://tailwindcss.com/docs/align-content\n         */\n        readonly 'align-content': readonly [{\n            readonly content: readonly [\"normal\", \"start\", \"end\", \"center\", \"between\", \"around\", \"evenly\", \"stretch\", \"baseline\", \"center-safe\", \"end-safe\"];\n        }];\n        /**\n         * Align Items\n         * @see https://tailwindcss.com/docs/align-items\n         */\n        readonly 'align-items': readonly [{\n            readonly items: readonly [\"start\", \"end\", \"center\", \"stretch\", \"center-safe\", \"end-safe\", {\n                readonly baseline: readonly [\"\", \"last\"];\n            }];\n        }];\n        /**\n         * Align Self\n         * @see https://tailwindcss.com/docs/align-self\n         */\n        readonly 'align-self': readonly [{\n            readonly self: readonly [\"auto\", \"start\", \"end\", \"center\", \"stretch\", \"center-safe\", \"end-safe\", {\n                readonly baseline: readonly [\"\", \"last\"];\n            }];\n        }];\n        /**\n         * Place Content\n         * @see https://tailwindcss.com/docs/place-content\n         */\n        readonly 'place-content': readonly [{\n            readonly 'place-content': readonly [\"start\", \"end\", \"center\", \"between\", \"around\", \"evenly\", \"stretch\", \"baseline\", \"center-safe\", \"end-safe\"];\n        }];\n        /**\n         * Place Items\n         * @see https://tailwindcss.com/docs/place-items\n         */\n        readonly 'place-items': readonly [{\n            readonly 'place-items': readonly [\"start\", \"end\", \"center\", \"stretch\", \"center-safe\", \"end-safe\", \"baseline\"];\n        }];\n        /**\n         * Place Self\n         * @see https://tailwindcss.com/docs/place-self\n         */\n        readonly 'place-self': readonly [{\n            readonly 'place-self': readonly [\"auto\", \"start\", \"end\", \"center\", \"stretch\", \"center-safe\", \"end-safe\"];\n        }];\n        /**\n         * Padding\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly p: readonly [{\n            readonly p: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Padding X\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly px: readonly [{\n            readonly px: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Padding Y\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly py: readonly [{\n            readonly py: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Padding Start\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly ps: readonly [{\n            readonly ps: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Padding End\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly pe: readonly [{\n            readonly pe: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Padding Top\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly pt: readonly [{\n            readonly pt: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Padding Right\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly pr: readonly [{\n            readonly pr: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Padding Bottom\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly pb: readonly [{\n            readonly pb: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Padding Left\n         * @see https://tailwindcss.com/docs/padding\n         */\n        readonly pl: readonly [{\n            readonly pl: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly m: readonly [{\n            readonly m: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin X\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly mx: readonly [{\n            readonly mx: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin Y\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly my: readonly [{\n            readonly my: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin Start\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly ms: readonly [{\n            readonly ms: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin End\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly me: readonly [{\n            readonly me: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin Top\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly mt: readonly [{\n            readonly mt: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin Right\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly mr: readonly [{\n            readonly mr: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin Bottom\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly mb: readonly [{\n            readonly mb: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Margin Left\n         * @see https://tailwindcss.com/docs/margin\n         */\n        readonly ml: readonly [{\n            readonly ml: readonly [\"auto\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Space Between X\n         * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n         */\n        readonly 'space-x': readonly [{\n            readonly 'space-x': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Space Between X Reverse\n         * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n         */\n        readonly 'space-x-reverse': readonly [\"space-x-reverse\"];\n        /**\n         * Space Between Y\n         * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n         */\n        readonly 'space-y': readonly [{\n            readonly 'space-y': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Space Between Y Reverse\n         * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n         */\n        readonly 'space-y-reverse': readonly [\"space-y-reverse\"];\n        /**\n         * Size\n         * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n         */\n        readonly size: readonly [{\n            readonly size: readonly [(value: string) => boolean, \"auto\", \"full\", \"dvw\", \"dvh\", \"lvw\", \"lvh\", \"svw\", \"svh\", \"min\", \"max\", \"fit\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Width\n         * @see https://tailwindcss.com/docs/width\n         */\n        readonly w: readonly [{\n            readonly w: readonly [ThemeGetter, \"screen\", (value: string) => boolean, \"auto\", \"full\", \"dvw\", \"dvh\", \"lvw\", \"lvh\", \"svw\", \"svh\", \"min\", \"max\", \"fit\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Min-Width\n         * @see https://tailwindcss.com/docs/min-width\n         */\n        readonly 'min-w': readonly [{\n            readonly 'min-w': readonly [ThemeGetter, \"screen\", \"none\", (value: string) => boolean, \"auto\", \"full\", \"dvw\", \"dvh\", \"lvw\", \"lvh\", \"svw\", \"svh\", \"min\", \"max\", \"fit\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Max-Width\n         * @see https://tailwindcss.com/docs/max-width\n         */\n        readonly 'max-w': readonly [{\n            readonly 'max-w': readonly [ThemeGetter, \"screen\", \"none\", \"prose\", {\n                readonly screen: readonly [ThemeGetter];\n            }, (value: string) => boolean, \"auto\", \"full\", \"dvw\", \"dvh\", \"lvw\", \"lvh\", \"svw\", \"svh\", \"min\", \"max\", \"fit\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Height\n         * @see https://tailwindcss.com/docs/height\n         */\n        readonly h: readonly [{\n            readonly h: readonly [\"screen\", (value: string) => boolean, \"auto\", \"full\", \"dvw\", \"dvh\", \"lvw\", \"lvh\", \"svw\", \"svh\", \"min\", \"max\", \"fit\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Min-Height\n         * @see https://tailwindcss.com/docs/min-height\n         */\n        readonly 'min-h': readonly [{\n            readonly 'min-h': readonly [\"screen\", \"none\", (value: string) => boolean, \"auto\", \"full\", \"dvw\", \"dvh\", \"lvw\", \"lvh\", \"svw\", \"svh\", \"min\", \"max\", \"fit\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Max-Height\n         * @see https://tailwindcss.com/docs/max-height\n         */\n        readonly 'max-h': readonly [{\n            readonly 'max-h': readonly [\"screen\", (value: string) => boolean, \"auto\", \"full\", \"dvw\", \"dvh\", \"lvw\", \"lvh\", \"svw\", \"svh\", \"min\", \"max\", \"fit\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Font Size\n         * @see https://tailwindcss.com/docs/font-size\n         */\n        readonly 'font-size': readonly [{\n            readonly text: readonly [\"base\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Font Smoothing\n         * @see https://tailwindcss.com/docs/font-smoothing\n         */\n        readonly 'font-smoothing': readonly [\"antialiased\", \"subpixel-antialiased\"];\n        /**\n         * Font Style\n         * @see https://tailwindcss.com/docs/font-style\n         */\n        readonly 'font-style': readonly [\"italic\", \"not-italic\"];\n        /**\n         * Font Weight\n         * @see https://tailwindcss.com/docs/font-weight\n         */\n        readonly 'font-weight': readonly [{\n            readonly font: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Font Stretch\n         * @see https://tailwindcss.com/docs/font-stretch\n         */\n        readonly 'font-stretch': readonly [{\n            readonly 'font-stretch': readonly [\"ultra-condensed\", \"extra-condensed\", \"condensed\", \"semi-condensed\", \"normal\", \"semi-expanded\", \"expanded\", \"extra-expanded\", \"ultra-expanded\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Font Family\n         * @see https://tailwindcss.com/docs/font-family\n         */\n        readonly 'font-family': readonly [{\n            readonly font: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Font Variant Numeric\n         * @see https://tailwindcss.com/docs/font-variant-numeric\n         */\n        readonly 'fvn-normal': readonly [\"normal-nums\"];\n        /**\n         * Font Variant Numeric\n         * @see https://tailwindcss.com/docs/font-variant-numeric\n         */\n        readonly 'fvn-ordinal': readonly [\"ordinal\"];\n        /**\n         * Font Variant Numeric\n         * @see https://tailwindcss.com/docs/font-variant-numeric\n         */\n        readonly 'fvn-slashed-zero': readonly [\"slashed-zero\"];\n        /**\n         * Font Variant Numeric\n         * @see https://tailwindcss.com/docs/font-variant-numeric\n         */\n        readonly 'fvn-figure': readonly [\"lining-nums\", \"oldstyle-nums\"];\n        /**\n         * Font Variant Numeric\n         * @see https://tailwindcss.com/docs/font-variant-numeric\n         */\n        readonly 'fvn-spacing': readonly [\"proportional-nums\", \"tabular-nums\"];\n        /**\n         * Font Variant Numeric\n         * @see https://tailwindcss.com/docs/font-variant-numeric\n         */\n        readonly 'fvn-fraction': readonly [\"diagonal-fractions\", \"stacked-fractions\"];\n        /**\n         * Letter Spacing\n         * @see https://tailwindcss.com/docs/letter-spacing\n         */\n        readonly tracking: readonly [{\n            readonly tracking: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Line Clamp\n         * @see https://tailwindcss.com/docs/line-clamp\n         */\n        readonly 'line-clamp': readonly [{\n            readonly 'line-clamp': readonly [(value: string) => boolean, \"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Line Height\n         * @see https://tailwindcss.com/docs/line-height\n         */\n        readonly leading: readonly [{\n            readonly leading: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * List Style Image\n         * @see https://tailwindcss.com/docs/list-style-image\n         */\n        readonly 'list-image': readonly [{\n            readonly 'list-image': readonly [\"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * List Style Position\n         * @see https://tailwindcss.com/docs/list-style-position\n         */\n        readonly 'list-style-position': readonly [{\n            readonly list: readonly [\"inside\", \"outside\"];\n        }];\n        /**\n         * List Style Type\n         * @see https://tailwindcss.com/docs/list-style-type\n         */\n        readonly 'list-style-type': readonly [{\n            readonly list: readonly [\"disc\", \"decimal\", \"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Text Alignment\n         * @see https://tailwindcss.com/docs/text-align\n         */\n        readonly 'text-alignment': readonly [{\n            readonly text: readonly [\"left\", \"center\", \"right\", \"justify\", \"start\", \"end\"];\n        }];\n        /**\n         * Placeholder Color\n         * @deprecated since Tailwind CSS v3.0.0\n         * @see https://v3.tailwindcss.com/docs/placeholder-color\n         */\n        readonly 'placeholder-color': readonly [{\n            readonly placeholder: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Text Color\n         * @see https://tailwindcss.com/docs/text-color\n         */\n        readonly 'text-color': readonly [{\n            readonly text: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Text Decoration\n         * @see https://tailwindcss.com/docs/text-decoration\n         */\n        readonly 'text-decoration': readonly [\"underline\", \"overline\", \"line-through\", \"no-underline\"];\n        /**\n         * Text Decoration Style\n         * @see https://tailwindcss.com/docs/text-decoration-style\n         */\n        readonly 'text-decoration-style': readonly [{\n            readonly decoration: readonly [\"solid\", \"dashed\", \"dotted\", \"double\", \"wavy\"];\n        }];\n        /**\n         * Text Decoration Thickness\n         * @see https://tailwindcss.com/docs/text-decoration-thickness\n         */\n        readonly 'text-decoration-thickness': readonly [{\n            readonly decoration: readonly [(value: string) => boolean, \"from-font\", \"auto\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Text Decoration Color\n         * @see https://tailwindcss.com/docs/text-decoration-color\n         */\n        readonly 'text-decoration-color': readonly [{\n            readonly decoration: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Text Underline Offset\n         * @see https://tailwindcss.com/docs/text-underline-offset\n         */\n        readonly 'underline-offset': readonly [{\n            readonly 'underline-offset': readonly [(value: string) => boolean, \"auto\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Text Transform\n         * @see https://tailwindcss.com/docs/text-transform\n         */\n        readonly 'text-transform': readonly [\"uppercase\", \"lowercase\", \"capitalize\", \"normal-case\"];\n        /**\n         * Text Overflow\n         * @see https://tailwindcss.com/docs/text-overflow\n         */\n        readonly 'text-overflow': readonly [\"truncate\", \"text-ellipsis\", \"text-clip\"];\n        /**\n         * Text Wrap\n         * @see https://tailwindcss.com/docs/text-wrap\n         */\n        readonly 'text-wrap': readonly [{\n            readonly text: readonly [\"wrap\", \"nowrap\", \"balance\", \"pretty\"];\n        }];\n        /**\n         * Text Indent\n         * @see https://tailwindcss.com/docs/text-indent\n         */\n        readonly indent: readonly [{\n            readonly indent: readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Vertical Alignment\n         * @see https://tailwindcss.com/docs/vertical-align\n         */\n        readonly 'vertical-align': readonly [{\n            readonly align: readonly [\"baseline\", \"top\", \"middle\", \"bottom\", \"text-top\", \"text-bottom\", \"sub\", \"super\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Whitespace\n         * @see https://tailwindcss.com/docs/whitespace\n         */\n        readonly whitespace: readonly [{\n            readonly whitespace: readonly [\"normal\", \"nowrap\", \"pre\", \"pre-line\", \"pre-wrap\", \"break-spaces\"];\n        }];\n        /**\n         * Word Break\n         * @see https://tailwindcss.com/docs/word-break\n         */\n        readonly break: readonly [{\n            readonly break: readonly [\"normal\", \"words\", \"all\", \"keep\"];\n        }];\n        /**\n         * Overflow Wrap\n         * @see https://tailwindcss.com/docs/overflow-wrap\n         */\n        readonly wrap: readonly [{\n            readonly wrap: readonly [\"break-word\", \"anywhere\", \"normal\"];\n        }];\n        /**\n         * Hyphens\n         * @see https://tailwindcss.com/docs/hyphens\n         */\n        readonly hyphens: readonly [{\n            readonly hyphens: readonly [\"none\", \"manual\", \"auto\"];\n        }];\n        /**\n         * Content\n         * @see https://tailwindcss.com/docs/content\n         */\n        readonly content: readonly [{\n            readonly content: readonly [\"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Background Attachment\n         * @see https://tailwindcss.com/docs/background-attachment\n         */\n        readonly 'bg-attachment': readonly [{\n            readonly bg: readonly [\"fixed\", \"local\", \"scroll\"];\n        }];\n        /**\n         * Background Clip\n         * @see https://tailwindcss.com/docs/background-clip\n         */\n        readonly 'bg-clip': readonly [{\n            readonly 'bg-clip': readonly [\"border\", \"padding\", \"content\", \"text\"];\n        }];\n        /**\n         * Background Origin\n         * @see https://tailwindcss.com/docs/background-origin\n         */\n        readonly 'bg-origin': readonly [{\n            readonly 'bg-origin': readonly [\"border\", \"padding\", \"content\"];\n        }];\n        /**\n         * Background Position\n         * @see https://tailwindcss.com/docs/background-position\n         */\n        readonly 'bg-position': readonly [{\n            readonly bg: readonly [\"center\", \"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"left-top\", \"top-right\", \"right-top\", \"bottom-right\", \"right-bottom\", \"bottom-left\", \"left-bottom\", (value: string) => boolean, (value: string) => boolean, {\n                readonly position: readonly [(value: string) => boolean, (value: string) => boolean];\n            }];\n        }];\n        /**\n         * Background Repeat\n         * @see https://tailwindcss.com/docs/background-repeat\n         */\n        readonly 'bg-repeat': readonly [{\n            readonly bg: readonly [\"no-repeat\", {\n                readonly repeat: readonly [\"\", \"x\", \"y\", \"space\", \"round\"];\n            }];\n        }];\n        /**\n         * Background Size\n         * @see https://tailwindcss.com/docs/background-size\n         */\n        readonly 'bg-size': readonly [{\n            readonly bg: readonly [\"auto\", \"cover\", \"contain\", (value: string) => boolean, (value: string) => boolean, {\n                readonly size: readonly [(value: string) => boolean, (value: string) => boolean];\n            }];\n        }];\n        /**\n         * Background Image\n         * @see https://tailwindcss.com/docs/background-image\n         */\n        readonly 'bg-image': readonly [{\n            readonly bg: readonly [\"none\", {\n                readonly linear: readonly [{\n                    readonly to: readonly [\"t\", \"tr\", \"r\", \"br\", \"b\", \"bl\", \"l\", \"tl\"];\n                }, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n                readonly radial: readonly [\"\", (value: string) => boolean, (value: string) => boolean];\n                readonly conic: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n            }, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Background Color\n         * @see https://tailwindcss.com/docs/background-color\n         */\n        readonly 'bg-color': readonly [{\n            readonly bg: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Gradient Color Stops From Position\n         * @see https://tailwindcss.com/docs/gradient-color-stops\n         */\n        readonly 'gradient-from-pos': readonly [{\n            readonly from: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Gradient Color Stops Via Position\n         * @see https://tailwindcss.com/docs/gradient-color-stops\n         */\n        readonly 'gradient-via-pos': readonly [{\n            readonly via: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Gradient Color Stops To Position\n         * @see https://tailwindcss.com/docs/gradient-color-stops\n         */\n        readonly 'gradient-to-pos': readonly [{\n            readonly to: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Gradient Color Stops From\n         * @see https://tailwindcss.com/docs/gradient-color-stops\n         */\n        readonly 'gradient-from': readonly [{\n            readonly from: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Gradient Color Stops Via\n         * @see https://tailwindcss.com/docs/gradient-color-stops\n         */\n        readonly 'gradient-via': readonly [{\n            readonly via: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Gradient Color Stops To\n         * @see https://tailwindcss.com/docs/gradient-color-stops\n         */\n        readonly 'gradient-to': readonly [{\n            readonly to: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly rounded: readonly [{\n            readonly rounded: readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Start\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-s': readonly [{\n            readonly 'rounded-s': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius End\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-e': readonly [{\n            readonly 'rounded-e': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Top\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-t': readonly [{\n            readonly 'rounded-t': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Right\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-r': readonly [{\n            readonly 'rounded-r': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Bottom\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-b': readonly [{\n            readonly 'rounded-b': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Left\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-l': readonly [{\n            readonly 'rounded-l': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Start Start\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-ss': readonly [{\n            readonly 'rounded-ss': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Start End\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-se': readonly [{\n            readonly 'rounded-se': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius End End\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-ee': readonly [{\n            readonly 'rounded-ee': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius End Start\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-es': readonly [{\n            readonly 'rounded-es': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Top Left\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-tl': readonly [{\n            readonly 'rounded-tl': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Top Right\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-tr': readonly [{\n            readonly 'rounded-tr': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Bottom Right\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-br': readonly [{\n            readonly 'rounded-br': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Radius Bottom Left\n         * @see https://tailwindcss.com/docs/border-radius\n         */\n        readonly 'rounded-bl': readonly [{\n            readonly 'rounded-bl': readonly [\"\", \"none\", \"full\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w': readonly [{\n            readonly border: readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width X\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w-x': readonly [{\n            readonly 'border-x': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width Y\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w-y': readonly [{\n            readonly 'border-y': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width Start\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w-s': readonly [{\n            readonly 'border-s': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width End\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w-e': readonly [{\n            readonly 'border-e': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width Top\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w-t': readonly [{\n            readonly 'border-t': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width Right\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w-r': readonly [{\n            readonly 'border-r': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width Bottom\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w-b': readonly [{\n            readonly 'border-b': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Width Left\n         * @see https://tailwindcss.com/docs/border-width\n         */\n        readonly 'border-w-l': readonly [{\n            readonly 'border-l': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Divide Width X\n         * @see https://tailwindcss.com/docs/border-width#between-children\n         */\n        readonly 'divide-x': readonly [{\n            readonly 'divide-x': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Divide Width X Reverse\n         * @see https://tailwindcss.com/docs/border-width#between-children\n         */\n        readonly 'divide-x-reverse': readonly [\"divide-x-reverse\"];\n        /**\n         * Divide Width Y\n         * @see https://tailwindcss.com/docs/border-width#between-children\n         */\n        readonly 'divide-y': readonly [{\n            readonly 'divide-y': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Divide Width Y Reverse\n         * @see https://tailwindcss.com/docs/border-width#between-children\n         */\n        readonly 'divide-y-reverse': readonly [\"divide-y-reverse\"];\n        /**\n         * Border Style\n         * @see https://tailwindcss.com/docs/border-style\n         */\n        readonly 'border-style': readonly [{\n            readonly border: readonly [\"solid\", \"dashed\", \"dotted\", \"double\", \"hidden\", \"none\"];\n        }];\n        /**\n         * Divide Style\n         * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n         */\n        readonly 'divide-style': readonly [{\n            readonly divide: readonly [\"solid\", \"dashed\", \"dotted\", \"double\", \"hidden\", \"none\"];\n        }];\n        /**\n         * Border Color\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color': readonly [{\n            readonly border: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Color X\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color-x': readonly [{\n            readonly 'border-x': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Color Y\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color-y': readonly [{\n            readonly 'border-y': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Color S\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color-s': readonly [{\n            readonly 'border-s': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Color E\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color-e': readonly [{\n            readonly 'border-e': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Color Top\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color-t': readonly [{\n            readonly 'border-t': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Color Right\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color-r': readonly [{\n            readonly 'border-r': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Color Bottom\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color-b': readonly [{\n            readonly 'border-b': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Color Left\n         * @see https://tailwindcss.com/docs/border-color\n         */\n        readonly 'border-color-l': readonly [{\n            readonly 'border-l': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Divide Color\n         * @see https://tailwindcss.com/docs/divide-color\n         */\n        readonly 'divide-color': readonly [{\n            readonly divide: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Outline Style\n         * @see https://tailwindcss.com/docs/outline-style\n         */\n        readonly 'outline-style': readonly [{\n            readonly outline: readonly [\"solid\", \"dashed\", \"dotted\", \"double\", \"none\", \"hidden\"];\n        }];\n        /**\n         * Outline Offset\n         * @see https://tailwindcss.com/docs/outline-offset\n         */\n        readonly 'outline-offset': readonly [{\n            readonly 'outline-offset': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Outline Width\n         * @see https://tailwindcss.com/docs/outline-width\n         */\n        readonly 'outline-w': readonly [{\n            readonly outline: readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Outline Color\n         * @see https://tailwindcss.com/docs/outline-color\n         */\n        readonly 'outline-color': readonly [{\n            readonly outline: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Box Shadow\n         * @see https://tailwindcss.com/docs/box-shadow\n         */\n        readonly shadow: readonly [{\n            readonly shadow: readonly [\"\", \"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Box Shadow Color\n         * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n         */\n        readonly 'shadow-color': readonly [{\n            readonly shadow: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Inset Box Shadow\n         * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n         */\n        readonly 'inset-shadow': readonly [{\n            readonly 'inset-shadow': readonly [\"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Inset Box Shadow Color\n         * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n         */\n        readonly 'inset-shadow-color': readonly [{\n            readonly 'inset-shadow': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Ring Width\n         * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n         */\n        readonly 'ring-w': readonly [{\n            readonly ring: readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Ring Width Inset\n         * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n         * @deprecated since Tailwind CSS v4.0.0\n         * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n         */\n        readonly 'ring-w-inset': readonly [\"ring-inset\"];\n        /**\n         * Ring Color\n         * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n         */\n        readonly 'ring-color': readonly [{\n            readonly ring: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Ring Offset Width\n         * @see https://v3.tailwindcss.com/docs/ring-offset-width\n         * @deprecated since Tailwind CSS v4.0.0\n         * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n         */\n        readonly 'ring-offset-w': readonly [{\n            readonly 'ring-offset': readonly [(value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Ring Offset Color\n         * @see https://v3.tailwindcss.com/docs/ring-offset-color\n         * @deprecated since Tailwind CSS v4.0.0\n         * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n         */\n        readonly 'ring-offset-color': readonly [{\n            readonly 'ring-offset': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Inset Ring Width\n         * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n         */\n        readonly 'inset-ring-w': readonly [{\n            readonly 'inset-ring': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Inset Ring Color\n         * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n         */\n        readonly 'inset-ring-color': readonly [{\n            readonly 'inset-ring': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Text Shadow\n         * @see https://tailwindcss.com/docs/text-shadow\n         */\n        readonly 'text-shadow': readonly [{\n            readonly 'text-shadow': readonly [\"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Text Shadow Color\n         * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n         */\n        readonly 'text-shadow-color': readonly [{\n            readonly 'text-shadow': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Opacity\n         * @see https://tailwindcss.com/docs/opacity\n         */\n        readonly opacity: readonly [{\n            readonly opacity: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Mix Blend Mode\n         * @see https://tailwindcss.com/docs/mix-blend-mode\n         */\n        readonly 'mix-blend': readonly [{\n            readonly 'mix-blend': readonly [\"normal\", \"multiply\", \"screen\", \"overlay\", \"darken\", \"lighten\", \"color-dodge\", \"color-burn\", \"hard-light\", \"soft-light\", \"difference\", \"exclusion\", \"hue\", \"saturation\", \"color\", \"luminosity\", \"plus-darker\", \"plus-lighter\"];\n        }];\n        /**\n         * Background Blend Mode\n         * @see https://tailwindcss.com/docs/background-blend-mode\n         */\n        readonly 'bg-blend': readonly [{\n            readonly 'bg-blend': readonly [\"normal\", \"multiply\", \"screen\", \"overlay\", \"darken\", \"lighten\", \"color-dodge\", \"color-burn\", \"hard-light\", \"soft-light\", \"difference\", \"exclusion\", \"hue\", \"saturation\", \"color\", \"luminosity\"];\n        }];\n        /**\n         * Mask Clip\n         * @see https://tailwindcss.com/docs/mask-clip\n         */\n        readonly 'mask-clip': readonly [{\n            readonly 'mask-clip': readonly [\"border\", \"padding\", \"content\", \"fill\", \"stroke\", \"view\"];\n        }, \"mask-no-clip\"];\n        /**\n         * Mask Composite\n         * @see https://tailwindcss.com/docs/mask-composite\n         */\n        readonly 'mask-composite': readonly [{\n            readonly mask: readonly [\"add\", \"subtract\", \"intersect\", \"exclude\"];\n        }];\n        /**\n         * Mask Image\n         * @see https://tailwindcss.com/docs/mask-image\n         */\n        readonly 'mask-image-linear-pos': readonly [{\n            readonly 'mask-linear': readonly [(value: string) => boolean];\n        }];\n        readonly 'mask-image-linear-from-pos': readonly [{\n            readonly 'mask-linear-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-linear-to-pos': readonly [{\n            readonly 'mask-linear-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-linear-from-color': readonly [{\n            readonly 'mask-linear-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-linear-to-color': readonly [{\n            readonly 'mask-linear-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-t-from-pos': readonly [{\n            readonly 'mask-t-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-t-to-pos': readonly [{\n            readonly 'mask-t-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-t-from-color': readonly [{\n            readonly 'mask-t-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-t-to-color': readonly [{\n            readonly 'mask-t-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-r-from-pos': readonly [{\n            readonly 'mask-r-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-r-to-pos': readonly [{\n            readonly 'mask-r-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-r-from-color': readonly [{\n            readonly 'mask-r-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-r-to-color': readonly [{\n            readonly 'mask-r-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-b-from-pos': readonly [{\n            readonly 'mask-b-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-b-to-pos': readonly [{\n            readonly 'mask-b-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-b-from-color': readonly [{\n            readonly 'mask-b-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-b-to-color': readonly [{\n            readonly 'mask-b-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-l-from-pos': readonly [{\n            readonly 'mask-l-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-l-to-pos': readonly [{\n            readonly 'mask-l-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-l-from-color': readonly [{\n            readonly 'mask-l-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-l-to-color': readonly [{\n            readonly 'mask-l-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-x-from-pos': readonly [{\n            readonly 'mask-x-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-x-to-pos': readonly [{\n            readonly 'mask-x-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-x-from-color': readonly [{\n            readonly 'mask-x-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-x-to-color': readonly [{\n            readonly 'mask-x-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-y-from-pos': readonly [{\n            readonly 'mask-y-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-y-to-pos': readonly [{\n            readonly 'mask-y-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-y-from-color': readonly [{\n            readonly 'mask-y-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-y-to-color': readonly [{\n            readonly 'mask-y-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-radial': readonly [{\n            readonly 'mask-radial': readonly [(value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-radial-from-pos': readonly [{\n            readonly 'mask-radial-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-radial-to-pos': readonly [{\n            readonly 'mask-radial-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-radial-from-color': readonly [{\n            readonly 'mask-radial-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-radial-to-color': readonly [{\n            readonly 'mask-radial-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-radial-shape': readonly [{\n            readonly 'mask-radial': readonly [\"circle\", \"ellipse\"];\n        }];\n        readonly 'mask-image-radial-size': readonly [{\n            readonly 'mask-radial': readonly [{\n                readonly closest: readonly [\"side\", \"corner\"];\n                readonly farthest: readonly [\"side\", \"corner\"];\n            }];\n        }];\n        readonly 'mask-image-radial-pos': readonly [{\n            readonly 'mask-radial-at': readonly [\"center\", \"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"left-top\", \"top-right\", \"right-top\", \"bottom-right\", \"right-bottom\", \"bottom-left\", \"left-bottom\"];\n        }];\n        readonly 'mask-image-conic-pos': readonly [{\n            readonly 'mask-conic': readonly [(value: string) => boolean];\n        }];\n        readonly 'mask-image-conic-from-pos': readonly [{\n            readonly 'mask-conic-from': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-conic-to-pos': readonly [{\n            readonly 'mask-conic-to': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-conic-from-color': readonly [{\n            readonly 'mask-conic-from': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        readonly 'mask-image-conic-to-color': readonly [{\n            readonly 'mask-conic-to': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Mask Mode\n         * @see https://tailwindcss.com/docs/mask-mode\n         */\n        readonly 'mask-mode': readonly [{\n            readonly mask: readonly [\"alpha\", \"luminance\", \"match\"];\n        }];\n        /**\n         * Mask Origin\n         * @see https://tailwindcss.com/docs/mask-origin\n         */\n        readonly 'mask-origin': readonly [{\n            readonly 'mask-origin': readonly [\"border\", \"padding\", \"content\", \"fill\", \"stroke\", \"view\"];\n        }];\n        /**\n         * Mask Position\n         * @see https://tailwindcss.com/docs/mask-position\n         */\n        readonly 'mask-position': readonly [{\n            readonly mask: readonly [\"center\", \"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"left-top\", \"top-right\", \"right-top\", \"bottom-right\", \"right-bottom\", \"bottom-left\", \"left-bottom\", (value: string) => boolean, (value: string) => boolean, {\n                readonly position: readonly [(value: string) => boolean, (value: string) => boolean];\n            }];\n        }];\n        /**\n         * Mask Repeat\n         * @see https://tailwindcss.com/docs/mask-repeat\n         */\n        readonly 'mask-repeat': readonly [{\n            readonly mask: readonly [\"no-repeat\", {\n                readonly repeat: readonly [\"\", \"x\", \"y\", \"space\", \"round\"];\n            }];\n        }];\n        /**\n         * Mask Size\n         * @see https://tailwindcss.com/docs/mask-size\n         */\n        readonly 'mask-size': readonly [{\n            readonly mask: readonly [\"auto\", \"cover\", \"contain\", (value: string) => boolean, (value: string) => boolean, {\n                readonly size: readonly [(value: string) => boolean, (value: string) => boolean];\n            }];\n        }];\n        /**\n         * Mask Type\n         * @see https://tailwindcss.com/docs/mask-type\n         */\n        readonly 'mask-type': readonly [{\n            readonly 'mask-type': readonly [\"alpha\", \"luminance\"];\n        }];\n        /**\n         * Mask Image\n         * @see https://tailwindcss.com/docs/mask-image\n         */\n        readonly 'mask-image': readonly [{\n            readonly mask: readonly [\"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Filter\n         * @see https://tailwindcss.com/docs/filter\n         */\n        readonly filter: readonly [{\n            readonly filter: readonly [\"\", \"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Blur\n         * @see https://tailwindcss.com/docs/blur\n         */\n        readonly blur: readonly [{\n            readonly blur: readonly [\"\", \"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Brightness\n         * @see https://tailwindcss.com/docs/brightness\n         */\n        readonly brightness: readonly [{\n            readonly brightness: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Contrast\n         * @see https://tailwindcss.com/docs/contrast\n         */\n        readonly contrast: readonly [{\n            readonly contrast: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Drop Shadow\n         * @see https://tailwindcss.com/docs/drop-shadow\n         */\n        readonly 'drop-shadow': readonly [{\n            readonly 'drop-shadow': readonly [\"\", \"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Drop Shadow Color\n         * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n         */\n        readonly 'drop-shadow-color': readonly [{\n            readonly 'drop-shadow': readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Grayscale\n         * @see https://tailwindcss.com/docs/grayscale\n         */\n        readonly grayscale: readonly [{\n            readonly grayscale: readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Hue Rotate\n         * @see https://tailwindcss.com/docs/hue-rotate\n         */\n        readonly 'hue-rotate': readonly [{\n            readonly 'hue-rotate': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Invert\n         * @see https://tailwindcss.com/docs/invert\n         */\n        readonly invert: readonly [{\n            readonly invert: readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Saturate\n         * @see https://tailwindcss.com/docs/saturate\n         */\n        readonly saturate: readonly [{\n            readonly saturate: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Sepia\n         * @see https://tailwindcss.com/docs/sepia\n         */\n        readonly sepia: readonly [{\n            readonly sepia: readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Filter\n         * @see https://tailwindcss.com/docs/backdrop-filter\n         */\n        readonly 'backdrop-filter': readonly [{\n            readonly 'backdrop-filter': readonly [\"\", \"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Blur\n         * @see https://tailwindcss.com/docs/backdrop-blur\n         */\n        readonly 'backdrop-blur': readonly [{\n            readonly 'backdrop-blur': readonly [\"\", \"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Brightness\n         * @see https://tailwindcss.com/docs/backdrop-brightness\n         */\n        readonly 'backdrop-brightness': readonly [{\n            readonly 'backdrop-brightness': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Contrast\n         * @see https://tailwindcss.com/docs/backdrop-contrast\n         */\n        readonly 'backdrop-contrast': readonly [{\n            readonly 'backdrop-contrast': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Grayscale\n         * @see https://tailwindcss.com/docs/backdrop-grayscale\n         */\n        readonly 'backdrop-grayscale': readonly [{\n            readonly 'backdrop-grayscale': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Hue Rotate\n         * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n         */\n        readonly 'backdrop-hue-rotate': readonly [{\n            readonly 'backdrop-hue-rotate': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Invert\n         * @see https://tailwindcss.com/docs/backdrop-invert\n         */\n        readonly 'backdrop-invert': readonly [{\n            readonly 'backdrop-invert': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Opacity\n         * @see https://tailwindcss.com/docs/backdrop-opacity\n         */\n        readonly 'backdrop-opacity': readonly [{\n            readonly 'backdrop-opacity': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Saturate\n         * @see https://tailwindcss.com/docs/backdrop-saturate\n         */\n        readonly 'backdrop-saturate': readonly [{\n            readonly 'backdrop-saturate': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backdrop Sepia\n         * @see https://tailwindcss.com/docs/backdrop-sepia\n         */\n        readonly 'backdrop-sepia': readonly [{\n            readonly 'backdrop-sepia': readonly [\"\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Border Collapse\n         * @see https://tailwindcss.com/docs/border-collapse\n         */\n        readonly 'border-collapse': readonly [{\n            readonly border: readonly [\"collapse\", \"separate\"];\n        }];\n        /**\n         * Border Spacing\n         * @see https://tailwindcss.com/docs/border-spacing\n         */\n        readonly 'border-spacing': readonly [{\n            readonly 'border-spacing': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Border Spacing X\n         * @see https://tailwindcss.com/docs/border-spacing\n         */\n        readonly 'border-spacing-x': readonly [{\n            readonly 'border-spacing-x': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Border Spacing Y\n         * @see https://tailwindcss.com/docs/border-spacing\n         */\n        readonly 'border-spacing-y': readonly [{\n            readonly 'border-spacing-y': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Table Layout\n         * @see https://tailwindcss.com/docs/table-layout\n         */\n        readonly 'table-layout': readonly [{\n            readonly table: readonly [\"auto\", \"fixed\"];\n        }];\n        /**\n         * Caption Side\n         * @see https://tailwindcss.com/docs/caption-side\n         */\n        readonly caption: readonly [{\n            readonly caption: readonly [\"top\", \"bottom\"];\n        }];\n        /**\n         * Transition Property\n         * @see https://tailwindcss.com/docs/transition-property\n         */\n        readonly transition: readonly [{\n            readonly transition: readonly [\"\", \"all\", \"colors\", \"opacity\", \"shadow\", \"transform\", \"none\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Transition Behavior\n         * @see https://tailwindcss.com/docs/transition-behavior\n         */\n        readonly 'transition-behavior': readonly [{\n            readonly transition: readonly [\"normal\", \"discrete\"];\n        }];\n        /**\n         * Transition Duration\n         * @see https://tailwindcss.com/docs/transition-duration\n         */\n        readonly duration: readonly [{\n            readonly duration: readonly [(value: string) => boolean, \"initial\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Transition Timing Function\n         * @see https://tailwindcss.com/docs/transition-timing-function\n         */\n        readonly ease: readonly [{\n            readonly ease: readonly [\"linear\", \"initial\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Transition Delay\n         * @see https://tailwindcss.com/docs/transition-delay\n         */\n        readonly delay: readonly [{\n            readonly delay: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Animation\n         * @see https://tailwindcss.com/docs/animation\n         */\n        readonly animate: readonly [{\n            readonly animate: readonly [\"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Backface Visibility\n         * @see https://tailwindcss.com/docs/backface-visibility\n         */\n        readonly backface: readonly [{\n            readonly backface: readonly [\"hidden\", \"visible\"];\n        }];\n        /**\n         * Perspective\n         * @see https://tailwindcss.com/docs/perspective\n         */\n        readonly perspective: readonly [{\n            readonly perspective: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Perspective Origin\n         * @see https://tailwindcss.com/docs/perspective-origin\n         */\n        readonly 'perspective-origin': readonly [{\n            readonly 'perspective-origin': readonly [\"center\", \"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"left-top\", \"top-right\", \"right-top\", \"bottom-right\", \"right-bottom\", \"bottom-left\", \"left-bottom\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Rotate\n         * @see https://tailwindcss.com/docs/rotate\n         */\n        readonly rotate: readonly [{\n            readonly rotate: readonly [\"none\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Rotate X\n         * @see https://tailwindcss.com/docs/rotate\n         */\n        readonly 'rotate-x': readonly [{\n            readonly 'rotate-x': readonly [\"none\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Rotate Y\n         * @see https://tailwindcss.com/docs/rotate\n         */\n        readonly 'rotate-y': readonly [{\n            readonly 'rotate-y': readonly [\"none\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Rotate Z\n         * @see https://tailwindcss.com/docs/rotate\n         */\n        readonly 'rotate-z': readonly [{\n            readonly 'rotate-z': readonly [\"none\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Scale\n         * @see https://tailwindcss.com/docs/scale\n         */\n        readonly scale: readonly [{\n            readonly scale: readonly [\"none\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Scale X\n         * @see https://tailwindcss.com/docs/scale\n         */\n        readonly 'scale-x': readonly [{\n            readonly 'scale-x': readonly [\"none\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Scale Y\n         * @see https://tailwindcss.com/docs/scale\n         */\n        readonly 'scale-y': readonly [{\n            readonly 'scale-y': readonly [\"none\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Scale Z\n         * @see https://tailwindcss.com/docs/scale\n         */\n        readonly 'scale-z': readonly [{\n            readonly 'scale-z': readonly [\"none\", (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Scale 3D\n         * @see https://tailwindcss.com/docs/scale\n         */\n        readonly 'scale-3d': readonly [\"scale-3d\"];\n        /**\n         * Skew\n         * @see https://tailwindcss.com/docs/skew\n         */\n        readonly skew: readonly [{\n            readonly skew: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Skew X\n         * @see https://tailwindcss.com/docs/skew\n         */\n        readonly 'skew-x': readonly [{\n            readonly 'skew-x': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Skew Y\n         * @see https://tailwindcss.com/docs/skew\n         */\n        readonly 'skew-y': readonly [{\n            readonly 'skew-y': readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Transform\n         * @see https://tailwindcss.com/docs/transform\n         */\n        readonly transform: readonly [{\n            readonly transform: readonly [(value: string) => boolean, (value: string) => boolean, \"\", \"none\", \"gpu\", \"cpu\"];\n        }];\n        /**\n         * Transform Origin\n         * @see https://tailwindcss.com/docs/transform-origin\n         */\n        readonly 'transform-origin': readonly [{\n            readonly origin: readonly [\"center\", \"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"left-top\", \"top-right\", \"right-top\", \"bottom-right\", \"right-bottom\", \"bottom-left\", \"left-bottom\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Transform Style\n         * @see https://tailwindcss.com/docs/transform-style\n         */\n        readonly 'transform-style': readonly [{\n            readonly transform: readonly [\"3d\", \"flat\"];\n        }];\n        /**\n         * Translate\n         * @see https://tailwindcss.com/docs/translate\n         */\n        readonly translate: readonly [{\n            readonly translate: readonly [(value: string) => boolean, \"full\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Translate X\n         * @see https://tailwindcss.com/docs/translate\n         */\n        readonly 'translate-x': readonly [{\n            readonly 'translate-x': readonly [(value: string) => boolean, \"full\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Translate Y\n         * @see https://tailwindcss.com/docs/translate\n         */\n        readonly 'translate-y': readonly [{\n            readonly 'translate-y': readonly [(value: string) => boolean, \"full\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Translate Z\n         * @see https://tailwindcss.com/docs/translate\n         */\n        readonly 'translate-z': readonly [{\n            readonly 'translate-z': readonly [(value: string) => boolean, \"full\", (value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Translate None\n         * @see https://tailwindcss.com/docs/translate\n         */\n        readonly 'translate-none': readonly [\"translate-none\"];\n        /**\n         * Accent Color\n         * @see https://tailwindcss.com/docs/accent-color\n         */\n        readonly accent: readonly [{\n            readonly accent: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Appearance\n         * @see https://tailwindcss.com/docs/appearance\n         */\n        readonly appearance: readonly [{\n            readonly appearance: readonly [\"none\", \"auto\"];\n        }];\n        /**\n         * Caret Color\n         * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n         */\n        readonly 'caret-color': readonly [{\n            readonly caret: readonly [ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Color Scheme\n         * @see https://tailwindcss.com/docs/color-scheme\n         */\n        readonly 'color-scheme': readonly [{\n            readonly scheme: readonly [\"normal\", \"dark\", \"light\", \"light-dark\", \"only-dark\", \"only-light\"];\n        }];\n        /**\n         * Cursor\n         * @see https://tailwindcss.com/docs/cursor\n         */\n        readonly cursor: readonly [{\n            readonly cursor: readonly [\"auto\", \"default\", \"pointer\", \"wait\", \"text\", \"move\", \"help\", \"not-allowed\", \"none\", \"context-menu\", \"progress\", \"cell\", \"crosshair\", \"vertical-text\", \"alias\", \"copy\", \"no-drop\", \"grab\", \"grabbing\", \"all-scroll\", \"col-resize\", \"row-resize\", \"n-resize\", \"e-resize\", \"s-resize\", \"w-resize\", \"ne-resize\", \"nw-resize\", \"se-resize\", \"sw-resize\", \"ew-resize\", \"ns-resize\", \"nesw-resize\", \"nwse-resize\", \"zoom-in\", \"zoom-out\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Field Sizing\n         * @see https://tailwindcss.com/docs/field-sizing\n         */\n        readonly 'field-sizing': readonly [{\n            readonly 'field-sizing': readonly [\"fixed\", \"content\"];\n        }];\n        /**\n         * Pointer Events\n         * @see https://tailwindcss.com/docs/pointer-events\n         */\n        readonly 'pointer-events': readonly [{\n            readonly 'pointer-events': readonly [\"auto\", \"none\"];\n        }];\n        /**\n         * Resize\n         * @see https://tailwindcss.com/docs/resize\n         */\n        readonly resize: readonly [{\n            readonly resize: readonly [\"none\", \"\", \"y\", \"x\"];\n        }];\n        /**\n         * Scroll Behavior\n         * @see https://tailwindcss.com/docs/scroll-behavior\n         */\n        readonly 'scroll-behavior': readonly [{\n            readonly scroll: readonly [\"auto\", \"smooth\"];\n        }];\n        /**\n         * Scroll Margin\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-m': readonly [{\n            readonly 'scroll-m': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Margin X\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-mx': readonly [{\n            readonly 'scroll-mx': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Margin Y\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-my': readonly [{\n            readonly 'scroll-my': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Margin Start\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-ms': readonly [{\n            readonly 'scroll-ms': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Margin End\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-me': readonly [{\n            readonly 'scroll-me': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Margin Top\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-mt': readonly [{\n            readonly 'scroll-mt': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Margin Right\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-mr': readonly [{\n            readonly 'scroll-mr': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Margin Bottom\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-mb': readonly [{\n            readonly 'scroll-mb': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Margin Left\n         * @see https://tailwindcss.com/docs/scroll-margin\n         */\n        readonly 'scroll-ml': readonly [{\n            readonly 'scroll-ml': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-p': readonly [{\n            readonly 'scroll-p': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding X\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-px': readonly [{\n            readonly 'scroll-px': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding Y\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-py': readonly [{\n            readonly 'scroll-py': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding Start\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-ps': readonly [{\n            readonly 'scroll-ps': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding End\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-pe': readonly [{\n            readonly 'scroll-pe': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding Top\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-pt': readonly [{\n            readonly 'scroll-pt': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding Right\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-pr': readonly [{\n            readonly 'scroll-pr': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding Bottom\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-pb': readonly [{\n            readonly 'scroll-pb': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Padding Left\n         * @see https://tailwindcss.com/docs/scroll-padding\n         */\n        readonly 'scroll-pl': readonly [{\n            readonly 'scroll-pl': readonly [(value: string) => boolean, (value: string) => boolean, ThemeGetter];\n        }];\n        /**\n         * Scroll Snap Align\n         * @see https://tailwindcss.com/docs/scroll-snap-align\n         */\n        readonly 'snap-align': readonly [{\n            readonly snap: readonly [\"start\", \"end\", \"center\", \"align-none\"];\n        }];\n        /**\n         * Scroll Snap Stop\n         * @see https://tailwindcss.com/docs/scroll-snap-stop\n         */\n        readonly 'snap-stop': readonly [{\n            readonly snap: readonly [\"normal\", \"always\"];\n        }];\n        /**\n         * Scroll Snap Type\n         * @see https://tailwindcss.com/docs/scroll-snap-type\n         */\n        readonly 'snap-type': readonly [{\n            readonly snap: readonly [\"none\", \"x\", \"y\", \"both\"];\n        }];\n        /**\n         * Scroll Snap Type Strictness\n         * @see https://tailwindcss.com/docs/scroll-snap-type\n         */\n        readonly 'snap-strictness': readonly [{\n            readonly snap: readonly [\"mandatory\", \"proximity\"];\n        }];\n        /**\n         * Touch Action\n         * @see https://tailwindcss.com/docs/touch-action\n         */\n        readonly touch: readonly [{\n            readonly touch: readonly [\"auto\", \"none\", \"manipulation\"];\n        }];\n        /**\n         * Touch Action X\n         * @see https://tailwindcss.com/docs/touch-action\n         */\n        readonly 'touch-x': readonly [{\n            readonly 'touch-pan': readonly [\"x\", \"left\", \"right\"];\n        }];\n        /**\n         * Touch Action Y\n         * @see https://tailwindcss.com/docs/touch-action\n         */\n        readonly 'touch-y': readonly [{\n            readonly 'touch-pan': readonly [\"y\", \"up\", \"down\"];\n        }];\n        /**\n         * Touch Action Pinch Zoom\n         * @see https://tailwindcss.com/docs/touch-action\n         */\n        readonly 'touch-pz': readonly [\"touch-pinch-zoom\"];\n        /**\n         * User Select\n         * @see https://tailwindcss.com/docs/user-select\n         */\n        readonly select: readonly [{\n            readonly select: readonly [\"none\", \"text\", \"all\", \"auto\"];\n        }];\n        /**\n         * Will Change\n         * @see https://tailwindcss.com/docs/will-change\n         */\n        readonly 'will-change': readonly [{\n            readonly 'will-change': readonly [\"auto\", \"scroll\", \"contents\", \"transform\", (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Fill\n         * @see https://tailwindcss.com/docs/fill\n         */\n        readonly fill: readonly [{\n            readonly fill: readonly [\"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Stroke Width\n         * @see https://tailwindcss.com/docs/stroke-width\n         */\n        readonly 'stroke-w': readonly [{\n            readonly stroke: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Stroke\n         * @see https://tailwindcss.com/docs/stroke\n         */\n        readonly stroke: readonly [{\n            readonly stroke: readonly [\"none\", ThemeGetter, (value: string) => boolean, (value: string) => boolean];\n        }];\n        /**\n         * Forced Color Adjust\n         * @see https://tailwindcss.com/docs/forced-color-adjust\n         */\n        readonly 'forced-color-adjust': readonly [{\n            readonly 'forced-color-adjust': readonly [\"auto\", \"none\"];\n        }];\n    };\n    readonly conflictingClassGroups: {\n        readonly overflow: readonly [\"overflow-x\", \"overflow-y\"];\n        readonly overscroll: readonly [\"overscroll-x\", \"overscroll-y\"];\n        readonly inset: readonly [\"inset-x\", \"inset-y\", \"start\", \"end\", \"top\", \"right\", \"bottom\", \"left\"];\n        readonly 'inset-x': readonly [\"right\", \"left\"];\n        readonly 'inset-y': readonly [\"top\", \"bottom\"];\n        readonly flex: readonly [\"basis\", \"grow\", \"shrink\"];\n        readonly gap: readonly [\"gap-x\", \"gap-y\"];\n        readonly p: readonly [\"px\", \"py\", \"ps\", \"pe\", \"pt\", \"pr\", \"pb\", \"pl\"];\n        readonly px: readonly [\"pr\", \"pl\"];\n        readonly py: readonly [\"pt\", \"pb\"];\n        readonly m: readonly [\"mx\", \"my\", \"ms\", \"me\", \"mt\", \"mr\", \"mb\", \"ml\"];\n        readonly mx: readonly [\"mr\", \"ml\"];\n        readonly my: readonly [\"mt\", \"mb\"];\n        readonly size: readonly [\"w\", \"h\"];\n        readonly 'font-size': readonly [\"leading\"];\n        readonly 'fvn-normal': readonly [\"fvn-ordinal\", \"fvn-slashed-zero\", \"fvn-figure\", \"fvn-spacing\", \"fvn-fraction\"];\n        readonly 'fvn-ordinal': readonly [\"fvn-normal\"];\n        readonly 'fvn-slashed-zero': readonly [\"fvn-normal\"];\n        readonly 'fvn-figure': readonly [\"fvn-normal\"];\n        readonly 'fvn-spacing': readonly [\"fvn-normal\"];\n        readonly 'fvn-fraction': readonly [\"fvn-normal\"];\n        readonly 'line-clamp': readonly [\"display\", \"overflow\"];\n        readonly rounded: readonly [\"rounded-s\", \"rounded-e\", \"rounded-t\", \"rounded-r\", \"rounded-b\", \"rounded-l\", \"rounded-ss\", \"rounded-se\", \"rounded-ee\", \"rounded-es\", \"rounded-tl\", \"rounded-tr\", \"rounded-br\", \"rounded-bl\"];\n        readonly 'rounded-s': readonly [\"rounded-ss\", \"rounded-es\"];\n        readonly 'rounded-e': readonly [\"rounded-se\", \"rounded-ee\"];\n        readonly 'rounded-t': readonly [\"rounded-tl\", \"rounded-tr\"];\n        readonly 'rounded-r': readonly [\"rounded-tr\", \"rounded-br\"];\n        readonly 'rounded-b': readonly [\"rounded-br\", \"rounded-bl\"];\n        readonly 'rounded-l': readonly [\"rounded-tl\", \"rounded-bl\"];\n        readonly 'border-spacing': readonly [\"border-spacing-x\", \"border-spacing-y\"];\n        readonly 'border-w': readonly [\"border-w-x\", \"border-w-y\", \"border-w-s\", \"border-w-e\", \"border-w-t\", \"border-w-r\", \"border-w-b\", \"border-w-l\"];\n        readonly 'border-w-x': readonly [\"border-w-r\", \"border-w-l\"];\n        readonly 'border-w-y': readonly [\"border-w-t\", \"border-w-b\"];\n        readonly 'border-color': readonly [\"border-color-x\", \"border-color-y\", \"border-color-s\", \"border-color-e\", \"border-color-t\", \"border-color-r\", \"border-color-b\", \"border-color-l\"];\n        readonly 'border-color-x': readonly [\"border-color-r\", \"border-color-l\"];\n        readonly 'border-color-y': readonly [\"border-color-t\", \"border-color-b\"];\n        readonly translate: readonly [\"translate-x\", \"translate-y\", \"translate-none\"];\n        readonly 'translate-none': readonly [\"translate\", \"translate-x\", \"translate-y\", \"translate-z\"];\n        readonly 'scroll-m': readonly [\"scroll-mx\", \"scroll-my\", \"scroll-ms\", \"scroll-me\", \"scroll-mt\", \"scroll-mr\", \"scroll-mb\", \"scroll-ml\"];\n        readonly 'scroll-mx': readonly [\"scroll-mr\", \"scroll-ml\"];\n        readonly 'scroll-my': readonly [\"scroll-mt\", \"scroll-mb\"];\n        readonly 'scroll-p': readonly [\"scroll-px\", \"scroll-py\", \"scroll-ps\", \"scroll-pe\", \"scroll-pt\", \"scroll-pr\", \"scroll-pb\", \"scroll-pl\"];\n        readonly 'scroll-px': readonly [\"scroll-pr\", \"scroll-pl\"];\n        readonly 'scroll-py': readonly [\"scroll-pt\", \"scroll-pb\"];\n        readonly touch: readonly [\"touch-x\", \"touch-y\", \"touch-pz\"];\n        readonly 'touch-x': readonly [\"touch\"];\n        readonly 'touch-y': readonly [\"touch\"];\n        readonly 'touch-pz': readonly [\"touch\"];\n    };\n    readonly conflictingClassGroupModifiers: {\n        readonly 'font-size': readonly [\"leading\"];\n    };\n    readonly orderSensitiveModifiers: [\"*\", \"**\", \"after\", \"backdrop\", \"before\", \"details-content\", \"file\", \"first-letter\", \"first-line\", \"marker\", \"placeholder\", \"selection\"];\n};\n\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig;\ndeclare const extendTailwindMerge: <AdditionalClassGroupIds extends string = never, AdditionalThemeGroupIds extends string = never>(configExtension: ConfigExtension<DefaultClassGroupIds | AdditionalClassGroupIds, DefaultThemeGroupIds | AdditionalThemeGroupIds> | CreateConfigSubsequent, ...createConfig: CreateConfigSubsequent[]) => (...classLists: ClassNameValue[]) => string;\n\ndeclare const fromTheme: <AdditionalThemeGroupIds extends string = never, DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) => ThemeGetter;\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\ndeclare const mergeConfigs: <ClassGroupIds extends string, ThemeGroupIds extends string = never>(baseConfig: AnyConfig, { cacheSize, prefix, experimentalParseClassName, extend, override, }: ConfigExtension<ClassGroupIds, ThemeGroupIds>) => AnyConfig;\n\ndeclare const twMerge: (...classLists: ClassNameValue[]) => string;\n\ndeclare const isFraction: (value: string) => boolean;\ndeclare const isNumber: (value: string) => boolean;\ndeclare const isInteger: (value: string) => boolean;\ndeclare const isPercent: (value: string) => boolean;\ndeclare const isTshirtSize: (value: string) => boolean;\ndeclare const isAny: () => boolean;\ndeclare const isAnyNonArbitrary: (value: string) => boolean;\ndeclare const isArbitrarySize: (value: string) => boolean;\ndeclare const isArbitraryValue: (value: string) => boolean;\ndeclare const isArbitraryLength: (value: string) => boolean;\ndeclare const isArbitraryNumber: (value: string) => boolean;\ndeclare const isArbitraryPosition: (value: string) => boolean;\ndeclare const isArbitraryImage: (value: string) => boolean;\ndeclare const isArbitraryShadow: (value: string) => boolean;\ndeclare const isArbitraryVariable: (value: string) => boolean;\ndeclare const isArbitraryVariableLength: (value: string) => boolean;\ndeclare const isArbitraryVariableFamilyName: (value: string) => boolean;\ndeclare const isArbitraryVariablePosition: (value: string) => boolean;\ndeclare const isArbitraryVariableSize: (value: string) => boolean;\ndeclare const isArbitraryVariableImage: (value: string) => boolean;\ndeclare const isArbitraryVariableShadow: (value: string) => boolean;\n\ndeclare const validators_d_isAny: typeof isAny;\ndeclare const validators_d_isAnyNonArbitrary: typeof isAnyNonArbitrary;\ndeclare const validators_d_isArbitraryImage: typeof isArbitraryImage;\ndeclare const validators_d_isArbitraryLength: typeof isArbitraryLength;\ndeclare const validators_d_isArbitraryNumber: typeof isArbitraryNumber;\ndeclare const validators_d_isArbitraryPosition: typeof isArbitraryPosition;\ndeclare const validators_d_isArbitraryShadow: typeof isArbitraryShadow;\ndeclare const validators_d_isArbitrarySize: typeof isArbitrarySize;\ndeclare const validators_d_isArbitraryValue: typeof isArbitraryValue;\ndeclare const validators_d_isArbitraryVariable: typeof isArbitraryVariable;\ndeclare const validators_d_isArbitraryVariableFamilyName: typeof isArbitraryVariableFamilyName;\ndeclare const validators_d_isArbitraryVariableImage: typeof isArbitraryVariableImage;\ndeclare const validators_d_isArbitraryVariableLength: typeof isArbitraryVariableLength;\ndeclare const validators_d_isArbitraryVariablePosition: typeof isArbitraryVariablePosition;\ndeclare const validators_d_isArbitraryVariableShadow: typeof isArbitraryVariableShadow;\ndeclare const validators_d_isArbitraryVariableSize: typeof isArbitraryVariableSize;\ndeclare const validators_d_isFraction: typeof isFraction;\ndeclare const validators_d_isInteger: typeof isInteger;\ndeclare const validators_d_isNumber: typeof isNumber;\ndeclare const validators_d_isPercent: typeof isPercent;\ndeclare const validators_d_isTshirtSize: typeof isTshirtSize;\ndeclare namespace validators_d {\n  export {\n    validators_d_isAny as isAny,\n    validators_d_isAnyNonArbitrary as isAnyNonArbitrary,\n    validators_d_isArbitraryImage as isArbitraryImage,\n    validators_d_isArbitraryLength as isArbitraryLength,\n    validators_d_isArbitraryNumber as isArbitraryNumber,\n    validators_d_isArbitraryPosition as isArbitraryPosition,\n    validators_d_isArbitraryShadow as isArbitraryShadow,\n    validators_d_isArbitrarySize as isArbitrarySize,\n    validators_d_isArbitraryValue as isArbitraryValue,\n    validators_d_isArbitraryVariable as isArbitraryVariable,\n    validators_d_isArbitraryVariableFamilyName as isArbitraryVariableFamilyName,\n    validators_d_isArbitraryVariableImage as isArbitraryVariableImage,\n    validators_d_isArbitraryVariableLength as isArbitraryVariableLength,\n    validators_d_isArbitraryVariablePosition as isArbitraryVariablePosition,\n    validators_d_isArbitraryVariableShadow as isArbitraryVariableShadow,\n    validators_d_isArbitraryVariableSize as isArbitraryVariableSize,\n    validators_d_isFraction as isFraction,\n    validators_d_isInteger as isInteger,\n    validators_d_isNumber as isNumber,\n    validators_d_isPercent as isPercent,\n    validators_d_isTshirtSize as isTshirtSize,\n  };\n}\n\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators_d as validators };\nexport type { ClassNameValue, ClassValidator, Config, ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds, ExperimentalParseClassNameParam, ParsedClassName as ExperimentalParsedClassName };\n"
        }
    ]
}
{
    "sourceFile": "node_modules/has-proto/test/mutator.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892323618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar gPO = require('reflect.getprototypeof/polyfill')();\nvar gOPD = require('gopd');\n\nvar hasProto = require('../');\nvar hasProtoMutator = require('../mutator');\n\nvar getter = require('dunder-proto/get');\n\ntest('hasProtoMutator', function (t) {\n\tvar result = hasProtoMutator();\n\tt.equal(typeof result, 'boolean', 'returns a boolean (' + result + ')');\n\n\tvar obj = { __proto__: null };\n\tif (result) {\n\t\tt.notOk('toString' in obj, 'null object lacks toString');\n\t\tt.equal(gPO(obj), null);\n\t\tif (gOPD && getter) {\n\t\t\tt.equal(getter(obj), null);\n\t\t}\n\t} else if (hasProto()) {\n\t\tt.notOk('toString' in obj, 'null object lacks toString');\n\t\tif (gOPD && getter) {\n\t\t\tt.equal(getter(obj), null);\n\t\t}\n\t} else {\n\t\tt.ok('toString' in obj, 'without proto, null object has toString');\n\t\tt.equal(gPO(obj), Object.prototype);\n\t}\n\n\tt.end();\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/minimist/test/unknown.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892612787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('boolean and alias is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar aliased = ['-h', 'true', '--derp', 'true'];\n\tvar regular = ['--herp', 'true', '-d', 'true'];\n\tvar opts = {\n\t\talias: { h: 'herp' },\n\t\tboolean: 'h',\n\t\tunknown: unknownFn,\n\t};\n\tparse(aliased, opts);\n\tparse(regular, opts);\n\n\tt.same(unknown, ['--derp', '-d']);\n\tt.end();\n});\n\ntest('flag boolean true any double hyphen argument is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar argv = parse(['--honk', '--tacos=good', 'cow', '-p', '55'], {\n\t\tboolean: true,\n\t\tunknown: unknownFn,\n\t});\n\tt.same(unknown, ['--tacos=good', 'cow', '-p']);\n\tt.same(argv, {\n\t\thonk: true,\n\t\t_: [],\n\t});\n\tt.end();\n});\n\ntest('string and alias is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar aliased = ['-h', 'hello', '--derp', 'goodbye'];\n\tvar regular = ['--herp', 'hello', '-d', 'moon'];\n\tvar opts = {\n\t\talias: { h: 'herp' },\n\t\tstring: 'h',\n\t\tunknown: unknownFn,\n\t};\n\tparse(aliased, opts);\n\tparse(regular, opts);\n\n\tt.same(unknown, ['--derp', '-d']);\n\tt.end();\n});\n\ntest('default and alias is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar aliased = ['-h', 'hello'];\n\tvar regular = ['--herp', 'hello'];\n\tvar opts = {\n\t\tdefault: { h: 'bar' },\n\t\talias: { h: 'herp' },\n\t\tunknown: unknownFn,\n\t};\n\tparse(aliased, opts);\n\tparse(regular, opts);\n\n\tt.same(unknown, []);\n\tt.end();\n\tunknownFn(); // exercise fn for 100% coverage\n});\n\ntest('value following -- is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar aliased = ['--bad', '--', 'good', 'arg'];\n\tvar opts = {\n\t\t'--': true,\n\t\tunknown: unknownFn,\n\t};\n\tvar argv = parse(aliased, opts);\n\n\tt.same(unknown, ['--bad']);\n\tt.same(argv, {\n\t\t'--': ['good', 'arg'],\n\t\t_: [],\n\t});\n\tt.end();\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/minimist/test/proto.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892612602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\n/* eslint no-proto: 0 */\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('proto pollution', function (t) {\n\tvar argv = parse(['--__proto__.x', '123']);\n\tt.equal({}.x, undefined);\n\tt.equal(argv.__proto__.x, undefined);\n\tt.equal(argv.x, undefined);\n\tt.end();\n});\n\ntest('proto pollution (array)', function (t) {\n\tvar argv = parse(['--x', '4', '--x', '5', '--x.__proto__.z', '789']);\n\tt.equal({}.z, undefined);\n\tt.deepEqual(argv.x, [4, 5]);\n\tt.equal(argv.x.z, undefined);\n\tt.equal(argv.x.__proto__.z, undefined);\n\tt.end();\n});\n\ntest('proto pollution (number)', function (t) {\n\tvar argv = parse(['--x', '5', '--x.__proto__.z', '100']);\n\tt.equal({}.z, undefined);\n\tt.equal((4).z, undefined);\n\tt.equal(argv.x, 5);\n\tt.equal(argv.x.z, undefined);\n\tt.end();\n});\n\ntest('proto pollution (string)', function (t) {\n\tvar argv = parse(['--x', 'abc', '--x.__proto__.z', 'def']);\n\tt.equal({}.z, undefined);\n\tt.equal('...'.z, undefined);\n\tt.equal(argv.x, 'abc');\n\tt.equal(argv.x.z, undefined);\n\tt.end();\n});\n\ntest('proto pollution (constructor)', function (t) {\n\tvar argv = parse(['--constructor.prototype.y', '123']);\n\tt.equal({}.y, undefined);\n\tt.equal(argv.y, undefined);\n\tt.end();\n});\n\ntest('proto pollution (constructor function)', function (t) {\n\tvar argv = parse(['--_.concat.constructor.prototype.y', '123']);\n\tfunction fnToBeTested() {}\n\tt.equal(fnToBeTested.y, undefined);\n\tt.equal(argv.y, undefined);\n\tt.end();\n});\n\n// powered by snyk - https://github.com/backstage/backstage/issues/10343\ntest('proto pollution (constructor function) snyk', function (t) {\n\tvar argv = parse('--_.constructor.constructor.prototype.foo bar'.split(' '));\n\tt.equal(function () {}.foo, undefined);\n\tt.equal(argv.y, undefined);\n\tt.end();\n});\n"
        }
    ]
}
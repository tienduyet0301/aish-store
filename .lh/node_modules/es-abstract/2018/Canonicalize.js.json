{
    "sourceFile": "node_modules/es-abstract/2018/Canonicalize.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892130051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar callBound = require('call-bound');\nvar hasOwn = require('hasown');\n\nvar $charCodeAt = callBound('String.prototype.charCodeAt');\nvar $toUpperCase = callBound('String.prototype.toUpperCase');\n\nvar caseFolding = require('../helpers/caseFolding.json');\n\n// https://262.ecma-international.org/6.0/#sec-runtime-semantics-canonicalize-ch\n\nmodule.exports = function Canonicalize(ch, IgnoreCase, Unicode) {\n\tif (typeof ch !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `ch` must be a character');\n\t}\n\n\tif (typeof IgnoreCase !== 'boolean' || typeof Unicode !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: `IgnoreCase` and `Unicode` must be Booleans');\n\t}\n\n\tif (!IgnoreCase) {\n\t\treturn ch; // step 1\n\t}\n\n\tif (Unicode) { // step 2\n\t\tif (hasOwn(caseFolding.C, ch)) {\n\t\t\treturn caseFolding.C[ch];\n\t\t}\n\t\tif (hasOwn(caseFolding.S, ch)) {\n\t\t\treturn caseFolding.S[ch];\n\t\t}\n\t\treturn ch; // step 2.b\n\t}\n\n\tvar u = $toUpperCase(ch); // step 2\n\n\tif (u.length !== 1) {\n\t\treturn ch; // step 3\n\t}\n\n\tvar cu = u; // step 4\n\n\tif ($charCodeAt(ch, 0) >= 128 && $charCodeAt(cu, 0) < 128) {\n\t\treturn ch; // step 5\n\t}\n\n\treturn cu;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2023/GetOwnPropertyKeys.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892165252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar hasSymbols = require('has-symbols')();\n\nvar $TypeError = require('es-errors/type');\n\nvar $gOPN = GetIntrinsic('%Object.getOwnPropertyNames%', true);\nvar $gOPS = hasSymbols && GetIntrinsic('%Object.getOwnPropertySymbols%', true);\nvar keys = require('object-keys');\n\nvar isObject = require('../helpers/isObject');\n\n// https://262.ecma-international.org/6.0/#sec-getownpropertykeys\n\nmodule.exports = function GetOwnPropertyKeys(O, Type) {\n\tif (!isObject(O)) {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tif (Type === 'Symbol') {\n\t\treturn $gOPS ? $gOPS(O) : [];\n\t}\n\tif (Type === 'String') {\n\t\tif (!$gOPN) {\n\t\t\treturn keys(O);\n\t\t}\n\t\treturn $gOPN(O);\n\t}\n\tthrow new $TypeError('Assertion failed: `Type` must be `\"String\"` or `\"Symbol\"`');\n};\n"
        }
    ]
}
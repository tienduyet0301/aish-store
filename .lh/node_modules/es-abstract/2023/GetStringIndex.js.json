{
    "sourceFile": "node_modules/es-abstract/2023/GetStringIndex.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892165310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar callBound = require('call-bound');\nvar $TypeError = require('es-errors/type');\nvar isInteger = require('math-intrinsics/isInteger');\n\nvar StringToCodePoints = require('./StringToCodePoints');\n\nvar $indexOf = callBound('String.prototype.indexOf');\n\n// https://262.ecma-international.org/13.0/#sec-getstringindex\n\nmodule.exports = function GetStringIndex(S, e) {\n\tif (typeof S !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tif (!isInteger(e) || e < 0) {\n\t\tthrow new $TypeError('Assertion failed: `e` must be a non-negative integer');\n\t}\n\n\tif (S === '') {\n\t\treturn 0;\n\t}\n\tvar codepoints = StringToCodePoints(S);\n\tvar eUTF = e >= codepoints.length ? S.length : $indexOf(S, codepoints[e]);\n\treturn eUTF;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2023/BigInt/toString.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892163242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar callBound = require('call-bound');\nvar isInteger = require('math-intrinsics/isInteger');\n\nvar $BigIntToString = callBound('BigInt.prototype.toString', true);\n\n// https://262.ecma-international.org/14.0/#sec-numeric-types-bigint-tostring\n\nmodule.exports = function BigIntToString(x, radix) {\n\tif (typeof x !== 'bigint') {\n\t\tthrow new $TypeError('Assertion failed: `x` must be a BigInt');\n\t}\n\n\tif (!isInteger(radix) || radix < 2 || radix > 36) {\n\t\tthrow new $TypeError('Assertion failed: `radix` must be an integer >= 2 and <= 36');\n\t}\n\n\tif (!$BigIntToString) {\n\t\tthrow new $SyntaxError('BigInt is not supported');\n\t}\n\n\treturn $BigIntToString(x, radix); // steps 1 - 12\n};\n"
        }
    ]
}
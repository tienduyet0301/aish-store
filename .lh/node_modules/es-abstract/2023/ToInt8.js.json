{
    "sourceFile": "node_modules/es-abstract/2023/ToInt8.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892169832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar modulo = require('./modulo');\nvar ToNumber = require('./ToNumber');\nvar truncate = require('./truncate');\n\nvar isFinite = require('math-intrinsics/isFinite');\n\n// https://262.ecma-international.org/14.0/#sec-toint8\n\nmodule.exports = function ToInt8(argument) {\n\tvar number = ToNumber(argument);\n\tif (!isFinite(number) || number === 0) {\n\t\treturn 0;\n\t}\n\tvar int = truncate(number);\n\tvar int8bit = modulo(int, 0x100);\n\treturn int8bit >= 0x80 ? int8bit - 0x100 : int8bit;\n};\n"
        }
    ]
}
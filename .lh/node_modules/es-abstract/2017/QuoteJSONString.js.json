{
    "sourceFile": "node_modules/es-abstract/2017/QuoteJSONString.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892128558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar callBound = require('call-bound');\nvar forEach = require('../helpers/forEach');\n\nvar $charCodeAt = callBound('String.prototype.charCodeAt');\nvar $numberToString = callBound('Number.prototype.toString');\nvar $toLowerCase = callBound('String.prototype.toLowerCase');\nvar $strSlice = callBound('String.prototype.slice');\nvar $strSplit = callBound('String.prototype.split');\n\n// https://262.ecma-international.org/6.0/#sec-quotejsonstring\n\nvar escapes = {\n\t'\\u0008': 'b',\n\t'\\u000C': 'f',\n\t'\\u000A': 'n',\n\t'\\u000D': 'r',\n\t'\\u0009': 't'\n};\n\nmodule.exports = function QuoteJSONString(value) {\n\tif (typeof value !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `value` must be a String');\n\t}\n\tvar product = '\"';\n\tif (value) {\n\t\tforEach($strSplit(value, ''), function (C) {\n\t\t\tif (C === '\"' || C === '\\\\') {\n\t\t\t\tproduct += '\\u005C' + C;\n\t\t\t} else if (C === '\\u0008' || C === '\\u000C' || C === '\\u000A' || C === '\\u000D' || C === '\\u0009') {\n\t\t\t\tvar abbrev = escapes[C];\n\t\t\t\tproduct += '\\u005C' + abbrev;\n\t\t\t} else {\n\t\t\t\tvar cCharCode = $charCodeAt(C, 0);\n\t\t\t\tif (cCharCode < 0x20) {\n\t\t\t\t\tproduct += '\\u005Cu' + $toLowerCase($strSlice('0000' + $numberToString(cCharCode, 16), -4));\n\t\t\t\t} else {\n\t\t\t\t\tproduct += C;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\tproduct += '\"';\n\treturn product;\n};\n"
        }
    ]
}
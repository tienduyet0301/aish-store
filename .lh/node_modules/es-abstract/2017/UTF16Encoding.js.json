{
    "sourceFile": "node_modules/es-abstract/2017/UTF16Encoding.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892129735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = require('es-errors/type');\nvar $fromCharCode = GetIntrinsic('%String.fromCharCode%');\n\nvar floor = require('./floor');\nvar modulo = require('./modulo');\n\nvar isCodePoint = require('../helpers/isCodePoint');\n\n// https://262.ecma-international.org/7.0/#sec-utf16encoding\n\nmodule.exports = function UTF16Encoding(cp) {\n\tif (!isCodePoint(cp)) {\n\t\tthrow new $TypeError('Assertion failed: `cp` must be >= 0 and <= 0x10FFFF');\n\t}\n\tif (cp <= 65535) {\n\t\treturn $fromCharCode(cp);\n\t}\n\tvar cu1 = floor((cp - 65536) / 1024) + 0xD800;\n\tvar cu2 = modulo(cp - 65536, 1024) + 0xDC00;\n\treturn $fromCharCode(cu1) + $fromCharCode(cu2);\n};\n"
        }
    ]
}
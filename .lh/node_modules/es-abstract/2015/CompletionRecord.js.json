{
    "sourceFile": "node_modules/es-abstract/2015/CompletionRecord.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892118728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $SyntaxError = require('es-errors/syntax');\n\nvar SLOT = require('internal-slot');\n\n// https://262.ecma-international.org/6.0/#sec-completion-record-specification-type\n\nvar CompletionRecord = function CompletionRecord(type, value) {\n\tif (!(this instanceof CompletionRecord)) {\n\t\treturn new CompletionRecord(type, value);\n\t}\n\tif (type !== 'normal' && type !== 'break' && type !== 'continue' && type !== 'return' && type !== 'throw') {\n\t\tthrow new $SyntaxError('Assertion failed: `type` must be one of \"normal\", \"break\", \"continue\", \"return\", or \"throw\"');\n\t}\n\tSLOT.set(this, '[[type]]', type);\n\tSLOT.set(this, '[[value]]', value);\n\t// [[target]] slot?\n};\n\nCompletionRecord.prototype.type = function type() {\n\treturn SLOT.get(this, '[[type]]');\n};\n\nCompletionRecord.prototype.value = function value() {\n\treturn SLOT.get(this, '[[value]]');\n};\n\nCompletionRecord.prototype['?'] = function ReturnIfAbrupt() {\n\tvar type = SLOT.get(this, '[[type]]');\n\tvar value = SLOT.get(this, '[[value]]');\n\n\tif (type === 'throw') {\n\t\tthrow value;\n\t}\n\treturn value;\n};\n\nCompletionRecord.prototype['!'] = function assert() {\n\tvar type = SLOT.get(this, '[[type]]');\n\n\tif (type !== 'normal') {\n\t\tthrow new $SyntaxError('Assertion failed: Completion Record is not of type \"normal\"');\n\t}\n\treturn SLOT.get(this, '[[value]]');\n};\n\nmodule.exports = CompletionRecord;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2015/IsWordChar.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892120631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsArray = require('./IsArray');\nvar IsInteger = require('./IsInteger');\n\nvar every = require('../helpers/every');\nvar regexTester = require('safe-regex-test');\n\nvar isChar = function isChar(c) {\n\treturn typeof c === 'string' && c.length === 1;\n};\n\nvar isWordCharacter = regexTester(/^[a-zA-Z0-9_]$/);\n\n// https://262.ecma-international.org/6.0/#sec-runtime-semantics-iswordchar-abstract-operation\n\n// note: prior to ES2023, this AO erroneously omitted the latter of its arguments.\nmodule.exports = function IsWordChar(e, InputLength, Input) {\n\tif (!IsInteger(e)) {\n\t\tthrow new $TypeError('Assertion failed: `e` must be an integer');\n\t}\n\tif (!IsInteger(InputLength)) {\n\t\tthrow new $TypeError('Assertion failed: `InputLength` must be an integer');\n\t}\n\tif (!IsArray(Input) || !every(Input, isChar)) {\n\t\tthrow new $TypeError('Assertion failed: `Input` must be a List of characters');\n\t}\n\tif (e === -1 || e === InputLength) {\n\t\treturn false; // step 1\n\t}\n\n\tvar c = Input[e]; // step 2\n\n\treturn isWordCharacter(c); // steps 3-4\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2015/StringGetIndexProperty.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892121799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar callBound = require('call-bound');\n\nvar $TypeError = require('es-errors/type');\n\nvar $charAt = callBound('String.prototype.charAt');\n\nvar isString = require('is-string');\nvar isNegativeZero = require('math-intrinsics/isNegativeZero');\nvar unbox = require('unbox-primitive');\n\nvar CanonicalNumericIndexString = require('./CanonicalNumericIndexString');\nvar IsInteger = require('./IsInteger');\nvar isPropertyKey = require('../helpers/isPropertyKey');\n\n// https://262.ecma-international.org/6.0/#sec-stringgetindexproperty\n\nmodule.exports = function StringGetIndexProperty(S, P) {\n\tif (typeof S === 'string' || !isString(S)) {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a boxed String Object');\n\t}\n\tif (!isPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: `P` must be a Property Key');\n\t}\n\n\tif (typeof P !== 'string') {\n\t\treturn void undefined;\n\t}\n\n\tvar index = CanonicalNumericIndexString(P);\n\tif (typeof index === 'undefined' || !IsInteger(index) || isNegativeZero(index)) {\n\t\treturn void undefined;\n\t}\n\n\tvar str = unbox(S);\n\tvar len = str.length;\n\tif (index < 0 || len <= index) {\n\t\treturn void undefined;\n\t}\n\n\tvar resultStr = $charAt(str, index);\n\n\treturn {\n\t\t'[[Configurable]]': false,\n\t\t'[[Enumerable]]': true,\n\t\t'[[Value]]': resultStr,\n\t\t'[[Writable]]': false\n\t};\n};\n"
        }
    ]
}
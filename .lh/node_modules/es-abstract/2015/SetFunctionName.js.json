{
    "sourceFile": "node_modules/es-abstract/2015/SetFunctionName.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892121566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar hasOwn = require('hasown');\n\nvar $TypeError = require('es-errors/type');\n\nvar getSymbolDescription = require('get-symbol-description');\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\nvar IsExtensible = require('./IsExtensible');\n\n// https://262.ecma-international.org/6.0/#sec-setfunctionname\n\nmodule.exports = function SetFunctionName(F, name) {\n\tif (typeof F !== 'function') {\n\t\tthrow new $TypeError('Assertion failed: `F` must be a function');\n\t}\n\tif (!IsExtensible(F) || hasOwn(F, 'name')) {\n\t\tthrow new $TypeError('Assertion failed: `F` must be extensible, and must not have a `name` own property');\n\t}\n\tif (typeof name !== 'symbol' && typeof name !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `name` must be a Symbol or a String');\n\t}\n\tif (typeof name === 'symbol') {\n\t\tvar description = getSymbolDescription(name);\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tname = typeof description === 'undefined' ? '' : '[' + description + ']';\n\t}\n\tif (arguments.length > 2) {\n\t\tvar prefix = arguments[2];\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tname = prefix + ' ' + name;\n\t}\n\treturn DefinePropertyOrThrow(F, 'name', {\n\t\t'[[Value]]': name,\n\t\t'[[Writable]]': false,\n\t\t'[[Enumerable]]': false,\n\t\t'[[Configurable]]': true\n\t});\n};\n"
        }
    ]
}
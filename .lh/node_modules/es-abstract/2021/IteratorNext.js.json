{
    "sourceFile": "node_modules/es-abstract/2021/IteratorNext.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892143972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Invoke = require('./Invoke');\n\nvar isObject = require('../helpers/isObject');\n\n// https://262.ecma-international.org/6.0/#sec-iteratornext\n\nmodule.exports = function IteratorNext(iterator, value) {\n\tvar result = Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n\tif (!isObject(result)) {\n\t\tthrow new $TypeError('iterator next must return an object');\n\t}\n\treturn result;\n};\n"
        }
    ]
}
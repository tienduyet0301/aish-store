{
    "sourceFile": "node_modules/es-abstract/2021/CharacterRange.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892142811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\n\nvar $fromCharCode = GetIntrinsic('%String.fromCharCode%');\nvar $TypeError = require('es-errors/type');\nvar $charCodeAt = callBound('String.prototype.charCodeAt');\nvar $push = callBound('Array.prototype.push');\n\nmodule.exports = function CharacterRange(A, B) {\n\tif (A.length !== 1 || B.length !== 1) {\n\t\tthrow new $TypeError('Assertion failed: CharSets A and B contain exactly one character');\n\t}\n\n\tvar a = A[0];\n\tvar b = B[0];\n\n\tvar i = $charCodeAt(a, 0);\n\tvar j = $charCodeAt(b, 0);\n\n\tif (!(i <= j)) {\n\t\tthrow new $TypeError('Assertion failed: i is not <= j');\n\t}\n\n\tvar arr = [];\n\tfor (var k = i; k <= j; k += 1) {\n\t\t$push(arr, $fromCharCode(k));\n\t}\n\treturn arr;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2019/RegExpCreate.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892134482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $RegExp = GetIntrinsic('%RegExp%');\n\n// var RegExpAlloc = require('./RegExpAlloc');\n// var RegExpInitialize = require('./RegExpInitialize');\nvar ToString = require('./ToString');\n\n// https://262.ecma-international.org/6.0/#sec-regexpcreate\n\nmodule.exports = function RegExpCreate(P, F) {\n\t// var obj = RegExpAlloc($RegExp);\n\t// return RegExpInitialize(obj, P, F);\n\n\t// covers spec mechanics; bypass regex brand checking\n\tvar pattern = typeof P === 'undefined' ? '' : ToString(P);\n\tvar flags = typeof F === 'undefined' ? '' : ToString(F);\n\treturn new $RegExp(pattern, flags);\n};\n"
        }
    ]
}
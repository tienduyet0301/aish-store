{
    "sourceFile": "node_modules/es-abstract/2019/Invoke.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892133707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar IsArray = require('./IsArray');\nvar GetV = require('./GetV');\nvar isPropertyKey = require('../helpers/isPropertyKey');\n\n// https://262.ecma-international.org/6.0/#sec-invoke\n\nmodule.exports = function Invoke(O, P) {\n\tif (!isPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tvar argumentsList = arguments.length > 2 ? arguments[2] : [];\n\tif (!IsArray(argumentsList)) {\n\t\tthrow new $TypeError('Assertion failed: optional `argumentsList`, if provided, must be a List');\n\t}\n\tvar func = GetV(O, P);\n\treturn Call(func, O, argumentsList);\n};\n"
        }
    ]
}
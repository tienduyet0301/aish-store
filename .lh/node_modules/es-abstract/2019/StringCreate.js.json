{
    "sourceFile": "node_modules/es-abstract/2019/StringCreate.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892134706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Object = require('es-object-atoms');\nvar $StringPrototype = GetIntrinsic('%String.prototype%');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar setProto = require('set-proto');\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\n\n// https://262.ecma-international.org/6.0/#sec-stringcreate\n\nmodule.exports = function StringCreate(value, prototype) {\n\tif (typeof value !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\n\tvar S = $Object(value);\n\tif (prototype !== $StringPrototype) {\n\t\tif (setProto) {\n\t\t\tsetProto(S, prototype);\n\t\t} else {\n\t\t\tthrow new $SyntaxError('StringCreate: a `proto` argument that is not `String.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n\t\t}\n\t}\n\n\tvar length = value.length;\n\tDefinePropertyOrThrow(S, 'length', {\n\t\t'[[Configurable]]': false,\n\t\t'[[Enumerable]]': false,\n\t\t'[[Value]]': length,\n\t\t'[[Writable]]': false\n\t});\n\n\treturn S;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2016/SplitMatch.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892124885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar callBound = require('call-bound');\n\nvar $TypeError = require('es-errors/type');\nvar isInteger = require('math-intrinsics/isInteger');\n\nvar $charAt = callBound('String.prototype.charAt');\n\n// https://262.ecma-international.org/6.0/#sec-splitmatch\n\nmodule.exports = function SplitMatch(S, q, R) {\n\tif (typeof S !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tif (!isInteger(q)) {\n\t\tthrow new $TypeError('Assertion failed: `q` must be an integer');\n\t}\n\tif (typeof R !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `R` must be a String');\n\t}\n\tvar r = R.length;\n\tvar s = S.length;\n\tif (q + r > s) {\n\t\treturn false;\n\t}\n\n\tfor (var i = 0; i < r; i += 1) {\n\t\tif ($charAt(S, q + i) !== $charAt(R, i)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn q + r;\n};\n"
        }
    ]
}
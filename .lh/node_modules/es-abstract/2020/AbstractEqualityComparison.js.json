{
    "sourceFile": "node_modules/es-abstract/2020/AbstractEqualityComparison.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892135664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar StrictEqualityComparison = require('./StrictEqualityComparison');\nvar StringToBigInt = require('./StringToBigInt');\nvar ToNumber = require('./ToNumber');\nvar ToPrimitive = require('./ToPrimitive');\nvar Type = require('./Type');\n\nvar isNaN = require('math-intrinsics/isNaN');\nvar isObject = require('../helpers/isObject');\n\n// https://262.ecma-international.org/11.0/#sec-abstract-equality-comparison\n\nmodule.exports = function AbstractEqualityComparison(x, y) {\n\tif (Type(x) === Type(y)) {\n\t\treturn StrictEqualityComparison(x, y);\n\t}\n\tif (x == null && y == null) {\n\t\treturn true;\n\t}\n\tif (typeof x === 'number' && typeof y === 'string') {\n\t\treturn AbstractEqualityComparison(x, ToNumber(y));\n\t}\n\tif (typeof x === 'string' && typeof y === 'number') {\n\t\treturn AbstractEqualityComparison(ToNumber(x), y);\n\t}\n\tif (typeof x === 'bigint' && typeof y === 'string') {\n\t\tvar n = StringToBigInt(y);\n\t\tif (isNaN(n)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn AbstractEqualityComparison(x, n);\n\t}\n\tif (typeof x === 'string' && typeof y === 'bigint') {\n\t\treturn AbstractEqualityComparison(y, x);\n\t}\n\tif (typeof x === 'boolean') {\n\t\treturn AbstractEqualityComparison(ToNumber(x), y);\n\t}\n\tif (typeof y === 'boolean') {\n\t\treturn AbstractEqualityComparison(x, ToNumber(y));\n\t}\n\tif ((typeof x === 'string' || typeof x === 'number' || typeof x === 'bigint' || typeof x === 'symbol') && isObject(y)) {\n\t\treturn AbstractEqualityComparison(x, ToPrimitive(y));\n\t}\n\tif (isObject(x) && (typeof y === 'string' || typeof y === 'number' || typeof y === 'bigint' || typeof y === 'symbol')) {\n\t\treturn AbstractEqualityComparison(ToPrimitive(x), y);\n\t}\n\tif ((typeof x === 'bigint' && typeof y === 'number') || (typeof x === 'number' && typeof y === 'bigint')) {\n\t\tif (isNaN(x) || isNaN(y) || x === Infinity || y === Infinity || x === -Infinity || y === -Infinity) {\n\t\t\treturn false;\n\t\t}\n\t\treturn x == y; // eslint-disable-line eqeqeq\n\t}\n\treturn false;\n};\n"
        }
    ]
}
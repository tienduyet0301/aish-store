{
    "sourceFile": "node_modules/es-abstract/2020/IsValidIntegerIndex.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892139810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsInteger = require('./IsInteger');\n\nvar isNegativeZero = require('math-intrinsics/isNegativeZero');\n\nvar isTypedArray = require('is-typed-array');\nvar typedArrayBuffer = require('typed-array-buffer');\n\n// https://262.ecma-international.org/11.0/#sec-isvalidintegerindex\n\nmodule.exports = function IsValidIntegerIndex(O, index) {\n\tif (!isTypedArray) {\n\t\tthrow new $TypeError('Assertion failed: `O` must be a Typed Array');\n\t}\n\n\ttypedArrayBuffer(O); // step 1\n\n\tif (typeof index !== 'number') {\n\t\tthrow new $TypeError('Assertion failed: Type(index) is not Number'); // step 2\n\t}\n\n\tif (!IsInteger(index)) { return false; } // step 3\n\n\tif (isNegativeZero(index)) { return false; } // step 4\n\n\tif (index < 0 || index >= O.length) { return false; } // step 5\n\n\treturn true; // step 6\n};\n"
        }
    ]
}
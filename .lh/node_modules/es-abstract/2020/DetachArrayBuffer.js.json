{
    "sourceFile": "node_modules/es-abstract/2020/DetachArrayBuffer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892139044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar IsDetachedBuffer = require('./IsDetachedBuffer');\n\nvar isArrayBuffer = require('is-array-buffer');\nvar isSharedArrayBuffer = require('is-shared-array-buffer');\n\nvar MessageChannel;\ntry {\n\t// eslint-disable-next-line global-require\n\tMessageChannel = require('worker_threads').MessageChannel;\n} catch (e) { /**/ }\n\n// https://262.ecma-international.org/9.0/#sec-detacharraybuffer\n\n/* globals postMessage */\n\nmodule.exports = function DetachArrayBuffer(arrayBuffer) {\n\tif (!isArrayBuffer(arrayBuffer) || isSharedArrayBuffer(arrayBuffer)) {\n\t\tthrow new $TypeError('Assertion failed: `arrayBuffer` must be an Object with an [[ArrayBufferData]] internal slot, and not a Shared Array Buffer');\n\t}\n\n\t// commented out since there's no way to set or access this key\n\t// var key = arguments.length > 1 ? arguments[1] : void undefined;\n\n\t// if (!SameValue(arrayBuffer[[ArrayBufferDetachKey]], key)) {\n\t// \tthrow new $TypeError('Assertion failed: `key` must be the value of the [[ArrayBufferDetachKey]] internal slot of `arrayBuffer`');\n\t// }\n\n\tif (!IsDetachedBuffer(arrayBuffer)) { // node v21.0.0+ throws when you structuredClone a detached buffer\n\t\tif (typeof structuredClone === 'function') {\n\t\t\tstructuredClone(arrayBuffer, { transfer: [arrayBuffer] });\n\t\t} else if (typeof postMessage === 'function') {\n\t\t\tpostMessage('', '/', [arrayBuffer]); // TODO: see if this might trigger listeners\n\t\t} else if (MessageChannel) {\n\t\t\t(new MessageChannel()).port1.postMessage(null, [arrayBuffer]);\n\t\t} else {\n\t\t\tthrow new $SyntaxError('DetachArrayBuffer is not supported in this environment');\n\t\t}\n\t}\n\n\treturn null;\n};\n"
        }
    ]
}
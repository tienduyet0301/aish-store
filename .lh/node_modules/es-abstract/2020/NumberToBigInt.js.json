{
    "sourceFile": "node_modules/es-abstract/2020/NumberToBigInt.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892140650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $BigInt = GetIntrinsic('%BigInt%', true);\nvar $RangeError = require('es-errors/range');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar isInteger = require('math-intrinsics/isInteger');\n\n// https://262.ecma-international.org/11.0/#sec-numbertobigint\n\nmodule.exports = function NumberToBigInt(number) {\n\tif (typeof number !== 'number') {\n\t\tthrow new $TypeError('Assertion failed: `number` must be a String');\n\t}\n\tif (!isInteger(number)) {\n\t\tthrow new $RangeError('The number ' + number + ' cannot be converted to a BigInt because it is not an integer');\n\t}\n\tif (!$BigInt) {\n\t\tthrow new $SyntaxError('BigInts are not supported in this environment');\n\t}\n\treturn $BigInt(number);\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2020/IsDetachedBuffer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892139582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar $byteLength = require('array-buffer-byte-length');\nvar availableTypedArrays = require('available-typed-arrays')();\nvar callBound = require('call-bound');\nvar isArrayBuffer = require('is-array-buffer');\nvar isSharedArrayBuffer = require('is-shared-array-buffer');\n\nvar $sabByteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\n\n// https://262.ecma-international.org/8.0/#sec-isdetachedbuffer\n\nmodule.exports = function IsDetachedBuffer(arrayBuffer) {\n\tvar isSAB = isSharedArrayBuffer(arrayBuffer);\n\tif (!isArrayBuffer(arrayBuffer) && !isSAB) {\n\t\tthrow new $TypeError('Assertion failed: `arrayBuffer` must be an Object with an [[ArrayBufferData]] internal slot');\n\t}\n\tif ((isSAB ? $sabByteLength : $byteLength)(arrayBuffer) === 0) {\n\t\ttry {\n\t\t\tnew global[availableTypedArrays[0]](arrayBuffer); // eslint-disable-line no-new\n\t\t} catch (error) {\n\t\t\treturn !!error && error.name === 'TypeError';\n\t\t}\n\t}\n\treturn false;\n};\n"
        }
    ]
}
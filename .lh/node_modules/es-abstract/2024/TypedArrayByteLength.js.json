{
    "sourceFile": "node_modules/es-abstract/2024/TypedArrayByteLength.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892179803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsTypedArrayOutOfBounds = require('./IsTypedArrayOutOfBounds');\nvar TypedArrayElementSize = require('./TypedArrayElementSize');\nvar TypedArrayLength = require('./TypedArrayLength');\n\nvar isTypedArrayWithBufferWitnessRecord = require('../helpers/records/typed-array-with-buffer-witness-record');\n\nvar typedArrayByteLength = require('typed-array-byte-length');\n\n// https://262.ecma-international.org/15.0/#sec-typedarraybytelength\n\nmodule.exports = function TypedArrayByteLength(taRecord) {\n\tif (!isTypedArrayWithBufferWitnessRecord(taRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `taRecord` must be a TypedArray With Buffer Witness Record');\n\t}\n\n\tif (IsTypedArrayOutOfBounds(taRecord)) {\n\t\treturn 0; // step 1\n\t}\n\tvar length = TypedArrayLength(taRecord); // step 2\n\n\tif (length === 0) {\n\t\treturn 0; // step 3\n\t}\n\n\tvar O = taRecord['[[Object]]']; // step 4\n\n\tvar byteLength = typedArrayByteLength(O);\n\tif (byteLength !== 'AUTO') {\n\t\treturn byteLength; // step 5\n\t}\n\n\tvar elementSize = TypedArrayElementSize(O); // step 6\n\n\treturn length * elementSize; // step 7\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2024/ArrayBufferByteLength.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892170700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/15.0/#sec-arraybufferbytelength\n\nvar IsDetachedBuffer = require('./IsDetachedBuffer');\n\nvar isArrayBuffer = require('is-array-buffer');\nvar isSharedArrayBuffer = require('is-shared-array-buffer');\nvar arrayBufferByteLength = require('array-buffer-byte-length');\n\nvar isGrowable = false; // TODO: support this\n\nmodule.exports = function ArrayBufferByteLength(arrayBuffer, order) {\n\tvar isSAB = isSharedArrayBuffer(arrayBuffer);\n\tif (!isArrayBuffer(arrayBuffer) && !isSAB) {\n\t\tthrow new $TypeError('Assertion failed: `arrayBuffer` must be an ArrayBuffer or a SharedArrayBuffer');\n\t}\n\tif (order !== 'SEQ-CST' && order !== 'UNORDERED') {\n\t\tthrow new $TypeError('Assertion failed: `order` must be ~SEQ-CST~ or ~UNORDERED~');\n\t}\n\n\t// 1. If IsSharedArrayBuffer(arrayBuffer) is true and arrayBuffer has an [[ArrayBufferByteLengthData]] internal slot, then\n\t// TODO: see if IsFixedLengthArrayBuffer can be used here in the spec instead\n\tif (isSAB && isGrowable) { // step 1\n\t\t// a. Let bufferByteLengthBlock be arrayBuffer.[[ArrayBufferByteLengthData]].\n\t\t// b. Let rawLength be GetRawBytesFromSharedBlock(bufferByteLengthBlock, 0, BIGUINT64, true, order).\n\t\t// c. Let isLittleEndian be the value of the [[LittleEndian]] field of the surrounding agent's Agent Record.\n\t\t// d. Return ‚Ñù(RawBytesToNumeric(BIGUINT64, rawLength, isLittleEndian)).\n\t}\n\n\tif (IsDetachedBuffer(arrayBuffer)) {\n\t\tthrow new $TypeError('Assertion failed: `arrayBuffer` must not be detached'); // step 2\n\t}\n\n\treturn arrayBufferByteLength(arrayBuffer);\n};\n"
        }
    ]
}
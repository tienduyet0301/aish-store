{
    "sourceFile": "node_modules/es-abstract/2024/CompareTypedArrayElements.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892171398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar SameValue = require('./SameValue');\nvar ToNumber = require('./ToNumber');\n\nvar isNaN = require('math-intrinsics/isNaN');\n\n// https://262.ecma-international.org/14.0/#sec-comparetypedarrayelements\n\nmodule.exports = function CompareTypedArrayElements(x, y, compareFn) {\n\tif ((typeof x !== 'number' && typeof x !== 'bigint') || typeof x !== typeof y) {\n\t\tthrow new $TypeError('Assertion failed: `x` and `y` must be either a BigInt or a Number, and both must be the same type');\n\t}\n\tif (typeof compareFn !== 'function' && typeof compareFn !== 'undefined') {\n\t\tthrow new $TypeError('Assertion failed: `compareFn` must be a function or undefined');\n\t}\n\n\tif (typeof compareFn !== 'undefined') { // step 2\n\t\tvar v = ToNumber(Call(compareFn, void undefined, [x, y])); // step 2.a\n\t\tif (isNaN(v)) {\n\t\t\treturn 0; // step 2.b\n\t\t}\n\t\treturn v; // step 2.c\n\t}\n\n\tvar xNaN = isNaN(x);\n\tvar yNaN = isNaN(y);\n\tif (xNaN && yNaN) {\n\t\treturn 0; // step 3\n\t}\n\n\tif (xNaN) {\n\t\treturn 1; // step 4\n\t}\n\n\tif (yNaN) {\n\t\treturn -1; // step 5\n\t}\n\n\tif (x < y) {\n\t\treturn -1; // step 6\n\t}\n\n\tif (x > y) {\n\t\treturn 1; // step 7\n\t}\n\n\tif (SameValue(x, -0) && SameValue(y, 0)) {\n\t\treturn -1; // step 8\n\t}\n\n\tif (SameValue(x, 0) && SameValue(y, -0)) {\n\t\treturn 1; // step 9\n\t}\n\n\treturn 0; // step 10\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2024/MakeFullYear.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892173519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar ToIntegerOrInfinity = require('./ToIntegerOrInfinity');\n\nvar isNaN = require('math-intrinsics/isNaN');\n\n// https://262.ecma-international.org/15.0/#sec-makefullyear\n\nmodule.exports = function MakeFullYear(year) {\n\tif (typeof year !== 'number') {\n\t\tthrow new $TypeError('Assertion failed: `year` must be a Number');\n\t}\n\n\tif (isNaN(year)) {\n\t\treturn NaN; // step 1\n\t}\n\n\tvar truncated = ToIntegerOrInfinity(year); // step 2\n\tif (0 <= truncated && truncated <= 99) {\n\t\treturn 1900 + truncated; // step 3\n\t}\n\n\treturn truncated; // step 4\n};\n"
        }
    ]
}
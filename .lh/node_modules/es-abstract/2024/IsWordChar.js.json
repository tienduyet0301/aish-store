{
    "sourceFile": "node_modules/es-abstract/2024/IsWordChar.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892173264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar callBound = require('call-bound');\nvar isInteger = require('math-intrinsics/isInteger');\n\nvar $indexOf = callBound('String.prototype.indexOf');\n\nvar IsArray = require('./IsArray');\nvar WordCharacters = require('./WordCharacters');\n\nvar every = require('../helpers/every');\nvar isRegExpRecord = require('../helpers/records/regexp-record');\n\nvar isChar = function isChar(c) {\n\treturn typeof c === 'string';\n};\n\n// https://262.ecma-international.org/14.0/#sec-runtime-semantics-iswordchar-abstract-operation\n\n// note: prior to ES2023, this AO erroneously omitted the latter of its arguments.\nmodule.exports = function IsWordChar(rer, Input, e) {\n\tif (!isRegExpRecord(rer)) {\n\t\tthrow new $TypeError('Assertion failed: `rer` must be a RegExp Record');\n\t}\n\tif (!IsArray(Input) || !every(Input, isChar)) {\n\t\tthrow new $TypeError('Assertion failed: `Input` must be a List of characters');\n\t}\n\n\tif (!isInteger(e)) {\n\t\tthrow new $TypeError('Assertion failed: `e` must be an integer');\n\t}\n\n\tvar InputLength = Input.length; // step 1\n\n\tif (e === -1 || e === InputLength) {\n\t\treturn false; // step 2\n\t}\n\n\tvar c = Input[e]; // step 3\n\n\treturn $indexOf(WordCharacters(rer), c) > -1; // steps 4-5\n};\n"
        }
    ]
}
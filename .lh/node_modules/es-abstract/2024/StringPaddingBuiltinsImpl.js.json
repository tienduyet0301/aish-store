{
    "sourceFile": "node_modules/es-abstract/2024/StringPaddingBuiltinsImpl.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892177214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar StringPad = require('./StringPad');\nvar ToLength = require('./ToLength');\nvar ToString = require('./ToString');\n\n// https://262.ecma-international.org/15.0/#sec-stringpaddingbuiltinsimpl\n\nmodule.exports = function StringPaddingBuiltinsImpl(O, maxLength, fillString, placement) {\n\tif (placement !== 'start' && placement !== 'end' && placement !== 'START' && placement !== 'END') {\n\t\tthrow new $TypeError('Assertion failed: `placement` must be ~START~ or ~END~');\n\t}\n\n\tvar S = ToString(O); // step 1\n\n\tvar intMaxLength = ToLength(maxLength); // step 2\n\n\tvar stringLength = S.length; // step 3\n\n\tif (intMaxLength <= stringLength) { return S; } // step 4\n\n\tvar filler = typeof fillString === 'undefined' ? ' ' : ToString(fillString); // steps 5-6\n\n\treturn StringPad(S, intMaxLength, filler, placement); // step 7\n};\n"
        }
    ]
}
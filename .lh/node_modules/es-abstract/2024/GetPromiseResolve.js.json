{
    "sourceFile": "node_modules/es-abstract/2024/GetPromiseResolve.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892172119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\nvar IsConstructor = require('./IsConstructor');\n\n// https://262.ecma-international.org/12.0/#sec-getpromiseresolve\n\nmodule.exports = function GetPromiseResolve(promiseConstructor) {\n\tif (!IsConstructor(promiseConstructor)) {\n\t\tthrow new $TypeError('Assertion failed: `promiseConstructor` must be a constructor');\n\t}\n\tvar promiseResolve = Get(promiseConstructor, 'resolve');\n\tif (IsCallable(promiseResolve) === false) {\n\t\tthrow new $TypeError('`resolve` method is not callable');\n\t}\n\treturn promiseResolve;\n};\n"
        }
    ]
}
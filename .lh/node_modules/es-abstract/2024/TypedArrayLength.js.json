{
    "sourceFile": "node_modules/es-abstract/2024/TypedArrayLength.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892180085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar floor = require('./floor');\nvar IsFixedLengthArrayBuffer = require('./IsFixedLengthArrayBuffer');\nvar IsTypedArrayOutOfBounds = require('./IsTypedArrayOutOfBounds');\nvar TypedArrayElementSize = require('./TypedArrayElementSize');\n\nvar isTypedArrayWithBufferWitnessRecord = require('../helpers/records/typed-array-with-buffer-witness-record');\n\nvar typedArrayBuffer = require('typed-array-buffer');\nvar typedArrayByteOffset = require('typed-array-byte-offset');\nvar typedArrayLength = require('typed-array-length');\n\n// http://www.ecma-international.org/ecma-262/15.0/#sec-typedarraylength\n\nmodule.exports = function TypedArrayLength(taRecord) {\n\tif (!isTypedArrayWithBufferWitnessRecord(taRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `taRecord` must be a TypedArray With Buffer Witness Record');\n\t}\n\n\tif (IsTypedArrayOutOfBounds(taRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `taRecord` is out of bounds'); // step 1\n\t}\n\n\tvar O = taRecord['[[Object]]']; // step 2\n\n\tvar length = typedArrayLength(O);\n\tif (length !== 'AUTO') {\n\t\treturn length; // step 3\n\t}\n\n\tif (IsFixedLengthArrayBuffer(typedArrayBuffer(O))) {\n\t\tthrow new $TypeError('Assertion failed: array buffer is not fixed length'); // step 4\n\t}\n\n\tvar byteOffset = typedArrayByteOffset(O); // step 5\n\n\tvar elementSize = TypedArrayElementSize(O); // step 6\n\n\tvar byteLength = taRecord['[[CachedBufferByteLength]]']; // step 7\n\n\tif (byteLength === 'DETACHED') {\n\t\tthrow new $TypeError('Assertion failed: typed array is detached'); // step 8\n\t}\n\n\treturn floor((byteLength - byteOffset) / elementSize); // step 9\n};\n"
        }
    ]
}
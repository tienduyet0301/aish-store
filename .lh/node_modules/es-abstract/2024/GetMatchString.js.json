{
    "sourceFile": "node_modules/es-abstract/2024/GetMatchString.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892172066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar substring = require('./substring');\n\nvar isMatchRecord = require('../helpers/records/match-record');\n\n// https://262.ecma-international.org/13.0/#sec-getmatchstring\n\nmodule.exports = function GetMatchString(S, match) {\n\tif (typeof S !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tif (!isMatchRecord(match)) {\n\t\tthrow new $TypeError('Assertion failed: `match` must be a Match Record');\n\t}\n\n\tif (!(match['[[StartIndex]]'] <= S.length)) {\n\t\tthrow new $TypeError('`match` [[StartIndex]] must be a non-negative integer <= the length of S');\n\t}\n\tif (!(match['[[EndIndex]]'] <= S.length)) {\n\t\tthrow new $TypeError('`match` [[EndIndex]] must be an integer between [[StartIndex]] and the length of S, inclusive');\n\t}\n\treturn substring(S, match['[[StartIndex]]'], match['[[EndIndex]]']);\n};\n"
        }
    ]
}
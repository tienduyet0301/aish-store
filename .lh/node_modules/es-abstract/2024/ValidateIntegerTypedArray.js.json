{
    "sourceFile": "node_modules/es-abstract/2024/ValidateIntegerTypedArray.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892180530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsBigIntElementType = require('./IsBigIntElementType');\nvar IsUnclampedIntegerElementType = require('./IsUnclampedIntegerElementType');\nvar TypedArrayElementType = require('./TypedArrayElementType');\nvar ValidateTypedArray = require('./ValidateTypedArray');\n\n// https://262.ecma-international.org/15.0/#sec-validateintegertypedarray\n\nmodule.exports = function ValidateIntegerTypedArray(typedArray, waitable) {\n\tif (typeof waitable !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: `waitable` must be a Boolean');\n\t}\n\n\tvar taRecord = ValidateTypedArray(typedArray, 'UNORDERED'); // step 1\n\n\t// 2. NOTE: Bounds checking is not a synchronizing operation when typedArray's backing buffer is a growable SharedArrayBuffer.\n\n\tvar type = TypedArrayElementType(typedArray); // step 4.a\n\tif (waitable) { // step 3\n\t\tif (type !== 'INT32' && type !== 'BIGINT64') {\n\t\t\tthrow new $TypeError('Assertion failed: `typedArray` must be an Int32Array or BigInt64Array when `waitable` is true'); // step 5.a\n\t\t}\n\t} else if (!IsUnclampedIntegerElementType(type) && !IsBigIntElementType(type)) { // step 4\n\t\tthrow new $TypeError('Assertion failed: `typedArray` must be an integer TypedArray'); // step 4.b\n\t}\n\n\treturn taRecord; // step 5\n};\n"
        }
    ]
}
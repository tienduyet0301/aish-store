{
    "sourceFile": "node_modules/es-abstract/2024/GetIteratorFromMethod.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892172025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\n\nvar isObject = require('../helpers/isObject');\n\n// https://262.ecma-international.org/15.0/#sec-getiteratorfrommethod\n\nmodule.exports = function GetIteratorFromMethod(obj, method) {\n\tif (!IsCallable(method)) {\n\t\tthrow new $TypeError('method must be a function');\n\t}\n\n\tvar iterator = Call(method, obj); // step 1\n\tif (!isObject(iterator)) {\n\t\tthrow new $TypeError('iterator must return an object'); // step 2\n\t}\n\n\tvar nextMethod = Get(iterator, 'next'); // step 3\n\treturn { // steps 4-5\n\t\t'[[Iterator]]': iterator,\n\t\t'[[NextMethod]]': nextMethod,\n\t\t'[[Done]]': false\n\t};\n};\n"
        }
    ]
}
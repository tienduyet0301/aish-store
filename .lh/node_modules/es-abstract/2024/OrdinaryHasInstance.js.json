{
    "sourceFile": "node_modules/es-abstract/2024/OrdinaryHasInstance.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892174343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\n\nvar isObject = require('../helpers/isObject');\n\n// https://262.ecma-international.org/6.0/#sec-ordinaryhasinstance\n\nmodule.exports = function OrdinaryHasInstance(C, O) {\n\tif (!IsCallable(C)) {\n\t\treturn false;\n\t}\n\tif (!isObject(O)) {\n\t\treturn false;\n\t}\n\tvar P = Get(C, 'prototype');\n\tif (!isObject(P)) {\n\t\tthrow new $TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n\t}\n\treturn O instanceof C;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/5/Canonicalize.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892180936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar callBound = require('call-bound');\n\nvar $charCodeAt = callBound('String.prototype.charCodeAt');\nvar $toUpperCase = callBound('String.prototype.toUpperCase');\n\n// https://262.ecma-international.org/5.1/#sec-15.10.2.8\n\nmodule.exports = function Canonicalize(ch, IgnoreCase) {\n\tif (typeof ch !== 'string' || ch.length !== 1) {\n\t\tthrow new $TypeError('Assertion failed: `ch` must be a character');\n\t}\n\n\tif (typeof IgnoreCase !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: `IgnoreCase` must be a Boolean');\n\t}\n\n\tif (!IgnoreCase) {\n\t\treturn ch; // step 1\n\t}\n\n\tvar u = $toUpperCase(ch); // step 2\n\n\tif (u.length !== 1) {\n\t\treturn ch; // step 3\n\t}\n\n\tvar cu = u; // step 4\n\n\tif ($charCodeAt(ch, 0) >= 128 && $charCodeAt(cu, 0) < 128) {\n\t\treturn ch; // step 5\n\t}\n\n\treturn cu;\n};\n"
        }
    ]
}
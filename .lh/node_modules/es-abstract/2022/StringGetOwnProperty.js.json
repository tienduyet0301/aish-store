{
    "sourceFile": "node_modules/es-abstract/2022/StringGetOwnProperty.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892159197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar isNegativeZero = require('math-intrinsics/isNegativeZero');\n\nvar callBound = require('call-bound');\nvar $charAt = callBound('String.prototype.charAt');\nvar $stringToString = callBound('String.prototype.toString');\n\nvar CanonicalNumericIndexString = require('./CanonicalNumericIndexString');\nvar IsIntegralNumber = require('./IsIntegralNumber');\n\nvar isObject = require('../helpers/isObject');\nvar isPropertyKey = require('../helpers/isPropertyKey');\n\n// https://262.ecma-international.org/12.0/#sec-stringgetownproperty\n\nmodule.exports = function StringGetOwnProperty(S, P) {\n\tvar str;\n\tif (isObject(S)) {\n\t\ttry {\n\t\t\tstr = $stringToString(S);\n\t\t} catch (e) { /**/ }\n\t}\n\tif (typeof str !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a boxed string object');\n\t}\n\tif (!isPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P is not a Property Key');\n\t}\n\tif (typeof P !== 'string') {\n\t\treturn void undefined;\n\t}\n\tvar index = CanonicalNumericIndexString(P);\n\tvar len = str.length;\n\tif (typeof index === 'undefined' || !IsIntegralNumber(index) || isNegativeZero(index) || index < 0 || len <= index) {\n\t\treturn void undefined;\n\t}\n\tvar resultStr = $charAt(S, index);\n\treturn {\n\t\t'[[Configurable]]': false,\n\t\t'[[Enumerable]]': true,\n\t\t'[[Value]]': resultStr,\n\t\t'[[Writable]]': false\n\t};\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2022/ToUint8.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892161750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar ToNumber = require('./ToNumber');\n\nvar $isNaN = require('math-intrinsics/isNaN');\nvar $isFinite = require('math-intrinsics/isFinite');\nvar $sign = require('math-intrinsics/sign');\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar modulo = require('math-intrinsics/mod');\n\n// https://262.ecma-international.org/6.0/#sec-touint8\n\nmodule.exports = function ToUint8(argument) {\n\tvar number = ToNumber(argument);\n\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\tvar posInt = $sign(number) * floor(abs(number));\n\treturn modulo(posInt, 0x100);\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2022/SetFunctionLength.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892158656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar isInteger = require('math-intrinsics/isInteger');\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\nvar HasOwnProperty = require('./HasOwnProperty');\nvar IsExtensible = require('./IsExtensible');\n\n// https://262.ecma-international.org/12.0/#sec-setfunctionlength\n\nmodule.exports = function SetFunctionLength(F, length) {\n\tif (typeof F !== 'function' || !IsExtensible(F) || HasOwnProperty(F, 'length')) {\n\t\tthrow new $TypeError('Assertion failed: `F` must be an extensible function and lack an own `length` property');\n\t}\n\tif (typeof length !== 'number') {\n\t\tthrow new $TypeError('Assertion failed: `length` must be a Number');\n\t}\n\tif (length !== Infinity && (!isInteger(length) || length < 0)) {\n\t\tthrow new $TypeError('Assertion failed: `length` must be âˆž, or an integer >= 0');\n\t}\n\treturn DefinePropertyOrThrow(F, 'length', {\n\t\t'[[Configurable]]': true,\n\t\t'[[Enumerable]]': false,\n\t\t'[[Value]]': length,\n\t\t'[[Writable]]': false\n\t});\n};\n"
        }
    ]
}
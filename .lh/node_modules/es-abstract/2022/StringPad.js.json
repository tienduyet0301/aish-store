{
    "sourceFile": "node_modules/es-abstract/2022/StringPad.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892159288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar callBound = require('call-bound');\n\nvar ToLength = require('./ToLength');\nvar ToString = require('./ToString');\n\nvar $strSlice = callBound('String.prototype.slice');\n\n// https://262.ecma-international.org/11.0/#sec-stringpad\n\nmodule.exports = function StringPad(O, maxLength, fillString, placement) {\n\tif (placement !== 'start' && placement !== 'end') {\n\t\tthrow new $TypeError('Assertion failed: `placement` must be \"start\" or \"end\"');\n\t}\n\tvar S = ToString(O);\n\tvar intMaxLength = ToLength(maxLength);\n\tvar stringLength = S.length;\n\tif (intMaxLength <= stringLength) {\n\t\treturn S;\n\t}\n\tvar filler = typeof fillString === 'undefined' ? ' ' : ToString(fillString);\n\tif (filler === '') {\n\t\treturn S;\n\t}\n\tvar fillLen = intMaxLength - stringLength;\n\n\t// the String value consisting of repeated concatenations of filler truncated to length fillLen.\n\tvar truncatedStringFiller = '';\n\twhile (truncatedStringFiller.length < fillLen) {\n\t\ttruncatedStringFiller += filler;\n\t}\n\ttruncatedStringFiller = $strSlice(truncatedStringFiller, 0, fillLen);\n\n\tif (placement === 'start') {\n\t\treturn truncatedStringFiller + S;\n\t}\n\treturn S + truncatedStringFiller;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/es-abstract/2022/substring.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892159692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar isInteger = require('math-intrinsics/isInteger');\nvar callBound = require('call-bound');\n\nvar $slice = callBound('String.prototype.slice');\n\n// https://262.ecma-international.org/12.0/#substring\nmodule.exports = function substring(S, inclusiveStart, exclusiveEnd) {\n\tif (typeof S !== 'string' || !isInteger(inclusiveStart) || (arguments.length > 2 && !isInteger(exclusiveEnd))) {\n\t\tthrow new $TypeError('`S` must be a String, and `inclusiveStart` and `exclusiveEnd` must be integers');\n\t}\n\treturn $slice(S, inclusiveStart, arguments.length > 2 ? exclusiveEnd : S.length);\n};\n"
        }
    ]
}
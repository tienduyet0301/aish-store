{
    "sourceFile": "node_modules/es-abstract/2022/TimeZoneString.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892160902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Date = GetIntrinsic('%Date%');\nvar $TypeError = require('es-errors/type');\n\nvar isNaN = require('math-intrinsics/isNaN');\n\nvar callBound = require('call-bound');\n\nvar $indexOf = callBound('String.prototype.indexOf');\nvar $slice = callBound('String.prototype.slice');\nvar $toTimeString = callBound('Date.prototype.toTimeString');\n\n// https://262.ecma-international.org/13.0/#sec-timezoneestring\n\nmodule.exports = function TimeZoneString(tv) {\n\tif (typeof tv !== 'number' || isNaN(tv)) {\n\t\tthrow new $TypeError('Assertion failed: `tv` must be a non-NaN Number');\n\t}\n\n\t// 1. Let offset be LocalTZA(tv, true).\n\t// 2. If offset is +0ùîΩ or offset > +0ùîΩ, then\n\t//   a. Let offsetSign be \"+\".\n\t//   b. Let absOffset be offset.\n\t// 3. Else,\n\t//   a. Let offsetSign be \"-\".\n\t//   b. Let absOffset be -offset.\n\t// 4. Let offsetMin be ToZeroPaddedDecimalString(‚Ñù(MinFromTime(absOffset)), 2).\n\t// 5. Let offsetHour be ToZeroPaddedDecimalString(‚Ñù(HourFromTime(absOffset)), 2).\n\t// 6. Let tzName be an implementation-defined string that is either the empty String or the string-concatenation of the code unit 0x0020 (SPACE), the code unit 0x0028 (LEFT PARENTHESIS), an implementation-defined timezone name, and the code unit 0x0029 (RIGHT PARENTHESIS).\n\t// 7. Return the string-concatenation of offsetSign, offsetHour, offsetMin, and tzName.\n\n\t// hack until LocalTZA, and \"implementation-defined string\" are available\n\tvar ts = $toTimeString(new $Date(tv));\n\treturn $slice(ts, $indexOf(ts, '(') + 1, $indexOf(ts, ')'));\n};\n"
        }
    ]
}
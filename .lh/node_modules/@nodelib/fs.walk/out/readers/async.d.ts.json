{
    "sourceFile": "node_modules/@nodelib/fs.walk/out/readers/async.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891901171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/// <reference types=\"node\" />\nimport { EventEmitter } from 'events';\nimport * as fsScandir from '@nodelib/fs.scandir';\nimport type Settings from '../settings';\nimport type { Entry, Errno } from '../types';\nimport Reader from './reader';\ndeclare type EntryEventCallback = (entry: Entry) => void;\ndeclare type ErrorEventCallback = (error: Errno) => void;\ndeclare type EndEventCallback = () => void;\nexport default class AsyncReader extends Reader {\n    protected readonly _settings: Settings;\n    protected readonly _scandir: typeof fsScandir.scandir;\n    protected readonly _emitter: EventEmitter;\n    private readonly _queue;\n    private _isFatalError;\n    private _isDestroyed;\n    constructor(_root: string, _settings: Settings);\n    read(): EventEmitter;\n    get isDestroyed(): boolean;\n    destroy(): void;\n    onEntry(callback: EntryEventCallback): void;\n    onError(callback: ErrorEventCallback): void;\n    onEnd(callback: EndEventCallback): void;\n    private _pushToQueue;\n    private _worker;\n    private _handleError;\n    private _handleEntry;\n    private _emitEntry;\n}\nexport {};\n"
        }
    ]
}
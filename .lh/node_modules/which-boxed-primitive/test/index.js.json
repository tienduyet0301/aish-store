{
    "sourceFile": "node_modules/which-boxed-primitive/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893111271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar inspect = require('object-inspect');\nvar forEach = require('for-each');\nvar v = require('es-value-fixtures');\n\nvar whichBoxedPrimitive = require('../');\n\nvar objects = [\n\t/a/g,\n\tnew Date(),\n\tfunction () {},\n\t[],\n\t{}\n].concat(v.objects);\n\ntest('isBoxedPrimitive', function (t) {\n\tt.test('unboxed primitives', function (st) {\n\t\tforEach(v.primitives, function (primitive) {\n\t\t\tst.equal(null, whichBoxedPrimitive(primitive), inspect(primitive) + ' is a primitive, but not a boxed primitive');\n\t\t});\n\t\tst.end();\n\t});\n\n\tt.test('boxed primitives', function (st) {\n\t\tforEach(v.primitives, function (primitive) {\n\t\t\tif (primitive != null) { // eslint-disable-line eqeqeq\n\t\t\t\tvar boxed = Object(primitive);\n\t\t\t\tvar expected = boxed.constructor.name;\n\t\t\t\tst.equal(typeof expected, 'string', 'expected is string');\n\t\t\t\tst.equal(whichBoxedPrimitive(boxed), expected, inspect(boxed) + ' is a boxed primitive: ' + expected);\n\t\t\t}\n\t\t});\n\t\tst.end();\n\t});\n\n\tt.test('non-primitive objects', function (st) {\n\t\tforEach(objects, function (object) {\n\t\t\tst.equal(undefined, whichBoxedPrimitive(object), inspect(object) + ' is not a primitive, boxed or otherwise');\n\t\t});\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/enhanced-resolve/lib/forEachBail.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892116609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/**\n * @template T\n * @template Z\n * @callback Iterator\n * @param {T} item item\n * @param {(err?: null|Error, result?: null|Z) => void} callback callback\n * @param {number} i index\n * @returns {void}\n */\n\n/**\n * @template T\n * @template Z\n * @param {T[]} array array\n * @param {Iterator<T, Z>} iterator iterator\n * @param {(err?: null|Error, result?: null|Z, i?: number) => void} callback callback after all items are iterated\n * @returns {void}\n */\nmodule.exports = function forEachBail(array, iterator, callback) {\n\tif (array.length === 0) return callback();\n\n\tlet i = 0;\n\tconst next = () => {\n\t\t/** @type {boolean|undefined} */\n\t\tlet loop = undefined;\n\t\titerator(\n\t\t\tarray[i++],\n\t\t\t(err, result) => {\n\t\t\t\tif (err || result !== undefined || i >= array.length) {\n\t\t\t\t\treturn callback(err, result, i);\n\t\t\t\t}\n\t\t\t\tif (loop === false) while (next());\n\t\t\t\tloop = true;\n\t\t\t},\n\t\t\ti\n\t\t);\n\t\tif (!loop) loop = false;\n\t\treturn loop;\n\t};\n\twhile (next());\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/enhanced-resolve/lib/createInnerContext.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892116245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n\n/**\n * @param {ResolveContext} options options for inner context\n * @param {null|string} message message to log\n * @returns {ResolveContext} inner context\n */\nmodule.exports = function createInnerContext(options, message) {\n\tlet messageReported = false;\n\tlet innerLog = undefined;\n\tif (options.log) {\n\t\tif (message) {\n\t\t\t/**\n\t\t\t * @param {string} msg message\n\t\t\t */\n\t\t\tinnerLog = msg => {\n\t\t\t\tif (!messageReported) {\n\t\t\t\t\t/** @type {(function(string): void)} */\n\t\t\t\t\t(options.log)(message);\n\t\t\t\t\tmessageReported = true;\n\t\t\t\t}\n\n\t\t\t\t/** @type {(function(string): void)} */\n\t\t\t\t(options.log)(\"  \" + msg);\n\t\t\t};\n\t\t} else {\n\t\t\tinnerLog = options.log;\n\t\t}\n\t}\n\n\treturn {\n\t\tlog: innerLog,\n\t\tyield: options.yield,\n\t\tfileDependencies: options.fileDependencies,\n\t\tcontextDependencies: options.contextDependencies,\n\t\tmissingDependencies: options.missingDependencies,\n\t\tstack: options.stack\n\t};\n};\n"
        }
    ]
}
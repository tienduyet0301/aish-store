{
    "sourceFile": "node_modules/enhanced-resolve/lib/SyncAsyncFileSystemDecorator.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892117799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ReaddirStringCallback} ReaddirStringCallback */\n/** @typedef {import(\"./Resolver\").StringCallback} StringCallback */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/**\n * @param {SyncFileSystem} fs file system implementation\n * @constructor\n */\nfunction SyncAsyncFileSystemDecorator(fs) {\n\tthis.fs = fs;\n\n\tthis.lstat = undefined;\n\tthis.lstatSync = undefined;\n\tconst lstatSync = fs.lstatSync;\n\tif (lstatSync) {\n\t\tthis.lstat =\n\t\t\t/** @type {FileSystem[\"lstat\"]} */\n\t\t\t(\n\t\t\t\t(arg, options, callback) => {\n\t\t\t\t\tlet result;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = /** @type {Function | undefined} */ (callback)\n\t\t\t\t\t\t\t? lstatSync.call(fs, arg, options)\n\t\t\t\t\t\t\t: lstatSync.call(fs, arg);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn (callback || options)(\n\t\t\t\t\t\t\t/** @type {NodeJS.ErrnoException | null} */ (e)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t(callback || options)(null, /** @type {any} */ (result));\n\t\t\t\t}\n\t\t\t);\n\t\tthis.lstatSync =\n\t\t\t/** @type {SyncFileSystem[\"lstatSync\"]} */\n\t\t\t((arg, options) => lstatSync.call(fs, arg, options));\n\t}\n\n\tthis.stat =\n\t\t/** @type {FileSystem[\"stat\"]} */\n\t\t(\n\t\t\t(arg, options, callback) => {\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = /** @type {Function | undefined} */ (callback)\n\t\t\t\t\t\t? fs.statSync(arg, options)\n\t\t\t\t\t\t: fs.statSync(arg);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn (callback || options)(\n\t\t\t\t\t\t/** @type {NodeJS.ErrnoException | null} */ (e)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t(callback || options)(null, /** @type {any} */ (result));\n\t\t\t}\n\t\t);\n\tthis.statSync =\n\t\t/** @type {SyncFileSystem[\"statSync\"]} */\n\t\t((arg, options) => fs.statSync(arg, options));\n\n\tthis.readdir =\n\t\t/** @type {FileSystem[\"readdir\"]} */\n\t\t(\n\t\t\t(arg, options, callback) => {\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = /** @type {Function | undefined} */ (callback)\n\t\t\t\t\t\t? fs.readdirSync(\n\t\t\t\t\t\t\t\targ,\n\t\t\t\t\t\t\t\t/** @type {Exclude<Parameters<FileSystem[\"readdir\"]>[1], ReaddirStringCallback>} */\n\t\t\t\t\t\t\t\t(options)\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fs.readdirSync(arg);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn (callback || options)(\n\t\t\t\t\t\t/** @type {NodeJS.ErrnoException | null} */ (e)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t(callback || options)(null, /** @type {any} */ (result));\n\t\t\t}\n\t\t);\n\tthis.readdirSync =\n\t\t/** @type {SyncFileSystem[\"readdirSync\"]} */\n\t\t(\n\t\t\t(arg, options) =>\n\t\t\t\tfs.readdirSync(\n\t\t\t\t\targ,\n\t\t\t\t\t/** @type {Parameters<SyncFileSystem[\"readdirSync\"]>[1]} */ (options)\n\t\t\t\t)\n\t\t);\n\n\tthis.readFile =\n\t\t/** @type {FileSystem[\"readFile\"]} */\n\t\t(\n\t\t\t(arg, options, callback) => {\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = /** @type {Function | undefined} */ (callback)\n\t\t\t\t\t\t? fs.readFileSync(arg, options)\n\t\t\t\t\t\t: fs.readFileSync(arg);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn (callback || options)(\n\t\t\t\t\t\t/** @type {NodeJS.ErrnoException | null} */ (e)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t(callback || options)(null, /** @type {any} */ (result));\n\t\t\t}\n\t\t);\n\tthis.readFileSync =\n\t\t/** @type {SyncFileSystem[\"readFileSync\"]} */\n\t\t((arg, options) => fs.readFileSync(arg, options));\n\n\tthis.readlink =\n\t\t/** @type {FileSystem[\"readlink\"]} */\n\t\t(\n\t\t\t(arg, options, callback) => {\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = /** @type {Function | undefined} */ (callback)\n\t\t\t\t\t\t? fs.readlinkSync(\n\t\t\t\t\t\t\t\targ,\n\t\t\t\t\t\t\t\t/** @type {Exclude<Parameters<FileSystem[\"readlink\"]>[1], StringCallback>} */\n\t\t\t\t\t\t\t\t(options)\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fs.readlinkSync(arg);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn (callback || options)(\n\t\t\t\t\t\t/** @type {NodeJS.ErrnoException | null} */ (e)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t(callback || options)(null, /** @type {any} */ (result));\n\t\t\t}\n\t\t);\n\tthis.readlinkSync =\n\t\t/** @type {SyncFileSystem[\"readlinkSync\"]} */\n\t\t(\n\t\t\t(arg, options) =>\n\t\t\t\tfs.readlinkSync(\n\t\t\t\t\targ,\n\t\t\t\t\t/** @type {Parameters<SyncFileSystem[\"readlinkSync\"]>[1]} */ (options)\n\t\t\t\t)\n\t\t);\n\n\tthis.readJson = undefined;\n\tthis.readJsonSync = undefined;\n\tconst readJsonSync = fs.readJsonSync;\n\tif (readJsonSync) {\n\t\tthis.readJson =\n\t\t\t/** @type {FileSystem[\"readJson\"]} */\n\t\t\t(\n\t\t\t\t(arg, callback) => {\n\t\t\t\t\tlet result;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = readJsonSync.call(fs, arg);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t/** @type {NodeJS.ErrnoException | Error | null} */ (e)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(null, result);\n\t\t\t\t}\n\t\t\t);\n\t\tthis.readJsonSync =\n\t\t\t/** @type {SyncFileSystem[\"readJsonSync\"]} */\n\t\t\t(arg => readJsonSync.call(fs, arg));\n\t}\n\n\tthis.realpath = undefined;\n\tthis.realpathSync = undefined;\n\tconst realpathSync = fs.realpathSync;\n\tif (realpathSync) {\n\t\tthis.realpath =\n\t\t\t/** @type {FileSystem[\"realpath\"]} */\n\t\t\t(\n\t\t\t\t(arg, options, callback) => {\n\t\t\t\t\tlet result;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = /** @type {Function | undefined} */ (callback)\n\t\t\t\t\t\t\t? realpathSync.call(\n\t\t\t\t\t\t\t\t\tfs,\n\t\t\t\t\t\t\t\t\targ,\n\t\t\t\t\t\t\t\t\t/** @type {Exclude<Parameters<NonNullable<FileSystem[\"realpath\"]>>[1], StringCallback>} */\n\t\t\t\t\t\t\t\t\t(options)\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: realpathSync.call(fs, arg);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn (callback || options)(\n\t\t\t\t\t\t\t/** @type {NodeJS.ErrnoException | null} */ (e)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t(callback || options)(null, /** @type {any} */ (result));\n\t\t\t\t}\n\t\t\t);\n\t\tthis.realpathSync =\n\t\t\t/** @type {SyncFileSystem[\"realpathSync\"]} */\n\t\t\t(\n\t\t\t\t(arg, options) =>\n\t\t\t\t\trealpathSync.call(\n\t\t\t\t\t\tfs,\n\t\t\t\t\t\targ,\n\t\t\t\t\t\t/** @type {Parameters<NonNullable<SyncFileSystem[\"realpathSync\"]>>[1]} */\n\t\t\t\t\t\t(options)\n\t\t\t\t\t)\n\t\t\t);\n\t}\n}\nmodule.exports = SyncAsyncFileSystemDecorator;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/set-proto/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893026909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\n\nvar setProto = require('../');\n\nvar isPrototypeOf = Object.prototype.isPrototypeOf;\n\ntest('setProto', function (t) {\n\tt.equal(typeof setProto, 'function', 'is a function');\n\n\tt.test('can set', { skip: !setProto }, function (st) {\n\t\tvar obj = { a: 1 };\n\t\tvar proto = { b: 2 };\n\n\t\tst.ok(isPrototypeOf.call(Object.prototype, obj), 'Object.prototype is isPrototypeOf obj');\n\t\tst.notOk(isPrototypeOf.call(proto, obj), 'proto is not isPrototypeOf obj');\n\t\tst.ok('a' in obj, 'a is in obj');\n\t\tst.notOk('b' in obj, 'b is not in obj');\n\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tst.equal(/** @type {NonNullable<typeof setProto>} */ (setProto)(obj, proto), obj, 'returns the object');\n\n\t\tst.ok(isPrototypeOf.call(Object.prototype, obj), 'Object.prototype is isPrototypeOf obj');\n\t\tst.ok(isPrototypeOf.call(proto, obj), 'proto is isPrototypeOf obj');\n\t\tst.ok('a' in obj, 'a is in obj');\n\t\tst.ok('b' in obj, 'b is in obj');\n\n\t\tst.equal(Object.getPrototypeOf(obj), proto, 'sets the prototype');\n\t\tst.end();\n\t});\n\n\tt.test('can not set', { skip: !!setProto }, function (st) {\n\t\tst.equal(setProto, null);\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"
        }
    ]
}
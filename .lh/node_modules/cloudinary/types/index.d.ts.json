{
    "sourceFile": "node_modules/cloudinary/types/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892105925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import {Transform} from 'stream';\n\n\ndeclare module 'cloudinary' {\n\n    /****************************** Constants *************************************/\n    /****************************** Transformations *******************************/\n    type CropMode =\n        | (string & {})\n        | \"scale\"\n        | \"fit\"\n        | \"limit\"\n        | \"mfit\"\n        | \"fill\"\n        | \"lfill\"\n        | \"pad\"\n        | \"lpad\"\n        | \"mpad\"\n        | \"crop\"\n        | \"thumb\"\n        | \"imagga_crop\"\n        | \"imagga_scale\";\n    type Gravity =\n        | (string & {})\n        | \"north_west\"\n        | \"north\"\n        | \"north_east\"\n        | \"west\"\n        | \"center\"\n        | \"east\"\n        | \"south_west\"\n        | \"south\"\n        | \"south_east\"\n        | \"xy_center\"\n        | \"face\"\n        | \"face:center\"\n        | \"face:auto\"\n        | \"faces\"\n        | \"faces:center\"\n        | \"faces:auto\"\n        | \"body\"\n        | \"body:face\"\n        | \"adv_face\"\n        | \"adv_faces\"\n        | \"adv_eyes\"\n        | \"custom\"\n        | \"custom:face\"\n        | \"custom:faces\"\n        | \"custom:adv_face\"\n        | \"custom:adv_faces\"\n        | \"auto\"\n        | \"auto:adv_face\"\n        | \"auto:adv_faces\"\n        | \"auto:adv_eyes\"\n        | \"auto:body\"\n        | \"auto:face\"\n        | \"auto:faces\"\n        | \"auto:custom_no_override\"\n        | \"auto:none\"\n        | \"liquid\"\n        | \"ocr_text\";\n    type Angle =\n        number\n        | (string & {})\n        | Array<number | string>\n        | \"auto_right\"\n        | \"auto_left\"\n        | \"ignore\"\n        | \"vflip\"\n        | \"hflip\";\n    type ImageEffect =\n        | (string & {})\n        | \"hue\"\n        | \"red\"\n        | \"green\"\n        | \"blue\"\n        | \"negate\"\n        | \"brightness\"\n        | \"auto_brightness\"\n        | \"brightness_hsb\"\n        | \"sepia\"\n        | \"grayscale\"\n        | \"blackwhite\"\n        | \"saturation\"\n        | \"colorize\"\n        | \"replace_color\"\n        | \"simulate_colorblind\"\n        | \"assist_colorblind\"\n        | \"recolor\"\n        | \"tint\"\n        | \"contrast\"\n        | \"auto_contrast\"\n        | \"auto_color\"\n        | \"vibrance\"\n        | \"noise\"\n        | \"ordered_dither\"\n        | \"pixelate_faces\"\n        | \"pixelate_region\"\n        | \"pixelate\"\n        | \"unsharp_mask\"\n        | \"sharpen\"\n        | \"blur_faces\"\n        | \"blur_region\"\n        | \"blur\"\n        | \"tilt_shift\"\n        | \"gradient_fade\"\n        | \"vignette\"\n        | \"anti_removal\"\n        | \"overlay\"\n        | \"mask\"\n        | \"multiply\"\n        | \"displace\"\n        | \"shear\"\n        | \"distort\"\n        | \"trim\"\n        | \"make_transparent\"\n        | \"shadow\"\n        | \"viesus_correct\"\n        | \"fill_light\"\n        | \"gamma\"\n        | \"improve\";\n\n    type VideoEffect =\n        (string & {})\n        | \"accelerate\"\n        | \"reverse\"\n        | \"boomerang\"\n        | \"loop\"\n        | \"make_transparent\"\n        | \"transition\";\n    type AudioCodec = (string & {}) | \"none\" | \"aac\" | \"vorbis\" | \"mp3\";\n    type AudioFrequency =\n        string\n        | (number & {})\n        | 8000\n        | 11025\n        | 16000\n        | 22050\n        | 32000\n        | 37800\n        | 44056\n        | 44100\n        | 47250\n        | 48000\n        | 88200\n        | 96000\n        | 176400\n        | 192000;\n    /****************************** Flags *************************************/\n    type ImageFlags =\n        | (string & {})\n        | Array<string>\n        | \"any_format\"\n        | \"attachment\"\n        | \"apng\"\n        | \"awebp\"\n        | \"clip\"\n        | \"clip_evenodd\"\n        | \"cutter\"\n        | \"force_strip\"\n        | \"getinfo\"\n        | \"ignore_aspect_ratio\"\n        | \"immutable_cache\"\n        | \"keep_attribution\"\n        | \"keep_iptc\"\n        | \"layer_apply\"\n        | \"lossy\"\n        | \"preserve_transparency\"\n        | \"png8\"\n        | \"png32\"\n        | \"progressive\"\n        | \"rasterize\"\n        | \"region_relative\"\n        | \"relative\"\n        | \"replace_image\"\n        | \"sanitize\"\n        | \"strip_profile\"\n        | \"text_no_trim\"\n        | \"no_overflow\"\n        | \"text_disallow_overflow\"\n        | \"tiff8_lzw\"\n        | \"tiled\";\n    type VideoFlags =\n        | (string & {})\n        | Array<string>\n        | \"animated\"\n        | \"awebp\"\n        | \"attachment\"\n        | \"streaming_attachment\"\n        | \"hlsv3\"\n        | \"keep_dar\"\n        | \"splice\"\n        | \"layer_apply\"\n        | \"no_stream\"\n        | \"mono\"\n        | \"relative\"\n        | \"truncate_ts\"\n        | \"waveform\";\n    type ColorSpace = (string & {}) | \"srgb\" | \"no_cmyk\" | \"keep_cmyk\";\n    type DeliveryType =\n        | (string & {})\n        | \"upload\"\n        | \"private\"\n        | \"authenticated\"\n        | \"fetch\"\n        | \"multi\"\n        | \"text\"\n        | \"asset\"\n        | \"list\"\n        | \"facebook\"\n        | \"twitter\"\n        | \"twitter_name\"\n        | \"instagram\"\n        | \"gravatar\"\n        | \"youtube\"\n        | \"hulu\"\n        | \"vimeo\"\n        | \"animoto\"\n        | \"worldstarhiphop\"\n        | \"dailymotion\";\n    /****************************** URL *************************************/\n    type ResourceType = (string & {}) | \"image\" | \"raw\" | \"video\";\n    type ImageFormat =\n        | (string & {})\n        | \"gif\"\n        | \"png\"\n        | \"jpg\"\n        | \"bmp\"\n        | \"ico\"\n        | \"pdf\"\n        | \"tiff\"\n        | \"eps\"\n        | \"jpc\"\n        | \"jp2\"\n        | \"psd\"\n        | \"webp\"\n        | \"zip\"\n        | \"svg\"\n        | \"webm\"\n        | \"wdp\"\n        | \"hpx\"\n        | \"djvu\"\n        | \"ai\"\n        | \"flif\"\n        | \"bpg\"\n        | \"miff\"\n        | \"tga\"\n        | \"heic\"\n    type VideoFormat =\n        | (string & {})\n        | \"auto\"\n        | \"flv\"\n        | \"m3u8\"\n        | \"ts\"\n        | \"mov\"\n        | \"mkv\"\n        | \"mp4\"\n        | \"mpd\"\n        | \"ogv\"\n        | \"webm\"\n\n    export interface CommonTransformationOptions {\n        transformation?: TransformationOptions;\n        raw_transformation?: string;\n        crop?: CropMode;\n        width?: number | string;\n        height?: number | string;\n        size?: string;\n        aspect_ratio?: number | string;\n        gravity?: Gravity;\n        x?: number | string;\n        y?: number | string;\n        zoom?: number | string;\n        effect?: string | Array<number | string>;\n        background?: string;\n        angle?: Angle;\n        radius?: number | string;\n        overlay?: string | object; //might be Record<any, any>\n        custom_function?: string | { function_type: (string & {}) | \"wasm\" | \"remote\", source: string }\n        variables?: Array<string | object>; //might be Record<any, any>\n        if?: string;\n        else?: string;\n        end_if?: string;\n        dpr?: number | string;\n        quality?: number | string;\n        delay?: number | string;\n\n        [futureKey: string]: any;\n    }\n\n    export interface ImageTransformationOptions extends CommonTransformationOptions {\n        underlay?: string | Object; //might be Record<any, any>\n        color?: string;\n        color_space?: ColorSpace;\n        opacity?: number | string;\n        border?: string;\n        default_image?: string;\n        density?: number | string;\n        format?: ImageFormat;\n        fetch_format?: ImageFormat;\n        effect?: string | Array<number | string> | ImageEffect;\n        page?: number | string;\n        flags?: ImageFlags | string;\n\n        [futureKey: string]: any;\n    }\n\n    interface VideoTransformationOptions extends CommonTransformationOptions {\n        audio_codec?: AudioCodec;\n        audio_frequency?: AudioFrequency;\n        video_codec?: string | Object; //might be Record<any, any>\n        bit_rate?: number | string;\n        fps?: string | Array<number | string>;\n        keyframe_interval?: string;\n        offset?: string,\n        start_offset?: number | string;\n        end_offset?: number | string;\n        duration?: number | string;\n        streaming_profile?: StreamingProfiles\n        video_sampling?: number | string;\n        format?: VideoFormat;\n        fetch_format?: VideoFormat;\n        effect?: string | Array<number | string> | VideoEffect;\n        flags?: VideoFlags;\n\n        [futureKey: string]: any;\n    }\n\n    interface TextStyleOptions {\n        text_style?: string;\n        font_family?: string;\n        font_size?: number;\n        font_color?: string;\n        font_weight?: string;\n        font_style?: string;\n        background?: string;\n        opacity?: number;\n        text_decoration?: string\n    }\n\n    interface ConfigOptions {\n        cloud_name?: string;\n        api_key?: string;\n        api_secret?: string;\n        api_proxy?: string;\n        private_cdn?: boolean;\n        secure_distribution?: string;\n        force_version?: boolean;\n        ssl_detected?: boolean;\n        secure?: boolean;\n        cdn_subdomain?: boolean;\n        secure_cdn_subdomain?: boolean;\n        cname?: string;\n        shorten?: boolean;\n        sign_url?: boolean;\n        long_url_signature?: boolean;\n        use_root_path?: boolean;\n        auth_token?: AuthTokenApiOptions;\n        account_id?: string;\n        provisioning_api_key?: string;\n        provisioning_api_secret?: string;\n        oauth_token?: string;\n\n        [futureKey: string]: any;\n    }\n\n    export interface ResourceOptions {\n        type?: string;\n        resource_type?: string;\n    }\n\n    export interface UrlOptions extends ResourceOptions {\n        version?: string;\n        format?: string;\n        url_suffix?: string;\n\n        [futureKey: string]: any;\n    }\n\n    export interface ImageTagOptions {\n        html_height?: string;\n        html_width?: string;\n        srcset?: object; //might be Record<any, any>\n        attributes?: object; //might be Record<any, any>\n        client_hints?: boolean;\n        responsive?: boolean;\n        hidpi?: boolean;\n        responsive_placeholder?: boolean;\n\n        [futureKey: string]: any;\n    }\n\n    export interface VideoTagOptions {\n        source_types?: string | string[];\n        source_transformation?: TransformationOptions;\n        fallback_content?: string;\n        poster?: string | object; //might be Record<any, any>\n        controls?: boolean;\n        preload?: string;\n\n        [futureKey: string]: any;\n    }\n\n    /****************************** Admin API Options *************************************/\n    export interface AdminApiOptions {\n        agent?: object; //might be Record<any, any>\n        content_type?: string;\n        oauth_token?: string;\n\n        [futureKey: string]: any;\n    }\n\n    export type VisualSearchParams = { image_url: string } | { image_asset_id: string } | { text: string };\n\n    export interface ArchiveApiOptions {\n        allow_missing?: boolean;\n        async?: boolean;\n        expires_at?: number;\n        flatten_folders?: boolean;\n        flatten_transformations?: boolean;\n        keep_derived?: boolean;\n        mode?: string;\n        notification_url?: string;\n        prefixes?: string;\n        public_ids?: string[] | string;\n        fully_qualified_public_ids?: string[] | string;\n        skip_transformation_name?: boolean;\n        tags?: string | string[];\n        target_format?: TargetArchiveFormat;\n        target_public_id?: string;\n        target_tags?: string[];\n        timestamp?: number;\n        transformations?: TransformationOptions;\n        type?: DeliveryType\n        use_original_filename?: boolean;\n\n        [futureKey: string]: any;\n    }\n\n    export interface UpdateApiOptions extends ResourceOptions {\n        access_control?: string[];\n        auto_tagging?: number;\n        background_removal?: string;\n        categorization?: string;\n        context?: boolean | string;\n        custom_coordinates?: string;\n        detection?: string;\n        face_coordinates?: string;\n        headers?: string;\n        notification_url?: string;\n        ocr?: string;\n        raw_convert?: string;\n        similarity_search?: string;\n        tags?: string | string[];\n        moderation_status?: string;\n        unsafe_update?: object; //might be Record<any, any>\n        allowed_for_strict?: boolean;\n        asset_folder?: string;\n        unique_display_name?: boolean;\n        display_name?: string\n\n        [futureKey: string]: any;\n    }\n\n    export interface PublishApiOptions extends ResourceOptions {\n        invalidate?: boolean;\n        overwrite?: boolean;\n\n        [futureKey: string]: any;\n    }\n\n    export interface ResourceApiOptions extends ResourceOptions {\n        transformation?: TransformationOptions;\n        transformations?: TransformationOptions;\n        keep_original?: boolean;\n        next_cursor?: boolean | string;\n        public_ids?: string[];\n        prefix?: string;\n        all?: boolean;\n        max_results?: number;\n        tags?: boolean;\n        tag?: string;\n        context?: boolean;\n        direction?: number | string;\n        moderations?: boolean;\n        start_at?: string;\n        exif?: boolean;\n        colors?: boolean;\n        derived_next_cursor?: string;\n        faces?: boolean;\n        image_metadata?: boolean;\n        media_metadata?: boolean;\n        pages?: boolean;\n        coordinates?: boolean;\n        phash?: boolean;\n        cinemagraph_analysis?: boolean;\n        accessibility_analysis?: boolean;\n        related?: boolean;\n\n        [futureKey: string]: any;\n    }\n\n    export interface UploadApiOptions {\n        access_mode?: AccessMode;\n        allowed_formats?: Array<VideoFormat> | Array<ImageFormat>;\n        async?: boolean;\n        backup?: boolean;\n        callback?: string;\n        colors?: boolean;\n        discard_original_filename?: boolean;\n        eager?: TransformationOptions;\n        eager_async?: boolean;\n        eager_notification_url?: string;\n        eval?: string;\n        exif?: boolean;\n        faces?: boolean;\n        filename_override?: string;\n        folder?: string;\n        format?: VideoFormat | ImageFormat;\n        image_metadata?: boolean;\n        media_metadata?: boolean;\n        invalidate?: boolean;\n        moderation?: ModerationKind;\n        notification_url?: string;\n        overwrite?: boolean;\n        phash?: boolean;\n        proxy?: string;\n        public_id?: string;\n        quality_analysis?: boolean;\n        resource_type?: \"image\" | \"video\" | \"raw\" | \"auto\";\n        responsive_breakpoints?: Record<any, any>;\n        return_delete_token?: boolean\n        timestamp?: number;\n        transformation?: TransformationOptions;\n        type?: DeliveryType;\n        unique_filename?: boolean;\n        upload_preset?: string;\n        use_filename?: boolean;\n        chunk_size?: number;\n        disable_promises?: boolean;\n        oauth_token?: string;\n        use_asset_folder_as_public_id_prefix?: boolean;\n        regions?: Record<string, [RegionCoordinate, RegionCoordinate, ...Array<RegionCoordinate>]>;\n        auto_chaptering?: boolean;\n        auto_transcription?: boolean | { translate: Array<string>; };\n\n        [futureKey: string]: any;\n    }\n\n    export type RegionCoordinate = [number, number];\n\n    export interface ProvisioningApiOptions {\n        account_id?: string;\n        provisioning_api_key?: string;\n        provisioning_api_secret?: string;\n        agent?: object; //might be Record<any, any>?\n        content_type?: string;\n\n        [futureKey: string]: any;\n    }\n\n    export interface AccessKeyDetails {\n        name: string,\n        api_key: string,\n        api_secret: string,\n        created_at: string,\n        updated_at: string,\n        enabled: boolean\n    }\n\n    export interface AccessKeysListResponse {\n        access_keys: Array<AccessKeyDetails>,\n        total: number\n    }\n\n    export interface DeleteAccessKeyResponse {\n        message: 'ok' | 'not_found'\n    }\n\n    export interface AuthTokenApiOptions {\n        key: string;\n        acl: string;\n        ip?: string;\n        start_time?: number;\n        duration?: number;\n        expiration?: number;\n        url?: string;\n    }\n\n    type TransformationOptions =\n        string\n        | string[]\n        | VideoTransformationOptions\n        | ImageTransformationOptions\n        | Object //might be Record<any, any>\n        | Array<ImageTransformationOptions>\n        | Array<VideoTransformationOptions>;\n\n    type ImageTransformationAndTagsOptions = ImageTransformationOptions | ImageTagOptions;\n    type VideoTransformationAndTagsOptions = VideoTransformationOptions | VideoTagOptions;\n    type ImageAndVideoFormatOptions = ImageFormat | VideoFormat;\n    type ConfigAndUrlOptions = ConfigOptions | UrlOptions;\n    type AdminAndPublishOptions = AdminApiOptions | PublishApiOptions;\n    type AdminAndResourceOptions = AdminApiOptions | ResourceApiOptions;\n    type AdminAndUpdateApiOptions = AdminApiOptions | UpdateApiOptions;\n\n    /****************************** API *************************************/\n    type Status = (string & {}) | \"pending\" | \"approved\" | \"rejected\";\n    type StreamingProfiles =\n        (string & {})\n        | \"4k\"\n        | \"full_hd\"\n        | \"hd\"\n        | \"sd\"\n        | \"full_hd_wifi\"\n        | \"full_hd_lean\"\n        | \"hd_lean\";\n    type ModerationKind = (string & {}) | \"manual\" | \"webpurify\" | \"aws_rek\" | \"metascan\";\n    type AccessMode = (string & {}) | \"public\" | \"authenticated\";\n    type TargetArchiveFormat = (string & {}) | \"zip\" | \"tgz\";\n\n    // err is kept for backwards compatibility, it currently will always be undefined\n    type ResponseCallback = (err?: any, callResult?: any) => any;\n\n    type UploadResponseCallback = (err?: UploadApiErrorResponse, callResult?: UploadApiResponse) => void;\n\n    export interface AdminApiPaginationResponse {\n        next_cursor?: string;\n    }\n\n    export interface AdminApiBaseResponse {\n        rate_limit_allowed?: number;\n        rate_limit_reset_at?: string;\n        rate_limit_remaining?: number;\n    }\n\n    export interface UploadApiResponse {\n        public_id: string;\n        version: number;\n        signature: string;\n        width: number;\n        height: number;\n        format: string;\n        resource_type: \"image\" | \"video\" | \"raw\" | \"auto\";\n        created_at: string;\n        tags: Array<string>;\n        pages: number;\n        bytes: number;\n        type: string;\n        etag: string;\n        placeholder: boolean;\n        url: string;\n        secure_url: string;\n        access_mode: string;\n        original_filename: string;\n        moderation: Array<string>;\n        access_control: Array<string>;\n        context: object; //won't change since it's response, we need to discuss documentation team about it before implementing.\n        metadata: object; //won't change since it's response, we need to discuss documentation team about it before implementing.\n        colors?: [string, number][];\n\n        [futureKey: string]: any;\n    }\n\n    export interface UploadApiErrorResponse {\n        message: string;\n        name: string;\n        http_code: number;\n\n        [futureKey: string]: any;\n    }\n\n    class UploadStream extends Transform {\n    }\n\n    export interface DeleteApiResponse {\n        message: string;\n        http_code: number;\n    }\n\n    export interface BaseAssetRelation {\n        asset: string;\n        status: 200;\n    }\n\n    export interface AssetRelationSuccess extends BaseAssetRelation {\n        message: 'success';\n        code: 'success_ids'\n    }\n\n    export interface AssetRelationAlreadyExists extends BaseAssetRelation {\n        message: 'resource already exists';\n        code: 'already_exists_ids';\n    }\n\n    export interface NewAssetRelationResponse {\n        failed: [any],\n        success: Array<AssetRelationSuccess | AssetRelationAlreadyExists>\n    }\n\n    export interface DeleteAssetRelation {\n        failed: [any],\n        success: Array<AssetRelationSuccess>\n    }\n\n    export interface MetadataFieldApiOptions {\n        external_id?: string;\n        type?: string;\n        label?: string;\n        mandatory?: boolean;\n        default_value?: number;\n        validation?: object; //there are 4 types, we need to discuss documentation team about it before implementing.\n        datasource?: {\n            values: Array<DatasourceEntry>\n        };\n        default_disabled?: boolean;\n\n        [futureKey: string]: any;\n    }\n\n    export interface MetadataFieldApiResponse {\n        external_id: string;\n        type: string;\n        label: string;\n        mandatory: boolean;\n        default_value: number;\n        validation: object; //there are 4 types, we need to discuss documentation team about it before implementing.\n        datasource: {\n            values: Array<DatasourceEntry>\n        };\n\n        [futureKey: string]: any;\n    }\n\n    export interface MetadataFieldsApiResponse extends AdminApiPaginationResponse, AdminApiBaseResponse  {\n        metadata_fields: MetadataFieldApiResponse[]\n    }\n\n    export interface DatasourceEntry {\n        external_id?: string;\n        value: string;\n        state?: 'active' | 'inactive'\n    }\n\n    export interface DatasourceChange {\n        values: Array<DatasourceEntry>\n    }\n\n    export type MetadataRuleCondition =\n        MetadataRulePopulatedCondition\n        | MetadataRuleEqualsCondition\n        | MetadataRuleIncludesCondition\n        | MetadataRuleOrCondition\n        | MetadataRuleAndCondition;\n\n    export interface MetadataRulePopulatedCondition {\n        metadata_field_id: string;\n        populated: boolean;\n    }\n\n    export interface MetadataRuleEqualsCondition {\n        metadata_field_id: string;\n        equals: string;\n    }\n\n    export interface MetadataRuleIncludesCondition {\n        metadata_field_id: string;\n        includes: Array<string>;\n    }\n\n    export interface MetadataRuleOrCondition {\n        and: Array<MetadataRuleCondition>\n    }\n\n    export interface MetadataRuleAndCondition {\n        or: Array<MetadataRuleCondition>\n    }\n\n    export type MetadataRuleResult =\n        MetadataRuleResultEnable\n        | MetadataRuleResultEnableWithActivate\n        | MetadataRuleResultEnableWithApply;\n\n    interface MetadataRuleResultCommon {\n        set_mandatory?: boolean;\n    }\n\n    export interface MetadataRuleResultEnable extends MetadataRuleResultCommon {\n        enable: boolean;\n    }\n\n    export interface MetadataRuleResultEnableWithActivate extends MetadataRuleResultCommon {\n        enable?: boolean;\n        activate_values: \"all\" | {\n            external_ids: string | Array<string> | null;\n            mode?: \"override\" | \"append\";\n        }\n    }\n\n    export interface MetadataRuleResultEnableWithApply extends MetadataRuleResultCommon {\n        enable?: boolean;\n        apply_value: {\n            value: string | Array<string>;\n            mode?: \"default\" | \"append\";\n        }\n    }\n\n    export interface MetadataRule {\n        metadata_field_id: string;\n        name: string | null;\n        condition: MetadataRuleCondition;\n        result: MetadataRuleResult | Array<MetadataRuleResult>;\n        state?: string;\n    }\n\n    export interface MetadataRuleResponse extends MetadataRule {\n        condition_signature: string;\n        external_id: string;\n    }\n\n    export type MetadataRulesListResponse = Array<MetadataRuleResponse>;\n\n    export interface ResourceApiResponse extends AdminApiPaginationResponse, AdminApiBaseResponse {\n        resources: [\n            {\n                public_id: string;\n                format: string;\n                version: number;\n                resource_type: string;\n                type: string;\n                placeholder: boolean;\n                created_at: string;\n                bytes: number;\n                width: number;\n                height: number;\n                backup: boolean;\n                access_mode: string;\n                url: string;\n                secure_url: string;\n                tags: Array<string>;\n                context: object; //won't change since it's response, we need to discuss documentation team about it before implementing.\n                next_cursor: string;\n                derived_next_cursor: string;\n                exif: object; //won't change since it's response, we need to discuss documentation team about it before implementing.\n                image_metadata: object; //won't change since it's response, we need to discuss documentation team about it before implementing.\n                media_metadata: object;\n                faces: number[][];\n                quality_analysis: number;\n                colors: [string, number][];\n                derived: Array<string>;\n                moderation: object; //won't change since it's response, we need to discuss documentation team about it before implementing.\n                phash: string;\n                predominant: object; //won't change since it's response, we need to discuss documentation team about it before implementing.\n                coordinates: object; //won't change since it's response, we need to discuss documentation team about it before implementing.\n                access_control: Array<string>;\n                pages: number;\n\n                [futureKey: string]: any;\n            }\n        ]\n    }\n\n    export type SignApiOptions = Record<string, any>;\n\n    export interface DatasourceEntry {\n        external_id?: string;\n        value: string;\n    }\n\n    export type AnalysisType = 'custom' | 'captioning' | 'cld_fashion' | 'cld_text' | 'coco' | 'google_tagging' | 'human_anatomy' | 'lvis' | 'shop_classifier' | 'unidet';\n\n    export type CustomAnalysisOptions = {\n        model_name: string,\n        model_version: number\n    }\n\n    export interface AnalyzeResponse {\n        data: {\n            entity: string,\n            analysis: Record<string, Record<string, string> | Array<string> | string>\n        },\n        request_id: string,\n    }\n\n    export interface RenameFolderResponse {\n        from: {\n            name: string,\n            path: string,\n        }\n        to: {\n            name: string,\n            path: string,\n        }\n    }\n\n    export interface ConfigResponse {\n        cloud_name: string\n        created_at: string\n        settings?: {\n            folder_mode: 'fixed' | 'dynamic'\n        }\n    }\n\n    export namespace v2 {\n\n        /****************************** Global Utils *************************************/\n\n        function cloudinary_js_config(): string;\n\n        function config(new_config?: boolean | ConfigOptions): ConfigOptions;\n\n        function config<K extends keyof ConfigOptions, V extends ConfigOptions[K]>(key: K, value?: undefined): V;\n\n        function config<K extends keyof ConfigOptions, V extends ConfigOptions[K]>(key: K, value: V): ConfigOptions & { [Property in K]: V }\n\n        function url(public_id: string, options?: TransformationOptions | ConfigAndUrlOptions): string;\n\n        /****************************** Tags *************************************/\n\n        function image(source: string, options?: ImageTransformationAndTagsOptions | ConfigAndUrlOptions): string;\n\n        function picture(public_id: string, options?: ImageTransformationAndTagsOptions | ConfigAndUrlOptions): string;\n\n        function source(public_id: string, options?: TransformationOptions | ConfigAndUrlOptions): string;\n\n        function video(public_id: string, options?: VideoTransformationAndTagsOptions | ConfigAndUrlOptions): string;\n\n        /****************************** Utils *************************************/\n\n        namespace utils {\n\n            function sign_request(params_to_sign: SignApiOptions, options?: ConfigAndUrlOptions): {\n                signature: string;\n                api_key: string;\n                [key: string]: any\n            };\n\n            function api_sign_request(params_to_sign: SignApiOptions, api_secret: string): string;\n\n            function verifyNotificationSignature(body: string, timestamp: number, signature: string, valid_for?: number): boolean;\n\n            function api_url(action?: string, options?: ConfigAndUrlOptions): string;\n\n            function url(public_id?: string, options?: TransformationOptions | ConfigAndUrlOptions): string;\n\n            function video_thumbnail_url(public_id?: string, options?: VideoTransformationOptions | ConfigAndUrlOptions): string;\n\n            function video_url(public_id?: string, options?: VideoTransformationOptions | ConfigAndUrlOptions): string;\n\n            function generate_transformation_string(options: TransformationOptions): string;\n\n            function archive_params(options?: ArchiveApiOptions): Promise<any>;\n\n            function download_archive_url(options?: ArchiveApiOptions | ConfigAndUrlOptions): string\n\n            function download_zip_url(options?: ArchiveApiOptions | ConfigAndUrlOptions): string;\n\n            function download_folder(folder_path: string, options?: ArchiveApiOptions | ConfigAndUrlOptions): string;\n\n            function download_backedup_asset(asset_id?: string, version_id?: string, options?: ArchiveApiOptions | ConfigAndUrlOptions): string\n\n            function generate_auth_token(options?: AuthTokenApiOptions): string;\n\n            function webhook_signature(data?: string, timestamp?: number, options?: ConfigOptions): string;\n\n            function private_download_url(publicID: string, format: string, options: Partial<{\n                resource_type: ResourceType;\n                type: DeliveryType;\n                expires_at: number;\n                attachment: boolean;\n            }>): string;\n        }\n\n        /****************************** Admin API V2 Methods *************************************/\n\n        namespace api {\n            function config(options?: AdminApiOptions | { settings: boolean }, callback?: ResponseCallback): Promise<ConfigResponse>\n\n            function create_streaming_profile(name: string, options: AdminApiOptions | {\n                display_name?: string,\n                representations: TransformationOptions\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function create_transformation(name: string, transformation: TransformationOptions, callback?: ResponseCallback): Promise<any>;\n\n            function create_transformation(name: string, transformation: TransformationOptions, options?: AdminApiOptions | {\n                allowed_for_strict?: boolean\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function create_upload_mapping(folder: string, options: AdminApiOptions | {\n                template: string\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function create_upload_preset(options?: AdminApiOptions | {\n                name?: string,\n                unsigned?: boolean,\n                disallow_public_id?: boolean\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function delete_all_resources(value?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_derived_by_transformation(public_ids: string[], transformations: TransformationOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_derived_by_transformation(public_ids: string[], transformations: TransformationOptions, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_derived_resources(public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function delete_derived_resources(public_ids: string[], options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_resources(value: string[], callback?: ResponseCallback): Promise<any>;\n\n            function delete_resources(value: string[], options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_resources_by_prefix(prefix: string, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_resources_by_prefix(prefix: string, callback?: ResponseCallback): Promise<any>;\n\n            function delete_resources_by_tag(tag: string, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_resources_by_tag(tag: string, callback?: ResponseCallback): Promise<any>;\n\n            function delete_streaming_profile(name: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_streaming_profile(name: string, callback?: ResponseCallback): Promise<any>;\n\n            function delete_transformation(transformationName: TransformationOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_transformation(transformationName: TransformationOptions, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_upload_mapping(folder: string, callback?: ResponseCallback): Promise<any>;\n\n            function delete_upload_mapping(folder: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_upload_preset(name: string, callback?: ResponseCallback): Promise<any>;\n\n            function delete_upload_preset(name: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function get_streaming_profile(name: string | ResponseCallback, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function get_streaming_profile(name: string | ResponseCallback, callback?: ResponseCallback): Promise<any>;\n\n            function list_streaming_profiles(callback?: ResponseCallback): Promise<any>;\n\n            function list_streaming_profiles(options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function ping(options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function ping(callback?: ResponseCallback): Promise<any>;\n\n            function publish_by_ids(public_ids: string[], options?: AdminAndPublishOptions, callback?: ResponseCallback): Promise<any>;\n\n            function publish_by_ids(public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function publish_by_prefix(prefix: string[] | string, options?: AdminAndPublishOptions, callback?: ResponseCallback): Promise<any>;\n\n            function publish_by_prefix(prefix: string[] | string, callback?: ResponseCallback): Promise<any>;\n\n            function publish_by_tag(tag: string, options?: AdminAndPublishOptions, callback?: ResponseCallback): Promise<any>;\n\n            function publish_by_tag(tag: string, callback?: ResponseCallback): Promise<any>;\n\n            function resource(public_id: string, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<any>;\n\n            function resource(public_id: string, callback?: ResponseCallback): Promise<any>;\n\n            function resource_types(options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function resources(options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<any>;\n\n            function resources_by_context(key: string, value?: string, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_context(key: string, value?: string, options?: AdminAndResourceOptions): Promise<ResourceApiResponse>;\n\n            function resources_by_context(key: string, options?: AdminAndResourceOptions): Promise<ResourceApiResponse>;\n\n            function resources_by_context(key: string, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_asset_ids(asset_ids: string[] | string, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_asset_ids(asset_ids: string[] | string, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_ids(public_ids: string[] | string, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_ids(public_ids: string[] | string, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_asset_folder(asset_folder: string, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_asset_folder(asset_folder: string, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_moderation(moderation: ModerationKind, status: Status, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_moderation(moderation: ModerationKind, status: Status, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_tag(tag: string, options?: AdminAndResourceOptions, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function resources_by_tag(tag: string, callback?: ResponseCallback): Promise<ResourceApiResponse>;\n\n            function restore(public_ids: string[], options?: AdminApiOptions | {\n                resource_type: ResourceType,\n                type: DeliveryType\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function restore(public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function root_folders(callback?: ResponseCallback, options?: AdminApiOptions): Promise<any>;\n\n            function search(params: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function search(params: string, callback?: ResponseCallback): Promise<any>;\n\n            function sub_folders(root_folder: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function sub_folders(root_folder: string, callback?: ResponseCallback): Promise<any>;\n\n            function search_folders(search_input: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function search_folders(search_input: string, callback?: ResponseCallback): Promise<any>;\n\n            function visual_search(params: VisualSearchParams, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function visual_search(params: VisualSearchParams, callback?: ResponseCallback): Promise<any>;\n\n            function tags(options?: AdminApiOptions | {\n                max_results?: number,\n                next_cursor?: string,\n                prefix?: string\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function transformation(transformation: TransformationOptions, options?: AdminApiOptions | {\n                max_results?: number,\n                next_cursor?: string,\n                named?: boolean\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function transformation(transformation: TransformationOptions, callback?: ResponseCallback): Promise<any>;\n\n            function transformations(options?: AdminApiOptions | {\n                max_results?: number,\n                next_cursor?: string,\n                named?: boolean\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function transformations(callback?: ResponseCallback): Promise<any>;\n\n            function update(public_id: string, options?: AdminAndUpdateApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function update(public_id: string, callback?: ResponseCallback): Promise<any>;\n\n            function update_resources_access_mode_by_ids(access_mode: AccessMode, ids: string[], options?: AdminAndUpdateApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function update_resources_access_mode_by_ids(access_mode: AccessMode, ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function update_resources_access_mode_by_prefix(access_mode: AccessMode, prefix: string, options?: AdminAndUpdateApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function update_resources_access_mode_by_prefix(access_mode: AccessMode, prefix: string, callback?: ResponseCallback): Promise<any>;\n\n            function update_resources_access_mode_by_tag(access_mode: AccessMode, tag: string, options?: AdminAndUpdateApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function update_resources_access_mode_by_tag(access_mode: AccessMode, tag: string, callback?: ResponseCallback): Promise<any>;\n\n            function update_streaming_profile(name: string, options: {\n                display_name?: string,\n                representations: Array<{ transformation?: VideoTransformationOptions }>\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function update_transformation(transformation_name: TransformationOptions, updates?: TransformationOptions, callback?: ResponseCallback): Promise<any>;\n\n            function update_transformation(transformation_name: TransformationOptions, callback?: ResponseCallback): Promise<any>;\n\n            function update_upload_mapping(name: string, options: AdminApiOptions | {\n                template: string\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function update_upload_preset(name?: string, options?: AdminApiOptions | {\n                unsigned?: boolean,\n                disallow_public_id?: boolean\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function update_upload_preset(name?: string, callback?: ResponseCallback): Promise<any>;\n\n            function upload_mapping(name?: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function upload_mapping(name?: string, callback?: ResponseCallback): Promise<any>;\n\n            function upload_mappings(options?: AdminApiOptions | {\n                max_results?: number,\n                next_cursor?: string\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function upload_mappings(callback?: ResponseCallback): Promise<any>;\n\n            function upload_preset(name?: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function upload_preset(name?: string, callback?: ResponseCallback): Promise<any>;\n\n            function upload_presets(options?: AdminApiOptions | {\n                max_results?: number,\n                next_cursor?: string\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function usage(callback?: ResponseCallback, options?: AdminApiOptions): Promise<any>;\n\n            function usage(options?: AdminApiOptions): Promise<any>;\n\n            function create_folder(path: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function delete_folder(path: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function rename_folder(old_path: string, new_path: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<RenameFolderResponse>;\n\n            function add_related_assets(public_id: string, public_ids_to_relate: string | Array<string>, options?: AdminApiOptions, callback?: ResponseCallback): Promise<NewAssetRelationResponse>;\n\n            function add_related_assets_by_asset_id(asset_id: string, public_ids_to_relate: string | Array<string>, options?: AdminApiOptions, callback?: ResponseCallback): Promise<NewAssetRelationResponse>;\n\n            function delete_related_assets(public_id: string, public_ids_to_unrelate: string | Array<string>, options?: AdminApiOptions, callback?: ResponseCallback): Promise<DeleteAssetRelation>;\n\n            function delete_related_assets_by_asset_id(asset_id: string, public_ids_to_unrelate: string | Array<string>, options?: AdminApiOptions, callback?: ResponseCallback): Promise<DeleteAssetRelation>;\n\n            /****************************** Structured Metadata API V2 Methods *************************************/\n\n            function add_metadata_field(field: MetadataFieldApiOptions, options?: AdminApiOptions, callback?: ResponseCallback): Promise<MetadataFieldApiResponse>;\n\n            function add_metadata_field(field: MetadataFieldApiOptions, callback?: ResponseCallback): Promise<MetadataFieldApiResponse>;\n\n            function list_metadata_fields(callback?: ResponseCallback, options?: AdminApiOptions): Promise<MetadataFieldsApiResponse>;\n\n            function list_metadata_fields(options?: AdminApiOptions): Promise<MetadataFieldsApiResponse>;\n\n            function delete_metadata_field(field_external_id: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<DeleteApiResponse>;\n\n            function delete_metadata_field(field_external_id: string, callback?: ResponseCallback): Promise<DeleteApiResponse>;\n\n            function metadata_field_by_field_id(external_id: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<MetadataFieldApiResponse>;\n\n            function metadata_field_by_field_id(external_id: string, callback?: ResponseCallback): Promise<MetadataFieldApiResponse>;\n\n            function update_metadata_field(external_id: string, field: MetadataFieldApiOptions, options?: AdminApiOptions, callback?: ResponseCallback): Promise<MetadataFieldApiResponse>;\n\n            function update_metadata_field(external_id: string, field: MetadataFieldApiOptions, callback?: ResponseCallback): Promise<MetadataFieldApiResponse>;\n\n            function update_metadata_field_datasource(field_external_id: string, entries_external_id: DatasourceChange, options?: AdminApiOptions, callback?: ResponseCallback): Promise<DatasourceChange>;\n\n            function update_metadata_field_datasource(field_external_id: string, entries_external_id: DatasourceChange, callback?: ResponseCallback): Promise<DatasourceChange>;\n\n            function delete_datasource_entries(field_external_id: string, entries_external_id: string[], options?: AdminApiOptions, callback?: ResponseCallback): Promise<DatasourceChange>;\n\n            function delete_datasource_entries(field_external_id: string, entries_external_id: string[], callback?: ResponseCallback): Promise<DatasourceChange>;\n\n            function restore_metadata_field_datasource(field_external_id: string, entries_external_id: string[], options?: AdminApiOptions, callback?: ResponseCallback): Promise<DatasourceChange>;\n\n            function restore_metadata_field_datasource(field_external_id: string, entries_external_id: string[], callback?: ResponseCallback): Promise<DatasourceChange>;\n\n            /****************************** Structured Metadata Rules API V2 Methods *************************************/\n            function add_metadata_rule(rule: MetadataRule, options?: AdminApiOptions, callback?: ResponseCallback): Promise<MetadataRuleResponse>;\n\n            function add_metadata_rule(rule: MetadataRule, callback?: ResponseCallback): Promise<MetadataRuleResponse>;\n\n            function list_metadata_rules(callback?: ResponseCallback, options?: AdminApiOptions): Promise<MetadataRulesListResponse>;\n\n            function list_metadata_rules(options?: AdminApiOptions): Promise<MetadataRulesListResponse>;\n\n            function update_metadata_rule(external_id: string, rule: MetadataRule, options?: AdminApiOptions, callback?: ResponseCallback): Promise<MetadataRuleResponse>;\n\n            function update_metadata_rule(external_id: string, rule: MetadataRule, callback?: ResponseCallback): Promise<MetadataRuleResponse>;\n\n            function delete_metadata_rule(external_id: string, options?: AdminApiOptions, callback?: ResponseCallback): Promise<DeleteApiResponse>;\n\n            function delete_metadata_rule(external_id: string, callback?: ResponseCallback): Promise<DeleteApiResponse>;\n\n        }\n\n        /****************************** Upload API V2 Methods *************************************/\n\n        namespace uploader {\n            function add_context(context: string, public_ids: string[], options?: {\n                type?: DeliveryType,\n                resource_type?: ResourceType\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function add_context(context: string, public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function add_tag(tag: string, public_ids: string[], options?: {\n                type?: DeliveryType,\n                resource_type?: ResourceType\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function add_tag(tag: string, public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function create_archive(options?: ArchiveApiOptions, target_format?: TargetArchiveFormat, callback?: ResponseCallback,): Promise<any>;\n\n            function create_zip(options?: ArchiveApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function destroy(public_id: string, options?: {\n                resource_type?: ResourceType,\n                type?: DeliveryType,\n                invalidate?: boolean\n            }, callback?: ResponseCallback,): Promise<any>;\n\n            function destroy(public_id: string, callback?: ResponseCallback,): Promise<any>;\n\n            function explicit(public_id: string, options?: UploadApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function explicit(public_id: string, callback?: ResponseCallback): Promise<any>;\n\n            function explode(public_id: string, options?: {\n                page?: 'all',\n                type?: DeliveryType,\n                format?: ImageAndVideoFormatOptions,\n                notification_url?: string,\n                transformations?: TransformationOptions\n            }, callback?: ResponseCallback): Promise<any>\n\n            function explode(public_id: string, callback?: ResponseCallback): Promise<any>\n\n            function generate_sprite(tag: string, options?: {\n                transformation?: TransformationOptions,\n                format?: ImageAndVideoFormatOptions,\n                notification_url?: string,\n                async?: boolean\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function generate_sprite(tag: string, callback?: ResponseCallback): Promise<any>;\n\n            function image_upload_tag(field?: string, options?: UploadApiOptions): Promise<any>;\n\n            function multi(tag: string, options?: {\n                transformation?: TransformationOptions,\n                async?: boolean,\n                format?: ImageAndVideoFormatOptions,\n                notification_url?: string\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function multi(tag: string, callback?: ResponseCallback): Promise<any>;\n\n            function remove_all_context(public_ids: string[], options?: {\n                context?: string,\n                resource_type?: ResourceType,\n                type?: DeliveryType\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function remove_all_context(public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function remove_all_tags(public_ids: string[], options?: {\n                tag?: string,\n                resource_type?: ResourceType,\n                type?: DeliveryType\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function remove_all_tags(public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function remove_tag(tag: string, public_ids: string[], options?: {\n                tag?: string,\n                resource_type?: ResourceType,\n                type?: DeliveryType\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function remove_tag(tag: string, public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function rename(from_public_id: string, to_public_id: string, options?: {\n                resource_type?: ResourceType,\n                type?: DeliveryType,\n                to_type?: DeliveryType,\n                overwrite?: boolean,\n                invalidate?: boolean\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function rename(from_public_id: string, to_public_id: string, callback?: ResponseCallback): Promise<any>;\n\n            function replace_tag(tag: string, public_ids: string[], options?: {\n                resource_type?: ResourceType,\n                type?: DeliveryType\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function replace_tag(tag: string, public_ids: string[], callback?: ResponseCallback): Promise<any>;\n\n            function text(text: string, options?: TextStyleOptions | {\n                public_id?: string\n            }, callback?: ResponseCallback): Promise<any>;\n\n            function text(text: string, callback?: ResponseCallback): Promise<any>;\n\n            function unsigned_image_upload_tag(field: string, upload_preset: string, options?: UploadApiOptions): Promise<any>;\n\n            function unsigned_upload(file: string, upload_preset: string, options?: UploadApiOptions, callback?: ResponseCallback): Promise<any>;\n\n            function unsigned_upload(file: string, upload_preset: string, callback?: ResponseCallback): Promise<any>;\n\n            function unsigned_upload_stream(upload_preset: string, options?: UploadApiOptions, callback?: ResponseCallback): UploadStream;\n\n            function unsigned_upload_stream(upload_preset: string, callback?: ResponseCallback): UploadStream;\n\n            function upload(file: string, options?: UploadApiOptions, callback?: UploadResponseCallback): Promise<UploadApiResponse>;\n\n            function upload(file: string, callback?: UploadResponseCallback): Promise<UploadApiResponse>;\n\n            function upload_chunked(path: string, options?: UploadApiOptions, callback?: UploadResponseCallback): Promise<UploadApiResponse>;\n\n            function upload_chunked(path: string, callback?: UploadResponseCallback): Promise<UploadApiResponse>;\n\n            function upload_chunked_stream(options?: UploadApiOptions, callback?: UploadResponseCallback): UploadStream;\n\n            function upload_large_stream(options?: UploadApiOptions, callback?: UploadResponseCallback): UploadStream;\n\n            function upload_large(path: string, options?: UploadApiOptions, callback?: UploadResponseCallback): Promise<UploadApiResponse>;\n\n            function upload_large(path: string, callback?: UploadResponseCallback): Promise<UploadApiResponse>;\n\n            function upload_stream(options?: UploadApiOptions, callback?: UploadResponseCallback): UploadStream;\n\n            function upload_stream(callback?: UploadResponseCallback): UploadStream;\n\n            function upload_tag_params(options?: UploadApiOptions, callback?: UploadResponseCallback): Promise<any>;\n\n            function upload_url(options?: ConfigOptions): Promise<any>;\n\n            function create_slideshow(options?: ConfigOptions & {\n                manifest_transformation?: TransformationOptions,\n                manifest_json?: Record<string, any>\n            }, callback?: UploadResponseCallback): Promise<any>;\n\n            /****************************** Structured Metadata API V2 Methods *************************************/\n\n            function update_metadata(metadata: string | Record<any, any>, public_ids: string[], options?: UploadApiOptions, callback?: ResponseCallback): Promise<MetadataFieldApiResponse>;\n\n            function update_metadata(metadata: string | Record<any, any>, public_ids: string[], callback?: ResponseCallback): Promise<MetadataFieldApiResponse>;\n        }\n\n        /****************************** Search API *************************************/\n\n        class search {\n\n            aggregate(value?: string): search;\n\n            execute(): Promise<any>;\n\n            expression(value?: string): search;\n\n            max_results(value?: number): search;\n\n            next_cursor(value?: string): search;\n\n            sort_by(key: string, value: 'asc' | 'desc'): search;\n\n            ttl(newTtl: number): search;\n\n            to_query(value?: string): search;\n\n            with_field(value?: string | Array<string>): search;\n\n            fields(value?: string | Array<string>): search;\n\n            to_url(newTtl?: number, next_cursor?: string, options?: ConfigOptions): string;\n\n            static aggregate(args?: string): search;\n\n            static expression(args?: string): search;\n\n            static instance(args?: string): search;\n\n            static max_results(args?: number): search;\n\n            static next_cursor(args?: string): search;\n\n            static sort_by(key: string, value: 'asc' | 'desc'): search;\n\n            static ttl(newTtl: number): search;\n\n            static with_field(args?: string | Array<string>): search;\n\n            static fields(args?: string | Array<string>): search;\n        }\n\n        /****************************** Provisioning API *************************************/\n\n        namespace provisioning {\n            namespace account {\n                function sub_accounts(enabled: boolean, ids?: string[], prefix?: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function sub_account(subAccountId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function create_sub_account(name: string, cloudName: string, customAttributes?: Record<any, any>, enabled?: boolean, baseAccount?: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function delete_sub_account(subAccountId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function update_sub_account(subAccountId: string, name?: string, cloudName?: string, customAttributes?: Record<any, any>, enabled?: boolean, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function user(userId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function users(pending: boolean, userIds?: string[], prefix?: string, subAccountId?: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function create_user(name: string, email: string, role: string, subAccountIds?: string[], options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function update_user(userId: string, name?: string, email?: string, role?: string, subAccountIds?: string[], options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function delete_user(userId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function create_user_group(name: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function update_user_group(groupId: string, name: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function delete_user_group(groupId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function add_user_to_group(groupId: string, userId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function remove_user_from_group(groupId: string, userId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function user_group(groupId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function user_groups(options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function user_group_users(groupId: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<any>;\n\n                function access_keys(subAccountId: string, options?: ProvisioningApiOptions | {\n                    page_size?: number,\n                    page?: number,\n                    sort_by?: string,\n                    sort_order?: 'desc' | 'asc'\n                }, callback?: ResponseCallback): Promise<AccessKeysListResponse>;\n\n                function generate_access_key(subAccountId: string, options?: ProvisioningApiOptions | {\n                    name?: string,\n                    enabled?: boolean\n                }, callback?: ResponseCallback): Promise<AccessKeyDetails>;\n\n                function update_access_key(subAccountId: string, apiKey: string, options?: ProvisioningApiOptions | {\n                    name?: string,\n                    enabled?: boolean\n                }, callback?: ResponseCallback): Promise<AccessKeyDetails>;\n\n                function delete_access_key(subAccountId: string, apiKey: string, options?: ProvisioningApiOptions, callback?: ResponseCallback): Promise<DeleteAccessKeyResponse>;\n\n                function delete_access_key_by_name(subAccountId: string, options: ProvisioningApiOptions | {\n                    name: string,\n                }, callback?: ResponseCallback): Promise<DeleteAccessKeyResponse>;\n            }\n        }\n\n        namespace analysis {\n            function analyze_uri(uri: string, analysis_type: AnalysisType, options?: ConfigOptions & CustomAnalysisOptions): Promise<AnalyzeResponse>\n        }\n    }\n}\n"
        }
    ]
}
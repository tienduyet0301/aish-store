{
    "sourceFile": "node_modules/ajv/scripts/bundle.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892016740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar fs = require('fs')\n  , path = require('path')\n  , browserify = require('browserify')\n  , uglify = require('uglify-js');\n\nvar pkg = process.argv[2]\n  , standalone = process.argv[3]\n  , compress = process.argv[4];\n\nvar packageDir = path.join(__dirname, '..');\nif (pkg != '.') packageDir = path.join(packageDir, 'node_modules', pkg);\n\nvar json = require(path.join(packageDir, 'package.json'));\n\nvar distDir = path.join(__dirname, '..', 'dist');\nif (!fs.existsSync(distDir)) fs.mkdirSync(distDir);\n\nvar bOpts = {};\nif (standalone) bOpts.standalone = standalone;\n\nbrowserify(bOpts)\n.require(path.join(packageDir, json.main), {expose: json.name})\n.bundle(function (err, buf) {\n  if (err) {\n    console.error('browserify error:', err);\n    process.exit(1);\n  }\n\n  var outputFile = path.join(distDir, json.name);\n  var uglifyOpts = {\n    warnings: true,\n    compress: {},\n    output: {\n      preamble: '/* ' + json.name + ' ' + json.version + ': ' + json.description + ' */'\n    }\n  };\n  if (compress) {\n    var compressOpts = compress.split(',');\n    for (var i=0, il = compressOpts.length; i<il; ++i) {\n      var pair = compressOpts[i].split('=');\n      uglifyOpts.compress[pair[0]] = pair.length < 1 || pair[1] != 'false';\n    }\n  }\n  if (standalone) {\n    uglifyOpts.sourceMap = {\n      filename: json.name + '.min.js',\n      url: json.name + '.min.js.map'\n    };\n  }\n\n  var result = uglify.minify(buf.toString(), uglifyOpts);\n  fs.writeFileSync(outputFile + '.min.js', result.code);\n  if (result.map) fs.writeFileSync(outputFile + '.min.js.map', result.map);\n  if (standalone) fs.writeFileSync(outputFile + '.bundle.js', buf);\n  if (result.warnings) {\n    for (var j=0, jl = result.warnings.length; j<jl; ++j)\n      console.warn('UglifyJS warning:', result.warnings[j]);\n  }\n});\n"
        }
    ]
}
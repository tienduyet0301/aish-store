{
    "sourceFile": "node_modules/ajv/lib/dot/definitions.def",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892014787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "{{## def.setupKeyword:\n  {{\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    var $errs = 'errs__' + $lvl;\n  }}\n#}}\n\n\n{{## def.setCompositeRule:\n  {{\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n  }}\n#}}\n\n\n{{## def.resetCompositeRule:\n  {{ it.compositeRule = $it.compositeRule = $wasComposite; }}\n#}}\n\n\n{{## def.setupNextLevel:\n  {{\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n  }}\n#}}\n\n\n{{## def.ifValid:\n  {{? $breakOnError }}\n    if ({{=$valid}}) {\n    {{ $closingBraces += '}'; }}\n  {{?}}\n#}}\n\n\n{{## def.ifResultValid:\n  {{? $breakOnError }}\n    if ({{=$nextValid}}) {\n    {{ $closingBraces += '}'; }}\n  {{?}}\n#}}\n\n\n{{## def.elseIfValid:\n  {{? $breakOnError }}\n    {{ $closingBraces += '}'; }}\n    else {\n  {{?}}\n#}}\n\n\n{{## def.nonEmptySchema:_schema:\n  (it.opts.strictKeywords\n    ? (typeof _schema == 'object' && Object.keys(_schema).length > 0)\n      || _schema === false\n    : it.util.schemaHasRules(_schema, it.RULES.all))\n#}}\n\n\n{{## def.strLength:\n  {{? it.opts.unicode === false }}\n    {{=$data}}.length\n  {{??}}\n    ucs2length({{=$data}})\n  {{?}}\n#}}\n\n\n{{## def.willOptimize:\n  it.util.varOccurences($code, $nextData) < 2\n#}}\n\n\n{{## def.generateSubschemaCode:\n  {{\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n  }}\n#}}\n\n\n{{## def.insertSubschemaCode:\n  {{= it.validate($it) }}\n  {{ $it.baseId = $currentBaseId; }}\n#}}\n\n\n{{## def._optimizeValidate:\n  it.util.varReplace($code, $nextData, $passData)\n#}}\n\n\n{{## def.optimizeValidate:\n  {{? {{# def.willOptimize}} }}\n    {{= {{# def._optimizeValidate }} }}\n  {{??}}\n    var {{=$nextData}} = {{=$passData}};\n    {{= $code }}\n  {{?}}\n#}}\n\n\n{{## def.$data:\n  {{\n    var $isData = it.opts.$data && $schema && $schema.$data\n      , $schemaValue;\n  }}\n  {{? $isData }}\n    var schema{{=$lvl}} = {{= it.util.getData($schema.$data, $dataLvl, it.dataPathArr) }};\n    {{ $schemaValue = 'schema' + $lvl; }}\n  {{??}}\n    {{ $schemaValue = $schema; }}\n  {{?}}\n#}}\n\n\n{{## def.$dataNotType:_type:\n  {{?$isData}} ({{=$schemaValue}} !== undefined && typeof {{=$schemaValue}} != _type) || {{?}}\n#}}\n\n\n{{## def.check$dataIsArray:\n  if (schema{{=$lvl}} === undefined) {{=$valid}} = true;\n  else if (!Array.isArray(schema{{=$lvl}})) {{=$valid}} = false;\n  else {\n#}}\n\n\n{{## def.numberKeyword:\n  {{? !($isData || typeof $schema == 'number') }}\n    {{ throw new Error($keyword + ' must be number'); }}\n  {{?}}\n#}}\n\n\n{{## def.beginDefOut:\n  {{\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n  }}\n#}}\n\n\n{{## def.storeDefOut:_variable:\n  {{\n    var _variable = out;\n    out = $$outStack.pop();\n  }}\n#}}\n\n\n{{## def.dataPath:(dataPath || ''){{? it.errorPath != '\"\"'}} + {{= it.errorPath }}{{?}}#}}\n\n{{## def.setParentData:\n  {{\n    var $parentData = $dataLvl ? 'data' + (($dataLvl-1)||'') : 'parentData'\n      , $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n  }}\n#}}\n\n{{## def.passParentData:\n  {{# def.setParentData }}\n  , {{= $parentData }}\n  , {{= $parentDataProperty }}\n#}}\n\n\n{{## def.iterateProperties:\n  {{? $ownProperties }}\n    {{=$dataProperties}} = {{=$dataProperties}} || Object.keys({{=$data}});\n    for (var {{=$idx}}=0; {{=$idx}}<{{=$dataProperties}}.length; {{=$idx}}++) {\n      var {{=$key}} = {{=$dataProperties}}[{{=$idx}}];\n  {{??}}\n    for (var {{=$key}} in {{=$data}}) {\n  {{?}}\n#}}\n\n\n{{## def.noPropertyInData:\n  {{=$useData}} === undefined\n  {{? $ownProperties }}\n    || !{{# def.isOwnProperty }}\n  {{?}}\n#}}\n\n\n{{## def.isOwnProperty:\n  Object.prototype.hasOwnProperty.call({{=$data}}, '{{=it.util.escapeQuotes($propertyKey)}}')\n#}}\n"
        }
    ]
}
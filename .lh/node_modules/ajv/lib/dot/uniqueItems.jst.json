{
    "sourceFile": "node_modules/ajv/lib/dot/uniqueItems.jst",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892015283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "{{# def.definitions }}\n{{# def.errors }}\n{{# def.setupKeyword }}\n{{# def.$data }}\n\n\n{{? ($schema || $isData) && it.opts.uniqueItems !== false }}\n  {{? $isData }}\n    var {{=$valid}};\n    if ({{=$schemaValue}} === false || {{=$schemaValue}} === undefined)\n      {{=$valid}} = true;\n    else if (typeof {{=$schemaValue}} != 'boolean')\n      {{=$valid}} = false;\n    else {\n  {{?}}\n\n  var i = {{=$data}}.length\n    , {{=$valid}} = true\n    , j;\n  if (i > 1) {\n    {{\n      var $itemType = it.schema.items && it.schema.items.type\n        , $typeIsArray = Array.isArray($itemType);\n    }}\n    {{? !$itemType || $itemType == 'object' || $itemType == 'array' ||\n        ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0)) }}\n      outer:\n      for (;i--;) {\n        for (j = i; j--;) {\n          if (equal({{=$data}}[i], {{=$data}}[j])) {\n            {{=$valid}} = false;\n            break outer;\n          }\n        }\n      }\n    {{??}}\n      var itemIndices = {}, item;\n      for (;i--;) {\n        var item = {{=$data}}[i];\n        {{ var $method = 'checkDataType' + ($typeIsArray ? 's' : ''); }}\n        if ({{= it.util[$method]($itemType, 'item', it.opts.strictNumbers, true) }}) continue;\n        {{? $typeIsArray}}\n          if (typeof item == 'string') item = '\"' + item;\n        {{?}}\n        if (typeof itemIndices[item] == 'number') {\n          {{=$valid}} = false;\n          j = itemIndices[item];\n          break;\n        }\n        itemIndices[item] = i;\n      }\n    {{?}}\n  }\n\n  {{? $isData }}  }  {{?}}\n\n  if (!{{=$valid}}) {\n    {{# def.error:'uniqueItems' }}\n  } {{? $breakOnError }} else { {{?}}\n{{??}}\n  {{? $breakOnError }} if (true) { {{?}}\n{{?}}\n"
        }
    ]
}
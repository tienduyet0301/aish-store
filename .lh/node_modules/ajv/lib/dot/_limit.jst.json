{
    "sourceFile": "node_modules/ajv/lib/dot/_limit.jst",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892015328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "{{# def.definitions }}\n{{# def.errors }}\n{{# def.setupKeyword }}\n{{# def.$data }}\n\n{{## def.setExclusiveLimit:\n  $exclusive = true;\n  $errorKeyword = $exclusiveKeyword;\n  $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n#}}\n\n{{\n  var $isMax = $keyword == 'maximum'\n    , $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum'\n    , $schemaExcl = it.schema[$exclusiveKeyword]\n    , $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data\n    , $op = $isMax ? '<' : '>'\n    , $notOp = $isMax ? '>' : '<'\n    , $errorKeyword = undefined;\n\n  if (!($isData || typeof $schema == 'number' || $schema === undefined)) {\n    throw new Error($keyword + ' must be number');\n  }\n  if (!($isDataExcl || $schemaExcl === undefined\n                    || typeof $schemaExcl == 'number'\n                    || typeof $schemaExcl == 'boolean')) {\n    throw new Error($exclusiveKeyword + ' must be number or boolean');\n  }\n}}\n\n{{? $isDataExcl }}\n  {{\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr)\n      , $exclusive = 'exclusive' + $lvl\n      , $exclType = 'exclType' + $lvl\n      , $exclIsNumber = 'exclIsNumber' + $lvl\n      , $opExpr = 'op' + $lvl\n      , $opStr = '\\' + ' + $opExpr + ' + \\'';\n  }}\n  var schemaExcl{{=$lvl}} = {{=$schemaValueExcl}};\n  {{ $schemaValueExcl = 'schemaExcl' + $lvl; }}\n\n  var {{=$exclusive}};\n  var {{=$exclType}} = typeof {{=$schemaValueExcl}};\n  if ({{=$exclType}} != 'boolean' && {{=$exclType}} != 'undefined' && {{=$exclType}} != 'number') {\n    {{ var $errorKeyword = $exclusiveKeyword; }}\n    {{# def.error:'_exclusiveLimit' }}\n  } else if ({{# def.$dataNotType:'number' }}\n            {{=$exclType}} == 'number'\n              ? (\n                  ({{=$exclusive}} = {{=$schemaValue}} === undefined || {{=$schemaValueExcl}} {{=$op}}= {{=$schemaValue}})\n                    ? {{=$data}} {{=$notOp}}= {{=$schemaValueExcl}}\n                    : {{=$data}} {{=$notOp}} {{=$schemaValue}}\n                )\n              : (\n                  ({{=$exclusive}} = {{=$schemaValueExcl}} === true)\n                    ? {{=$data}} {{=$notOp}}= {{=$schemaValue}}\n                    : {{=$data}} {{=$notOp}} {{=$schemaValue}}\n                )\n            || {{=$data}} !== {{=$data}}) {\n    var op{{=$lvl}} = {{=$exclusive}} ? '{{=$op}}' : '{{=$op}}=';\n    {{\n      if ($schema === undefined) {\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaValueExcl;\n        $isData = $isDataExcl;\n      }\n    }}\n{{??}}\n  {{\n    var $exclIsNumber = typeof $schemaExcl == 'number'\n      , $opStr = $op;  /*used in error*/\n  }}\n\n  {{? $exclIsNumber && $isData }}\n    {{ var $opExpr = '\\'' + $opStr + '\\''; /*used in error*/ }}\n    if ({{# def.$dataNotType:'number' }}\n        ( {{=$schemaValue}} === undefined\n          || {{=$schemaExcl}} {{=$op}}= {{=$schemaValue}}\n            ? {{=$data}} {{=$notOp}}= {{=$schemaExcl}}\n            : {{=$data}} {{=$notOp}} {{=$schemaValue}} )\n        || {{=$data}} !== {{=$data}}) {\n  {{??}}\n    {{\n      if ($exclIsNumber && $schema === undefined) {\n          {{# def.setExclusiveLimit }}\n          $schemaValue = $schemaExcl;\n          $notOp += '=';\n      } else {\n        if ($exclIsNumber)\n          $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          {{# def.setExclusiveLimit }}\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n\n      var $opExpr = '\\'' + $opStr + '\\''; /*used in error*/\n    }}\n\n    if ({{# def.$dataNotType:'number' }}\n        {{=$data}} {{=$notOp}} {{=$schemaValue}}\n        || {{=$data}} !== {{=$data}}) {\n  {{?}}\n{{?}}\n    {{ $errorKeyword = $errorKeyword || $keyword; }}\n    {{# def.error:'_limit' }}\n  } {{? $breakOnError }} else { {{?}}\n"
        }
    ]
}
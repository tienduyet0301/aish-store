{
    "sourceFile": "node_modules/ajv/lib/dot/required.jst",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892015258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "{{# def.definitions }}\n{{# def.errors }}\n{{# def.missing }}\n{{# def.setupKeyword }}\n{{# def.$data }}\n\n{{ var $vSchema = 'schema' + $lvl; }}\n\n{{## def.setupLoop:\n  {{? !$isData }}\n    var {{=$vSchema}} = validate.schema{{=$schemaPath}};\n  {{?}}\n\n  {{\n    var $i = 'i' + $lvl\n      , $propertyPath = 'schema' + $lvl + '[' + $i + ']'\n      , $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n    if (it.opts._errorDataPathProperty) {\n      it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n    }\n  }}\n#}}\n\n\n{{## def.isRequiredOwnProperty:\n  Object.prototype.hasOwnProperty.call({{=$data}}, {{=$vSchema}}[{{=$i}}])\n#}}\n\n\n{{? !$isData }}\n  {{? $schema.length < it.opts.loopRequired &&\n      it.schema.properties && Object.keys(it.schema.properties).length }}\n    {{ var $required = []; }}\n    {{~ $schema:$property }}\n      {{ var $propertySch = it.schema.properties[$property]; }}\n      {{? !($propertySch && {{# def.nonEmptySchema:$propertySch}}) }}\n        {{ $required[$required.length] = $property; }}\n      {{?}}\n    {{~}}\n  {{??}}\n    {{ var $required = $schema; }}\n  {{?}}\n{{?}}\n\n\n{{? $isData || $required.length }}\n  {{\n    var $currentErrorPath = it.errorPath\n      , $loopRequired = $isData || $required.length >= it.opts.loopRequired\n      , $ownProperties = it.opts.ownProperties;\n  }}\n\n  {{? $breakOnError }}\n    var missing{{=$lvl}};\n    {{? $loopRequired }}\n      {{# def.setupLoop }}\n      var {{=$valid}} = true;\n\n      {{?$isData}}{{# def.check$dataIsArray }}{{?}}\n\n      for (var {{=$i}} = 0; {{=$i}} < {{=$vSchema}}.length; {{=$i}}++) {\n        {{=$valid}} = {{=$data}}[{{=$vSchema}}[{{=$i}}]] !== undefined\n                      {{? $ownProperties }}\n                        && {{# def.isRequiredOwnProperty }}\n                      {{?}};\n        if (!{{=$valid}}) break;\n      }\n\n      {{? $isData }}  }  {{?}}\n\n      {{# def.checkError:'required' }}\n      else {\n    {{??}}\n      if ({{# def.checkMissingProperty:$required }}) {\n        {{# def.errorMissingProperty:'required' }}\n      } else {\n    {{?}}\n  {{??}}\n    {{? $loopRequired }}\n      {{# def.setupLoop }}\n      {{? $isData }}\n        if ({{=$vSchema}} && !Array.isArray({{=$vSchema}})) {\n          {{# def.addError:'required' }}\n        } else if ({{=$vSchema}} !== undefined) {\n      {{?}}\n\n      for (var {{=$i}} = 0; {{=$i}} < {{=$vSchema}}.length; {{=$i}}++) {\n        if ({{=$data}}[{{=$vSchema}}[{{=$i}}]] === undefined\n            {{? $ownProperties }}\n              || !{{# def.isRequiredOwnProperty }}\n            {{?}}) {\n          {{# def.addError:'required' }}\n        }\n      }\n\n      {{? $isData }}  }  {{?}}\n    {{??}}\n      {{~ $required:$propertyKey }}\n        {{# def.allErrorsMissingProperty:'required' }}\n      {{~}}\n    {{?}}\n  {{?}}\n\n  {{ it.errorPath = $currentErrorPath; }}\n\n{{?? $breakOnError }}\n  if (true) {\n{{?}}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/typescript/lib/lib.es2024.arraybuffer.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893076227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\ninterface ArrayBuffer {\n    /**\n     * If this ArrayBuffer is resizable, returns the maximum byte length given during construction; returns the byte length if not.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/maxByteLength)\n     */\n    get maxByteLength(): number;\n\n    /**\n     * Returns true if this ArrayBuffer can be resized.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/resizable)\n     */\n    get resizable(): boolean;\n\n    /**\n     * Resizes the ArrayBuffer to the specified size (in bytes).\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/resize)\n     */\n    resize(newByteLength?: number): void;\n\n    /**\n     * Returns a boolean indicating whether or not this buffer has been detached (transferred).\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/detached)\n     */\n    get detached(): boolean;\n\n    /**\n     * Creates a new ArrayBuffer with the same byte content as this buffer, then detaches this buffer.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transfer)\n     */\n    transfer(newByteLength?: number): ArrayBuffer;\n\n    /**\n     * Creates a new non-resizable ArrayBuffer with the same byte content as this buffer, then detaches this buffer.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transferToFixedLength)\n     */\n    transferToFixedLength(newByteLength?: number): ArrayBuffer;\n}\n\ninterface ArrayBufferConstructor {\n    new (byteLength: number, options?: { maxByteLength?: number; }): ArrayBuffer;\n}\n"
        }
    ]
}
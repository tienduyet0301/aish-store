{
    "sourceFile": "node_modules/tinyglobby/node_modules/fdir/dist/api/queue.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893055618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Queue = void 0;\n/**\n * This is a custom stateless queue to track concurrent async fs calls.\n * It increments a counter whenever a call is queued and decrements it\n * as soon as it completes. When the counter hits 0, it calls onQueueEmpty.\n */\nclass Queue {\n    onQueueEmpty;\n    count = 0;\n    constructor(onQueueEmpty) {\n        this.onQueueEmpty = onQueueEmpty;\n    }\n    enqueue() {\n        this.count++;\n    }\n    dequeue(error, output) {\n        if (--this.count <= 0 || error)\n            this.onQueueEmpty(error, output);\n    }\n}\nexports.Queue = Queue;\n"
        }
    ]
}
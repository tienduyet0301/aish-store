{
    "sourceFile": "node_modules/tinyglobby/node_modules/fdir/dist/builder/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893056423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/// <reference types=\"node\" />\nimport { Output, OnlyCountsOutput, GroupOutput, PathsOutput, Options, FilterPredicate, ExcludePredicate, GlobParams } from \"../types\";\nimport { APIBuilder } from \"./api-builder\";\nimport type picomatch from \"picomatch\";\nexport declare class Builder<TReturnType extends Output = PathsOutput, TGlobFunction = typeof picomatch> {\n    private readonly globCache;\n    private options;\n    private globFunction?;\n    constructor(options?: Partial<Options<TGlobFunction>>);\n    group(): Builder<GroupOutput, TGlobFunction>;\n    withPathSeparator(separator: \"/\" | \"\\\\\"): this;\n    withBasePath(): this;\n    withRelativePaths(): this;\n    withDirs(): this;\n    withMaxDepth(depth: number): this;\n    withMaxFiles(limit: number): this;\n    withFullPaths(): this;\n    withErrors(): this;\n    withSymlinks({ resolvePaths }?: {\n        resolvePaths?: boolean | undefined;\n    }): this;\n    withAbortSignal(signal: AbortSignal): this;\n    normalize(): this;\n    filter(predicate: FilterPredicate): this;\n    onlyDirs(): this;\n    exclude(predicate: ExcludePredicate): this;\n    onlyCounts(): Builder<OnlyCountsOutput, TGlobFunction>;\n    crawl(root?: string): APIBuilder<TReturnType>;\n    withGlobFunction<TFunc>(fn: TFunc): Builder<TReturnType, TFunc>;\n    /**\n     * @deprecated Pass options using the constructor instead:\n     * ```ts\n     * new fdir(options).crawl(\"/path/to/root\");\n     * ```\n     * This method will be removed in v7.0\n     */\n    crawlWithOptions(root: string, options: Partial<Options<TGlobFunction>>): APIBuilder<TReturnType>;\n    glob(...patterns: string[]): Builder<TReturnType, TGlobFunction>;\n    globWithOptions(patterns: string[]): Builder<TReturnType, TGlobFunction>;\n    globWithOptions(patterns: string[], ...options: GlobParams<TGlobFunction>): Builder<TReturnType, TGlobFunction>;\n}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/array.prototype.tosorted/test/tests.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892034581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar hasOwn = require('hasown');\n\nmodule.exports = function (toSorted, t) {\n\tvar nums = [2, 1, 3];\n\tvar result = toSorted(nums);\n\tt.deepEqual(\n\t\tresult,\n\t\t[1, 2, 3],\n\t\t'array is sorted'\n\t);\n\tt.notEqual(nums, result, 'original array is not returned');\n\tt.deepEqual(nums, [2, 1, 3], 'original array is unchanged');\n\n\tnums.sort();\n\tt.deepEqual(nums, result, 'mutated original matches result');\n\n\tt.deepEqual(\n\t\ttoSorted('acab'),\n\t\t['a', 'a', 'b', 'c'],\n\t\t'string sorts to array'\n\t);\n\n\tvar halfPoo = '\\uD83D';\n\tvar endPoo = '\\uDCA9';\n\tvar poo = halfPoo + endPoo;\n\tt.deepEqual(\n\t\ttoSorted('a' + poo + 'c'),\n\t\t['a', 'c', halfPoo, endPoo],\n\t\t'code point is sorted as expected'\n\t);\n\n\tvar arrayLikeLengthValueOf = {\n\t\tlength: {\n\t\t\tvalueOf: function () { return 2; }\n\t\t},\n\t\t0: 4,\n\t\t1: 0,\n\t\t2: 1\n\t};\n\tt.deepEqual(toSorted(arrayLikeLengthValueOf), [0, 4]);\n\n\tt.test('not positive integer lengths', function (st) {\n\t\tst.deepEqual(toSorted({ length: -2 }), []);\n\t\tst.deepEqual(toSorted({ length: 'dog' }), []);\n\t\tst.deepEqual(toSorted({ length: NaN }), []);\n\n\t\tst.end();\n\t});\n\n\tt.test('getters', { skip: !Object.defineProperty }, function (st) {\n\t\tvar getCalls = [];\n\n\t\tvar arrayLike = {\n\t\t\t0: 2,\n\t\t\t1: 1,\n\t\t\t2: 3,\n\t\t\tlength: 3\n\t\t};\n\t\tObject.defineProperty(arrayLike, '0', {\n\t\t\tget: function () {\n\t\t\t\tgetCalls.push(0);\n\t\t\t\treturn 2;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(arrayLike, '1', {\n\t\t\tget: function () {\n\t\t\t\tgetCalls.push(1);\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(arrayLike, '2', {\n\t\t\tget: function () {\n\t\t\t\tgetCalls.push(2);\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t});\n\n\t\tvar up = { gross: true };\n\t\tst['throws'](\n\t\t\tfunction () {\n\t\t\t\ttoSorted(arrayLike, function () {\n\t\t\t\t\tthrow up;\n\t\t\t\t});\n\t\t\t},\n\t\t\tup\n\t\t);\n\t\tst.deepEqual(getCalls, [0, 1, 2]);\n\n\t\tvar arr1 = [5, 0, 3];\n\t\tObject.defineProperty(arr1, '0', {\n\t\t\tget: function () {\n\t\t\t\tarr1.push(1);\n\t\t\t\treturn 5;\n\t\t\t}\n\t\t});\n\t\tst.deepEqual(toSorted(arr1), [0, 3, 5]);\n\n\t\tvar arr = [5, 1, 4, 6, 3];\n\t\tArray.prototype[3] = 2; // eslint-disable-line no-extend-native\n\t\tst.teardown(function () {\n\t\t\tdelete Array.prototype[3];\n\t\t});\n\n\t\tObject.defineProperty(arr, '2', {\n\t\t\tget: function () {\n\t\t\t\tarr.length = 1;\n\t\t\t\treturn 4;\n\t\t\t}\n\t\t});\n\n\t\tst.deepEqual(toSorted(arr), [1, 2, 4, 5, undefined]);\n\n\t\tst.end();\n\t});\n\n\tt.test('too-large lengths', function (st) {\n\t\tvar arrayLike = {\n\t\t\t0: 0,\n\t\t\t4294967295: 4294967295,\n\t\t\t4294967296: 4294967296,\n\t\t\tlength: Math.pow(2, 32)\n\t\t};\n\n\t\tst['throws'](\n\t\t\tfunction () { toSorted(arrayLike); },\n\t\t\tRangeError\n\t\t);\n\n\t\tst.end();\n\t});\n\n\tt.deepEqual(toSorted(true), [], 'true yields empty array');\n\tt.deepEqual(toSorted(false), [], 'false yields empty array');\n\n\tt.test('holes', function (st) {\n\t\tvar arr = [3, /* hole */, 4, /* hole */, 1]; // eslint-disable-line no-sparse-arrays\n\t\tArray.prototype[3] = 2; // eslint-disable-line no-extend-native\n\t\tst.teardown(function () {\n\t\t\tdelete Array.prototype[3];\n\t\t});\n\n\t\tvar sorted = toSorted(arr);\n\t\tst.deepEqual(sorted, [1, 2, 3, 4, undefined]);\n\t\tst.ok(hasOwn(sorted, 4));\n\n\t\tst.end();\n\t});\n};\n"
        }
    ]
}
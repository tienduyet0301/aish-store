{
    "sourceFile": "node_modules/aria-query/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892024404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# ARIA Query\n\n![CI](https://github.com/A11yance/aria-query/workflows/CI/badge.svg)\n\nProgrammatic access to the [WAI-ARIA 1.2 Roles Model](https://www.w3.org/TR/wai-aria-1.2/#roles).\nThis package tracks the W3C Recommendation (last update: 6 June 2023).\n\nCDN URL: <https://unpkg.com/aria-query>\n\n## Building the `src/etc` files\n\nThe files under `src/etc` are generated by the `breakUpAriaJSON` script.\n\nTo change them, edit the file `scripts/roles.json` then run:\n\n```bash\nnode ./scripts/breakUpAriaJSON.js\ngit add scripts/roles.json src/etc\n```\n\nIt should work with Node version 6.11.2 or later.\n\n## Utilities\n\n### Interface\n\nThese methods are available on each export from the module. The typing here in the documentation is pseudo-typed. Each export will have its own specific types for each method signature.\n\n```javascript\n{|\n  entries: () => Array<$Item>,\n  get: (key: $Key) => ?$Value,\n  has: (key: $Key) => boolean,\n  keys: () => Array<$Key>,\n  values: () => Array<$Value>,\n|};\n```\n\n### Roles\n\n```javascript\nimport { roles } from 'aria-query';\n```\n\nA map of role names to the role definition. For example:\n\n```javascript\nlet alertRole = roles.get('alert');\n/**\n * Value of alertRole\n * {\n *   \"requiredProps\": {},\n *   \"props\": {\n *     \"aria-atomic\": \"true\",\n *     \"aria-busy\": null,\n *     \"aria-controls\": null,\n *     \"aria-current\": null,\n *     \"aria-describedby\": null,\n *     \"aria-details\": null,\n *     \"aria-disabled\": null,\n *     \"aria-dropeffect\": null,\n *     \"aria-errormessage\": null,\n *     \"aria-expanded\": null,\n *     \"aria-flowto\": null,\n *     \"aria-grabbed\": null,\n *     \"aria-haspopup\": null,\n *     \"aria-hidden\": null,\n *     \"aria-invalid\": null,\n *     \"aria-keyshortcuts\": null,\n *     \"aria-label\": null,\n *     \"aria-labelledby\": null,\n *     \"aria-live\": \"assertive\",\n *     \"aria-owns\": null,\n *     \"aria-relevant\": null,\n *     \"aria-roledescription\": null\n *   },\n *   \"abstract\": false,\n *   \"childrenPresentational\": false,\n *   \"baseConcepts\": [],\n *   \"relatedConcepts\": [ {\n *     \"module\": \"XForms\",\n *     \"concept\": {\n *       \"name\": \"alert\"\n *     }\n *   }],\n *   \"superClass\": [[\"roletype\", \"structure\", \"section\"]]\n * }\n```\n\n### Elements to Roles\n\n```javascript\nimport { elementRoles } from 'aria-query';\n```\n\nHTML Elements with inherent roles are mapped to those roles. In the case of an element like `<input>`, the element often requires a `type` attribute to map to an ARIA role.\n\n```javascript\n[\n  [ '{\"name\": \"article\"}', [ 'article' ] ],\n  [ '{\"name\": \"button\"}', [ 'button' ] ],\n  [ '{\"name\": \"td\"}', [ 'cell', 'gridcell' ] ],\n  [ '{\"name\": \"input\", \"attributes\": [ {\"name\": \"type\", \"value\": \"checkbox\"}] }', [ 'checkbox' ] ],\n  [ '{\"name\": \"th\"}', [ 'columnheader' ] ],\n  [ '{\"name\": \"select\"}', [ 'combobox', 'listbox' ] ],\n  [ '{\"name\": \"menuitem\"}', [ 'command', 'menuitem' ] ],\n  [ '{\"name\": \"dd\"}', [ 'definition' ] ],\n  [ '{\"name\": \"figure\"}', [ 'figure' ] ],\n  [ '{\"name\": \"form\"}', [ 'form' ] ],\n  [ '{\"name\": \"table\"}', [ 'grid', 'table' ] ],\n  [ '{\"name\": \"fieldset\"}', [ 'group' ] ],\n  [ '{\"name\": \"h1\"}', [ 'heading' ] ],\n  [ '{\"name\": \"h2\"}', [ 'heading' ] ],\n  [ '{\"name\": \"h3\"}', [ 'heading' ] ],\n  [ '{\"name\": \"h4\"}', [ 'heading' ] ],\n  [ '{\"name\": \"h5\"}', [ 'heading' ] ],\n  [ '{\"name\": \"h6\"}', [ 'heading' ] ],\n  [ '{\"name\": \"img\"}', [ 'img' ] ],\n  [ '{\"name\": \"a\"}', [ 'link' ] ],\n  [ '{\"name\": \"link\"}', [ 'link' ] ],\n  [ '{\"name\": \"ol\"}', [ 'list' ] ],\n  [ '{\"name\": \"ul\"}', [ 'list' ] ],\n  [ '{\"name\": \"li\"}', [ 'listitem' ] ],\n  [ '{\"name\": \"nav\"}', [ 'navigation' ] ],\n  [ '{\"name\": \"option\"}', [ 'option' ] ],\n  [ '{\"name\": \"input\", \"attributes\": [ {\"name\": \"type\", \"value\": \"radio\"}] }', [ 'radio' ] ],\n  [ '{\"name\": \"frame\"}', [ 'region' ] ],\n  [ '{\"name\": \"rel\"}', [ 'roletype' ] ],\n  [ '{\"name\": \"tr\"}', [ 'row' ] ],\n  [ '{\"name\": \"tbody\"}', [ 'rowgroup' ] ],\n  [ '{\"name\": \"tfoot\"}', [ 'rowgroup' ] ],\n  [ '{\"name\": \"thead\"}', [ 'rowgroup' ] ],\n  [ '{\"name\": \"th\", \"attributes\": [ {\"name\": \"scope\", \"value\": \"row\"}] }', [ 'rowheader' ] ],\n  [ '{\"name\": \"input\", \"attributes\": [ {\"name\": \"type\", \"value\": \"search\"}] }', [ 'searchbox' ] ],\n  [ '{\"name\": \"hr\"}', [ 'separator' ] ],\n  [ '{\"name\": \"dt\"}', [ 'term' ] ],\n  [ '{\"name\": \"dfn\"}', [ 'term' ] ],\n  [ '{\"name\": \"textarea\"}', [ 'textbox' ] ],\n  [ '{\"name\": \"input\", \"attributes\": [ {\"name\": \"type\", \"value\": \"text\"}] }', [ 'textbox' ] ],\n]\n```\n\nThe map of elements to roles is keyed by an HTML concept. An HTML concept corresponds to the `baseConcepts` and `relatedConcepts` of an ARIA role. Concepts exist in the context of a `module`: HTML, XForms, Dublin Core, for example.  The concept representation is an object literal with a name property (the element name) and an optional attributes array.\n\nThe roles are provided in a [Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set).\n\n### Role to element\n\n```javascript\nimport { roleElements } from 'aria-query';\n```\n\nARIA roles are mapped to the HTML Elements with the same inherent role. Some roles, such as `columnheader` are only mapped to an HTML element that expresses specific attributes. In the case of `<input>`, the element often requires a `type` attribute to map to an ARIA role.\n\n```javascript\n[\n  [ 'article', [ {\"name\": \"article\"} ] ],\n  [ 'button', [ {\"name\": \"button\"} ] ],\n  [ 'cell', [ {\"name\": \"td\"} ] ],\n  [ 'checkbox', [ {\"name\": \"input\", \"attributes\": [ {\"name\": \"type\", \"value\": \"checkbox\"}] } ] ],\n  [ 'columnheader', [ {\"name\": \"th\"} ] ],\n  [ 'combobox', [ {\"name\": \"select\"} ] ],\n  [ 'command', [ {\"name\": \"menuitem\"} ] ],\n  [ 'definition', [ {\"name\": \"dd\"}', '{\"name\": \"dfn\"} ] ],\n  [ 'figure', [ {\"name\": \"figure\"} ] ],\n  [ 'form', [ {\"name\": \"form\"} ] ],\n  [ 'grid', [ {\"name\": \"table\"} ] ],\n  [ 'gridcell', [ {\"name\": \"td\"} ] ],\n  [ 'group', [ {\"name\": \"fieldset\"} ] ],\n  [ 'heading', [ {\"name\": \"h1\"}', '{\"name\": \"h2\"}', '{\"name\": \"h3\"}', '{\"name\": \"h4\"}',  '{\"name\": \"h5\"}', '{\"name\": \"h6\"} ] ],\n  [ 'img', [ {\"name\": \"img\"} ] ],\n  [ 'link', [ {\"name\": \"a\"}', '{\"name\": \"link\"} ] ],\n  [ 'list', [ {\"name\": \"ol\"}', '{\"name\": \"ul\"} ] ],\n  [ 'listbox', [ {\"name\": \"select\"} ] ],\n  [ 'listitem', [ {\"name\": \"li\"} ] ],\n  [ 'menuitem', [ {\"name\": \"menuitem\"} ] ],\n  [ 'navigation', [ {\"name\": \"nav\"} ] ],\n  [ 'option', [ {\"name\": \"option\"} ] ],\n  [ 'radio', [ {\"name\": \"input\", \"attributes\": [ {\"name\": \"type\", \"value\": \"radio\"}] } ] ],\n  [ 'region', [ {\"name\": \"frame\"} ] ],\n  [ 'roletype', [ {\"name\": \"rel\"} ] ],\n  [ 'row', [ {\"name\": \"tr\"} ] ],\n  [ 'rowgroup', [ {\"name\": \"tbody\"}', '{\"name\": \"tfoot\"}', '{\"name\": \"thead\"} ] ],\n  [ 'rowheader', [ {\"name\": \"th\", \"attributes\": [ {\"name\": \"scope\", \"value\": \"row\"}] }, {\"name\": \"th\", \"attributes\": [ {\"name\": \"scope\", \"value\": \"rowgroup\"}] } ] ],\n  [ 'searchbox', [ {\"name\": \"input\", \"attributes\": [ {\"name\": \"type\", \"value\": \"search\"}] } ] ],\n  [ 'separator', [ {\"name\": \"hr\"} ] ],\n  [ 'table', [ {\"name\": \"table\"} ] ],\n  [ 'term', [ {\"name\": \"dt\"} ] ],\n  [ 'textbox', [ {\"name\": \"textarea\"}', '{\"name\": \"input\", \"attributes\": [ {\"name\": \"type\", \"value\": \"text\"}] } ] ],\n]\n```\n\n## License\n\nCopyright (c) 2021 A11yance\n"
        }
    ]
}
{
    "sourceFile": "node_modules/aria-query/lib/elementRoleMap.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892017698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _iterationDecorator = _interopRequireDefault(require(\"./util/iterationDecorator\"));\nvar _rolesMap = _interopRequireDefault(require(\"./rolesMap\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nvar elementRoles = [];\nvar keys = _rolesMap.default.keys();\nfor (var i = 0; i < keys.length; i++) {\n  var key = keys[i];\n  var role = _rolesMap.default.get(key);\n  if (role) {\n    var concepts = [].concat(role.baseConcepts, role.relatedConcepts);\n    var _loop = function _loop() {\n      var relation = concepts[k];\n      if (relation.module === 'HTML') {\n        var concept = relation.concept;\n        if (concept) {\n          var elementRoleRelation = elementRoles.filter(function (relation) {\n            return ariaRoleRelationConceptEquals(relation[0], concept);\n          })[0];\n          var roles;\n          if (elementRoleRelation) {\n            roles = elementRoleRelation[1];\n          } else {\n            roles = [];\n          }\n          var isUnique = true;\n          for (var _i = 0; _i < roles.length; _i++) {\n            if (roles[_i] === key) {\n              isUnique = false;\n              break;\n            }\n          }\n          if (isUnique) {\n            roles.push(key);\n          }\n          if (!elementRoleRelation) {\n            elementRoles.push([concept, roles]);\n          }\n        }\n      }\n    };\n    for (var k = 0; k < concepts.length; k++) {\n      _loop();\n    }\n  }\n}\nvar elementRoleMap = {\n  entries: function entries() {\n    return elementRoles;\n  },\n  forEach: function forEach(fn) {\n    var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    for (var _i2 = 0, _elementRoles = elementRoles; _i2 < _elementRoles.length; _i2++) {\n      var _elementRoles$_i = _slicedToArray(_elementRoles[_i2], 2),\n        _key = _elementRoles$_i[0],\n        values = _elementRoles$_i[1];\n      fn.call(thisArg, values, _key, elementRoles);\n    }\n  },\n  get: function get(key) {\n    var item = elementRoles.filter(function (tuple) {\n      return key.name === tuple[0].name && ariaRoleRelationConceptAttributeEquals(key.attributes, tuple[0].attributes);\n    })[0];\n    return item && item[1];\n  },\n  has: function has(key) {\n    return !!elementRoleMap.get(key);\n  },\n  keys: function keys() {\n    return elementRoles.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        key = _ref2[0];\n      return key;\n    });\n  },\n  values: function values() {\n    return elementRoles.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        values = _ref4[1];\n      return values;\n    });\n  }\n};\nfunction ariaRoleRelationConceptEquals(a, b) {\n  return a.name === b.name && ariaRoleRelationConstraintsEquals(a.constraints, b.constraints) && ariaRoleRelationConceptAttributeEquals(a.attributes, b.attributes);\n}\nfunction ariaRoleRelationConstraintsEquals(a, b) {\n  if (a === undefined && b !== undefined) {\n    return false;\n  }\n  if (a !== undefined && b === undefined) {\n    return false;\n  }\n  if (a !== undefined && b !== undefined) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (var _i3 = 0; _i3 < a.length; _i3++) {\n      if (a[_i3] !== b[_i3]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction ariaRoleRelationConceptAttributeEquals(a, b) {\n  if (a === undefined && b !== undefined) {\n    return false;\n  }\n  if (a !== undefined && b === undefined) {\n    return false;\n  }\n  if (a !== undefined && b !== undefined) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (var _i4 = 0; _i4 < a.length; _i4++) {\n      if (a[_i4].name !== b[_i4].name || a[_i4].value !== b[_i4].value) {\n        return false;\n      }\n      if (a[_i4].constraints === undefined && b[_i4].constraints !== undefined) {\n        return false;\n      }\n      if (a[_i4].constraints !== undefined && b[_i4].constraints === undefined) {\n        return false;\n      }\n      if (a[_i4].constraints !== undefined && b[_i4].constraints !== undefined) {\n        if (a[_i4].constraints.length !== b[_i4].constraints.length) {\n          return false;\n        }\n        for (var j = 0; j < a[_i4].constraints.length; j++) {\n          if (a[_i4].constraints[j] !== b[_i4].constraints[j]) {\n            return false;\n          }\n        }\n      }\n    }\n  }\n  return true;\n}\nvar _default = exports.default = (0, _iterationDecorator.default)(elementRoleMap, elementRoleMap.entries());"
        }
    ]
}
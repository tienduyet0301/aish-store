{
    "sourceFile": "node_modules/eslint-visitor-keys/dist/eslint-visitor-keys.d.cts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892284494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "type VisitorKeys$1 = {\n    readonly [type: string]: ReadonlyArray<string>;\n};\n/**\n * @typedef {{ readonly [type: string]: ReadonlyArray<string> }} VisitorKeys\n */\n/**\n * @type {VisitorKeys}\n */\ndeclare const KEYS: VisitorKeys$1;\n\n/**\n * Get visitor keys of a given node.\n * @param {Object} node The AST node to get keys.\n * @returns {readonly string[]} Visitor keys of the node.\n */\ndeclare function getKeys(node: Object): readonly string[];\n/**\n * Make the union set with `KEYS` and given keys.\n * @param {VisitorKeys} additionalKeys The additional keys.\n * @returns {VisitorKeys} The union set.\n */\ndeclare function unionWith(additionalKeys: VisitorKeys): VisitorKeys;\n\ntype VisitorKeys = VisitorKeys$1;\n\nexport { KEYS, type VisitorKeys, getKeys, unionWith };\n"
        }
    ]
}
{
    "sourceFile": "node_modules/is-string/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892342044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar isString = require('../');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\ntest('not Strings', function (t) {\n\t// @ts-expect-error\n\tt.notOk(isString(), 'undefined is not String');\n\tt.notOk(isString(null), 'null is not String');\n\tt.notOk(isString(false), 'false is not String');\n\tt.notOk(isString(true), 'true is not String');\n\tt.notOk(isString([]), 'array is not String');\n\tt.notOk(isString({}), 'object is not String');\n\tt.notOk(isString(function () {}), 'function is not String');\n\tt.notOk(isString(/a/g), 'regex literal is not String');\n\tt.notOk(isString(new RegExp('a', 'g')), 'regex object is not String');\n\tt.notOk(isString(new Date()), 'new Date() is not String');\n\tt.notOk(isString(42), 'number is not String');\n\tt.notOk(isString(Object(42)), 'number object is not String');\n\tt.notOk(isString(NaN), 'NaN is not String');\n\tt.notOk(isString(Infinity), 'Infinity is not String');\n\tt.end();\n});\n\ntest('@@toStringTag', { skip: !hasToStringTag }, function (t) {\n\t/** @type {{ toString(): unknown; valueOf(): unknown; [Symbol.toStringTag]?: string; }} */\n\tvar fakeString = {\n\t\ttoString: function () { return '7'; },\n\t\tvalueOf: function () { return '42'; }\n\t};\n\tfakeString[Symbol.toStringTag] = 'String';\n\tt.notOk(isString(fakeString), 'fake String with @@toStringTag \"String\" is not String');\n\tt.end();\n});\n\ntest('Strings', function (t) {\n\tt.ok(isString('foo'), 'string primitive is String');\n\tt.ok(isString(Object('foo')), 'string object is String');\n\tt.end();\n});\n"
        }
    ]
}
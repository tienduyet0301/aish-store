{
    "sourceFile": "node_modules/busboy/bench/bench-urlencoded-fields-100pairs-small.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892064982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nconst buffers = [\n  Buffer.from(\n    (new Array(100)).fill('').map((_, i) => `key${i}=value${i}`).join('&')\n  ),\n];\nconst calls = {\n  field: 0,\n  end: 0,\n};\n\nlet n = 3e3;\n\nconst moduleName = process.argv[2];\nswitch (moduleName) {\n  case 'busboy': {\n    const busboy = require('busboy');\n\n    console.time(moduleName);\n    (function next() {\n      const parser = busboy({\n        limits: {\n          fieldSizeLimit: Infinity,\n        },\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded; charset=utf-8',\n        },\n      });\n      parser.on('field', (name, val, info) => {\n        ++calls.field;\n      }).on('close', () => {\n        ++calls.end;\n        if (--n === 0)\n          console.timeEnd(moduleName);\n        else\n          process.nextTick(next);\n      });\n\n      for (const buf of buffers)\n        parser.write(buf);\n      parser.end();\n    })();\n    break;\n  }\n\n  case 'formidable': {\n    const QuerystringParser =\n      require('formidable/src/parsers/Querystring.js');\n\n    console.time(moduleName);\n    (function next() {\n      const parser = new QuerystringParser();\n      parser.on('data', (obj) => {\n        ++calls.field;\n      }).on('end', () => {\n        ++calls.end;\n        if (--n === 0)\n          console.timeEnd(moduleName);\n        else\n          process.nextTick(next);\n      });\n\n      for (const buf of buffers)\n        parser.write(buf);\n      parser.end();\n    })();\n    break;\n  }\n\n  case 'formidable-streaming': {\n    const QuerystringParser =\n      require('formidable/src/parsers/StreamingQuerystring.js');\n\n    console.time(moduleName);\n    (function next() {\n      const parser = new QuerystringParser();\n      parser.on('data', (obj) => {\n        ++calls.field;\n      }).on('end', () => {\n        ++calls.end;\n        if (--n === 0)\n          console.timeEnd(moduleName);\n        else\n          process.nextTick(next);\n      });\n\n      for (const buf of buffers)\n        parser.write(buf);\n      parser.end();\n    })();\n    break;\n  }\n\n  default:\n    if (moduleName === undefined)\n      console.error('Missing parser module name');\n    else\n      console.error(`Invalid parser module name: ${moduleName}`);\n    process.exit(1);\n}\n"
        }
    ]
}
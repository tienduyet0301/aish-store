{
    "sourceFile": "node_modules/async-function/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892042389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar getProto = require('get-proto');\nvar semver = require('semver');\n\nvar getAsyncFunction = require('../');\n\ntest('getAsyncFunction', function (t) {\n\tvar result = getAsyncFunction();\n\n\t/* eslint-env browser */\n\tif (typeof window === 'undefined' && typeof process !== 'undefined') {\n\t\tt.equal(\n\t\t\t!!result,\n\t\t\tsemver.satisfies(process.version, '>= 7.6'),\n\t\t\t'result is present or absent as expected for node ' + process.version\n\t\t);\n\t}\n\n\tt.test('exists', { skip: !result }, function (st) {\n\t\tif (result && getProto) { // TS can't infer `skip`, or that getProto definitely exists if AsyncFunction exists\n\t\t\tst.equal(typeof result, 'function', 'is a function');\n\t\t\tst.equal(getProto(result), Function, 'extends Function');\n\n\t\t\treturn result('a', 'return a')(42).then(function (a) {\n\t\t\t\tst.equal(a, 42, 'returns an async function');\n\t\t\t});\n\t\t}\n\t\treturn st.fail('should never get here');\n\t});\n\n\tt.test('does not exist', { skip: !!result }, function (st) {\n\t\tst.equal(result, false, 'is false');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"
        }
    ]
}
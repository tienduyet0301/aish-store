{
    "sourceFile": "node_modules/json-buffer/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892374005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\nvar test = require('tape')\nvar _JSON = require('../')\n\nfunction clone (o) {\n  return JSON.parse(JSON.stringify(o))\n}\n\nvar examples = {\n  simple: { foo: [], bar: {}, baz: Buffer.from('some binary data') },\n  just_buffer: Buffer.from('JUST A BUFFER'),\n  all_types: {\n    string:'hello',\n    number: 3145,\n    null: null,\n    object: {},\n    array: [],\n    boolean: true,\n    boolean2: false\n  },\n  foo: Buffer.from('foo'),\n  foo2: Buffer.from('foo2'),\n  escape: {\n    buffer: Buffer.from('x'),\n    string: _JSON.stringify(Buffer.from('x'))\n  },\n  escape2: {\n    buffer: Buffer.from('x'),\n    string: ':base64:'+ Buffer.from('x').toString('base64')\n  },\n  undefined: {\n    empty: undefined, test: true\n  },\n  undefined2: {\n    first: 1, empty: undefined, test: true\n  },\n  undefinedArray: {\n    array: [undefined, 1, 'two']\n  },\n  fn: {\n    fn: function () {}    \n  },\n  undefined: undefined\n}\n\nfor(k in examples)\n(function (value, k) { \n  test(k, function (t) {\n    var s = _JSON.stringify(value)\n    console.log('parse', s)\n    if(JSON.stringify(value) !== undefined) {\n      console.log(s)\n      var _value = _JSON.parse(s)\n      t.deepEqual(clone(_value), clone(value))\n    }\n    else\n      t.equal(s, undefined)\n    t.end()\n  })\n})(examples[k], k)\n\n\n\n"
        }
    ]
}
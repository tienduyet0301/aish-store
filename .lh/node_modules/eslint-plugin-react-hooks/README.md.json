{
    "sourceFile": "node_modules/eslint-plugin-react-hooks/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892283823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# `eslint-plugin-react-hooks`\n\nThis ESLint plugin enforces the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks).\n\nIt is a part of the [Hooks API](https://react.dev/reference/react/hooks) for React.\n\n## Installation\n\n**Note: If you're using Create React App, please use `react-scripts` >= 3 instead of adding it directly.**\n\nAssuming you already have ESLint installed, run:\n\n```sh\n# npm\nnpm install eslint-plugin-react-hooks --save-dev\n\n# yarn\nyarn add eslint-plugin-react-hooks --dev\n```\n\n### Legacy Config (.eslintrc)\n\nIf you are still using ESLint below 9.0.0, please continue to use `recommended-legacy`. To avoid breaking changes, we still support `recommended` as well, but note that this will be changed to alias the flat recommended config in v6.\n\n```js\n{\n  \"extends\": [\n    // ...\n    \"plugin:react-hooks/recommended-legacy\"\n  ]\n}\n```\n\n### Flat Config (eslint.config.js)\n\nFor [ESLint 9.0.0 and above](https://eslint.org/blog/2024/04/eslint-v9.0.0-released/) users, add the `recommended-latest` config.\n\n```js\nimport reactHooks from 'eslint-plugin-react-hooks';\n\nexport default [\n  // ...\n  reactHooks.configs['recommended-latest'],\n];\n```\n\n### Custom Configuration\n\nIf you want more fine-grained configuration, you can instead add a snippet like this to your ESLint configuration file:\n\n#### Legacy Config (.eslintrc)\n\n```js\n{\n  \"plugins\": [\n    // ...\n    \"react-hooks\"\n  ],\n  \"rules\": {\n    // ...\n    \"react-hooks/rules-of-hooks\": \"error\",\n    \"react-hooks/exhaustive-deps\": \"warn\"\n  }\n}\n```\n\n#### Flat Config (eslint.config.js)\n\n```js\nimport reactHooks from 'eslint-plugin-react-hooks';\n\nexport default [\n  {\n    files: ['**/*.{js,jsx}'],\n    plugins: { 'react-hooks': reactHooks },\n    // ...\n    rules: {\n      'react-hooks/rules-of-hooks': 'error',\n      'react-hooks/exhaustive-deps': 'warn',\n    }\n  },\n];\n```\n\n## Advanced Configuration\n\n`exhaustive-deps` can be configured to validate dependencies of custom Hooks with the `additionalHooks` option.\nThis option accepts a regex to match the names of custom Hooks that have dependencies.\n\n```js\n{\n  \"rules\": {\n    // ...\n    \"react-hooks/exhaustive-deps\": [\"warn\", {\n      \"additionalHooks\": \"(useMyCustomHook|useMyOtherCustomHook)\"\n    }]\n  }\n}\n```\n\nWe suggest to use this option **very sparingly, if at all**. Generally saying, we recommend most custom Hooks to not use the dependencies argument, and instead provide a higher-level API that is more focused around a specific use case.\n\n## Valid and Invalid Examples\n\nPlease refer to the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks) documentation to learn more about this rule.\n\n## License\n\nMIT\n"
        }
    ]
}
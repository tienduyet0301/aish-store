{
    "sourceFile": "node_modules/@rtsao/scc/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891923043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nmodule.exports = tarjan;\n\n// Adapted from https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm#The_algorithm_in_pseudocode\n\nfunction tarjan(graph) {\n  const indices = new Map();\n  const lowlinks = new Map();\n  const onStack = new Set();\n  const stack = [];\n  const scc = [];\n  let idx = 0;\n\n  function strongConnect(v) {\n    indices.set(v, idx);\n    lowlinks.set(v, idx);\n    idx++;\n    stack.push(v);\n    onStack.add(v);\n\n    const deps = graph.get(v);\n    for (const dep of deps) {\n      if (!indices.has(dep)) {\n        strongConnect(dep);\n        lowlinks.set(v, Math.min(lowlinks.get(v), lowlinks.get(dep)));\n      } else if (onStack.has(dep)) {\n        lowlinks.set(v, Math.min(lowlinks.get(v), indices.get(dep)));\n      }\n    }\n\n    if (lowlinks.get(v) === indices.get(v)) {\n      const vertices = new Set();\n      let w = null;\n      while (v !== w) {\n        w = stack.pop();\n        onStack.delete(w);\n        vertices.add(w);\n      }\n      scc.push(vertices);\n    }\n  }\n\n  for (const v of graph.keys()) {\n    if (!indices.has(v)) {\n      strongConnect(v);\n    }\n  }\n\n  return scc;\n}\n"
        }
    ]
}
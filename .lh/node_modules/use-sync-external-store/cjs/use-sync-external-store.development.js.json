{
    "sourceFile": "node_modules/use-sync-external-store/cjs/use-sync-external-store.development.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893098505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @license React\n * use-sync-external-store.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nif (\"production\" !== process.env.NODE_ENV) {\n  \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n    \"function\" ===\n      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n  var useSyncExternalStore$jscomp$inline_1 =\n    require(\"react\").useSyncExternalStore;\n  console.error(\n    \"The main 'use-sync-external-store' entry point is not supported; all it does is re-export useSyncExternalStore from the 'react' package, so it only works with React 18+.\\n\\nIf you wish to support React 16 and 17, import from 'use-sync-external-store/shim' instead. It will fall back to a shimmed implementation when the native one is not available.\\n\\nIf you only support React 18+, you can import directly from 'react'.\"\n  );\n  exports.useSyncExternalStore = useSyncExternalStore$jscomp$inline_1;\n  \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n    \"function\" ===\n      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@types/whatwg-url/lib/URLSearchParams.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891957306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { URLSearchParams } from \"../index\";\nimport { implementation as URLSearchParamsImpl } from \"./URLSearchParams-impl\";\n\n/**\n * Checks whether `obj` is a `URLSearchParams` object with an implementation\n * provided by this package.\n */\nexport function is(obj: unknown): obj is URLSearchParams;\n\n/**\n * Checks whether `obj` is a `URLSearchParamsImpl` WebIDL2JS implementation object\n * provided by this package.\n */\nexport function isImpl(obj: unknown): obj is URLSearchParamsImpl;\n\n/**\n * Converts the `URLSearchParams` wrapper into a `URLSearchParamsImpl` object.\n *\n * @throws {TypeError} If `obj` is not a `URLSearchParams` wrapper instance provided by this package.\n */\nexport function convert(globalObject: object, obj: unknown, { context }?: { context: string }): URLSearchParamsImpl;\n\nexport function createDefaultIterator<TIteratorKind extends \"key\" | \"value\" | \"key+value\">(\n    globalObject: object,\n    target: URLSearchParamsImpl,\n    kind: TIteratorKind,\n): IterableIterator<TIteratorKind extends \"key\" | \"value\" ? string : [name: string, value: string]>;\n\n/**\n * Creates a new `URLSearchParams` instance.\n *\n * @throws {Error} If the `globalObject` doesn't have a WebIDL2JS constructor\n *         registry or a `URLSearchParams` constructor provided by this package\n *         in the WebIDL2JS constructor registry.\n */\nexport function create(\n    globalObject: object,\n    constructorArgs?: readonly [\n        init: ReadonlyArray<[name: string, value: string]> | { readonly [name: string]: string } | string,\n    ],\n    privateData?: { doNotStripQMark?: boolean | undefined },\n): URLSearchParams;\n\n/**\n * Calls `create()` and returns the internal `URLSearchParamsImpl`.\n *\n * @throws {Error} If the `globalObject` doesn't have a WebIDL2JS constructor\n *         registry or a `URLSearchParams` constructor provided by this package\n *         in the WebIDL2JS constructor registry.\n */\nexport function createImpl(\n    globalObject: object,\n    constructorArgs?: readonly [\n        init: ReadonlyArray<[name: string, value: string]> | { readonly [name: string]: string } | string,\n    ],\n    privateData?: { doNotStripQMark?: boolean | undefined },\n): URLSearchParamsImpl;\n\n/**\n * Initializes the `URLSearchParams` instance, called by `create()`.\n *\n * Useful when manually sub-classing a non-constructable wrapper object.\n */\nexport function setup<T extends URLSearchParams>(\n    obj: T,\n    globalObject: object,\n    constructorArgs?: readonly [\n        init: ReadonlyArray<[name: string, value: string]> | { readonly [name: string]: string } | string,\n    ],\n    privateData?: { doNotStripQMark?: boolean | undefined },\n): T;\n\n/**\n * Creates a new `URLSearchParams` object without runing the constructor steps.\n *\n * Useful when implementing specifications that initialize objects\n * in different ways than their constructors do.\n */\ndeclare function _new(\n    globalObject: object,\n    newTarget?: new(\n        init: ReadonlyArray<[name: string, value: string]> | { readonly [name: string]: string } | string,\n    ) => URLSearchParams,\n): URLSearchParamsImpl;\nexport { _new as new };\n\n/**\n * Installs the `URLSearchParams` constructor onto the `globalObject`.\n *\n * @throws {Error} If the target `globalObject` doesn't have an `Error` constructor.\n */\nexport function install(globalObject: object, globalNames: readonly string[]): void;\n"
        }
    ]
}
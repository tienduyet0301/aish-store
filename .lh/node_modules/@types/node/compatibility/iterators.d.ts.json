{
    "sourceFile": "node_modules/@types/node/compatibility/iterators.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891955111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// Backwards-compatible iterator interfaces, augmented with iterator helper methods by lib.esnext.iterator in TypeScript 5.6.\n// The IterableIterator interface does not contain these methods, which creates assignability issues in places where IteratorObjects\n// are expected (eg. DOM-compatible APIs) if lib.esnext.iterator is loaded.\n// Also ensures that iterators returned by the Node API, which inherit from Iterator.prototype, correctly expose the iterator helper methods\n// if lib.esnext.iterator is loaded.\n// TODO: remove once this package no longer supports TS 5.5, and replace NodeJS.BuiltinIteratorReturn with BuiltinIteratorReturn.\n\n// Placeholders for TS <5.6\ninterface IteratorObject<T, TReturn, TNext> {}\ninterface AsyncIteratorObject<T, TReturn, TNext> {}\n\ndeclare namespace NodeJS {\n    // Populate iterator methods for TS <5.6\n    interface Iterator<T, TReturn, TNext> extends globalThis.Iterator<T, TReturn, TNext> {}\n    interface AsyncIterator<T, TReturn, TNext> extends globalThis.AsyncIterator<T, TReturn, TNext> {}\n\n    // Polyfill for TS 5.6's instrinsic BuiltinIteratorReturn type, required for DOM-compatible iterators\n    type BuiltinIteratorReturn = ReturnType<any[][typeof Symbol.iterator]> extends\n        globalThis.Iterator<any, infer TReturn> ? TReturn\n        : any;\n}\n"
        }
    ]
}
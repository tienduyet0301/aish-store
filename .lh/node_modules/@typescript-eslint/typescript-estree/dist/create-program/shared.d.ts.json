{
    "sourceFile": "node_modules/@typescript-eslint/typescript-estree/dist/create-program/shared.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891999662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Program } from 'typescript';\nimport * as ts from 'typescript';\nimport type { ParseSettings } from '../parseSettings';\nexport interface ASTAndNoProgram {\n    ast: ts.SourceFile;\n    program: null;\n}\nexport interface ASTAndDefiniteProgram {\n    ast: ts.SourceFile;\n    program: ts.Program;\n}\nexport type ASTAndProgram = ASTAndDefiniteProgram | ASTAndNoProgram;\n/**\n * Compiler options required to avoid critical functionality issues\n */\nexport declare const CORE_COMPILER_OPTIONS: ts.CompilerOptions;\nexport declare const DEFAULT_EXTRA_FILE_EXTENSIONS: Set<string>;\nexport declare function createDefaultCompilerOptionsFromExtra(parseSettings: ParseSettings): ts.CompilerOptions;\nexport type CanonicalPath = {\n    __brand: unknown;\n} & string;\nexport declare function getCanonicalFileName(filePath: string): CanonicalPath;\nexport declare function ensureAbsolutePath(p: string, tsconfigRootDir: string): string;\nexport declare function canonicalDirname(p: CanonicalPath): CanonicalPath;\nexport declare function getAstFromProgram(currentProgram: Program, filePath: string): ASTAndDefiniteProgram | undefined;\n/**\n * Hash content for compare content.\n * @param content hashed contend\n * @returns hashed result\n */\nexport declare function createHash(content: string): string;\n//# sourceMappingURL=shared.d.ts.map"
        }
    ]
}
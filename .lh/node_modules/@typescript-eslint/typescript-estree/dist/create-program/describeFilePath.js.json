{
    "sourceFile": "node_modules/@typescript-eslint/typescript-estree/dist/create-program/describeFilePath.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891999361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.describeFilePath = describeFilePath;\nconst node_path_1 = __importDefault(require(\"node:path\"));\nfunction describeFilePath(filePath, tsconfigRootDir) {\n    // If the TSConfig root dir is a parent of the filePath, use\n    // `<tsconfigRootDir>` as a prefix for the path.\n    const relative = node_path_1.default.relative(tsconfigRootDir, filePath);\n    if (relative && !relative.startsWith('..') && !node_path_1.default.isAbsolute(relative)) {\n        return `<tsconfigRootDir>/${relative}`;\n    }\n    // Root-like Mac/Linux (~/*, ~*) or Windows (C:/*, /) paths that aren't\n    // relative to the TSConfig root dir should be fully described.\n    // This avoids strings like <tsconfigRootDir>/../../../../repo/file.ts.\n    // https://github.com/typescript-eslint/typescript-eslint/issues/6289\n    if (/^[(\\w+:)\\\\/~]/.test(filePath)) {\n        return filePath;\n    }\n    // Similarly, if the relative path would contain a lot of ../.., then\n    // ignore it and print the file path directly.\n    if (/\\.\\.[/\\\\]\\.\\./.test(relative)) {\n        return filePath;\n    }\n    // Lastly, since we've eliminated all special cases, we know the cleanest\n    // path to print is probably the prefixed relative one.\n    return `<tsconfigRootDir>/${relative}`;\n}\n"
        }
    ]
}
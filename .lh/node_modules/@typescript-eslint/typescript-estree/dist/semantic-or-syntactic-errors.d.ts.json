{
    "sourceFile": "node_modules/@typescript-eslint/typescript-estree/dist/semantic-or-syntactic-errors.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892002397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Diagnostic, Program, SourceFile } from 'typescript';\nexport interface SemanticOrSyntacticError extends Diagnostic {\n    message: string;\n}\n/**\n * By default, diagnostics from the TypeScript compiler contain all errors - regardless of whether\n * they are related to generic ECMAScript standards, or TypeScript-specific constructs.\n *\n * Therefore, we filter out all diagnostics, except for the ones we explicitly want to consider when\n * the user opts in to throwing errors on semantic issues.\n */\nexport declare function getFirstSemanticOrSyntacticError(program: Program, ast: SourceFile): SemanticOrSyntacticError | undefined;\n//# sourceMappingURL=semantic-or-syntactic-errors.d.ts.map"
        }
    ]
}
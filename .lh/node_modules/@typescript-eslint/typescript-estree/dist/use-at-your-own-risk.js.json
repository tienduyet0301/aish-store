{
    "sourceFile": "node_modules/@typescript-eslint/typescript-estree/dist/use-at-your-own-risk.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892003003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalFileName = exports.typescriptVersionIsAtLeast = void 0;\n// required by website\n__exportStar(require(\"./ast-converter\"), exports);\n__exportStar(require(\"./create-program/getScriptKind\"), exports);\n// required by packages/utils/src/ts-estree.ts\n__exportStar(require(\"./getModifiers\"), exports);\nvar version_check_1 = require(\"./version-check\");\nObject.defineProperty(exports, \"typescriptVersionIsAtLeast\", { enumerable: true, get: function () { return version_check_1.typescriptVersionIsAtLeast; } });\n// required by packages/type-utils\nvar shared_1 = require(\"./create-program/shared\");\nObject.defineProperty(exports, \"getCanonicalFileName\", { enumerable: true, get: function () { return shared_1.getCanonicalFileName; } });\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@typescript-eslint/typescript-estree/dist/parseSettings/warnAboutTSVersion.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892002365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SUPPORTED_TYPESCRIPT_VERSIONS = void 0;\nexports.warnAboutTSVersion = warnAboutTSVersion;\nconst semver_1 = __importDefault(require(\"semver\"));\nconst ts = __importStar(require(\"typescript\"));\nconst version_1 = require(\"../version\");\n/**\n * This needs to be kept in sync with package.json in the typescript-eslint monorepo\n */\nexports.SUPPORTED_TYPESCRIPT_VERSIONS = '>=4.8.4 <5.9.0';\n/*\n * The semver package will ignore prerelease ranges, and we don't want to explicitly document every one\n * List them all separately here, so we can automatically create the full string\n */\nconst SUPPORTED_PRERELEASE_RANGES = [];\nconst ACTIVE_TYPESCRIPT_VERSION = ts.version;\nconst isRunningSupportedTypeScriptVersion = semver_1.default.satisfies(ACTIVE_TYPESCRIPT_VERSION, [exports.SUPPORTED_TYPESCRIPT_VERSIONS, ...SUPPORTED_PRERELEASE_RANGES].join(' || '));\nlet warnedAboutTSVersion = false;\nfunction warnAboutTSVersion(parseSettings, passedLoggerFn) {\n    if (isRunningSupportedTypeScriptVersion || warnedAboutTSVersion) {\n        return;\n    }\n    if (passedLoggerFn ||\n        // See https://github.com/typescript-eslint/typescript-eslint/issues/7896\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        (typeof process === 'undefined' ? false : process.stdout?.isTTY)) {\n        const border = '=============';\n        const versionWarning = [\n            border,\n            '\\n',\n            'WARNING: You are currently running a version of TypeScript which is not officially supported by @typescript-eslint/typescript-estree.',\n            '\\n',\n            `* @typescript-eslint/typescript-estree version: ${version_1.version}`,\n            `* Supported TypeScript versions: ${exports.SUPPORTED_TYPESCRIPT_VERSIONS}`,\n            `* Your TypeScript version: ${ACTIVE_TYPESCRIPT_VERSION}`,\n            '\\n',\n            'Please only submit bug reports when using the officially supported version.',\n            '\\n',\n            border,\n        ].join('\\n');\n        parseSettings.log(versionWarning);\n    }\n    warnedAboutTSVersion = true;\n}\n"
        }
    ]
}
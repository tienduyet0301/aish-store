{
    "sourceFile": "node_modules/@typescript-eslint/typescript-estree/node_modules/fast-glob/out/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892003716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/// <reference types=\"node\" />\nimport * as taskManager from './managers/tasks';\nimport { Options as OptionsInternal } from './settings';\nimport { Entry as EntryInternal, FileSystemAdapter as FileSystemAdapterInternal, Pattern as PatternInternal } from './types';\ntype EntryObjectModePredicate = {\n    [TKey in keyof Pick<OptionsInternal, 'objectMode'>]-?: true;\n};\ntype EntryStatsPredicate = {\n    [TKey in keyof Pick<OptionsInternal, 'stats'>]-?: true;\n};\ntype EntryObjectPredicate = EntryObjectModePredicate | EntryStatsPredicate;\ndeclare function FastGlob(source: PatternInternal | PatternInternal[], options: OptionsInternal & EntryObjectPredicate): Promise<EntryInternal[]>;\ndeclare function FastGlob(source: PatternInternal | PatternInternal[], options?: OptionsInternal): Promise<string[]>;\ndeclare namespace FastGlob {\n    type Options = OptionsInternal;\n    type Entry = EntryInternal;\n    type Task = taskManager.Task;\n    type Pattern = PatternInternal;\n    type FileSystemAdapter = FileSystemAdapterInternal;\n    const glob: typeof FastGlob;\n    const globSync: typeof sync;\n    const globStream: typeof stream;\n    const async: typeof FastGlob;\n    function sync(source: PatternInternal | PatternInternal[], options: OptionsInternal & EntryObjectPredicate): EntryInternal[];\n    function sync(source: PatternInternal | PatternInternal[], options?: OptionsInternal): string[];\n    function stream(source: PatternInternal | PatternInternal[], options?: OptionsInternal): NodeJS.ReadableStream;\n    function generateTasks(source: PatternInternal | PatternInternal[], options?: OptionsInternal): Task[];\n    function isDynamicPattern(source: PatternInternal, options?: OptionsInternal): boolean;\n    function escapePath(source: string): PatternInternal;\n    function convertPathToPattern(source: string): PatternInternal;\n    namespace posix {\n        function escapePath(source: string): PatternInternal;\n        function convertPathToPattern(source: string): PatternInternal;\n    }\n    namespace win32 {\n        function escapePath(source: string): PatternInternal;\n        function convertPathToPattern(source: string): PatternInternal;\n    }\n}\nexport = FastGlob;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@typescript-eslint/typescript-estree/node_modules/fast-glob/out/settings.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892004845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { FileSystemAdapter, Pattern } from './types';\nexport declare const DEFAULT_FILE_SYSTEM_ADAPTER: FileSystemAdapter;\nexport type Options = {\n    /**\n     * Return the absolute path for entries.\n     *\n     * @default false\n     */\n    absolute?: boolean;\n    /**\n     * If set to `true`, then patterns without slashes will be matched against\n     * the basename of the path if it contains slashes.\n     *\n     * @default false\n     */\n    baseNameMatch?: boolean;\n    /**\n     * Enables Bash-like brace expansion.\n     *\n     * @default true\n     */\n    braceExpansion?: boolean;\n    /**\n     * Enables a case-sensitive mode for matching files.\n     *\n     * @default true\n     */\n    caseSensitiveMatch?: boolean;\n    /**\n     * Specifies the maximum number of concurrent requests from a reader to read\n     * directories.\n     *\n     * @default os.cpus().length\n     */\n    concurrency?: number;\n    /**\n     * The current working directory in which to search.\n     *\n     * @default process.cwd()\n     */\n    cwd?: string;\n    /**\n     * Specifies the maximum depth of a read directory relative to the start\n     * directory.\n     *\n     * @default Infinity\n     */\n    deep?: number;\n    /**\n     * Allow patterns to match entries that begin with a period (`.`).\n     *\n     * @default false\n     */\n    dot?: boolean;\n    /**\n     * Enables Bash-like `extglob` functionality.\n     *\n     * @default true\n     */\n    extglob?: boolean;\n    /**\n     * Indicates whether to traverse descendants of symbolic link directories.\n     *\n     * @default true\n     */\n    followSymbolicLinks?: boolean;\n    /**\n     * Custom implementation of methods for working with the file system.\n     *\n     * @default fs.*\n     */\n    fs?: Partial<FileSystemAdapter>;\n    /**\n     * Enables recursively repeats a pattern containing `**`.\n     * If `false`, `**` behaves exactly like `*`.\n     *\n     * @default true\n     */\n    globstar?: boolean;\n    /**\n     * An array of glob patterns to exclude matches.\n     * This is an alternative way to use negative patterns.\n     *\n     * @default []\n     */\n    ignore?: Pattern[];\n    /**\n     * Mark the directory path with the final slash.\n     *\n     * @default false\n     */\n    markDirectories?: boolean;\n    /**\n     * Returns objects (instead of strings) describing entries.\n     *\n     * @default false\n     */\n    objectMode?: boolean;\n    /**\n     * Return only directories.\n     *\n     * @default false\n     */\n    onlyDirectories?: boolean;\n    /**\n     * Return only files.\n     *\n     * @default true\n     */\n    onlyFiles?: boolean;\n    /**\n     * Enables an object mode (`objectMode`) with an additional `stats` field.\n     *\n     * @default false\n     */\n    stats?: boolean;\n    /**\n     * By default this package suppress only `ENOENT` errors.\n     * Set to `true` to suppress any error.\n     *\n     * @default false\n     */\n    suppressErrors?: boolean;\n    /**\n     * Throw an error when symbolic link is broken if `true` or safely\n     * return `lstat` call if `false`.\n     *\n     * @default false\n     */\n    throwErrorOnBrokenSymbolicLink?: boolean;\n    /**\n     * Ensures that the returned entries are unique.\n     *\n     * @default true\n     */\n    unique?: boolean;\n};\nexport default class Settings {\n    private readonly _options;\n    readonly absolute: boolean;\n    readonly baseNameMatch: boolean;\n    readonly braceExpansion: boolean;\n    readonly caseSensitiveMatch: boolean;\n    readonly concurrency: number;\n    readonly cwd: string;\n    readonly deep: number;\n    readonly dot: boolean;\n    readonly extglob: boolean;\n    readonly followSymbolicLinks: boolean;\n    readonly fs: FileSystemAdapter;\n    readonly globstar: boolean;\n    readonly ignore: Pattern[];\n    readonly markDirectories: boolean;\n    readonly objectMode: boolean;\n    readonly onlyDirectories: boolean;\n    readonly onlyFiles: boolean;\n    readonly stats: boolean;\n    readonly suppressErrors: boolean;\n    readonly throwErrorOnBrokenSymbolicLink: boolean;\n    readonly unique: boolean;\n    constructor(_options?: Options);\n    private _getValue;\n    private _getFileSystemMethods;\n}\n"
        }
    ]
}
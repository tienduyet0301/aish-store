{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/configs/eslint-recommended-raw.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891957915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n// NOTE: this file is isolated to be shared across legacy and flat configs\n// it is exported via `./use-at-your-own-risk/eslint-recommended-raw`\n// and it has types manually defined in `./eslint-recommended-raw.d.ts`\n/**\n * This is a compatibility ruleset that:\n * - disables rules from eslint:recommended which are already handled by TypeScript.\n * - enables rules that make sense due to TS's typechecking / transpilation.\n */\nconst config = (style) => ({\n    files: style === 'glob'\n        ? // classic configs use glob syntax\n            ['*.ts', '*.tsx', '*.mts', '*.cts']\n        : // flat configs use minimatch syntax\n            ['**/*.ts', '**/*.tsx', '**/*.mts', '**/*.cts'],\n    rules: {\n        'constructor-super': 'off', // ts(2335) & ts(2377)\n        'getter-return': 'off', // ts(2378)\n        'no-class-assign': 'off', // ts(2629)\n        'no-const-assign': 'off', // ts(2588)\n        'no-dupe-args': 'off', // ts(2300)\n        'no-dupe-class-members': 'off', // ts(2393) & ts(2300)\n        'no-dupe-keys': 'off', // ts(1117)\n        'no-func-assign': 'off', // ts(2630)\n        'no-import-assign': 'off', // ts(2632) & ts(2540)\n        // TODO - remove this once we no longer support ESLint v8\n        'no-new-symbol': 'off', // ts(7009)\n        'no-new-native-nonconstructor': 'off', // ts(7009)\n        'no-obj-calls': 'off', // ts(2349)\n        'no-redeclare': 'off', // ts(2451)\n        'no-setter-return': 'off', // ts(2408)\n        'no-this-before-super': 'off', // ts(2376) & ts(17009)\n        'no-undef': 'off', // ts(2304) & ts(2552)\n        'no-unreachable': 'off', // ts(7027)\n        'no-unsafe-negation': 'off', // ts(2365) & ts(2322) & ts(2358)\n        'no-var': 'error', // ts transpiles let/const to var, so no need for vars any more\n        'prefer-const': 'error', // ts provides better types with const\n        'prefer-rest-params': 'error', // ts provides better types with rest args over arguments\n        'prefer-spread': 'error', // ts transpiles spread to apply, so no need for manual apply\n    },\n});\nmodule.exports = config;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/util/needsToBeAwaited.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891978547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Awaitable = void 0;\nexports.needsToBeAwaited = needsToBeAwaited;\nconst type_utils_1 = require(\"@typescript-eslint/type-utils\");\nconst tsutils = __importStar(require(\"ts-api-utils\"));\nconst getConstraintInfo_1 = require(\"./getConstraintInfo\");\nvar Awaitable;\n(function (Awaitable) {\n    Awaitable[Awaitable[\"Always\"] = 0] = \"Always\";\n    Awaitable[Awaitable[\"Never\"] = 1] = \"Never\";\n    Awaitable[Awaitable[\"May\"] = 2] = \"May\";\n})(Awaitable || (exports.Awaitable = Awaitable = {}));\nfunction needsToBeAwaited(checker, node, type) {\n    const { constraintType, isTypeParameter } = (0, getConstraintInfo_1.getConstraintInfo)(checker, type);\n    // unconstrained generic types should be treated as unknown\n    if (isTypeParameter && constraintType == null) {\n        return Awaitable.May;\n    }\n    // `any` and `unknown` types may need to be awaited\n    if ((0, type_utils_1.isTypeAnyType)(constraintType) || (0, type_utils_1.isTypeUnknownType)(constraintType)) {\n        return Awaitable.May;\n    }\n    // 'thenable' values should always be be awaited\n    if (tsutils.isThenableType(checker, node, constraintType)) {\n        return Awaitable.Always;\n    }\n    // anything else should not be awaited\n    return Awaitable.Never;\n}\n"
        }
    ]
}
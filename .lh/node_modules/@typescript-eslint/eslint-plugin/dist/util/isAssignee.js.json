{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/util/isAssignee.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891977906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAssignee = isAssignee;\nconst utils_1 = require(\"@typescript-eslint/utils\");\nfunction isAssignee(node) {\n    const parent = node.parent;\n    if (!parent) {\n        return false;\n    }\n    // a[i] = 1, a[i] += 1, etc.\n    if (parent.type === utils_1.AST_NODE_TYPES.AssignmentExpression &&\n        parent.left === node) {\n        return true;\n    }\n    // delete a[i]\n    if (parent.type === utils_1.AST_NODE_TYPES.UnaryExpression &&\n        parent.operator === 'delete' &&\n        parent.argument === node) {\n        return true;\n    }\n    // a[i]++, --a[i], etc.\n    if (parent.type === utils_1.AST_NODE_TYPES.UpdateExpression &&\n        parent.argument === node) {\n        return true;\n    }\n    // [a[i]] = [0]\n    if (parent.type === utils_1.AST_NODE_TYPES.ArrayPattern) {\n        return true;\n    }\n    // [...a[i]] = [0]\n    if (parent.type === utils_1.AST_NODE_TYPES.RestElement) {\n        return true;\n    }\n    // ({ foo: a[i] }) = { foo: 0 }\n    if (parent.type === utils_1.AST_NODE_TYPES.Property &&\n        parent.value === node &&\n        parent.parent.type === utils_1.AST_NODE_TYPES.ObjectExpression &&\n        isAssignee(parent.parent)) {\n        return true;\n    }\n    return false;\n}\n"
        }
    ]
}
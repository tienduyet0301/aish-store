{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/util/isStartOfExpressionStatement.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891978165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isStartOfExpressionStatement = isStartOfExpressionStatement;\nconst utils_1 = require(\"@typescript-eslint/utils\");\n// The following is copied from `eslint`'s source code.\n// https://github.com/eslint/eslint/blob/3a4eaf921543b1cd5d1df4ea9dec02fab396af2a/lib/rules/utils/ast-utils.js#L1026-L1041\n// Could be export { isStartOfExpressionStatement } from 'eslint/lib/rules/utils/ast-utils'\n/**\n * Tests if a node appears at the beginning of an ancestor ExpressionStatement node.\n * @param node The node to check.\n * @returns Whether the node appears at the beginning of an ancestor ExpressionStatement node.\n */\nfunction isStartOfExpressionStatement(node) {\n    const start = node.range[0];\n    let ancestor = node;\n    while ((ancestor = ancestor.parent) && ancestor.range[0] === start) {\n        if (ancestor.type === utils_1.AST_NODE_TYPES.ExpressionStatement) {\n            return true;\n        }\n    }\n    return false;\n}\n"
        }
    ]
}
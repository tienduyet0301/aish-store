{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/util/getMemberHeadLoc.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891976881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { TSESLint, TSESTree } from '@typescript-eslint/utils';\n/**\n * Generates report loc suitable for reporting on how a class member is\n * declared, rather than how it's implemented.\n *\n * ```ts\n * class A {\n *   abstract method(): void;\n *   ~~~~~~~~~~~~~~~\n *\n *   concreteMethod(): void {\n *   ~~~~~~~~~~~~~~\n *      // code\n *   }\n *\n *   abstract private property?: string;\n *   ~~~~~~~~~~~~~~~~~~~~~~~~~\n *\n *   @decorator override concreteProperty = 'value';\n *              ~~~~~~~~~~~~~~~~~~~~~~~~~\n * }\n * ```\n */\nexport declare function getMemberHeadLoc(sourceCode: Readonly<TSESLint.SourceCode>, node: TSESTree.AccessorProperty | TSESTree.MethodDefinition | TSESTree.PropertyDefinition | TSESTree.TSAbstractAccessorProperty | TSESTree.TSAbstractMethodDefinition | TSESTree.TSAbstractPropertyDefinition): TSESTree.SourceLocation;\n/**\n * Generates report loc suitable for reporting on how a parameter property is\n * declared.\n *\n * ```ts\n * class A {\n *   constructor(private property: string = 'value') {\n *               ~~~~~~~~~~~~~~~~\n *   }\n * ```\n */\nexport declare function getParameterPropertyHeadLoc(sourceCode: Readonly<TSESLint.SourceCode>, node: TSESTree.TSParameterProperty, nodeName: string): TSESTree.SourceLocation;\n//# sourceMappingURL=getMemberHeadLoc.d.ts.map"
        }
    ]
}
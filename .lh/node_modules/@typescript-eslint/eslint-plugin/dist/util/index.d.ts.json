{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/util/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891977665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { ESLintUtils } from '@typescript-eslint/utils';\nexport * from './astUtils';\nexport * from './collectUnusedVariables';\nexport * from './createRule';\nexport * from './getFixOrSuggest';\nexport * from './getFunctionHeadLoc';\nexport * from './getOperatorPrecedence';\nexport * from './getStaticStringValue';\nexport * from './getStringLength';\nexport * from './getTextWithParentheses';\nexport * from './getThisExpression';\nexport * from './getWrappingFixer';\nexport * from './hasOverloadSignatures';\nexport * from './isArrayMethodCallWithPredicate';\nexport * from './isAssignee';\nexport * from './isNodeEqual';\nexport * from './isNullLiteral';\nexport * from './isStartOfExpressionStatement';\nexport * from './isUndefinedIdentifier';\nexport * from './misc';\nexport * from './needsPrecedingSemiColon';\nexport * from './objectIterators';\nexport * from './needsToBeAwaited';\nexport * from './scopeUtils';\nexport * from './types';\nexport * from './getConstraintInfo';\nexport * from './getValueOfLiteralType';\nexport * from './isHigherPrecedenceThanAwait';\nexport * from './skipChainExpression';\nexport * from './truthinessAndNullishUtils';\nexport * from '@typescript-eslint/type-utils';\nexport declare const applyDefault: typeof ESLintUtils.applyDefault, deepMerge: typeof ESLintUtils.deepMerge, getParserServices: typeof ESLintUtils.getParserServices, isObjectNotArray: typeof ESLintUtils.isObjectNotArray, nullThrows: typeof ESLintUtils.nullThrows, NullThrowsReasons: {\n    readonly MissingParent: \"Expected node to have a parent.\";\n    readonly MissingToken: (token: string, thing: string) => string;\n};\nexport type InferMessageIdsTypeFromRule<T> = ESLintUtils.InferMessageIdsTypeFromRule<T>;\nexport type InferOptionsTypeFromRule<T> = ESLintUtils.InferOptionsTypeFromRule<T>;\n//# sourceMappingURL=index.d.ts.map"
        }
    ]
}
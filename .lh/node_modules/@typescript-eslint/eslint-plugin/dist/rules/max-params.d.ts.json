{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/rules/max-params.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891961708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { TSESTree } from '@typescript-eslint/utils';\nimport type { InferMessageIdsTypeFromRule, InferOptionsTypeFromRule } from '../util';\ndeclare const baseRule: import(\"@typescript-eslint/utils/ts-eslint\").RuleModule<\"exceed\", ({\n    countVoidThis?: boolean;\n    max: number;\n} | {\n    countVoidThis?: boolean;\n    maximum: number;\n})[], unknown, {\n    ArrowFunctionExpression(node: TSESTree.ArrowFunctionExpression): void;\n    FunctionDeclaration(node: TSESTree.FunctionDeclaration | TSESTree.TSDeclareFunction | TSESTree.TSFunctionType): void;\n    FunctionExpression(node: TSESTree.FunctionExpression): void;\n}>;\nexport type Options = InferOptionsTypeFromRule<typeof baseRule>;\nexport type MessageIds = InferMessageIdsTypeFromRule<typeof baseRule>;\ndeclare const _default: import(\"@typescript-eslint/utils/ts-eslint\").RuleModule<\"exceed\", ({\n    countVoidThis?: boolean;\n    max: number;\n} | {\n    countVoidThis?: boolean;\n    maximum: number;\n})[], import(\"../../rules\").ESLintPluginDocs, import(\"@typescript-eslint/utils/ts-eslint\").RuleListener>;\nexport default _default;\n//# sourceMappingURL=max-params.d.ts.map"
        }
    ]
}
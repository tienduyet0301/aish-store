{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/rules/no-extra-non-null-assertion.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891964709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../util\");\nexports.default = (0, util_1.createRule)({\n    name: 'no-extra-non-null-assertion',\n    meta: {\n        type: 'problem',\n        docs: {\n            description: 'Disallow extra non-null assertions',\n            recommended: 'recommended',\n        },\n        fixable: 'code',\n        messages: {\n            noExtraNonNullAssertion: 'Forbidden extra non-null assertion.',\n        },\n        schema: [],\n    },\n    defaultOptions: [],\n    create(context) {\n        function checkExtraNonNullAssertion(node) {\n            context.report({\n                node,\n                messageId: 'noExtraNonNullAssertion',\n                fix(fixer) {\n                    return fixer.removeRange([node.range[1] - 1, node.range[1]]);\n                },\n            });\n        }\n        return {\n            'CallExpression[optional = true] > TSNonNullExpression.callee': checkExtraNonNullAssertion,\n            'MemberExpression[optional = true] > TSNonNullExpression.object': checkExtraNonNullAssertion,\n            'TSNonNullExpression > TSNonNullExpression': checkExtraNonNullAssertion,\n        };\n    },\n});\n"
        }
    ]
}
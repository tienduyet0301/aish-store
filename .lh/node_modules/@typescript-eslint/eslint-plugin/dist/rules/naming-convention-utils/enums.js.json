{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/rules/naming-convention-utils/enums.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891962097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeModifiers = exports.Modifiers = exports.MetaSelectors = exports.Selectors = exports.UnderscoreOptions = exports.PredefinedFormats = void 0;\nvar PredefinedFormats;\n(function (PredefinedFormats) {\n    PredefinedFormats[PredefinedFormats[\"camelCase\"] = 1] = \"camelCase\";\n    PredefinedFormats[PredefinedFormats[\"strictCamelCase\"] = 2] = \"strictCamelCase\";\n    PredefinedFormats[PredefinedFormats[\"PascalCase\"] = 3] = \"PascalCase\";\n    PredefinedFormats[PredefinedFormats[\"StrictPascalCase\"] = 4] = \"StrictPascalCase\";\n    PredefinedFormats[PredefinedFormats[\"snake_case\"] = 5] = \"snake_case\";\n    PredefinedFormats[PredefinedFormats[\"UPPER_CASE\"] = 6] = \"UPPER_CASE\";\n})(PredefinedFormats || (exports.PredefinedFormats = PredefinedFormats = {}));\nvar UnderscoreOptions;\n(function (UnderscoreOptions) {\n    UnderscoreOptions[UnderscoreOptions[\"forbid\"] = 1] = \"forbid\";\n    UnderscoreOptions[UnderscoreOptions[\"allow\"] = 2] = \"allow\";\n    UnderscoreOptions[UnderscoreOptions[\"require\"] = 3] = \"require\";\n    // special cases as it's common practice to use double underscore\n    UnderscoreOptions[UnderscoreOptions[\"requireDouble\"] = 4] = \"requireDouble\";\n    UnderscoreOptions[UnderscoreOptions[\"allowDouble\"] = 5] = \"allowDouble\";\n    UnderscoreOptions[UnderscoreOptions[\"allowSingleOrDouble\"] = 6] = \"allowSingleOrDouble\";\n})(UnderscoreOptions || (exports.UnderscoreOptions = UnderscoreOptions = {}));\nvar Selectors;\n(function (Selectors) {\n    // variableLike\n    Selectors[Selectors[\"variable\"] = 1] = \"variable\";\n    Selectors[Selectors[\"function\"] = 2] = \"function\";\n    Selectors[Selectors[\"parameter\"] = 4] = \"parameter\";\n    // memberLike\n    Selectors[Selectors[\"parameterProperty\"] = 8] = \"parameterProperty\";\n    Selectors[Selectors[\"classicAccessor\"] = 16] = \"classicAccessor\";\n    Selectors[Selectors[\"enumMember\"] = 32] = \"enumMember\";\n    Selectors[Selectors[\"classMethod\"] = 64] = \"classMethod\";\n    Selectors[Selectors[\"objectLiteralMethod\"] = 128] = \"objectLiteralMethod\";\n    Selectors[Selectors[\"typeMethod\"] = 256] = \"typeMethod\";\n    Selectors[Selectors[\"classProperty\"] = 512] = \"classProperty\";\n    Selectors[Selectors[\"objectLiteralProperty\"] = 1024] = \"objectLiteralProperty\";\n    Selectors[Selectors[\"typeProperty\"] = 2048] = \"typeProperty\";\n    Selectors[Selectors[\"autoAccessor\"] = 4096] = \"autoAccessor\";\n    // typeLike\n    Selectors[Selectors[\"class\"] = 8192] = \"class\";\n    Selectors[Selectors[\"interface\"] = 16384] = \"interface\";\n    Selectors[Selectors[\"typeAlias\"] = 32768] = \"typeAlias\";\n    Selectors[Selectors[\"enum\"] = 65536] = \"enum\";\n    Selectors[Selectors[\"typeParameter\"] = 131072] = \"typeParameter\";\n    // other\n    Selectors[Selectors[\"import\"] = 262144] = \"import\";\n})(Selectors || (exports.Selectors = Selectors = {}));\nvar MetaSelectors;\n(function (MetaSelectors) {\n    /* eslint-disable @typescript-eslint/prefer-literal-enum-member */\n    MetaSelectors[MetaSelectors[\"default\"] = -1] = \"default\";\n    MetaSelectors[MetaSelectors[\"variableLike\"] = 7] = \"variableLike\";\n    MetaSelectors[MetaSelectors[\"memberLike\"] = 8184] = \"memberLike\";\n    MetaSelectors[MetaSelectors[\"typeLike\"] = 253952] = \"typeLike\";\n    MetaSelectors[MetaSelectors[\"method\"] = 448] = \"method\";\n    MetaSelectors[MetaSelectors[\"property\"] = 3584] = \"property\";\n    MetaSelectors[MetaSelectors[\"accessor\"] = 4112] = \"accessor\";\n    /* eslint-enable @typescript-eslint/prefer-literal-enum-member */\n})(MetaSelectors || (exports.MetaSelectors = MetaSelectors = {}));\nvar Modifiers;\n(function (Modifiers) {\n    // const variable\n    Modifiers[Modifiers[\"const\"] = 1] = \"const\";\n    // readonly members\n    Modifiers[Modifiers[\"readonly\"] = 2] = \"readonly\";\n    // static members\n    Modifiers[Modifiers[\"static\"] = 4] = \"static\";\n    // member accessibility\n    Modifiers[Modifiers[\"public\"] = 8] = \"public\";\n    Modifiers[Modifiers[\"protected\"] = 16] = \"protected\";\n    Modifiers[Modifiers[\"private\"] = 32] = \"private\";\n    Modifiers[Modifiers[\"#private\"] = 64] = \"#private\";\n    Modifiers[Modifiers[\"abstract\"] = 128] = \"abstract\";\n    // destructured variable\n    Modifiers[Modifiers[\"destructured\"] = 256] = \"destructured\";\n    // variables declared in the top-level scope\n    Modifiers[Modifiers[\"global\"] = 512] = \"global\";\n    // things that are exported\n    Modifiers[Modifiers[\"exported\"] = 1024] = \"exported\";\n    // things that are unused\n    Modifiers[Modifiers[\"unused\"] = 2048] = \"unused\";\n    // properties that require quoting\n    Modifiers[Modifiers[\"requiresQuotes\"] = 4096] = \"requiresQuotes\";\n    // class members that are overridden\n    Modifiers[Modifiers[\"override\"] = 8192] = \"override\";\n    // class methods, object function properties, or functions that are async via the `async` keyword\n    Modifiers[Modifiers[\"async\"] = 16384] = \"async\";\n    // default imports\n    Modifiers[Modifiers[\"default\"] = 32768] = \"default\";\n    // namespace imports\n    Modifiers[Modifiers[\"namespace\"] = 65536] = \"namespace\";\n    // make sure TypeModifiers starts at Modifiers + 1 or else sorting won't work\n})(Modifiers || (exports.Modifiers = Modifiers = {}));\nvar TypeModifiers;\n(function (TypeModifiers) {\n    TypeModifiers[TypeModifiers[\"boolean\"] = 131072] = \"boolean\";\n    TypeModifiers[TypeModifiers[\"string\"] = 262144] = \"string\";\n    TypeModifiers[TypeModifiers[\"number\"] = 524288] = \"number\";\n    TypeModifiers[TypeModifiers[\"function\"] = 1048576] = \"function\";\n    TypeModifiers[TypeModifiers[\"array\"] = 2097152] = \"array\";\n})(TypeModifiers || (exports.TypeModifiers = TypeModifiers = {}));\n"
        }
    ]
}
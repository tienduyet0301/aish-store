{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/rules/no-this-alias.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891968551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util_1 = require(\"../util\");\nexports.default = (0, util_1.createRule)({\n    name: 'no-this-alias',\n    meta: {\n        type: 'suggestion',\n        docs: {\n            description: 'Disallow aliasing `this`',\n            recommended: 'recommended',\n        },\n        messages: {\n            thisAssignment: \"Unexpected aliasing of 'this' to local variable.\",\n            thisDestructure: \"Unexpected aliasing of members of 'this' to local variables.\",\n        },\n        schema: [\n            {\n                type: 'object',\n                additionalProperties: false,\n                properties: {\n                    allowDestructuring: {\n                        type: 'boolean',\n                        description: 'Whether to ignore destructurings, such as `const { props, state } = this`.',\n                    },\n                    allowedNames: {\n                        type: 'array',\n                        description: 'Names to ignore, such as [\"self\"] for `const self = this;`.',\n                        items: {\n                            type: 'string',\n                        },\n                    },\n                },\n            },\n        ],\n    },\n    defaultOptions: [\n        {\n            allowDestructuring: true,\n            allowedNames: [],\n        },\n    ],\n    create(context, [{ allowDestructuring, allowedNames }]) {\n        return {\n            \"VariableDeclarator[init.type='ThisExpression'], AssignmentExpression[right.type='ThisExpression']\"(node) {\n                const id = node.type === utils_1.AST_NODE_TYPES.VariableDeclarator ? node.id : node.left;\n                if (allowDestructuring && id.type !== utils_1.AST_NODE_TYPES.Identifier) {\n                    return;\n                }\n                const hasAllowedName = id.type === utils_1.AST_NODE_TYPES.Identifier\n                    ? // https://github.com/typescript-eslint/typescript-eslint/issues/5439\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        allowedNames.includes(id.name)\n                    : false;\n                if (!hasAllowedName) {\n                    context.report({\n                        node: id,\n                        messageId: id.type === utils_1.AST_NODE_TYPES.Identifier\n                            ? 'thisAssignment'\n                            : 'thisDestructure',\n                    });\n                }\n            },\n        };\n    },\n});\n"
        }
    ]
}
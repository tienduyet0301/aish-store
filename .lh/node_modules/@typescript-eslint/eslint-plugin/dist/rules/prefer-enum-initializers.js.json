{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/rules/prefer-enum-initializers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891971960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../util\");\nexports.default = (0, util_1.createRule)({\n    name: 'prefer-enum-initializers',\n    meta: {\n        type: 'suggestion',\n        docs: {\n            description: 'Require each enum member value to be explicitly initialized',\n        },\n        hasSuggestions: true,\n        messages: {\n            defineInitializer: \"The value of the member '{{ name }}' should be explicitly defined.\",\n            defineInitializerSuggestion: 'Can be fixed to {{ name }} = {{ suggested }}',\n        },\n        schema: [],\n    },\n    defaultOptions: [],\n    create(context) {\n        function TSEnumDeclaration(node) {\n            const { members } = node.body;\n            members.forEach((member, index) => {\n                if (member.initializer == null) {\n                    const name = context.sourceCode.getText(member);\n                    context.report({\n                        node: member,\n                        messageId: 'defineInitializer',\n                        data: {\n                            name,\n                        },\n                        suggest: [\n                            {\n                                messageId: 'defineInitializerSuggestion',\n                                data: { name, suggested: index },\n                                fix: (fixer) => {\n                                    return fixer.replaceText(member, `${name} = ${index}`);\n                                },\n                            },\n                            {\n                                messageId: 'defineInitializerSuggestion',\n                                data: { name, suggested: index + 1 },\n                                fix: (fixer) => {\n                                    return fixer.replaceText(member, `${name} = ${index + 1}`);\n                                },\n                            },\n                            {\n                                messageId: 'defineInitializerSuggestion',\n                                data: { name, suggested: `'${name}'` },\n                                fix: (fixer) => {\n                                    return fixer.replaceText(member, `${name} = '${name}'`);\n                                },\n                            },\n                        ],\n                    });\n                }\n            });\n        }\n        return {\n            TSEnumDeclaration,\n        };\n    },\n});\n"
        }
    ]
}
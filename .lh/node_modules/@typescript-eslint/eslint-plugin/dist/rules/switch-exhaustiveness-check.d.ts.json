{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/dist/rules/switch-exhaustiveness-check.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891975368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { TSESLint } from '@typescript-eslint/utils';\nexport type Options = [\n    {\n        /**\n         * If `true`, allow `default` cases on switch statements with exhaustive\n         * cases.\n         *\n         * @default true\n         */\n        allowDefaultCaseForExhaustiveSwitch?: boolean;\n        /**\n         * If `true`, require a `default` clause for switches on non-union types.\n         *\n         * @default false\n         */\n        requireDefaultForNonUnion?: boolean;\n        /**\n         * Regular expression for a comment that can indicate an intentionally omitted default case.\n         */\n        defaultCaseCommentPattern?: string;\n        /**\n         * If `true`, the `default` clause is used to determine whether the switch statement is exhaustive for union types.\n         *\n         * @default false\n         */\n        considerDefaultExhaustiveForUnions?: boolean;\n    }\n];\nexport type MessageIds = 'addMissingCases' | 'dangerousDefaultCase' | 'switchIsNotExhaustive';\ndeclare const _default: TSESLint.RuleModule<MessageIds, Options, import(\"../../rules\").ESLintPluginDocs, TSESLint.RuleListener>;\nexport default _default;\n//# sourceMappingURL=switch-exhaustiveness-check.d.ts.map"
        }
    ]
}
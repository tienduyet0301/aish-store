{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/prefer-namespace-keyword.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891982137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Require using `namespace` keyword over `module` keyword to declare custom TypeScript modules.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/prefer-namespace-keyword** for documentation.\n\nTypeScript historically allowed a form of code organization called \"custom modules\" (`module Example {}`), later renamed to \"namespaces\" (`namespace Example`).\n\nNamespaces are an outdated way to organize TypeScript code.\nES2015 module syntax is now preferred (`import`/`export`).\n\nFor projects still using custom modules / namespaces, it's preferred to refer to them as namespaces.\nThis rule reports when the `module` keyword is used instead of `namespace`.\n\n> This rule does not report on the use of TypeScript module declarations to describe external APIs (`declare module 'foo' {}`).\n\n## Examples\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts\nmodule Example {}\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts\nnamespace Example {}\n\ndeclare module 'foo' {}\n```\n\n</TabItem>\n</Tabs>\n\n## When Not To Use It\n\nIf you are not using TypeScript's older `module`/`namespace` keywords, then you will not need this rule.\n\n## Further Reading\n\n- [Modules](https://www.typescriptlang.org/docs/handbook/modules.html)\n- [Namespaces](https://www.typescriptlang.org/docs/handbook/namespaces.html)\n- [Namespaces and Modules](https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html)\n"
        }
    ]
}
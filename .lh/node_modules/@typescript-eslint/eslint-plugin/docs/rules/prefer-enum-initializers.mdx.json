{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/prefer-enum-initializers.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891981956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Require each enum member value to be explicitly initialized.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/prefer-enum-initializers** for documentation.\n\nTypeScript `enum`s are a practical way to organize semantically related constant values.\nMembers of `enum`s that don't have explicit values are by default given sequentially increasing numbers.\n\nIn projects where the value of `enum` members are important, allowing implicit values for enums can cause bugs if `enum`s are modified over time.\n\nThis rule recommends having each `enum` member value explicitly initialized.\n\n## Examples\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts\nenum Status {\n  Open = 1,\n  Close,\n}\n\nenum Direction {\n  Up,\n  Down,\n}\n\nenum Color {\n  Red,\n  Green = 'Green',\n  Blue = 'Blue',\n}\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts\nenum Status {\n  Open = 'Open',\n  Close = 'Close',\n}\n\nenum Direction {\n  Up = 1,\n  Down = 2,\n}\n\nenum Color {\n  Red = 'Red',\n  Green = 'Green',\n  Blue = 'Blue',\n}\n```\n\n</TabItem>\n</Tabs>\n\n## When Not To Use It\n\nIf you don't care about `enum`s having implicit values you can safely disable this rule.\n"
        }
    ]
}
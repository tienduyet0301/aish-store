{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/triple-slash-reference.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891982867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Disallow certain triple slash directives in favor of ES6-style import declarations.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/triple-slash-reference** for documentation.\n\nTypeScript's `///` triple-slash references are a way to indicate that types from another module are available in a file.\nUse of triple-slash reference type directives is generally discouraged in favor of ECMAScript Module `import`s.\nThis rule reports on the use of `/// <reference lib=\"...\" />`, `/// <reference path=\"...\" />`, or `/// <reference types=\"...\" />` directives.\n\n## Options\n\nAny number of the three kinds of references can be specified as an option.\nSpecifying `'always'` disables this lint rule for that kind of reference.\n\n### `lib`\n\n{/* insert option description */}\n\nWhen set to `'never'`, bans `/// <reference lib=\"...\" />` and enforces using an `import` instead:\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts option='{ \"lib\": \"never\" }'\n/// <reference lib=\"code\" />\n\nglobalThis.value;\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts option='{ \"lib\": \"never\" }'\nimport { value } from 'code';\n```\n\n</TabItem>\n</Tabs>\n\n### `path`\n\n{/* insert option description */}\n\nWhen set to `'never'`, bans `/// <reference path=\"...\" />` and enforces using an `import` instead:\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts option='{ \"path\": \"never\" }'\n/// <reference path=\"code\" />\n\nglobalThis.value;\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts option='{ \"path\": \"never\" }'\nimport { value } from 'code';\n```\n\n</TabItem>\n</Tabs>\n\n### `types`\n\n{/* insert option description */}\n\nWhen set to `'never'`, bans `/// <reference types=\"...\" />` and enforces using an `import` instead:\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts option='{ \"types\": \"never\" }'\n/// <reference types=\"code\" />\n\nglobalThis.value;\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts option='{ \"types\": \"never\" }'\nimport { value } from 'code';\n```\n\n</TabItem>\n</Tabs>\n\nThe `types` option may alternately be given a `\"prefer-import\"` value.\nDoing so indicates the rule should only report if there is already an `import` from the same location:\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts option='{ \"types\": \"prefer-import\" }'\n/// <reference types=\"code\" />\n\nimport { valueA } from 'code';\n\nglobalThis.valueB;\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts option='{ \"types\": \"prefer-import\" }'\nimport { valueA, valueB } from 'code';\n```\n\n</TabItem>\n</Tabs>\n\n## When Not To Use It\n\nMost modern TypeScript projects generally use `import` statements to bring in types.\nIt's rare to need a `///` triple-slash reference outside of auto-generated code.\nIf your project is a rare one with one of those use cases, this rule might not be for you.\nYou might consider using [ESLint disable comments](https://eslint.org/docs/latest/use/configure/rules#using-configuration-comments-1) for those specific situations instead of completely disabling this rule.\n\n## When Not To Use It\n\nIf you want to use all flavors of triple slash reference directives.\n"
        }
    ]
}
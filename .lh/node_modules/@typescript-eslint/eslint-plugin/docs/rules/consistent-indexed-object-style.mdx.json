{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/consistent-indexed-object-style.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891979384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Require or disallow the `Record` type.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/consistent-indexed-object-style** for documentation.\n\nTypeScript supports defining arbitrary object keys using an index signature or mapped type.\nTypeScript also has a builtin type named `Record` to create an empty object defining only an index signature.\nFor example, the following types are equal:\n\n```ts\ninterface IndexSignatureInterface {\n  [key: string]: unknown;\n}\n\ntype IndexSignatureType = {\n  [key: string]: unknown;\n};\n\ntype MappedType = {\n  [key in string]: unknown;\n};\n\ntype RecordType = Record<string, unknown>;\n```\n\nUsing one declaration form consistently improves code readability.\n\n## Options\n\n- `'record'` _(default)_: only allow the `Record` type.\n- `'index-signature'`: only allow index signatures.\n\n### `'record'`\n\n{/* insert option description */}\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts option='\"record\"'\ninterface IndexSignatureInterface {\n  [key: string]: unknown;\n}\n\ntype IndexSignatureType = {\n  [key: string]: unknown;\n};\n\ntype MappedType = {\n  [key in string]: unknown;\n};\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts option='\"record\"'\ntype RecordType = Record<string, unknown>;\n```\n\n</TabItem>\n</Tabs>\n\n### `'index-signature'`\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts option='\"index-signature\"'\ntype RecordType = Record<string, unknown>;\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts option='\"index-signature\"'\ninterface IndexSignatureInterface {\n  [key: string]: unknown;\n}\n\ntype IndexSignatureType = {\n  [key: string]: unknown;\n};\n\ntype MappedType = {\n  [key in string]: unknown;\n};\n```\n\n</TabItem>\n</Tabs>\n\n## When Not To Use It\n\nThis rule is purely a stylistic rule for maintaining consistency in your project.\nYou can turn it off if you don't want to keep a consistent style for indexed object types.\n\nHowever, keep in mind that inconsistent style can harm readability in a project.\nWe recommend picking a single option for this rule that works best for your project.\n"
        }
    ]
}
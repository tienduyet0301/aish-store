{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/no-array-delete.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891979960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Disallow using the `delete` operator on array values.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/no-array-delete** for documentation.\n\nWhen using the `delete` operator with an array value, the array's `length` property is not affected,\nbut the element at the specified index is removed and leaves an empty slot in the array.\nThis is likely to lead to unexpected behavior. As mentioned in the\n[MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete#deleting_array_elements),\nthe recommended way to remove an element from an array is by using the\n[`Array#splice`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice) method.\n\n## Examples\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts\ndeclare const arr: number[];\n\ndelete arr[0];\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts\ndeclare const arr: number[];\n\narr.splice(0, 1);\n```\n\n</TabItem>\n</Tabs>\n\n## When Not To Use It\n\nWhen you want to allow the delete operator with array expressions.\n"
        }
    ]
}
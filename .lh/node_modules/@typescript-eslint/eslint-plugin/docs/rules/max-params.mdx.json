{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/max-params.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891979831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Enforce a maximum number of parameters in function definitions.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/max-params** for documentation.\n\nIt adds support for TypeScript `this` parameters so they won't be counted as a parameter.\n\n## Options\n\nThis rule adds the following options:\n\n```ts\ninterface Options extends BaseMaxParamsOptions {\n  countVoidThis?: boolean;\n}\n\nconst defaultOptions: Options = {\n  ...baseMaxParamsOptions,\n  countVoidThis: false,\n};\n```\n\n### `countVoidThis`\n\n{/* insert option description */}\n\nExample of a code when `countVoidThis` is set to `false` and `max` is `1`:\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts option='{ \"countVoidThis\": false, \"max\": 1 }'\nfunction hasNoThis(this: void, first: string, second: string) {\n  // ...\n}\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts option='{ \"countVoidThis\": false, \"max\": 1 }'\nfunction hasNoThis(this: void, first: string) {\n  // ...\n}\n```\n\n</TabItem>\n</Tabs>\n"
        }
    ]
}
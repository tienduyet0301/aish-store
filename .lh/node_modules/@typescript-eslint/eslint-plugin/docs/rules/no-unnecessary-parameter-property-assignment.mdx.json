{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/no-unnecessary-parameter-property-assignment.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891981205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Disallow unnecessary assignment of constructor property parameter.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/no-unnecessary-parameter-property-assignment** for documentation.\n\n[TypeScript's parameter properties](https://www.typescriptlang.org/docs/handbook/2/classes.html#parameter-properties) allow creating and initializing a member in one place.\nTherefore, in most cases, it is not necessary to assign parameter properties of the same name to members within a constructor.\n\n## Examples\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts\nclass Foo {\n  constructor(public bar: string) {\n    this.bar = bar;\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts\nclass Foo {\n  constructor(public bar: string) {}\n}\n```\n\n</TabItem>\n</Tabs>\n\n## When Not To Use It\n\nIf you don't use parameter properties, you can ignore this rule.\n"
        }
    ]
}
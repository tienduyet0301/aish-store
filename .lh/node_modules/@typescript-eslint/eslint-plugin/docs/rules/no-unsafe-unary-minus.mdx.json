{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/no-unsafe-unary-minus.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891981602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Require unary negation to take a number.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/no-unsafe-unary-minus** for documentation.\n\nTypeScript does not prevent you from putting a minus sign before things other than numbers:\n\n```ts\nconst s = 'hello';\nconst x = -s; // x is NaN\n```\n\nThis rule restricts the unary `-` operator to `number | bigint`.\n\n## Examples\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts\ndeclare const a: string;\n-a;\n\ndeclare const b: {};\n-b;\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts\n-42;\n-42n;\n\ndeclare const a: number;\n-a;\n\ndeclare const b: number;\n-b;\n\ndeclare const c: number | bigint;\n-c;\n\ndeclare const d: any;\n-d;\n\ndeclare const e: 1 | 2;\n-e;\n```\n\n</TabItem>\n</Tabs>\n\n{/* Intentionally Omitted: When Not To Use It */}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/default-param-last.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891979570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Enforce default parameters to be last.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/default-param-last** for documentation.\n\nIt adds support for optional parameters.\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts\nfunction f(a = 0, b: number) {}\nfunction f(a: number, b = 0, c: number) {}\nfunction f(a: number, b?: number, c: number) {}\nclass Foo {\n  constructor(\n    public a = 10,\n    private b: number,\n  ) {}\n}\nclass Foo {\n  constructor(\n    public a?: number,\n    private b: number,\n  ) {}\n}\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts\nfunction f(a = 0) {}\nfunction f(a: number, b = 0) {}\nfunction f(a: number, b?: number) {}\nfunction f(a: number, b?: number, c = 0) {}\nfunction f(a: number, b = 0, c?: number) {}\nclass Foo {\n  constructor(\n    public a,\n    private b = 0,\n  ) {}\n}\nclass Foo {\n  constructor(\n    public a,\n    private b?: number,\n  ) {}\n}\n```\n\n</TabItem>\n</Tabs>\n"
        }
    ]
}
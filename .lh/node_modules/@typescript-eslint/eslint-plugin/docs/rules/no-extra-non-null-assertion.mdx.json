{
    "sourceFile": "node_modules/@typescript-eslint/eslint-plugin/docs/rules/no-extra-non-null-assertion.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891980324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "---\ndescription: 'Disallow extra non-null assertions.'\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n> 🛑 This file is source code, not the primary documentation location! 🛑\n>\n> See **https://typescript-eslint.io/rules/no-extra-non-null-assertion** for documentation.\n\nThe `!` non-null assertion operator in TypeScript is used to assert that a value's type does not include `null` or `undefined`.\nUsing the operator any more than once on a single value does nothing.\n\n## Examples\n\n<Tabs>\n<TabItem value=\"❌ Incorrect\">\n\n```ts\nconst foo: { bar: number } | null = null;\nconst bar = foo!!!.bar;\n```\n\n```ts\nfunction foo(bar: number | undefined) {\n  const bar: number = bar!!!;\n}\n```\n\n```ts\nfunction foo(bar?: { n: number }) {\n  return bar!?.n;\n}\n```\n\n</TabItem>\n<TabItem value=\"✅ Correct\">\n\n```ts\nconst foo: { bar: number } | null = null;\nconst bar = foo!.bar;\n```\n\n```ts\nfunction foo(bar: number | undefined) {\n  const bar: number = bar!;\n}\n```\n\n```ts\nfunction foo(bar?: { n: number }) {\n  return bar?.n;\n}\n```\n\n</TabItem>\n</Tabs>\n\n{/* Intentionally Omitted: When Not To Use It */}\n"
        }
    ]
}
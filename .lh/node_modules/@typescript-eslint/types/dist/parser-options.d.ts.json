{
    "sourceFile": "node_modules/@typescript-eslint/types/dist/parser-options.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891998459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Program } from 'typescript';\nimport type { Lib } from './lib';\nexport type DebugLevel = boolean | ('eslint' | 'typescript' | 'typescript-eslint')[];\nexport type CacheDurationSeconds = number | 'Infinity';\nexport type EcmaVersion = 'latest' | 3 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 2015 | 2016 | 2017 | 2018 | 2019 | 2020 | 2021 | 2022 | 2023 | 2024 | 2025 | undefined;\nexport type SourceTypeClassic = 'module' | 'script';\nexport type SourceType = 'commonjs' | SourceTypeClassic;\nexport type JSDocParsingMode = 'all' | 'none' | 'type-info';\n/**\n * Granular options to configure the project service.\n */\nexport interface ProjectServiceOptions {\n    /**\n     * Globs of files to allow running with the default project compiler options\n     * despite not being matched by the project service.\n     */\n    allowDefaultProject?: string[];\n    /**\n     * Path to a TSConfig to use instead of TypeScript's default project configuration.\n     * @default 'tsconfig.json'\n     */\n    defaultProject?: string;\n    /**\n     * Whether to allow TypeScript plugins as configured in the TSConfig.\n     */\n    loadTypeScriptPlugins?: boolean;\n    /**\n     * The maximum number of files {@link allowDefaultProject} may match.\n     * Each file match slows down linting, so if you do need to use this, please\n     * file an informative issue on typescript-eslint explaining why - so we can\n     * help you avoid using it!\n     * @default 8\n     */\n    maximumDefaultProjectFileMatchCount_THIS_WILL_SLOW_DOWN_LINTING?: number;\n}\nexport interface ParserOptions {\n    [additionalProperties: string]: unknown;\n    cacheLifetime?: {\n        glob?: CacheDurationSeconds;\n    };\n    debugLevel?: DebugLevel;\n    ecmaFeatures?: {\n        [key: string]: unknown;\n        globalReturn?: boolean | undefined;\n        jsx?: boolean | undefined;\n    } | undefined;\n    ecmaVersion?: EcmaVersion;\n    emitDecoratorMetadata?: boolean;\n    errorOnTypeScriptSyntacticAndSemanticIssues?: boolean;\n    errorOnUnknownASTType?: boolean;\n    experimentalDecorators?: boolean;\n    extraFileExtensions?: string[];\n    filePath?: string;\n    isolatedDeclarations?: boolean;\n    jsDocParsingMode?: JSDocParsingMode;\n    jsxFragmentName?: string | null;\n    jsxPragma?: string | null;\n    lib?: Lib[];\n    programs?: Program[] | null;\n    project?: boolean | string | string[] | null;\n    projectFolderIgnoreList?: string[];\n    projectService?: boolean | ProjectServiceOptions;\n    range?: boolean;\n    sourceType?: SourceType | undefined;\n    tokens?: boolean;\n    tsconfigRootDir?: string;\n    warnOnUnsupportedTypeScriptVersion?: boolean;\n}\n//# sourceMappingURL=parser-options.d.ts.map"
        }
    ]
}
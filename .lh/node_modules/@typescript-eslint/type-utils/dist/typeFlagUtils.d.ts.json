{
    "sourceFile": "node_modules/@typescript-eslint/type-utils/dist/typeFlagUtils.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891997744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import * as ts from 'typescript';\n/**\n * Gets all of the type flags in a type, iterating through unions automatically.\n */\nexport declare function getTypeFlags(type: ts.Type): ts.TypeFlags;\n/**\n * @param flagsToCheck The composition of one or more `ts.TypeFlags`.\n * @param isReceiver Whether the type is a receiving type (e.g. the type of a\n * called function's parameter).\n * @remarks\n * Note that if the type is a union, this function will decompose it into the\n * parts and get the flags of every union constituent. If this is not desired,\n * use the `isTypeFlag` function from tsutils.\n */\nexport declare function isTypeFlagSet(type: ts.Type, flagsToCheck: ts.TypeFlags, \n/** @deprecated This params is not used and will be removed in the future.*/\nisReceiver?: boolean): boolean;\n//# sourceMappingURL=typeFlagUtils.d.ts.map"
        }
    ]
}
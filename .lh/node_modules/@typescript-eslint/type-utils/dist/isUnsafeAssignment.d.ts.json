{
    "sourceFile": "node_modules/@typescript-eslint/type-utils/dist/isUnsafeAssignment.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891997439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { TSESTree } from '@typescript-eslint/utils';\nimport type * as ts from 'typescript';\n/**\n * Does a simple check to see if there is an any being assigned to a non-any type.\n *\n * This also checks generic positions to ensure there's no unsafe sub-assignments.\n * Note: in the case of generic positions, it makes the assumption that the two types are the same.\n *\n * @example See tests for examples\n *\n * @returns false if it's safe, or an object with the two types if it's unsafe\n */\nexport declare function isUnsafeAssignment(type: ts.Type, receiver: ts.Type, checker: ts.TypeChecker, senderNode: TSESTree.Node | null): {\n    receiver: ts.Type;\n    sender: ts.Type;\n} | false;\n//# sourceMappingURL=isUnsafeAssignment.d.ts.map"
        }
    ]
}
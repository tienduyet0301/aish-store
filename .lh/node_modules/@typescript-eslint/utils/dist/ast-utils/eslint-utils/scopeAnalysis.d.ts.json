{
    "sourceFile": "node_modules/@typescript-eslint/utils/dist/ast-utils/eslint-utils/scopeAnalysis.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892007751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type * as TSESLint from '../../ts-eslint';\nimport type { TSESTree } from '../../ts-estree';\n/**\n * Get the variable of a given name.\n *\n * @see {@link https://eslint-community.github.io/eslint-utils/api/scope-utils.html#findvariable}\n */\nexport declare const findVariable: (initialScope: TSESLint.Scope.Scope, nameOrNode: string | TSESTree.Identifier) => TSESLint.Scope.Variable | null;\n/**\n * Get the innermost scope which contains a given node.\n *\n * @see {@link https://eslint-community.github.io/eslint-utils/api/scope-utils.html#getinnermostscope}\n * @returns The innermost scope which contains the given node.\n * If such scope doesn't exist then it returns the 1st argument `initialScope`.\n */\nexport declare const getInnermostScope: (initialScope: TSESLint.Scope.Scope, node: TSESTree.Node) => TSESLint.Scope.Scope;\n//# sourceMappingURL=scopeAnalysis.d.ts.map"
        }
    ]
}
{
    "sourceFile": "node_modules/@typescript-eslint/utils/dist/eslint-utils/getParserServices.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892008926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type * as TSESLint from '../ts-eslint';\nimport type { ParserServices, ParserServicesWithTypeInformation } from '../ts-estree';\n/**\n * Try to retrieve type-aware parser service from context.\n * This **_will_** throw if it is not available.\n */\nexport declare function getParserServices<MessageIds extends string, Options extends readonly unknown[]>(context: Readonly<TSESLint.RuleContext<MessageIds, Options>>): ParserServicesWithTypeInformation;\n/**\n * Try to retrieve type-aware parser service from context.\n * This **_will_** throw if it is not available.\n */\nexport declare function getParserServices<MessageIds extends string, Options extends readonly unknown[]>(context: Readonly<TSESLint.RuleContext<MessageIds, Options>>, allowWithoutFullTypeInformation: false): ParserServicesWithTypeInformation;\n/**\n * Try to retrieve type-aware parser service from context.\n * This **_will not_** throw if it is not available.\n */\nexport declare function getParserServices<MessageIds extends string, Options extends readonly unknown[]>(context: Readonly<TSESLint.RuleContext<MessageIds, Options>>, allowWithoutFullTypeInformation: true): ParserServices;\n/**\n * Try to retrieve type-aware parser service from context.\n * This may or may not throw if it is not available, depending on if `allowWithoutFullTypeInformation` is `true`\n */\nexport declare function getParserServices<MessageIds extends string, Options extends readonly unknown[]>(context: Readonly<TSESLint.RuleContext<MessageIds, Options>>, allowWithoutFullTypeInformation: boolean): ParserServices;\n//# sourceMappingURL=getParserServices.d.ts.map"
        }
    ]
}
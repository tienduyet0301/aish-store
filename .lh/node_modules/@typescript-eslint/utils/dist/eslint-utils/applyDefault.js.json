{
    "sourceFile": "node_modules/@typescript-eslint/utils/dist/eslint-utils/applyDefault.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892008232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyDefault = applyDefault;\nconst deepMerge_1 = require(\"./deepMerge\");\n/**\n * Pure function - doesn't mutate either parameter!\n * Uses the default options and overrides with the options provided by the user\n * @param defaultOptions the defaults\n * @param userOptions the user opts\n * @returns the options with defaults\n */\nfunction applyDefault(defaultOptions, userOptions) {\n    // clone defaults\n    const options = structuredClone(defaultOptions);\n    if (userOptions == null) {\n        return options;\n    }\n    // For avoiding the type error\n    //   `This expression is not callable. Type 'unknown' has no call signatures.ts(2349)`\n    options.forEach((opt, i) => {\n        // eslint-disable-next-line @typescript-eslint/internal/eqeq-nullish\n        if (userOptions[i] !== undefined) {\n            const userOpt = userOptions[i];\n            if ((0, deepMerge_1.isObjectNotArray)(userOpt) && (0, deepMerge_1.isObjectNotArray)(opt)) {\n                options[i] = (0, deepMerge_1.deepMerge)(opt, userOpt);\n            }\n            else {\n                options[i] = userOpt;\n            }\n        }\n    });\n    return options;\n}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@typescript-eslint/scope-manager/dist/variable/Variable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891996506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variable = void 0;\nconst VariableBase_1 = require(\"./VariableBase\");\n/**\n * A Variable represents a locally scoped identifier. These include arguments to functions.\n */\nclass Variable extends VariableBase_1.VariableBase {\n    /**\n     * `true` if the variable is valid in a type context, false otherwise\n     * @public\n     */\n    get isTypeVariable() {\n        if (this.defs.length === 0) {\n            // we don't statically know whether this is a type or a value\n            return true;\n        }\n        return this.defs.some(def => def.isTypeDefinition);\n    }\n    /**\n     * `true` if the variable is valid in a value context, false otherwise\n     * @public\n     */\n    get isValueVariable() {\n        if (this.defs.length === 0) {\n            // we don't statically know whether this is a type or a value\n            return true;\n        }\n        return this.defs.some(def => def.isVariableDefinition);\n    }\n}\nexports.Variable = Variable;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@typescript-eslint/scope-manager/dist/variable/VariableBase.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891996572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VariableBase = void 0;\nconst ID_1 = require(\"../ID\");\nconst generator = (0, ID_1.createIdGenerator)();\nclass VariableBase {\n    /**\n     * A unique ID for this instance - primarily used to help debugging and testing\n     */\n    $id = generator();\n    /**\n     * The array of the definitions of this variable.\n     * @public\n     */\n    defs = [];\n    /**\n     * True if the variable is considered used for the purposes of `no-unused-vars`, false otherwise.\n     * @public\n     */\n    eslintUsed = false;\n    /**\n     * The array of `Identifier` nodes which define this variable.\n     * If this variable is redeclared, this array includes two or more nodes.\n     * @public\n     */\n    identifiers = [];\n    /**\n     * The variable name, as given in the source code.\n     * @public\n     */\n    name;\n    /**\n     * List of {@link Reference} of this variable (excluding parameter entries)  in its defining scope and all nested scopes.\n     * For defining occurrences only see {@link Variable#defs}.\n     * @public\n     */\n    references = [];\n    /**\n     * Reference to the enclosing Scope.\n     */\n    scope;\n    constructor(name, scope) {\n        this.name = name;\n        this.scope = scope;\n    }\n}\nexports.VariableBase = VariableBase;\n"
        }
    ]
}
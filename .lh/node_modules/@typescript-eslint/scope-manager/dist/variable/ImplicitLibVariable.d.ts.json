{
    "sourceFile": "node_modules/@typescript-eslint/scope-manager/dist/variable/ImplicitLibVariable.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891996337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Scope } from '../scope';\nimport type { Variable } from './Variable';\nimport { ESLintScopeVariable } from './ESLintScopeVariable';\nexport interface ImplicitLibVariableOptions {\n    readonly eslintImplicitGlobalSetting?: ESLintScopeVariable['eslintImplicitGlobalSetting'];\n    readonly isTypeVariable?: boolean;\n    readonly isValueVariable?: boolean;\n    readonly writeable?: boolean;\n}\nexport interface LibDefinition {\n    libs: readonly LibDefinition[];\n    variables: readonly [string, ImplicitLibVariableOptions][];\n}\n/**\n * An variable implicitly defined by the TS Lib\n */\nexport declare class ImplicitLibVariable extends ESLintScopeVariable implements Variable {\n    /**\n     * `true` if the variable is valid in a type context, false otherwise\n     */\n    readonly isTypeVariable: boolean;\n    /**\n     * `true` if the variable is valid in a value context, false otherwise\n     */\n    readonly isValueVariable: boolean;\n    constructor(scope: Scope, name: string, { eslintImplicitGlobalSetting, isTypeVariable, isValueVariable, writeable, }: ImplicitLibVariableOptions);\n}\n//# sourceMappingURL=ImplicitLibVariable.d.ts.map"
        }
    ]
}
{
    "sourceFile": "node_modules/@typescript-eslint/scope-manager/dist/variable/ESLintScopeVariable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891996318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ESLintScopeVariable = void 0;\nconst VariableBase_1 = require(\"./VariableBase\");\n/**\n * ESLint defines global variables using the eslint-scope Variable class\n * This is declared here for consumers to use\n */\nclass ESLintScopeVariable extends VariableBase_1.VariableBase {\n    /**\n     * Written to by ESLint.\n     * If this key exists, this variable is a global variable added by ESLint.\n     * If this is `true`, this variable can be assigned arbitrary values.\n     * If this is `false`, this variable is readonly.\n     */\n    writeable; // note that this isn't a typo - ESlint uses this spelling here\n    /**\n     * Written to by ESLint.\n     * This property is undefined if there are no globals directive comments.\n     * The array of globals directive comments which defined this global variable in the source code file.\n     */\n    eslintExplicitGlobal;\n    /**\n     * Written to by ESLint.\n     * The configured value in config files. This can be different from `variable.writeable` if there are globals directive comments.\n     */\n    eslintImplicitGlobalSetting;\n    /**\n     * Written to by ESLint.\n     * If this key exists, it is a global variable added by ESLint.\n     * If `true`, this global variable was defined by a globals directive comment in the source code file.\n     */\n    eslintExplicitGlobalComments;\n}\nexports.ESLintScopeVariable = ESLintScopeVariable;\n"
        }
    ]
}
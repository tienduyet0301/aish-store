{
    "sourceFile": "node_modules/@typescript-eslint/scope-manager/dist/variable/ESLintScopeVariable.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891996254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { TSESTree } from '@typescript-eslint/types';\nimport { VariableBase } from './VariableBase';\n/**\n * ESLint defines global variables using the eslint-scope Variable class\n * This is declared here for consumers to use\n */\nexport declare class ESLintScopeVariable extends VariableBase {\n    /**\n     * Written to by ESLint.\n     * If this key exists, this variable is a global variable added by ESLint.\n     * If this is `true`, this variable can be assigned arbitrary values.\n     * If this is `false`, this variable is readonly.\n     */\n    writeable?: boolean;\n    /**\n     * Written to by ESLint.\n     * This property is undefined if there are no globals directive comments.\n     * The array of globals directive comments which defined this global variable in the source code file.\n     */\n    eslintExplicitGlobal?: boolean;\n    /**\n     * Written to by ESLint.\n     * The configured value in config files. This can be different from `variable.writeable` if there are globals directive comments.\n     */\n    eslintImplicitGlobalSetting?: 'readonly' | 'writable';\n    /**\n     * Written to by ESLint.\n     * If this key exists, it is a global variable added by ESLint.\n     * If `true`, this global variable was defined by a globals directive comment in the source code file.\n     */\n    eslintExplicitGlobalComments?: TSESTree.Comment[];\n}\n//# sourceMappingURL=ESLintScopeVariable.d.ts.map"
        }
    ]
}
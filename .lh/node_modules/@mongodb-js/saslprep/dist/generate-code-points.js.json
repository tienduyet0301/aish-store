{
    "sourceFile": "node_modules/@mongodb-js/saslprep/dist/generate-code-points.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891882055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst zlib_1 = require(\"zlib\");\nconst sparse_bitfield_1 = __importDefault(require(\"sparse-bitfield\"));\nconst codePoints = __importStar(require(\"./code-points-src\"));\nconst fs_1 = require(\"fs\");\nconst prettier = __importStar(require(\"prettier\"));\nconst unassigned_code_points = (0, sparse_bitfield_1.default)();\nconst commonly_mapped_to_nothing = (0, sparse_bitfield_1.default)();\nconst non_ascii_space_characters = (0, sparse_bitfield_1.default)();\nconst prohibited_characters = (0, sparse_bitfield_1.default)();\nconst bidirectional_r_al = (0, sparse_bitfield_1.default)();\nconst bidirectional_l = (0, sparse_bitfield_1.default)();\nfunction traverse(bits, src) {\n    for (const code of src.keys()) {\n        bits.set(code, true);\n    }\n    const buffer = bits.toBuffer();\n    return Buffer.concat([createSize(buffer), buffer]);\n}\nfunction createSize(buffer) {\n    const buf = Buffer.alloc(4);\n    buf.writeUInt32BE(buffer.length);\n    return buf;\n}\nconst memory = [];\nmemory.push(traverse(unassigned_code_points, codePoints.unassigned_code_points), traverse(commonly_mapped_to_nothing, codePoints.commonly_mapped_to_nothing), traverse(non_ascii_space_characters, codePoints.non_ASCII_space_characters), traverse(prohibited_characters, codePoints.prohibited_characters), traverse(bidirectional_r_al, codePoints.bidirectional_r_al), traverse(bidirectional_l, codePoints.bidirectional_l));\nasync function writeCodepoints() {\n    const config = await prettier.resolveConfig(__dirname);\n    const formatOptions = { ...config, parser: 'typescript' };\n    function write(stream, chunk) {\n        return new Promise((resolve) => stream.write(chunk, () => resolve()));\n    }\n    await write((0, fs_1.createWriteStream)(process.argv[2]), await prettier.format(`import { gunzipSync } from 'zlib';\n\n  export default gunzipSync(\n    Buffer.from(\n      '${(0, zlib_1.gzipSync)(Buffer.concat(memory), { level: 9 }).toString('base64')}',\n      'base64'\n    )\n  );\n  `, formatOptions));\n    const fsStreamUncompressedData = (0, fs_1.createWriteStream)(process.argv[3]);\n    await write(fsStreamUncompressedData, await prettier.format(`const data = Buffer.from('${Buffer.concat(memory).toString('base64')}', 'base64');\\nexport default data;\\n`, formatOptions));\n}\nwriteCodepoints().catch((error) => console.error('error occurred generating saslprep codepoint data', { error }));\n//# sourceMappingURL=generate-code-points.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/tsconfig-paths/lib/__tests__/filesystem.test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893063096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Filesystem = require(\"../filesystem\");\nvar path = require(\"path\");\ndescribe(\"filesystem\", function () {\n    var fileThatExists = path.join(__dirname, \"../../package.json\");\n    var fileThatNotExists = path.join(__dirname, \"../../package2.json\");\n    it(\"should find file that exists, sync\", function () {\n        var result = Filesystem.fileExistsSync(fileThatExists);\n        // assert.equal(result, true);\n        expect(result).toBe(true);\n    });\n    it(\"should not find file that not exists, sync\", function () {\n        var result = Filesystem.fileExistsSync(fileThatNotExists);\n        // assert.equal(result, false);\n        expect(result).toBe(false);\n    });\n    it(\"should find file that exists, async\", function (done) {\n        Filesystem.fileExistsAsync(fileThatExists, function (_err, result) {\n            try {\n                // assert.equal(result, true);\n                expect(result).toBe(true);\n                done();\n            }\n            catch (error) {\n                done(error);\n            }\n        });\n    });\n    it(\"should not find file that not exists, async\", function (done) {\n        Filesystem.fileExistsAsync(fileThatNotExists, function (_err, result) {\n            try {\n                // assert.equal(result, false);\n                expect(result).toBe(false);\n                done();\n            }\n            catch (error) {\n                done(error);\n            }\n        });\n    });\n    it(\"should load json, sync\", function () {\n        var result = Filesystem.readJsonFromDiskSync(fileThatExists);\n        // assert.isOk(result);\n        expect(result);\n        // assert.equal(result.main, \"lib/index.js\");\n        expect(result.main).toBe(\"lib/index.js\");\n    });\n    it(\"should load json, async\", function (done) {\n        Filesystem.readJsonFromDiskAsync(fileThatExists, function (_err, result) {\n            try {\n                // assert.isOk(result); // Asserts that object is truthy.\n                expect(result).toBeTruthy();\n                // assert.equal(result.main, \"lib/index.js\");\n                expect(result.main).toBe(\"lib/index.js\");\n                done();\n            }\n            catch (error) {\n                done(error);\n            }\n        });\n    });\n});\n//# sourceMappingURL=filesystem.test.js.map"
        }
    ]
}
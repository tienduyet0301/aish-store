{
    "sourceFile": "node_modules/tsconfig-paths/lib/match-path-async.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893060921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import * as MappingEntry from \"./mapping-entry\";\nimport * as Filesystem from \"./filesystem\";\n/**\n * Function that can match a path async\n */\nexport interface MatchPathAsync {\n    (requestedModule: string, readJson: Filesystem.ReadJsonAsync | undefined, fileExists: Filesystem.FileExistsAsync | undefined, extensions: ReadonlyArray<string> | undefined, callback: MatchPathAsyncCallback): void;\n}\nexport interface MatchPathAsyncCallback {\n    (err?: Error, path?: string): void;\n}\n/**\n * See the sync version for docs.\n */\nexport declare function createMatchPathAsync(absoluteBaseUrl: string, paths: {\n    [key: string]: Array<string>;\n}, mainFields?: string[], addMatchAll?: boolean): MatchPathAsync;\n/**\n * See the sync version for docs.\n */\nexport declare function matchFromAbsolutePathsAsync(absolutePathMappings: ReadonlyArray<MappingEntry.MappingEntry>, requestedModule: string, readJson: Filesystem.ReadJsonAsync | undefined, fileExists: Filesystem.FileExistsAsync | undefined, extensions: readonly string[] | undefined, callback: MatchPathAsyncCallback, mainFields?: string[]): void;\n"
        }
    ]
}
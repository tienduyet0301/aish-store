{
    "sourceFile": "node_modules/tsconfig-paths/lib/config-loader.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893060178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import * as TsConfigLoader2 from \"./tsconfig-loader\";\nexport interface ExplicitParams {\n    baseUrl: string;\n    paths: {\n        [key: string]: Array<string>;\n    };\n    mainFields?: Array<string>;\n    addMatchAll?: boolean;\n}\nexport declare type TsConfigLoader = (params: TsConfigLoader2.TsConfigLoaderParams) => TsConfigLoader2.TsConfigLoaderResult;\nexport interface ConfigLoaderParams {\n    cwd: string;\n    explicitParams?: ExplicitParams;\n    tsConfigLoader?: TsConfigLoader;\n}\nexport interface ConfigLoaderSuccessResult {\n    resultType: \"success\";\n    configFileAbsolutePath: string;\n    baseUrl: string;\n    absoluteBaseUrl: string;\n    paths: {\n        [key: string]: Array<string>;\n    };\n    mainFields?: Array<string>;\n    addMatchAll?: boolean;\n}\nexport interface ConfigLoaderFailResult {\n    resultType: \"failed\";\n    message: string;\n}\nexport declare type ConfigLoaderResult = ConfigLoaderSuccessResult | ConfigLoaderFailResult;\nexport declare function loadConfig(cwd?: string): ConfigLoaderResult;\nexport declare function configLoader({ cwd, explicitParams, tsConfigLoader, }: ConfigLoaderParams): ConfigLoaderResult;\n"
        }
    ]
}
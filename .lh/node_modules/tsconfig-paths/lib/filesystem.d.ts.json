{
    "sourceFile": "node_modules/tsconfig-paths/lib/filesystem.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893060331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * Typing for the fields of package.json we care about\n */\nexport interface PackageJson {\n    [key: string]: string;\n}\n/**\n * A function that json from a file\n */\nexport interface ReadJsonSync {\n    (packageJsonPath: string): any | undefined;\n}\nexport interface FileExistsSync {\n    (name: string): boolean;\n}\nexport interface FileExistsAsync {\n    (path: string, callback: (err?: Error, exists?: boolean) => void): void;\n}\nexport interface ReadJsonAsyncCallback {\n    (err?: Error, content?: any): void;\n}\nexport interface ReadJsonAsync {\n    (path: string, callback: ReadJsonAsyncCallback): void;\n}\nexport declare function fileExistsSync(path: string): boolean;\n/**\n * Reads package.json from disk\n * @param file Path to package.json\n */\nexport declare function readJsonFromDiskSync(packageJsonPath: string): any | undefined;\nexport declare function readJsonFromDiskAsync(path: string, callback: (err?: Error, content?: any) => void): void;\nexport declare function fileExistsAsync(path2: string, callback2: (err?: Error, exists?: boolean) => void): void;\nexport declare function removeExtension(path: string): string;\n"
        }
    ]
}
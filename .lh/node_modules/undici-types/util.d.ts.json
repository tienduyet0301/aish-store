{
    "sourceFile": "node_modules/undici-types/util.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893087535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export namespace util {\n  /**\n   * Retrieves a header name and returns its lowercase value.\n   * @param value Header name\n   */\n  export function headerNameToString(value: string | Buffer): string;\n\n  /**\n   * Receives a header object and returns the parsed value.\n   * @param headers Header object\n   * @param obj Object to specify a proxy object. Used to assign parsed values.\n   * @returns If `obj` is specified, it is equivalent to `obj`.\n   */\n  export function parseHeaders(\n    headers: (Buffer | string | (Buffer | string)[])[],\n    obj?: Record<string, string | string[]>\n  ): Record<string, string | string[]>;\n}\n"
        }
    ]
}
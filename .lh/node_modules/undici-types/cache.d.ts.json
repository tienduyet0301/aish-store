{
    "sourceFile": "node_modules/undici-types/cache.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893080731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { RequestInfo, Response, Request } from './fetch'\n\nexport interface CacheStorage {\n  match (request: RequestInfo, options?: MultiCacheQueryOptions): Promise<Response | undefined>,\n  has (cacheName: string): Promise<boolean>,\n  open (cacheName: string): Promise<Cache>,\n  delete (cacheName: string): Promise<boolean>,\n  keys (): Promise<string[]>\n}\n\ndeclare const CacheStorage: {\n  prototype: CacheStorage\n  new(): CacheStorage\n}\n\nexport interface Cache {\n  match (request: RequestInfo, options?: CacheQueryOptions): Promise<Response | undefined>,\n  matchAll (request?: RequestInfo, options?: CacheQueryOptions): Promise<readonly Response[]>,\n  add (request: RequestInfo): Promise<undefined>,\n  addAll (requests: RequestInfo[]): Promise<undefined>,\n  put (request: RequestInfo, response: Response): Promise<undefined>,\n  delete (request: RequestInfo, options?: CacheQueryOptions): Promise<boolean>,\n  keys (request?: RequestInfo, options?: CacheQueryOptions): Promise<readonly Request[]>\n}\n\nexport interface CacheQueryOptions {\n  ignoreSearch?: boolean,\n  ignoreMethod?: boolean,\n  ignoreVary?: boolean\n}\n\nexport interface MultiCacheQueryOptions extends CacheQueryOptions {\n  cacheName?: string\n}\n\nexport declare const caches: CacheStorage\n"
        }
    ]
}
{
    "sourceFile": "node_modules/undici-types/readable.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893087014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Readable } from \"stream\";\nimport { Blob } from 'buffer'\n\nexport default BodyReadable\n\ndeclare class BodyReadable extends Readable {\n  constructor(\n    resume?: (this: Readable, size: number) => void | null,\n    abort?: () => void | null,\n    contentType?: string\n  )\n\n  /** Consumes and returns the body as a string\n   *  https://fetch.spec.whatwg.org/#dom-body-text\n   */\n  text(): Promise<string>\n\n  /** Consumes and returns the body as a JavaScript Object\n   *  https://fetch.spec.whatwg.org/#dom-body-json\n   */\n  json(): Promise<unknown>\n\n  /** Consumes and returns the body as a Blob\n   *  https://fetch.spec.whatwg.org/#dom-body-blob\n   */\n  blob(): Promise<Blob>\n\n  /** Consumes and returns the body as an Uint8Array\n   *  https://fetch.spec.whatwg.org/#dom-body-bytes\n   */\n  bytes(): Promise<Uint8Array>\n\n  /** Consumes and returns the body as an ArrayBuffer\n   *  https://fetch.spec.whatwg.org/#dom-body-arraybuffer\n   */\n  arrayBuffer(): Promise<ArrayBuffer>\n\n  /** Not implemented\n   *\n   *  https://fetch.spec.whatwg.org/#dom-body-formdata\n   */\n  formData(): Promise<never>\n\n  /** Returns true if the body is not null and the body has been consumed\n   *\n   *  Otherwise, returns false\n   *\n   * https://fetch.spec.whatwg.org/#dom-body-bodyused\n   */\n  readonly bodyUsed: boolean\n\n  /** \n   * If body is null, it should return null as the body\n   *\n   *  If body is not null, should return the body as a ReadableStream\n   *\n   *  https://fetch.spec.whatwg.org/#dom-body-body\n   */\n  readonly body: never | undefined\n\n  /** Dumps the response body by reading `limit` number of bytes.\n   * @param opts.limit Number of bytes to read (optional) - Default: 262144\n   */\n  dump(opts?: { limit: number }): Promise<void>\n}\n"
        }
    ]
}
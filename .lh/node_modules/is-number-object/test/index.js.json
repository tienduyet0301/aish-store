{
    "sourceFile": "node_modules/is-number-object/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892338094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar isNumber = require('../');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\ntest('not Numbers', function (t) {\n\t// @ts-expect-error\n\tt.notOk(isNumber(), 'undefined is not Number');\n\tt.notOk(isNumber(null), 'null is not Number');\n\tt.notOk(isNumber(false), 'false is not Number');\n\tt.notOk(isNumber(true), 'true is not Number');\n\tt.notOk(isNumber('foo'), 'string is not Number');\n\tt.notOk(isNumber([]), 'array is not Number');\n\tt.notOk(isNumber({}), 'object is not Number');\n\tt.notOk(isNumber(function () {}), 'function is not Number');\n\tt.notOk(isNumber(/a/g), 'regex literal is not Number');\n\tt.notOk(isNumber(new RegExp('a', 'g')), 'regex object is not Number');\n\tt.notOk(isNumber(new Date()), 'new Date() is not Number');\n\tt.end();\n});\n\ntest('@@toStringTag', { skip: !hasToStringTag }, function (t) {\n\t/** @type {{ toString(): string; valueOf(): number; [Symbol.toStringTag]?: string; }} */\n\tvar fakeNumber = {\n\t\ttoString: function () { return '7'; },\n\t\tvalueOf: function () { return 42; }\n\t};\n\tfakeNumber[Symbol.toStringTag] = 'Number';\n\tt.notOk(isNumber(fakeNumber), 'fake Number with @@toStringTag \"Number\" is not Number');\n\tt.end();\n});\n\ntest('Numbers', function (t) {\n\tt.ok(isNumber(42), 'number is Number');\n\tt.ok(isNumber(Object(42)), 'number object is Number');\n\tt.ok(isNumber(NaN), 'NaN is Number');\n\tt.ok(isNumber(Infinity), 'Infinity is Number');\n\tt.end();\n});\n"
        }
    ]
}
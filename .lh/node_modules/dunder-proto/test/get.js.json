{
    "sourceFile": "node_modules/dunder-proto/test/get.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892113936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\n\nvar getDunderProto = require('../get');\n\ntest('getDunderProto', { skip: !getDunderProto }, function (t) {\n\tif (!getDunderProto) {\n\t\tthrow 'should never happen; this is just for type narrowing'; // eslint-disable-line no-throw-literal\n\t}\n\n\t// @ts-expect-error\n\tt['throws'](function () { getDunderProto(); }, TypeError, 'throws if no argument');\n\t// @ts-expect-error\n\tt['throws'](function () { getDunderProto(undefined); }, TypeError, 'throws with undefined');\n\t// @ts-expect-error\n\tt['throws'](function () { getDunderProto(null); }, TypeError, 'throws with null');\n\n\tt.equal(getDunderProto({}), Object.prototype);\n\tt.equal(getDunderProto([]), Array.prototype);\n\tt.equal(getDunderProto(function () {}), Function.prototype);\n\tt.equal(getDunderProto(/./g), RegExp.prototype);\n\tt.equal(getDunderProto(42), Number.prototype);\n\tt.equal(getDunderProto(true), Boolean.prototype);\n\tt.equal(getDunderProto('foo'), String.prototype);\n\n\tt.end();\n});\n\ntest('no dunder proto', { skip: !!getDunderProto }, function (t) {\n\tt.notOk('__proto__' in Object.prototype, 'no __proto__ in Object.prototype');\n\n\tt.end();\n});\n"
        }
    ]
}
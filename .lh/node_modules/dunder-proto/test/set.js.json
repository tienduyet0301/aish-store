{
    "sourceFile": "node_modules/dunder-proto/test/set.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892114536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\n\nvar setDunderProto = require('../set');\n\ntest('setDunderProto', { skip: !setDunderProto }, function (t) {\n\tif (!setDunderProto) {\n\t\tthrow 'should never happen; this is just for type narrowing'; // eslint-disable-line no-throw-literal\n\t}\n\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(); }, TypeError, 'throws if no arguments');\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(undefined); }, TypeError, 'throws with undefined and nothing');\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(undefined, undefined); }, TypeError, 'throws with undefined and undefined');\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(null); }, TypeError, 'throws with null and undefined');\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(null, undefined); }, TypeError, 'throws with null and undefined');\n\n\t/** @type {{ inherited?: boolean }} */\n\tvar obj = {};\n\tt.ok('toString' in obj, 'object initially has toString');\n\n\tsetDunderProto(obj, null);\n\tt.notOk('toString' in obj, 'object no longer has toString');\n\n\tt.notOk('inherited' in obj, 'object lacks inherited property');\n\tsetDunderProto(obj, { inherited: true });\n\tt.equal(obj.inherited, true, 'object has inherited property');\n\n\tt.end();\n});\n\ntest('no dunder proto', { skip: !!setDunderProto }, function (t) {\n\tif ('__proto__' in Object.prototype) {\n\t\tt['throws'](\n\t\t\t// @ts-expect-error\n\t\t\tfunction () { ({}).__proto__ = null; }, // eslint-disable-line no-proto\n\t\t\tError,\n\t\t\t'throws when setting Object.prototype.__proto__'\n\t\t);\n\t} else {\n\t\tt.notOk('__proto__' in Object.prototype, 'no __proto__ in Object.prototype');\n\t}\n\n\tt.end();\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next-auth/src/react/types.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892936202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Session } from \"..\"\nimport type { BuiltInProviderType, ProviderType } from \"../providers\"\n\nexport interface UseSessionOptions<R extends boolean> {\n  required: R\n  /** Defaults to `signIn` */\n  onUnauthenticated?: () => void\n}\n\n/**\n * Util type that matches some strings literally, but allows any other string as well.\n * @source https://github.com/microsoft/TypeScript/issues/29729#issuecomment-832522611\n */\nexport type LiteralUnion<T extends U, U = string> =\n  | T\n  | (U & Record<never, never>)\n\nexport interface ClientSafeProvider {\n  id: LiteralUnion<BuiltInProviderType>\n  name: string\n  type: ProviderType\n  signinUrl: string\n  callbackUrl: string\n}\n\nexport interface SignInOptions extends Record<string, unknown> {\n  /**\n   * Specify to which URL the user will be redirected after signing in. Defaults to the page URL the sign-in is initiated from.\n   *\n   * [Documentation](https://next-auth.js.org/getting-started/client#specifying-a-callbackurl)\n   */\n  callbackUrl?: string\n  /** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option) */\n  redirect?: boolean\n}\n\nexport interface SignInResponse {\n  error: string | null\n  status: number\n  ok: boolean\n  url: string | null\n}\n\n/** Match `inputType` of `new URLSearchParams(inputType)` */\nexport type SignInAuthorizationParams =\n  | string\n  | string[][]\n  | Record<string, string>\n  | URLSearchParams\n\n/** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option-1) */\nexport interface SignOutResponse {\n  url: string\n}\n\nexport interface SignOutParams<R extends boolean = true> {\n  /** [Documentation](https://next-auth.js.org/getting-started/client#specifying-a-callbackurl-1) */\n  callbackUrl?: string\n  /** [Documentation](https://next-auth.js.org/getting-started/client#using-the-redirect-false-option-1 */\n  redirect?: R\n}\n\n/** [Documentation](https://next-auth.js.org/getting-started/client#options) */\nexport interface SessionProviderProps {\n  children: React.ReactNode\n  session?: Session | null\n  baseUrl?: string\n  basePath?: string\n  /**\n   * A time interval (in seconds) after which the session will be re-fetched.\n   * If set to `0` (default), the session is not polled.\n   */\n  refetchInterval?: number\n  /**\n   * `SessionProvider` automatically refetches the session when the user switches between windows.\n   * This option activates this behaviour if set to `true` (default).\n   */\n  refetchOnWindowFocus?: boolean\n  /**\n   * Set to `false` to stop polling when the device has no internet access offline (determined by `navigator.onLine`)\n   *\n   * [`navigator.onLine` documentation](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine)\n   */\n  refetchWhenOffline?: false\n}\n"
        }
    ]
}
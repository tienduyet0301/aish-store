{
    "sourceFile": "node_modules/next-auth/src/providers/twitter.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892935896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { OAuthConfig, OAuthUserConfig } from \".\"\n\nexport interface TwitterLegacyProfile {\n  id: number\n  id_str: string\n  name: string\n  screen_name: string\n  location: string\n  description: string\n  url: string\n  entities: {\n    url: {\n      urls: Array<{\n        url: string\n        expanded_url: string\n        display_url: string\n        indices: number[]\n      }>\n    }\n    description: {\n      urls: any[]\n    }\n  }\n  protected: boolean\n  followers_count: number\n  friends_count: number\n  listed_count: number\n  created_at: string\n  favourites_count: number\n  utc_offset?: any\n  time_zone?: any\n  geo_enabled: boolean\n  verified: boolean\n  statuses_count: number\n  lang?: any\n  status: {\n    created_at: string\n    id: number\n    id_str: string\n    text: string\n    truncated: boolean\n    entities: {\n      hashtags: any[]\n      symbols: any[]\n      user_mentions: Array<{\n        screen_name: string\n        name: string\n        id: number\n        id_str: string\n        indices: number[]\n      }>\n      urls: any[]\n    }\n    source: string\n    in_reply_to_status_id: number\n    in_reply_to_status_id_str: string\n    in_reply_to_user_id: number\n    in_reply_to_user_id_str: string\n    in_reply_to_screen_name: string\n    geo?: any\n    coordinates?: any\n    place?: any\n    contributors?: any\n    is_quote_status: boolean\n    retweet_count: number\n    favorite_count: number\n    favorited: boolean\n    retweeted: boolean\n    lang: string\n  }\n  contributors_enabled: boolean\n  is_translator: boolean\n  is_translation_enabled: boolean\n  profile_background_color: string\n  profile_background_image_url: string\n  profile_background_image_url_https: string\n  profile_background_tile: boolean\n  profile_image_url: string\n  profile_image_url_https: string\n  profile_banner_url: string\n  profile_link_color: string\n  profile_sidebar_border_color: string\n  profile_sidebar_fill_color: string\n  profile_text_color: string\n  profile_use_background_image: boolean\n  has_extended_profile: boolean\n  default_profile: boolean\n  default_profile_image: boolean\n  following: boolean\n  follow_request_sent: boolean\n  notifications: boolean\n  translator_type: string\n  withheld_in_countries: any[]\n  suspended: boolean\n  needs_phone_verification: boolean\n}\n\nexport function TwitterLegacy<\n  P extends Record<string, any> = TwitterLegacyProfile\n>(options: OAuthUserConfig<P>): OAuthConfig<P> {\n  return {\n    id: \"twitter\",\n    name: \"Twitter (Legacy)\",\n    type: \"oauth\",\n    version: \"1.0A\",\n    authorization: \"https://api.twitter.com/oauth/authenticate\",\n    accessTokenUrl: \"https://api.twitter.com/oauth/access_token\",\n    requestTokenUrl: \"https://api.twitter.com/oauth/request_token\",\n    profileUrl:\n      \"https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true\",\n    profile(profile) {\n      return {\n        id: profile.id_str,\n        name: profile.name,\n        email: profile.email,\n        image: profile.profile_image_url_https.replace(\n          /_normal\\.(jpg|png|gif)$/,\n          \".$1\"\n        ),\n      }\n    },\n    style: { logo: \"/twitter.svg\", bg: \"#1da1f2\", text: \"#fff\" },\n    options,\n  }\n}\n\n/**\n * [Documentation](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me)\n */\nexport interface TwitterProfile {\n  data: {\n    id: string\n    name: string\n    username: string\n    location?: string\n    entities?: {\n      url: {\n        urls: Array<{\n          start: number\n          end: number\n          url: string\n          expanded_url: string\n          display_url: string\n        }>\n      }\n      description: {\n        hashtags: Array<{\n          start: number\n          end: number\n          tag: string\n        }>\n      }\n    }\n    verified?: boolean\n    description?: string\n    url?: string\n    profile_image_url?: string\n    protected?: boolean\n    pinned_tweet_id?: string\n    created_at?: string\n  }\n  includes?: {\n    tweets?: Array<{\n      id: string\n      text: string\n    }>\n  }\n}\n\nexport default function Twitter<\n  P extends Record<string, any> = TwitterLegacyProfile | TwitterProfile\n>(options: OAuthUserConfig<P>): OAuthConfig<P> {\n  if (options.version === \"2.0\") {\n    return {\n      id: \"twitter\",\n      name: \"Twitter\",\n      version: \"2.0\",\n      type: \"oauth\",\n      authorization: {\n        url: \"https://twitter.com/i/oauth2/authorize\",\n        params: { scope: \"users.read tweet.read offline.access\" },\n      },\n      token: {\n        url: \"https://api.twitter.com/2/oauth2/token\",\n        // TODO: Remove this\n        async request({ client, params, checks, provider }) {\n          const response = await client.oauthCallback(\n            provider.callbackUrl,\n            params,\n            checks,\n            { exchangeBody: { client_id: options.clientId } }\n          )\n          return { tokens: response }\n        },\n      },\n      userinfo: {\n        url: \"https://api.twitter.com/2/users/me\",\n        params: { \"user.fields\": \"profile_image_url\" },\n      },\n      profile({ data }) {\n        return {\n          id: data.id,\n          name: data.name,\n          // NOTE: E-mail is currently unsupported by OAuth 2 Twitter.\n          email: null,\n          image: data.profile_image_url,\n        }\n      },\n      checks: [\"pkce\", \"state\"],\n      style: { logo: \"/twitter.svg\", bg: \"#1da1f2\", text: \"#fff\" },\n      options,\n    }\n  }\n\n  return TwitterLegacy(options)\n}\n"
        }
    ]
}
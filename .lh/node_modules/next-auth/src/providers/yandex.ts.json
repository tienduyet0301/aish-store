{
    "sourceFile": "node_modules/next-auth/src/providers/yandex.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892936056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * <div style={{backgroundColor: \"#ffcc00\", display: \"flex\", justifyContent: \"space-between\", color: \"#000\", padding: 16}}>\n * <span>Built-in <b>Yandex</b> integration.</span>\n * <a href=\"https://github.com\">\n *   <img style={{display: \"block\"}} src=\"https://authjs.dev/img/providers/yandex.svg\" height=\"48\" width=\"48\"/>\n * </a>\n * </div>\n *\n * ---\n * @module providers/yandex\n */\n\nimport { OAuthConfig, OAuthUserConfig } from \".\"\n\n/**\n * @see [Getting information about the user](https://yandex.com/dev/id/doc/en/user-information)\n * @see [Access to email address](https://yandex.com/dev/id/doc/en/user-information#email-access)\n * @see [Access to the user's profile picture](https://yandex.com/dev/id/doc/en/user-information#avatar-access)\n * @see [Access to the date of birth](https://yandex.com/dev/id/doc/en/user-information#birthday-access)\n * @see [Access to login, first name, last name, and gender](https://yandex.com/dev/id/doc/en/user-information#name-access)\n * @see [Access to the phone number](https://yandex.com/dev/id/doc/en/user-information#phone-access)\n */\nexport interface YandexProfile {\n  /** User's Yandex login. */\n  login: string\n  /** Yandex user's unique ID. */\n  id: string\n  /**\n   * The ID of the app the OAuth token in the request was issued for.\n   * Available in the [app properties](https://oauth.yandex.com/). To open properties, click the app name.\n   */\n  client_id: string\n  /** Authorized Yandex user ID. It is formed on the Yandex side based on the `client_id` and `user_id` pair. */\n  psuid: string\n  /** An array of the user's email addresses. Currently only includes the default email address. */\n  emails?: string[]\n  /** The default email address for contacting the user. */\n  default_email?: string\n  /**\n   * Indicates that the stub (profile picture that is automatically assigned when registering in Yandex)\n   * ID is specified in the `default_avatar_id` field.\n   */\n  is_avatar_empty?: boolean\n  /**\n   * ID of the Yandex user's profile picture.\n   * The profile picture with this ID can be downloaded via a link that looks like this:\n   * @example \"https://avatars.yandex.net/get-yapic/31804/BYkogAC6AoB17bN1HKRFAyKiM4-1/islands-200\"\n   */\n  default_avatar_id?:\n    | \"islands-small\"\n    | \"islands-34\"\n    | \"islands-middle\"\n    | \"islands-50\"\n    | \"islands-retina-small\"\n    | \"islands-68\"\n    | \"islands-75\"\n    | \"islands-retina-middle\"\n    | \"islands-retina-50\"\n    | \"islands-200\"\n  /**\n   * The user's date of birth in YYYY-MM-DD format.\n   * Unknown elements of the date are filled in with zeros, such as: `0000-12-23`.\n   * If the user's date of birth is unknow, birthday will be `null`\n   */\n  birthday?: string | null\n  first_name?: string\n  last_name?: string\n  display_name?: string\n  /**\n   * The first and last name that the user specified in Yandex ID.\n   * Non-Latin characters of the first and last names are presented in Unicode format.\n   */\n  real_name?: string\n  /** User's gender. Possible values: Male: `male', Female: `female`, Unknown gender: `null` */\n  sex?: string\n  /**\n   * The default phone number for contacting the user.\n   * The API can exclude the user's phone number from the response at its discretion.\n   * The field contains the following parameters:\n   * id: Phone number ID.\n   * number: The user's phone number.\n   */\n  default_phone?: { id: number; number: string }\n}\n\n/**\n * Add Yandex login to your page\n *\n * ## Example\n *\n * ```ts\n * import { Auth } from \"@auth/core\"\n * import Yandex from \"@auth/core/providers/yandex\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await Auth(request, {\n *  providers: [Yandex({ clientId: \"\", clientSecret: \"\" })],\n * })\n * ```\n *\n * ## Resources\n *\n * @see [Yandex - Creating an OAuth app](https://yandex.com/dev/id/doc/en/register-client#create)\n * @see [Yandex - Manage OAuth apps](https://oauth.yandex.com/)\n * @see [Yandex - OAuth documentation](https://yandex.com/dev/id/doc/en/)\n * @see [Learn more about OAuth](https://authjs.dev/concepts/oauth)\n * @see [Source code](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/yandex.ts)\n *\n *:::tip\n * The Yandex provider comes with a [default configuration](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/yandex.ts).\n * To override the defaults for your use case, check out [customizing a built-in OAuth provider](https://authjs.dev/guides/providers/custom-provider#override-default-options).\n * :::\n *\n * :::info **Disclaimer**\n * If you think you found a bug in the default configuration, you can [open an issue](https://authjs.dev/new/provider-issue).\n *\n * Auth.js strictly adheres to the specification and it cannot take responsibility for any deviation from\n * the spec by the provider. You can open an issue, but if the problem is non-compliance with the spec,\n * we might not pursue a resolution. You can ask for more help in [Discussions](https://authjs.dev/new/github-discussions).\n * :::\n */\nexport default function Yandex(\n  options: OAuthUserConfig<YandexProfile>\n): OAuthConfig<YandexProfile> {\n  return {\n    id: \"yandex\",\n    name: \"Yandex\",\n    type: \"oauth\",\n    /** @see [Data access](https://yandex.com/dev/id/doc/en/register-client#access) */\n    authorization:\n      \"https://oauth.yandex.ru/authorize?scope=login:info+login:email+login:avatar\",\n    token: \"https://oauth.yandex.ru/token\",\n    userinfo: \"https://login.yandex.ru/info?format=json\",\n    profile(profile) {\n      return {\n        id: profile.id,\n        name: profile.display_name ?? profile.real_name ?? profile.first_name,\n        email: profile.default_email ?? profile.emails?.[0] ?? null,\n        image:\n          !profile.is_avatar_empty && profile.default_avatar_id\n            ? `https://avatars.yandex.net/get-yapic/${profile.default_avatar_id}/islands-200`\n            : null,\n      }\n    },\n    style: {\n      logo: \"/yandex.svg\",\n      bg: \"#ffcc00\",\n      text: \"#000\",\n    },\n    options,\n  }\n}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next-auth/src/providers/todoist.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892935824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { OAuthConfig, OAuthUserConfig } from \".\"\n\n/**\n * @see https://developer.todoist.com/sync/v9/#user\n */\ninterface TodoistProfile extends Record<string, any> {\n  avatar_big: string\n  email: string\n  full_name: string\n  id: string\n}\n\nexport default function TodoistProvider<P extends TodoistProfile>(\n  options: OAuthUserConfig<P>\n): OAuthConfig<P> {\n  return {\n    id: \"todoist\",\n    name: \"Todoist\",\n    type: \"oauth\",\n    authorization: {\n      url: \"https://todoist.com/oauth/authorize\",\n      params: { scope: \"data:read\" },\n    },\n    token: \"https://todoist.com/oauth/access_token\",\n    client: {\n      token_endpoint_auth_method: \"client_secret_post\",\n    },\n    userinfo: {\n      request: async ({ tokens }) => {\n        // To obtain Todoist user info, we need to call the Sync API\n        // See https://developer.todoist.com/sync/v9\n        const res = await fetch(\"https://api.todoist.com/sync/v9/sync\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${tokens.access_token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            sync_token: \"*\",\n            resource_types: '[\"user\"]',\n          }),\n        })\n\n        const { user: profile } = await res.json()\n        return profile\n      },\n    },\n    profile: async (profile) => {\n      return {\n        id: profile.id,\n        email: profile.email,\n        name: profile.full_name,\n        image: profile.avatar_big,\n      }\n    },\n    style: { logo: \"/todoist.svg\", text: \"#000\", bg: \"#E44332\" },\n    ...options,\n  }\n}\n"
        }
    ]
}
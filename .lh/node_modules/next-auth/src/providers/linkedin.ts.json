{
    "sourceFile": "node_modules/next-auth/src/providers/linkedin.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892935239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { OAuthConfig, OAuthUserConfig } from \".\"\n\ninterface Identifier {\n  identifier: string\n}\n\ninterface Element {\n  identifiers?: Identifier[]\n}\n\nexport interface LinkedInProfile extends Record<string, any> {\n  id: string\n  localizedFirstName: string\n  localizedLastName: string\n  profilePicture: {\n    \"displayImage~\": {\n      elements?: Element[]\n    }\n  }\n}\n\nexport default function LinkedIn<P extends LinkedInProfile>(\n  options: OAuthUserConfig<P>\n): OAuthConfig<P> {\n  return {\n    id: \"linkedin\",\n    name: \"LinkedIn\",\n    type: \"oauth\",\n    authorization: {\n      url: \"https://www.linkedin.com/oauth/v2/authorization\",\n      params: { scope: \"openid profile email\" },\n    },\n    token: \"https://www.linkedin.com/oauth/v2/accessToken\",\n    client: {\n      token_endpoint_auth_method: \"client_secret_post\",\n    },\n    userinfo: {\n      url: \"https://api.linkedin.com/v2/me\",\n      params: {\n        projection: `(id,localizedFirstName,localizedLastName,profilePicture(displayImage~digitalmediaAsset:playableStreams))`,\n      },\n    },\n    async profile(profile, tokens) {\n      const emailResponse = await fetch(\n        \"https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))\",\n        { headers: { Authorization: `Bearer ${tokens.access_token}` } }\n      )\n      const emailData = await emailResponse.json()\n      return {\n        id: profile.id,\n        name: `${profile.localizedFirstName} ${profile.localizedLastName}`,\n        email: emailData?.elements?.[0]?.[\"handle~\"]?.emailAddress,\n        image:\n          profile.profilePicture?.[\"displayImage~\"]?.elements?.[0]\n            ?.identifiers?.[0]?.identifier,\n      }\n    },\n    style: { logo: \"/linkedin.svg\", bg: \"#069\", text: \"#fff\" },\n    options,\n  }\n}\n"
        }
    ]
}
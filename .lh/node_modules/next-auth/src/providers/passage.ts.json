{
    "sourceFile": "node_modules/next-auth/src/providers/passage.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892935562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { OAuthConfig, OAuthUserConfig } from \".\"\n\n/** @see [Supported Scopes](https://docs.passage.id/hosted-login/oidc-client-configuration#supported-scopes) */\nexport interface PassageProfile {\n  iss: string\n  /** Unique identifer in Passage for the user */\n  sub: string\n  aud: string[]\n  exp: number\n  iat: number\n  auth_time: number\n  azp: string\n  client_id: string\n  at_hash: string\n  c_hash: string\n  /** The user's email address */\n  email: string\n  /** Whether the user has verified their email address */\n  email_verified: boolean\n  /** The user's phone number */\n  phone: string\n  /** Whether the user has verified their phone number */\n  phone_number_verified: boolean\n}\n\nexport default function Passage(\n  config: OAuthUserConfig<PassageProfile>\n): OAuthConfig<PassageProfile> {\n  config.issuer = config.issuer?.replace(/\\/$/, \"\")\n  return {\n    id: \"passage\",\n    name: \"Passage\",\n    type: \"oauth\",\n    wellKnown: `${config.issuer}/.well-known/openid-configuration`,\n    authorization: { params: { scope: \"openid email\" } },\n    client: { token_endpoint_auth_method: \"client_secret_basic\" },\n    checks: [\"pkce\", \"state\"],\n    profile(profile) {\n      return {\n        id: profile.sub,\n        name: null,\n        email: profile.email,\n        image: null,\n      }\n    },\n    style: {\n      logo: \"/passage.svg\",\n      logoDark: \"/passage.svg\",\n      bg: \"#fff\",\n      bgDark: \"#fff\",\n      text: \"#000\",\n      textDark: \"#000\",\n    },\n    options: config,\n  }\n}\n"
        }
    ]
}
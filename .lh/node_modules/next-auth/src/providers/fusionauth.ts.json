{
    "sourceFile": "node_modules/next-auth/src/providers/fusionauth.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892934967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { OAuthConfig, OAuthUserConfig } from \"./oauth\"\n\n/** This is the default openid signature returned from FusionAuth\n * it can be customized using [lambda functions](https://fusionauth.io/docs/v1/tech/lambdas)\n */\nexport interface FusionAuthProfile extends Record<string, any> {\n  aud: string\n  exp: number\n  iat: number\n  iss: string\n  sub: string\n  jti: string\n  authenticationType: string\n  email: string\n  email_verified: boolean\n  preferred_username: string\n  at_hash: string\n  c_hash: string\n  scope: string\n  sid: string\n}\n\nexport default function FusionAuth<P extends FusionAuthProfile>(\n  // tenantId only needed if there is more than one tenant configured on the server\n  options: OAuthUserConfig<P> & { tenantId?: string }\n): OAuthConfig<P> {\n  return {\n    id: \"fusionauth\",\n    name: \"FusionAuth\",\n    type: \"oauth\",\n    wellKnown: options?.tenantId\n      ? `${options.issuer}/.well-known/openid-configuration?tenantId=${options.tenantId}`\n      : `${options.issuer}/.well-known/openid-configuration`,\n    authorization: {\n      params: {\n        scope: \"openid offline_access\",\n        ...(options?.tenantId && { tenantId: options.tenantId }),\n      },\n    },\n    checks: [\"pkce\", \"state\"],\n    profile(profile) {\n      return {\n        id: profile.sub,\n        email: profile.email,\n        name: profile?.preferred_username,\n      }\n    },\n    options,\n  }\n}\n"
        }
    ]
}
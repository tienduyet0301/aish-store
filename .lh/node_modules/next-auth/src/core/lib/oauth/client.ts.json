{
    "sourceFile": "node_modules/next-auth/src/core/lib/oauth/client.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892933229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Issuer, custom } from \"openid-client\"\nimport type { Client } from \"openid-client\"\nimport type { InternalOptions } from \"../../types\"\n\n/**\n * NOTE: We can add auto discovery of the provider's endpoint\n * that requires only one endpoint to be specified by the user.\n * Check out `Issuer.discover`\n *\n * Client supporting OAuth 2.x and OIDC\n */\nexport async function openidClient(\n  options: InternalOptions<\"oauth\">\n): Promise<Client> {\n  const provider = options.provider\n\n  if (provider.httpOptions) custom.setHttpOptionsDefaults(provider.httpOptions)\n\n  let issuer: Issuer\n  if (provider.wellKnown) {\n    issuer = await Issuer.discover(provider.wellKnown)\n  } else {\n    issuer = new Issuer({\n      issuer: provider.issuer as string,\n      authorization_endpoint: provider.authorization?.url,\n      token_endpoint: provider.token?.url,\n      userinfo_endpoint: provider.userinfo?.url,\n      jwks_uri: provider.jwks_endpoint,\n    })\n  }\n\n  const client = new issuer.Client(\n    {\n      client_id: provider.clientId as string,\n      client_secret: provider.clientSecret as string,\n      redirect_uris: [provider.callbackUrl],\n      ...provider.client,\n    },\n    provider.jwks\n  )\n\n  // allow a 10 second skew\n  // See https://github.com/nextauthjs/next-auth/issues/3032\n  // and https://github.com/nextauthjs/next-auth/issues/3067\n  client[custom.clock_tolerance] = 10\n\n  return client\n}\n"
        }
    ]
}
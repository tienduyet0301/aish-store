{
    "sourceFile": "node_modules/next-auth/src/core/lib/callback-url.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892932839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { InternalOptions } from \"../types\"\n\ninterface CreateCallbackUrlParams {\n  options: InternalOptions\n  /** Try reading value from request body (POST) then from query param (GET) */\n  paramValue?: string\n  cookieValue?: string\n}\n\n/**\n * Get callback URL based on query param / cookie + validation,\n * and add it to `req.options.callbackUrl`.\n */\nexport async function createCallbackUrl({\n  options,\n  paramValue,\n  cookieValue,\n}: CreateCallbackUrlParams) {\n  const { url, callbacks } = options\n\n  let callbackUrl = url.origin\n\n  if (paramValue) {\n    // If callbackUrl form field or query parameter is passed try to use it if allowed\n    callbackUrl = await callbacks.redirect({\n      url: paramValue,\n      baseUrl: url.origin,\n    })\n  } else if (cookieValue) {\n    // If no callbackUrl specified, try using the value from the cookie if allowed\n    callbackUrl = await callbacks.redirect({\n      url: cookieValue,\n      baseUrl: url.origin,\n    })\n  }\n\n  return {\n    callbackUrl,\n    // Save callback URL in a cookie so that it can be used for subsequent requests in signin/signout/callback flow\n    callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined,\n  }\n}\n"
        }
    ]
}
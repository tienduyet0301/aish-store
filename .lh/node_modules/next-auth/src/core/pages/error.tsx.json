{
    "sourceFile": "node_modules/next-auth/src/core/pages/error.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892933349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Theme } from \"../..\"\nimport { InternalUrl } from \"../../utils/parse-url\"\n\n/**\n * The following errors are passed as error query parameters to the default or overridden error page.\n *\n * [Documentation](https://next-auth.js.org/configuration/pages#error-page) */\nexport type ErrorType =\n  | \"default\"\n  | \"configuration\"\n  | \"accessdenied\"\n  | \"verification\"\n\nexport interface ErrorProps {\n  url?: InternalUrl\n  theme?: Theme\n  error?: ErrorType\n}\n\ninterface ErrorView {\n  status: number\n  heading: string\n  message: JSX.Element\n  signin?: JSX.Element\n}\n\n/** Renders an error page. */\nexport default function ErrorPage(props: ErrorProps) {\n  const { url, error = \"default\", theme } = props\n  const signinPageUrl = `${url}/signin`\n\n  const errors: Record<ErrorType, ErrorView> = {\n    default: {\n      status: 200,\n      heading: \"Error\",\n      message: (\n        <p>\n          <a className=\"site\" href={url?.origin}>\n            {url?.host}\n          </a>\n        </p>\n      ),\n    },\n    configuration: {\n      status: 500,\n      heading: \"Server error\",\n      message: (\n        <div>\n          <p>There is a problem with the server configuration.</p>\n          <p>Check the server logs for more information.</p>\n        </div>\n      ),\n    },\n    accessdenied: {\n      status: 403,\n      heading: \"Access Denied\",\n      message: (\n        <div>\n          <p>You do not have permission to sign in.</p>\n          <p>\n            <a className=\"button\" href={signinPageUrl}>\n              Sign in\n            </a>\n          </p>\n        </div>\n      ),\n    },\n    verification: {\n      status: 403,\n      heading: \"Unable to sign in\",\n      message: (\n        <div>\n          <p>The sign in link is no longer valid.</p>\n          <p>It may have been used already or it may have expired.</p>\n        </div>\n      ),\n      signin: (\n        <a className=\"button\" href={signinPageUrl}>\n          Sign in\n        </a>\n      ),\n    },\n  }\n\n  const { status, heading, message, signin } =\n    errors[error.toLowerCase()] ?? errors.default\n\n  return {\n    status,\n    html: (\n      <div className=\"error\">\n        {theme?.brandColor && (\n          <style\n            dangerouslySetInnerHTML={{\n              __html: `\n        :root {\n          --brand-color: ${theme?.brandColor}\n        }\n      `,\n            }}\n          />\n        )}\n        <div className=\"card\">\n          {theme?.logo && <img src={theme.logo} alt=\"Logo\" className=\"logo\" />}\n          <h1>{heading}</h1>\n          <div className=\"message\">{message}</div>\n          {signin}\n        </div>\n      </div>\n    ),\n  }\n}\n"
        }
    ]
}
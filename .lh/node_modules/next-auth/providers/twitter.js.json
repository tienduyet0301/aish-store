{
    "sourceFile": "node_modules/next-auth/providers/twitter.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892929999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TwitterLegacy = TwitterLegacy;\nexports.default = Twitter;\nfunction TwitterLegacy(options) {\n  return {\n    id: \"twitter\",\n    name: \"Twitter (Legacy)\",\n    type: \"oauth\",\n    version: \"1.0A\",\n    authorization: \"https://api.twitter.com/oauth/authenticate\",\n    accessTokenUrl: \"https://api.twitter.com/oauth/access_token\",\n    requestTokenUrl: \"https://api.twitter.com/oauth/request_token\",\n    profileUrl: \"https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true\",\n    profile(profile) {\n      return {\n        id: profile.id_str,\n        name: profile.name,\n        email: profile.email,\n        image: profile.profile_image_url_https.replace(/_normal\\.(jpg|png|gif)$/, \".$1\")\n      };\n    },\n    style: {\n      logo: \"/twitter.svg\",\n      bg: \"#1da1f2\",\n      text: \"#fff\"\n    },\n    options\n  };\n}\nfunction Twitter(options) {\n  if (options.version === \"2.0\") {\n    return {\n      id: \"twitter\",\n      name: \"Twitter\",\n      version: \"2.0\",\n      type: \"oauth\",\n      authorization: {\n        url: \"https://twitter.com/i/oauth2/authorize\",\n        params: {\n          scope: \"users.read tweet.read offline.access\"\n        }\n      },\n      token: {\n        url: \"https://api.twitter.com/2/oauth2/token\",\n        async request({\n          client,\n          params,\n          checks,\n          provider\n        }) {\n          const response = await client.oauthCallback(provider.callbackUrl, params, checks, {\n            exchangeBody: {\n              client_id: options.clientId\n            }\n          });\n          return {\n            tokens: response\n          };\n        }\n      },\n      userinfo: {\n        url: \"https://api.twitter.com/2/users/me\",\n        params: {\n          \"user.fields\": \"profile_image_url\"\n        }\n      },\n      profile({\n        data\n      }) {\n        return {\n          id: data.id,\n          name: data.name,\n          email: null,\n          image: data.profile_image_url\n        };\n      },\n      checks: [\"pkce\", \"state\"],\n      style: {\n        logo: \"/twitter.svg\",\n        bg: \"#1da1f2\",\n        text: \"#fff\"\n      },\n      options\n    };\n  }\n  return TwitterLegacy(options);\n}"
        }
    ]
}
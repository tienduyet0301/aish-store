{
    "sourceFile": "node_modules/next-auth/providers/email.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892925246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Email;\nvar _nodemailer = require(\"nodemailer\");\nfunction Email(options) {\n  return {\n    id: \"email\",\n    type: \"email\",\n    name: \"Email\",\n    server: {\n      host: \"localhost\",\n      port: 25,\n      auth: {\n        user: \"\",\n        pass: \"\"\n      }\n    },\n    from: \"NextAuth <no-reply@example.com>\",\n    maxAge: 24 * 60 * 60,\n    async sendVerificationRequest(params) {\n      const {\n        identifier,\n        url,\n        provider,\n        theme\n      } = params;\n      const {\n        host\n      } = new URL(url);\n      const transport = (0, _nodemailer.createTransport)(provider.server);\n      const result = await transport.sendMail({\n        to: identifier,\n        from: provider.from,\n        subject: `Sign in to ${host}`,\n        text: text({\n          url,\n          host\n        }),\n        html: html({\n          url,\n          host,\n          theme\n        })\n      });\n      const failed = result.rejected.concat(result.pending).filter(Boolean);\n      if (failed.length) {\n        throw new Error(`Email (${failed.join(\", \")}) could not be sent`);\n      }\n    },\n    options\n  };\n}\nfunction html(params) {\n  const {\n    url,\n    host,\n    theme\n  } = params;\n  const escapedHost = host.replace(/\\./g, \"&#8203;.\");\n  const brandColor = theme.brandColor || \"#346df1\";\n  const buttonText = theme.buttonText || \"#fff\";\n  const color = {\n    background: \"#f9f9f9\",\n    text: \"#444\",\n    mainBackground: \"#fff\",\n    buttonBackground: brandColor,\n    buttonBorder: brandColor,\n    buttonText\n  };\n  return `\n<body style=\"background: ${color.background};\">\n  <table width=\"100%\" border=\"0\" cellspacing=\"20\" cellpadding=\"0\"\n    style=\"background: ${color.mainBackground}; max-width: 600px; margin: auto; border-radius: 10px;\">\n    <tr>\n      <td align=\"center\"\n        style=\"padding: 10px 0px; font-size: 22px; font-family: Helvetica, Arial, sans-serif; color: ${color.text};\">\n        Sign in to <strong>${escapedHost}</strong>\n      </td>\n    </tr>\n    <tr>\n      <td align=\"center\" style=\"padding: 20px 0;\">\n        <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n          <tr>\n            <td align=\"center\" style=\"border-radius: 5px;\" bgcolor=\"${color.buttonBackground}\"><a href=\"${url}\"\n                target=\"_blank\"\n                style=\"font-size: 18px; font-family: Helvetica, Arial, sans-serif; color: ${color.buttonText}; text-decoration: none; border-radius: 5px; padding: 10px 20px; border: 1px solid ${color.buttonBorder}; display: inline-block; font-weight: bold;\">Sign\n                in</a></td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n    <tr>\n      <td align=\"center\"\n        style=\"padding: 0px 0px 10px 0px; font-size: 16px; line-height: 22px; font-family: Helvetica, Arial, sans-serif; color: ${color.text};\">\n        If you did not request this email you can safely ignore it.\n      </td>\n    </tr>\n  </table>\n</body>\n`;\n}\nfunction text({\n  url,\n  host\n}) {\n  return `Sign in to ${host}\\n${url}\\n\\n`;\n}"
        }
    ]
}
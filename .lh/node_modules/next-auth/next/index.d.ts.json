{
    "sourceFile": "node_modules/next-auth/next/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892923070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { GetServerSidePropsContext, NextApiRequest, NextApiResponse } from \"next\";\nimport { type NextRequest } from \"next/server\";\nimport type { AuthOptions, Session } from \"..\";\nimport type { CallbacksOptions, Awaitable } from \"../core/types\";\ninterface RouteHandlerContext {\n    params: Awaitable<{\n        nextauth: string[];\n    }>;\n}\ndeclare function NextAuth(options: AuthOptions): any;\ndeclare function NextAuth(req: NextApiRequest, res: NextApiResponse, options: AuthOptions): any;\ndeclare function NextAuth(req: NextRequest, res: RouteHandlerContext, options: AuthOptions): any;\nexport default NextAuth;\ndeclare type GetServerSessionOptions = Partial<Omit<AuthOptions, \"callbacks\">> & {\n    callbacks?: Omit<AuthOptions[\"callbacks\"], \"session\"> & {\n        session?: (...args: Parameters<CallbacksOptions[\"session\"]>) => any;\n    };\n};\ndeclare type GetServerSessionParams<O extends GetServerSessionOptions> = [GetServerSidePropsContext[\"req\"], GetServerSidePropsContext[\"res\"], O] | [NextApiRequest, NextApiResponse, O] | [O] | [];\nexport declare function getServerSession<O extends GetServerSessionOptions, R = O[\"callbacks\"] extends {\n    session: (...args: any[]) => infer U;\n} ? U : Session>(...args: GetServerSessionParams<O>): Promise<R | null>;\n/** @deprecated renamed to `getServerSession` */\nexport declare function unstable_getServerSession<O extends GetServerSessionOptions, R = O[\"callbacks\"] extends {\n    session: (...args: any[]) => infer U;\n} ? U : Session>(...args: GetServerSessionParams<O>): Promise<R | null>;\ndeclare global {\n    namespace NodeJS {\n        interface ProcessEnv {\n            NEXTAUTH_URL?: string;\n            NEXTAUTH_SECRET?: string;\n            AUTH_SECRET?: string;\n            VERCEL?: \"1\";\n        }\n    }\n}\n//# sourceMappingURL=index.d.ts.map"
        }
    ]
}
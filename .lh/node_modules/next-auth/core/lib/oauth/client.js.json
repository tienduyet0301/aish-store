{
    "sourceFile": "node_modules/next-auth/core/lib/oauth/client.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892920153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.openidClient = openidClient;\nvar _openidClient = require(\"openid-client\");\nasync function openidClient(options) {\n  const provider = options.provider;\n  if (provider.httpOptions) _openidClient.custom.setHttpOptionsDefaults(provider.httpOptions);\n  let issuer;\n  if (provider.wellKnown) {\n    issuer = await _openidClient.Issuer.discover(provider.wellKnown);\n  } else {\n    var _provider$authorizati, _provider$token, _provider$userinfo;\n    issuer = new _openidClient.Issuer({\n      issuer: provider.issuer,\n      authorization_endpoint: (_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.url,\n      token_endpoint: (_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.url,\n      userinfo_endpoint: (_provider$userinfo = provider.userinfo) === null || _provider$userinfo === void 0 ? void 0 : _provider$userinfo.url,\n      jwks_uri: provider.jwks_endpoint\n    });\n  }\n  const client = new issuer.Client({\n    client_id: provider.clientId,\n    client_secret: provider.clientSecret,\n    redirect_uris: [provider.callbackUrl],\n    ...provider.client\n  }, provider.jwks);\n  client[_openidClient.custom.clock_tolerance] = 10;\n  return client;\n}"
        }
    ]
}
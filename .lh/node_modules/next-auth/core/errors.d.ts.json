{
    "sourceFile": "node_modules/next-auth/core/errors.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892918284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { EventCallbacks, InternalOptions, LoggerInstance } from \"..\";\n/**\n * Same as the default `Error`, but it is JSON serializable.\n * @source https://iaincollins.medium.com/error-handling-in-javascript-a6172ccdf9af\n */\nexport declare class UnknownError extends Error {\n    code: string;\n    constructor(error: Error | string);\n    toJSON(): {\n        name: string;\n        message: string;\n        stack: string | undefined;\n    };\n}\nexport declare class OAuthCallbackError extends UnknownError {\n    name: string;\n}\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an OAuth account that is not linked to it.\n */\nexport declare class AccountNotLinkedError extends UnknownError {\n    name: string;\n}\nexport declare class MissingAPIRoute extends UnknownError {\n    name: string;\n    code: string;\n}\nexport declare class MissingSecret extends UnknownError {\n    name: string;\n    code: string;\n}\nexport declare class MissingAuthorize extends UnknownError {\n    name: string;\n    code: string;\n}\nexport declare class MissingAdapter extends UnknownError {\n    name: string;\n    code: string;\n}\nexport declare class MissingAdapterMethods extends UnknownError {\n    name: string;\n    code: string;\n}\nexport declare class UnsupportedStrategy extends UnknownError {\n    name: string;\n    code: string;\n}\nexport declare class InvalidCallbackUrl extends UnknownError {\n    name: string;\n    code: string;\n}\nexport declare function upperSnake(s: string): string;\nexport declare function capitalize(s: string): string;\n/**\n * Wraps an object of methods and adds error handling.\n */\nexport declare function eventsErrorHandler(methods: Partial<EventCallbacks>, logger: LoggerInstance): Partial<EventCallbacks>;\n/** Handles adapter induced errors. */\nexport declare function adapterErrorHandler<TAdapter>(adapter: TAdapter | undefined, logger: LoggerInstance): InternalOptions[\"adapter\"] | undefined;\n//# sourceMappingURL=errors.d.ts.map"
        }
    ]
}
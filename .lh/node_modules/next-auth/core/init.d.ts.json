{
    "sourceFile": "node_modules/next-auth/core/init.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892918494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { AuthOptions } from \"..\";\nimport * as cookie from \"./lib/cookie\";\nimport { RequestInternal } from \".\";\nimport type { InternalOptions } from \"./types\";\ninterface InitParams {\n    origin?: string;\n    authOptions: AuthOptions;\n    providerId?: string;\n    action: InternalOptions[\"action\"];\n    /** Callback URL value extracted from the incoming request. */\n    callbackUrl?: string;\n    /** CSRF token value extracted from the incoming request. From body if POST, from query if GET */\n    csrfToken?: string;\n    /** Is the incoming request a POST request? */\n    isPost: boolean;\n    cookies: RequestInternal[\"cookies\"];\n}\n/** Initialize all internal options and cookies. */\nexport declare function init({ authOptions, providerId, action, origin, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, isPost, }: InitParams): Promise<{\n    options: InternalOptions;\n    cookies: cookie.Cookie[];\n}>;\nexport {};\n//# sourceMappingURL=init.d.ts.map"
        }
    ]
}
{
    "sourceFile": "node_modules/@babel/runtime/helpers/dispose.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891752915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "function dispose_SuppressedError(r, e) {\n  return \"undefined\" != typeof SuppressedError ? dispose_SuppressedError = SuppressedError : (dispose_SuppressedError = function dispose_SuppressedError(r, e) {\n    this.suppressed = e, this.error = r, this.stack = Error().stack;\n  }, dispose_SuppressedError.prototype = Object.create(Error.prototype, {\n    constructor: {\n      value: dispose_SuppressedError,\n      writable: !0,\n      configurable: !0\n    }\n  })), new dispose_SuppressedError(r, e);\n}\nfunction _dispose(r, e, s) {\n  function next() {\n    for (; r.length > 0;) try {\n      var o = r.pop(),\n        p = o.d.call(o.v);\n      if (o.a) return Promise.resolve(p).then(next, err);\n    } catch (r) {\n      return err(r);\n    }\n    if (s) throw e;\n  }\n  function err(r) {\n    return e = s ? new dispose_SuppressedError(e, r) : r, s = !0, next();\n  }\n  return next();\n}\nmodule.exports = _dispose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"
        }
    ]
}
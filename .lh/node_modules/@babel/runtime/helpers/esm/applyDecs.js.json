{
    "sourceFile": "node_modules/@babel/runtime/helpers/esm/applyDecs.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891752977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import _typeof from \"./typeof.js\";\nimport setFunctionName from \"./setFunctionName.js\";\nimport toPropertyKey from \"./toPropertyKey.js\";\nfunction old_createMetadataMethodsForProperty(e, t, a, r) {\n  return {\n    getMetadata: function getMetadata(o) {\n      old_assertNotFinished(r, \"getMetadata\"), old_assertMetadataKey(o);\n      var i = e[o];\n      if (void 0 !== i) if (1 === t) {\n        var n = i[\"public\"];\n        if (void 0 !== n) return n[a];\n      } else if (2 === t) {\n        var l = i[\"private\"];\n        if (void 0 !== l) return l.get(a);\n      } else if (Object.hasOwnProperty.call(i, \"constructor\")) return i.constructor;\n    },\n    setMetadata: function setMetadata(o, i) {\n      old_assertNotFinished(r, \"setMetadata\"), old_assertMetadataKey(o);\n      var n = e[o];\n      if (void 0 === n && (n = e[o] = {}), 1 === t) {\n        var l = n[\"public\"];\n        void 0 === l && (l = n[\"public\"] = {}), l[a] = i;\n      } else if (2 === t) {\n        var s = n.priv;\n        void 0 === s && (s = n[\"private\"] = new Map()), s.set(a, i);\n      } else n.constructor = i;\n    }\n  };\n}\nfunction old_convertMetadataMapToFinal(e, t) {\n  var a = e[Symbol.metadata || Symbol[\"for\"](\"Symbol.metadata\")],\n    r = Object.getOwnPropertySymbols(t);\n  if (0 !== r.length) {\n    for (var o = 0; o < r.length; o++) {\n      var i = r[o],\n        n = t[i],\n        l = a ? a[i] : null,\n        s = n[\"public\"],\n        c = l ? l[\"public\"] : null;\n      s && c && Object.setPrototypeOf(s, c);\n      var d = n[\"private\"];\n      if (d) {\n        var u = Array.from(d.values()),\n          f = l ? l[\"private\"] : null;\n        f && (u = u.concat(f)), n[\"private\"] = u;\n      }\n      l && Object.setPrototypeOf(n, l);\n    }\n    a && Object.setPrototypeOf(t, a), e[Symbol.metadata || Symbol[\"for\"](\"Symbol.metadata\")] = t;\n  }\n}\nfunction old_createAddInitializerMethod(e, t) {\n  return function (a) {\n    old_assertNotFinished(t, \"addInitializer\"), old_assertCallable(a, \"An initializer\"), e.push(a);\n  };\n}\nfunction old_memberDec(e, t, a, r, o, i, n, l, s) {\n  var c;\n  switch (i) {\n    case 1:\n      c = \"accessor\";\n      break;\n    case 2:\n      c = \"method\";\n      break;\n    case 3:\n      c = \"getter\";\n      break;\n    case 4:\n      c = \"setter\";\n      break;\n    default:\n      c = \"field\";\n  }\n  var d,\n    u,\n    f = {\n      kind: c,\n      name: l ? \"#\" + t : toPropertyKey(t),\n      isStatic: n,\n      isPrivate: l\n    },\n    p = {\n      v: !1\n    };\n  if (0 !== i && (f.addInitializer = old_createAddInitializerMethod(o, p)), l) {\n    d = 2, u = Symbol(t);\n    var v = {};\n    0 === i ? (v.get = a.get, v.set = a.set) : 2 === i ? v.get = function () {\n      return a.value;\n    } : (1 !== i && 3 !== i || (v.get = function () {\n      return a.get.call(this);\n    }), 1 !== i && 4 !== i || (v.set = function (e) {\n      a.set.call(this, e);\n    })), f.access = v;\n  } else d = 1, u = t;\n  try {\n    return e(s, Object.assign(f, old_createMetadataMethodsForProperty(r, d, u, p)));\n  } finally {\n    p.v = !0;\n  }\n}\nfunction old_assertNotFinished(e, t) {\n  if (e.v) throw Error(\"attempted to call \" + t + \" after decoration was finished\");\n}\nfunction old_assertMetadataKey(e) {\n  if (\"symbol\" != _typeof(e)) throw new TypeError(\"Metadata keys must be symbols, received: \" + e);\n}\nfunction old_assertCallable(e, t) {\n  if (\"function\" != typeof e) throw new TypeError(t + \" must be a function\");\n}\nfunction old_assertValidReturnValue(e, t) {\n  var a = _typeof(t);\n  if (1 === e) {\n    if (\"object\" !== a || null === t) throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n    void 0 !== t.get && old_assertCallable(t.get, \"accessor.get\"), void 0 !== t.set && old_assertCallable(t.set, \"accessor.set\"), void 0 !== t.init && old_assertCallable(t.init, \"accessor.init\"), void 0 !== t.initializer && old_assertCallable(t.initializer, \"accessor.initializer\");\n  } else if (\"function\" !== a) throw new TypeError((0 === e ? \"field\" : 10 === e ? \"class\" : \"method\") + \" decorators must return a function or void 0\");\n}\nfunction old_getInit(e) {\n  var t;\n  return null == (t = e.init) && (t = e.initializer) && void 0 !== console && console.warn(\".initializer has been renamed to .init as of March 2022\"), t;\n}\nfunction old_applyMemberDec(e, t, a, r, o, i, n, l, s) {\n  var c,\n    d,\n    u,\n    f,\n    p,\n    v,\n    y,\n    h = a[0];\n  if (n ? (0 === o || 1 === o ? (c = {\n    get: a[3],\n    set: a[4]\n  }, u = \"get\") : 3 === o ? (c = {\n    get: a[3]\n  }, u = \"get\") : 4 === o ? (c = {\n    set: a[3]\n  }, u = \"set\") : c = {\n    value: a[3]\n  }, 0 !== o && (1 === o && setFunctionName(a[4], \"#\" + r, \"set\"), setFunctionName(a[3], \"#\" + r, u))) : 0 !== o && (c = Object.getOwnPropertyDescriptor(t, r)), 1 === o ? f = {\n    get: c.get,\n    set: c.set\n  } : 2 === o ? f = c.value : 3 === o ? f = c.get : 4 === o && (f = c.set), \"function\" == typeof h) void 0 !== (p = old_memberDec(h, r, c, l, s, o, i, n, f)) && (old_assertValidReturnValue(o, p), 0 === o ? d = p : 1 === o ? (d = old_getInit(p), v = p.get || f.get, y = p.set || f.set, f = {\n    get: v,\n    set: y\n  }) : f = p);else for (var m = h.length - 1; m >= 0; m--) {\n    var b;\n    void 0 !== (p = old_memberDec(h[m], r, c, l, s, o, i, n, f)) && (old_assertValidReturnValue(o, p), 0 === o ? b = p : 1 === o ? (b = old_getInit(p), v = p.get || f.get, y = p.set || f.set, f = {\n      get: v,\n      set: y\n    }) : f = p, void 0 !== b && (void 0 === d ? d = b : \"function\" == typeof d ? d = [d, b] : d.push(b)));\n  }\n  if (0 === o || 1 === o) {\n    if (void 0 === d) d = function d(e, t) {\n      return t;\n    };else if (\"function\" != typeof d) {\n      var g = d;\n      d = function d(e, t) {\n        for (var a = t, r = 0; r < g.length; r++) a = g[r].call(e, a);\n        return a;\n      };\n    } else {\n      var _ = d;\n      d = function d(e, t) {\n        return _.call(e, t);\n      };\n    }\n    e.push(d);\n  }\n  0 !== o && (1 === o ? (c.get = f.get, c.set = f.set) : 2 === o ? c.value = f : 3 === o ? c.get = f : 4 === o && (c.set = f), n ? 1 === o ? (e.push(function (e, t) {\n    return f.get.call(e, t);\n  }), e.push(function (e, t) {\n    return f.set.call(e, t);\n  })) : 2 === o ? e.push(f) : e.push(function (e, t) {\n    return f.call(e, t);\n  }) : Object.defineProperty(t, r, c));\n}\nfunction old_applyMemberDecs(e, t, a, r, o) {\n  for (var i, n, l = new Map(), s = new Map(), c = 0; c < o.length; c++) {\n    var d = o[c];\n    if (Array.isArray(d)) {\n      var u,\n        f,\n        p,\n        v = d[1],\n        y = d[2],\n        h = d.length > 3,\n        m = v >= 5;\n      if (m ? (u = t, f = r, 0 != (v -= 5) && (p = n = n || [])) : (u = t.prototype, f = a, 0 !== v && (p = i = i || [])), 0 !== v && !h) {\n        var b = m ? s : l,\n          g = b.get(y) || 0;\n        if (!0 === g || 3 === g && 4 !== v || 4 === g && 3 !== v) throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + y);\n        !g && v > 2 ? b.set(y, v) : b.set(y, !0);\n      }\n      old_applyMemberDec(e, u, d, y, v, m, h, f, p);\n    }\n  }\n  old_pushInitializers(e, i), old_pushInitializers(e, n);\n}\nfunction old_pushInitializers(e, t) {\n  t && e.push(function (e) {\n    for (var a = 0; a < t.length; a++) t[a].call(e);\n    return e;\n  });\n}\nfunction old_applyClassDecs(e, t, a, r) {\n  if (r.length > 0) {\n    for (var o = [], i = t, n = t.name, l = r.length - 1; l >= 0; l--) {\n      var s = {\n        v: !1\n      };\n      try {\n        var c = Object.assign({\n            kind: \"class\",\n            name: n,\n            addInitializer: old_createAddInitializerMethod(o, s)\n          }, old_createMetadataMethodsForProperty(a, 0, n, s)),\n          d = r[l](i, c);\n      } finally {\n        s.v = !0;\n      }\n      void 0 !== d && (old_assertValidReturnValue(10, d), i = d);\n    }\n    e.push(i, function () {\n      for (var e = 0; e < o.length; e++) o[e].call(i);\n    });\n  }\n}\nfunction applyDecs(e, t, a) {\n  var r = [],\n    o = {},\n    i = {};\n  return old_applyMemberDecs(r, e, i, o, t), old_convertMetadataMapToFinal(e.prototype, i), old_applyClassDecs(r, e, o, a), old_convertMetadataMapToFinal(e, o), r;\n}\nexport { applyDecs as default };"
        }
    ]
}
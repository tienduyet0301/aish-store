{
    "sourceFile": "node_modules/is-weakset/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892352868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar debug = require('object-inspect');\nvar forEach = require('for-each');\n\nvar isWeakSet = require('..');\n\ntest('non-collections', function (t) {\n\tforEach([\n\t\tnull,\n\t\tundefined,\n\t\ttrue,\n\t\tfalse,\n\t\t42,\n\t\t0,\n\t\t-0,\n\t\tNaN,\n\t\tInfinity,\n\t\t'',\n\t\t'foo',\n\t\t/a/g,\n\t\t[],\n\t\t{},\n\t\tfunction () {}\n\t], function (nonCollection) {\n\t\tt.equal(isWeakSet(nonCollection), false, debug(nonCollection) + ' is not a WeakSet');\n\t});\n\n\tt.end();\n});\n\ntest('Maps', { skip: typeof Map !== 'function' }, function (t) {\n\tvar m = new Map();\n\tt.equal(isWeakSet(m), false, debug(m) + ' is not a WeakSet');\n\n\tt.end();\n});\n\ntest('Sets', { skip: typeof Set !== 'function' }, function (t) {\n\tvar s = new Set();\n\tt.equal(isWeakSet(s), false, debug(s) + ' is not a WeakSet');\n\n\tt.end();\n});\n\ntest('WeakMaps', { skip: typeof WeakMap !== 'function' }, function (t) {\n\tvar wm = new WeakMap();\n\tt.equal(isWeakSet(wm), false, debug(wm) + ' is not a WeakSet');\n\n\tt.end();\n});\n\ntest('WeakSets', { skip: typeof WeakSet !== 'function' }, function (t) {\n\tvar ws = new WeakSet();\n\tt.equal(isWeakSet(ws), true, debug(ws) + ' is a WeakSet');\n\n\tt.end();\n});\n"
        }
    ]
}
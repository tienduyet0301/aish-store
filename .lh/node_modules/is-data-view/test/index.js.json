{
    "sourceFile": "node_modules/is-data-view/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892332939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar isDataView = require('../');\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar generators = require('make-generator-function')();\nvar arrowFns = require('make-arrow-function').list();\nvar forEach = require('for-each');\nvar v = require('es-value-fixtures');\nvar inspect = require('object-inspect');\nvar availableTypedArrays = require('available-typed-arrays')();\n\ntest('not DataViews', function (t) {\n\tforEach([].concat(\n\t\t// @ts-expect-error TS sucks at [].concat\n\t\tv.primitives,\n\t\tv.objects,\n\t\tfunction () {},\n\t\tgenerators,\n\t\tarrowFns,\n\t\t[]\n\t), /** @type {(nonDV: unknown) => void} */ function (nonDV) {\n\t\tt.equal(\n\t\t\tisDataView(nonDV),\n\t\t\tfalse,\n\t\t\tinspect(nonDV) + ' is not a DataView'\n\t\t);\n\t});\n\n\tforEach(availableTypedArrays, function (typedArray) {\n\t\tvar TA = global[typedArray];\n\t\tvar ta = new TA(8);\n\t\tt.equal(isDataView(ta), false, inspect(ta) + ' is not a DataView');\n\t});\n\n\tt.end();\n});\n\ntest('@@toStringTag', { skip: !hasToStringTag }, function (t) {\n\tforEach(availableTypedArrays, function (typedArray) {\n\t\t// @ts-expect-error\n\t\tvar fakeTypedArray = [];\n\t\t// @ts-expect-error\n\t\tfakeTypedArray[Symbol.toStringTag] = typedArray;\n\t\t// @ts-expect-error\n\t\tt.notOk(isDataView(fakeTypedArray), 'faked ' + typedArray + ' is not typed array');\n\t});\n\n\tt.end();\n});\n\ntest('Data Views', { skip: typeof DataView !== 'function' }, function (t) {\n\tvar ab = new ArrayBuffer(1);\n\tvar dv = new DataView(ab);\n\n\tt.equal(isDataView(dv), true, inspect(dv) + ' is a DataView');\n\n\tt.end();\n});\n"
        }
    ]
}
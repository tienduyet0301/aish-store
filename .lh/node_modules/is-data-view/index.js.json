{
    "sourceFile": "node_modules/is-data-view/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892332565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $ArrayBuffer = GetIntrinsic('%ArrayBuffer%');\nvar $DataView = GetIntrinsic('%DataView%', true);\n\nvar callBound = require('call-bound');\n\n// node <= 0.10, < 0.11.4 has a nonconfigurable own property instead of a prototype getter\nvar $dataViewBuffer = callBound('DataView.prototype.buffer', true);\n\nvar isTypedArray = require('is-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isDataView(x) {\n\tif (!x || typeof x !== 'object' || !$DataView || isTypedArray(x)) {\n\t\treturn false;\n\t}\n\n\tif ($dataViewBuffer) {\n\t\ttry {\n\t\t\t$dataViewBuffer(x);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (\n\t\t('getInt8' in x)\n\t\t\t&& typeof x.getInt8 === 'function'\n\t\t\t&& x.getInt8 === new $DataView(new $ArrayBuffer(1)).getInt8\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n"
        }
    ]
}
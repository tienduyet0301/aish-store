{
    "sourceFile": "node_modules/argparse/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892017531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "argparse\n========\n\n[![Build Status](https://secure.travis-ci.org/nodeca/argparse.svg?branch=master)](http://travis-ci.org/nodeca/argparse)\n[![NPM version](https://img.shields.io/npm/v/argparse.svg)](https://www.npmjs.org/package/argparse)\n\nCLI arguments parser for node.js, with [sub-commands](https://docs.python.org/3.9/library/argparse.html#sub-commands) support. Port of python's [argparse](http://docs.python.org/dev/library/argparse.html) (version [3.9.0](https://github.com/python/cpython/blob/v3.9.0rc1/Lib/argparse.py)).\n\n**Difference with original.**\n\n- JS has no keyword arguments support.\n  -  Pass options instead: `new ArgumentParser({ description: 'example', add_help: true })`.\n- JS has no python's types `int`, `float`, ...\n  - Use string-typed names: `.add_argument('-b', { type: 'int', help: 'help' })`.\n- `%r` format specifier uses `require('util').inspect()`.\n\nMore details in [doc](./doc).\n\n\nExample\n-------\n\n`test.js` file:\n\n```javascript\n#!/usr/bin/env node\n'use strict';\n\nconst { ArgumentParser } = require('argparse');\nconst { version } = require('./package.json');\n\nconst parser = new ArgumentParser({\n  description: 'Argparse example'\n});\n\nparser.add_argument('-v', '--version', { action: 'version', version });\nparser.add_argument('-f', '--foo', { help: 'foo bar' });\nparser.add_argument('-b', '--bar', { help: 'bar foo' });\nparser.add_argument('--baz', { help: 'baz bar' });\n\nconsole.dir(parser.parse_args());\n```\n\nDisplay help:\n\n```\n$ ./test.js -h\nusage: test.js [-h] [-v] [-f FOO] [-b BAR] [--baz BAZ]\n\nArgparse example\n\noptional arguments:\n  -h, --help         show this help message and exit\n  -v, --version      show program's version number and exit\n  -f FOO, --foo FOO  foo bar\n  -b BAR, --bar BAR  bar foo\n  --baz BAZ          baz bar\n```\n\nParse arguments:\n\n```\n$ ./test.js -f=3 --bar=4 --baz 5\n{ foo: '3', bar: '4', baz: '5' }\n```\n\n\nAPI docs\n--------\n\nSince this is a port with minimal divergence, there's no separate documentation.\nUse original one instead, with notes about difference.\n\n1. [Original doc](https://docs.python.org/3.9/library/argparse.html).\n2. [Original tutorial](https://docs.python.org/3.9/howto/argparse.html).\n3. [Difference with python](./doc).\n\n\nargparse for enterprise\n-----------------------\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of argparse and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-argparse?utm_source=npm-argparse&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n"
        }
    ]
}
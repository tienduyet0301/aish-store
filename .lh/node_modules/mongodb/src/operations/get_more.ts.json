{
    "sourceFile": "node_modules/mongodb/src/operations/get_more.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892635833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Long } from '../bson';\nimport { CursorResponse } from '../cmap/wire_protocol/responses';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { maxWireVersion, type MongoDBNamespace } from '../utils';\nimport { AbstractOperation, Aspect, defineAspects, type OperationOptions } from './operation';\n\n/** @internal */\nexport interface GetMoreOptions extends OperationOptions {\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * getMore only supports 'comment' in server versions 4.4 and above.\n   */\n  comment?: unknown;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** TODO(NODE-4413): Address bug with maxAwaitTimeMS not being passed in from the cursor correctly */\n  maxAwaitTimeMS?: number;\n}\n\n/**\n * GetMore command: https://www.mongodb.com/docs/manual/reference/command/getMore/\n * @internal\n */\nexport interface GetMoreCommand {\n  getMore: Long;\n  collection: string;\n  batchSize?: number;\n  maxTimeMS?: number;\n  /** Only supported on wire versions 10 or greater */\n  comment?: unknown;\n}\n\n/** @internal */\nexport class GetMoreOperation extends AbstractOperation {\n  cursorId: Long;\n  override options: GetMoreOptions;\n\n  constructor(ns: MongoDBNamespace, cursorId: Long, server: Server, options: GetMoreOptions) {\n    super(options);\n\n    this.options = options;\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  override get commandName() {\n    return 'getMore' as const;\n  }\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n  override async execute(\n    server: Server,\n    _session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<CursorResponse> {\n    if (server !== this.server) {\n      throw new MongoRuntimeError('Getmore must run on the same server operation began on');\n    }\n\n    if (this.cursorId == null || this.cursorId.isZero()) {\n      throw new MongoRuntimeError('Unable to iterate cursor with no id');\n    }\n\n    const collection = this.ns.collection;\n    if (collection == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      throw new MongoRuntimeError('A collection name must be determined before getMore');\n    }\n\n    const getMoreCmd: GetMoreCommand = {\n      getMore: this.cursorId,\n      collection\n    };\n\n    if (typeof this.options.batchSize === 'number') {\n      getMoreCmd.batchSize = Math.abs(this.options.batchSize);\n    }\n\n    if (typeof this.options.maxAwaitTimeMS === 'number') {\n      getMoreCmd.maxTimeMS = this.options.maxAwaitTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined && maxWireVersion(server) >= 9) {\n      getMoreCmd.comment = this.options.comment;\n    }\n\n    const commandOptions = {\n      returnFieldSelector: null,\n      documentsReturnedIn: 'nextBatch',\n      timeoutContext,\n      ...this.options\n    };\n\n    return await server.command(this.ns, getMoreCmd, commandOptions, CursorResponse);\n  }\n}\n\ndefineAspects(GetMoreOperation, [Aspect.READ_OPERATION, Aspect.MUST_SELECT_SAME_SERVER]);\n"
        }
    ]
}
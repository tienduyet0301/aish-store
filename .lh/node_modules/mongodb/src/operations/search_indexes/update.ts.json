{
    "sourceFile": "node_modules/mongodb/src/operations/search_indexes/update.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892636326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Document } from '../../bson';\nimport type { Collection } from '../../collection';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport { type TimeoutContext } from '../../timeout';\nimport { AbstractOperation } from '../operation';\n\n/** @internal */\nexport class UpdateSearchIndexOperation extends AbstractOperation<void> {\n  constructor(\n    private readonly collection: Collection,\n    private readonly name: string,\n    private readonly definition: Document\n  ) {\n    super();\n  }\n\n  override get commandName() {\n    return 'updateSearchIndex' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<void> {\n    const namespace = this.collection.fullNamespace;\n    const command = {\n      updateSearchIndex: namespace.collection,\n      name: this.name,\n      definition: this.definition\n    };\n\n    await server.command(namespace, command, { session, timeoutContext });\n    return;\n  }\n}\n"
        }
    ]
}
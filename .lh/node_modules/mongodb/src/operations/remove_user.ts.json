{
    "sourceFile": "node_modules/mongodb/src/operations/remove_user.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892636091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport type RemoveUserOptions = CommandOperationOptions;\n\n/** @internal */\nexport class RemoveUserOperation extends CommandOperation<boolean> {\n  override options: RemoveUserOptions;\n  username: string;\n\n  constructor(db: Db, username: string, options: RemoveUserOptions) {\n    super(db, options);\n    this.options = options;\n    this.username = username;\n  }\n\n  override get commandName() {\n    return 'dropUser' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<boolean> {\n    await super.executeCommand(server, session, { dropUser: this.username }, timeoutContext);\n    return true;\n  }\n}\n\ndefineAspects(RemoveUserOperation, [Aspect.WRITE_OPERATION]);\n"
        }
    ]
}
{
    "sourceFile": "node_modules/mongodb/src/cmap/auth/mongodb_oidc/token_cache.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892633711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { MongoDriverError } from '../../../error';\nimport type { IdPInfo, OIDCResponse } from '../mongodb_oidc';\n\nclass MongoOIDCError extends MongoDriverError {}\n\n/** @internal */\nexport class TokenCache {\n  private accessToken?: string;\n  private refreshToken?: string;\n  private idpInfo?: IdPInfo;\n  private expiresInSeconds?: number;\n\n  get hasAccessToken(): boolean {\n    return !!this.accessToken;\n  }\n\n  get hasRefreshToken(): boolean {\n    return !!this.refreshToken;\n  }\n\n  get hasIdpInfo(): boolean {\n    return !!this.idpInfo;\n  }\n\n  getAccessToken(): string {\n    if (!this.accessToken) {\n      throw new MongoOIDCError('Attempted to get an access token when none exists.');\n    }\n    return this.accessToken;\n  }\n\n  getRefreshToken(): string {\n    if (!this.refreshToken) {\n      throw new MongoOIDCError('Attempted to get a refresh token when none exists.');\n    }\n    return this.refreshToken;\n  }\n\n  getIdpInfo(): IdPInfo {\n    if (!this.idpInfo) {\n      throw new MongoOIDCError('Attempted to get IDP information when none exists.');\n    }\n    return this.idpInfo;\n  }\n\n  put(response: OIDCResponse, idpInfo?: IdPInfo) {\n    this.accessToken = response.accessToken;\n    this.refreshToken = response.refreshToken;\n    this.expiresInSeconds = response.expiresInSeconds;\n    if (idpInfo) {\n      this.idpInfo = idpInfo;\n    }\n  }\n\n  removeAccessToken() {\n    this.accessToken = undefined;\n  }\n\n  removeRefreshToken() {\n    this.refreshToken = undefined;\n  }\n}\n"
        }
    ]
}
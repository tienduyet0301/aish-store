{
    "sourceFile": "node_modules/mongodb/src/cmap/auth/mongodb_oidc/token_machine_workflow.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892633737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import * as fs from 'fs';\n\nimport { MongoAWSError } from '../../../error';\nimport { type AccessToken, MachineWorkflow } from './machine_workflow';\nimport { type TokenCache } from './token_cache';\n\n/** Error for when the token is missing in the environment. */\nconst TOKEN_MISSING_ERROR = 'OIDC_TOKEN_FILE must be set in the environment.';\n\n/**\n * Device workflow implementation for AWS.\n *\n * @internal\n */\nexport class TokenMachineWorkflow extends MachineWorkflow {\n  /**\n   * Instantiate the machine workflow.\n   */\n  constructor(cache: TokenCache) {\n    super(cache);\n  }\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(): Promise<AccessToken> {\n    const tokenFile = process.env.OIDC_TOKEN_FILE;\n    if (!tokenFile) {\n      throw new MongoAWSError(TOKEN_MISSING_ERROR);\n    }\n    const token = await fs.promises.readFile(tokenFile, 'utf8');\n    return { access_token: token };\n  }\n}\n"
        }
    ]
}
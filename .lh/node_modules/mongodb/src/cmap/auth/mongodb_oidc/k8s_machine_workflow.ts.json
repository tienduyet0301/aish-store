{
    "sourceFile": "node_modules/mongodb/src/cmap/auth/mongodb_oidc/k8s_machine_workflow.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892633617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { readFile } from 'fs/promises';\n\nimport { type AccessToken, MachineWorkflow } from './machine_workflow';\nimport { type TokenCache } from './token_cache';\n\n/** The fallback file name */\nconst FALLBACK_FILENAME = '/var/run/secrets/kubernetes.io/serviceaccount/token';\n\n/** The azure environment variable for the file name. */\nconst AZURE_FILENAME = 'AZURE_FEDERATED_TOKEN_FILE';\n\n/** The AWS environment variable for the file name. */\nconst AWS_FILENAME = 'AWS_WEB_IDENTITY_TOKEN_FILE';\n\nexport class K8SMachineWorkflow extends MachineWorkflow {\n  /**\n   * Instantiate the machine workflow.\n   */\n  constructor(cache: TokenCache) {\n    super(cache);\n  }\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(): Promise<AccessToken> {\n    let filename: string;\n    if (process.env[AZURE_FILENAME]) {\n      filename = process.env[AZURE_FILENAME];\n    } else if (process.env[AWS_FILENAME]) {\n      filename = process.env[AWS_FILENAME];\n    } else {\n      filename = FALLBACK_FILENAME;\n    }\n    const token = await readFile(filename, 'utf8');\n    return { access_token: token };\n  }\n}\n"
        }
    ]
}
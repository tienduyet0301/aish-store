{
    "sourceFile": "node_modules/mongodb/src/cmap/auth/mongodb_oidc/command_builders.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892633508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Binary, BSON, type Document } from '../../../bson';\nimport { type MongoCredentials } from '../mongo_credentials';\nimport { AuthMechanism } from '../providers';\n\n/** @internal */\nexport interface OIDCCommand {\n  saslStart?: number;\n  saslContinue?: number;\n  conversationId?: number;\n  mechanism?: string;\n  autoAuthorize?: number;\n  db?: string;\n  payload: Binary;\n}\n\n/**\n * Generate the finishing command document for authentication. Will be a\n * saslStart or saslContinue depending on the presence of a conversation id.\n */\nexport function finishCommandDocument(token: string, conversationId?: number): OIDCCommand {\n  if (conversationId != null) {\n    return {\n      saslContinue: 1,\n      conversationId: conversationId,\n      payload: new Binary(BSON.serialize({ jwt: token }))\n    };\n  }\n  // saslContinue requires a conversationId in the command to be valid so in this\n  // case the server allows \"step two\" to actually be a saslStart with the token\n  // as the jwt since the use of the cached value has no correlating conversating\n  // on the particular connection.\n  return {\n    saslStart: 1,\n    mechanism: AuthMechanism.MONGODB_OIDC,\n    payload: new Binary(BSON.serialize({ jwt: token }))\n  };\n}\n\n/**\n * Generate the saslStart command document.\n */\nexport function startCommandDocument(credentials: MongoCredentials): OIDCCommand {\n  const payload: Document = {};\n  if (credentials.username) {\n    payload.n = credentials.username;\n  }\n  return {\n    saslStart: 1,\n    autoAuthorize: 1,\n    mechanism: AuthMechanism.MONGODB_OIDC,\n    payload: new Binary(BSON.serialize(payload))\n  };\n}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/mongodb/src/index.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892635192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Admin } from './admin';\nimport { OrderedBulkOperation } from './bulk/ordered';\nimport { UnorderedBulkOperation } from './bulk/unordered';\nimport { ChangeStream } from './change_stream';\nimport { Collection } from './collection';\nimport { AbstractCursor } from './cursor/abstract_cursor';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { FindCursor } from './cursor/find_cursor';\nimport { ListCollectionsCursor } from './cursor/list_collections_cursor';\nimport { ListIndexesCursor } from './cursor/list_indexes_cursor';\nimport type { RunCommandCursor } from './cursor/run_command_cursor';\nimport { Db } from './db';\nimport { ExplainableCursor } from './explain';\nimport { GridFSBucket } from './gridfs';\nimport { GridFSBucketReadStream } from './gridfs/download';\nimport { GridFSBucketWriteStream } from './gridfs/upload';\nimport { MongoClient } from './mongo_client';\nimport { CancellationToken } from './mongo_types';\nimport { ClientSession } from './sessions';\n\n/** @public */\nexport { BSON } from './bson';\nexport {\n  Binary,\n  BSONRegExp,\n  BSONSymbol,\n  BSONType,\n  Code,\n  DBRef,\n  Decimal128,\n  Double,\n  Int32,\n  Long,\n  MaxKey,\n  MinKey,\n  ObjectId,\n  Timestamp,\n  UUID\n} from './bson';\nexport {\n  type AnyBulkWriteOperation,\n  type BulkWriteOptions,\n  MongoBulkWriteError\n} from './bulk/common';\nexport { ClientEncryption } from './client-side-encryption/client_encryption';\nexport { ChangeStreamCursor } from './cursor/change_stream_cursor';\nexport {\n  MongoAPIError,\n  MongoAWSError,\n  MongoAzureError,\n  MongoBatchReExecutionError,\n  MongoChangeStreamError,\n  MongoClientBulkWriteCursorError,\n  MongoClientBulkWriteError,\n  MongoClientBulkWriteExecutionError,\n  MongoCompatibilityError,\n  MongoCursorExhaustedError,\n  MongoCursorInUseError,\n  MongoDecompressionError,\n  MongoDriverError,\n  MongoError,\n  MongoExpiredSessionError,\n  MongoGCPError,\n  MongoGridFSChunkError,\n  MongoGridFSStreamError,\n  MongoInvalidArgumentError,\n  MongoKerberosError,\n  MongoMissingCredentialsError,\n  MongoMissingDependencyError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoNotConnectedError,\n  MongoOIDCError,\n  MongoOperationTimeoutError,\n  MongoParseError,\n  MongoRuntimeError,\n  MongoServerClosedError,\n  MongoServerError,\n  MongoServerSelectionError,\n  MongoStalePrimaryError,\n  MongoSystemError,\n  MongoTailableCursorError,\n  MongoTopologyClosedError,\n  MongoTransactionError,\n  MongoUnexpectedServerResponseError,\n  MongoWriteConcernError,\n  WriteConcernErrorResult\n} from './error';\nexport { configureExplicitResourceManagement } from './resource_management';\nexport {\n  AbstractCursor,\n  // Actual driver classes exported\n  Admin,\n  AggregationCursor,\n  CancellationToken,\n  ChangeStream,\n  ClientSession,\n  Collection,\n  Db,\n  ExplainableCursor,\n  FindCursor,\n  GridFSBucket,\n  GridFSBucketReadStream,\n  GridFSBucketWriteStream,\n  ListCollectionsCursor,\n  ListIndexesCursor,\n  MongoClient,\n  OrderedBulkOperation,\n  RunCommandCursor,\n  UnorderedBulkOperation\n};\n\n// enums\nexport { BatchType } from './bulk/common';\nexport { AutoEncryptionLoggerLevel } from './client-side-encryption/auto_encrypter';\nexport { GSSAPICanonicalizationValue } from './cmap/auth/gssapi';\nexport { AuthMechanism } from './cmap/auth/providers';\nexport { Compressor } from './cmap/wire_protocol/compression';\nexport { CURSOR_FLAGS, CursorTimeoutMode } from './cursor/abstract_cursor';\nexport { MongoErrorLabel } from './error';\nexport { ExplainVerbosity } from './explain';\nexport { ServerApiVersion } from './mongo_client';\nexport { MongoLoggableComponent, SeverityLevel } from './mongo_logger';\nexport { ReturnDocument } from './operations/find_and_modify';\nexport { ProfilingLevel } from './operations/set_profiling_level';\nexport { ReadConcernLevel } from './read_concern';\nexport { ReadPreferenceMode } from './read_preference';\nexport { ServerType, TopologyType } from './sdam/common';\n\n// Helper classes\nexport type { AWSCredentialProvider } from './cmap/auth/aws_temporary_credentials';\nexport type { AWSCredentials } from './deps';\nexport { ReadConcern } from './read_concern';\nexport { ReadPreference } from './read_preference';\nexport { WriteConcern } from './write_concern';\n// events\nexport {\n  CommandFailedEvent,\n  CommandStartedEvent,\n  CommandSucceededEvent\n} from './cmap/command_monitoring_events';\nexport {\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolMonitoringEvent,\n  ConnectionPoolReadyEvent,\n  ConnectionReadyEvent\n} from './cmap/connection_pool_events';\nexport {\n  ServerClosedEvent,\n  ServerDescriptionChangedEvent,\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent,\n  ServerOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent\n} from './sdam/events';\nexport {\n  ServerSelectionEvent,\n  ServerSelectionFailedEvent,\n  ServerSelectionStartedEvent,\n  ServerSelectionSucceededEvent,\n  WaitingForSuitableServerEvent\n} from './sdam/server_selection_events';\nexport { SrvPollingEvent } from './sdam/srv_polling';\n\n// type only exports below, these are removed from emitted JS\nexport type { AdminPrivate } from './admin';\nexport type { BSONElement, BSONSerializeOptions, Document } from './bson';\nexport type { deserialize, serialize } from './bson';\nexport type {\n  BulkResult,\n  BulkWriteOperationError,\n  BulkWriteResult,\n  DeleteManyModel,\n  DeleteOneModel,\n  InsertOneModel,\n  ReplaceOneModel,\n  UpdateManyModel,\n  UpdateOneModel,\n  WriteConcernError,\n  WriteError\n} from './bulk/common';\nexport type {\n  Batch,\n  BulkOperationBase,\n  BulkOperationPrivate,\n  FindOperators,\n  WriteConcernErrorData\n} from './bulk/common';\nexport type {\n  ChangeStreamCollModDocument,\n  ChangeStreamCreateDocument,\n  ChangeStreamCreateIndexDocument,\n  ChangeStreamDeleteDocument,\n  ChangeStreamDocument,\n  ChangeStreamDocumentCollectionUUID,\n  ChangeStreamDocumentCommon,\n  ChangeStreamDocumentKey,\n  ChangeStreamDocumentOperationDescription,\n  ChangeStreamDropDatabaseDocument,\n  ChangeStreamDropDocument,\n  ChangeStreamDropIndexDocument,\n  ChangeStreamEvents,\n  ChangeStreamInsertDocument,\n  ChangeStreamInvalidateDocument,\n  ChangeStreamNameSpace,\n  ChangeStreamOptions,\n  ChangeStreamRefineCollectionShardKeyDocument,\n  ChangeStreamRenameDocument,\n  ChangeStreamReplaceDocument,\n  ChangeStreamReshardCollectionDocument,\n  ChangeStreamShardCollectionDocument,\n  ChangeStreamSplitEvent,\n  ChangeStreamUpdateDocument,\n  OperationTime,\n  ResumeOptions,\n  ResumeToken,\n  UpdateDescription\n} from './change_stream';\nexport type { AutoEncrypter } from './client-side-encryption/auto_encrypter';\nexport type { AutoEncryptionOptions } from './client-side-encryption/auto_encrypter';\nexport type { AutoEncryptionExtraOptions } from './client-side-encryption/auto_encrypter';\nexport type {\n  AWSEncryptionKeyOptions,\n  AzureEncryptionKeyOptions,\n  ClientEncryptionCreateDataKeyProviderOptions,\n  ClientEncryptionEncryptOptions,\n  ClientEncryptionOptions,\n  ClientEncryptionRewrapManyDataKeyProviderOptions,\n  ClientEncryptionRewrapManyDataKeyResult,\n  DataKey,\n  GCPEncryptionKeyOptions,\n  KMIPEncryptionKeyOptions,\n  RangeOptions\n} from './client-side-encryption/client_encryption';\nexport {\n  MongoCryptAzureKMSRequestError,\n  MongoCryptCreateDataKeyError,\n  MongoCryptCreateEncryptedCollectionError,\n  MongoCryptError,\n  MongoCryptInvalidArgumentError,\n  MongoCryptKMSRequestNetworkTimeoutError\n} from './client-side-encryption/errors';\nexport type { MongocryptdManager } from './client-side-encryption/mongocryptd_manager';\nexport type {\n  AWSKMSProviderConfiguration,\n  AzureKMSProviderConfiguration,\n  ClientEncryptionDataKeyProvider,\n  CredentialProviders,\n  GCPKMSProviderConfiguration,\n  KMIPKMSProviderConfiguration,\n  KMSProviders,\n  LocalKMSProviderConfiguration\n} from './client-side-encryption/providers/index';\nexport type {\n  ClientEncryptionSocketOptions,\n  ClientEncryptionTlsOptions,\n  CSFLEKMSTlsOptions,\n  StateMachineExecutable\n} from './client-side-encryption/state_machine';\nexport type { AuthContext, AuthProvider } from './cmap/auth/auth_provider';\nexport type {\n  AuthMechanismProperties,\n  MongoCredentials,\n  MongoCredentialsOptions\n} from './cmap/auth/mongo_credentials';\nexport type {\n  IdPInfo,\n  IdPServerResponse,\n  OIDCCallbackFunction,\n  OIDCCallbackParams,\n  OIDCResponse\n} from './cmap/auth/mongodb_oidc';\nexport type { Workflow } from './cmap/auth/mongodb_oidc';\nexport type { TokenCache } from './cmap/auth/mongodb_oidc/token_cache';\nexport type {\n  MessageHeader,\n  OpCompressedRequest,\n  OpMsgOptions,\n  OpMsgRequest,\n  OpMsgResponse,\n  OpQueryOptions,\n  OpQueryRequest,\n  OpReply,\n  WriteProtocolMessageType\n} from './cmap/commands';\nexport type { HandshakeDocument } from './cmap/connect';\nexport type { LEGAL_TCP_SOCKET_OPTIONS, LEGAL_TLS_SOCKET_OPTIONS, Stream } from './cmap/connect';\nexport type {\n  CommandOptions,\n  Connection,\n  ConnectionEvents,\n  ConnectionOptions,\n  ProxyOptions\n} from './cmap/connection';\nexport type {\n  CloseOptions,\n  ConnectionPool,\n  ConnectionPoolEvents,\n  ConnectionPoolOptions,\n  PoolState,\n  WaitQueueMember,\n  WithConnectionCallback\n} from './cmap/connection_pool';\nexport type { ClientMetadata, ClientMetadataOptions } from './cmap/handshake/client_metadata';\nexport type { ConnectionPoolMetrics } from './cmap/metrics';\nexport type { StreamDescription, StreamDescriptionOptions } from './cmap/stream_description';\nexport type { CompressorName } from './cmap/wire_protocol/compression';\nexport type {\n  JSTypeOf,\n  OnDemandDocument,\n  OnDemandDocumentDeserializeOptions\n} from './cmap/wire_protocol/on_demand/document';\nexport type {\n  CursorResponse,\n  MongoDBResponse,\n  MongoDBResponseConstructor\n} from './cmap/wire_protocol/responses';\nexport type {\n  CollectionOptions,\n  CollectionPrivate,\n  CountDocumentsOptions,\n  ModifyResult\n} from './collection';\nexport type {\n  COMMAND_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY,\n  MONGO_CLIENT_EVENTS,\n  SERVER_CLOSED,\n  SERVER_DESCRIPTION_CHANGED,\n  SERVER_HEARTBEAT_FAILED,\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED,\n  SERVER_OPENING,\n  SERVER_SELECTION_FAILED,\n  SERVER_SELECTION_STARTED,\n  SERVER_SELECTION_SUCCEEDED,\n  TOPOLOGY_CLOSED,\n  TOPOLOGY_DESCRIPTION_CHANGED,\n  TOPOLOGY_OPENING,\n  WAITING_FOR_SUITABLE_SERVER\n} from './constants';\nexport type {\n  AbstractCursorEvents,\n  AbstractCursorOptions,\n  CursorFlag,\n  CursorStreamOptions\n} from './cursor/abstract_cursor';\nexport type {\n  CursorTimeoutContext,\n  InitialCursorResponse,\n  InternalAbstractCursorOptions\n} from './cursor/abstract_cursor';\nexport type { AggregationCursorOptions } from './cursor/aggregation_cursor';\nexport type { ChangeStreamCursorOptions } from './cursor/change_stream_cursor';\nexport type {\n  ListSearchIndexesCursor,\n  ListSearchIndexesOptions\n} from './cursor/list_search_indexes_cursor';\nexport type { RunCursorCommandOptions } from './cursor/run_command_cursor';\nexport type { DbOptions, DbPrivate } from './db';\nexport type { Encrypter, EncrypterOptions } from './encrypter';\nexport type { AnyError, ErrorDescription, MongoNetworkErrorOptions } from './error';\nexport type {\n  Explain,\n  ExplainCommandOptions,\n  ExplainOptions,\n  ExplainVerbosityLike\n} from './explain';\nexport type {\n  GridFSBucketReadStreamOptions,\n  GridFSBucketReadStreamOptionsWithRevision,\n  GridFSBucketReadStreamPrivate,\n  GridFSFile\n} from './gridfs/download';\nexport type { GridFSBucketEvents, GridFSBucketOptions, GridFSBucketPrivate } from './gridfs/index';\nexport type { GridFSBucketWriteStreamOptions, GridFSChunk } from './gridfs/upload';\nexport type {\n  Auth,\n  DriverInfo,\n  MongoClientEvents,\n  MongoClientOptions,\n  MongoClientPrivate,\n  MongoOptions,\n  PkFactory,\n  ServerApi,\n  SupportedNodeConnectionOptions,\n  SupportedSocketOptions,\n  SupportedTLSConnectionOptions,\n  SupportedTLSSocketOptions,\n  WithSessionCallback\n} from './mongo_client';\nexport { MongoClientAuthProviders } from './mongo_client_auth_providers';\nexport type {\n  Log,\n  LogComponentSeveritiesClientOptions,\n  LogConvertible,\n  Loggable,\n  LoggableCommandFailedEvent,\n  LoggableCommandSucceededEvent,\n  LoggableEvent,\n  LoggableServerHeartbeatFailedEvent,\n  LoggableServerHeartbeatStartedEvent,\n  LoggableServerHeartbeatSucceededEvent,\n  MongoDBLogWritable,\n  MongoLogger,\n  MongoLoggerEnvOptions,\n  MongoLoggerMongoClientOptions,\n  MongoLoggerOptions\n} from './mongo_logger';\nexport type {\n  Abortable,\n  CommonEvents,\n  EventsDescription,\n  GenericListener,\n  TypedEventEmitter\n} from './mongo_types';\nexport type {\n  AcceptedFields,\n  AddToSetOperators,\n  AlternativeType,\n  ArrayElement,\n  ArrayOperator,\n  BitwiseFilter,\n  BSONTypeAlias,\n  Condition,\n  EnhancedOmit,\n  Filter,\n  FilterOperations,\n  FilterOperators,\n  Flatten,\n  InferIdType,\n  IntegerType,\n  IsAny,\n  Join,\n  KeysOfAType,\n  KeysOfOtherType,\n  MatchKeysAndValues,\n  NestedPaths,\n  NestedPathsOfType,\n  NonObjectIdLikeDocument,\n  NotAcceptedFields,\n  NumericType,\n  OneOrMore,\n  OnlyFieldsOfType,\n  OptionalId,\n  OptionalUnlessRequiredId,\n  PropertyType,\n  PullAllOperator,\n  PullOperator,\n  PushOperator,\n  RegExpOrString,\n  RootFilterOperators,\n  SchemaMember,\n  SetFields,\n  StrictFilter,\n  StrictMatchKeysAndValues,\n  StrictUpdateFilter,\n  UpdateFilter,\n  WithId,\n  WithoutId\n} from './mongo_types';\nexport type {\n  AggregateOperation,\n  AggregateOptions,\n  DB_AGGREGATE_COLLECTION\n} from './operations/aggregate';\nexport type {\n  AnyClientBulkWriteModel,\n  ClientBulkWriteError,\n  ClientBulkWriteModel,\n  ClientBulkWriteOptions,\n  ClientBulkWriteResult,\n  ClientDeleteManyModel,\n  ClientDeleteOneModel,\n  ClientDeleteResult,\n  ClientInsertOneModel,\n  ClientInsertOneResult,\n  ClientReplaceOneModel,\n  ClientUpdateManyModel,\n  ClientUpdateOneModel,\n  ClientUpdateResult,\n  ClientWriteModel\n} from './operations/client_bulk_write/common';\nexport type {\n  CollationOptions,\n  CommandOperation,\n  CommandOperationOptions,\n  OperationParent\n} from './operations/command';\nexport type { CountOptions } from './operations/count';\nexport type {\n  ClusteredCollectionOptions,\n  CreateCollectionOptions,\n  TimeSeriesCollectionOptions\n} from './operations/create_collection';\nexport type { DeleteOptions, DeleteResult, DeleteStatement } from './operations/delete';\nexport type { DistinctOptions } from './operations/distinct';\nexport type { DropCollectionOptions, DropDatabaseOptions } from './operations/drop';\nexport type { EstimatedDocumentCountOptions } from './operations/estimated_document_count';\nexport type { FindOptions } from './operations/find';\nexport type {\n  FindOneAndDeleteOptions,\n  FindOneAndReplaceOptions,\n  FindOneAndUpdateOptions\n} from './operations/find_and_modify';\nexport type { IndexInformationOptions } from './operations/indexes';\nexport type {\n  CreateIndexesOptions,\n  DropIndexesOptions,\n  IndexDescription,\n  IndexDescriptionCompact,\n  IndexDescriptionInfo,\n  IndexDirection,\n  IndexSpecification,\n  ListIndexesOptions\n} from './operations/indexes';\nexport type { InsertManyResult, InsertOneOptions, InsertOneResult } from './operations/insert';\nexport type { CollectionInfo, ListCollectionsOptions } from './operations/list_collections';\nexport type { ListDatabasesOptions, ListDatabasesResult } from './operations/list_databases';\nexport type { AbstractOperation, Hint, OperationOptions } from './operations/operation';\nexport type { ProfilingLevelOptions } from './operations/profiling_level';\nexport type { RemoveUserOptions } from './operations/remove_user';\nexport type { RenameOptions } from './operations/rename';\nexport type { RunCommandOptions } from './operations/run_command';\nexport type { SearchIndexDescription } from './operations/search_indexes/create';\nexport type { SetProfilingLevelOptions } from './operations/set_profiling_level';\nexport type { DbStatsOptions } from './operations/stats';\nexport type {\n  ReplaceOptions,\n  UpdateOptions,\n  UpdateResult,\n  UpdateStatement\n} from './operations/update';\nexport type { ValidateCollectionOptions } from './operations/validate_collection';\nexport type { ReadConcernLike } from './read_concern';\nexport type {\n  HedgeOptions,\n  ReadPreferenceFromOptions,\n  ReadPreferenceLike,\n  ReadPreferenceLikeOptions,\n  ReadPreferenceOptions\n} from './read_preference';\nexport type { AsyncDisposable } from './resource_management';\nexport type { ClusterTime } from './sdam/common';\nexport type {\n  Monitor,\n  MonitorEvents,\n  MonitorInterval,\n  MonitorIntervalOptions,\n  MonitorOptions,\n  MonitorPrivate,\n  RTTPinger,\n  RTTPingerOptions,\n  RTTSampler,\n  ServerMonitoringMode\n} from './sdam/monitor';\nexport type {\n  Server,\n  ServerCommandOptions,\n  ServerEvents,\n  ServerOptions,\n  ServerPrivate\n} from './sdam/server';\nexport type {\n  ServerDescription,\n  ServerDescriptionOptions,\n  TagSet,\n  TopologyVersion\n} from './sdam/server_description';\nexport type { ServerSelector } from './sdam/server_selection';\nexport type { SrvPoller, SrvPollerEvents, SrvPollerOptions } from './sdam/srv_polling';\nexport type {\n  ConnectOptions,\n  SelectServerOptions,\n  ServerCapabilities,\n  ServerSelectionCallback,\n  ServerSelectionRequest,\n  Topology,\n  TopologyEvents,\n  TopologyOptions,\n  TopologyPrivate\n} from './sdam/topology';\nexport type { TopologyDescription, TopologyDescriptionOptions } from './sdam/topology_description';\nexport type {\n  ClientSessionEvents,\n  ClientSessionOptions,\n  EndSessionOptions,\n  ServerSession,\n  ServerSessionId,\n  ServerSessionPool,\n  WithTransactionCallback\n} from './sessions';\nexport type { Sort, SortDirection, SortDirectionForCmd, SortForCmd } from './sort';\nexport type {\n  CSOTTimeoutContext,\n  CSOTTimeoutContextOptions,\n  LegacyTimeoutContext,\n  LegacyTimeoutContextOptions,\n  Timeout,\n  TimeoutContext,\n  TimeoutContextOptions\n} from './timeout';\nexport type { Transaction, TransactionOptions, TxnState } from './transactions';\nexport type {\n  BufferPool,\n  Callback,\n  EventEmitterWithState,\n  HostAddress,\n  List,\n  MongoDBCollectionNamespace,\n  MongoDBNamespace\n} from './utils';\nexport type { W, WriteConcernOptions, WriteConcernSettings } from './write_concern';\n"
        }
    ]
}
{
    "sourceFile": "node_modules/mongodb/src/client-side-encryption/providers/aws.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892632981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import {\n  type AWSCredentialProvider,\n  AWSSDKCredentialProvider\n} from '../../cmap/auth/aws_temporary_credentials';\nimport { type KMSProviders } from '.';\n\n/**\n * @internal\n */\nexport async function loadAWSCredentials(\n  kmsProviders: KMSProviders,\n  provider?: AWSCredentialProvider\n): Promise<KMSProviders> {\n  const credentialProvider = new AWSSDKCredentialProvider(provider);\n\n  // We shouldn't ever receive a response from the AWS SDK that doesn't have a `SecretAccessKey`\n  // or `AccessKeyId`.  However, TS says these fields are optional.  We provide empty strings\n  // and let libmongocrypt error if we're unable to fetch the required keys.\n  const {\n    SecretAccessKey = '',\n    AccessKeyId = '',\n    Token\n  } = await credentialProvider.getCredentials();\n  const aws: NonNullable<KMSProviders['aws']> = {\n    secretAccessKey: SecretAccessKey,\n    accessKeyId: AccessKeyId\n  };\n  // the AWS session token is only required for temporary credentials so only attach it to the\n  // result if it's present in the response from the aws sdk\n  Token != null && (aws.sessionToken = Token);\n\n  return { ...kmsProviders, aws };\n}\n"
        }
    ]
}
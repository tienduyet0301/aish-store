{
    "sourceFile": "node_modules/mongodb/src/cursor/list_indexes_cursor.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892634881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Collection } from '../collection';\nimport { executeOperation } from '../operations/execute_operation';\nimport { ListIndexesOperation, type ListIndexesOptions } from '../operations/indexes';\nimport type { ClientSession } from '../sessions';\nimport { AbstractCursor, type InitialCursorResponse } from './abstract_cursor';\n\n/** @public */\nexport class ListIndexesCursor extends AbstractCursor {\n  parent: Collection;\n  options?: ListIndexesOptions;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(collection.client, collection.s.namespace, options);\n    this.parent = collection;\n    this.options = options;\n  }\n\n  clone(): ListIndexesCursor {\n    return new ListIndexesCursor(this.parent, {\n      ...this.options,\n      ...this.cursorOptions\n    });\n  }\n\n  /** @internal */\n  async _initialize(session: ClientSession | undefined): Promise<InitialCursorResponse> {\n    const operation = new ListIndexesOperation(this.parent, {\n      ...this.cursorOptions,\n      ...this.options,\n      session\n    });\n\n    const response = await executeOperation(this.parent.client, operation, this.timeoutContext);\n\n    return { server: operation.server, session, response };\n  }\n}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/mongodb/lib/client-side-encryption/providers/aws.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892614814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadAWSCredentials = loadAWSCredentials;\nconst aws_temporary_credentials_1 = require(\"../../cmap/auth/aws_temporary_credentials\");\n/**\n * @internal\n */\nasync function loadAWSCredentials(kmsProviders, provider) {\n    const credentialProvider = new aws_temporary_credentials_1.AWSSDKCredentialProvider(provider);\n    // We shouldn't ever receive a response from the AWS SDK that doesn't have a `SecretAccessKey`\n    // or `AccessKeyId`.  However, TS says these fields are optional.  We provide empty strings\n    // and let libmongocrypt error if we're unable to fetch the required keys.\n    const { SecretAccessKey = '', AccessKeyId = '', Token } = await credentialProvider.getCredentials();\n    const aws = {\n        secretAccessKey: SecretAccessKey,\n        accessKeyId: AccessKeyId\n    };\n    // the AWS session token is only required for temporary credentials so only attach it to the\n    // result if it's present in the response from the aws sdk\n    Token != null && (aws.sessionToken = Token);\n    return { ...kmsProviders, aws };\n}\n//# sourceMappingURL=aws.js.map"
        }
    ]
}
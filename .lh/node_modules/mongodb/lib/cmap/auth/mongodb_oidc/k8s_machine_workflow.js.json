{
    "sourceFile": "node_modules/mongodb/lib/cmap/auth/mongodb_oidc/k8s_machine_workflow.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892616436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.K8SMachineWorkflow = void 0;\nconst promises_1 = require(\"fs/promises\");\nconst machine_workflow_1 = require(\"./machine_workflow\");\n/** The fallback file name */\nconst FALLBACK_FILENAME = '/var/run/secrets/kubernetes.io/serviceaccount/token';\n/** The azure environment variable for the file name. */\nconst AZURE_FILENAME = 'AZURE_FEDERATED_TOKEN_FILE';\n/** The AWS environment variable for the file name. */\nconst AWS_FILENAME = 'AWS_WEB_IDENTITY_TOKEN_FILE';\nclass K8SMachineWorkflow extends machine_workflow_1.MachineWorkflow {\n    /**\n     * Instantiate the machine workflow.\n     */\n    constructor(cache) {\n        super(cache);\n    }\n    /**\n     * Get the token from the environment.\n     */\n    async getToken() {\n        let filename;\n        if (process.env[AZURE_FILENAME]) {\n            filename = process.env[AZURE_FILENAME];\n        }\n        else if (process.env[AWS_FILENAME]) {\n            filename = process.env[AWS_FILENAME];\n        }\n        else {\n            filename = FALLBACK_FILENAME;\n        }\n        const token = await (0, promises_1.readFile)(filename, 'utf8');\n        return { access_token: token };\n    }\n}\nexports.K8SMachineWorkflow = K8SMachineWorkflow;\n//# sourceMappingURL=k8s_machine_workflow.js.map"
        }
    ]
}
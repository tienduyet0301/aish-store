{
    "sourceFile": "node_modules/mongodb/lib/cmap/auth/mongodb_oidc/token_cache.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892616628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenCache = void 0;\nconst error_1 = require(\"../../../error\");\nclass MongoOIDCError extends error_1.MongoDriverError {\n}\n/** @internal */\nclass TokenCache {\n    get hasAccessToken() {\n        return !!this.accessToken;\n    }\n    get hasRefreshToken() {\n        return !!this.refreshToken;\n    }\n    get hasIdpInfo() {\n        return !!this.idpInfo;\n    }\n    getAccessToken() {\n        if (!this.accessToken) {\n            throw new MongoOIDCError('Attempted to get an access token when none exists.');\n        }\n        return this.accessToken;\n    }\n    getRefreshToken() {\n        if (!this.refreshToken) {\n            throw new MongoOIDCError('Attempted to get a refresh token when none exists.');\n        }\n        return this.refreshToken;\n    }\n    getIdpInfo() {\n        if (!this.idpInfo) {\n            throw new MongoOIDCError('Attempted to get IDP information when none exists.');\n        }\n        return this.idpInfo;\n    }\n    put(response, idpInfo) {\n        this.accessToken = response.accessToken;\n        this.refreshToken = response.refreshToken;\n        this.expiresInSeconds = response.expiresInSeconds;\n        if (idpInfo) {\n            this.idpInfo = idpInfo;\n        }\n    }\n    removeAccessToken() {\n        this.accessToken = undefined;\n    }\n    removeRefreshToken() {\n        this.refreshToken = undefined;\n    }\n}\nexports.TokenCache = TokenCache;\n//# sourceMappingURL=token_cache.js.map"
        }
    ]
}
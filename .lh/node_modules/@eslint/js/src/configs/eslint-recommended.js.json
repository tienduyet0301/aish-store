{
    "sourceFile": "node_modules/@eslint/js/src/configs/eslint-recommended.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891759271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Configuration applied when a user configuration extends from\n * eslint:recommended.\n * @author Nicholas C. Zakas\n */\n\n\"use strict\";\n\n/* eslint sort-keys: [\"error\", \"asc\"] -- Long, so make more readable */\n\n/*\n * IMPORTANT!\n *\n * We cannot add a \"name\" property to this object because it's still used in eslintrc\n * which doesn't support the \"name\" property. If we add a \"name\" property, it will\n * cause an error.\n */\n\nmodule.exports = Object.freeze({\n    rules: Object.freeze({\n        \"constructor-super\": \"error\",\n        \"for-direction\": \"error\",\n        \"getter-return\": \"error\",\n        \"no-async-promise-executor\": \"error\",\n        \"no-case-declarations\": \"error\",\n        \"no-class-assign\": \"error\",\n        \"no-compare-neg-zero\": \"error\",\n        \"no-cond-assign\": \"error\",\n        \"no-const-assign\": \"error\",\n        \"no-constant-binary-expression\": \"error\",\n        \"no-constant-condition\": \"error\",\n        \"no-control-regex\": \"error\",\n        \"no-debugger\": \"error\",\n        \"no-delete-var\": \"error\",\n        \"no-dupe-args\": \"error\",\n        \"no-dupe-class-members\": \"error\",\n        \"no-dupe-else-if\": \"error\",\n        \"no-dupe-keys\": \"error\",\n        \"no-duplicate-case\": \"error\",\n        \"no-empty\": \"error\",\n        \"no-empty-character-class\": \"error\",\n        \"no-empty-pattern\": \"error\",\n        \"no-empty-static-block\": \"error\",\n        \"no-ex-assign\": \"error\",\n        \"no-extra-boolean-cast\": \"error\",\n        \"no-fallthrough\": \"error\",\n        \"no-func-assign\": \"error\",\n        \"no-global-assign\": \"error\",\n        \"no-import-assign\": \"error\",\n        \"no-invalid-regexp\": \"error\",\n        \"no-irregular-whitespace\": \"error\",\n        \"no-loss-of-precision\": \"error\",\n        \"no-misleading-character-class\": \"error\",\n        \"no-new-native-nonconstructor\": \"error\",\n        \"no-nonoctal-decimal-escape\": \"error\",\n        \"no-obj-calls\": \"error\",\n        \"no-octal\": \"error\",\n        \"no-prototype-builtins\": \"error\",\n        \"no-redeclare\": \"error\",\n        \"no-regex-spaces\": \"error\",\n        \"no-self-assign\": \"error\",\n        \"no-setter-return\": \"error\",\n        \"no-shadow-restricted-names\": \"error\",\n        \"no-sparse-arrays\": \"error\",\n        \"no-this-before-super\": \"error\",\n        \"no-undef\": \"error\",\n        \"no-unexpected-multiline\": \"error\",\n        \"no-unreachable\": \"error\",\n        \"no-unsafe-finally\": \"error\",\n        \"no-unsafe-negation\": \"error\",\n        \"no-unsafe-optional-chaining\": \"error\",\n        \"no-unused-labels\": \"error\",\n        \"no-unused-private-class-members\": \"error\",\n        \"no-unused-vars\": \"error\",\n        \"no-useless-backreference\": \"error\",\n        \"no-useless-catch\": \"error\",\n        \"no-useless-escape\": \"error\",\n        \"no-with\": \"error\",\n        \"require-yield\": \"error\",\n        \"use-isnan\": \"error\",\n        \"valid-typeof\": \"error\"\n    })\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/motion-dom/dist/es/effects/style-effect.mjs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892640491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { resolveElements } from '../utils/resolve-elements.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nfunction styleEffect(subject, values) {\n    const elements = resolveElements(subject);\n    const subscriptions = [];\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        for (const key in values) {\n            const value = values[key];\n            /**\n             * TODO: Get specific setters for combined props (like x)\n             * or values with default types (like color)\n             *\n             * TODO: CSS variable support\n             */\n            const updateStyle = () => {\n                element.style[key] = value.get();\n            };\n            const scheduleUpdate = () => frame.render(updateStyle);\n            const cancel = value.on(\"change\", scheduleUpdate);\n            scheduleUpdate();\n            subscriptions.push(() => {\n                cancel();\n                cancelFrame(updateStyle);\n            });\n        }\n    }\n    return () => {\n        for (const cancel of subscriptions) {\n            cancel();\n        }\n    };\n}\n\nexport { styleEffect };\n"
        }
    ]
}
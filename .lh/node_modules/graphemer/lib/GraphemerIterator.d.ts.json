{
    "sourceFile": "node_modules/graphemer/lib/GraphemerIterator.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892321831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * GraphemerIterator\n *\n * Takes a string and a \"BreakHandler\" method during initialisation\n * and creates an iterable object that returns individual graphemes.\n *\n * @param str {string}\n * @return GraphemerIterator\n */\ndeclare class GraphemerIterator implements Iterator<string> {\n    private _index;\n    private _str;\n    private _nextBreak;\n    constructor(str: string, nextBreak: (str: string, index: number) => number);\n    [Symbol.iterator](): this;\n    next(): {\n        value: string;\n        done: boolean;\n    };\n}\nexport default GraphemerIterator;\n//# sourceMappingURL=GraphemerIterator.d.ts.map"
        }
    ]
}
{
    "sourceFile": "node_modules/streamsearch/test/test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893036090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nconst assert = require('assert');\n\nconst StreamSearch = require('../lib/sbmh.js');\n\n[\n  {\n    needle: '\\r\\n',\n    chunks: [\n      'foo',\n      ' bar',\n      '\\r',\n      '\\n',\n      'baz, hello\\r',\n      '\\n world.',\n      '\\r\\n Node.JS rules!!\\r\\n\\r\\n',\n    ],\n    expect: [\n      [false, 'foo'],\n      [false, ' bar'],\n      [ true, null],\n      [false, 'baz, hello'],\n      [ true, null],\n      [false, ' world.'],\n      [ true, null],\n      [ true, ' Node.JS rules!!'],\n      [ true, ''],\n    ],\n  },\n  {\n    needle: '---foobarbaz',\n    chunks: [\n      '---foobarbaz',\n      'asdf',\n      '\\r\\n',\n      '---foobarba',\n      '---foobar',\n      'ba',\n      '\\r\\n---foobarbaz--\\r\\n',\n    ],\n    expect: [\n      [ true, null],\n      [false, 'asdf'],\n      [false, '\\r\\n'],\n      [false, '---foobarba'],\n      [false, '---foobarba'],\n      [ true, '\\r\\n'],\n      [false, '--\\r\\n'],\n    ],\n  },\n].forEach((test, i) => {\n  console.log(`Running test #${i + 1}`);\n  const { needle, chunks, expect } = test;\n\n  const results = [];\n  const ss = new StreamSearch(Buffer.from(needle),\n                              (isMatch, data, start, end) => {\n    if (data)\n      data = data.toString('latin1', start, end);\n    else\n      data = null;\n    results.push([isMatch, data]);\n  });\n\n  for (const chunk of chunks)\n    ss.push(Buffer.from(chunk));\n\n  assert.deepStrictEqual(results, expect);\n});\n"
        }
    ]
}
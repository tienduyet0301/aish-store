{
    "sourceFile": "node_modules/globalthis/test/tests.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892318024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/* jscs:disable requireUseStrict */\n/* eslint strict: 0, max-statements: 0 */\n\nmodule.exports = function (theGlobal, t) {\n\tt.equal(typeof theGlobal, 'object', 'is an object');\n\n\tt.test('built-in globals', function (st) {\n\t\tst.equal(theGlobal.Math, Math, 'Math is on the global');\n\t\tst.equal(theGlobal.JSON, JSON, 'JSON is on the global');\n\t\tst.equal(theGlobal.String, String, 'String is on the global');\n\t\tst.equal(theGlobal.Array, Array, 'Array is on the global');\n\t\tst.equal(theGlobal.Number, Number, 'Number is on the global');\n\t\tst.equal(theGlobal.Boolean, Boolean, 'Boolean is on the global');\n\t\tst.equal(theGlobal.Object, Object, 'Object is on the global');\n\t\tst.equal(theGlobal.Function, Function, 'Function is on the global');\n\t\tst.equal(theGlobal.Date, Date, 'Date is on the global');\n\t\tst.equal(theGlobal.RegExp, RegExp, 'RegExp is on the global');\n\n\t\tif (typeof Symbol === 'undefined') {\n\t\t\tst.comment('# SKIP Symbol is not supported');\n\t\t} else {\n\t\t\tst.equal(theGlobal.Symbol, Symbol, 'Symbol is on the global');\n\t\t}\n\t\tst.end();\n\t});\n\n\tt.test('custom property', function (st) {\n\t\tvar key = 'random_custom_key_' + new Date().getTime();\n\t\tvar semaphore = {};\n\t\t/* eslint no-eval: 1 */\n\t\teval(key + ' = semaphore;');\n\t\tst.equal(theGlobal[key], semaphore, 'global variable ends up on the global object');\n\t\tdelete theGlobal[key]; // eslint-disable-line no-param-reassign\n\t\tst.end();\n\t});\n};\n"
        }
    ]
}
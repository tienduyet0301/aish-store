{
    "sourceFile": "node_modules/preact/debug/src/internal.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892965148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Component, PreactElement, VNode, Options } from '../../src/internal';\n\nexport { Component, PreactElement, VNode, Options };\n\nexport interface DevtoolsInjectOptions {\n\t/** 1 = DEV, 0 = production */\n\tbundleType: 1 | 0;\n\t/** The devtools enable different features for different versions of react */\n\tversion: string;\n\t/** Informative string, currently unused in the devtools  */\n\trendererPackageName: string;\n\t/** Find the root dom node of a vnode */\n\tfindHostInstanceByFiber(vnode: VNode): HTMLElement | null;\n\t/** Find the closest vnode given a dom node */\n\tfindFiberByHostInstance(instance: HTMLElement): VNode | null;\n}\n\nexport interface DevtoolsUpdater {\n\tsetState(objOrFn: any): void;\n\tforceUpdate(): void;\n\tsetInState(path: Array<string | number>, value: any): void;\n\tsetInProps(path: Array<string | number>, value: any): void;\n\tsetInContext(): void;\n}\n\nexport type NodeType = 'Composite' | 'Native' | 'Wrapper' | 'Text';\n\nexport interface DevtoolData {\n\tnodeType: NodeType;\n\t// Component type\n\ttype: any;\n\tname: string;\n\tref: any;\n\tkey: string | number;\n\tupdater: DevtoolsUpdater | null;\n\ttext: string | number | null;\n\tstate: any;\n\tprops: any;\n\tchildren: VNode[] | string | number | null;\n\tpublicInstance: PreactElement | Text | Component;\n\tmemoizedInteractions: any[];\n\n\tactualDuration: number;\n\tactualStartTime: number;\n\ttreeBaseDuration: number;\n}\n\nexport type EventType =\n\t| 'unmount'\n\t| 'rootCommitted'\n\t| 'root'\n\t| 'mount'\n\t| 'update'\n\t| 'updateProfileTimes';\n\nexport interface DevtoolsEvent {\n\tdata?: DevtoolData;\n\tinternalInstance: VNode;\n\trenderer: string;\n\ttype: EventType;\n}\n\nexport interface DevtoolsHook {\n\t_renderers: Record<string, any>;\n\t_roots: Set<VNode>;\n\ton(ev: string, listener: () => void): void;\n\temit(ev: string, data?: object): void;\n\thelpers: Record<string, any>;\n\tgetFiberRoots(rendererId: string): Set<any>;\n\tinject(config: DevtoolsInjectOptions): string;\n\tonCommitFiberRoot(rendererId: string, root: VNode): void;\n\tonCommitFiberUnmount(rendererId: string, vnode: VNode): void;\n}\n\nexport interface DevtoolsWindow extends Window {\n\t/**\n\t * If the devtools extension is installed it will inject this object into\n\t * the dom. This hook handles all communications between preact and the\n\t * devtools panel.\n\t */\n\t__REACT_DEVTOOLS_GLOBAL_HOOK__?: DevtoolsHook;\n}\n"
        }
    ]
}
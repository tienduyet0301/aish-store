{
    "sourceFile": "node_modules/preact/compat/src/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892962033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import * as _hooks from '../../hooks';\n// Intentionally not using a relative path to take advantage of\n// the TS version resolution mechanism\nimport * as preact from 'preact';\nimport { JSXInternal } from '../../src/jsx';\nimport * as _Suspense from './suspense';\nimport * as _SuspenseList from './suspense-list';\n\n// export default React;\nexport = React;\nexport as namespace React;\ndeclare namespace React {\n\t// Export JSX\n\texport import JSX = JSXInternal;\n\n\t// Hooks\n\texport import CreateHandle = _hooks.CreateHandle;\n\texport import EffectCallback = _hooks.EffectCallback;\n\texport import Inputs = _hooks.Inputs;\n\texport import PropRef = _hooks.PropRef;\n\texport import Reducer = _hooks.Reducer;\n\texport import Dispatch = _hooks.Dispatch;\n\texport import SetStateAction = _hooks.StateUpdater;\n\texport import useCallback = _hooks.useCallback;\n\texport import useContext = _hooks.useContext;\n\texport import useDebugValue = _hooks.useDebugValue;\n\texport import useEffect = _hooks.useEffect;\n\texport import useImperativeHandle = _hooks.useImperativeHandle;\n\texport import useId = _hooks.useId;\n\texport import useLayoutEffect = _hooks.useLayoutEffect;\n\texport import useMemo = _hooks.useMemo;\n\texport import useReducer = _hooks.useReducer;\n\texport import useRef = _hooks.useRef;\n\texport import useState = _hooks.useState;\n\t// React 18 hooks\n\texport import useInsertionEffect = _hooks.useLayoutEffect;\n\texport function useTransition(): [false, typeof startTransition];\n\texport function useDeferredValue<T = any>(val: T): T;\n\texport function useSyncExternalStore<T>(\n\t\tsubscribe: (flush: () => void) => () => void,\n\t\tgetSnapshot: () => T\n\t): T;\n\n\t// Preact Defaults\n\texport import Context = preact.Context;\n\texport import ContextType = preact.ContextType;\n\texport import RefObject = preact.RefObject;\n\texport import Component = preact.Component;\n\texport import FunctionComponent = preact.FunctionComponent;\n\texport import ComponentType = preact.ComponentType;\n\texport import ComponentClass = preact.ComponentClass;\n\texport import FC = preact.FunctionComponent;\n\texport import createContext = preact.createContext;\n\texport import Ref = preact.Ref;\n\texport import createRef = preact.createRef;\n\texport import Fragment = preact.Fragment;\n\texport import createElement = preact.createElement;\n\texport import cloneElement = preact.cloneElement;\n\texport import ComponentProps = preact.ComponentProps;\n\texport import ReactNode = preact.ComponentChild;\n\texport import ReactElement = preact.VNode;\n\texport import Consumer = preact.Consumer;\n\texport import ErrorInfo = preact.ErrorInfo;\n\n\t// Suspense\n\texport import Suspense = _Suspense.Suspense;\n\texport import lazy = _Suspense.lazy;\n\texport import SuspenseList = _SuspenseList.SuspenseList;\n\n\t// Compat\n\texport import StrictMode = preact.Fragment;\n\texport const version: string;\n\texport function startTransition(cb: () => void): void;\n\n\t// HTML\n\texport interface HTMLAttributes<T extends EventTarget>\n\t\textends JSXInternal.HTMLAttributes<T> {}\n\texport interface HTMLProps<T extends EventTarget>\n\t\textends JSXInternal.AllHTMLAttributes<T>,\n\t\t\tpreact.ClassAttributes<T> {}\n\texport interface AllHTMLAttributes<T extends EventTarget>\n\t\textends JSXInternal.AllHTMLAttributes<T> {}\n\texport import DetailedHTMLProps = JSXInternal.DetailedHTMLProps;\n\texport import CSSProperties = JSXInternal.CSSProperties;\n\n\texport interface SVGProps<T extends EventTarget>\n\t\textends JSXInternal.SVGAttributes<T>,\n\t\t\tpreact.ClassAttributes<T> {}\n\n\tinterface SVGAttributes extends JSXInternal.SVGAttributes {}\n\n\tinterface ReactSVG extends JSXInternal.IntrinsicSVGElements {}\n\n\texport import AriaAttributes = JSXInternal.AriaAttributes;\n\n\texport import HTMLAttributeReferrerPolicy = JSXInternal.HTMLAttributeReferrerPolicy;\n\texport import HTMLAttributeAnchorTarget = JSXInternal.HTMLAttributeAnchorTarget;\n\texport import HTMLInputTypeAttribute = JSXInternal.HTMLInputTypeAttribute;\n\texport import HTMLAttributeCrossOrigin = JSXInternal.HTMLAttributeCrossOrigin;\n\n\texport import AnchorHTMLAttributes = JSXInternal.AnchorHTMLAttributes;\n\texport import AudioHTMLAttributes = JSXInternal.AudioHTMLAttributes;\n\texport import AreaHTMLAttributes = JSXInternal.AreaHTMLAttributes;\n\texport import BaseHTMLAttributes = JSXInternal.BaseHTMLAttributes;\n\texport import BlockquoteHTMLAttributes = JSXInternal.BlockquoteHTMLAttributes;\n\texport import ButtonHTMLAttributes = JSXInternal.ButtonHTMLAttributes;\n\texport import CanvasHTMLAttributes = JSXInternal.CanvasHTMLAttributes;\n\texport import ColHTMLAttributes = JSXInternal.ColHTMLAttributes;\n\texport import ColgroupHTMLAttributes = JSXInternal.ColgroupHTMLAttributes;\n\texport import DataHTMLAttributes = JSXInternal.DataHTMLAttributes;\n\texport import DetailsHTMLAttributes = JSXInternal.DetailsHTMLAttributes;\n\texport import DelHTMLAttributes = JSXInternal.DelHTMLAttributes;\n\texport import DialogHTMLAttributes = JSXInternal.DialogHTMLAttributes;\n\texport import EmbedHTMLAttributes = JSXInternal.EmbedHTMLAttributes;\n\texport import FieldsetHTMLAttributes = JSXInternal.FieldsetHTMLAttributes;\n\texport import FormHTMLAttributes = JSXInternal.FormHTMLAttributes;\n\texport import IframeHTMLAttributes = JSXInternal.IframeHTMLAttributes;\n\texport import ImgHTMLAttributes = JSXInternal.ImgHTMLAttributes;\n\texport import InsHTMLAttributes = JSXInternal.InsHTMLAttributes;\n\texport import InputHTMLAttributes = JSXInternal.InputHTMLAttributes;\n\texport import KeygenHTMLAttributes = JSXInternal.KeygenHTMLAttributes;\n\texport import LabelHTMLAttributes = JSXInternal.LabelHTMLAttributes;\n\texport import LiHTMLAttributes = JSXInternal.LiHTMLAttributes;\n\texport import LinkHTMLAttributes = JSXInternal.LinkHTMLAttributes;\n\texport import MapHTMLAttributes = JSXInternal.MapHTMLAttributes;\n\texport import MenuHTMLAttributes = JSXInternal.MenuHTMLAttributes;\n\texport import MediaHTMLAttributes = JSXInternal.MediaHTMLAttributes;\n\texport import MetaHTMLAttributes = JSXInternal.MetaHTMLAttributes;\n\texport import MeterHTMLAttributes = JSXInternal.MeterHTMLAttributes;\n\texport import QuoteHTMLAttributes = JSXInternal.QuoteHTMLAttributes;\n\texport import ObjectHTMLAttributes = JSXInternal.ObjectHTMLAttributes;\n\texport import OlHTMLAttributes = JSXInternal.OlHTMLAttributes;\n\texport import OptgroupHTMLAttributes = JSXInternal.OptgroupHTMLAttributes;\n\texport import OptionHTMLAttributes = JSXInternal.OptionHTMLAttributes;\n\texport import OutputHTMLAttributes = JSXInternal.OutputHTMLAttributes;\n\texport import ParamHTMLAttributes = JSXInternal.ParamHTMLAttributes;\n\texport import ProgressHTMLAttributes = JSXInternal.ProgressHTMLAttributes;\n\texport import SlotHTMLAttributes = JSXInternal.SlotHTMLAttributes;\n\texport import ScriptHTMLAttributes = JSXInternal.ScriptHTMLAttributes;\n\texport import SelectHTMLAttributes = JSXInternal.SelectHTMLAttributes;\n\texport import SourceHTMLAttributes = JSXInternal.SourceHTMLAttributes;\n\texport import StyleHTMLAttributes = JSXInternal.StyleHTMLAttributes;\n\texport import TableHTMLAttributes = JSXInternal.TableHTMLAttributes;\n\texport import TextareaHTMLAttributes = JSXInternal.TextareaHTMLAttributes;\n\texport import TdHTMLAttributes = JSXInternal.TdHTMLAttributes;\n\texport import ThHTMLAttributes = JSXInternal.ThHTMLAttributes;\n\texport import TimeHTMLAttributes = JSXInternal.TimeHTMLAttributes;\n\texport import TrackHTMLAttributes = JSXInternal.TrackHTMLAttributes;\n\texport import VideoHTMLAttributes = JSXInternal.VideoHTMLAttributes;\n\n\t// Events\n\texport import TargetedEvent = JSXInternal.TargetedEvent;\n\texport import ChangeEvent = JSXInternal.TargetedEvent;\n\texport import ClipboardEvent = JSXInternal.TargetedClipboardEvent;\n\texport import CompositionEvent = JSXInternal.TargetedCompositionEvent;\n\texport import DragEvent = JSXInternal.TargetedDragEvent;\n\texport import PointerEvent = JSXInternal.TargetedPointerEvent;\n\texport import FocusEvent = JSXInternal.TargetedFocusEvent;\n\texport import FormEvent = JSXInternal.TargetedEvent;\n\texport import InvalidEvent = JSXInternal.TargetedEvent;\n\texport import KeyboardEvent = JSXInternal.TargetedKeyboardEvent;\n\texport import MouseEvent = JSXInternal.TargetedMouseEvent;\n\texport import TouchEvent = JSXInternal.TargetedTouchEvent;\n\texport import UIEvent = JSXInternal.TargetedUIEvent;\n\texport import AnimationEvent = JSXInternal.TargetedAnimationEvent;\n\texport import TransitionEvent = JSXInternal.TargetedTransitionEvent;\n\n\t// Event Handler Types\n\texport import EventHandler = JSXInternal.EventHandler;\n\texport import ChangeEventHandler = JSXInternal.GenericEventHandler;\n\texport import ClipboardEventHandler = JSXInternal.ClipboardEventHandler;\n\texport import CompositionEventHandler = JSXInternal.CompositionEventHandler;\n\texport import DragEventHandler = JSXInternal.DragEventHandler;\n\texport import PointerEventHandler = JSXInternal.PointerEventHandler;\n\texport import FocusEventHandler = JSXInternal.FocusEventHandler;\n\texport import FormEventHandler = JSXInternal.GenericEventHandler;\n\texport import InvalidEventHandler = JSXInternal.GenericEventHandler;\n\texport import KeyboardEventHandler = JSXInternal.KeyboardEventHandler;\n\texport import MouseEventHandler = JSXInternal.MouseEventHandler;\n\texport import TouchEventHandler = JSXInternal.TouchEventHandler;\n\texport import UIEventHandler = JSXInternal.UIEventHandler;\n\texport import AnimationEventHandler = JSXInternal.AnimationEventHandler;\n\texport import TransitionEventHandler = JSXInternal.TransitionEventHandler;\n\n\texport function createPortal(\n\t\tvnode: preact.ComponentChildren,\n\t\tcontainer: preact.ContainerNode\n\t): preact.VNode<any>;\n\n\texport function render(\n\t\tvnode: preact.ComponentChild,\n\t\tparent: preact.ContainerNode,\n\t\tcallback?: () => void\n\t): Component | null;\n\n\texport function hydrate(\n\t\tvnode: preact.ComponentChild,\n\t\tparent: preact.ContainerNode,\n\t\tcallback?: () => void\n\t): Component | null;\n\n\texport function unmountComponentAtNode(\n\t\tcontainer: preact.ContainerNode\n\t): boolean;\n\n\texport function createFactory(\n\t\ttype: preact.VNode<any>['type']\n\t): (\n\t\tprops?: any,\n\t\t...children: preact.ComponentChildren[]\n\t) => preact.VNode<any>;\n\texport function isValidElement(element: any): boolean;\n\texport function isFragment(element: any): boolean;\n\texport function isMemo(element: any): boolean;\n\texport function findDOMNode(\n\t\tcomponent: preact.Component | Element\n\t): Element | null;\n\n\texport abstract class PureComponent<\n\t\tP = {},\n\t\tS = {},\n\t\tSS = any\n\t> extends preact.Component<P, S> {\n\t\tisPureReactComponent: boolean;\n\t}\n\n\texport type MemoExoticComponent<C extends preact.FunctionalComponent<any>> =\n\t\tpreact.FunctionComponent<ComponentProps<C>> & {\n\t\t\treadonly type: C;\n\t\t};\n\n\texport function memo<P = {}>(\n\t\tcomponent: preact.FunctionalComponent<P>,\n\t\tcomparer?: (prev: P, next: P) => boolean\n\t): preact.FunctionComponent<P>;\n\texport function memo<C extends preact.FunctionalComponent<any>>(\n\t\tcomponent: C,\n\t\tcomparer?: (\n\t\t\tprev: preact.ComponentProps<C>,\n\t\t\tnext: preact.ComponentProps<C>\n\t\t) => boolean\n\t): C;\n\n\texport interface RefAttributes<R> extends preact.Attributes {\n\t\tref?: preact.Ref<R> | undefined;\n\t}\n\n\t/**\n\t * @deprecated Please use `ForwardRefRenderFunction` instead.\n\t */\n\texport interface ForwardFn<P = {}, T = any> {\n\t\t(props: P, ref: ForwardedRef<T>): preact.ComponentChild;\n\t\tdisplayName?: string;\n\t}\n\n\texport interface ForwardRefRenderFunction<T = any, P = {}> {\n\t\t(props: P, ref: ForwardedRef<T>): preact.ComponentChild;\n\t\tdisplayName?: string;\n\t}\n\n\texport interface ForwardRefExoticComponent<P>\n\t\textends preact.FunctionComponent<P> {\n\t\tdefaultProps?: Partial<P> | undefined;\n\t}\n\n\texport function forwardRef<R, P = {}>(\n\t\tfn: ForwardRefRenderFunction<R, P>\n\t): preact.FunctionalComponent<PropsWithoutRef<P> & { ref?: preact.Ref<R> }>;\n\n\texport type PropsWithoutRef<P> = Omit<P, 'ref'>;\n\n\tinterface MutableRefObject<T> {\n\t\tcurrent: T;\n\t}\n\n\texport type ForwardedRef<T> =\n\t\t| ((instance: T | null) => void)\n\t\t| MutableRefObject<T | null>\n\t\t| null;\n\n\texport type ElementType<\n\t\tP = any,\n\t\tTag extends keyof JSX.IntrinsicElements = keyof JSX.IntrinsicElements\n\t> =\n\t\t| { [K in Tag]: P extends JSX.IntrinsicElements[K] ? K : never }[Tag]\n\t\t| ComponentType<P>;\n\n\texport type ComponentPropsWithoutRef<T extends ElementType> = PropsWithoutRef<\n\t\tComponentProps<T>\n\t>;\n\n\texport type ComponentPropsWithRef<C extends ElementType> = C extends new (\n\t\tprops: infer P\n\t) => Component<any, any>\n\t\t? PropsWithoutRef<P> & RefAttributes<InstanceType<C>>\n\t\t: ComponentProps<C>;\n\n\texport type ElementRef<\n\t\tC extends\n\t\t\t| ForwardRefExoticComponent<any>\n\t\t\t| { new (props: any): Component<any, any> }\n\t\t\t| ((props: any) => ReactNode)\n\t\t\t| keyof JSXInternal.IntrinsicElements\n\t> = 'ref' extends keyof ComponentPropsWithRef<C>\n\t\t? NonNullable<ComponentPropsWithRef<C>['ref']> extends RefAttributes<\n\t\t\t\tinfer Instance\n\t\t\t>['ref']\n\t\t\t? Instance\n\t\t\t: never\n\t\t: never;\n\n\texport function flushSync<R>(fn: () => R): R;\n\texport function flushSync<A, R>(fn: (a: A) => R, a: A): R;\n\n\texport function unstable_batchedUpdates(\n\t\tcallback: (arg?: any) => void,\n\t\targ?: any\n\t): void;\n\n\texport type PropsWithChildren<P = unknown> = P & {\n\t\tchildren?: preact.ComponentChildren | undefined;\n\t};\n\n\texport const Children: {\n\t\tmap<T extends preact.ComponentChild, R>(\n\t\t\tchildren: T | T[],\n\t\t\tfn: (child: T, i: number) => R\n\t\t): R[];\n\t\tforEach<T extends preact.ComponentChild>(\n\t\t\tchildren: T | T[],\n\t\t\tfn: (child: T, i: number) => void\n\t\t): void;\n\t\tcount: (children: preact.ComponentChildren) => number;\n\t\tonly: (children: preact.ComponentChildren) => preact.ComponentChild;\n\t\ttoArray: (children: preact.ComponentChildren) => preact.VNode<{}>[];\n\t};\n\n\t// scheduler\n\texport const unstable_ImmediatePriority: number;\n\texport const unstable_UserBlockingPriority: number;\n\texport const unstable_NormalPriority: number;\n\texport const unstable_LowPriority: number;\n\texport const unstable_IdlePriority: number;\n\texport function unstable_runWithPriority(\n\t\tpriority: number,\n\t\tcallback: () => void\n\t): void;\n\texport const unstable_now: () => number;\n}\n"
        }
    ]
}
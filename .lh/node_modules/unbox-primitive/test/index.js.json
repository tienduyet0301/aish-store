{
    "sourceFile": "node_modules/unbox-primitive/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893079789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar inspect = require('object-inspect');\nvar is = require('object-is');\nvar forEach = require('for-each');\nvar v = require('es-value-fixtures');\n\nvar unboxPrimitive = require('..');\n\ntest('primitives', function (t) {\n\tforEach([null, undefined], function (nullValue) {\n\t\tt['throws'](\n\t\t\t// @ts-expect-error\n\t\t\tfunction () { unboxPrimitive(nullValue); },\n\t\t\tTypeError,\n\t\t\tinspect(nullValue) + ' is not a primitive'\n\t\t);\n\t});\n\n\t// eslint-disable-next-line no-extra-parens\n\tforEach(/** @type {typeof v.nonNullPrimitives} */ ([].concat(\n\t\t// @ts-expect-error TS sucks with concat\n\t\tv.nonNullPrimitives,\n\t\tv.zeroes,\n\t\tv.infinities,\n\t\tNaN\n\t)), function (primitive) {\n\t\tvar obj = Object(primitive);\n\t\tt.ok(\n\t\t\tis(unboxPrimitive(obj), primitive),\n\t\t\tinspect(obj) + 'unboxes to ' + inspect(primitive)\n\t\t);\n\t});\n\n\tt.end();\n});\n\ntest('objects', function (t) {\n\t// eslint-disable-next-line no-extra-parens\n\tforEach(/** @type {typeof v.objects} */ (/** @type {unknown} */ ([].concat(\n\t\t// @ts-expect-error TS sucks with concat\n\t\tv.objects,\n\t\t{},\n\t\t[],\n\t\tfunction () {},\n\t\t/a/g,\n\t\tnew Date()\n\t))), function (object) {\n\t\tt['throws'](\n\t\t\t// @ts-expect-error\n\t\t\tfunction () { unboxPrimitive(object); },\n\t\t\tTypeError,\n\t\t\tinspect(object) + ' is not a primitive'\n\t\t);\n\t});\n\n\tt.end();\n});\n"
        }
    ]
}
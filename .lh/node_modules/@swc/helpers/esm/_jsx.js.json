{
    "sourceFile": "node_modules/@swc/helpers/esm/_jsx.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891941103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var REACT_ELEMENT_TYPE;\nfunction _jsx(type, props, key, children) {\n    if (!REACT_ELEMENT_TYPE) {\n        REACT_ELEMENT_TYPE = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7;\n    }\n\n    var defaultProps = type && type.defaultProps;\n    var childrenLength = arguments.length - 3;\n\n    if (!props && childrenLength !== 0) props = { children: void 0 };\n    if (props && defaultProps) {\n        for (var propName in defaultProps) {\n            if (props[propName] === void 0) props[propName] = defaultProps[propName];\n            else if (!props) props = defaultProps || {};\n        }\n    }\n    if (childrenLength === 1) props.children = children;\n    else if (childrenLength > 1) {\n        var childArray = new Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) childArray[i] = arguments[i + 3];\n        props.children = childArray;\n    }\n\n    return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : \"\" + key, ref: null, props: props, _owner: null };\n}\nexport { _jsx as _ };\n"
        }
    ]
}
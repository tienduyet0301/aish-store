{
    "sourceFile": "node_modules/@swc/helpers/esm/_async_generator_delegate.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891938998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "function _async_generator_delegate(inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n        waiting = true;\n        value = new Promise(function(resolve) {\n            resolve(inner[key](value));\n        });\n\n        return { done: false, value: awaitWrap(value) };\n    }\n\n    if (typeof Symbol === \"function\" && Symbol.iterator) {\n        iter[Symbol.iterator] = function() {\n            return this;\n        };\n    }\n\n    iter.next = function(value) {\n        if (waiting) {\n            waiting = false;\n\n            return value;\n        }\n\n        return pump(\"next\", value);\n    };\n\n    if (typeof inner.throw === \"function\") {\n        iter.throw = function(value) {\n            if (waiting) {\n                waiting = false;\n                throw value;\n            }\n\n            return pump(\"throw\", value);\n        };\n    }\n    if (typeof inner.return === \"function\") {\n        iter.return = function(value) {\n            return pump(\"return\", value);\n        };\n    }\n\n    return iter;\n}\nexport { _async_generator_delegate as _ };\n"
        }
    ]
}
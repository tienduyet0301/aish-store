{
    "sourceFile": "node_modules/@swc/helpers/esm/_class_apply_descriptor_destructure.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891939246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "function _class_apply_descriptor_destructure(receiver, descriptor) {\n    if (descriptor.set) {\n        if (!(\"__destrObj\" in descriptor)) {\n            descriptor.__destrObj = {\n                set value(v) {\n                    descriptor.set.call(receiver, v);\n                }\n            };\n        }\n\n        return descriptor.__destrObj;\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n\n        return descriptor;\n    }\n}\nexport { _class_apply_descriptor_destructure as _ };\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@swc/helpers/scripts/build.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891942474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "#!/usr/bin/env zx\n\nimport { $, fs, glob } from \"zx\";\nimport { ast_grep } from \"./ast_grep.js\";\nimport { errors } from \"./errors.js\";\nimport { root } from \"./utils.js\";\n\n// clear generated content\nawait Promise.all([\n    fs.remove(root(\"cjs\")),\n    fs.remove(root(\"_\")),\n    fs.remove(root(\"src\")),\n]);\n\nlet modules = await glob(\"*.js\", { cwd: root(\"esm\") });\n\nconst task_queue = [];\n\nconst NO_MODIFY = [\n    \"/* This file is automatically generated and should not be manually edited. */\",\n    \"/* To modify this file, please run the `npm run build` command instead. */\",\n];\n\n// generate index.js\nconst indexESM = [...NO_MODIFY, \"\"];\n\nconst indexCJS = [`\"use strict\";`, \"\", ...NO_MODIFY, \"\"];\n\nconst cjs_export_list = [];\nconst cjs_module_lexer = [];\n\nconst main_package_json = fs.readJSONSync(root(\"package.json\"));\n\nmain_package_json.exports = {\n    \"./package.json\": \"./package.json\",\n    \"./esm/*\": \"./esm/*\",\n    \"./cjs/*\": \"./cjs/*\",\n    \"./src/*\": \"./src/*\",\n    \".\": { import: \"./esm/index.js\", default: \"./cjs/index.cjs\" },\n    \"./_\": { import: \"./esm/index.js\", default: \"./cjs/index.cjs\" },\n};\n\nmodules.forEach((p) => {\n    const importBinding = p.slice(0, -3);\n\n    main_package_json.exports[`./_/${importBinding}`] = {\n        import: `./esm/${importBinding}.js`,\n        default: `./cjs/${importBinding}.cjs`,\n    };\n\n    const alias_package = {\n        main: `../../cjs/${importBinding}.cjs`,\n        module: `../../esm/${importBinding}.js`,\n    };\n    task_queue.push(\n        fs.outputJSON(root(\"_\", importBinding, \"package.json\"), alias_package, {\n            encoding: \"utf-8\",\n            spaces: 4,\n        }),\n    );\n\n    if (importBinding === \"index\") {\n        return;\n    }\n\n    task_queue.push(\n        fs.outputFile(root(\"src\", `${importBinding}.mjs`), re_export_esm(importBinding), {\n            encoding: \"utf-8\",\n        }),\n    );\n\n    indexESM.push(`export { _ as ${importBinding} } from \"./${importBinding}.js\";`);\n\n    cjs_module_lexer.push(`${importBinding}: null,`);\n    cjs_export_list.push(`get ${importBinding}() {\n      return require(\"./${importBinding}.cjs\")._;\n  },`);\n});\n\nindexCJS.push(\n    `0 && (module.exports = {`,\n    \"/* @Annotate_start: the CommonJS named exports for ESM import in node */\",\n    ...cjs_module_lexer,\n    \"/* @Annotate_end */\",\n    `});`,\n    `module.exports = {`,\n    ...cjs_export_list,\n    `};`,\n);\n\ntask_queue.push(\n    fs.outputJSON(root(\"package.json\"), main_package_json, { spaces: 4 }),\n    fs.outputFile(root(\"esm\", \"index.js\"), indexESM.join(\"\\n\") + \"\\n\", {\n        encoding: \"utf-8\",\n    }),\n    fs.outputFile(root(\"cjs\", \"index.cjs\"), indexCJS.join(\"\\n\") + \"\\n\", {\n        encoding: \"utf-8\",\n    }),\n    fs.outputFile(root(\"src\", \"index.mjs\"), `export * from \"../esm/index.js\"`, {\n        \"encoding\": \"utf-8\",\n    }),\n);\n\ntask_queue.push(...ast_grep());\n\nawait Promise.all(task_queue);\n\nif (errors.length > 0) {\n    errors.forEach((e) => {\n        console.error(e);\n    });\n    process.exitCode = 1;\n} else {\n    $.cwd = root(\".\");\n    await $`dprint fmt`;\n    await $`dprint fmt \"scripts/*.js\" -c scripts/.dprint.json`;\n}\n\nfunction re_export_esm(importBinding) {\n    return `export { _ as default } from \"../esm/${importBinding}.js\"`;\n}\n"
        }
    ]
}
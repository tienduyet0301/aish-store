{
    "sourceFile": "node_modules/json-stable-stringify-without-jsonify/test/space.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892375298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var test = require('tape');\nvar stringify = require('../');\n\ntest('space parameter', function (t) {\n    t.plan(1);\n    var obj = { one: 1, two: 2 };\n    t.equal(stringify(obj, {space: '  '}), ''\n        + '{\\n'\n        + '  \"one\": 1,\\n'\n        + '  \"two\": 2\\n'\n        + '}'\n    );\n});\n\ntest('space parameter (with tabs)', function (t) {\n    t.plan(1);\n    var obj = { one: 1, two: 2 };\n    t.equal(stringify(obj, {space: '\\t'}), ''\n        + '{\\n'\n        + '\\t\"one\": 1,\\n'\n        + '\\t\"two\": 2\\n'\n        + '}'\n    );\n});\n\ntest('space parameter (with a number)', function (t) {\n    t.plan(1);\n    var obj = { one: 1, two: 2 };\n    t.equal(stringify(obj, {space: 3}), ''\n        + '{\\n'\n        + '   \"one\": 1,\\n'\n        + '   \"two\": 2\\n'\n        + '}'\n    );\n});\n\ntest('space parameter (nested objects)', function (t) {\n    t.plan(1);\n    var obj = { one: 1, two: { b: 4, a: [2,3] } };\n    t.equal(stringify(obj, {space: '  '}), ''\n        + '{\\n'\n        + '  \"one\": 1,\\n'\n        + '  \"two\": {\\n'\n        + '    \"a\": [\\n'\n        + '      2,\\n'\n        + '      3\\n'\n        + '    ],\\n'\n        + '    \"b\": 4\\n'\n        + '  }\\n'\n        + '}'\n    );\n});\n\ntest('space parameter (same as native)', function (t) {\n    t.plan(1);\n    // for this test, properties need to be in alphabetical order\n    var obj = { one: 1, two: { a: [2,3], b: 4 } };\n    t.equal(stringify(obj, {space: '  '}), JSON.stringify(obj, null, '  '));\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/json-stable-stringify-without-jsonify/test/replacer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892375239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var test = require('tape');\nvar stringify = require('../');\n\ntest('replace root', function (t) {\n\tt.plan(1);\n\n\tvar obj = { a: 1, b: 2, c: false };\n\tvar replacer = function(key, value) { return 'one'; };\n\n\tt.equal(stringify(obj, { replacer: replacer }), '\"one\"');\n});\n\ntest('replace numbers', function (t) {\n\tt.plan(1);\n\n\tvar obj = { a: 1, b: 2, c: false };\n\tvar replacer = function(key, value) {\n\t\tif(value === 1) return 'one';\n\t\tif(value === 2) return 'two';\n\t\treturn value;\n\t};\n\n\tt.equal(stringify(obj, { replacer: replacer }), '{\"a\":\"one\",\"b\":\"two\",\"c\":false}');\n});\n\ntest('replace with object', function (t) {\n\tt.plan(1);\n\n\tvar obj = { a: 1, b: 2, c: false };\n\tvar replacer = function(key, value) {\n\t\tif(key === 'b') return { d: 1 };\n\t\tif(value === 1) return 'one';\n\t\treturn value;\n\t};\n\n\tt.equal(stringify(obj, { replacer: replacer }), '{\"a\":\"one\",\"b\":{\"d\":\"one\"},\"c\":false}');\n});\n\ntest('replace with undefined', function (t) {\n\tt.plan(1);\n\n\tvar obj = { a: 1, b: 2, c: false };\n\tvar replacer = function(key, value) {\n\t\tif(value === false) return;\n\t\treturn value;\n\t};\n\n\tt.equal(stringify(obj, { replacer: replacer }), '{\"a\":1,\"b\":2}');\n});\n\ntest('replace with array', function (t) {\n\tt.plan(1);\n\n\tvar obj = { a: 1, b: 2, c: false };\n\tvar replacer = function(key, value) {\n\t\tif(key === 'b') return ['one', 'two'];\n\t\treturn value;\n\t};\n\n\tt.equal(stringify(obj, { replacer: replacer }), '{\"a\":1,\"b\":[\"one\",\"two\"],\"c\":false}');\n});\n\ntest('replace array item', function (t) {\n\tt.plan(1);\n\n\tvar obj = { a: 1, b: 2, c: [1,2] };\n\tvar replacer = function(key, value) {\n\t\tif(value === 1) return 'one';\n\t\tif(value === 2) return 'two';\n\t\treturn value;\n\t};\n\n\tt.equal(stringify(obj, { replacer: replacer }), '{\"a\":\"one\",\"b\":\"two\",\"c\":[\"one\",\"two\"]}');\n});\n"
        }
    ]
}
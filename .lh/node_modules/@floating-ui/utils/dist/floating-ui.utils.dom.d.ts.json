{
    "sourceFile": "node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891762066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "declare function getComputedStyle_2(element: Element): CSSStyleDeclaration;\r\nexport { getComputedStyle_2 as getComputedStyle }\r\n\r\nexport declare function getContainingBlock(element: Element): HTMLElement | null;\r\n\r\nexport declare function getDocumentElement(node: Node | Window): HTMLElement;\r\n\r\nexport declare function getFrameElement(win: Window): Element | null;\r\n\r\nexport declare function getNearestOverflowAncestor(node: Node): HTMLElement;\r\n\r\nexport declare function getNodeName(node: Node | Window): string;\r\n\r\nexport declare function getNodeScroll(element: Element | Window): {\r\n    scrollLeft: number;\r\n    scrollTop: number;\r\n};\r\n\r\nexport declare function getOverflowAncestors(node: Node, list?: OverflowAncestors, traverseIframes?: boolean): OverflowAncestors;\r\n\r\nexport declare function getParentNode(node: Node): Node;\r\n\r\nexport declare function getWindow(node: any): typeof window;\r\n\r\nexport declare function isContainingBlock(elementOrCss: Element | CSSStyleDeclaration): boolean;\r\n\r\nexport declare function isElement(value: unknown): value is Element;\r\n\r\nexport declare function isHTMLElement(value: unknown): value is HTMLElement;\r\n\r\nexport declare function isLastTraversableNode(node: Node): boolean;\r\n\r\nexport declare function isNode(value: unknown): value is Node;\r\n\r\nexport declare function isOverflowElement(element: Element): boolean;\r\n\r\nexport declare function isShadowRoot(value: unknown): value is ShadowRoot;\r\n\r\nexport declare function isTableElement(element: Element): boolean;\r\n\r\nexport declare function isTopLayer(element: Element): boolean;\r\n\r\nexport declare function isWebKit(): boolean;\r\n\r\ndeclare type OverflowAncestors = Array<Element | Window | VisualViewport>;\r\n\r\nexport { }\r\n"
        }
    ]
}
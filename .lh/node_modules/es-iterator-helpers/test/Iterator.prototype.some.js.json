{
    "sourceFile": "node_modules/es-iterator-helpers/test/Iterator.prototype.some.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892198488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar defineProperties = require('define-properties');\nvar test = require('tape');\nvar callBind = require('call-bind');\nvar functionsHaveNames = require('functions-have-names')();\nvar hasStrictMode = require('has-strict-mode')();\nvar forEach = require('for-each');\nvar debug = require('object-inspect');\nvar v = require('es-value-fixtures');\nvar hasSymbols = require('has-symbols/shams')();\nvar iterate = require('iterate-iterator');\n\nvar index = require('../Iterator.prototype.some');\nvar impl = require('../Iterator.prototype.some/implementation');\n\nvar fnName = 'some';\n\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar testIterator = require('./helpers/testIterator');\n\nmodule.exports = {\n\ttests: function (some, name, t) {\n\t\tt['throws'](\n\t\t\tfunction () { return new some(); }, // eslint-disable-line new-cap\n\t\t\tTypeError,\n\t\t\t'`' + name + '` is not a constructor'\n\t\t);\n\n\t\tforEach(v.primitives.concat(v.objects), function (nonIterator) {\n\t\t\tt['throws'](\n\t\t\t\tfunction () { iterate(some(nonIterator, function () {})); },\n\t\t\t\tTypeError,\n\t\t\t\tdebug(nonIterator) + ' is not an Object with a callable `next` method'\n\t\t\t);\n\n\t\t\tvar badNext = { next: nonIterator };\n\t\t\tt['throws'](\n\t\t\t\tfunction () { iterate(some(badNext, function () {})); },\n\t\t\t\tTypeError,\n\t\t\t\tdebug(badNext) + ' is not an Object with a callable `next` method'\n\t\t\t);\n\t\t});\n\n\t\tforEach(v.nonFunctions, function (nonFunction) {\n\t\t\tt['throws'](\n\t\t\t\tfunction () { some({ next: function () {} }, nonFunction); },\n\t\t\t\tTypeError,\n\t\t\t\tdebug(nonFunction) + ' is not a function'\n\t\t\t);\n\t\t});\n\n\t\tt.test('actual iteration', { skip: !hasSymbols }, function (st) {\n\t\t\tvar arr = [1, 2, 3];\n\t\t\tvar iterator = callBind(arr[Symbol.iterator], arr);\n\n\t\t\tst['throws'](\n\t\t\t\tfunction () { return new some(iterator()); }, // eslint-disable-line new-cap\n\t\t\t\tTypeError,\n\t\t\t\t'`' + name + '` iterator is not a constructor'\n\t\t\t);\n\t\t\tst['throws'](\n\t\t\t\tfunction () { return new some(iterator(), function () {}); }, // eslint-disable-line new-cap\n\t\t\t\tTypeError,\n\t\t\t\t'`' + name + '` iterator is not a constructor'\n\t\t\t);\n\n\t\t\ttestIterator(iterator(), [1, 2, 3], st, 'original');\n\t\t\tst.equal(some(iterator(), function () { return false; }), false, 'some for always-false');\n\t\t\tst.equal(some(iterator(), function () { return true; }), true, 'some for always-true');\n\t\t\tst.equal(some(iterator(), function (x, i) { return x === 2 && i === 1; }), true, 'some returns true for matching value/index');\n\n\t\t\tst.end();\n\t\t});\n\t},\n\tindex: function () {\n\t\ttest('Iterator.prototype.' + fnName + ': index', function (t) {\n\t\t\tmodule.exports.tests(index, 'Iterator.prototype.' + fnName, t);\n\n\t\t\tt.end();\n\t\t});\n\t},\n\timplementation: function () {\n\t\ttest('Iterator.prototype.' + fnName + ': implementation', function (t) {\n\t\t\tmodule.exports.tests(callBind(impl), 'Iterator.prototype.' + fnName, t);\n\n\t\t\tt.end();\n\t\t});\n\t},\n\tshimmed: function () {\n\t\ttest('Iterator.prototype.' + fnName + ': shimmed', function (t) {\n\t\t\tt.test('Function name', { skip: !functionsHaveNames }, function (st) {\n\t\t\t\tst.equal(Iterator.prototype[fnName].name, fnName, 'Iterator#' + fnName + ' has name \"' + fnName + '\"');\n\t\t\t\tst.end();\n\t\t\t});\n\n\t\t\tt.test('enumerability', { skip: !defineProperties.supportsDescriptors }, function (et) {\n\t\t\t\tet.equal(false, isEnumerable.call(Iterator.prototype, fnName), 'Iterator#' + fnName + ' is not enumerable');\n\t\t\t\tet.end();\n\t\t\t});\n\n\t\t\tt.test('bad string/this value', { skip: !hasStrictMode }, function (st) {\n\t\t\t\tst['throws'](function () { return Iterator.prototype[fnName].call(undefined, 'a'); }, TypeError, 'undefined is not an object');\n\t\t\t\tst['throws'](function () { return Iterator.prototype[fnName].call(null, 'a'); }, TypeError, 'null is not an object');\n\t\t\t\tst.end();\n\t\t\t});\n\n\t\t\tmodule.exports.tests(callBind(Iterator.prototype[fnName]), 'Iterator.prototype.' + fnName, t);\n\n\t\t\tt.end();\n\t\t});\n\t}\n};\n"
        }
    ]
}
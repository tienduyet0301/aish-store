{
    "sourceFile": "node_modules/es-iterator-helpers/test/Iterator.prototype.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892198244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar defineProperties = require('define-properties');\nvar test = require('tape');\nvar hasSymbols = require('has-symbols')();\nvar hasToStringTag = require('has-tostringtag');\nvar functionsHaveNames = require('functions-have-names')();\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\n\nvar index = require('../Iterator.prototype');\nvar impl = require('../Iterator.prototype/implementation');\n\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar $Iterator = require('../Iterator/implementation');\n\nmodule.exports = {\n\ttests: function (proto, name, t) {\n\t\tt.notEqual(proto, null, 'is not null');\n\t\tt.equal(typeof proto, 'object', 'is an object');\n\n\t\tt.test('Symbol.iterator', { skip: !hasSymbols }, function (st) {\n\t\t\tst.equal(typeof proto[Symbol.iterator], 'function', 'has a `Symbol.iterator` method');\n\t\t\tst.equal(\n\t\t\t\tproto[Symbol.iterator].name,\n\t\t\t\t'[Symbol.iterator]',\n\t\t\t\t'has name \"[Symbol.iterator]\"',\n\t\t\t\t{ skip: functionsHaveNames && !functionsHaveConfigurableNames }\n\t\t\t);\n\t\t\tst.equal(proto[Symbol.iterator](), proto, 'function returns proto');\n\t\t\tst.equal(proto[Symbol.iterator].call($Iterator), $Iterator, 'function returns receiver');\n\n\t\t\tst.end();\n\t\t});\n\n\t\tt.test(\n\t\t\t'Symbol.toStringTag',\n\t\t\t{ skip: !hasToStringTag || 'temporarily skipped pending https://bugs.chromium.org/p/chromium/issues/detail?id=1477372' },\n\t\t\tfunction (st) {\n\t\t\t\tst.equal(proto[Symbol.toStringTag], 'Iterator', 'has a `Symbol.toStringTag` property');\n\n\t\t\t\tst.end();\n\t\t\t}\n\t\t);\n\t},\n\tindex: function () {\n\t\ttest('Iterator.prototype: index', function (t) {\n\t\t\tmodule.exports.tests(index, 'Iterator.prototype', t);\n\n\t\t\tt.end();\n\t\t});\n\t},\n\timplementation: function () {\n\t\ttest('Iterator.prototype: implementation', function (t) {\n\t\t\tmodule.exports.tests(impl, 'Iterator.prototype', t);\n\n\t\t\tt.end();\n\t\t});\n\t},\n\tshimmed: function () {\n\t\ttest('Iterator.prototype: shimmed', function (t) {\n\t\t\tt.test('enumerability', { skip: !defineProperties.supportsDescriptors }, function (et) {\n\t\t\t\tet.equal(false, isEnumerable.call(Iterator, 'prototype'), 'Iterator.prototype is not enumerable');\n\t\t\t\tet.end();\n\t\t\t});\n\n\t\t\tmodule.exports.tests(Iterator.prototype, 'Iterator.prototype', t);\n\n\t\t\tt.end();\n\t\t});\n\t}\n};\n"
        }
    ]
}
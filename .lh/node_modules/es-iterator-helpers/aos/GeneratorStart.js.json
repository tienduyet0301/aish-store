{
    "sourceFile": "node_modules/es-iterator-helpers/aos/GeneratorStart.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892192313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar CreateIterResultObject = require('es-abstract/2024/CreateIterResultObject');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar Type = require('es-abstract/2024/Type');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function GeneratorStart(generator, closure) {\n\tSLOT.assert(generator, '[[GeneratorState]]');\n\tSLOT.assert(generator, '[[GeneratorContext]]');\n\tSLOT.assert(generator, '[[GeneratorBrand]]');\n\tSLOT.assert(generator, '[[Sentinel]]'); // our userland slot\n\tSLOT.assert(generator, '[[CloseIfAbrupt]]'); // our second userland slot\n\n\tif (!IsCallable(closure) || closure.length !== 0) {\n\t\tthrow new $TypeError('`closure` must be a function that takes no arguments');\n\t}\n\n\tvar sentinel = SLOT.get(closure, '[[Sentinel]]');\n\tif (Type(sentinel) !== 'Object') {\n\t\tthrow new $TypeError('`closure.[[Sentinel]]` must be an object');\n\t}\n\tSLOT.set(generator, '[[GeneratorContext]]', function () { // steps 2-5\n\t\ttry {\n\t\t\tvar result = closure();\n\t\t\tif (result === sentinel) {\n\t\t\t\tSLOT.set(generator, '[[GeneratorState]]', 'completed');\n\t\t\t\tSLOT.set(generator, '[[GeneratorContext]]', null);\n\t\t\t\treturn CreateIterResultObject(void undefined, true);\n\t\t\t}\n\t\t\tSLOT.set(generator, '[[GeneratorState]]', 'suspendedYield');\n\t\t\treturn CreateIterResultObject(result, false);\n\t\t} catch (e) {\n\t\t\tSLOT.set(generator, '[[GeneratorState]]', 'completed');\n\t\t\tSLOT.set(generator, '[[GeneratorContext]]', null);\n\t\t\tthrow e;\n\t\t}\n\t});\n\n\tSLOT.set(generator, '[[GeneratorState]]', 'suspendedStart'); // step 6\n};\n"
        }
    ]
}
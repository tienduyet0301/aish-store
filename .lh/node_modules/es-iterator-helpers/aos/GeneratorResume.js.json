{
    "sourceFile": "node_modules/es-iterator-helpers/aos/GeneratorResume.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892191100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar CreateIterResultObject = require('es-abstract/2024/CreateIterResultObject');\nvar GeneratorValidate = require('./GeneratorValidate');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function GeneratorResume(generator, value, generatorBrand) {\n\tvar state = GeneratorValidate(generator, generatorBrand); // step 1\n\tif (state === 'completed') {\n\t\treturn CreateIterResultObject(void undefined, true); // step 2\n\t}\n\n\tif (state !== 'suspendedStart' && state !== 'suspendedYield') {\n\t\tthrow new $TypeError('Assertion failed: generator state is unexpected: ' + state); // step 3\n\t}\n\n\tvar genContext = SLOT.get(generator, '[[GeneratorContext]]');\n\n\tSLOT.set(generator, '[[GeneratorState]]', 'executing'); // step 7\n\n\tvar result = genContext(value); // steps 5-6, 8-10\n\n\treturn result;\n};\n"
        }
    ]
}
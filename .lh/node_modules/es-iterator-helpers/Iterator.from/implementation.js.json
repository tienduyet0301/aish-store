{
    "sourceFile": "node_modules/es-iterator-helpers/Iterator.from/implementation.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892193652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar GetIteratorFlattenable = require('../aos/GetIteratorFlattenable');\nvar OrdinaryHasInstance = require('es-abstract/2024/OrdinaryHasInstance');\nvar OrdinaryObjectCreate = require('es-abstract/2024/OrdinaryObjectCreate');\n\nvar $Iterator = require('../Iterator/polyfill')();\nvar $WrapForValidIteratorPrototype = require('../WrapForValidIteratorPrototype');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function from(O) {\n\tif (this instanceof from) {\n\t\tthrow new $TypeError('`Iterator.from` is not a constructor');\n\t}\n\n\tvar iteratorRecord = GetIteratorFlattenable(O, 'ITERATE-STRINGS'); // step 1\n\n\tvar hasInstance = OrdinaryHasInstance($Iterator, iteratorRecord['[[Iterator]]']); // step 2\n\n\tif (hasInstance) { // step 3\n\t\treturn iteratorRecord['[[Iterator]]']; // step 3.a\n\t}\n\n\tvar wrapper = OrdinaryObjectCreate($WrapForValidIteratorPrototype); // , ['[[Iterated]]']); // step 4\n\n\tSLOT.set(wrapper, '[[Iterated]]', iteratorRecord); // step 5\n\n\treturn wrapper; // step 6\n};\n"
        }
    ]
}
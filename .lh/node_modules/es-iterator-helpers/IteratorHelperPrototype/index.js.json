{
    "sourceFile": "node_modules/es-iterator-helpers/IteratorHelperPrototype/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892196942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar setToStringTag = require('es-set-tostringtag');\nvar hasProto = require('has-proto')();\nvar iterProto = require('../Iterator.prototype/implementation');\nvar SLOT = require('internal-slot');\n\nvar CreateIterResultObject = require('es-abstract/2024/CreateIterResultObject');\nvar GeneratorResume = require('../aos/GeneratorResume');\nvar GeneratorResumeAbrupt = require('../aos/GeneratorResumeAbrupt');\nvar IteratorCloseAll = require('../aos/IteratorCloseAll');\nvar ReturnCompletion = require('../aos/ReturnCompletion');\n\nvar implementation;\nvar o = { // in an object, for name inference\n\t'return': function () {\n\t\tvar O = this; // step 1\n\n\t\tSLOT.assert(O, '[[UnderlyingIterators]]'); // step 2\n\n\t\tSLOT.assert(O, '[[GeneratorState]]'); // step 3\n\n\t\tif (SLOT.get(O, '[[GeneratorState]]') === 'suspendedStart') { // step 4\n\t\t\tSLOT.set(O, '[[GeneratorState]]', 'completed'); // step 4.a\n\t\t\tIteratorCloseAll(SLOT.get(O, '[[UnderlyingIterators]]'), ReturnCompletion(void undefined)); // step 4.c\n\t\t\treturn CreateIterResultObject(void undefined, true); // step 4.d\n\t\t}\n\n\t\tvar C = ReturnCompletion(void undefined); // step 5\n\n\t\treturn GeneratorResumeAbrupt(O, C, 'Iterator Helper'); // step 6\n\t}\n};\nif (hasProto) {\n\timplementation = {\n\t\t__proto__: iterProto,\n\t\tnext: function next() {\n\t\t\treturn GeneratorResume(this, void undefined, 'Iterator Helper');\n\t\t},\n\t\t'return': o['return']\n\t};\n\tsetToStringTag(implementation, 'Iterator Helper');\n} else {\n\tvar IteratorHelper = function IteratorHelper() {};\n\tIteratorHelper.prototype = iterProto;\n\timplementation = new IteratorHelper();\n\tdelete implementation.constructor;\n\timplementation.next = function next() {\n\t\treturn GeneratorResume(this, void undefined, 'Iterator Helper');\n\t};\n\timplementation['return'] = o['return'];\n}\n\nmodule.exports = implementation;\n"
        }
    ]
}
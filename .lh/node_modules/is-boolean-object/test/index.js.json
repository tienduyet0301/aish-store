{
    "sourceFile": "node_modules/is-boolean-object/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892328246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar inspect = require('object-inspect');\n\nvar isBoolean = require('../');\n\ntest('not Booleans', function (t) {\n\tt.test('primitives', function (st) {\n\t\t// @ts-expect-error\n\t\tst.notOk(isBoolean(), 'undefined is not Boolean');\n\t\tst.notOk(isBoolean(null), 'null is not Boolean');\n\t\tst.notOk(isBoolean(0), '0 is not Boolean');\n\t\tst.notOk(isBoolean(NaN), 'NaN is not Boolean');\n\t\tst.notOk(isBoolean(Infinity), 'Infinity is not Boolean');\n\t\tst.notOk(isBoolean('foo'), 'string is not Boolean');\n\t\tst.end();\n\t});\n\n\tt.test('objects', function (st) {\n\t\tst.notOk(isBoolean(Object(42)), 'number object is not Boolean');\n\t\tst.notOk(isBoolean([]), 'array is not Boolean');\n\t\tst.notOk(isBoolean({}), 'object is not Boolean');\n\t\tst.notOk(isBoolean(function () {}), 'function is not Boolean');\n\t\tst.notOk(isBoolean(/a/g), 'regex literal is not Boolean');\n\t\tst.notOk(isBoolean(new RegExp('a', 'g')), 'regex object is not Boolean');\n\t\tst.notOk(isBoolean(new Date()), 'new Date() is not Boolean');\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n\ntest('@@toStringTag', { skip: !hasToStringTag }, function (t) {\n\t/** @type {{ toString(): unknown; valueOf(): unknown; [Symbol.toStringTag]?: string; }} */\n\tvar fakeBoolean = {\n\t\ttoString: function () { return 'true'; },\n\t\tvalueOf: function () { return true; }\n\t};\n\tfakeBoolean[Symbol.toStringTag] = 'Boolean';\n\tt.notOk(isBoolean(fakeBoolean), 'fake Boolean with @@toStringTag \"Boolean\" is not Boolean');\n\tt.end();\n});\n\ntest('Booleans', function (t) {\n\tt.ok(isBoolean(true), 'true is Boolean');\n\tt.ok(isBoolean(false), 'false is Boolean');\n\tt.ok(isBoolean(Object(true)), 'Object(true) is Boolean');\n\tt.ok(isBoolean(Object(false)), 'Object(false) is Boolean');\n\tt.end();\n});\n\ntest('Proxy', { skip: typeof Proxy !== 'function' || !hasToStringTag }, function (t) {\n\t/** @type {Record<PropertyKey, unknown>} */\n\tvar target = {};\n\ttarget[Symbol.toStringTag] = 'Boolean';\n\tvar fake = new Proxy(target, { has: function () { return false; } });\n\n\tt.equal(\n\t\tisBoolean(target),\n\t\tfalse,\n\t\tinspect(target) + ' is not a Boolean'\n\t);\n\n\tt.equal(\n\t\tisBoolean(fake),\n\t\tfalse,\n\t\tinspect(fake) + ' is not a Boolean'\n\t);\n\n\tt.end();\n});\n"
        }
    ]
}
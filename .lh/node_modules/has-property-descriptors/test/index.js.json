{
    "sourceFile": "node_modules/has-property-descriptors/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892322979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\n\nvar hasPropertyDescriptors = require('../');\n\nvar sentinel = {};\n\ntest('hasPropertyDescriptors', function (t) {\n\tt.equal(typeof hasPropertyDescriptors, 'function', 'is a function');\n\tt.equal(typeof hasPropertyDescriptors.hasArrayLengthDefineBug, 'function', '`hasArrayLengthDefineBug` property is a function');\n\n\tvar yes = hasPropertyDescriptors();\n\tt.test('property descriptors', { skip: !yes }, function (st) {\n\t\tvar o = { a: sentinel };\n\n\t\tst.deepEqual(\n\t\t\tObject.getOwnPropertyDescriptor(o, 'a'),\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: sentinel,\n\t\t\t\twritable: true\n\t\t\t},\n\t\t\t'has expected property descriptor'\n\t\t);\n\n\t\tObject.defineProperty(o, 'a', { enumerable: false, writable: false });\n\n\t\tst.deepEqual(\n\t\t\tObject.getOwnPropertyDescriptor(o, 'a'),\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: sentinel,\n\t\t\t\twritable: false\n\t\t\t},\n\t\t\t'has expected property descriptor after [[Define]]'\n\t\t);\n\n\t\tst.end();\n\t});\n\n\tvar arrayBug = hasPropertyDescriptors.hasArrayLengthDefineBug();\n\tt.test('defining array lengths', { skip: !yes || arrayBug }, function (st) {\n\t\tvar arr = [1, , 3]; // eslint-disable-line no-sparse-arrays\n\t\tst.equal(arr.length, 3, 'array starts with length 3');\n\n\t\tObject.defineProperty(arr, 'length', { value: 5 });\n\n\t\tst.equal(arr.length, 5, 'array ends with length 5');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"
        }
    ]
}
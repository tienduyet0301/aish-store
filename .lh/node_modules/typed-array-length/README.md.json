{
    "sourceFile": "node_modules/typed-array-length/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893070921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# typed-array-length <sup>[![Version Badge][2]][1]</sup>\n\n[![dependency status][5]][6]\n[![dev dependency status][7]][8]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][11]][1]\n\nRobustly get the length of a Typed Array, or `false` if it is not a Typed Array. Works cross-realm, in every engine, even if the `length` property is overridden.\n\n## Example\n\n```js\nvar typedArrayLength = require('typed-array-length');\nvar assert = require('assert');\n\nassert.equal(false, typedArrayLength(undefined));\nassert.equal(false, typedArrayLength(null));\nassert.equal(false, typedArrayLength(false));\nassert.equal(false, typedArrayLength(true));\nassert.equal(false, typedArrayLength([]));\nassert.equal(false, typedArrayLength({}));\nassert.equal(false, typedArrayLength(/a/g));\nassert.equal(false, typedArrayLength(new RegExp('a', 'g')));\nassert.equal(false, typedArrayLength(new Date()));\nassert.equal(false, typedArrayLength(42));\nassert.equal(false, typedArrayLength(NaN));\nassert.equal(false, typedArrayLength(Infinity));\nassert.equal(false, typedArrayLength(new Number(42)));\nassert.equal(false, typedArrayLength('foo'));\nassert.equal(false, typedArrayLength(Object('foo')));\nassert.equal(false, typedArrayLength(function () {}));\nassert.equal(false, typedArrayLength(function* () {}));\nassert.equal(false, typedArrayLength(x => x * x));\nassert.equal(false, typedArrayLength([]));\n\nassert.equal(1, typedArrayLength(new Int8Array(1)));\nassert.equal(2, typedArrayLength(new Uint8Array(2)));\nassert.equal(3, typedArrayLength(new Uint8ClampedArray(3)));\nassert.equal(4, typedArrayLength(new Int16Array(4)));\nassert.equal(5, typedArrayLength(new Uint16Array(5)));\nassert.equal(6, typedArrayLength(new Int32Array(6)));\nassert.equal(7, typedArrayLength(new Uint32Array(7)));\nassert.equal(8, typedArrayLength(new Float32Array(8)));\nassert.equal(9, typedArrayLength(new Float64Array(9)));\nassert.equal(10, typedArrayLength(new BigInt64Array(10)));\nassert.equal(11, typedArrayLength(new BigUint64Array(11)));\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[1]: https://npmjs.org/package/typed-array-length\n[2]: https://versionbadg.es/inspect-js/typed-array-length.svg\n[5]: https://david-dm.org/inspect-js/typed-array-length.svg\n[6]: https://david-dm.org/inspect-js/typed-array-length\n[7]: https://david-dm.org/inspect-js/typed-array-length/dev-status.svg\n[8]: https://david-dm.org/inspect-js/typed-array-length#info=devDependencies\n[11]: https://nodei.co/npm/typed-array-length.png?downloads=true&stars=true\n[license-image]: http://img.shields.io/npm/l/typed-array-length.svg\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/typed-array-length.svg\n[downloads-url]: http://npm-stat.com/charts.html?package=typed-array-length\n"
        }
    ]
}
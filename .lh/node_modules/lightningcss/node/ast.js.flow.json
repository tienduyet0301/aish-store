{
    "sourceFile": "node_modules/lightningcss/node/ast.js.flow",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892384185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// @flow\n\n/**\n * This file was automatically generated by json-schema-to-typescript.\n * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n * and run json-schema-to-typescript to regenerate this file.\n */\nexport type String = string;\n/**\n * A CSS rule.\n */\nexport type Rule<D = Declaration, M = MediaQuery> =\n  | {|\n      type: \"media\",\n      value: MediaRule<D, M>,\n    |}\n  | {|\n      type: \"import\",\n      value: ImportRule<M>,\n    |}\n  | {|\n      type: \"style\",\n      value: StyleRule<D, M>,\n    |}\n  | {|\n      type: \"keyframes\",\n      value: KeyframesRule<D>,\n    |}\n  | {|\n      type: \"font-face\",\n      value: FontFaceRule,\n    |}\n  | {|\n      type: \"font-palette-values\",\n      value: FontPaletteValuesRule,\n    |}\n  | {|\n      type: \"font-feature-values\",\n      value: FontFeatureValuesRule,\n    |}\n  | {|\n      type: \"page\",\n      value: PageRule<D>,\n    |}\n  | {|\n      type: \"supports\",\n      value: SupportsRule<D, M>,\n    |}\n  | {|\n      type: \"counter-style\",\n      value: CounterStyleRule<D>,\n    |}\n  | {|\n      type: \"namespace\",\n      value: NamespaceRule,\n    |}\n  | {|\n      type: \"moz-document\",\n      value: MozDocumentRule<D, M>,\n    |}\n  | {|\n      type: \"nesting\",\n      value: NestingRule<D, M>,\n    |}\n  | {|\n      type: \"viewport\",\n      value: ViewportRule<D>,\n    |}\n  | {|\n      type: \"custom-media\",\n      value: CustomMediaRule<M>,\n    |}\n  | {|\n      type: \"layer-statement\",\n      value: LayerStatementRule,\n    |}\n  | {|\n      type: \"layer-block\",\n      value: LayerBlockRule<D, M>,\n    |}\n  | {|\n      type: \"property\",\n      value: PropertyRule,\n    |}\n  | {|\n      type: \"container\",\n      value: ContainerRule<D, M>,\n    |}\n  | {|\n      type: \"scope\",\n      value: ScopeRule<D, M>,\n    |}\n  | {|\n      type: \"starting-style\",\n      value: StartingStyleRule<D, M>,\n    |}\n  | {|\n      type: \"view-transition\",\n      value: ViewTransitionRule,\n    |}\n  | {|\n      type: \"ignored\",\n    |}\n  | {|\n      type: \"unknown\",\n      value: UnknownAtRule,\n    |}\n  | {|\n      type: \"custom\",\n      value: DefaultAtRule,\n    |};\n/**\n * Represents a media condition.\n */\nexport type MediaCondition =\n  | {|\n      type: \"feature\",\n      value: QueryFeatureFor_MediaFeatureId,\n    |}\n  | {|\n      type: \"not\",\n      value: MediaCondition,\n    |}\n  | {|\n      /**\n       * The conditions for the operator.\n       */\n      conditions: MediaCondition[],\n\n      /**\n       * The operator for the conditions.\n       */\n      operator: Operator,\n      type: \"operation\",\n    |};\n/**\n * A generic media feature or container feature.\n */\nexport type QueryFeatureFor_MediaFeatureId =\n  | {|\n      /**\n       * The name of the feature.\n       */\n      name: MediaFeatureNameFor_MediaFeatureId,\n      type: \"plain\",\n\n      /**\n       * The feature value.\n       */\n      value: MediaFeatureValue,\n    |}\n  | {|\n      /**\n       * The name of the feature.\n       */\n      name: MediaFeatureNameFor_MediaFeatureId,\n      type: \"boolean\",\n    |}\n  | {|\n      /**\n       * The name of the feature.\n       */\n      name: MediaFeatureNameFor_MediaFeatureId,\n\n      /**\n       * A comparator.\n       */\n      operator: MediaFeatureComparison,\n      type: \"range\",\n\n      /**\n       * The feature value.\n       */\n      value: MediaFeatureValue,\n    |}\n  | {|\n      /**\n       * The end value.\n       */\n      end: MediaFeatureValue,\n\n      /**\n       * A comparator for the end value.\n       */\n      endOperator: MediaFeatureComparison,\n\n      /**\n       * The name of the feature.\n       */\n      name: MediaFeatureNameFor_MediaFeatureId,\n\n      /**\n       * A start value.\n       */\n      start: MediaFeatureValue,\n\n      /**\n       * A comparator for the start value.\n       */\n      startOperator: MediaFeatureComparison,\n      type: \"interval\",\n    |};\n/**\n * A media feature name.\n */\nexport type MediaFeatureNameFor_MediaFeatureId =\n  | MediaFeatureId\n  | String\n  | String;\n/**\n * A media query feature identifier.\n */\nexport type MediaFeatureId =\n  | \"width\"\n  | \"height\"\n  | \"aspect-ratio\"\n  | \"orientation\"\n  | \"overflow-block\"\n  | \"overflow-inline\"\n  | \"horizontal-viewport-segments\"\n  | \"vertical-viewport-segments\"\n  | \"display-mode\"\n  | \"resolution\"\n  | \"scan\"\n  | \"grid\"\n  | \"update\"\n  | \"environment-blending\"\n  | \"color\"\n  | \"color-index\"\n  | \"monochrome\"\n  | \"color-gamut\"\n  | \"dynamic-range\"\n  | \"inverted-colors\"\n  | \"pointer\"\n  | \"hover\"\n  | \"any-pointer\"\n  | \"any-hover\"\n  | \"nav-controls\"\n  | \"video-color-gamut\"\n  | \"video-dynamic-range\"\n  | \"scripting\"\n  | \"prefers-reduced-motion\"\n  | \"prefers-reduced-transparency\"\n  | \"prefers-contrast\"\n  | \"forced-colors\"\n  | \"prefers-color-scheme\"\n  | \"prefers-reduced-data\"\n  | \"device-width\"\n  | \"device-height\"\n  | \"device-aspect-ratio\"\n  | \"-webkit-device-pixel-ratio\"\n  | \"-moz-device-pixel-ratio\";\n/**\n * [media feature value](https://drafts.csswg.org/mediaqueries/#typedef-mf-value) within a media query.\n *\n * See [MediaFeature](MediaFeature).\n */\nexport type MediaFeatureValue =\n  | {|\n      type: \"length\",\n      value: Length,\n    |}\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"integer\",\n      value: number,\n    |}\n  | {|\n      type: \"boolean\",\n      value: boolean,\n    |}\n  | {|\n      type: \"resolution\",\n      value: Resolution,\n    |}\n  | {|\n      type: \"ratio\",\n      value: Ratio,\n    |}\n  | {|\n      type: \"ident\",\n      value: String,\n    |}\n  | {|\n      type: \"env\",\n      value: EnvironmentVariable,\n    |};\n/**\n * A CSS [`<length>`](https://www.w3.org/TR/css-values-4/#lengths) value, with support for `calc()`.\n */\nexport type Length =\n  | {|\n      type: \"value\",\n      value: LengthValue,\n    |}\n  | {|\n      type: \"calc\",\n      value: CalcFor_Length,\n    |};\nexport type LengthUnit =\n  | \"px\"\n  | \"in\"\n  | \"cm\"\n  | \"mm\"\n  | \"q\"\n  | \"pt\"\n  | \"pc\"\n  | \"em\"\n  | \"rem\"\n  | \"ex\"\n  | \"rex\"\n  | \"ch\"\n  | \"rch\"\n  | \"cap\"\n  | \"rcap\"\n  | \"ic\"\n  | \"ric\"\n  | \"lh\"\n  | \"rlh\"\n  | \"vw\"\n  | \"lvw\"\n  | \"svw\"\n  | \"dvw\"\n  | \"cqw\"\n  | \"vh\"\n  | \"lvh\"\n  | \"svh\"\n  | \"dvh\"\n  | \"cqh\"\n  | \"vi\"\n  | \"svi\"\n  | \"lvi\"\n  | \"dvi\"\n  | \"cqi\"\n  | \"vb\"\n  | \"svb\"\n  | \"lvb\"\n  | \"dvb\"\n  | \"cqb\"\n  | \"vmin\"\n  | \"svmin\"\n  | \"lvmin\"\n  | \"dvmin\"\n  | \"cqmin\"\n  | \"vmax\"\n  | \"svmax\"\n  | \"lvmax\"\n  | \"dvmax\"\n  | \"cqmax\";\n/**\n * A mathematical expression used within the [`calc()`](https://www.w3.org/TR/css-values-4/#calc-func) function.\n *\n * This type supports generic value types. Values such as [Length](super::length::Length), [Percentage](super::percentage::Percentage), [Time](super::time::Time), and [Angle](super::angle::Angle) support `calc()` expressions.\n */\nexport type CalcFor_Length =\n  | {|\n      type: \"value\",\n      value: Length,\n    |}\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"sum\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [CalcFor_Length, CalcFor_Length],\n    |}\n  | {|\n      type: \"product\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [number, CalcFor_Length],\n    |}\n  | {|\n      type: \"function\",\n      value: MathFunctionFor_Length,\n    |};\n/**\n * A CSS [math function](https://www.w3.org/TR/css-values-4/#math-function).\n *\n * Math functions may be used in most properties and values that accept numeric values, including lengths, percentages, angles, times, etc.\n */\nexport type MathFunctionFor_Length =\n  | {|\n      type: \"calc\",\n      value: CalcFor_Length,\n    |}\n  | {|\n      type: \"min\",\n      value: CalcFor_Length[],\n    |}\n  | {|\n      type: \"max\",\n      value: CalcFor_Length[],\n    |}\n  | {|\n      type: \"clamp\",\n\n      /**\n       * @minItems 3\n       * @maxItems 3\n       */\n      value: [CalcFor_Length, CalcFor_Length, CalcFor_Length],\n    |}\n  | {|\n      type: \"round\",\n\n      /**\n       * @minItems 3\n       * @maxItems 3\n       */\n      value: [RoundingStrategy, CalcFor_Length, CalcFor_Length],\n    |}\n  | {|\n      type: \"rem\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [CalcFor_Length, CalcFor_Length],\n    |}\n  | {|\n      type: \"mod\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [CalcFor_Length, CalcFor_Length],\n    |}\n  | {|\n      type: \"abs\",\n      value: CalcFor_Length,\n    |}\n  | {|\n      type: \"sign\",\n      value: CalcFor_Length,\n    |}\n  | {|\n      type: \"hypot\",\n      value: CalcFor_Length[],\n    |};\n/**\n * A [rounding strategy](https://www.w3.org/TR/css-values-4/#typedef-rounding-strategy), as used in the `round()` function.\n */\nexport type RoundingStrategy = \"nearest\" | \"up\" | \"down\" | \"to-zero\";\n/**\n * A CSS [`<resolution>`](https://www.w3.org/TR/css-values-4/#resolution) value.\n */\nexport type Resolution =\n  | {|\n      type: \"dpi\",\n      value: number,\n    |}\n  | {|\n      type: \"dpcm\",\n      value: number,\n    |}\n  | {|\n      type: \"dppx\",\n      value: number,\n    |};\n/**\n * A CSS [`<ratio>`](https://www.w3.org/TR/css-values-4/#ratios) value, representing the ratio of two numeric values.\n * @minItems 2\n * @maxItems 2\n */\nexport type Ratio = [number, number];\n/**\n * A raw CSS token, or a parsed value.\n */\nexport type TokenOrValue =\n  | {|\n      type: \"token\",\n      value: Token,\n    |}\n  | {|\n      type: \"color\",\n      value: CssColor,\n    |}\n  | {|\n      type: \"unresolved-color\",\n      value: UnresolvedColor,\n    |}\n  | {|\n      type: \"url\",\n      value: Url,\n    |}\n  | {|\n      type: \"var\",\n      value: Variable,\n    |}\n  | {|\n      type: \"env\",\n      value: EnvironmentVariable,\n    |}\n  | {|\n      type: \"function\",\n      value: Function,\n    |}\n  | {|\n      type: \"length\",\n      value: LengthValue,\n    |}\n  | {|\n      type: \"angle\",\n      value: Angle,\n    |}\n  | {|\n      type: \"time\",\n      value: Time,\n    |}\n  | {|\n      type: \"resolution\",\n      value: Resolution,\n    |}\n  | {|\n      type: \"dashed-ident\",\n      value: String,\n    |}\n  | {|\n      type: \"animation-name\",\n      value: AnimationName,\n    |};\n/**\n * A raw CSS token.\n */\nexport type Token =\n  | {|\n      type: \"ident\",\n      value: String,\n    |}\n  | {|\n      type: \"at-keyword\",\n      value: String,\n    |}\n  | {|\n      type: \"hash\",\n      value: String,\n    |}\n  | {|\n      type: \"id-hash\",\n      value: String,\n    |}\n  | {|\n      type: \"string\",\n      value: String,\n    |}\n  | {|\n      type: \"unquoted-url\",\n      value: String,\n    |}\n  | {|\n      type: \"delim\",\n      value: string,\n    |}\n  | {|\n      type: \"number\",\n\n      /**\n       * The value as a float\n       */\n      value: number,\n    |}\n  | {|\n      type: \"percentage\",\n\n      /**\n       * The value as a float, divided by 100 so that the nominal range is 0.0 to 1.0.\n       */\n      value: number,\n    |}\n  | {|\n      type: \"dimension\",\n\n      /**\n       * The unit, e.g. \"px\" in `12px`\n       */\n      unit: String,\n\n      /**\n       * The value as a float\n       */\n      value: number,\n    |}\n  | {|\n      type: \"white-space\",\n      value: String,\n    |}\n  | {|\n      type: \"comment\",\n      value: String,\n    |}\n  | {|\n      type: \"colon\",\n    |}\n  | {|\n      type: \"semicolon\",\n    |}\n  | {|\n      type: \"comma\",\n    |}\n  | {|\n      type: \"include-match\",\n    |}\n  | {|\n      type: \"dash-match\",\n    |}\n  | {|\n      type: \"prefix-match\",\n    |}\n  | {|\n      type: \"suffix-match\",\n    |}\n  | {|\n      type: \"substring-match\",\n    |}\n  | {|\n      type: \"cdo\",\n    |}\n  | {|\n      type: \"cdc\",\n    |}\n  | {|\n      type: \"function\",\n      value: String,\n    |}\n  | {|\n      type: \"parenthesis-block\",\n    |}\n  | {|\n      type: \"square-bracket-block\",\n    |}\n  | {|\n      type: \"curly-bracket-block\",\n    |}\n  | {|\n      type: \"bad-url\",\n      value: String,\n    |}\n  | {|\n      type: \"bad-string\",\n      value: String,\n    |}\n  | {|\n      type: \"close-parenthesis\",\n    |}\n  | {|\n      type: \"close-square-bracket\",\n    |}\n  | {|\n      type: \"close-curly-bracket\",\n    |};\n/**\n * A CSS [`<color>`](https://www.w3.org/TR/css-color-4/#color-type) value.\n *\n * CSS supports many different color spaces to represent colors. The most common values are stored as RGBA using a single byte per component. Less common values are stored using a `Box` to reduce the amount of memory used per color.\n *\n * Each color space is represented as a struct that implements the `From` and `Into` traits for all other color spaces, so it is possible to convert between color spaces easily. In addition, colors support [interpolation](#method.interpolate) as in the `color-mix()` function.\n */\nexport type CssColor =\n  | CurrentColor\n  | RGBColor\n  | LABColor\n  | PredefinedColor\n  | FloatColor\n  | LightDark\n  | SystemColor;\nexport type CurrentColor = {|\n  type: \"currentcolor\",\n|};\nexport type RGBColor = {|\n  /**\n   * The alpha component.\n   */\n  alpha: number,\n\n  /**\n   * The blue component.\n   */\n  b: number,\n\n  /**\n   * The green component.\n   */\n  g: number,\n\n  /**\n   * The red component.\n   */\n  r: number,\n  type: \"rgb\",\n|};\n/**\n * A color in a LAB color space, including the `lab()`, `lch()`, `oklab()`, and `oklch()` functions.\n */\nexport type LABColor =\n  | {|\n      /**\n       * The a component.\n       */\n      a: number,\n\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The b component.\n       */\n      b: number,\n\n      /**\n       * The lightness component.\n       */\n      l: number,\n      type: \"lab\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The chroma component.\n       */\n      c: number,\n\n      /**\n       * The hue component.\n       */\n      h: number,\n\n      /**\n       * The lightness component.\n       */\n      l: number,\n      type: \"lch\",\n    |}\n  | {|\n      /**\n       * The a component.\n       */\n      a: number,\n\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The b component.\n       */\n      b: number,\n\n      /**\n       * The lightness component.\n       */\n      l: number,\n      type: \"oklab\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The chroma component.\n       */\n      c: number,\n\n      /**\n       * The hue component.\n       */\n      h: number,\n\n      /**\n       * The lightness component.\n       */\n      l: number,\n      type: \"oklch\",\n    |};\n/**\n * A color in a predefined color space, e.g. `display-p3`.\n */\nexport type PredefinedColor =\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The blue component.\n       */\n      b: number,\n\n      /**\n       * The green component.\n       */\n      g: number,\n\n      /**\n       * The red component.\n       */\n      r: number,\n      type: \"srgb\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The blue component.\n       */\n      b: number,\n\n      /**\n       * The green component.\n       */\n      g: number,\n\n      /**\n       * The red component.\n       */\n      r: number,\n      type: \"srgb-linear\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The blue component.\n       */\n      b: number,\n\n      /**\n       * The green component.\n       */\n      g: number,\n\n      /**\n       * The red component.\n       */\n      r: number,\n      type: \"display-p3\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The blue component.\n       */\n      b: number,\n\n      /**\n       * The green component.\n       */\n      g: number,\n\n      /**\n       * The red component.\n       */\n      r: number,\n      type: \"a98-rgb\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The blue component.\n       */\n      b: number,\n\n      /**\n       * The green component.\n       */\n      g: number,\n\n      /**\n       * The red component.\n       */\n      r: number,\n      type: \"prophoto-rgb\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The blue component.\n       */\n      b: number,\n\n      /**\n       * The green component.\n       */\n      g: number,\n\n      /**\n       * The red component.\n       */\n      r: number,\n      type: \"rec2020\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n      type: \"xyz-d50\",\n\n      /**\n       * The x component.\n       */\n      x: number,\n\n      /**\n       * The y component.\n       */\n      y: number,\n\n      /**\n       * The z component.\n       */\n      z: number,\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n      type: \"xyz-d65\",\n\n      /**\n       * The x component.\n       */\n      x: number,\n\n      /**\n       * The y component.\n       */\n      y: number,\n\n      /**\n       * The z component.\n       */\n      z: number,\n    |};\n/**\n * A floating point representation of color types that are usually stored as RGBA. These are used when there are any `none` components, which are represented as NaN.\n */\nexport type FloatColor =\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The blue component.\n       */\n      b: number,\n\n      /**\n       * The green component.\n       */\n      g: number,\n\n      /**\n       * The red component.\n       */\n      r: number,\n      type: \"rgb\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The hue component.\n       */\n      h: number,\n\n      /**\n       * The lightness component.\n       */\n      l: number,\n\n      /**\n       * The saturation component.\n       */\n      s: number,\n      type: \"hsl\",\n    |}\n  | {|\n      /**\n       * The alpha component.\n       */\n      alpha: number,\n\n      /**\n       * The blackness component.\n       */\n      b: number,\n\n      /**\n       * The hue component.\n       */\n      h: number,\n      type: \"hwb\",\n\n      /**\n       * The whiteness component.\n       */\n      w: number,\n    |};\nexport type LightDark = {|\n  dark: CssColor,\n  light: CssColor,\n  type: \"light-dark\",\n|};\n/**\n * A CSS [system color](https://drafts.csswg.org/css-color/#css-system-colors) keyword.\n */\nexport type SystemColor =\n  | \"accentcolor\"\n  | \"accentcolortext\"\n  | \"activetext\"\n  | \"buttonborder\"\n  | \"buttonface\"\n  | \"buttontext\"\n  | \"canvas\"\n  | \"canvastext\"\n  | \"field\"\n  | \"fieldtext\"\n  | \"graytext\"\n  | \"highlight\"\n  | \"highlighttext\"\n  | \"linktext\"\n  | \"mark\"\n  | \"marktext\"\n  | \"selecteditem\"\n  | \"selecteditemtext\"\n  | \"visitedtext\"\n  | \"activeborder\"\n  | \"activecaption\"\n  | \"appworkspace\"\n  | \"background\"\n  | \"buttonhighlight\"\n  | \"buttonshadow\"\n  | \"captiontext\"\n  | \"inactiveborder\"\n  | \"inactivecaption\"\n  | \"inactivecaptiontext\"\n  | \"infobackground\"\n  | \"infotext\"\n  | \"menu\"\n  | \"menutext\"\n  | \"scrollbar\"\n  | \"threeddarkshadow\"\n  | \"threedface\"\n  | \"threedhighlight\"\n  | \"threedlightshadow\"\n  | \"threedshadow\"\n  | \"window\"\n  | \"windowframe\"\n  | \"windowtext\";\n/**\n * A color value with an unresolved alpha value (e.g. a variable). These can be converted from the modern slash syntax to older comma syntax. This can only be done when the only unresolved component is the alpha since variables can resolve to multiple tokens.\n */\nexport type UnresolvedColor =\n  | {|\n      /**\n       * The unresolved alpha component.\n       */\n      alpha: TokenOrValue[],\n\n      /**\n       * The blue component.\n       */\n      b: number,\n\n      /**\n       * The green component.\n       */\n      g: number,\n\n      /**\n       * The red component.\n       */\n      r: number,\n      type: \"rgb\",\n    |}\n  | {|\n      /**\n       * The unresolved alpha component.\n       */\n      alpha: TokenOrValue[],\n\n      /**\n       * The hue component.\n       */\n      h: number,\n\n      /**\n       * The lightness component.\n       */\n      l: number,\n\n      /**\n       * The saturation component.\n       */\n      s: number,\n      type: \"hsl\",\n    |}\n  | {|\n      /**\n       * The dark value.\n       */\n      dark: TokenOrValue[],\n\n      /**\n       * The light value.\n       */\n      light: TokenOrValue[],\n      type: \"light-dark\",\n    |};\n/**\n * Defines where the class names referenced in the `composes` property are located.\n *\n * See [Composes](Composes).\n */\nexport type Specifier =\n  | {|\n      type: \"global\",\n    |}\n  | {|\n      type: \"file\",\n      value: String,\n    |}\n  | {|\n      type: \"source-index\",\n      value: number,\n    |};\n/**\n * A CSS [`<angle>`](https://www.w3.org/TR/css-values-4/#angles) value.\n *\n * Angles may be explicit or computed by `calc()`, but are always stored and serialized as their computed value.\n */\nexport type Angle =\n  | {|\n      type: \"deg\",\n      value: number,\n    |}\n  | {|\n      type: \"rad\",\n      value: number,\n    |}\n  | {|\n      type: \"grad\",\n      value: number,\n    |}\n  | {|\n      type: \"turn\",\n      value: number,\n    |};\n/**\n * A CSS [`<time>`](https://www.w3.org/TR/css-values-4/#time) value, in either seconds or milliseconds.\n *\n * Time values may be explicit or computed by `calc()`, but are always stored and serialized as their computed value.\n */\nexport type Time =\n  | {|\n      type: \"seconds\",\n      value: number,\n    |}\n  | {|\n      type: \"milliseconds\",\n      value: number,\n    |};\n/**\n * A value for the [animation-name](https://drafts.csswg.org/css-animations/#animation-name) property.\n */\nexport type AnimationName =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"ident\",\n      value: String,\n    |}\n  | {|\n      type: \"string\",\n      value: String,\n    |};\n/**\n * A CSS environment variable name.\n */\nexport type EnvironmentVariableName =\n  | {|\n      type: \"ua\",\n      value: UAEnvironmentVariable,\n    |}\n  | {|\n      /**\n       * CSS modules extension: the filename where the variable is defined. Only enabled when the CSS modules `dashed_idents` option is turned on.\n       */\n      from?: Specifier | null,\n\n      /**\n       * The referenced identifier.\n       */\n      ident: String,\n      type: \"custom\",\n    |}\n  | {|\n      type: \"unknown\",\n      value: String,\n    |};\n/**\n * A UA-defined environment variable name.\n */\nexport type UAEnvironmentVariable =\n  | \"safe-area-inset-top\"\n  | \"safe-area-inset-right\"\n  | \"safe-area-inset-bottom\"\n  | \"safe-area-inset-left\"\n  | \"viewport-segment-width\"\n  | \"viewport-segment-height\"\n  | \"viewport-segment-top\"\n  | \"viewport-segment-left\"\n  | \"viewport-segment-bottom\"\n  | \"viewport-segment-right\";\n/**\n * A [comparator](https://drafts.csswg.org/mediaqueries/#typedef-mf-comparison) within a media query.\n */\nexport type MediaFeatureComparison =\n  | \"equal\"\n  | \"greater-than\"\n  | \"greater-than-equal\"\n  | \"less-than\"\n  | \"less-than-equal\";\n/**\n * A binary `and` or `or` operator.\n */\nexport type Operator = \"and\" | \"or\";\nexport type MediaType = string;\n/**\n * A [media query qualifier](https://drafts.csswg.org/mediaqueries/#mq-prefix).\n */\nexport type Qualifier = \"only\" | \"not\";\n/**\n * A [`<supports-condition>`](https://drafts.csswg.org/css-conditional-3/#typedef-supports-condition), as used in the `@supports` and `@import` rules.\n */\nexport type SupportsCondition =\n  | {|\n      type: \"not\",\n      value: SupportsCondition,\n    |}\n  | {|\n      type: \"and\",\n      value: SupportsCondition[],\n    |}\n  | {|\n      type: \"or\",\n      value: SupportsCondition[],\n    |}\n  | {|\n      /**\n       * The property id for the declaration.\n       */\n      propertyId: PropertyId,\n      type: \"declaration\",\n\n      /**\n       * The raw value of the declaration.\n       */\n      value: String,\n    |}\n  | {|\n      type: \"selector\",\n      value: String,\n    |}\n  | {|\n      type: \"unknown\",\n      value: String,\n    |};\nexport type PropertyId =\n  | {|\n      property: \"background-color\",\n    |}\n  | {|\n      property: \"background-image\",\n    |}\n  | {|\n      property: \"background-position-x\",\n    |}\n  | {|\n      property: \"background-position-y\",\n    |}\n  | {|\n      property: \"background-position\",\n    |}\n  | {|\n      property: \"background-size\",\n    |}\n  | {|\n      property: \"background-repeat\",\n    |}\n  | {|\n      property: \"background-attachment\",\n    |}\n  | {|\n      property: \"background-clip\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"background-origin\",\n    |}\n  | {|\n      property: \"background\",\n    |}\n  | {|\n      property: \"box-shadow\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"opacity\",\n    |}\n  | {|\n      property: \"color\",\n    |}\n  | {|\n      property: \"display\",\n    |}\n  | {|\n      property: \"visibility\",\n    |}\n  | {|\n      property: \"width\",\n    |}\n  | {|\n      property: \"height\",\n    |}\n  | {|\n      property: \"min-width\",\n    |}\n  | {|\n      property: \"min-height\",\n    |}\n  | {|\n      property: \"max-width\",\n    |}\n  | {|\n      property: \"max-height\",\n    |}\n  | {|\n      property: \"block-size\",\n    |}\n  | {|\n      property: \"inline-size\",\n    |}\n  | {|\n      property: \"min-block-size\",\n    |}\n  | {|\n      property: \"min-inline-size\",\n    |}\n  | {|\n      property: \"max-block-size\",\n    |}\n  | {|\n      property: \"max-inline-size\",\n    |}\n  | {|\n      property: \"box-sizing\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"aspect-ratio\",\n    |}\n  | {|\n      property: \"overflow\",\n    |}\n  | {|\n      property: \"overflow-x\",\n    |}\n  | {|\n      property: \"overflow-y\",\n    |}\n  | {|\n      property: \"text-overflow\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"position\",\n    |}\n  | {|\n      property: \"top\",\n    |}\n  | {|\n      property: \"bottom\",\n    |}\n  | {|\n      property: \"left\",\n    |}\n  | {|\n      property: \"right\",\n    |}\n  | {|\n      property: \"inset-block-start\",\n    |}\n  | {|\n      property: \"inset-block-end\",\n    |}\n  | {|\n      property: \"inset-inline-start\",\n    |}\n  | {|\n      property: \"inset-inline-end\",\n    |}\n  | {|\n      property: \"inset-block\",\n    |}\n  | {|\n      property: \"inset-inline\",\n    |}\n  | {|\n      property: \"inset\",\n    |}\n  | {|\n      property: \"border-spacing\",\n    |}\n  | {|\n      property: \"border-top-color\",\n    |}\n  | {|\n      property: \"border-bottom-color\",\n    |}\n  | {|\n      property: \"border-left-color\",\n    |}\n  | {|\n      property: \"border-right-color\",\n    |}\n  | {|\n      property: \"border-block-start-color\",\n    |}\n  | {|\n      property: \"border-block-end-color\",\n    |}\n  | {|\n      property: \"border-inline-start-color\",\n    |}\n  | {|\n      property: \"border-inline-end-color\",\n    |}\n  | {|\n      property: \"border-top-style\",\n    |}\n  | {|\n      property: \"border-bottom-style\",\n    |}\n  | {|\n      property: \"border-left-style\",\n    |}\n  | {|\n      property: \"border-right-style\",\n    |}\n  | {|\n      property: \"border-block-start-style\",\n    |}\n  | {|\n      property: \"border-block-end-style\",\n    |}\n  | {|\n      property: \"border-inline-start-style\",\n    |}\n  | {|\n      property: \"border-inline-end-style\",\n    |}\n  | {|\n      property: \"border-top-width\",\n    |}\n  | {|\n      property: \"border-bottom-width\",\n    |}\n  | {|\n      property: \"border-left-width\",\n    |}\n  | {|\n      property: \"border-right-width\",\n    |}\n  | {|\n      property: \"border-block-start-width\",\n    |}\n  | {|\n      property: \"border-block-end-width\",\n    |}\n  | {|\n      property: \"border-inline-start-width\",\n    |}\n  | {|\n      property: \"border-inline-end-width\",\n    |}\n  | {|\n      property: \"border-top-left-radius\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-top-right-radius\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-bottom-left-radius\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-bottom-right-radius\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-start-start-radius\",\n    |}\n  | {|\n      property: \"border-start-end-radius\",\n    |}\n  | {|\n      property: \"border-end-start-radius\",\n    |}\n  | {|\n      property: \"border-end-end-radius\",\n    |}\n  | {|\n      property: \"border-radius\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-image-source\",\n    |}\n  | {|\n      property: \"border-image-outset\",\n    |}\n  | {|\n      property: \"border-image-repeat\",\n    |}\n  | {|\n      property: \"border-image-width\",\n    |}\n  | {|\n      property: \"border-image-slice\",\n    |}\n  | {|\n      property: \"border-image\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-color\",\n    |}\n  | {|\n      property: \"border-style\",\n    |}\n  | {|\n      property: \"border-width\",\n    |}\n  | {|\n      property: \"border-block-color\",\n    |}\n  | {|\n      property: \"border-block-style\",\n    |}\n  | {|\n      property: \"border-block-width\",\n    |}\n  | {|\n      property: \"border-inline-color\",\n    |}\n  | {|\n      property: \"border-inline-style\",\n    |}\n  | {|\n      property: \"border-inline-width\",\n    |}\n  | {|\n      property: \"border\",\n    |}\n  | {|\n      property: \"border-top\",\n    |}\n  | {|\n      property: \"border-bottom\",\n    |}\n  | {|\n      property: \"border-left\",\n    |}\n  | {|\n      property: \"border-right\",\n    |}\n  | {|\n      property: \"border-block\",\n    |}\n  | {|\n      property: \"border-block-start\",\n    |}\n  | {|\n      property: \"border-block-end\",\n    |}\n  | {|\n      property: \"border-inline\",\n    |}\n  | {|\n      property: \"border-inline-start\",\n    |}\n  | {|\n      property: \"border-inline-end\",\n    |}\n  | {|\n      property: \"outline\",\n    |}\n  | {|\n      property: \"outline-color\",\n    |}\n  | {|\n      property: \"outline-style\",\n    |}\n  | {|\n      property: \"outline-width\",\n    |}\n  | {|\n      property: \"flex-direction\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-wrap\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-flow\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-grow\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-shrink\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-basis\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"order\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"align-content\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"justify-content\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"place-content\",\n    |}\n  | {|\n      property: \"align-self\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"justify-self\",\n    |}\n  | {|\n      property: \"place-self\",\n    |}\n  | {|\n      property: \"align-items\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"justify-items\",\n    |}\n  | {|\n      property: \"place-items\",\n    |}\n  | {|\n      property: \"row-gap\",\n    |}\n  | {|\n      property: \"column-gap\",\n    |}\n  | {|\n      property: \"gap\",\n    |}\n  | {|\n      property: \"box-orient\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-direction\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-ordinal-group\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-align\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-flex\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-flex-group\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-pack\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-lines\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-pack\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-order\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-align\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-item-align\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-line-pack\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-positive\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-negative\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-preferred-size\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"grid-template-columns\",\n    |}\n  | {|\n      property: \"grid-template-rows\",\n    |}\n  | {|\n      property: \"grid-auto-columns\",\n    |}\n  | {|\n      property: \"grid-auto-rows\",\n    |}\n  | {|\n      property: \"grid-auto-flow\",\n    |}\n  | {|\n      property: \"grid-template-areas\",\n    |}\n  | {|\n      property: \"grid-template\",\n    |}\n  | {|\n      property: \"grid\",\n    |}\n  | {|\n      property: \"grid-row-start\",\n    |}\n  | {|\n      property: \"grid-row-end\",\n    |}\n  | {|\n      property: \"grid-column-start\",\n    |}\n  | {|\n      property: \"grid-column-end\",\n    |}\n  | {|\n      property: \"grid-row\",\n    |}\n  | {|\n      property: \"grid-column\",\n    |}\n  | {|\n      property: \"grid-area\",\n    |}\n  | {|\n      property: \"margin-top\",\n    |}\n  | {|\n      property: \"margin-bottom\",\n    |}\n  | {|\n      property: \"margin-left\",\n    |}\n  | {|\n      property: \"margin-right\",\n    |}\n  | {|\n      property: \"margin-block-start\",\n    |}\n  | {|\n      property: \"margin-block-end\",\n    |}\n  | {|\n      property: \"margin-inline-start\",\n    |}\n  | {|\n      property: \"margin-inline-end\",\n    |}\n  | {|\n      property: \"margin-block\",\n    |}\n  | {|\n      property: \"margin-inline\",\n    |}\n  | {|\n      property: \"margin\",\n    |}\n  | {|\n      property: \"padding-top\",\n    |}\n  | {|\n      property: \"padding-bottom\",\n    |}\n  | {|\n      property: \"padding-left\",\n    |}\n  | {|\n      property: \"padding-right\",\n    |}\n  | {|\n      property: \"padding-block-start\",\n    |}\n  | {|\n      property: \"padding-block-end\",\n    |}\n  | {|\n      property: \"padding-inline-start\",\n    |}\n  | {|\n      property: \"padding-inline-end\",\n    |}\n  | {|\n      property: \"padding-block\",\n    |}\n  | {|\n      property: \"padding-inline\",\n    |}\n  | {|\n      property: \"padding\",\n    |}\n  | {|\n      property: \"scroll-margin-top\",\n    |}\n  | {|\n      property: \"scroll-margin-bottom\",\n    |}\n  | {|\n      property: \"scroll-margin-left\",\n    |}\n  | {|\n      property: \"scroll-margin-right\",\n    |}\n  | {|\n      property: \"scroll-margin-block-start\",\n    |}\n  | {|\n      property: \"scroll-margin-block-end\",\n    |}\n  | {|\n      property: \"scroll-margin-inline-start\",\n    |}\n  | {|\n      property: \"scroll-margin-inline-end\",\n    |}\n  | {|\n      property: \"scroll-margin-block\",\n    |}\n  | {|\n      property: \"scroll-margin-inline\",\n    |}\n  | {|\n      property: \"scroll-margin\",\n    |}\n  | {|\n      property: \"scroll-padding-top\",\n    |}\n  | {|\n      property: \"scroll-padding-bottom\",\n    |}\n  | {|\n      property: \"scroll-padding-left\",\n    |}\n  | {|\n      property: \"scroll-padding-right\",\n    |}\n  | {|\n      property: \"scroll-padding-block-start\",\n    |}\n  | {|\n      property: \"scroll-padding-block-end\",\n    |}\n  | {|\n      property: \"scroll-padding-inline-start\",\n    |}\n  | {|\n      property: \"scroll-padding-inline-end\",\n    |}\n  | {|\n      property: \"scroll-padding-block\",\n    |}\n  | {|\n      property: \"scroll-padding-inline\",\n    |}\n  | {|\n      property: \"scroll-padding\",\n    |}\n  | {|\n      property: \"font-weight\",\n    |}\n  | {|\n      property: \"font-size\",\n    |}\n  | {|\n      property: \"font-stretch\",\n    |}\n  | {|\n      property: \"font-family\",\n    |}\n  | {|\n      property: \"font-style\",\n    |}\n  | {|\n      property: \"font-variant-caps\",\n    |}\n  | {|\n      property: \"line-height\",\n    |}\n  | {|\n      property: \"font\",\n    |}\n  | {|\n      property: \"vertical-align\",\n    |}\n  | {|\n      property: \"font-palette\",\n    |}\n  | {|\n      property: \"transition-property\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transition-duration\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transition-delay\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transition-timing-function\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transition\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-name\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-duration\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-timing-function\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-iteration-count\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-direction\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-play-state\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-delay\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-fill-mode\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-composition\",\n    |}\n  | {|\n      property: \"animation-timeline\",\n    |}\n  | {|\n      property: \"animation-range-start\",\n    |}\n  | {|\n      property: \"animation-range-end\",\n    |}\n  | {|\n      property: \"animation-range\",\n    |}\n  | {|\n      property: \"animation\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transform\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transform-origin\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transform-style\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transform-box\",\n    |}\n  | {|\n      property: \"backface-visibility\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"perspective\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"perspective-origin\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"translate\",\n    |}\n  | {|\n      property: \"rotate\",\n    |}\n  | {|\n      property: \"scale\",\n    |}\n  | {|\n      property: \"text-transform\",\n    |}\n  | {|\n      property: \"white-space\",\n    |}\n  | {|\n      property: \"tab-size\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"word-break\",\n    |}\n  | {|\n      property: \"line-break\",\n    |}\n  | {|\n      property: \"hyphens\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"overflow-wrap\",\n    |}\n  | {|\n      property: \"word-wrap\",\n    |}\n  | {|\n      property: \"text-align\",\n    |}\n  | {|\n      property: \"text-align-last\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-justify\",\n    |}\n  | {|\n      property: \"word-spacing\",\n    |}\n  | {|\n      property: \"letter-spacing\",\n    |}\n  | {|\n      property: \"text-indent\",\n    |}\n  | {|\n      property: \"text-decoration-line\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-decoration-style\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-decoration-color\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-decoration-thickness\",\n    |}\n  | {|\n      property: \"text-decoration\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-decoration-skip-ink\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-emphasis-style\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-emphasis-color\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-emphasis\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-emphasis-position\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-shadow\",\n    |}\n  | {|\n      property: \"text-size-adjust\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"direction\",\n    |}\n  | {|\n      property: \"unicode-bidi\",\n    |}\n  | {|\n      property: \"box-decoration-break\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"resize\",\n    |}\n  | {|\n      property: \"cursor\",\n    |}\n  | {|\n      property: \"caret-color\",\n    |}\n  | {|\n      property: \"caret-shape\",\n    |}\n  | {|\n      property: \"caret\",\n    |}\n  | {|\n      property: \"user-select\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"accent-color\",\n    |}\n  | {|\n      property: \"appearance\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"list-style-type\",\n    |}\n  | {|\n      property: \"list-style-image\",\n    |}\n  | {|\n      property: \"list-style-position\",\n    |}\n  | {|\n      property: \"list-style\",\n    |}\n  | {|\n      property: \"marker-side\",\n    |}\n  | {|\n      property: \"composes\",\n    |}\n  | {|\n      property: \"fill\",\n    |}\n  | {|\n      property: \"fill-rule\",\n    |}\n  | {|\n      property: \"fill-opacity\",\n    |}\n  | {|\n      property: \"stroke\",\n    |}\n  | {|\n      property: \"stroke-opacity\",\n    |}\n  | {|\n      property: \"stroke-width\",\n    |}\n  | {|\n      property: \"stroke-linecap\",\n    |}\n  | {|\n      property: \"stroke-linejoin\",\n    |}\n  | {|\n      property: \"stroke-miterlimit\",\n    |}\n  | {|\n      property: \"stroke-dasharray\",\n    |}\n  | {|\n      property: \"stroke-dashoffset\",\n    |}\n  | {|\n      property: \"marker-start\",\n    |}\n  | {|\n      property: \"marker-mid\",\n    |}\n  | {|\n      property: \"marker-end\",\n    |}\n  | {|\n      property: \"marker\",\n    |}\n  | {|\n      property: \"color-interpolation\",\n    |}\n  | {|\n      property: \"color-interpolation-filters\",\n    |}\n  | {|\n      property: \"color-rendering\",\n    |}\n  | {|\n      property: \"shape-rendering\",\n    |}\n  | {|\n      property: \"text-rendering\",\n    |}\n  | {|\n      property: \"image-rendering\",\n    |}\n  | {|\n      property: \"clip-path\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"clip-rule\",\n    |}\n  | {|\n      property: \"mask-image\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-mode\",\n    |}\n  | {|\n      property: \"mask-repeat\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-position-x\",\n    |}\n  | {|\n      property: \"mask-position-y\",\n    |}\n  | {|\n      property: \"mask-position\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-clip\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-origin\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-size\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-composite\",\n    |}\n  | {|\n      property: \"mask-type\",\n    |}\n  | {|\n      property: \"mask\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-border-source\",\n    |}\n  | {|\n      property: \"mask-border-mode\",\n    |}\n  | {|\n      property: \"mask-border-slice\",\n    |}\n  | {|\n      property: \"mask-border-width\",\n    |}\n  | {|\n      property: \"mask-border-outset\",\n    |}\n  | {|\n      property: \"mask-border-repeat\",\n    |}\n  | {|\n      property: \"mask-border\",\n    |}\n  | {|\n      property: \"-webkit-mask-composite\",\n    |}\n  | {|\n      property: \"mask-source-type\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-source\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-slice\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-width\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-outset\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-repeat\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"filter\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"backdrop-filter\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"z-index\",\n    |}\n  | {|\n      property: \"container-type\",\n    |}\n  | {|\n      property: \"container-name\",\n    |}\n  | {|\n      property: \"container\",\n    |}\n  | {|\n      property: \"view-transition-name\",\n    |}\n  | {|\n      property: \"view-transition-class\",\n    |}\n  | {|\n      property: \"view-transition-group\",\n    |}\n  | {|\n      property: \"color-scheme\",\n    |}\n  | {|\n      property: \"all\",\n    |}\n  | {|\n      property: string,\n    |};\nexport type Prefix = \"none\" | \"webkit\" | \"moz\" | \"ms\" | \"o\";\nexport type VendorPrefix = Prefix[];\nexport type Declaration =\n  | {|\n      property: \"background-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"background-image\",\n      value: Image[],\n    |}\n  | {|\n      property: \"background-position-x\",\n      value: PositionComponentFor_HorizontalPositionKeyword[],\n    |}\n  | {|\n      property: \"background-position-y\",\n      value: PositionComponentFor_VerticalPositionKeyword[],\n    |}\n  | {|\n      property: \"background-position\",\n      value: BackgroundPosition[],\n    |}\n  | {|\n      property: \"background-size\",\n      value: BackgroundSize[],\n    |}\n  | {|\n      property: \"background-repeat\",\n      value: BackgroundRepeat[],\n    |}\n  | {|\n      property: \"background-attachment\",\n      value: BackgroundAttachment[],\n    |}\n  | {|\n      property: \"background-clip\",\n      value: BackgroundClip[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"background-origin\",\n      value: BackgroundOrigin[],\n    |}\n  | {|\n      property: \"background\",\n      value: Background[],\n    |}\n  | {|\n      property: \"box-shadow\",\n      value: BoxShadow[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"opacity\",\n      value: number,\n    |}\n  | {|\n      property: \"color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"display\",\n      value: Display,\n    |}\n  | {|\n      property: \"visibility\",\n      value: Visibility,\n    |}\n  | {|\n      property: \"width\",\n      value: Size,\n    |}\n  | {|\n      property: \"height\",\n      value: Size,\n    |}\n  | {|\n      property: \"min-width\",\n      value: Size,\n    |}\n  | {|\n      property: \"min-height\",\n      value: Size,\n    |}\n  | {|\n      property: \"max-width\",\n      value: MaxSize,\n    |}\n  | {|\n      property: \"max-height\",\n      value: MaxSize,\n    |}\n  | {|\n      property: \"block-size\",\n      value: Size,\n    |}\n  | {|\n      property: \"inline-size\",\n      value: Size,\n    |}\n  | {|\n      property: \"min-block-size\",\n      value: Size,\n    |}\n  | {|\n      property: \"min-inline-size\",\n      value: Size,\n    |}\n  | {|\n      property: \"max-block-size\",\n      value: MaxSize,\n    |}\n  | {|\n      property: \"max-inline-size\",\n      value: MaxSize,\n    |}\n  | {|\n      property: \"box-sizing\",\n      value: BoxSizing,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"aspect-ratio\",\n      value: AspectRatio,\n    |}\n  | {|\n      property: \"overflow\",\n      value: Overflow,\n    |}\n  | {|\n      property: \"overflow-x\",\n      value: OverflowKeyword,\n    |}\n  | {|\n      property: \"overflow-y\",\n      value: OverflowKeyword,\n    |}\n  | {|\n      property: \"text-overflow\",\n      value: TextOverflow,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"position\",\n      value: Position2,\n    |}\n  | {|\n      property: \"top\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"bottom\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"left\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"right\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"inset-block-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"inset-block-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"inset-inline-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"inset-inline-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"inset-block\",\n      value: InsetBlock,\n    |}\n  | {|\n      property: \"inset-inline\",\n      value: InsetInline,\n    |}\n  | {|\n      property: \"inset\",\n      value: Inset,\n    |}\n  | {|\n      property: \"border-spacing\",\n      value: Size2DFor_Length,\n    |}\n  | {|\n      property: \"border-top-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"border-bottom-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"border-left-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"border-right-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"border-block-start-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"border-block-end-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"border-inline-start-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"border-inline-end-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"border-top-style\",\n      value: LineStyle,\n    |}\n  | {|\n      property: \"border-bottom-style\",\n      value: LineStyle,\n    |}\n  | {|\n      property: \"border-left-style\",\n      value: LineStyle,\n    |}\n  | {|\n      property: \"border-right-style\",\n      value: LineStyle,\n    |}\n  | {|\n      property: \"border-block-start-style\",\n      value: LineStyle,\n    |}\n  | {|\n      property: \"border-block-end-style\",\n      value: LineStyle,\n    |}\n  | {|\n      property: \"border-inline-start-style\",\n      value: LineStyle,\n    |}\n  | {|\n      property: \"border-inline-end-style\",\n      value: LineStyle,\n    |}\n  | {|\n      property: \"border-top-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"border-bottom-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"border-left-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"border-right-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"border-block-start-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"border-block-end-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"border-inline-start-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"border-inline-end-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"border-top-left-radius\",\n      value: Size2DFor_DimensionPercentageFor_LengthValue,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-top-right-radius\",\n      value: Size2DFor_DimensionPercentageFor_LengthValue,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-bottom-left-radius\",\n      value: Size2DFor_DimensionPercentageFor_LengthValue,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-bottom-right-radius\",\n      value: Size2DFor_DimensionPercentageFor_LengthValue,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-start-start-radius\",\n      value: Size2DFor_DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      property: \"border-start-end-radius\",\n      value: Size2DFor_DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      property: \"border-end-start-radius\",\n      value: Size2DFor_DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      property: \"border-end-end-radius\",\n      value: Size2DFor_DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      property: \"border-radius\",\n      value: BorderRadius,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-image-source\",\n      value: Image,\n    |}\n  | {|\n      property: \"border-image-outset\",\n      value: RectFor_LengthOrNumber,\n    |}\n  | {|\n      property: \"border-image-repeat\",\n      value: BorderImageRepeat,\n    |}\n  | {|\n      property: \"border-image-width\",\n      value: RectFor_BorderImageSideWidth,\n    |}\n  | {|\n      property: \"border-image-slice\",\n      value: BorderImageSlice,\n    |}\n  | {|\n      property: \"border-image\",\n      value: BorderImage,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"border-color\",\n      value: BorderColor,\n    |}\n  | {|\n      property: \"border-style\",\n      value: BorderStyle,\n    |}\n  | {|\n      property: \"border-width\",\n      value: BorderWidth,\n    |}\n  | {|\n      property: \"border-block-color\",\n      value: BorderBlockColor,\n    |}\n  | {|\n      property: \"border-block-style\",\n      value: BorderBlockStyle,\n    |}\n  | {|\n      property: \"border-block-width\",\n      value: BorderBlockWidth,\n    |}\n  | {|\n      property: \"border-inline-color\",\n      value: BorderInlineColor,\n    |}\n  | {|\n      property: \"border-inline-style\",\n      value: BorderInlineStyle,\n    |}\n  | {|\n      property: \"border-inline-width\",\n      value: BorderInlineWidth,\n    |}\n  | {|\n      property: \"border\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-top\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-bottom\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-left\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-right\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-block\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-block-start\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-block-end\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-inline\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-inline-start\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"border-inline-end\",\n      value: GenericBorderFor_LineStyle,\n    |}\n  | {|\n      property: \"outline\",\n      value: GenericBorderFor_OutlineStyleAnd_11,\n    |}\n  | {|\n      property: \"outline-color\",\n      value: CssColor,\n    |}\n  | {|\n      property: \"outline-style\",\n      value: OutlineStyle,\n    |}\n  | {|\n      property: \"outline-width\",\n      value: BorderSideWidth,\n    |}\n  | {|\n      property: \"flex-direction\",\n      value: FlexDirection,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-wrap\",\n      value: FlexWrap,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-flow\",\n      value: FlexFlow,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-grow\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-shrink\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-basis\",\n      value: LengthPercentageOrAuto,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex\",\n      value: Flex,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"order\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"align-content\",\n      value: AlignContent,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"justify-content\",\n      value: JustifyContent,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"place-content\",\n      value: PlaceContent,\n    |}\n  | {|\n      property: \"align-self\",\n      value: AlignSelf,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"justify-self\",\n      value: JustifySelf,\n    |}\n  | {|\n      property: \"place-self\",\n      value: PlaceSelf,\n    |}\n  | {|\n      property: \"align-items\",\n      value: AlignItems,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"justify-items\",\n      value: JustifyItems,\n    |}\n  | {|\n      property: \"place-items\",\n      value: PlaceItems,\n    |}\n  | {|\n      property: \"row-gap\",\n      value: GapValue,\n    |}\n  | {|\n      property: \"column-gap\",\n      value: GapValue,\n    |}\n  | {|\n      property: \"gap\",\n      value: Gap,\n    |}\n  | {|\n      property: \"box-orient\",\n      value: BoxOrient,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-direction\",\n      value: BoxDirection,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-ordinal-group\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-align\",\n      value: BoxAlign,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-flex\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-flex-group\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-pack\",\n      value: BoxPack,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"box-lines\",\n      value: BoxLines,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-pack\",\n      value: FlexPack,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-order\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-align\",\n      value: BoxAlign,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-item-align\",\n      value: FlexItemAlign,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-line-pack\",\n      value: FlexLinePack,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-positive\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-negative\",\n      value: number,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"flex-preferred-size\",\n      value: LengthPercentageOrAuto,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"grid-template-columns\",\n      value: TrackSizing,\n    |}\n  | {|\n      property: \"grid-template-rows\",\n      value: TrackSizing,\n    |}\n  | {|\n      property: \"grid-auto-columns\",\n      value: TrackSize[],\n    |}\n  | {|\n      property: \"grid-auto-rows\",\n      value: TrackSize[],\n    |}\n  | {|\n      property: \"grid-auto-flow\",\n      value: GridAutoFlow,\n    |}\n  | {|\n      property: \"grid-template-areas\",\n      value: GridTemplateAreas,\n    |}\n  | {|\n      property: \"grid-template\",\n      value: GridTemplate,\n    |}\n  | {|\n      property: \"grid\",\n      value: Grid,\n    |}\n  | {|\n      property: \"grid-row-start\",\n      value: GridLine,\n    |}\n  | {|\n      property: \"grid-row-end\",\n      value: GridLine,\n    |}\n  | {|\n      property: \"grid-column-start\",\n      value: GridLine,\n    |}\n  | {|\n      property: \"grid-column-end\",\n      value: GridLine,\n    |}\n  | {|\n      property: \"grid-row\",\n      value: GridRow,\n    |}\n  | {|\n      property: \"grid-column\",\n      value: GridColumn,\n    |}\n  | {|\n      property: \"grid-area\",\n      value: GridArea,\n    |}\n  | {|\n      property: \"margin-top\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"margin-bottom\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"margin-left\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"margin-right\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"margin-block-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"margin-block-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"margin-inline-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"margin-inline-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"margin-block\",\n      value: MarginBlock,\n    |}\n  | {|\n      property: \"margin-inline\",\n      value: MarginInline,\n    |}\n  | {|\n      property: \"margin\",\n      value: Margin,\n    |}\n  | {|\n      property: \"padding-top\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"padding-bottom\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"padding-left\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"padding-right\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"padding-block-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"padding-block-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"padding-inline-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"padding-inline-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"padding-block\",\n      value: PaddingBlock,\n    |}\n  | {|\n      property: \"padding-inline\",\n      value: PaddingInline,\n    |}\n  | {|\n      property: \"padding\",\n      value: Padding,\n    |}\n  | {|\n      property: \"scroll-margin-top\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-margin-bottom\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-margin-left\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-margin-right\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-margin-block-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-margin-block-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-margin-inline-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-margin-inline-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-margin-block\",\n      value: ScrollMarginBlock,\n    |}\n  | {|\n      property: \"scroll-margin-inline\",\n      value: ScrollMarginInline,\n    |}\n  | {|\n      property: \"scroll-margin\",\n      value: ScrollMargin,\n    |}\n  | {|\n      property: \"scroll-padding-top\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-padding-bottom\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-padding-left\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-padding-right\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-padding-block-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-padding-block-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-padding-inline-start\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-padding-inline-end\",\n      value: LengthPercentageOrAuto,\n    |}\n  | {|\n      property: \"scroll-padding-block\",\n      value: ScrollPaddingBlock,\n    |}\n  | {|\n      property: \"scroll-padding-inline\",\n      value: ScrollPaddingInline,\n    |}\n  | {|\n      property: \"scroll-padding\",\n      value: ScrollPadding,\n    |}\n  | {|\n      property: \"font-weight\",\n      value: FontWeight,\n    |}\n  | {|\n      property: \"font-size\",\n      value: FontSize,\n    |}\n  | {|\n      property: \"font-stretch\",\n      value: FontStretch,\n    |}\n  | {|\n      property: \"font-family\",\n      value: FontFamily[],\n    |}\n  | {|\n      property: \"font-style\",\n      value: FontStyle,\n    |}\n  | {|\n      property: \"font-variant-caps\",\n      value: FontVariantCaps,\n    |}\n  | {|\n      property: \"line-height\",\n      value: LineHeight,\n    |}\n  | {|\n      property: \"font\",\n      value: Font,\n    |}\n  | {|\n      property: \"vertical-align\",\n      value: VerticalAlign,\n    |}\n  | {|\n      property: \"font-palette\",\n      value: DashedIdentReference,\n    |}\n  | {|\n      property: \"transition-property\",\n      value: PropertyId[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transition-duration\",\n      value: Time[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transition-delay\",\n      value: Time[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transition-timing-function\",\n      value: EasingFunction[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transition\",\n      value: Transition[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-name\",\n      value: AnimationName[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-duration\",\n      value: Time[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-timing-function\",\n      value: EasingFunction[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-iteration-count\",\n      value: AnimationIterationCount[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-direction\",\n      value: AnimationDirection[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-play-state\",\n      value: AnimationPlayState[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-delay\",\n      value: Time[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-fill-mode\",\n      value: AnimationFillMode[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"animation-composition\",\n      value: AnimationComposition[],\n    |}\n  | {|\n      property: \"animation-timeline\",\n      value: AnimationTimeline[],\n    |}\n  | {|\n      property: \"animation-range-start\",\n      value: AnimationRangeStart[],\n    |}\n  | {|\n      property: \"animation-range-end\",\n      value: AnimationRangeEnd[],\n    |}\n  | {|\n      property: \"animation-range\",\n      value: AnimationRange[],\n    |}\n  | {|\n      property: \"animation\",\n      value: Animation[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transform\",\n      value: Transform[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transform-origin\",\n      value: Position,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transform-style\",\n      value: TransformStyle,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"transform-box\",\n      value: TransformBox,\n    |}\n  | {|\n      property: \"backface-visibility\",\n      value: BackfaceVisibility,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"perspective\",\n      value: Perspective,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"perspective-origin\",\n      value: Position,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"translate\",\n      value: Translate,\n    |}\n  | {|\n      property: \"rotate\",\n      value: Rotate,\n    |}\n  | {|\n      property: \"scale\",\n      value: Scale,\n    |}\n  | {|\n      property: \"text-transform\",\n      value: TextTransform,\n    |}\n  | {|\n      property: \"white-space\",\n      value: WhiteSpace,\n    |}\n  | {|\n      property: \"tab-size\",\n      value: LengthOrNumber,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"word-break\",\n      value: WordBreak,\n    |}\n  | {|\n      property: \"line-break\",\n      value: LineBreak,\n    |}\n  | {|\n      property: \"hyphens\",\n      value: Hyphens,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"overflow-wrap\",\n      value: OverflowWrap,\n    |}\n  | {|\n      property: \"word-wrap\",\n      value: OverflowWrap,\n    |}\n  | {|\n      property: \"text-align\",\n      value: TextAlign,\n    |}\n  | {|\n      property: \"text-align-last\",\n      value: TextAlignLast,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-justify\",\n      value: TextJustify,\n    |}\n  | {|\n      property: \"word-spacing\",\n      value: Spacing,\n    |}\n  | {|\n      property: \"letter-spacing\",\n      value: Spacing,\n    |}\n  | {|\n      property: \"text-indent\",\n      value: TextIndent,\n    |}\n  | {|\n      property: \"text-decoration-line\",\n      value: TextDecorationLine,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-decoration-style\",\n      value: TextDecorationStyle,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-decoration-color\",\n      value: CssColor,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-decoration-thickness\",\n      value: TextDecorationThickness,\n    |}\n  | {|\n      property: \"text-decoration\",\n      value: TextDecoration,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-decoration-skip-ink\",\n      value: TextDecorationSkipInk,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-emphasis-style\",\n      value: TextEmphasisStyle,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-emphasis-color\",\n      value: CssColor,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-emphasis\",\n      value: TextEmphasis,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-emphasis-position\",\n      value: TextEmphasisPosition,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"text-shadow\",\n      value: TextShadow[],\n    |}\n  | {|\n      property: \"text-size-adjust\",\n      value: TextSizeAdjust,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"direction\",\n      value: Direction2,\n    |}\n  | {|\n      property: \"unicode-bidi\",\n      value: UnicodeBidi,\n    |}\n  | {|\n      property: \"box-decoration-break\",\n      value: BoxDecorationBreak,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"resize\",\n      value: Resize,\n    |}\n  | {|\n      property: \"cursor\",\n      value: Cursor,\n    |}\n  | {|\n      property: \"caret-color\",\n      value: ColorOrAuto,\n    |}\n  | {|\n      property: \"caret-shape\",\n      value: CaretShape,\n    |}\n  | {|\n      property: \"caret\",\n      value: Caret,\n    |}\n  | {|\n      property: \"user-select\",\n      value: UserSelect,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"accent-color\",\n      value: ColorOrAuto,\n    |}\n  | {|\n      property: \"appearance\",\n      value: Appearance,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"list-style-type\",\n      value: ListStyleType,\n    |}\n  | {|\n      property: \"list-style-image\",\n      value: Image,\n    |}\n  | {|\n      property: \"list-style-position\",\n      value: ListStylePosition,\n    |}\n  | {|\n      property: \"list-style\",\n      value: ListStyle,\n    |}\n  | {|\n      property: \"marker-side\",\n      value: MarkerSide,\n    |}\n  | {|\n      property: \"composes\",\n      value: Composes,\n    |}\n  | {|\n      property: \"fill\",\n      value: SVGPaint,\n    |}\n  | {|\n      property: \"fill-rule\",\n      value: FillRule,\n    |}\n  | {|\n      property: \"fill-opacity\",\n      value: number,\n    |}\n  | {|\n      property: \"stroke\",\n      value: SVGPaint,\n    |}\n  | {|\n      property: \"stroke-opacity\",\n      value: number,\n    |}\n  | {|\n      property: \"stroke-width\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      property: \"stroke-linecap\",\n      value: StrokeLinecap,\n    |}\n  | {|\n      property: \"stroke-linejoin\",\n      value: StrokeLinejoin,\n    |}\n  | {|\n      property: \"stroke-miterlimit\",\n      value: number,\n    |}\n  | {|\n      property: \"stroke-dasharray\",\n      value: StrokeDasharray,\n    |}\n  | {|\n      property: \"stroke-dashoffset\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      property: \"marker-start\",\n      value: Marker,\n    |}\n  | {|\n      property: \"marker-mid\",\n      value: Marker,\n    |}\n  | {|\n      property: \"marker-end\",\n      value: Marker,\n    |}\n  | {|\n      property: \"marker\",\n      value: Marker,\n    |}\n  | {|\n      property: \"color-interpolation\",\n      value: ColorInterpolation,\n    |}\n  | {|\n      property: \"color-interpolation-filters\",\n      value: ColorInterpolation,\n    |}\n  | {|\n      property: \"color-rendering\",\n      value: ColorRendering,\n    |}\n  | {|\n      property: \"shape-rendering\",\n      value: ShapeRendering,\n    |}\n  | {|\n      property: \"text-rendering\",\n      value: TextRendering,\n    |}\n  | {|\n      property: \"image-rendering\",\n      value: ImageRendering,\n    |}\n  | {|\n      property: \"clip-path\",\n      value: ClipPath,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"clip-rule\",\n      value: FillRule,\n    |}\n  | {|\n      property: \"mask-image\",\n      value: Image[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-mode\",\n      value: MaskMode[],\n    |}\n  | {|\n      property: \"mask-repeat\",\n      value: BackgroundRepeat[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-position-x\",\n      value: PositionComponentFor_HorizontalPositionKeyword[],\n    |}\n  | {|\n      property: \"mask-position-y\",\n      value: PositionComponentFor_VerticalPositionKeyword[],\n    |}\n  | {|\n      property: \"mask-position\",\n      value: Position[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-clip\",\n      value: MaskClip[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-origin\",\n      value: GeometryBox[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-size\",\n      value: BackgroundSize[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-composite\",\n      value: MaskComposite[],\n    |}\n  | {|\n      property: \"mask-type\",\n      value: MaskType,\n    |}\n  | {|\n      property: \"mask\",\n      value: Mask[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-border-source\",\n      value: Image,\n    |}\n  | {|\n      property: \"mask-border-mode\",\n      value: MaskBorderMode,\n    |}\n  | {|\n      property: \"mask-border-slice\",\n      value: BorderImageSlice,\n    |}\n  | {|\n      property: \"mask-border-width\",\n      value: RectFor_BorderImageSideWidth,\n    |}\n  | {|\n      property: \"mask-border-outset\",\n      value: RectFor_LengthOrNumber,\n    |}\n  | {|\n      property: \"mask-border-repeat\",\n      value: BorderImageRepeat,\n    |}\n  | {|\n      property: \"mask-border\",\n      value: MaskBorder,\n    |}\n  | {|\n      property: \"-webkit-mask-composite\",\n      value: WebKitMaskComposite[],\n    |}\n  | {|\n      property: \"mask-source-type\",\n      value: WebKitMaskSourceType[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image\",\n      value: BorderImage,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-source\",\n      value: Image,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-slice\",\n      value: BorderImageSlice,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-width\",\n      value: RectFor_BorderImageSideWidth,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-outset\",\n      value: RectFor_LengthOrNumber,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"mask-box-image-repeat\",\n      value: BorderImageRepeat,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"filter\",\n      value: FilterList,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"backdrop-filter\",\n      value: FilterList,\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      property: \"z-index\",\n      value: ZIndex,\n    |}\n  | {|\n      property: \"container-type\",\n      value: ContainerType,\n    |}\n  | {|\n      property: \"container-name\",\n      value: ContainerNameList,\n    |}\n  | {|\n      property: \"container\",\n      value: Container,\n    |}\n  | {|\n      property: \"view-transition-name\",\n      value: ViewTransitionName,\n    |}\n  | {|\n      property: \"view-transition-class\",\n      value: NoneOrCustomIdentList,\n    |}\n  | {|\n      property: \"view-transition-group\",\n      value: ViewTransitionGroup,\n    |}\n  | {|\n      property: \"color-scheme\",\n      value: ColorScheme,\n    |}\n  | {|\n      property: \"all\",\n      value: CSSWideKeyword,\n    |}\n  | {|\n      property: \"unparsed\",\n      value: UnparsedProperty,\n    |}\n  | {|\n      property: \"custom\",\n      value: CustomProperty,\n    |};\n/**\n * A CSS [`<image>`](https://www.w3.org/TR/css-images-3/#image-values) value.\n */\nexport type Image =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"url\",\n      value: Url,\n    |}\n  | {|\n      type: \"gradient\",\n      value: Gradient,\n    |}\n  | {|\n      type: \"image-set\",\n      value: ImageSet,\n    |};\n/**\n * A CSS [`<gradient>`](https://www.w3.org/TR/css-images-3/#gradients) value.\n */\nexport type Gradient =\n  | {|\n      /**\n       * The direction of the gradient.\n       */\n      direction: LineDirection,\n\n      /**\n       * The color stops and transition hints for the gradient.\n       */\n      items: GradientItemFor_DimensionPercentageFor_LengthValue[],\n      type: \"linear\",\n\n      /**\n       * The vendor prefixes for the gradient.\n       */\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      /**\n       * The direction of the gradient.\n       */\n      direction: LineDirection,\n\n      /**\n       * The color stops and transition hints for the gradient.\n       */\n      items: GradientItemFor_DimensionPercentageFor_LengthValue[],\n      type: \"repeating-linear\",\n\n      /**\n       * The vendor prefixes for the gradient.\n       */\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      /**\n       * The color stops and transition hints for the gradient.\n       */\n      items: GradientItemFor_DimensionPercentageFor_LengthValue[],\n\n      /**\n       * The position of the gradient.\n       */\n      position: Position,\n\n      /**\n       * The shape of the gradient.\n       */\n      shape: EndingShape,\n      type: \"radial\",\n\n      /**\n       * The vendor prefixes for the gradient.\n       */\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      /**\n       * The color stops and transition hints for the gradient.\n       */\n      items: GradientItemFor_DimensionPercentageFor_LengthValue[],\n\n      /**\n       * The position of the gradient.\n       */\n      position: Position,\n\n      /**\n       * The shape of the gradient.\n       */\n      shape: EndingShape,\n      type: \"repeating-radial\",\n\n      /**\n       * The vendor prefixes for the gradient.\n       */\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      /**\n       * The angle of the gradient.\n       */\n      angle: Angle,\n\n      /**\n       * The color stops and transition hints for the gradient.\n       */\n      items: GradientItemFor_DimensionPercentageFor_Angle[],\n\n      /**\n       * The position of the gradient.\n       */\n      position: Position,\n      type: \"conic\",\n    |}\n  | {|\n      /**\n       * The angle of the gradient.\n       */\n      angle: Angle,\n\n      /**\n       * The color stops and transition hints for the gradient.\n       */\n      items: GradientItemFor_DimensionPercentageFor_Angle[],\n\n      /**\n       * The position of the gradient.\n       */\n      position: Position,\n      type: \"repeating-conic\",\n    |}\n  | (\n      | {|\n          type: \"webkit-gradient\",\n\n          /**\n           * The starting point of the gradient.\n           */\n          from: WebKitGradientPoint,\n          kind: \"linear\",\n\n          /**\n           * The color stops in the gradient.\n           */\n          stops: WebKitColorStop[],\n\n          /**\n           * The ending point of the gradient.\n           */\n          to: WebKitGradientPoint,\n        |}\n      | {|\n          type: \"webkit-gradient\",\n\n          /**\n           * The starting point of the gradient.\n           */\n          from: WebKitGradientPoint,\n          kind: \"radial\",\n\n          /**\n           * The starting radius of the gradient.\n           */\n          r0: number,\n\n          /**\n           * The ending radius of the gradient.\n           */\n          r1: number,\n\n          /**\n           * The color stops in the gradient.\n           */\n          stops: WebKitColorStop[],\n\n          /**\n           * The ending point of the gradient.\n           */\n          to: WebKitGradientPoint,\n        |}\n    );\n/**\n * The direction of a CSS `linear-gradient()`.\n *\n * See [LinearGradient](LinearGradient).\n */\nexport type LineDirection =\n  | {|\n      type: \"angle\",\n      value: Angle,\n    |}\n  | {|\n      type: \"horizontal\",\n      value: HorizontalPositionKeyword,\n    |}\n  | {|\n      type: \"vertical\",\n      value: VerticalPositionKeyword,\n    |}\n  | {|\n      /**\n       * A horizontal position keyword, e.g. `left` or `right.\n       */\n      horizontal: HorizontalPositionKeyword,\n      type: \"corner\",\n\n      /**\n       * A vertical posision keyword, e.g. `top` or `bottom`.\n       */\n      vertical: VerticalPositionKeyword,\n    |};\n/**\n * A horizontal position keyword.\n */\nexport type HorizontalPositionKeyword = \"left\" | \"right\";\n/**\n * A vertical position keyword.\n */\nexport type VerticalPositionKeyword = \"top\" | \"bottom\";\n/**\n * Either a color stop or interpolation hint within a gradient.\n *\n * This type is generic, and items may be either a [LengthPercentage](super::length::LengthPercentage) or [Angle](super::angle::Angle) depending on what type of gradient it is within.\n */\nexport type GradientItemFor_DimensionPercentageFor_LengthValue =\n  | {|\n      /**\n       * The color of the color stop.\n       */\n      color: CssColor,\n\n      /**\n       * The position of the color stop.\n       */\n      position?: DimensionPercentageFor_LengthValue | null,\n      type: \"color-stop\",\n    |}\n  | {|\n      type: \"hint\",\n      value: DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A generic type that allows any kind of dimension and percentage to be used standalone or mixed within a `calc()` expression.\n *\n * <https://drafts.csswg.org/css-values-4/#mixed-percentages>\n */\nexport type DimensionPercentageFor_LengthValue =\n  | {|\n      type: \"dimension\",\n      value: LengthValue,\n    |}\n  | {|\n      type: \"percentage\",\n      value: number,\n    |}\n  | {|\n      type: \"calc\",\n      value: CalcFor_DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A mathematical expression used within the [`calc()`](https://www.w3.org/TR/css-values-4/#calc-func) function.\n *\n * This type supports generic value types. Values such as [Length](super::length::Length), [Percentage](super::percentage::Percentage), [Time](super::time::Time), and [Angle](super::angle::Angle) support `calc()` expressions.\n */\nexport type CalcFor_DimensionPercentageFor_LengthValue =\n  | {|\n      type: \"value\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"sum\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [\n        CalcFor_DimensionPercentageFor_LengthValue,\n        CalcFor_DimensionPercentageFor_LengthValue\n      ],\n    |}\n  | {|\n      type: \"product\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [number, CalcFor_DimensionPercentageFor_LengthValue],\n    |}\n  | {|\n      type: \"function\",\n      value: MathFunctionFor_DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A CSS [math function](https://www.w3.org/TR/css-values-4/#math-function).\n *\n * Math functions may be used in most properties and values that accept numeric values, including lengths, percentages, angles, times, etc.\n */\nexport type MathFunctionFor_DimensionPercentageFor_LengthValue =\n  | {|\n      type: \"calc\",\n      value: CalcFor_DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"min\",\n      value: CalcFor_DimensionPercentageFor_LengthValue[],\n    |}\n  | {|\n      type: \"max\",\n      value: CalcFor_DimensionPercentageFor_LengthValue[],\n    |}\n  | {|\n      type: \"clamp\",\n\n      /**\n       * @minItems 3\n       * @maxItems 3\n       */\n      value: [\n        CalcFor_DimensionPercentageFor_LengthValue,\n        CalcFor_DimensionPercentageFor_LengthValue,\n        CalcFor_DimensionPercentageFor_LengthValue\n      ],\n    |}\n  | {|\n      type: \"round\",\n\n      /**\n       * @minItems 3\n       * @maxItems 3\n       */\n      value: [\n        RoundingStrategy,\n        CalcFor_DimensionPercentageFor_LengthValue,\n        CalcFor_DimensionPercentageFor_LengthValue\n      ],\n    |}\n  | {|\n      type: \"rem\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [\n        CalcFor_DimensionPercentageFor_LengthValue,\n        CalcFor_DimensionPercentageFor_LengthValue\n      ],\n    |}\n  | {|\n      type: \"mod\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [\n        CalcFor_DimensionPercentageFor_LengthValue,\n        CalcFor_DimensionPercentageFor_LengthValue\n      ],\n    |}\n  | {|\n      type: \"abs\",\n      value: CalcFor_DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"sign\",\n      value: CalcFor_DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"hypot\",\n      value: CalcFor_DimensionPercentageFor_LengthValue[],\n    |};\n/**\n * A component within a [Position](Position) value, representing a position along either the horizontal or vertical axis of a box.\n *\n * This type is generic over side keywords.\n */\nexport type PositionComponentFor_HorizontalPositionKeyword =\n  | {|\n      type: \"center\",\n    |}\n  | {|\n      type: \"length\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      /**\n       * Offset from the side.\n       */\n      offset?: DimensionPercentageFor_LengthValue | null,\n\n      /**\n       * A side keyword.\n       */\n      side: HorizontalPositionKeyword,\n      type: \"side\",\n    |};\n/**\n * A component within a [Position](Position) value, representing a position along either the horizontal or vertical axis of a box.\n *\n * This type is generic over side keywords.\n */\nexport type PositionComponentFor_VerticalPositionKeyword =\n  | {|\n      type: \"center\",\n    |}\n  | {|\n      type: \"length\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      /**\n       * Offset from the side.\n       */\n      offset?: DimensionPercentageFor_LengthValue | null,\n\n      /**\n       * A side keyword.\n       */\n      side: VerticalPositionKeyword,\n      type: \"side\",\n    |};\n/**\n * A `radial-gradient()` [ending shape](https://www.w3.org/TR/css-images-3/#valdef-radial-gradient-ending-shape).\n *\n * See [RadialGradient](RadialGradient).\n */\nexport type EndingShape =\n  | {|\n      type: \"ellipse\",\n      value: Ellipse,\n    |}\n  | {|\n      type: \"circle\",\n      value: Circle,\n    |};\n/**\n * An ellipse ending shape for a `radial-gradient()`.\n *\n * See [RadialGradient](RadialGradient).\n */\nexport type Ellipse =\n  | {|\n      type: \"size\",\n\n      /**\n       * The x-radius of the ellipse.\n       */\n      x: DimensionPercentageFor_LengthValue,\n\n      /**\n       * The y-radius of the ellipse.\n       */\n      y: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"extent\",\n      value: ShapeExtent,\n    |};\n/**\n * A shape extent for a `radial-gradient()`.\n *\n * See [RadialGradient](RadialGradient).\n */\nexport type ShapeExtent =\n  | \"closest-side\"\n  | \"farthest-side\"\n  | \"closest-corner\"\n  | \"farthest-corner\";\n/**\n * A circle ending shape for a `radial-gradient()`.\n *\n * See [RadialGradient](RadialGradient).\n */\nexport type Circle =\n  | {|\n      type: \"radius\",\n      value: Length,\n    |}\n  | {|\n      type: \"extent\",\n      value: ShapeExtent,\n    |};\n/**\n * Either a color stop or interpolation hint within a gradient.\n *\n * This type is generic, and items may be either a [LengthPercentage](super::length::LengthPercentage) or [Angle](super::angle::Angle) depending on what type of gradient it is within.\n */\nexport type GradientItemFor_DimensionPercentageFor_Angle =\n  | {|\n      /**\n       * The color of the color stop.\n       */\n      color: CssColor,\n\n      /**\n       * The position of the color stop.\n       */\n      position?: DimensionPercentageFor_Angle | null,\n      type: \"color-stop\",\n    |}\n  | {|\n      type: \"hint\",\n      value: DimensionPercentageFor_Angle,\n    |};\n/**\n * A generic type that allows any kind of dimension and percentage to be used standalone or mixed within a `calc()` expression.\n *\n * <https://drafts.csswg.org/css-values-4/#mixed-percentages>\n */\nexport type DimensionPercentageFor_Angle =\n  | {|\n      type: \"dimension\",\n      value: Angle,\n    |}\n  | {|\n      type: \"percentage\",\n      value: number,\n    |}\n  | {|\n      type: \"calc\",\n      value: CalcFor_DimensionPercentageFor_Angle,\n    |};\n/**\n * A mathematical expression used within the [`calc()`](https://www.w3.org/TR/css-values-4/#calc-func) function.\n *\n * This type supports generic value types. Values such as [Length](super::length::Length), [Percentage](super::percentage::Percentage), [Time](super::time::Time), and [Angle](super::angle::Angle) support `calc()` expressions.\n */\nexport type CalcFor_DimensionPercentageFor_Angle =\n  | {|\n      type: \"value\",\n      value: DimensionPercentageFor_Angle,\n    |}\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"sum\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [\n        CalcFor_DimensionPercentageFor_Angle,\n        CalcFor_DimensionPercentageFor_Angle\n      ],\n    |}\n  | {|\n      type: \"product\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [number, CalcFor_DimensionPercentageFor_Angle],\n    |}\n  | {|\n      type: \"function\",\n      value: MathFunctionFor_DimensionPercentageFor_Angle,\n    |};\n/**\n * A CSS [math function](https://www.w3.org/TR/css-values-4/#math-function).\n *\n * Math functions may be used in most properties and values that accept numeric values, including lengths, percentages, angles, times, etc.\n */\nexport type MathFunctionFor_DimensionPercentageFor_Angle =\n  | {|\n      type: \"calc\",\n      value: CalcFor_DimensionPercentageFor_Angle,\n    |}\n  | {|\n      type: \"min\",\n      value: CalcFor_DimensionPercentageFor_Angle[],\n    |}\n  | {|\n      type: \"max\",\n      value: CalcFor_DimensionPercentageFor_Angle[],\n    |}\n  | {|\n      type: \"clamp\",\n\n      /**\n       * @minItems 3\n       * @maxItems 3\n       */\n      value: [\n        CalcFor_DimensionPercentageFor_Angle,\n        CalcFor_DimensionPercentageFor_Angle,\n        CalcFor_DimensionPercentageFor_Angle\n      ],\n    |}\n  | {|\n      type: \"round\",\n\n      /**\n       * @minItems 3\n       * @maxItems 3\n       */\n      value: [\n        RoundingStrategy,\n        CalcFor_DimensionPercentageFor_Angle,\n        CalcFor_DimensionPercentageFor_Angle\n      ],\n    |}\n  | {|\n      type: \"rem\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [\n        CalcFor_DimensionPercentageFor_Angle,\n        CalcFor_DimensionPercentageFor_Angle\n      ],\n    |}\n  | {|\n      type: \"mod\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [\n        CalcFor_DimensionPercentageFor_Angle,\n        CalcFor_DimensionPercentageFor_Angle\n      ],\n    |}\n  | {|\n      type: \"abs\",\n      value: CalcFor_DimensionPercentageFor_Angle,\n    |}\n  | {|\n      type: \"sign\",\n      value: CalcFor_DimensionPercentageFor_Angle,\n    |}\n  | {|\n      type: \"hypot\",\n      value: CalcFor_DimensionPercentageFor_Angle[],\n    |};\n/**\n * A keyword or number within a [WebKitGradientPoint](WebKitGradientPoint).\n */\nexport type WebKitGradientPointComponentFor_HorizontalPositionKeyword =\n  | {|\n      type: \"center\",\n    |}\n  | {|\n      type: \"number\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"side\",\n      value: HorizontalPositionKeyword,\n    |};\n/**\n * Either a `<number>` or `<percentage>`.\n */\nexport type NumberOrPercentage =\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"percentage\",\n      value: number,\n    |};\n/**\n * A keyword or number within a [WebKitGradientPoint](WebKitGradientPoint).\n */\nexport type WebKitGradientPointComponentFor_VerticalPositionKeyword =\n  | {|\n      type: \"center\",\n    |}\n  | {|\n      type: \"number\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"side\",\n      value: VerticalPositionKeyword,\n    |};\n/**\n * A value for the [background-size](https://www.w3.org/TR/css-backgrounds-3/#background-size) property.\n */\nexport type BackgroundSize =\n  | {|\n      /**\n       * The height of the background.\n       */\n      height: LengthPercentageOrAuto,\n      type: \"explicit\",\n\n      /**\n       * The width of the background.\n       */\n      width: LengthPercentageOrAuto,\n    |}\n  | {|\n      type: \"cover\",\n    |}\n  | {|\n      type: \"contain\",\n    |};\n/**\n * Either a [`<length-percentage>`](https://www.w3.org/TR/css-values-4/#typedef-length-percentage), or the `auto` keyword.\n */\nexport type LengthPercentageOrAuto =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"length-percentage\",\n      value: DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A [`<repeat-style>`](https://www.w3.org/TR/css-backgrounds-3/#typedef-repeat-style) value, used within the `background-repeat` property to represent how a background image is repeated in a single direction.\n *\n * See [BackgroundRepeat](BackgroundRepeat).\n */\nexport type BackgroundRepeatKeyword =\n  | \"repeat\"\n  | \"space\"\n  | \"round\"\n  | \"no-repeat\";\n/**\n * A value for the [background-attachment](https://www.w3.org/TR/css-backgrounds-3/#background-attachment) property.\n */\nexport type BackgroundAttachment = \"scroll\" | \"fixed\" | \"local\";\n/**\n * A value for the [background-clip](https://drafts.csswg.org/css-backgrounds-4/#background-clip) property.\n */\nexport type BackgroundClip =\n  | \"border-box\"\n  | \"padding-box\"\n  | \"content-box\"\n  | \"border\"\n  | \"text\";\n/**\n * A value for the [background-origin](https://www.w3.org/TR/css-backgrounds-3/#background-origin) property.\n */\nexport type BackgroundOrigin = \"border-box\" | \"padding-box\" | \"content-box\";\n/**\n * A value for the [display](https://drafts.csswg.org/css-display-3/#the-display-properties) property.\n */\nexport type Display =\n  | {|\n      type: \"keyword\",\n      value: DisplayKeyword,\n    |}\n  | {|\n      /**\n       * The inside display value.\n       */\n      inside: DisplayInside,\n\n      /**\n       * Whether this is a list item.\n       */\n      isListItem: boolean,\n\n      /**\n       * The outside display value.\n       */\n      outside: DisplayOutside,\n      type: \"pair\",\n    |};\n/**\n * A `display` keyword.\n *\n * See [Display](Display).\n */\nexport type DisplayKeyword =\n  | \"none\"\n  | \"contents\"\n  | \"table-row-group\"\n  | \"table-header-group\"\n  | \"table-footer-group\"\n  | \"table-row\"\n  | \"table-cell\"\n  | \"table-column-group\"\n  | \"table-column\"\n  | \"table-caption\"\n  | \"ruby-base\"\n  | \"ruby-text\"\n  | \"ruby-base-container\"\n  | \"ruby-text-container\";\n/**\n * A [`<display-inside>`](https://drafts.csswg.org/css-display-3/#typedef-display-inside) value.\n */\nexport type DisplayInside =\n  | {|\n      type: \"flow\",\n    |}\n  | {|\n      type: \"flow-root\",\n    |}\n  | {|\n      type: \"table\",\n    |}\n  | {|\n      type: \"flex\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"box\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"grid\",\n    |}\n  | {|\n      type: \"ruby\",\n    |};\n/**\n * A [`<display-outside>`](https://drafts.csswg.org/css-display-3/#typedef-display-outside) value.\n */\nexport type DisplayOutside = \"block\" | \"inline\" | \"run-in\";\n/**\n * A value for the [visibility](https://drafts.csswg.org/css-display-3/#visibility) property.\n */\nexport type Visibility = \"visible\" | \"hidden\" | \"collapse\";\n/**\n * A value for the [preferred size properties](https://drafts.csswg.org/css-sizing-3/#preferred-size-properties), i.e. `width` and `height.\n */\nexport type Size =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"length-percentage\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"min-content\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"max-content\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"fit-content\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"fit-content-function\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"stretch\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"contain\",\n    |};\n/**\n * A value for the [minimum](https://drafts.csswg.org/css-sizing-3/#min-size-properties) and [maximum](https://drafts.csswg.org/css-sizing-3/#max-size-properties) size properties, e.g. `min-width` and `max-height`.\n */\nexport type MaxSize =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"length-percentage\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"min-content\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"max-content\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"fit-content\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"fit-content-function\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"stretch\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      type: \"contain\",\n    |};\n/**\n * A value for the [box-sizing](https://drafts.csswg.org/css-sizing-3/#box-sizing) property.\n */\nexport type BoxSizing = \"content-box\" | \"border-box\";\n/**\n * An [overflow](https://www.w3.org/TR/css-overflow-3/#overflow-properties) keyword as used in the `overflow-x`, `overflow-y`, and `overflow` properties.\n */\nexport type OverflowKeyword = \"visible\" | \"hidden\" | \"clip\" | \"scroll\" | \"auto\";\n/**\n * A value for the [text-overflow](https://www.w3.org/TR/css-overflow-3/#text-overflow) property.\n */\nexport type TextOverflow = \"clip\" | \"ellipsis\";\n/**\n * A value for the [position](https://www.w3.org/TR/css-position-3/#position-property) property.\n */\nexport type Position2 =\n  | {|\n      type: \"static\",\n    |}\n  | {|\n      type: \"relative\",\n    |}\n  | {|\n      type: \"absolute\",\n    |}\n  | {|\n      type: \"sticky\",\n      value: VendorPrefix,\n    |}\n  | {|\n      type: \"fixed\",\n    |};\n/**\n * A generic value that represents a value with two components, e.g. a border radius.\n *\n * When serialized, only a single component will be written if both are equal.\n * @minItems 2\n * @maxItems 2\n */\nexport type Size2DFor_Length = [Length, Length];\n/**\n * A [`<line-style>`](https://drafts.csswg.org/css-backgrounds/#typedef-line-style) value, used in the `border-style` property.\n */\nexport type LineStyle =\n  | \"none\"\n  | \"hidden\"\n  | \"inset\"\n  | \"groove\"\n  | \"outset\"\n  | \"ridge\"\n  | \"dotted\"\n  | \"dashed\"\n  | \"solid\"\n  | \"double\";\n/**\n * A value for the [border-width](https://www.w3.org/TR/css-backgrounds-3/#border-width) property.\n */\nexport type BorderSideWidth =\n  | {|\n      type: \"thin\",\n    |}\n  | {|\n      type: \"medium\",\n    |}\n  | {|\n      type: \"thick\",\n    |}\n  | {|\n      type: \"length\",\n      value: Length,\n    |};\n/**\n * A generic value that represents a value with two components, e.g. a border radius.\n *\n * When serialized, only a single component will be written if both are equal.\n * @minItems 2\n * @maxItems 2\n */\nexport type Size2DFor_DimensionPercentageFor_LengthValue = [\n  DimensionPercentageFor_LengthValue,\n  DimensionPercentageFor_LengthValue\n];\n/**\n * A generic value that represents a value for four sides of a box, e.g. border-width, margin, padding, etc.\n *\n * When serialized, as few components as possible are written when there are duplicate values.\n * @minItems 4\n * @maxItems 4\n */\nexport type RectFor_LengthOrNumber = [\n  LengthOrNumber,\n  LengthOrNumber,\n  LengthOrNumber,\n  LengthOrNumber\n];\n/**\n * Either a [`<length>`](https://www.w3.org/TR/css-values-4/#lengths) or a [`<number>`](https://www.w3.org/TR/css-values-4/#numbers).\n */\nexport type LengthOrNumber =\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"length\",\n      value: Length,\n    |};\n/**\n * A single [border-image-repeat](https://www.w3.org/TR/css-backgrounds-3/#border-image-repeat) keyword.\n */\nexport type BorderImageRepeatKeyword = \"stretch\" | \"repeat\" | \"round\" | \"space\";\n/**\n * A generic value that represents a value for four sides of a box, e.g. border-width, margin, padding, etc.\n *\n * When serialized, as few components as possible are written when there are duplicate values.\n * @minItems 4\n * @maxItems 4\n */\nexport type RectFor_BorderImageSideWidth = [\n  BorderImageSideWidth,\n  BorderImageSideWidth,\n  BorderImageSideWidth,\n  BorderImageSideWidth\n];\n/**\n * A value for the [border-image-width](https://www.w3.org/TR/css-backgrounds-3/#border-image-width) property.\n */\nexport type BorderImageSideWidth =\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"length-percentage\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"auto\",\n    |};\n/**\n * A generic value that represents a value for four sides of a box, e.g. border-width, margin, padding, etc.\n *\n * When serialized, as few components as possible are written when there are duplicate values.\n * @minItems 4\n * @maxItems 4\n */\nexport type RectFor_NumberOrPercentage = [\n  NumberOrPercentage,\n  NumberOrPercentage,\n  NumberOrPercentage,\n  NumberOrPercentage\n];\n/**\n * A value for the [outline-style](https://drafts.csswg.org/css-ui/#outline-style) property.\n */\nexport type OutlineStyle =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"line-style\",\n      value: LineStyle,\n    |};\n/**\n * A value for the [flex-direction](https://www.w3.org/TR/2018/CR-css-flexbox-1-20181119/#propdef-flex-direction) property.\n */\nexport type FlexDirection = \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n/**\n * A value for the [flex-wrap](https://www.w3.org/TR/2018/CR-css-flexbox-1-20181119/#flex-wrap-property) property.\n */\nexport type FlexWrap = \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n/**\n * A value for the [align-content](https://www.w3.org/TR/css-align-3/#propdef-align-content) property.\n */\nexport type AlignContent =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"baseline-position\",\n      value: BaselinePosition,\n    |}\n  | {|\n      type: \"content-distribution\",\n      value: ContentDistribution,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"content-position\",\n\n      /**\n       * A content position keyword.\n       */\n      value: ContentPosition,\n    |};\n/**\n * A [`<baseline-position>`](https://www.w3.org/TR/css-align-3/#typedef-baseline-position) value, as used in the alignment properties.\n */\nexport type BaselinePosition = \"first\" | \"last\";\n/**\n * A [`<content-distribution>`](https://www.w3.org/TR/css-align-3/#typedef-content-distribution) value.\n */\nexport type ContentDistribution =\n  | \"space-between\"\n  | \"space-around\"\n  | \"space-evenly\"\n  | \"stretch\";\n/**\n * An [`<overflow-position>`](https://www.w3.org/TR/css-align-3/#typedef-overflow-position) value.\n */\nexport type OverflowPosition = \"safe\" | \"unsafe\";\n/**\n * A [`<content-position>`](https://www.w3.org/TR/css-align-3/#typedef-content-position) value.\n */\nexport type ContentPosition =\n  | \"center\"\n  | \"start\"\n  | \"end\"\n  | \"flex-start\"\n  | \"flex-end\";\n/**\n * A value for the [justify-content](https://www.w3.org/TR/css-align-3/#propdef-justify-content) property.\n */\nexport type JustifyContent =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"content-distribution\",\n      value: ContentDistribution,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"content-position\",\n\n      /**\n       * A content position keyword.\n       */\n      value: ContentPosition,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"left\",\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"right\",\n    |};\n/**\n * A value for the [align-self](https://www.w3.org/TR/css-align-3/#align-self-property) property.\n */\nexport type AlignSelf =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"stretch\",\n    |}\n  | {|\n      type: \"baseline-position\",\n      value: BaselinePosition,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"self-position\",\n\n      /**\n       * A self position keyword.\n       */\n      value: SelfPosition,\n    |};\n/**\n * A [`<self-position>`](https://www.w3.org/TR/css-align-3/#typedef-self-position) value.\n */\nexport type SelfPosition =\n  | \"center\"\n  | \"start\"\n  | \"end\"\n  | \"self-start\"\n  | \"self-end\"\n  | \"flex-start\"\n  | \"flex-end\";\n/**\n * A value for the [justify-self](https://www.w3.org/TR/css-align-3/#justify-self-property) property.\n */\nexport type JustifySelf =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"stretch\",\n    |}\n  | {|\n      type: \"baseline-position\",\n      value: BaselinePosition,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"self-position\",\n\n      /**\n       * A self position keyword.\n       */\n      value: SelfPosition,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"left\",\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"right\",\n    |};\n/**\n * A value for the [align-items](https://www.w3.org/TR/css-align-3/#align-items-property) property.\n */\nexport type AlignItems =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"stretch\",\n    |}\n  | {|\n      type: \"baseline-position\",\n      value: BaselinePosition,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"self-position\",\n\n      /**\n       * A self position keyword.\n       */\n      value: SelfPosition,\n    |};\n/**\n * A value for the [justify-items](https://www.w3.org/TR/css-align-3/#justify-items-property) property.\n */\nexport type JustifyItems =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"stretch\",\n    |}\n  | {|\n      type: \"baseline-position\",\n      value: BaselinePosition,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"self-position\",\n\n      /**\n       * A self position keyword.\n       */\n      value: SelfPosition,\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"left\",\n    |}\n  | {|\n      /**\n       * An overflow alignment mode.\n       */\n      overflow?: OverflowPosition | null,\n      type: \"right\",\n    |}\n  | {|\n      type: \"legacy\",\n      value: LegacyJustify,\n    |};\n/**\n * A legacy justification keyword, as used in the `justify-items` property.\n */\nexport type LegacyJustify = \"left\" | \"right\" | \"center\";\n/**\n * A [gap](https://www.w3.org/TR/css-align-3/#column-row-gap) value, as used in the `column-gap` and `row-gap` properties.\n */\nexport type GapValue =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"length-percentage\",\n      value: DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A value for the legacy (prefixed) [box-orient](https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#orientation) property. Partially equivalent to `flex-direction` in the standard syntax.\n */\nexport type BoxOrient =\n  | \"horizontal\"\n  | \"vertical\"\n  | \"inline-axis\"\n  | \"block-axis\";\n/**\n * A value for the legacy (prefixed) [box-direction](https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#displayorder) property. Partially equivalent to the `flex-direction` property in the standard syntax.\n */\nexport type BoxDirection = \"normal\" | \"reverse\";\n/**\n * A value for the legacy (prefixed) [box-align](https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#alignment) property. Equivalent to the `align-items` property in the standard syntax.\n */\nexport type BoxAlign = \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n/**\n * A value for the legacy (prefixed) [box-pack](https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#packing) property. Equivalent to the `justify-content` property in the standard syntax.\n */\nexport type BoxPack = \"start\" | \"end\" | \"center\" | \"justify\";\n/**\n * A value for the legacy (prefixed) [box-lines](https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#multiple) property. Equivalent to the `flex-wrap` property in the standard syntax.\n */\nexport type BoxLines = \"single\" | \"multiple\";\n/**\n * A value for the legacy (prefixed) [flex-pack](https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-pack) property. Equivalent to the `justify-content` property in the standard syntax.\n */\nexport type FlexPack = \"start\" | \"end\" | \"center\" | \"justify\" | \"distribute\";\n/**\n * A value for the legacy (prefixed) [flex-item-align](https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-align) property. Equivalent to the `align-self` property in the standard syntax.\n */\nexport type FlexItemAlign =\n  | \"auto\"\n  | \"start\"\n  | \"end\"\n  | \"center\"\n  | \"baseline\"\n  | \"stretch\";\n/**\n * A value for the legacy (prefixed) [flex-line-pack](https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-line-pack) property. Equivalent to the `align-content` property in the standard syntax.\n */\nexport type FlexLinePack =\n  | \"start\"\n  | \"end\"\n  | \"center\"\n  | \"justify\"\n  | \"distribute\"\n  | \"stretch\";\n/**\n * A [track sizing](https://drafts.csswg.org/css-grid-2/#track-sizing) value for the `grid-template-rows` and `grid-template-columns` properties.\n */\nexport type TrackSizing =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      /**\n       * A list of grid track items.\n       */\n      items: TrackListItem[],\n\n      /**\n       * A list of line names.\n       */\n      lineNames: String[][],\n      type: \"track-list\",\n    |};\n/**\n * Either a track size or `repeat()` function.\n *\n * See [TrackList](TrackList).\n */\nexport type TrackListItem =\n  | {|\n      type: \"track-size\",\n      value: TrackSize,\n    |}\n  | {|\n      type: \"track-repeat\",\n      value: TrackRepeat,\n    |};\n/**\n * A [`<track-size>`](https://drafts.csswg.org/css-grid-2/#typedef-track-size) value, as used in the `grid-template-rows` and `grid-template-columns` properties.\n *\n * See [TrackListItem](TrackListItem).\n */\nexport type TrackSize =\n  | {|\n      type: \"track-breadth\",\n      value: TrackBreadth,\n    |}\n  | {|\n      /**\n       * The maximum value.\n       */\n      max: TrackBreadth,\n\n      /**\n       * The minimum value.\n       */\n      min: TrackBreadth,\n      type: \"min-max\",\n    |}\n  | {|\n      type: \"fit-content\",\n      value: DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A [`<track-breadth>`](https://drafts.csswg.org/css-grid-2/#typedef-track-breadth) value.\n *\n * See [TrackSize](TrackSize).\n */\nexport type TrackBreadth =\n  | {|\n      type: \"length\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"flex\",\n      value: number,\n    |}\n  | {|\n      type: \"min-content\",\n    |}\n  | {|\n      type: \"max-content\",\n    |}\n  | {|\n      type: \"auto\",\n    |};\n/**\n * A [`<repeat-count>`](https://drafts.csswg.org/css-grid-2/#typedef-track-repeat) value, used in the `repeat()` function.\n *\n * See [TrackRepeat](TrackRepeat).\n */\nexport type RepeatCount =\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"auto-fill\",\n    |}\n  | {|\n      type: \"auto-fit\",\n    |};\nexport type AutoFlowDirection = \"row\" | \"column\";\n/**\n * A value for the [grid-template-areas](https://drafts.csswg.org/css-grid-2/#grid-template-areas-property) property.\n */\nexport type GridTemplateAreas =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      /**\n       * A flattened list of grid area names. Unnamed areas specified by the `.` token are represented as `None`.\n       */\n      areas: (string | null)[],\n\n      /**\n       * The number of columns in the grid.\n       */\n      columns: number,\n      type: \"areas\",\n    |};\n/**\n * A [`<grid-line>`](https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line) value, used in the `grid-row-start`, `grid-row-end`, `grid-column-start`, and `grid-column-end` properties.\n */\nexport type GridLine =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      /**\n       * A grid area name.\n       */\n      name: String,\n      type: \"area\",\n    |}\n  | {|\n      /**\n       * A line number.\n       */\n      index: number,\n\n      /**\n       * A line name to filter by.\n       */\n      name?: String | null,\n      type: \"line\",\n    |}\n  | {|\n      /**\n       * A line number.\n       */\n      index: number,\n\n      /**\n       * A line name to filter by.\n       */\n      name?: String | null,\n      type: \"span\",\n    |};\n/**\n * A value for the [font-weight](https://www.w3.org/TR/css-fonts-4/#font-weight-prop) property.\n */\nexport type FontWeight =\n  | {|\n      type: \"absolute\",\n      value: AbsoluteFontWeight,\n    |}\n  | {|\n      type: \"bolder\",\n    |}\n  | {|\n      type: \"lighter\",\n    |};\n/**\n * An [absolute font weight](https://www.w3.org/TR/css-fonts-4/#font-weight-absolute-values), as used in the `font-weight` property.\n *\n * See [FontWeight](FontWeight).\n */\nexport type AbsoluteFontWeight =\n  | {|\n      type: \"weight\",\n      value: number,\n    |}\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"bold\",\n    |};\n/**\n * A value for the [font-size](https://www.w3.org/TR/css-fonts-4/#font-size-prop) property.\n */\nexport type FontSize =\n  | {|\n      type: \"length\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"absolute\",\n      value: AbsoluteFontSize,\n    |}\n  | {|\n      type: \"relative\",\n      value: RelativeFontSize,\n    |};\n/**\n * An [absolute font size](https://www.w3.org/TR/css-fonts-3/#absolute-size-value), as used in the `font-size` property.\n *\n * See [FontSize](FontSize).\n */\nexport type AbsoluteFontSize =\n  | \"xx-small\"\n  | \"x-small\"\n  | \"small\"\n  | \"medium\"\n  | \"large\"\n  | \"x-large\"\n  | \"xx-large\"\n  | \"xxx-large\";\n/**\n * A [relative font size](https://www.w3.org/TR/css-fonts-3/#relative-size-value), as used in the `font-size` property.\n *\n * See [FontSize](FontSize).\n */\nexport type RelativeFontSize = \"smaller\" | \"larger\";\n/**\n * A value for the [font-stretch](https://www.w3.org/TR/css-fonts-4/#font-stretch-prop) property.\n */\nexport type FontStretch =\n  | {|\n      type: \"keyword\",\n      value: FontStretchKeyword,\n    |}\n  | {|\n      type: \"percentage\",\n      value: number,\n    |};\n/**\n * A [font stretch keyword](https://www.w3.org/TR/css-fonts-4/#font-stretch-prop), as used in the `font-stretch` property.\n *\n * See [FontStretch](FontStretch).\n */\nexport type FontStretchKeyword =\n  | \"normal\"\n  | \"ultra-condensed\"\n  | \"extra-condensed\"\n  | \"condensed\"\n  | \"semi-condensed\"\n  | \"semi-expanded\"\n  | \"expanded\"\n  | \"extra-expanded\"\n  | \"ultra-expanded\";\n/**\n * A value for the [font-family](https://www.w3.org/TR/css-fonts-4/#font-family-prop) property.\n */\nexport type FontFamily = GenericFontFamily | String;\n/**\n * A [generic font family](https://www.w3.org/TR/css-fonts-4/#generic-font-families) name, as used in the `font-family` property.\n *\n * See [FontFamily](FontFamily).\n */\nexport type GenericFontFamily =\n  | \"serif\"\n  | \"sans-serif\"\n  | \"cursive\"\n  | \"fantasy\"\n  | \"monospace\"\n  | \"system-ui\"\n  | \"emoji\"\n  | \"math\"\n  | \"fangsong\"\n  | \"ui-serif\"\n  | \"ui-sans-serif\"\n  | \"ui-monospace\"\n  | \"ui-rounded\"\n  | \"initial\"\n  | \"inherit\"\n  | \"unset\"\n  | \"default\"\n  | \"revert\"\n  | \"revert-layer\";\n/**\n * A value for the [font-style](https://www.w3.org/TR/css-fonts-4/#font-style-prop) property.\n */\nexport type FontStyle =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"italic\",\n    |}\n  | {|\n      type: \"oblique\",\n      value: Angle,\n    |};\n/**\n * A value for the [font-variant-caps](https://www.w3.org/TR/css-fonts-4/#font-variant-caps-prop) property.\n */\nexport type FontVariantCaps =\n  | \"normal\"\n  | \"small-caps\"\n  | \"all-small-caps\"\n  | \"petite-caps\"\n  | \"all-petite-caps\"\n  | \"unicase\"\n  | \"titling-caps\";\n/**\n * A value for the [line-height](https://www.w3.org/TR/2020/WD-css-inline-3-20200827/#propdef-line-height) property.\n */\nexport type LineHeight =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"length\",\n      value: DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A value for the [vertical align](https://drafts.csswg.org/css2/#propdef-vertical-align) property.\n */\nexport type VerticalAlign =\n  | {|\n      type: \"keyword\",\n      value: VerticalAlignKeyword,\n    |}\n  | {|\n      type: \"length\",\n      value: DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A keyword for the [vertical align](https://drafts.csswg.org/css2/#propdef-vertical-align) property.\n */\nexport type VerticalAlignKeyword =\n  | \"baseline\"\n  | \"sub\"\n  | \"super\"\n  | \"top\"\n  | \"text-top\"\n  | \"middle\"\n  | \"bottom\"\n  | \"text-bottom\";\n/**\n * A CSS [easing function](https://www.w3.org/TR/css-easing-1/#easing-functions).\n */\nexport type EasingFunction =\n  | {|\n      type: \"linear\",\n    |}\n  | {|\n      type: \"ease\",\n    |}\n  | {|\n      type: \"ease-in\",\n    |}\n  | {|\n      type: \"ease-out\",\n    |}\n  | {|\n      type: \"ease-in-out\",\n    |}\n  | {|\n      type: \"cubic-bezier\",\n\n      /**\n       * The x-position of the first point in the curve.\n       */\n      x1: number,\n\n      /**\n       * The x-position of the second point in the curve.\n       */\n      x2: number,\n\n      /**\n       * The y-position of the first point in the curve.\n       */\n      y1: number,\n\n      /**\n       * The y-position of the second point in the curve.\n       */\n      y2: number,\n    |}\n  | {|\n      /**\n       * The number of intervals in the function.\n       */\n      count: number,\n\n      /**\n       * The step position.\n       */\n      position?: StepPosition,\n      type: \"steps\",\n    |};\n/**\n * A [step position](https://www.w3.org/TR/css-easing-1/#step-position), used within the `steps()` function.\n */\nexport type StepPosition =\n  | {|\n      type: \"start\",\n    |}\n  | {|\n      type: \"end\",\n    |}\n  | {|\n      type: \"jump-none\",\n    |}\n  | {|\n      type: \"jump-both\",\n    |};\n/**\n * A value for the [animation-iteration-count](https://drafts.csswg.org/css-animations/#animation-iteration-count) property.\n */\nexport type AnimationIterationCount =\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"infinite\",\n    |};\n/**\n * A value for the [animation-direction](https://drafts.csswg.org/css-animations/#animation-direction) property.\n */\nexport type AnimationDirection =\n  | \"normal\"\n  | \"reverse\"\n  | \"alternate\"\n  | \"alternate-reverse\";\n/**\n * A value for the [animation-play-state](https://drafts.csswg.org/css-animations/#animation-play-state) property.\n */\nexport type AnimationPlayState = \"running\" | \"paused\";\n/**\n * A value for the [animation-fill-mode](https://drafts.csswg.org/css-animations/#animation-fill-mode) property.\n */\nexport type AnimationFillMode = \"none\" | \"forwards\" | \"backwards\" | \"both\";\n/**\n * A value for the [animation-composition](https://drafts.csswg.org/css-animations-2/#animation-composition) property.\n */\nexport type AnimationComposition = \"replace\" | \"add\" | \"accumulate\";\n/**\n * A value for the [animation-timeline](https://drafts.csswg.org/css-animations-2/#animation-timeline) property.\n */\nexport type AnimationTimeline =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"dashed-ident\",\n      value: String,\n    |}\n  | {|\n      type: \"scroll\",\n      value: ScrollTimeline,\n    |}\n  | {|\n      type: \"view\",\n      value: ViewTimeline,\n    |};\n/**\n * A scroll axis, used in the `scroll()` function.\n */\nexport type ScrollAxis = \"block\" | \"inline\" | \"x\" | \"y\";\n/**\n * A scroller, used in the `scroll()` function.\n */\nexport type Scroller = \"root\" | \"nearest\" | \"self\";\n/**\n * A generic value that represents a value with two components, e.g. a border radius.\n *\n * When serialized, only a single component will be written if both are equal.\n * @minItems 2\n * @maxItems 2\n */\nexport type Size2DFor_LengthPercentageOrAuto = [\n  LengthPercentageOrAuto,\n  LengthPercentageOrAuto\n];\n/**\n * A value for the [animation-range-start](https://drafts.csswg.org/scroll-animations/#animation-range-start) property.\n */\nexport type AnimationRangeStart = AnimationAttachmentRange;\n/**\n * A value for the [animation-range-start](https://drafts.csswg.org/scroll-animations/#animation-range-start) or [animation-range-end](https://drafts.csswg.org/scroll-animations/#animation-range-end) property.\n */\nexport type AnimationAttachmentRange =\n  | \"normal\"\n  | DimensionPercentageFor_LengthValue\n  | {|\n      /**\n       * The name of the timeline range.\n       */\n      name: TimelineRangeName,\n\n      /**\n       * The offset from the start of the named timeline range.\n       */\n      offset: DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A [view progress timeline range](https://drafts.csswg.org/scroll-animations/#view-timelines-ranges)\n */\nexport type TimelineRangeName =\n  | \"cover\"\n  | \"contain\"\n  | \"entry\"\n  | \"exit\"\n  | \"entry-crossing\"\n  | \"exit-crossing\";\n/**\n * A value for the [animation-range-end](https://drafts.csswg.org/scroll-animations/#animation-range-end) property.\n */\nexport type AnimationRangeEnd = AnimationAttachmentRange;\n/**\n * An individual [transform function](https://www.w3.org/TR/2019/CR-css-transforms-1-20190214/#two-d-transform-functions).\n */\nexport type Transform =\n  | {|\n      type: \"translate\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [\n        DimensionPercentageFor_LengthValue,\n        DimensionPercentageFor_LengthValue\n      ],\n    |}\n  | {|\n      type: \"translateX\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"translateY\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"translateZ\",\n      value: Length,\n    |}\n  | {|\n      type: \"translate3d\",\n\n      /**\n       * @minItems 3\n       * @maxItems 3\n       */\n      value: [\n        DimensionPercentageFor_LengthValue,\n        DimensionPercentageFor_LengthValue,\n        Length\n      ],\n    |}\n  | {|\n      type: \"scale\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [NumberOrPercentage, NumberOrPercentage],\n    |}\n  | {|\n      type: \"scaleX\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"scaleY\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"scaleZ\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"scale3d\",\n\n      /**\n       * @minItems 3\n       * @maxItems 3\n       */\n      value: [NumberOrPercentage, NumberOrPercentage, NumberOrPercentage],\n    |}\n  | {|\n      type: \"rotate\",\n      value: Angle,\n    |}\n  | {|\n      type: \"rotateX\",\n      value: Angle,\n    |}\n  | {|\n      type: \"rotateY\",\n      value: Angle,\n    |}\n  | {|\n      type: \"rotateZ\",\n      value: Angle,\n    |}\n  | {|\n      type: \"rotate3d\",\n\n      /**\n       * @minItems 4\n       * @maxItems 4\n       */\n      value: [number, number, number, Angle],\n    |}\n  | {|\n      type: \"skew\",\n\n      /**\n       * @minItems 2\n       * @maxItems 2\n       */\n      value: [Angle, Angle],\n    |}\n  | {|\n      type: \"skewX\",\n      value: Angle,\n    |}\n  | {|\n      type: \"skewY\",\n      value: Angle,\n    |}\n  | {|\n      type: \"perspective\",\n      value: Length,\n    |}\n  | {|\n      type: \"matrix\",\n      value: MatrixForFloat,\n    |}\n  | {|\n      type: \"matrix3d\",\n      value: Matrix3DForFloat,\n    |};\n/**\n * A value for the [transform-style](https://drafts.csswg.org/css-transforms-2/#transform-style-property) property.\n */\nexport type TransformStyle = \"flat\" | \"preserve3d\";\n/**\n * A value for the [transform-box](https://drafts.csswg.org/css-transforms-1/#transform-box) property.\n */\nexport type TransformBox =\n  | \"content-box\"\n  | \"border-box\"\n  | \"fill-box\"\n  | \"stroke-box\"\n  | \"view-box\";\n/**\n * A value for the [backface-visibility](https://drafts.csswg.org/css-transforms-2/#backface-visibility-property) property.\n */\nexport type BackfaceVisibility = \"visible\" | \"hidden\";\n/**\n * A value for the [perspective](https://drafts.csswg.org/css-transforms-2/#perspective-property) property.\n */\nexport type Perspective =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"length\",\n      value: Length,\n    |};\n/**\n * A value for the [translate](https://drafts.csswg.org/css-transforms-2/#propdef-translate) property.\n */\nexport type Translate =\n  | \"none\"\n  | {|\n      /**\n       * The x translation.\n       */\n      x: DimensionPercentageFor_LengthValue,\n\n      /**\n       * The y translation.\n       */\n      y: DimensionPercentageFor_LengthValue,\n\n      /**\n       * The z translation.\n       */\n      z: Length,\n    |};\n/**\n * A value for the [scale](https://drafts.csswg.org/css-transforms-2/#propdef-scale) property.\n */\nexport type Scale =\n  | \"none\"\n  | {|\n      /**\n       * Scale on the x axis.\n       */\n      x: NumberOrPercentage,\n\n      /**\n       * Scale on the y axis.\n       */\n      y: NumberOrPercentage,\n\n      /**\n       * Scale on the z axis.\n       */\n      z: NumberOrPercentage,\n    |};\n/**\n * Defines how text case should be transformed in the [text-transform](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#text-transform-property) property.\n */\nexport type TextTransformCase =\n  | \"none\"\n  | \"uppercase\"\n  | \"lowercase\"\n  | \"capitalize\";\n/**\n * A value for the [white-space](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#white-space-property) property.\n */\nexport type WhiteSpace =\n  | \"normal\"\n  | \"pre\"\n  | \"nowrap\"\n  | \"pre-wrap\"\n  | \"break-spaces\"\n  | \"pre-line\";\n/**\n * A value for the [word-break](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#word-break-property) property.\n */\nexport type WordBreak = \"normal\" | \"keep-all\" | \"break-all\" | \"break-word\";\n/**\n * A value for the [line-break](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#line-break-property) property.\n */\nexport type LineBreak = \"auto\" | \"loose\" | \"normal\" | \"strict\" | \"anywhere\";\n/**\n * A value for the [hyphens](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#hyphenation) property.\n */\nexport type Hyphens = \"none\" | \"manual\" | \"auto\";\n/**\n * A value for the [overflow-wrap](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#overflow-wrap-property) property.\n */\nexport type OverflowWrap = \"normal\" | \"anywhere\" | \"break-word\";\n/**\n * A value for the [text-align](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#text-align-property) property.\n */\nexport type TextAlign =\n  | \"start\"\n  | \"end\"\n  | \"left\"\n  | \"right\"\n  | \"center\"\n  | \"justify\"\n  | \"match-parent\"\n  | \"justify-all\";\n/**\n * A value for the [text-align-last](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#text-align-last-property) property.\n */\nexport type TextAlignLast =\n  | \"auto\"\n  | \"start\"\n  | \"end\"\n  | \"left\"\n  | \"right\"\n  | \"center\"\n  | \"justify\"\n  | \"match-parent\";\n/**\n * A value for the [text-justify](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#text-justify-property) property.\n */\nexport type TextJustify = \"auto\" | \"none\" | \"inter-word\" | \"inter-character\";\n/**\n * A value for the [word-spacing](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#word-spacing-property) and [letter-spacing](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#letter-spacing-property) properties.\n */\nexport type Spacing =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"length\",\n      value: Length,\n    |};\nexport type TextDecorationLine =\n  | ExclusiveTextDecorationLine\n  | OtherTextDecorationLine[];\nexport type ExclusiveTextDecorationLine =\n  | \"none\"\n  | \"spelling-error\"\n  | \"grammar-error\";\nexport type OtherTextDecorationLine =\n  | \"underline\"\n  | \"overline\"\n  | \"line-through\"\n  | \"blink\";\n/**\n * A value for the [text-decoration-style](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-decoration-style-property) property.\n */\nexport type TextDecorationStyle =\n  | \"solid\"\n  | \"double\"\n  | \"dotted\"\n  | \"dashed\"\n  | \"wavy\";\n/**\n * A value for the [text-decoration-thickness](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-decoration-width-property) property.\n */\nexport type TextDecorationThickness =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"from-font\",\n    |}\n  | {|\n      type: \"length-percentage\",\n      value: DimensionPercentageFor_LengthValue,\n    |};\n/**\n * A value for the [text-decoration-skip-ink](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-decoration-skip-ink-property) property.\n */\nexport type TextDecorationSkipInk = \"auto\" | \"none\" | \"all\";\n/**\n * A value for the [text-emphasis-style](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-emphasis-style-property) property.\n */\nexport type TextEmphasisStyle =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      /**\n       * The fill mode for the marks.\n       */\n      fill: TextEmphasisFillMode,\n\n      /**\n       * The shape of the marks.\n       */\n      shape?: TextEmphasisShape | null,\n      type: \"keyword\",\n    |}\n  | {|\n      type: \"string\",\n      value: String,\n    |};\n/**\n * A keyword for the [text-emphasis-style](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-emphasis-style-property) property.\n *\n * See [TextEmphasisStyle](TextEmphasisStyle).\n */\nexport type TextEmphasisFillMode = \"filled\" | \"open\";\n/**\n * A text emphasis shape for the [text-emphasis-style](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-emphasis-style-property) property.\n *\n * See [TextEmphasisStyle](TextEmphasisStyle).\n */\nexport type TextEmphasisShape =\n  | \"dot\"\n  | \"circle\"\n  | \"double-circle\"\n  | \"triangle\"\n  | \"sesame\";\n/**\n * A horizontal position keyword for the [text-emphasis-position](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-emphasis-position-property) property.\n *\n * See [TextEmphasisPosition](TextEmphasisPosition).\n */\nexport type TextEmphasisPositionHorizontal = \"left\" | \"right\";\n/**\n * A vertical position keyword for the [text-emphasis-position](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-emphasis-position-property) property.\n *\n * See [TextEmphasisPosition](TextEmphasisPosition).\n */\nexport type TextEmphasisPositionVertical = \"over\" | \"under\";\n/**\n * A value for the [text-size-adjust](https://w3c.github.io/csswg-drafts/css-size-adjust/#adjustment-control) property.\n */\nexport type TextSizeAdjust =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"percentage\",\n      value: number,\n    |};\n/**\n * A value for the [direction](https://drafts.csswg.org/css-writing-modes-3/#direction) property.\n */\nexport type Direction2 = \"ltr\" | \"rtl\";\n/**\n * A value for the [unicode-bidi](https://drafts.csswg.org/css-writing-modes-3/#unicode-bidi) property.\n */\nexport type UnicodeBidi =\n  | \"normal\"\n  | \"embed\"\n  | \"isolate\"\n  | \"bidi-override\"\n  | \"isolate-override\"\n  | \"plaintext\";\n/**\n * A value for the [box-decoration-break](https://www.w3.org/TR/css-break-3/#break-decoration) property.\n */\nexport type BoxDecorationBreak = \"slice\" | \"clone\";\n/**\n * A value for the [resize](https://www.w3.org/TR/2021/WD-css-ui-4-20210316/#resize) property.\n */\nexport type Resize =\n  | \"none\"\n  | \"both\"\n  | \"horizontal\"\n  | \"vertical\"\n  | \"block\"\n  | \"inline\";\n/**\n * A pre-defined [cursor](https://www.w3.org/TR/2021/WD-css-ui-4-20210316/#cursor) value, used in the `cursor` property.\n *\n * See [Cursor](Cursor).\n */\nexport type CursorKeyword =\n  | \"auto\"\n  | \"default\"\n  | \"none\"\n  | \"context-menu\"\n  | \"help\"\n  | \"pointer\"\n  | \"progress\"\n  | \"wait\"\n  | \"cell\"\n  | \"crosshair\"\n  | \"text\"\n  | \"vertical-text\"\n  | \"alias\"\n  | \"copy\"\n  | \"move\"\n  | \"no-drop\"\n  | \"not-allowed\"\n  | \"grab\"\n  | \"grabbing\"\n  | \"e-resize\"\n  | \"n-resize\"\n  | \"ne-resize\"\n  | \"nw-resize\"\n  | \"s-resize\"\n  | \"se-resize\"\n  | \"sw-resize\"\n  | \"w-resize\"\n  | \"ew-resize\"\n  | \"ns-resize\"\n  | \"nesw-resize\"\n  | \"nwse-resize\"\n  | \"col-resize\"\n  | \"row-resize\"\n  | \"all-scroll\"\n  | \"zoom-in\"\n  | \"zoom-out\";\n/**\n * A value for the [caret-color](https://www.w3.org/TR/2021/WD-css-ui-4-20210316/#caret-color) property.\n */\nexport type ColorOrAuto =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"color\",\n      value: CssColor,\n    |};\n/**\n * A value for the [caret-shape](https://www.w3.org/TR/2021/WD-css-ui-4-20210316/#caret-shape) property.\n */\nexport type CaretShape = \"auto\" | \"bar\" | \"block\" | \"underscore\";\n/**\n * A value for the [user-select](https://www.w3.org/TR/2021/WD-css-ui-4-20210316/#content-selection) property.\n */\nexport type UserSelect = \"auto\" | \"text\" | \"none\" | \"contain\" | \"all\";\nexport type Appearance = string;\n/**\n * A value for the [list-style-type](https://www.w3.org/TR/2020/WD-css-lists-3-20201117/#text-markers) property.\n */\nexport type ListStyleType =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"string\",\n      value: String,\n    |}\n  | {|\n      type: \"counter-style\",\n      value: CounterStyle,\n    |};\n/**\n * A [counter-style](https://www.w3.org/TR/css-counter-styles-3/#typedef-counter-style) name.\n */\nexport type CounterStyle =\n  | {|\n      type: \"predefined\",\n      value: PredefinedCounterStyle,\n    |}\n  | {|\n      type: \"name\",\n      value: String,\n    |}\n  | {|\n      /**\n       * The symbols.\n       */\n      symbols: Symbol[],\n\n      /**\n       * The counter system.\n       */\n      system?: {| ...SymbolsType, ...string |},\n      type: \"symbols\",\n    |};\n/**\n * A [predefined counter](https://www.w3.org/TR/css-counter-styles-3/#predefined-counters) style.\n */\nexport type PredefinedCounterStyle =\n  | \"decimal\"\n  | \"decimal-leading-zero\"\n  | \"arabic-indic\"\n  | \"armenian\"\n  | \"upper-armenian\"\n  | \"lower-armenian\"\n  | \"bengali\"\n  | \"cambodian\"\n  | \"khmer\"\n  | \"cjk-decimal\"\n  | \"devanagari\"\n  | \"georgian\"\n  | \"gujarati\"\n  | \"gurmukhi\"\n  | \"hebrew\"\n  | \"kannada\"\n  | \"lao\"\n  | \"malayalam\"\n  | \"mongolian\"\n  | \"myanmar\"\n  | \"oriya\"\n  | \"persian\"\n  | \"lower-roman\"\n  | \"upper-roman\"\n  | \"tamil\"\n  | \"telugu\"\n  | \"thai\"\n  | \"tibetan\"\n  | \"lower-alpha\"\n  | \"lower-latin\"\n  | \"upper-alpha\"\n  | \"upper-latin\"\n  | \"lower-greek\"\n  | \"hiragana\"\n  | \"hiragana-iroha\"\n  | \"katakana\"\n  | \"katakana-iroha\"\n  | \"disc\"\n  | \"circle\"\n  | \"square\"\n  | \"disclosure-open\"\n  | \"disclosure-closed\"\n  | \"cjk-earthly-branch\"\n  | \"cjk-heavenly-stem\"\n  | \"japanese-informal\"\n  | \"japanese-formal\"\n  | \"korean-hangul-formal\"\n  | \"korean-hanja-informal\"\n  | \"korean-hanja-formal\"\n  | \"simp-chinese-informal\"\n  | \"simp-chinese-formal\"\n  | \"trad-chinese-informal\"\n  | \"trad-chinese-formal\"\n  | \"ethiopic-numeric\";\n/**\n * A single [symbol](https://www.w3.org/TR/css-counter-styles-3/#funcdef-symbols) as used in the `symbols()` function.\n *\n * See [CounterStyle](CounterStyle).\n */\nexport type Symbol =\n  | {|\n      type: \"string\",\n      value: String,\n    |}\n  | {|\n      type: \"image\",\n      value: Image,\n    |};\n/**\n * A [`<symbols-type>`](https://www.w3.org/TR/css-counter-styles-3/#typedef-symbols-type) value, as used in the `symbols()` function.\n *\n * See [CounterStyle](CounterStyle).\n */\nexport type SymbolsType =\n  | \"cyclic\"\n  | \"numeric\"\n  | \"alphabetic\"\n  | \"symbolic\"\n  | \"fixed\";\n/**\n * A value for the [list-style-position](https://www.w3.org/TR/2020/WD-css-lists-3-20201117/#list-style-position-property) property.\n */\nexport type ListStylePosition = \"inside\" | \"outside\";\n/**\n * A value for the [marker-side](https://www.w3.org/TR/2020/WD-css-lists-3-20201117/#marker-side) property.\n */\nexport type MarkerSide = \"match-self\" | \"match-parent\";\n/**\n * An SVG [`<paint>`](https://www.w3.org/TR/SVG2/painting.html#SpecifyingPaint) value used in the `fill` and `stroke` properties.\n */\nexport type SVGPaint =\n  | {|\n      /**\n       * A fallback to be used used in case the paint server cannot be resolved.\n       */\n      fallback?: SVGPaintFallback | null,\n      type: \"url\",\n\n      /**\n       * The url of the paint server.\n       */\n      url: Url,\n    |}\n  | {|\n      type: \"color\",\n      value: CssColor,\n    |}\n  | {|\n      type: \"context-fill\",\n    |}\n  | {|\n      type: \"context-stroke\",\n    |}\n  | {|\n      type: \"none\",\n    |};\n/**\n * A fallback for an SVG paint in case a paint server `url()` cannot be resolved.\n *\n * See [SVGPaint](SVGPaint).\n */\nexport type SVGPaintFallback =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"color\",\n      value: CssColor,\n    |};\n/**\n * A [`<fill-rule>`](https://www.w3.org/TR/css-shapes-1/#typedef-fill-rule) used to determine the interior of a `polygon()` shape.\n *\n * See [Polygon](Polygon).\n */\nexport type FillRule = \"nonzero\" | \"evenodd\";\n/**\n * A value for the [stroke-linecap](https://www.w3.org/TR/SVG2/painting.html#LineCaps) property.\n */\nexport type StrokeLinecap = \"butt\" | \"round\" | \"square\";\n/**\n * A value for the [stroke-linejoin](https://www.w3.org/TR/SVG2/painting.html#LineJoin) property.\n */\nexport type StrokeLinejoin =\n  | \"miter\"\n  | \"miter-clip\"\n  | \"round\"\n  | \"bevel\"\n  | \"arcs\";\n/**\n * A value for the [stroke-dasharray](https://www.w3.org/TR/SVG2/painting.html#StrokeDashing) property.\n */\nexport type StrokeDasharray =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"values\",\n      value: DimensionPercentageFor_LengthValue[],\n    |};\n/**\n * A value for the [marker](https://www.w3.org/TR/SVG2/painting.html#VertexMarkerProperties) properties.\n */\nexport type Marker =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"url\",\n      value: Url,\n    |};\n/**\n * A value for the [color-interpolation](https://www.w3.org/TR/SVG2/painting.html#ColorInterpolation) property.\n */\nexport type ColorInterpolation = \"auto\" | \"srgb\" | \"linearrgb\";\n/**\n * A value for the [color-rendering](https://www.w3.org/TR/SVG2/painting.html#ColorRendering) property.\n */\nexport type ColorRendering = \"auto\" | \"optimizespeed\" | \"optimizequality\";\n/**\n * A value for the [shape-rendering](https://www.w3.org/TR/SVG2/painting.html#ShapeRendering) property.\n */\nexport type ShapeRendering =\n  | \"auto\"\n  | \"optimizespeed\"\n  | \"crispedges\"\n  | \"geometricprecision\";\n/**\n * A value for the [text-rendering](https://www.w3.org/TR/SVG2/painting.html#TextRendering) property.\n */\nexport type TextRendering =\n  | \"auto\"\n  | \"optimizespeed\"\n  | \"optimizelegibility\"\n  | \"geometricprecision\";\n/**\n * A value for the [image-rendering](https://www.w3.org/TR/SVG2/painting.html#ImageRendering) property.\n */\nexport type ImageRendering = \"auto\" | \"optimizespeed\" | \"optimizequality\";\n/**\n * A value for the [clip-path](https://www.w3.org/TR/css-masking-1/#the-clip-path) property.\n */\nexport type ClipPath =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"url\",\n      value: Url,\n    |}\n  | {|\n      /**\n       * A reference box that the shape is positioned according to.\n       */\n      referenceBox: GeometryBox,\n\n      /**\n       * A basic shape.\n       */\n      shape: BasicShape,\n      type: \"shape\",\n    |}\n  | {|\n      type: \"box\",\n      value: GeometryBox,\n    |};\n/**\n * A [`<geometry-box>`](https://www.w3.org/TR/css-masking-1/#typedef-geometry-box) value as used in the `mask-clip` and `clip-path` properties.\n */\nexport type GeometryBox =\n  | \"border-box\"\n  | \"padding-box\"\n  | \"content-box\"\n  | \"margin-box\"\n  | \"fill-box\"\n  | \"stroke-box\"\n  | \"view-box\";\n/**\n * A CSS [`<basic-shape>`](https://www.w3.org/TR/css-shapes-1/#basic-shape-functions) value.\n */\nexport type BasicShape =\n  | {|\n      type: \"inset\",\n      value: InsetRect,\n    |}\n  | {|\n      type: \"circle\",\n      value: Circle2,\n    |}\n  | {|\n      type: \"ellipse\",\n      value: Ellipse2,\n    |}\n  | {|\n      type: \"polygon\",\n      value: Polygon,\n    |};\n/**\n * A generic value that represents a value for four sides of a box, e.g. border-width, margin, padding, etc.\n *\n * When serialized, as few components as possible are written when there are duplicate values.\n * @minItems 4\n * @maxItems 4\n */\nexport type RectFor_DimensionPercentageFor_LengthValue = [\n  DimensionPercentageFor_LengthValue,\n  DimensionPercentageFor_LengthValue,\n  DimensionPercentageFor_LengthValue,\n  DimensionPercentageFor_LengthValue\n];\n/**\n * A [`<shape-radius>`](https://www.w3.org/TR/css-shapes-1/#typedef-shape-radius) value that defines the radius of a `circle()` or `ellipse()` shape.\n */\nexport type ShapeRadius =\n  | {|\n      type: \"length-percentage\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"closest-side\",\n    |}\n  | {|\n      type: \"farthest-side\",\n    |};\n/**\n * A value for the [mask-mode](https://www.w3.org/TR/css-masking-1/#the-mask-mode) property.\n */\nexport type MaskMode = \"luminance\" | \"alpha\" | \"match-source\";\n/**\n * A value for the [mask-clip](https://www.w3.org/TR/css-masking-1/#the-mask-clip) property.\n */\nexport type MaskClip =\n  | {|\n      type: \"geometry-box\",\n      value: GeometryBox,\n    |}\n  | {|\n      type: \"no-clip\",\n    |};\n/**\n * A value for the [mask-composite](https://www.w3.org/TR/css-masking-1/#the-mask-composite) property.\n */\nexport type MaskComposite = \"add\" | \"subtract\" | \"intersect\" | \"exclude\";\n/**\n * A value for the [mask-type](https://www.w3.org/TR/css-masking-1/#the-mask-type) property.\n */\nexport type MaskType = \"luminance\" | \"alpha\";\n/**\n * A value for the [mask-border-mode](https://www.w3.org/TR/css-masking-1/#the-mask-border-mode) property.\n */\nexport type MaskBorderMode = \"luminance\" | \"alpha\";\n/**\n * A value for the [-webkit-mask-composite](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-mask-composite) property.\n *\n * See also [MaskComposite](MaskComposite).\n */\nexport type WebKitMaskComposite =\n  | (\n      | \"clear\"\n      | \"copy\"\n      | \"source-atop\"\n      | \"destination-over\"\n      | \"destination-in\"\n      | \"destination-out\"\n      | \"destination-atop\"\n    )\n  | \"source-over\"\n  | \"source-in\"\n  | \"source-out\"\n  | \"xor\";\n/**\n * A value for the [-webkit-mask-source-type](https://github.com/WebKit/WebKit/blob/6eece09a1c31e47489811edd003d1e36910e9fd3/Source/WebCore/css/CSSProperties.json#L6578-L6587) property.\n *\n * See also [MaskMode](MaskMode).\n */\nexport type WebKitMaskSourceType = \"auto\" | \"luminance\" | \"alpha\";\n/**\n * A value for the [filter](https://drafts.fxtf.org/filter-effects-1/#FilterProperty) and [backdrop-filter](https://drafts.fxtf.org/filter-effects-2/#BackdropFilterProperty) properties.\n */\nexport type FilterList =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"filters\",\n      value: Filter[],\n    |};\n/**\n * A [filter](https://drafts.fxtf.org/filter-effects-1/#filter-functions) function.\n */\nexport type Filter =\n  | {|\n      type: \"blur\",\n      value: Length,\n    |}\n  | {|\n      type: \"brightness\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"contrast\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"grayscale\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"hue-rotate\",\n      value: Angle,\n    |}\n  | {|\n      type: \"invert\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"opacity\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"saturate\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"sepia\",\n      value: NumberOrPercentage,\n    |}\n  | {|\n      type: \"drop-shadow\",\n      value: DropShadow,\n    |}\n  | {|\n      type: \"url\",\n      value: Url,\n    |};\n/**\n * A value for the [z-index](https://drafts.csswg.org/css2/#z-index) property.\n */\nexport type ZIndex =\n  | {|\n      type: \"auto\",\n    |}\n  | {|\n      type: \"integer\",\n      value: number,\n    |};\n/**\n * A value for the [container-type](https://drafts.csswg.org/css-contain-3/#container-type) property. Establishes the element as a query container for the purpose of container queries.\n */\nexport type ContainerType = \"normal\" | \"inline-size\" | \"size\";\n/**\n * A value for the [container-name](https://drafts.csswg.org/css-contain-3/#container-name) property.\n */\nexport type ContainerNameList =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"names\",\n      value: String[],\n    |};\n/**\n * A value for the [view-transition-name](https://drafts.csswg.org/css-view-transitions-1/#view-transition-name-prop) property.\n */\nexport type ViewTransitionName = \"none\" | \"auto\" | String;\n/**\n * The `none` keyword, or a space-separated list of custom idents.\n */\nexport type NoneOrCustomIdentList = \"none\" | String[];\n/**\n * A value for the [view-transition-group](https://drafts.csswg.org/css-view-transitions-2/#view-transition-group-prop) property.\n */\nexport type ViewTransitionGroup = \"normal\" | \"contain\" | \"nearest\" | String;\n/**\n * A [CSS-wide keyword](https://drafts.csswg.org/css-cascade-5/#defaulting-keywords).\n */\nexport type CSSWideKeyword =\n  | \"initial\"\n  | \"inherit\"\n  | \"unset\"\n  | \"revert\"\n  | \"revert-layer\";\n/**\n * A CSS custom property name.\n */\nexport type CustomPropertyName = String | String;\nexport type SelectorComponent =\n  | {|\n      type: \"combinator\",\n      value: Combinator,\n    |}\n  | {|\n      type: \"universal\",\n    |}\n  | (\n      | {|\n          type: \"namespace\",\n          kind: \"none\",\n        |}\n      | {|\n          type: \"namespace\",\n          kind: \"any\",\n        |}\n      | {|\n          type: \"namespace\",\n          kind: \"named\",\n          prefix: string,\n        |}\n    )\n  | {|\n      name: string,\n      type: \"type\",\n    |}\n  | {|\n      name: string,\n      type: \"id\",\n    |}\n  | {|\n      name: string,\n      type: \"class\",\n    |}\n  | {|\n      name: string,\n      namespace?: NamespaceConstraint | null,\n      operation?: AttrOperation | null,\n      type: \"attribute\",\n    |}\n  | {|\n      ...{|\n        type: \"pseudo-class\",\n      |},\n      ...TSPseudoClass | PseudoClass,\n    |}\n  | {|\n      ...{|\n        type: \"pseudo-element\",\n      |},\n      ...BuiltinPseudoElement | PseudoElement,\n    |}\n  | {|\n      type: \"nesting\",\n    |};\nexport type Combinator =\n  | (\"child\" | \"descendant\" | \"next-sibling\" | \"later-sibling\")\n  | \"pseudo-element\"\n  | \"slot-assignment\"\n  | \"part\"\n  | \"deep-descendant\"\n  | \"deep\";\nexport type NamespaceConstraint =\n  | {|\n      type: \"any\",\n    |}\n  | {|\n      prefix: string,\n      type: \"specific\",\n      url: string,\n    |};\nexport type ParsedCaseSensitivity =\n  | \"explicit-case-sensitive\"\n  | \"ascii-case-insensitive\"\n  | \"case-sensitive\"\n  | \"ascii-case-insensitive-if-in-html-element-in-html-document\";\nexport type AttrSelectorOperator =\n  | \"equal\"\n  | \"includes\"\n  | \"dash-match\"\n  | \"prefix\"\n  | \"substring\"\n  | \"suffix\";\nexport type TSPseudoClass =\n  | {|\n      kind: \"not\",\n      selectors: Selector[],\n    |}\n  | {|\n      kind: \"first-child\",\n    |}\n  | {|\n      kind: \"last-child\",\n    |}\n  | {|\n      kind: \"only-child\",\n    |}\n  | {|\n      kind: \"root\",\n    |}\n  | {|\n      kind: \"empty\",\n    |}\n  | {|\n      kind: \"scope\",\n    |}\n  | {|\n      a: number,\n      b: number,\n      kind: \"nth-child\",\n      of?: Selector[] | null,\n    |}\n  | {|\n      a: number,\n      b: number,\n      kind: \"nth-last-child\",\n      of?: Selector[] | null,\n    |}\n  | {|\n      a: number,\n      b: number,\n      kind: \"nth-col\",\n    |}\n  | {|\n      a: number,\n      b: number,\n      kind: \"nth-last-col\",\n    |}\n  | {|\n      a: number,\n      b: number,\n      kind: \"nth-of-type\",\n    |}\n  | {|\n      a: number,\n      b: number,\n      kind: \"nth-last-of-type\",\n    |}\n  | {|\n      kind: \"first-of-type\",\n    |}\n  | {|\n      kind: \"last-of-type\",\n    |}\n  | {|\n      kind: \"only-of-type\",\n    |}\n  | {|\n      kind: \"host\",\n      selectors?: Selector | null,\n    |}\n  | {|\n      kind: \"where\",\n      selectors: Selector[],\n    |}\n  | {|\n      kind: \"is\",\n      selectors: Selector[],\n    |}\n  | {|\n      kind: \"any\",\n      selectors: Selector[],\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"has\",\n      selectors: Selector[],\n    |};\n/**\n * A pseudo class.\n */\nexport type PseudoClass =\n  | {|\n      kind: \"lang\",\n\n      /**\n       * A list of language codes.\n       */\n      languages: String[],\n    |}\n  | {|\n      /**\n       * A direction.\n       */\n      direction: Direction,\n      kind: \"dir\",\n    |}\n  | {|\n      kind: \"hover\",\n    |}\n  | {|\n      kind: \"active\",\n    |}\n  | {|\n      kind: \"focus\",\n    |}\n  | {|\n      kind: \"focus-visible\",\n    |}\n  | {|\n      kind: \"focus-within\",\n    |}\n  | {|\n      kind: \"current\",\n    |}\n  | {|\n      kind: \"past\",\n    |}\n  | {|\n      kind: \"future\",\n    |}\n  | {|\n      kind: \"playing\",\n    |}\n  | {|\n      kind: \"paused\",\n    |}\n  | {|\n      kind: \"seeking\",\n    |}\n  | {|\n      kind: \"buffering\",\n    |}\n  | {|\n      kind: \"stalled\",\n    |}\n  | {|\n      kind: \"muted\",\n    |}\n  | {|\n      kind: \"volume-locked\",\n    |}\n  | {|\n      kind: \"fullscreen\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"open\",\n    |}\n  | {|\n      kind: \"closed\",\n    |}\n  | {|\n      kind: \"modal\",\n    |}\n  | {|\n      kind: \"picture-in-picture\",\n    |}\n  | {|\n      kind: \"popover-open\",\n    |}\n  | {|\n      kind: \"defined\",\n    |}\n  | {|\n      kind: \"any-link\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"link\",\n    |}\n  | {|\n      kind: \"local-link\",\n    |}\n  | {|\n      kind: \"target\",\n    |}\n  | {|\n      kind: \"target-within\",\n    |}\n  | {|\n      kind: \"visited\",\n    |}\n  | {|\n      kind: \"enabled\",\n    |}\n  | {|\n      kind: \"disabled\",\n    |}\n  | {|\n      kind: \"read-only\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"read-write\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"placeholder-shown\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"default\",\n    |}\n  | {|\n      kind: \"checked\",\n    |}\n  | {|\n      kind: \"indeterminate\",\n    |}\n  | {|\n      kind: \"blank\",\n    |}\n  | {|\n      kind: \"valid\",\n    |}\n  | {|\n      kind: \"invalid\",\n    |}\n  | {|\n      kind: \"in-range\",\n    |}\n  | {|\n      kind: \"out-of-range\",\n    |}\n  | {|\n      kind: \"required\",\n    |}\n  | {|\n      kind: \"optional\",\n    |}\n  | {|\n      kind: \"user-valid\",\n    |}\n  | {|\n      kind: \"user-invalid\",\n    |}\n  | {|\n      kind: \"autofill\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"active-view-transition\",\n    |}\n  | {|\n      kind: \"active-view-transition-type\",\n\n      /**\n       * A view transition type.\n       */\n      type: String[],\n    |}\n  | {|\n      kind: \"local\",\n\n      /**\n       * A local selector.\n       */\n      selector: Selector,\n    |}\n  | {|\n      kind: \"global\",\n\n      /**\n       * A global selector.\n       */\n      selector: Selector,\n    |}\n  | {|\n      kind: \"webkit-scrollbar\",\n      value: WebKitScrollbarPseudoClass,\n    |}\n  | {|\n      kind: \"custom\",\n\n      /**\n       * The pseudo class name.\n       */\n      name: String,\n    |}\n  | {|\n      /**\n       * The arguments of the pseudo class function.\n       */\n      arguments: TokenOrValue[],\n      kind: \"custom-function\",\n\n      /**\n       * The pseudo class name.\n       */\n      name: String,\n    |};\n/**\n * The [:dir()](https://drafts.csswg.org/selectors-4/#the-dir-pseudo) pseudo class.\n */\nexport type Direction = \"ltr\" | \"rtl\";\n/**\n * A [webkit scrollbar](https://webkit.org/blog/363/styling-scrollbars/) pseudo class.\n */\nexport type WebKitScrollbarPseudoClass =\n  | \"horizontal\"\n  | \"vertical\"\n  | \"decrement\"\n  | \"increment\"\n  | \"start\"\n  | \"end\"\n  | \"double-button\"\n  | \"single-button\"\n  | \"no-button\"\n  | \"corner-present\"\n  | \"window-inactive\";\nexport type BuiltinPseudoElement =\n  | {|\n      kind: \"slotted\",\n      selector: Selector,\n    |}\n  | {|\n      kind: \"part\",\n      names: string[],\n    |};\n/**\n * A pseudo element.\n */\nexport type PseudoElement =\n  | {|\n      kind: \"after\",\n    |}\n  | {|\n      kind: \"before\",\n    |}\n  | {|\n      kind: \"first-line\",\n    |}\n  | {|\n      kind: \"first-letter\",\n    |}\n  | {|\n      kind: \"selection\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"placeholder\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"marker\",\n    |}\n  | {|\n      kind: \"backdrop\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"file-selector-button\",\n      vendorPrefix: VendorPrefix,\n    |}\n  | {|\n      kind: \"webkit-scrollbar\",\n      value: WebKitScrollbarPseudoElement,\n    |}\n  | {|\n      kind: \"cue\",\n    |}\n  | {|\n      kind: \"cue-region\",\n    |}\n  | {|\n      kind: \"cue-function\",\n\n      /**\n       * The selector argument.\n       */\n      selector: Selector,\n    |}\n  | {|\n      kind: \"cue-region-function\",\n\n      /**\n       * The selector argument.\n       */\n      selector: Selector,\n    |}\n  | {|\n      kind: \"view-transition\",\n    |}\n  | {|\n      kind: \"view-transition-group\",\n\n      /**\n       * A part name selector.\n       */\n      part: ViewTransitionPartSelector,\n    |}\n  | {|\n      kind: \"view-transition-image-pair\",\n\n      /**\n       * A part name selector.\n       */\n      part: ViewTransitionPartSelector,\n    |}\n  | {|\n      kind: \"view-transition-old\",\n\n      /**\n       * A part name selector.\n       */\n      part: ViewTransitionPartSelector,\n    |}\n  | {|\n      kind: \"view-transition-new\",\n\n      /**\n       * A part name selector.\n       */\n      part: ViewTransitionPartSelector,\n    |}\n  | {|\n      kind: \"custom\",\n\n      /**\n       * The name of the pseudo element.\n       */\n      name: String,\n    |}\n  | {|\n      /**\n       * The arguments of the pseudo element function.\n       */\n      arguments: TokenOrValue[],\n      kind: \"custom-function\",\n\n      /**\n       * The name of the pseudo element.\n       */\n      name: String,\n    |};\n/**\n * A [webkit scrollbar](https://webkit.org/blog/363/styling-scrollbars/) pseudo element.\n */\nexport type WebKitScrollbarPseudoElement =\n  | \"scrollbar\"\n  | \"button\"\n  | \"track\"\n  | \"track-piece\"\n  | \"thumb\"\n  | \"corner\"\n  | \"resizer\";\nexport type ViewTransitionPartName = string;\nexport type Selector = SelectorComponent[];\nexport type SelectorList = Selector[];\n/**\n * A [keyframe selector](https://drafts.csswg.org/css-animations/#typedef-keyframe-selector) within an `@keyframes` rule.\n */\nexport type KeyframeSelector =\n  | {|\n      type: \"percentage\",\n      value: number,\n    |}\n  | {|\n      type: \"from\",\n    |}\n  | {|\n      type: \"to\",\n    |}\n  | {|\n      type: \"timeline-range-percentage\",\n      value: TimelineRangePercentage,\n    |};\n/**\n * KeyframesName\n */\nexport type KeyframesName =\n  | {|\n      type: \"ident\",\n      value: String,\n    |}\n  | {|\n      type: \"custom\",\n      value: String,\n    |};\n/**\n * A property within an `@font-face` rule.\n *\n * See [FontFaceRule](FontFaceRule).\n */\nexport type FontFaceProperty =\n  | {|\n      type: \"source\",\n      value: Source[],\n    |}\n  | {|\n      type: \"font-family\",\n      value: FontFamily,\n    |}\n  | {|\n      type: \"font-style\",\n      value: FontStyle2,\n    |}\n  | {|\n      type: \"font-weight\",\n      value: Size2DFor_FontWeight,\n    |}\n  | {|\n      type: \"font-stretch\",\n      value: Size2DFor_FontStretch,\n    |}\n  | {|\n      type: \"unicode-range\",\n      value: UnicodeRange[],\n    |}\n  | {|\n      type: \"custom\",\n      value: CustomProperty,\n    |};\n/**\n * A value for the [src](https://drafts.csswg.org/css-fonts/#src-desc) property in an `@font-face` rule.\n */\nexport type Source =\n  | {|\n      type: \"url\",\n      value: UrlSource,\n    |}\n  | {|\n      type: \"local\",\n      value: FontFamily,\n    |};\n/**\n * A font format keyword in the `format()` function of the the [src](https://drafts.csswg.org/css-fonts/#src-desc) property of an `@font-face` rule.\n */\nexport type FontFormat =\n  | {|\n      type: \"woff\",\n    |}\n  | {|\n      type: \"woff2\",\n    |}\n  | {|\n      type: \"truetype\",\n    |}\n  | {|\n      type: \"opentype\",\n    |}\n  | {|\n      type: \"embedded-opentype\",\n    |}\n  | {|\n      type: \"collection\",\n    |}\n  | {|\n      type: \"svg\",\n    |}\n  | {|\n      type: \"string\",\n      value: String,\n    |};\n/**\n * A font format keyword in the `format()` function of the the [src](https://drafts.csswg.org/css-fonts/#src-desc) property of an `@font-face` rule.\n */\nexport type FontTechnology =\n  | \"features-opentype\"\n  | \"features-aat\"\n  | \"features-graphite\"\n  | \"color-colrv0\"\n  | \"color-colrv1\"\n  | \"color-svg\"\n  | \"color-sbix\"\n  | \"color-cbdt\"\n  | \"variations\"\n  | \"palettes\"\n  | \"incremental\";\n/**\n * A value for the [font-style](https://w3c.github.io/csswg-drafts/css-fonts/#descdef-font-face-font-style) descriptor in an `@font-face` rule.\n */\nexport type FontStyle2 =\n  | {|\n      type: \"normal\",\n    |}\n  | {|\n      type: \"italic\",\n    |}\n  | {|\n      type: \"oblique\",\n      value: Size2DFor_Angle,\n    |};\n/**\n * A generic value that represents a value with two components, e.g. a border radius.\n *\n * When serialized, only a single component will be written if both are equal.\n * @minItems 2\n * @maxItems 2\n */\nexport type Size2DFor_Angle = [Angle, Angle];\n/**\n * A generic value that represents a value with two components, e.g. a border radius.\n *\n * When serialized, only a single component will be written if both are equal.\n * @minItems 2\n * @maxItems 2\n */\nexport type Size2DFor_FontWeight = [FontWeight, FontWeight];\n/**\n * A generic value that represents a value with two components, e.g. a border radius.\n *\n * When serialized, only a single component will be written if both are equal.\n * @minItems 2\n * @maxItems 2\n */\nexport type Size2DFor_FontStretch = [FontStretch, FontStretch];\n/**\n * A property within an `@font-palette-values` rule.\n *\n * See [FontPaletteValuesRule](FontPaletteValuesRule).\n */\nexport type FontPaletteValuesProperty =\n  | {|\n      type: \"font-family\",\n      value: FontFamily,\n    |}\n  | {|\n      type: \"base-palette\",\n      value: BasePalette,\n    |}\n  | {|\n      type: \"override-colors\",\n      value: OverrideColors[],\n    |}\n  | {|\n      type: \"custom\",\n      value: CustomProperty,\n    |};\n/**\n * A value for the [base-palette](https://drafts.csswg.org/css-fonts-4/#base-palette-desc) property in an `@font-palette-values` rule.\n */\nexport type BasePalette =\n  | {|\n      type: \"light\",\n    |}\n  | {|\n      type: \"dark\",\n    |}\n  | {|\n      type: \"integer\",\n      value: number,\n    |};\n/**\n * The name of the `@font-feature-values` sub-rule. font-feature-value-type = <@stylistic> | <@historical-forms> | <@styleset> | <@character-variant> | <@swash> | <@ornaments> | <@annotation>\n */\nexport type FontFeatureSubruleType =\n  | \"stylistic\"\n  | \"historical-forms\"\n  | \"styleset\"\n  | \"character-variant\"\n  | \"swash\"\n  | \"ornaments\"\n  | \"annotation\";\n/**\n * A [page margin box](https://www.w3.org/TR/css-page-3/#margin-boxes).\n */\nexport type PageMarginBox =\n  | \"top-left-corner\"\n  | \"top-left\"\n  | \"top-center\"\n  | \"top-right\"\n  | \"top-right-corner\"\n  | \"left-top\"\n  | \"left-middle\"\n  | \"left-bottom\"\n  | \"right-top\"\n  | \"right-middle\"\n  | \"right-bottom\"\n  | \"bottom-left-corner\"\n  | \"bottom-left\"\n  | \"bottom-center\"\n  | \"bottom-right\"\n  | \"bottom-right-corner\";\n/**\n * A page pseudo class within an `@page` selector.\n *\n * See [PageSelector](PageSelector).\n */\nexport type PagePseudoClass = \"left\" | \"right\" | \"first\" | \"last\" | \"blank\";\n/**\n * A parsed value for a [SyntaxComponent](SyntaxComponent).\n */\nexport type ParsedComponent =\n  | {|\n      type: \"length\",\n      value: Length,\n    |}\n  | {|\n      type: \"number\",\n      value: number,\n    |}\n  | {|\n      type: \"percentage\",\n      value: number,\n    |}\n  | {|\n      type: \"length-percentage\",\n      value: DimensionPercentageFor_LengthValue,\n    |}\n  | {|\n      type: \"color\",\n      value: CssColor,\n    |}\n  | {|\n      type: \"image\",\n      value: Image,\n    |}\n  | {|\n      type: \"url\",\n      value: Url,\n    |}\n  | {|\n      type: \"integer\",\n      value: number,\n    |}\n  | {|\n      type: \"angle\",\n      value: Angle,\n    |}\n  | {|\n      type: \"time\",\n      value: Time,\n    |}\n  | {|\n      type: \"resolution\",\n      value: Resolution,\n    |}\n  | {|\n      type: \"transform-function\",\n      value: Transform,\n    |}\n  | {|\n      type: \"transform-list\",\n      value: Transform[],\n    |}\n  | {|\n      type: \"custom-ident\",\n      value: String,\n    |}\n  | {|\n      type: \"literal\",\n      value: String,\n    |}\n  | {|\n      type: \"repeated\",\n      value: {|\n        /**\n         * The components to repeat.\n         */\n        components: ParsedComponent[],\n\n        /**\n         * A multiplier describing how the components repeat.\n         */\n        multiplier: Multiplier,\n      |},\n    |}\n  | {|\n      type: \"token-list\",\n      value: TokenOrValue[],\n    |};\n/**\n * A [multiplier](https://drafts.css-houdini.org/css-properties-values-api/#multipliers) for a [SyntaxComponent](SyntaxComponent). Indicates whether and how the component may be repeated.\n */\nexport type Multiplier =\n  | {|\n      type: \"none\",\n    |}\n  | {|\n      type: \"space\",\n    |}\n  | {|\n      type: \"comma\",\n    |};\n/**\n * A CSS [syntax string](https://drafts.css-houdini.org/css-properties-values-api/#syntax-strings) used to define the grammar for a registered custom property.\n */\nexport type SyntaxString =\n  | {|\n      type: \"components\",\n      value: SyntaxComponent[],\n    |}\n  | {|\n      type: \"universal\",\n    |};\n/**\n * A [syntax component component name](https://drafts.css-houdini.org/css-properties-values-api/#supported-names).\n */\nexport type SyntaxComponentKind =\n  | {|\n      type: \"length\",\n    |}\n  | {|\n      type: \"number\",\n    |}\n  | {|\n      type: \"percentage\",\n    |}\n  | {|\n      type: \"length-percentage\",\n    |}\n  | {|\n      type: \"color\",\n    |}\n  | {|\n      type: \"image\",\n    |}\n  | {|\n      type: \"url\",\n    |}\n  | {|\n      type: \"integer\",\n    |}\n  | {|\n      type: \"angle\",\n    |}\n  | {|\n      type: \"time\",\n    |}\n  | {|\n      type: \"resolution\",\n    |}\n  | {|\n      type: \"transform-function\",\n    |}\n  | {|\n      type: \"transform-list\",\n    |}\n  | {|\n      type: \"custom-ident\",\n    |}\n  | {|\n      type: \"literal\",\n      value: string,\n    |};\n/**\n * Represents a container condition.\n */\nexport type ContainerCondition<D = Declaration> =\n  | {|\n      type: \"feature\",\n      value: QueryFeatureFor_ContainerSizeFeatureId,\n    |}\n  | {|\n      type: \"not\",\n      value: ContainerCondition<D>,\n    |}\n  | {|\n      /**\n       * The conditions for the operator.\n       */\n      conditions: ContainerCondition<D>[],\n\n      /**\n       * The operator for the conditions.\n       */\n      operator: Operator,\n      type: \"operation\",\n    |}\n  | {|\n      type: \"style\",\n      value: StyleQuery<D>,\n    |};\n/**\n * A generic media feature or container feature.\n */\nexport type QueryFeatureFor_ContainerSizeFeatureId =\n  | {|\n      /**\n       * The name of the feature.\n       */\n      name: MediaFeatureNameFor_ContainerSizeFeatureId,\n      type: \"plain\",\n\n      /**\n       * The feature value.\n       */\n      value: MediaFeatureValue,\n    |}\n  | {|\n      /**\n       * The name of the feature.\n       */\n      name: MediaFeatureNameFor_ContainerSizeFeatureId,\n      type: \"boolean\",\n    |}\n  | {|\n      /**\n       * The name of the feature.\n       */\n      name: MediaFeatureNameFor_ContainerSizeFeatureId,\n\n      /**\n       * A comparator.\n       */\n      operator: MediaFeatureComparison,\n      type: \"range\",\n\n      /**\n       * The feature value.\n       */\n      value: MediaFeatureValue,\n    |}\n  | {|\n      /**\n       * The end value.\n       */\n      end: MediaFeatureValue,\n\n      /**\n       * A comparator for the end value.\n       */\n      endOperator: MediaFeatureComparison,\n\n      /**\n       * The name of the feature.\n       */\n      name: MediaFeatureNameFor_ContainerSizeFeatureId,\n\n      /**\n       * A start value.\n       */\n      start: MediaFeatureValue,\n\n      /**\n       * A comparator for the start value.\n       */\n      startOperator: MediaFeatureComparison,\n      type: \"interval\",\n    |};\n/**\n * A media feature name.\n */\nexport type MediaFeatureNameFor_ContainerSizeFeatureId =\n  | ContainerSizeFeatureId\n  | String\n  | String;\n/**\n * A container query size feature identifier.\n */\nexport type ContainerSizeFeatureId =\n  | \"width\"\n  | \"height\"\n  | \"inline-size\"\n  | \"block-size\"\n  | \"aspect-ratio\"\n  | \"orientation\";\n/**\n * Represents a style query within a container condition.\n */\nexport type StyleQuery<D = Declaration> =\n  | {|\n      type: \"declaration\",\n      value: D,\n    |}\n  | {|\n      type: \"property\",\n      value: PropertyId,\n    |}\n  | {|\n      type: \"not\",\n      value: StyleQuery<D>,\n    |}\n  | {|\n      /**\n       * The conditions for the operator.\n       */\n      conditions: StyleQuery<D>[],\n\n      /**\n       * The operator for the conditions.\n       */\n      operator: Operator,\n      type: \"operation\",\n    |};\n/**\n * A property within a `@view-transition` rule.\n *\n * See [ViewTransitionRule](ViewTransitionRule).\n */\nexport type ViewTransitionProperty =\n  | {|\n      property: \"navigation\",\n      value: Navigation,\n    |}\n  | {|\n      property: \"types\",\n      value: NoneOrCustomIdentList,\n    |}\n  | {|\n      property: \"custom\",\n      value: CustomProperty,\n    |};\n/**\n * A value for the [navigation](https://drafts.csswg.org/css-view-transitions-2/#view-transition-navigation-descriptor) property in a `@view-transition` rule.\n */\nexport type Navigation = \"none\" | \"auto\";\nexport type DefaultAtRule = null;\n/**\n * A CSS style sheet, representing a `.css` file or inline `<style>` element.\n *\n * Style sheets can be parsed from a string, constructed from scratch, or created using a [Bundler](super::bundler::Bundler). Then, they can be minified and transformed for a set of target browsers, and serialied to a string.\n *\n * # Example\n *\n * ``` use lightningcss::stylesheet::{ StyleSheet, ParserOptions, MinifyOptions, PrinterOptions };\n *\n * // Parse a style sheet from a string. let mut stylesheet = StyleSheet::parse( r#\" .foo { color: red; }\n *\n * .bar { color: red; } \"#, ParserOptions::default() ).unwrap();\n *\n * // Minify the stylesheet. stylesheet.minify(MinifyOptions::default()).unwrap();\n *\n * // Serialize it to a string. let res = stylesheet.to_css(PrinterOptions::default()).unwrap(); assert_eq!(res.code, \".foo, .bar {\\n  color: red;\\n}\\n\"); ```\n */\nexport interface StyleSheet<D = Declaration, M = MediaQuery> {\n  /**\n   * The license comments that appeared at the start of the file.\n   */\n  licenseComments: String[];\n\n  /**\n   * A list of top-level rules within the style sheet.\n   */\n  rules: Rule<D, M>[];\n\n  /**\n   * The source map URL extracted from the original style sheet.\n   */\n  sourceMapUrls: (string | null)[];\n\n  /**\n   * A list of file names for all source files included within the style sheet. Sources are referenced by index in the `loc` property of each rule.\n   */\n  sources: string[];\n}\n/**\n * A [@media](https://drafts.csswg.org/css-conditional-3/#at-media) rule.\n */\nexport interface MediaRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The media query list.\n   */\n  query: MediaList<M>;\n\n  /**\n   * The rules within the `@media` rule.\n   */\n  rules: Rule<D, M>[];\n}\n/**\n * A source location.\n */\nexport interface Location2 {\n  /**\n   * The column number within a line, starting at 1 for first the character of the line. Column numbers are counted in UTF-16 code units.\n   */\n  column: number;\n\n  /**\n   * The line number, starting at 0.\n   */\n  line: number;\n\n  /**\n   * The index of the source file within the source map.\n   */\n  source_index: number;\n}\n/**\n * A [media query list](https://drafts.csswg.org/mediaqueries/#mq-list).\n */\nexport interface MediaList<M = MediaQuery> {\n  /**\n   * The list of media queries.\n   */\n  mediaQueries: M[];\n}\n/**\n * A [media query](https://drafts.csswg.org/mediaqueries/#media).\n */\nexport interface MediaQuery {\n  /**\n   * The condition that this media query contains. This cannot have `or` in the first level.\n   */\n  condition?: MediaCondition | null;\n\n  /**\n   * The media type for this query, that can be known, unknown, or \"all\".\n   */\n  mediaType: MediaType;\n\n  /**\n   * The qualifier for this query.\n   */\n  qualifier?: Qualifier | null;\n}\nexport interface LengthValue {\n  /**\n   * The length unit.\n   */\n  unit: LengthUnit;\n\n  /**\n   * The length value.\n   */\n  value: number;\n}\n/**\n * A CSS environment variable reference.\n */\nexport interface EnvironmentVariable {\n  /**\n   * A fallback value in case the variable is not defined.\n   */\n  fallback?: TokenOrValue[] | null;\n\n  /**\n   * Optional indices into the dimensions of the environment variable.\n   */\n  indices?: number[];\n\n  /**\n   * The environment variable name.\n   */\n  name: EnvironmentVariableName;\n}\n/**\n * A CSS [url()](https://www.w3.org/TR/css-values-4/#urls) value and its source location.\n */\nexport interface Url {\n  /**\n   * The location where the `url()` was seen in the CSS source file.\n   */\n  loc: Location;\n\n  /**\n   * The url string.\n   */\n  url: String;\n}\n/**\n * A line and column position within a source file.\n */\nexport interface Location {\n  /**\n   * The column number, starting from 1.\n   */\n  column: number;\n\n  /**\n   * The line number, starting from 1.\n   */\n  line: number;\n}\n/**\n * A CSS variable reference.\n */\nexport interface Variable {\n  /**\n   * A fallback value in case the variable is not defined.\n   */\n  fallback?: TokenOrValue[] | null;\n\n  /**\n   * The variable name.\n   */\n  name: DashedIdentReference;\n}\n/**\n * A CSS [`<dashed-ident>`](https://www.w3.org/TR/css-values-4/#dashed-idents) reference.\n *\n * Dashed idents are used in cases where an identifier can be either author defined _or_ CSS-defined. Author defined idents must start with two dash characters (\"--\") or parsing will fail.\n *\n * In CSS modules, when the `dashed_idents` option is enabled, the identifier may be followed by the `from` keyword and an argument indicating where the referenced identifier is declared (e.g. a filename).\n */\nexport interface DashedIdentReference {\n  /**\n   * CSS modules extension: the filename where the variable is defined. Only enabled when the CSS modules `dashed_idents` option is turned on.\n   */\n  from?: Specifier | null;\n\n  /**\n   * The referenced identifier.\n   */\n  ident: String;\n}\n/**\n * A custom CSS function.\n */\nexport interface Function {\n  /**\n   * The function arguments.\n   */\n  arguments: TokenOrValue[];\n\n  /**\n   * The function name.\n   */\n  name: String;\n}\n/**\n * A [@import](https://drafts.csswg.org/css-cascade/#at-import) rule.\n */\nexport interface ImportRule<M = MediaQuery> {\n  /**\n   * An optional cascade layer name, or `None` for an anonymous layer.\n   */\n  layer?: String[] | null;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * A media query.\n   */\n  media?: MediaList<M>;\n\n  /**\n   * An optional `supports()` condition.\n   */\n  supports?: SupportsCondition | null;\n\n  /**\n   * The url to import.\n   */\n  url: String;\n}\n/**\n * A CSS [style rule](https://drafts.csswg.org/css-syntax/#style-rules).\n */\nexport interface StyleRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The declarations within the style rule.\n   */\n  declarations?: DeclarationBlock<D>;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * Nested rules within the style rule.\n   */\n  rules?: Rule<D, M>[];\n\n  /**\n   * The selectors for the style rule.\n   */\n  selectors: SelectorList;\n}\n/**\n * A CSS declaration block.\n *\n * Properties are separated into a list of `!important` declararations, and a list of normal declarations. This reduces memory usage compared with storing a boolean along with each property.\n */\nexport interface DeclarationBlock<D = Declaration> {\n  /**\n   * A list of normal declarations in the block.\n   */\n  declarations?: D[];\n\n  /**\n   * A list of `!important` declarations in the block.\n   */\n  importantDeclarations?: D[];\n}\n/**\n * A CSS [`<position>`](https://www.w3.org/TR/css3-values/#position) value, as used in the `background-position` property, gradients, masks, etc.\n */\nexport interface Position {\n  /**\n   * The x-position.\n   */\n  x: PositionComponentFor_HorizontalPositionKeyword;\n\n  /**\n   * The y-position.\n   */\n  y: PositionComponentFor_VerticalPositionKeyword;\n}\n/**\n * An x/y position within a legacy `-webkit-gradient()`.\n */\nexport interface WebKitGradientPoint {\n  /**\n   * The x-position.\n   */\n  x: WebKitGradientPointComponentFor_HorizontalPositionKeyword;\n\n  /**\n   * The y-position.\n   */\n  y: WebKitGradientPointComponentFor_VerticalPositionKeyword;\n}\n/**\n * A color stop within a legacy `-webkit-gradient()`.\n */\nexport interface WebKitColorStop {\n  /**\n   * The color of the color stop.\n   */\n  color: CssColor;\n\n  /**\n   * The position of the color stop.\n   */\n  position: number;\n}\n/**\n * A CSS [`image-set()`](https://drafts.csswg.org/css-images-4/#image-set-notation) value.\n *\n * `image-set()` allows the user agent to choose between multiple versions of an image to display the most appropriate resolution or file type that it supports.\n */\nexport interface ImageSet {\n  /**\n   * The image options to choose from.\n   */\n  options: ImageSetOption[];\n\n  /**\n   * The vendor prefix for the `image-set()` function.\n   */\n  vendorPrefix: VendorPrefix;\n}\n/**\n * An image option within the `image-set()` function. See [ImageSet](ImageSet).\n */\nexport interface ImageSetOption {\n  /**\n   * The mime type of the image.\n   */\n  fileType?: String | null;\n\n  /**\n   * The image for this option.\n   */\n  image: Image;\n\n  /**\n   * The resolution of the image.\n   */\n  resolution: Resolution;\n}\n/**\n * A value for the [background-position](https://drafts.csswg.org/css-backgrounds/#background-position) shorthand property.\n */\nexport interface BackgroundPosition {\n  /**\n   * The x-position.\n   */\n  x: PositionComponentFor_HorizontalPositionKeyword;\n\n  /**\n   * The y-position.\n   */\n  y: PositionComponentFor_VerticalPositionKeyword;\n}\n/**\n * A value for the [background-repeat](https://www.w3.org/TR/css-backgrounds-3/#background-repeat) property.\n */\nexport interface BackgroundRepeat {\n  /**\n   * A repeat style for the x direction.\n   */\n  x: BackgroundRepeatKeyword;\n\n  /**\n   * A repeat style for the y direction.\n   */\n  y: BackgroundRepeatKeyword;\n}\n/**\n * A value for the [background](https://www.w3.org/TR/css-backgrounds-3/#background) shorthand property.\n */\nexport interface Background {\n  /**\n   * The background attachment.\n   */\n  attachment: BackgroundAttachment;\n\n  /**\n   * How the background should be clipped.\n   */\n  clip: BackgroundClip;\n\n  /**\n   * The background color.\n   */\n  color: CssColor;\n\n  /**\n   * The background image.\n   */\n  image: Image;\n\n  /**\n   * The background origin.\n   */\n  origin: BackgroundOrigin;\n\n  /**\n   * The background position.\n   */\n  position: BackgroundPosition;\n\n  /**\n   * How the background image should repeat.\n   */\n  repeat: BackgroundRepeat;\n\n  /**\n   * The size of the background image.\n   */\n  size: BackgroundSize;\n}\n/**\n * A value for the [box-shadow](https://drafts.csswg.org/css-backgrounds/#box-shadow) property.\n */\nexport interface BoxShadow {\n  /**\n   * The blur radius of the shadow.\n   */\n  blur: Length;\n\n  /**\n   * The color of the box shadow.\n   */\n  color: CssColor;\n\n  /**\n   * Whether the shadow is inset within the box.\n   */\n  inset: boolean;\n\n  /**\n   * The spread distance of the shadow.\n   */\n  spread: Length;\n\n  /**\n   * The x offset of the shadow.\n   */\n  xOffset: Length;\n\n  /**\n   * The y offset of the shadow.\n   */\n  yOffset: Length;\n}\n/**\n * A value for the [aspect-ratio](https://drafts.csswg.org/css-sizing-4/#aspect-ratio) property.\n */\nexport interface AspectRatio {\n  /**\n   * The `auto` keyword.\n   */\n  auto: boolean;\n\n  /**\n   * A preferred aspect ratio for the box, specified as width / height.\n   */\n  ratio?: Ratio | null;\n}\n/**\n * A value for the [overflow](https://www.w3.org/TR/css-overflow-3/#overflow-properties) shorthand property.\n */\nexport interface Overflow {\n  /**\n   * The overflow mode for the x direction.\n   */\n  x: OverflowKeyword;\n\n  /**\n   * The overflow mode for the y direction.\n   */\n  y: OverflowKeyword;\n}\n/**\n * A value for the [inset-block](https://drafts.csswg.org/css-logical/#propdef-inset-block) shorthand property.\n */\nexport interface InsetBlock {\n  /**\n   * The block end value.\n   */\n  blockEnd: LengthPercentageOrAuto;\n\n  /**\n   * The block start value.\n   */\n  blockStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [inset-inline](https://drafts.csswg.org/css-logical/#propdef-inset-inline) shorthand property.\n */\nexport interface InsetInline {\n  /**\n   * The inline end value.\n   */\n  inlineEnd: LengthPercentageOrAuto;\n\n  /**\n   * The inline start value.\n   */\n  inlineStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [inset](https://drafts.csswg.org/css-logical/#propdef-inset) shorthand property.\n */\nexport interface Inset {\n  /**\n   * The bottom value.\n   */\n  bottom: LengthPercentageOrAuto;\n\n  /**\n   * The left value.\n   */\n  left: LengthPercentageOrAuto;\n\n  /**\n   * The right value.\n   */\n  right: LengthPercentageOrAuto;\n\n  /**\n   * The top value.\n   */\n  top: LengthPercentageOrAuto;\n}\n/**\n * A value for the [border-radius](https://www.w3.org/TR/css-backgrounds-3/#border-radius) property.\n */\nexport interface BorderRadius {\n  /**\n   * The x and y radius values for the bottom left corner.\n   */\n  bottomLeft: Size2DFor_DimensionPercentageFor_LengthValue;\n\n  /**\n   * The x and y radius values for the bottom right corner.\n   */\n  bottomRight: Size2DFor_DimensionPercentageFor_LengthValue;\n\n  /**\n   * The x and y radius values for the top left corner.\n   */\n  topLeft: Size2DFor_DimensionPercentageFor_LengthValue;\n\n  /**\n   * The x and y radius values for the top right corner.\n   */\n  topRight: Size2DFor_DimensionPercentageFor_LengthValue;\n}\n/**\n * A value for the [border-image-repeat](https://www.w3.org/TR/css-backgrounds-3/#border-image-repeat) property.\n */\nexport interface BorderImageRepeat {\n  /**\n   * The horizontal repeat value.\n   */\n  horizontal: BorderImageRepeatKeyword;\n\n  /**\n   * The vertical repeat value.\n   */\n  vertical: BorderImageRepeatKeyword;\n}\n/**\n * A value for the [border-image-slice](https://www.w3.org/TR/css-backgrounds-3/#border-image-slice) property.\n */\nexport interface BorderImageSlice {\n  /**\n   * Whether the middle of the border image should be preserved.\n   */\n  fill: boolean;\n\n  /**\n   * The offsets from the edges of the image.\n   */\n  offsets: RectFor_NumberOrPercentage;\n}\n/**\n * A value for the [border-image](https://www.w3.org/TR/css-backgrounds-3/#border-image) shorthand property.\n */\nexport interface BorderImage {\n  /**\n   * The amount that the image extends beyond the border box.\n   */\n  outset: RectFor_LengthOrNumber;\n\n  /**\n   * How the border image is scaled and tiled.\n   */\n  repeat: BorderImageRepeat;\n\n  /**\n   * The offsets that define where the image is sliced.\n   */\n  slice: BorderImageSlice;\n\n  /**\n   * The border image.\n   */\n  source: Image;\n\n  /**\n   * The width of the border image.\n   */\n  width: RectFor_BorderImageSideWidth;\n}\n/**\n * A value for the [border-color](https://drafts.csswg.org/css-backgrounds/#propdef-border-color) shorthand property.\n */\nexport interface BorderColor {\n  /**\n   * The bottom value.\n   */\n  bottom: CssColor;\n\n  /**\n   * The left value.\n   */\n  left: CssColor;\n\n  /**\n   * The right value.\n   */\n  right: CssColor;\n\n  /**\n   * The top value.\n   */\n  top: CssColor;\n}\n/**\n * A value for the [border-style](https://drafts.csswg.org/css-backgrounds/#propdef-border-style) shorthand property.\n */\nexport interface BorderStyle {\n  /**\n   * The bottom value.\n   */\n  bottom: LineStyle;\n\n  /**\n   * The left value.\n   */\n  left: LineStyle;\n\n  /**\n   * The right value.\n   */\n  right: LineStyle;\n\n  /**\n   * The top value.\n   */\n  top: LineStyle;\n}\n/**\n * A value for the [border-width](https://drafts.csswg.org/css-backgrounds/#propdef-border-width) shorthand property.\n */\nexport interface BorderWidth {\n  /**\n   * The bottom value.\n   */\n  bottom: BorderSideWidth;\n\n  /**\n   * The left value.\n   */\n  left: BorderSideWidth;\n\n  /**\n   * The right value.\n   */\n  right: BorderSideWidth;\n\n  /**\n   * The top value.\n   */\n  top: BorderSideWidth;\n}\n/**\n * A value for the [border-block-color](https://drafts.csswg.org/css-logical/#propdef-border-block-color) shorthand property.\n */\nexport interface BorderBlockColor {\n  /**\n   * The block end value.\n   */\n  end: CssColor;\n\n  /**\n   * The block start value.\n   */\n  start: CssColor;\n}\n/**\n * A value for the [border-block-style](https://drafts.csswg.org/css-logical/#propdef-border-block-style) shorthand property.\n */\nexport interface BorderBlockStyle {\n  /**\n   * The block end value.\n   */\n  end: LineStyle;\n\n  /**\n   * The block start value.\n   */\n  start: LineStyle;\n}\n/**\n * A value for the [border-block-width](https://drafts.csswg.org/css-logical/#propdef-border-block-width) shorthand property.\n */\nexport interface BorderBlockWidth {\n  /**\n   * The block end value.\n   */\n  end: BorderSideWidth;\n\n  /**\n   * The block start value.\n   */\n  start: BorderSideWidth;\n}\n/**\n * A value for the [border-inline-color](https://drafts.csswg.org/css-logical/#propdef-border-inline-color) shorthand property.\n */\nexport interface BorderInlineColor {\n  /**\n   * The inline end value.\n   */\n  end: CssColor;\n\n  /**\n   * The inline start value.\n   */\n  start: CssColor;\n}\n/**\n * A value for the [border-inline-style](https://drafts.csswg.org/css-logical/#propdef-border-inline-style) shorthand property.\n */\nexport interface BorderInlineStyle {\n  /**\n   * The inline end value.\n   */\n  end: LineStyle;\n\n  /**\n   * The inline start value.\n   */\n  start: LineStyle;\n}\n/**\n * A value for the [border-inline-width](https://drafts.csswg.org/css-logical/#propdef-border-inline-width) shorthand property.\n */\nexport interface BorderInlineWidth {\n  /**\n   * The inline end value.\n   */\n  end: BorderSideWidth;\n\n  /**\n   * The inline start value.\n   */\n  start: BorderSideWidth;\n}\n/**\n * A generic type that represents the `border` and `outline` shorthand properties.\n */\nexport interface GenericBorderFor_LineStyle {\n  /**\n   * The border color.\n   */\n  color: CssColor;\n\n  /**\n   * The border style.\n   */\n  style: LineStyle;\n\n  /**\n   * The width of the border.\n   */\n  width: BorderSideWidth;\n}\n/**\n * A generic type that represents the `border` and `outline` shorthand properties.\n */\nexport interface GenericBorderFor_OutlineStyleAnd_11 {\n  /**\n   * The border color.\n   */\n  color: CssColor;\n\n  /**\n   * The border style.\n   */\n  style: OutlineStyle;\n\n  /**\n   * The width of the border.\n   */\n  width: BorderSideWidth;\n}\n/**\n * A value for the [flex-flow](https://www.w3.org/TR/2018/CR-css-flexbox-1-20181119/#flex-flow-property) shorthand property.\n */\nexport interface FlexFlow {\n  /**\n   * The direction that flex items flow.\n   */\n  direction: FlexDirection;\n\n  /**\n   * How the flex items wrap.\n   */\n  wrap: FlexWrap;\n}\n/**\n * A value for the [flex](https://www.w3.org/TR/2018/CR-css-flexbox-1-20181119/#flex-property) shorthand property.\n */\nexport interface Flex {\n  /**\n   * The flex basis.\n   */\n  basis: LengthPercentageOrAuto;\n\n  /**\n   * The flex grow factor.\n   */\n  grow: number;\n\n  /**\n   * The flex shrink factor.\n   */\n  shrink: number;\n}\n/**\n * A value for the [place-content](https://www.w3.org/TR/css-align-3/#place-content) shorthand property.\n */\nexport interface PlaceContent {\n  /**\n   * The content alignment.\n   */\n  align: AlignContent;\n\n  /**\n   * The content justification.\n   */\n  justify: JustifyContent;\n}\n/**\n * A value for the [place-self](https://www.w3.org/TR/css-align-3/#place-self-property) shorthand property.\n */\nexport interface PlaceSelf {\n  /**\n   * The item alignment.\n   */\n  align: AlignSelf;\n\n  /**\n   * The item justification.\n   */\n  justify: JustifySelf;\n}\n/**\n * A value for the [place-items](https://www.w3.org/TR/css-align-3/#place-items-property) shorthand property.\n */\nexport interface PlaceItems {\n  /**\n   * The item alignment.\n   */\n  align: AlignItems;\n\n  /**\n   * The item justification.\n   */\n  justify: JustifyItems;\n}\n/**\n * A value for the [gap](https://www.w3.org/TR/css-align-3/#gap-shorthand) shorthand property.\n */\nexport interface Gap {\n  /**\n   * The column gap.\n   */\n  column: GapValue;\n\n  /**\n   * The row gap.\n   */\n  row: GapValue;\n}\n/**\n * A [`<track-repeat>`](https://drafts.csswg.org/css-grid-2/#typedef-track-repeat) value, representing the `repeat()` function in a track list.\n *\n * See [TrackListItem](TrackListItem).\n */\nexport interface TrackRepeat {\n  /**\n   * The repeat count.\n   */\n  count: RepeatCount;\n\n  /**\n   * The line names to repeat.\n   */\n  lineNames: String[][];\n\n  /**\n   * The track sizes to repeat.\n   */\n  trackSizes: TrackSize[];\n}\nexport interface GridAutoFlow {\n  /**\n   * If specified, a dense packing algorithm is used, which fills in holes in the grid.\n   */\n  dense: boolean;\n\n  /**\n   * The direction of the auto flow.\n   */\n  direction: AutoFlowDirection;\n}\n/**\n * A value for the [grid-template](https://drafts.csswg.org/css-grid-2/#explicit-grid-shorthand) shorthand property.\n *\n * If `areas` is not `None`, then `rows` must also not be `None`.\n */\nexport interface GridTemplate {\n  /**\n   * The named grid areas.\n   */\n  areas: GridTemplateAreas;\n\n  /**\n   * The grid template columns.\n   */\n  columns: TrackSizing;\n\n  /**\n   * The grid template rows.\n   */\n  rows: TrackSizing;\n}\n/**\n * A value for the [grid](https://drafts.csswg.org/css-grid-2/#grid-shorthand) shorthand property.\n *\n * Explicit and implicit values may not be combined.\n */\nexport interface Grid {\n  /**\n   * Explicit grid template areas.\n   */\n  areas: GridTemplateAreas;\n\n  /**\n   * The grid auto columns.\n   */\n  autoColumns: TrackSize[];\n\n  /**\n   * The grid auto flow.\n   */\n  autoFlow: GridAutoFlow;\n\n  /**\n   * The grid auto rows.\n   */\n  autoRows: TrackSize[];\n\n  /**\n   * Explicit grid template columns.\n   */\n  columns: TrackSizing;\n\n  /**\n   * Explicit grid template rows.\n   */\n  rows: TrackSizing;\n}\n/**\n * A value for the [grid-row](https://drafts.csswg.org/css-grid-2/#propdef-grid-row) shorthand property.\n */\nexport interface GridRow {\n  /**\n   * The ending line.\n   */\n  end: GridLine;\n\n  /**\n   * The starting line.\n   */\n  start: GridLine;\n}\n/**\n * A value for the [grid-row](https://drafts.csswg.org/css-grid-2/#propdef-grid-column) shorthand property.\n */\nexport interface GridColumn {\n  /**\n   * The ending line.\n   */\n  end: GridLine;\n\n  /**\n   * The starting line.\n   */\n  start: GridLine;\n}\n/**\n * A value for the [grid-area](https://drafts.csswg.org/css-grid-2/#propdef-grid-area) shorthand property.\n */\nexport interface GridArea {\n  /**\n   * The grid column end placement.\n   */\n  columnEnd: GridLine;\n\n  /**\n   * The grid column start placement.\n   */\n  columnStart: GridLine;\n\n  /**\n   * The grid row end placement.\n   */\n  rowEnd: GridLine;\n\n  /**\n   * The grid row start placement.\n   */\n  rowStart: GridLine;\n}\n/**\n * A value for the [margin-block](https://drafts.csswg.org/css-logical/#propdef-margin-block) shorthand property.\n */\nexport interface MarginBlock {\n  /**\n   * The block end value.\n   */\n  blockEnd: LengthPercentageOrAuto;\n\n  /**\n   * The block start value.\n   */\n  blockStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [margin-inline](https://drafts.csswg.org/css-logical/#propdef-margin-inline) shorthand property.\n */\nexport interface MarginInline {\n  /**\n   * The inline end value.\n   */\n  inlineEnd: LengthPercentageOrAuto;\n\n  /**\n   * The inline start value.\n   */\n  inlineStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [margin](https://drafts.csswg.org/css-box-4/#propdef-margin) shorthand property.\n */\nexport interface Margin {\n  /**\n   * The bottom value.\n   */\n  bottom: LengthPercentageOrAuto;\n\n  /**\n   * The left value.\n   */\n  left: LengthPercentageOrAuto;\n\n  /**\n   * The right value.\n   */\n  right: LengthPercentageOrAuto;\n\n  /**\n   * The top value.\n   */\n  top: LengthPercentageOrAuto;\n}\n/**\n * A value for the [padding-block](https://drafts.csswg.org/css-logical/#propdef-padding-block) shorthand property.\n */\nexport interface PaddingBlock {\n  /**\n   * The block end value.\n   */\n  blockEnd: LengthPercentageOrAuto;\n\n  /**\n   * The block start value.\n   */\n  blockStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [padding-inline](https://drafts.csswg.org/css-logical/#propdef-padding-inline) shorthand property.\n */\nexport interface PaddingInline {\n  /**\n   * The inline end value.\n   */\n  inlineEnd: LengthPercentageOrAuto;\n\n  /**\n   * The inline start value.\n   */\n  inlineStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [padding](https://drafts.csswg.org/css-box-4/#propdef-padding) shorthand property.\n */\nexport interface Padding {\n  /**\n   * The bottom value.\n   */\n  bottom: LengthPercentageOrAuto;\n\n  /**\n   * The left value.\n   */\n  left: LengthPercentageOrAuto;\n\n  /**\n   * The right value.\n   */\n  right: LengthPercentageOrAuto;\n\n  /**\n   * The top value.\n   */\n  top: LengthPercentageOrAuto;\n}\n/**\n * A value for the [scroll-margin-block](https://drafts.csswg.org/css-scroll-snap/#propdef-scroll-margin-block) shorthand property.\n */\nexport interface ScrollMarginBlock {\n  /**\n   * The block end value.\n   */\n  blockEnd: LengthPercentageOrAuto;\n\n  /**\n   * The block start value.\n   */\n  blockStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [scroll-margin-inline](https://drafts.csswg.org/css-scroll-snap/#propdef-scroll-margin-inline) shorthand property.\n */\nexport interface ScrollMarginInline {\n  /**\n   * The inline end value.\n   */\n  inlineEnd: LengthPercentageOrAuto;\n\n  /**\n   * The inline start value.\n   */\n  inlineStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [scroll-margin](https://drafts.csswg.org/css-scroll-snap/#scroll-margin) shorthand property.\n */\nexport interface ScrollMargin {\n  /**\n   * The bottom value.\n   */\n  bottom: LengthPercentageOrAuto;\n\n  /**\n   * The left value.\n   */\n  left: LengthPercentageOrAuto;\n\n  /**\n   * The right value.\n   */\n  right: LengthPercentageOrAuto;\n\n  /**\n   * The top value.\n   */\n  top: LengthPercentageOrAuto;\n}\n/**\n * A value for the [scroll-padding-block](https://drafts.csswg.org/css-scroll-snap/#propdef-scroll-padding-block) shorthand property.\n */\nexport interface ScrollPaddingBlock {\n  /**\n   * The block end value.\n   */\n  blockEnd: LengthPercentageOrAuto;\n\n  /**\n   * The block start value.\n   */\n  blockStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [scroll-padding-inline](https://drafts.csswg.org/css-scroll-snap/#propdef-scroll-padding-inline) shorthand property.\n */\nexport interface ScrollPaddingInline {\n  /**\n   * The inline end value.\n   */\n  inlineEnd: LengthPercentageOrAuto;\n\n  /**\n   * The inline start value.\n   */\n  inlineStart: LengthPercentageOrAuto;\n}\n/**\n * A value for the [scroll-padding](https://drafts.csswg.org/css-scroll-snap/#scroll-padding) shorthand property.\n */\nexport interface ScrollPadding {\n  /**\n   * The bottom value.\n   */\n  bottom: LengthPercentageOrAuto;\n\n  /**\n   * The left value.\n   */\n  left: LengthPercentageOrAuto;\n\n  /**\n   * The right value.\n   */\n  right: LengthPercentageOrAuto;\n\n  /**\n   * The top value.\n   */\n  top: LengthPercentageOrAuto;\n}\n/**\n * A value for the [font](https://www.w3.org/TR/css-fonts-4/#font-prop) shorthand property.\n */\nexport interface Font {\n  /**\n   * The font family.\n   */\n  family: FontFamily[];\n\n  /**\n   * The line height.\n   */\n  lineHeight: LineHeight;\n\n  /**\n   * The font size.\n   */\n  size: FontSize;\n\n  /**\n   * The font stretch.\n   */\n  stretch: FontStretch;\n\n  /**\n   * The font style.\n   */\n  style: FontStyle;\n\n  /**\n   * How the text should be capitalized. Only CSS 2.1 values are supported.\n   */\n  variantCaps: FontVariantCaps;\n\n  /**\n   * The font weight.\n   */\n  weight: FontWeight;\n}\n/**\n * A value for the [transition](https://www.w3.org/TR/2018/WD-css-transitions-1-20181011/#transition-shorthand-property) property.\n */\nexport interface Transition {\n  /**\n   * The delay before the transition starts.\n   */\n  delay: Time;\n\n  /**\n   * The duration of the transition.\n   */\n  duration: Time;\n\n  /**\n   * The property to transition.\n   */\n  property: PropertyId;\n\n  /**\n   * The easing function for the transition.\n   */\n  timingFunction: EasingFunction;\n}\n/**\n * The [scroll()](https://drafts.csswg.org/scroll-animations-1/#scroll-notation) function.\n */\nexport interface ScrollTimeline {\n  /**\n   * Specifies which axis of the scroll container to use as the progress for the timeline.\n   */\n  axis: ScrollAxis;\n\n  /**\n   * Specifies which element to use as the scroll container.\n   */\n  scroller: Scroller;\n}\n/**\n * The [view()](https://drafts.csswg.org/scroll-animations-1/#view-notation) function.\n */\nexport interface ViewTimeline {\n  /**\n   * Specifies which axis of the scroll container to use as the progress for the timeline.\n   */\n  axis: ScrollAxis;\n\n  /**\n   * Provides an adjustment of the view progress visibility range.\n   */\n  inset: Size2DFor_LengthPercentageOrAuto;\n}\n/**\n * A value for the [animation-range](https://drafts.csswg.org/scroll-animations/#animation-range) shorthand property.\n */\nexport interface AnimationRange {\n  /**\n   * The end of the animation's attachment range.\n   */\n  end: AnimationRangeEnd;\n\n  /**\n   * The start of the animation's attachment range.\n   */\n  start: AnimationRangeStart;\n}\n/**\n * A value for the [animation](https://drafts.csswg.org/css-animations/#animation) shorthand property.\n */\nexport interface Animation {\n  /**\n   * The animation delay.\n   */\n  delay: Time;\n\n  /**\n   * The direction of the animation.\n   */\n  direction: AnimationDirection;\n\n  /**\n   * The animation duration.\n   */\n  duration: Time;\n\n  /**\n   * The animation fill mode.\n   */\n  fillMode: AnimationFillMode;\n\n  /**\n   * The number of times the animation will run.\n   */\n  iterationCount: AnimationIterationCount;\n\n  /**\n   * The animation name.\n   */\n  name: AnimationName;\n\n  /**\n   * The current play state of the animation.\n   */\n  playState: AnimationPlayState;\n\n  /**\n   * The animation timeline.\n   */\n  timeline: AnimationTimeline;\n\n  /**\n   * The easing function for the animation.\n   */\n  timingFunction: EasingFunction;\n}\n/**\n * A 2D matrix.\n */\nexport interface MatrixForFloat {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n}\n/**\n * A 3D matrix.\n */\nexport interface Matrix3DForFloat {\n  m11: number;\n  m12: number;\n  m13: number;\n  m14: number;\n  m21: number;\n  m22: number;\n  m23: number;\n  m24: number;\n  m31: number;\n  m32: number;\n  m33: number;\n  m34: number;\n  m41: number;\n  m42: number;\n  m43: number;\n  m44: number;\n}\n/**\n * A value for the [rotate](https://drafts.csswg.org/css-transforms-2/#propdef-rotate) property.\n */\nexport interface Rotate {\n  /**\n   * The angle of rotation.\n   */\n  angle: Angle;\n\n  /**\n   * Rotation around the x axis.\n   */\n  x: number;\n\n  /**\n   * Rotation around the y axis.\n   */\n  y: number;\n\n  /**\n   * Rotation around the z axis.\n   */\n  z: number;\n}\n/**\n * A value for the [text-transform](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#text-transform-property) property.\n */\nexport interface TextTransform {\n  /**\n   * How case should be transformed.\n   */\n  case: TextTransformCase;\n\n  /**\n   * Converts all small Kana characters to the equivalent full-size Kana.\n   */\n  fullSizeKana: boolean;\n\n  /**\n   * Puts all typographic character units in full-width form.\n   */\n  fullWidth: boolean;\n}\n/**\n * A value for the [text-indent](https://www.w3.org/TR/2021/CRD-css-text-3-20210422/#text-indent-property) property.\n */\nexport interface TextIndent {\n  /**\n   * Affects the first line after each hard break.\n   */\n  eachLine: boolean;\n\n  /**\n   * Inverts which lines are affected.\n   */\n  hanging: boolean;\n\n  /**\n   * The amount to indent.\n   */\n  value: DimensionPercentageFor_LengthValue;\n}\n/**\n * A value for the [text-decoration](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-decoration-property) shorthand property.\n */\nexport interface TextDecoration {\n  /**\n   * The color of the lines.\n   */\n  color: CssColor;\n\n  /**\n   * The lines to display.\n   */\n  line: TextDecorationLine;\n\n  /**\n   * The style of the lines.\n   */\n  style: TextDecorationStyle;\n\n  /**\n   * The thickness of the lines.\n   */\n  thickness: TextDecorationThickness;\n}\n/**\n * A value for the [text-emphasis](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-emphasis-property) shorthand property.\n */\nexport interface TextEmphasis {\n  /**\n   * The text emphasis color.\n   */\n  color: CssColor;\n\n  /**\n   * The text emphasis style.\n   */\n  style: TextEmphasisStyle;\n}\n/**\n * A value for the [text-emphasis-position](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-emphasis-position-property) property.\n */\nexport interface TextEmphasisPosition {\n  /**\n   * The horizontal position.\n   */\n  horizontal: TextEmphasisPositionHorizontal;\n\n  /**\n   * The vertical position.\n   */\n  vertical: TextEmphasisPositionVertical;\n}\n/**\n * A value for the [text-shadow](https://www.w3.org/TR/2020/WD-css-text-decor-4-20200506/#text-shadow-property) property.\n */\nexport interface TextShadow {\n  /**\n   * The blur radius of the text shadow.\n   */\n  blur: Length;\n\n  /**\n   * The color of the text shadow.\n   */\n  color: CssColor;\n\n  /**\n   * The spread distance of the text shadow.\n   */\n  spread: Length;\n\n  /**\n   * The x offset of the text shadow.\n   */\n  xOffset: Length;\n\n  /**\n   * The y offset of the text shadow.\n   */\n  yOffset: Length;\n}\n/**\n * A value for the [cursor](https://www.w3.org/TR/2021/WD-css-ui-4-20210316/#cursor) property.\n */\nexport interface Cursor {\n  /**\n   * A list of cursor images.\n   */\n  images: CursorImage[];\n\n  /**\n   * A pre-defined cursor.\n   */\n  keyword: CursorKeyword;\n}\n/**\n * A [cursor image](https://www.w3.org/TR/2021/WD-css-ui-4-20210316/#cursor) value, used in the `cursor` property.\n *\n * See [Cursor](Cursor).\n */\nexport interface CursorImage {\n  /**\n   * The location in the image where the mouse pointer appears.\n   * @minItems 2\n   * @maxItems 2\n   */\n  hotspot?: [number, number] | null;\n\n  /**\n   * A url to the cursor image.\n   */\n  url: Url;\n}\n/**\n * A value for the [caret](https://www.w3.org/TR/2021/WD-css-ui-4-20210316/#caret) shorthand property.\n */\nexport interface Caret {\n  /**\n   * The caret color.\n   */\n  color: ColorOrAuto;\n\n  /**\n   * The caret shape.\n   */\n  shape: CaretShape;\n}\n/**\n * A value for the [list-style](https://www.w3.org/TR/2020/WD-css-lists-3-20201117/#list-style-property) shorthand property.\n */\nexport interface ListStyle {\n  /**\n   * The list marker image.\n   */\n  image: Image;\n\n  /**\n   * The list style type.\n   */\n  listStyleType: ListStyleType;\n\n  /**\n   * The position of the list marker.\n   */\n  position: ListStylePosition;\n}\n/**\n * A value for the [composes](https://github.com/css-modules/css-modules/#dependencies) property from CSS modules.\n */\nexport interface Composes {\n  /**\n   * Where the class names are composed from.\n   */\n  from?: Specifier | null;\n\n  /**\n   * The source location of the `composes` property.\n   */\n  loc: Location;\n\n  /**\n   * A list of class names to compose.\n   */\n  names: String[];\n}\n/**\n * An [`inset()`](https://www.w3.org/TR/css-shapes-1/#funcdef-inset) rectangle shape.\n */\nexport interface InsetRect {\n  /**\n   * A corner radius for the rectangle.\n   */\n  radius: BorderRadius;\n\n  /**\n   * The rectangle.\n   */\n  rect: RectFor_DimensionPercentageFor_LengthValue;\n}\n/**\n * A [`circle()`](https://www.w3.org/TR/css-shapes-1/#funcdef-circle) shape.\n */\nexport interface Circle2 {\n  /**\n   * The position of the center of the circle.\n   */\n  position: Position;\n\n  /**\n   * The radius of the circle.\n   */\n  radius: ShapeRadius;\n}\n/**\n * An [`ellipse()`](https://www.w3.org/TR/css-shapes-1/#funcdef-ellipse) shape.\n */\nexport interface Ellipse2 {\n  /**\n   * The position of the center of the ellipse.\n   */\n  position: Position;\n\n  /**\n   * The x-radius of the ellipse.\n   */\n  radiusX: ShapeRadius;\n\n  /**\n   * The y-radius of the ellipse.\n   */\n  radiusY: ShapeRadius;\n}\n/**\n * A [`polygon()`](https://www.w3.org/TR/css-shapes-1/#funcdef-polygon) shape.\n */\nexport interface Polygon {\n  /**\n   * The fill rule used to determine the interior of the polygon.\n   */\n  fillRule: FillRule;\n\n  /**\n   * The points of each vertex of the polygon.\n   */\n  points: Point[];\n}\n/**\n * A point within a `polygon()` shape.\n *\n * See [Polygon](Polygon).\n */\nexport interface Point {\n  /**\n   * The x position of the point.\n   */\n  x: DimensionPercentageFor_LengthValue;\n\n  /**\n   * the y position of the point.\n   */\n  y: DimensionPercentageFor_LengthValue;\n}\n/**\n * A value for the [mask](https://www.w3.org/TR/css-masking-1/#the-mask) shorthand property.\n */\nexport interface Mask {\n  /**\n   * The box in which the mask is clipped.\n   */\n  clip: MaskClip;\n\n  /**\n   * How the mask is composited with the element.\n   */\n  composite: MaskComposite;\n\n  /**\n   * The mask image.\n   */\n  image: Image;\n\n  /**\n   * How the mask image is interpreted.\n   */\n  mode: MaskMode;\n\n  /**\n   * The origin of the mask.\n   */\n  origin: GeometryBox;\n\n  /**\n   * The position of the mask.\n   */\n  position: Position;\n\n  /**\n   * How the mask repeats.\n   */\n  repeat: BackgroundRepeat;\n\n  /**\n   * The size of the mask image.\n   */\n  size: BackgroundSize;\n}\n/**\n * A value for the [mask-border](https://www.w3.org/TR/css-masking-1/#the-mask-border) shorthand property.\n */\nexport interface MaskBorder {\n  /**\n   * How the mask image is interpreted.\n   */\n  mode: MaskBorderMode;\n\n  /**\n   * The amount that the image extends beyond the border box.\n   */\n  outset: RectFor_LengthOrNumber;\n\n  /**\n   * How the mask image is scaled and tiled.\n   */\n  repeat: BorderImageRepeat;\n\n  /**\n   * The offsets that define where the image is sliced.\n   */\n  slice: BorderImageSlice;\n\n  /**\n   * The mask image.\n   */\n  source: Image;\n\n  /**\n   * The width of the mask image.\n   */\n  width: RectFor_BorderImageSideWidth;\n}\n/**\n * A [`drop-shadow()`](https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-drop-shadow) filter function.\n */\nexport interface DropShadow {\n  /**\n   * The blur radius of the drop shadow.\n   */\n  blur: Length;\n\n  /**\n   * The color of the drop shadow.\n   */\n  color: CssColor;\n\n  /**\n   * The x offset of the drop shadow.\n   */\n  xOffset: Length;\n\n  /**\n   * The y offset of the drop shadow.\n   */\n  yOffset: Length;\n}\n/**\n * A value for the [container](https://drafts.csswg.org/css-contain-3/#container-shorthand) shorthand property.\n */\nexport interface Container {\n  /**\n   * The container type.\n   */\n  containerType: ContainerType;\n\n  /**\n   * The container name.\n   */\n  name: ContainerNameList;\n}\nexport interface ColorScheme {\n  dark: boolean;\n  light: boolean;\n  only: boolean;\n}\n/**\n * A known property with an unparsed value.\n *\n * This type is used when the value of a known property could not be parsed, e.g. in the case css `var()` references are encountered. In this case, the raw tokens are stored instead.\n */\nexport interface UnparsedProperty {\n  /**\n   * The id of the property.\n   */\n  propertyId: PropertyId;\n\n  /**\n   * The property value, stored as a raw token list.\n   */\n  value: TokenOrValue[];\n}\n/**\n * A CSS custom property, representing any unknown property.\n */\nexport interface CustomProperty {\n  /**\n   * The name of the property.\n   */\n  name: CustomPropertyName;\n\n  /**\n   * The property value, stored as a raw token list.\n   */\n  value: TokenOrValue[];\n}\nexport interface AttrOperation {\n  caseSensitivity?: {| ...ParsedCaseSensitivity, ...string |};\n  operator: AttrSelectorOperator;\n  value: string;\n}\n/**\n * A [view transition part selector](https://w3c.github.io/csswg-drafts/css-view-transitions-1/#typedef-pt-name-selector).\n */\nexport interface ViewTransitionPartSelector {\n  /**\n   * A list of view transition classes.\n   */\n  classes: String[];\n\n  /**\n   * The view transition part name.\n   */\n  name?: ViewTransitionPartName | null;\n}\n/**\n * A [@keyframes](https://drafts.csswg.org/css-animations/#keyframes) rule.\n */\nexport interface KeyframesRule<D = Declaration> {\n  /**\n   * A list of keyframes in the animation.\n   */\n  keyframes: Keyframe<D>[];\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The animation name. <keyframes-name> = <custom-ident> | <string>\n   */\n  name: KeyframesName;\n\n  /**\n   * A vendor prefix for the rule, e.g. `@-webkit-keyframes`.\n   */\n  vendorPrefix: VendorPrefix;\n}\n/**\n * An individual keyframe within an `@keyframes` rule.\n *\n * See [KeyframesRule](KeyframesRule).\n */\nexport interface Keyframe<D = Declaration> {\n  /**\n   * The declarations for this keyframe.\n   */\n  declarations: DeclarationBlock<D>;\n\n  /**\n   * A list of keyframe selectors to associate with the declarations in this keyframe.\n   */\n  selectors: KeyframeSelector[];\n}\n/**\n * A percentage of a given timeline range\n */\nexport interface TimelineRangePercentage {\n  /**\n   * The name of the timeline range.\n   */\n  name: TimelineRangeName;\n\n  /**\n   * The percentage progress between the start and end of the range.\n   */\n  percentage: number;\n}\n/**\n * A [@font-face](https://drafts.csswg.org/css-fonts/#font-face-rule) rule.\n */\nexport interface FontFaceRule {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * Declarations in the `@font-face` rule.\n   */\n  properties: FontFaceProperty[];\n}\n/**\n * A `url()` value for the [src](https://drafts.csswg.org/css-fonts/#src-desc) property in an `@font-face` rule.\n */\nexport interface UrlSource {\n  /**\n   * Optional `format()` function.\n   */\n  format?: FontFormat | null;\n\n  /**\n   * Optional `tech()` function.\n   */\n  tech: FontTechnology[];\n\n  /**\n   * The URL.\n   */\n  url: Url;\n}\n/**\n * A contiguous range of Unicode code points.\n *\n * Cannot be empty. Can represent a single code point when start == end.\n */\nexport interface UnicodeRange {\n  /**\n   * Inclusive end of the range. In [0, 0x10FFFF].\n   */\n  end: number;\n\n  /**\n   * Inclusive start of the range. In [0, end].\n   */\n  start: number;\n}\n/**\n * A [@font-palette-values](https://drafts.csswg.org/css-fonts-4/#font-palette-values) rule.\n */\nexport interface FontPaletteValuesRule {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the font palette.\n   */\n  name: String;\n\n  /**\n   * Declarations in the `@font-palette-values` rule.\n   */\n  properties: FontPaletteValuesProperty[];\n}\n/**\n * A value for the [override-colors](https://drafts.csswg.org/css-fonts-4/#override-color) property in an `@font-palette-values` rule.\n */\nexport interface OverrideColors {\n  /**\n   * The replacement color.\n   */\n  color: CssColor;\n\n  /**\n   * The index of the color within the palette to override.\n   */\n  index: number;\n}\n/**\n * A [@font-feature-values](https://drafts.csswg.org/css-fonts/#font-feature-values) rule.\n */\nexport interface FontFeatureValuesRule {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the font feature values.\n   */\n  name: String[];\n\n  /**\n   * The rules within the `@font-feature-values` rule.\n   */\n  rules: {\n    [k: string]: FontFeatureSubrule,\n  };\n}\n/**\n * A sub-rule of `@font-feature-values` https://drafts.csswg.org/css-fonts/#font-feature-values-syntax\n */\nexport interface FontFeatureSubrule {\n  /**\n   * The declarations within the `@font-feature-values` sub-rules.\n   */\n  declarations: {\n    [k: string]: number[],\n  };\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the `@font-feature-values` sub-rule.\n   */\n  name: FontFeatureSubruleType;\n}\n/**\n * A [@page](https://www.w3.org/TR/css-page-3/#at-page-rule) rule.\n */\nexport interface PageRule<D = Declaration> {\n  /**\n   * The declarations within the `@page` rule.\n   */\n  declarations: DeclarationBlock<D>;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The nested margin rules.\n   */\n  rules: PageMarginRule<D>[];\n\n  /**\n   * A list of page selectors.\n   */\n  selectors: PageSelector[];\n}\n/**\n * A [page margin rule](https://www.w3.org/TR/css-page-3/#margin-at-rules) rule.\n */\nexport interface PageMarginRule<D = Declaration> {\n  /**\n   * The declarations within the rule.\n   */\n  declarations: DeclarationBlock<D>;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The margin box identifier for this rule.\n   */\n  marginBox: PageMarginBox;\n}\n/**\n * A [page selector](https://www.w3.org/TR/css-page-3/#typedef-page-selector) within a `@page` rule.\n *\n * Either a name or at least one pseudo class is required.\n */\nexport interface PageSelector {\n  /**\n   * An optional named page type.\n   */\n  name?: String | null;\n\n  /**\n   * A list of page pseudo classes.\n   */\n  pseudoClasses: PagePseudoClass[];\n}\n/**\n * A [@supports](https://drafts.csswg.org/css-conditional-3/#at-supports) rule.\n */\nexport interface SupportsRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The supports condition.\n   */\n  condition: SupportsCondition;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The rules within the `@supports` rule.\n   */\n  rules: Rule<D, M>[];\n}\n/**\n * A [@counter-style](https://drafts.csswg.org/css-counter-styles/#the-counter-style-rule) rule.\n */\nexport interface CounterStyleRule<D = Declaration> {\n  /**\n   * Declarations in the `@counter-style` rule.\n   */\n  declarations: DeclarationBlock<D>;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the counter style to declare.\n   */\n  name: String;\n}\n/**\n * A [@namespace](https://drafts.csswg.org/css-namespaces/#declaration) rule.\n */\nexport interface NamespaceRule {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * An optional namespace prefix to declare, or `None` to declare the default namespace.\n   */\n  prefix?: String | null;\n\n  /**\n   * The url of the namespace.\n   */\n  url: String;\n}\n/**\n * A [@-moz-document](https://www.w3.org/TR/2012/WD-css3-conditional-20120911/#at-document) rule.\n *\n * Note that only the `url-prefix()` function with no arguments is supported, and only the `-moz` prefix is allowed since Firefox was the only browser that ever implemented this rule.\n */\nexport interface MozDocumentRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * Nested rules within the `@-moz-document` rule.\n   */\n  rules: Rule<D, M>[];\n}\n/**\n * A [@nest](https://www.w3.org/TR/css-nesting-1/#at-nest) rule.\n */\nexport interface NestingRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The style rule that defines the selector and declarations for the `@nest` rule.\n   */\n  style: StyleRule<D, M>;\n}\n/**\n * A [@viewport](https://drafts.csswg.org/css-device-adapt/#atviewport-rule) rule.\n */\nexport interface ViewportRule<D = Declaration> {\n  /**\n   * The declarations within the `@viewport` rule.\n   */\n  declarations: DeclarationBlock<D>;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The vendor prefix for this rule, e.g. `@-ms-viewport`.\n   */\n  vendorPrefix: VendorPrefix;\n}\n/**\n * A [@custom-media](https://drafts.csswg.org/mediaqueries-5/#custom-mq) rule.\n */\nexport interface CustomMediaRule<M = MediaQuery> {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the declared media query.\n   */\n  name: String;\n\n  /**\n   * The media query to declare.\n   */\n  query: MediaList<M>;\n}\n/**\n * A [@layer statement](https://drafts.csswg.org/css-cascade-5/#layer-empty) rule.\n *\n * See also [LayerBlockRule](LayerBlockRule).\n */\nexport interface LayerStatementRule {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The layer names to declare.\n   */\n  names: String[][];\n}\n/**\n * A [@layer block](https://drafts.csswg.org/css-cascade-5/#layer-block) rule.\n */\nexport interface LayerBlockRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the layer to declare, or `None` to declare an anonymous layer.\n   */\n  name?: String[] | null;\n\n  /**\n   * The rules within the `@layer` rule.\n   */\n  rules: Rule<D, M>[];\n}\n/**\n * A [@property](https://drafts.css-houdini.org/css-properties-values-api/#at-property-rule) rule.\n */\nexport interface PropertyRule {\n  /**\n   * Whether the custom property is inherited.\n   */\n  inherits: boolean;\n\n  /**\n   * An optional initial value for the custom property.\n   */\n  initialValue?: ParsedComponent | null;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the custom property to declare.\n   */\n  name: String;\n\n  /**\n   * A syntax string to specify the grammar for the custom property.\n   */\n  syntax: SyntaxString;\n}\n/**\n * A [syntax component](https://drafts.css-houdini.org/css-properties-values-api/#syntax-component) within a [SyntaxString](SyntaxString).\n *\n * A syntax component consists of a component kind an a multiplier, which indicates how the component may repeat during parsing.\n */\nexport interface SyntaxComponent {\n  /**\n   * The kind of component.\n   */\n  kind: SyntaxComponentKind;\n\n  /**\n   * A multiplier for the component.\n   */\n  multiplier: Multiplier;\n}\n/**\n * A [@container](https://drafts.csswg.org/css-contain-3/#container-rule) rule.\n */\nexport interface ContainerRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The container condition.\n   */\n  condition: ContainerCondition<D>;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the container.\n   */\n  name?: String | null;\n\n  /**\n   * The rules within the `@container` rule.\n   */\n  rules: Rule<D, M>[];\n}\n/**\n * A [@scope](https://drafts.csswg.org/css-cascade-6/#scope-atrule) rule.\n * @scope (<scope-start>) [to (<scope-end>)]? { <stylesheet> }\n */\nexport interface ScopeRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * Nested rules within the `@scope` rule.\n   */\n  rules: Rule<D, M>[];\n\n  /**\n   * A selector list used to identify any scoping limits.\n   */\n  scopeEnd?: SelectorList | null;\n\n  /**\n   * A selector list used to identify the scoping root(s).\n   */\n  scopeStart?: SelectorList | null;\n}\n/**\n * A [@starting-style](https://drafts.csswg.org/css-transitions-2/#defining-before-change-style-the-starting-style-rule) rule.\n */\nexport interface StartingStyleRule<D = Declaration, M = MediaQuery> {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * Nested rules within the `@starting-style` rule.\n   */\n  rules: Rule<D, M>[];\n}\n/**\n * A [@view-transition](https://drafts.csswg.org/css-view-transitions-2/#view-transition-rule) rule.\n */\nexport interface ViewTransitionRule {\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * Declarations in the `@view-transition` rule.\n   */\n  properties: ViewTransitionProperty[];\n}\n/**\n * An unknown at-rule, stored as raw tokens.\n */\nexport interface UnknownAtRule {\n  /**\n   * The contents of the block, if any.\n   */\n  block?: TokenOrValue[] | null;\n\n  /**\n   * The location of the rule in the source file.\n   */\n  loc: Location2;\n\n  /**\n   * The name of the at-rule (without the @).\n   */\n  name: String;\n\n  /**\n   * The prelude of the rule.\n   */\n  prelude: TokenOrValue[];\n}\n"
        }
    ]
}
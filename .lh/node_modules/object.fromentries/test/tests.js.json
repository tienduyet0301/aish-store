{
    "sourceFile": "node_modules/object.fromentries/test/tests.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892948481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nmodule.exports = function (fromEntries, t) {\n\tvar a = {};\n\tvar b = {};\n\tvar c = {};\n\tvar entries = [['a', a], ['b', b], ['c', c]];\n\tvar obj = { a: a, b: b, c: c };\n\n\tt.deepEqual(fromEntries(entries), obj, 'entries -> obj');\n\n\tt['throws'](function () { fromEntries(); }, 'entries throws on absent iterable');\n\tt['throws'](function () { fromEntries(undefined); }, 'entries throws on undefined');\n\tt['throws'](function () { fromEntries(null); }, 'entries throws on null');\n\n\tt.deepEqual(fromEntries([['foo', 1], ['foo', 2]]), { foo: 2 }, 'works with a duplicate key');\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/data-view-byte-length/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892109750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar forEach = require('for-each');\nvar v = require('es-value-fixtures');\nvar inspect = require('object-inspect');\n\nvar dataViewByteLength = require('../');\n\ntest('dataViewByteLength', function (t) {\n\tforEach(\n\t\t// @ts-expect-error TS sucks at [].concat\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {[...typeof v.primitives, ...typeof v.objects]} */ ([].concat(v.primitives, v.objects)),\n\t\tfunction (nonDV) {\n\t\t\tt['throws'](function () { dataViewByteLength(nonDV); }, TypeError, inspect(nonDV) + ' is not a DataView');\n\t\t}\n\t);\n\n\tt.test('DataView', { skip: typeof DataView !== 'function' }, function (st) {\n\t\tvar ab = new ArrayBuffer(42);\n\t\tvar dv = new DataView(ab);\n\n\t\tst.equal(dataViewByteLength(dv), 42, inspect(dv) + ' has the same byteLength as the buffer originally passed to the DataView');\n\t\tst.equal(dataViewByteLength(dv), dv.buffer.byteLength, inspect(dv) + ' has the same byteLength as the bufferâ€™s byteLength of its own buffer property');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"
        }
    ]
}
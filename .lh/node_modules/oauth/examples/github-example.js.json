{
    "sourceFile": "node_modules/oauth/examples/github-example.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892938165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var http = require('http');\nvar qs = require('querystring');\n// var OAuth = require('oauth'), OAuth2 = OAuth.OAuth2;\nvar OAuth2 = require('../lib/oauth2.js').OAuth2;\n\nvar clientID = '';\nvar clientSecret = '';\nvar oauth2 = new OAuth2(clientID,\n                        clientSecret,\n                        'https://github.com/', \n                        'login/oauth/authorize',\n                        'login/oauth/access_token',\n                        null); /** Custom headers */\n\nhttp.createServer(function (req, res) {\n    var p = req.url.split('/');\n    pLen = p.length;\n    \n    /**\n     * Authorised url as per github docs:\n     * https://developer.github.com/v3/oauth/#redirect-users-to-request-github-access\n     * \n     * getAuthorizedUrl: https://github.com/ciaranj/node-oauth/blob/master/lib/oauth2.js#L148\n     * Adding params to authorize url with fields as mentioned in github docs\n     *\n     */\n    var authURL = oauth2.getAuthorizeUrl({\n        redirect_uri: 'http://localhost:8080/code',\n        scope: ['repo', 'user'],\n        state: 'some random string to protect against cross-site request forgery attacks'\n    });\n\n\n    /**\n     * Creating an anchor with authURL as href and sending as response\n     */\n    var body = '<a href=\"' + authURL + '\"> Get Code </a>';\n    if (pLen === 2 && p[1] === '') {\n        res.writeHead(200, {\n            'Content-Length': body.length,\n            'Content-Type': 'text/html' });\n        res.end(body);\n    } else if (pLen === 2 && p[1].indexOf('code') === 0) {\n\n        /** Github sends auth code so that access_token can be obtained */\n        var qsObj = {};\n        \n        /** To obtain and parse code='...' from code?code='...' */\n        qsObj = qs.parse(p[1].split('?')[1]); \n\n        /** Obtaining access_token */\n        oauth2.getOAuthAccessToken(\n            qsObj.code,\n            {'redirect_uri': 'http://localhost:8080/code/'},\n            function (e, access_token, refresh_token, results){\n                if (e) {\n                    console.log(e);\n                    res.end(e);\n                } else if (results.error) {\n                    console.log(results);\n                    res.end(JSON.stringify(results));\n                }\n                else {\n                    console.log('Obtained access_token: ', access_token);\n                    res.end( access_token);\n                }\n        });\n\n    } else {\n        // Unhandled url\n    }\n\n}).listen(8080);\n"
        }
    ]
}
{
    "sourceFile": "node_modules/object-inspect/test/toStringTag.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892942592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar inspect = require('../');\n\ntest('Symbol.toStringTag', { skip: !hasToStringTag }, function (t) {\n    t.plan(4);\n\n    var obj = { a: 1 };\n    t.equal(inspect(obj), '{ a: 1 }', 'object, no Symbol.toStringTag');\n\n    obj[Symbol.toStringTag] = 'foo';\n    t.equal(inspect(obj), '{ a: 1, [Symbol(Symbol.toStringTag)]: \\'foo\\' }', 'object with Symbol.toStringTag');\n\n    t.test('null objects', { skip: 'toString' in { __proto__: null } }, function (st) {\n        st.plan(2);\n\n        var dict = { __proto__: null, a: 1 };\n        st.equal(inspect(dict), '[Object: null prototype] { a: 1 }', 'null object with Symbol.toStringTag');\n\n        dict[Symbol.toStringTag] = 'Dict';\n        st.equal(inspect(dict), '[Dict: null prototype] { a: 1, [Symbol(Symbol.toStringTag)]: \\'Dict\\' }', 'null object with Symbol.toStringTag');\n    });\n\n    t.test('instances', function (st) {\n        st.plan(4);\n\n        function C() {\n            this.a = 1;\n        }\n        st.equal(Object.prototype.toString.call(new C()), '[object Object]', 'instance, no toStringTag, Object.prototype.toString');\n        st.equal(inspect(new C()), 'C { a: 1 }', 'instance, no toStringTag');\n\n        C.prototype[Symbol.toStringTag] = 'Class!';\n        st.equal(Object.prototype.toString.call(new C()), '[object Class!]', 'instance, with toStringTag, Object.prototype.toString');\n        st.equal(inspect(new C()), 'C [Class!] { a: 1 }', 'instance, with toStringTag');\n    });\n});\n"
        }
    ]
}
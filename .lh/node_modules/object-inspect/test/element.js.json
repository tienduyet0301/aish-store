{
    "sourceFile": "node_modules/object-inspect/test/element.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892941662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var inspect = require('../');\nvar test = require('tape');\n\ntest('element', function (t) {\n    t.plan(3);\n    var elem = {\n        nodeName: 'div',\n        attributes: [{ name: 'class', value: 'row' }],\n        getAttribute: function (key) { return key; },\n        childNodes: []\n    };\n    var obj = [1, elem, 3];\n    t.deepEqual(inspect(obj), '[ 1, <div class=\"row\"></div>, 3 ]');\n    t.deepEqual(inspect(obj, { quoteStyle: 'single' }), \"[ 1, <div class='row'></div>, 3 ]\");\n    t.deepEqual(inspect(obj, { quoteStyle: 'double' }), '[ 1, <div class=\"row\"></div>, 3 ]');\n});\n\ntest('element no attr', function (t) {\n    t.plan(1);\n    var elem = {\n        nodeName: 'div',\n        getAttribute: function (key) { return key; },\n        childNodes: []\n    };\n    var obj = [1, elem, 3];\n    t.deepEqual(inspect(obj), '[ 1, <div></div>, 3 ]');\n});\n\ntest('element with contents', function (t) {\n    t.plan(1);\n    var elem = {\n        nodeName: 'div',\n        getAttribute: function (key) { return key; },\n        childNodes: [{ nodeName: 'b' }]\n    };\n    var obj = [1, elem, 3];\n    t.deepEqual(inspect(obj), '[ 1, <div>...</div>, 3 ]');\n});\n\ntest('element instance', function (t) {\n    t.plan(1);\n    var h = global.HTMLElement;\n    global.HTMLElement = function (name, attr) {\n        this.nodeName = name;\n        this.attributes = attr;\n    };\n    global.HTMLElement.prototype.getAttribute = function () {};\n\n    var elem = new global.HTMLElement('div', []);\n    var obj = [1, elem, 3];\n    t.deepEqual(inspect(obj), '[ 1, <div></div>, 3 ]');\n    global.HTMLElement = h;\n});\n"
        }
    ]
}
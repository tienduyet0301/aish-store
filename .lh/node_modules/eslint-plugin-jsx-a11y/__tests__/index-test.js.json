{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/index-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892263510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/* eslint global-require: 0 */\n\nimport fs from 'fs';\nimport path from 'path';\nimport test from 'tape';\n\nimport plugin from '../src';\n\nconst rules = fs.readdirSync(path.resolve(__dirname, '../src/rules/'))\n  .map((f) => path.basename(f, '.js'));\n\ntest('all rule files should be exported by the plugin', (t) => {\n  rules.forEach((ruleName) => {\n    t.equal(\n      plugin.rules[ruleName],\n      require(path.join('../src/rules', ruleName)), // eslint-disable-line import/no-dynamic-require\n      `exports ${ruleName}`,\n    );\n  });\n\n  t.end();\n});\n\ntest('configurations', (t) => {\n  t.notEqual(plugin.configs.recommended, undefined, 'exports a \\'recommended\\' configuration');\n\n  t.end();\n});\n\ntest('schemas', (t) => {\n  rules.forEach((ruleName) => {\n    const rule = require(path.join('../src/rules', ruleName)); // eslint-disable-line import/no-dynamic-require\n    const schema = rule.meta && rule.meta.schema && rule.meta.schema[0];\n    const { type } = schema;\n\n    t.equal(type, 'object', `${ruleName} exports a schema with type object`);\n  });\n\n  t.end();\n});\n"
        }
    ]
}
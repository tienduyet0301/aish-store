{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/util/parserOptionsMapper-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892265319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { version as eslintVersion } from 'eslint/package.json';\nimport test from 'tape';\nimport semver from 'semver';\n\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\n\nconst usingLegacy = semver.major(eslintVersion) < 9;\n\ntest('parserOptionsMapper', (t) => {\n  const expectedResult = usingLegacy\n    ? {\n      code: '<div />',\n      errors: [],\n      options: {},\n      parserOptions: {\n        ecmaVersion: 2018,\n        ecmaFeatures: {\n          experimentalObjectRestSpread: true,\n          jsx: true,\n        },\n      },\n      settings: {},\n    }\n    : {\n      code: '<div />',\n      errors: [],\n      options: {},\n      languageOptions: {\n        ecmaVersion: 'latest',\n        parserOptions: {\n          ecmaFeatures: {\n            experimentalObjectRestSpread: true,\n            jsx: true,\n          },\n        },\n      },\n      settings: {},\n    };\n\n  t.deepEqual(\n    parserOptionsMapper({\n      code: '<div />',\n      errors: [],\n      options: {},\n    }),\n    expectedResult,\n    'returns a test case object',\n  );\n\n  const expectedResult2 = usingLegacy\n    ? {\n      code: '<div />',\n      errors: [],\n      options: {},\n      parserOptions: {\n        ecmaVersion: 5,\n        ecmaFeatures: {\n          experimentalObjectRestSpread: true,\n          jsx: true,\n        },\n      },\n      settings: {},\n    }\n    : {\n      code: '<div />',\n      errors: [],\n      options: {},\n      languageOptions: {\n        ecmaVersion: 5,\n        parserOptions: {\n          ecmaFeatures: {\n            experimentalObjectRestSpread: true,\n            jsx: true,\n          },\n        },\n      },\n      settings: {},\n    };\n  t.deepEqual(\n    parserOptionsMapper({\n      code: '<div />',\n      errors: [],\n      options: {},\n      languageOptions: {\n        ecmaVersion: 5,\n      },\n    }),\n    expectedResult2,\n    'allows for overriding parserOptions',\n  );\n\n  t.end();\n});\n"
        }
    ]
}
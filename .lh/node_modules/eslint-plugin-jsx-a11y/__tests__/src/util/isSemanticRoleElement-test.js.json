{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/util/isSemanticRoleElement-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892265237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import test from 'tape';\n\nimport isSemanticRoleElement from '../../../src/util/isSemanticRoleElement';\nimport JSXAttributeMock from '../../../__mocks__/JSXAttributeMock';\n\ntest('isSemanticRoleElement', (t) => {\n  t.equal(\n    isSemanticRoleElement('input', [\n      JSXAttributeMock('type', 'checkbox'),\n      JSXAttributeMock('role', 'switch'),\n    ]),\n    true,\n    'identifies semantic role elements',\n  );\n\n  t.test('rejects non-semantics role elements', (st) => {\n    st.equal(\n      isSemanticRoleElement('input', [\n        JSXAttributeMock('type', 'radio'),\n        JSXAttributeMock('role', 'switch'),\n      ]),\n      false,\n    );\n\n    st.equal(\n      isSemanticRoleElement('input', [\n        JSXAttributeMock('type', 'text'),\n        JSXAttributeMock('role', 'combobox'),\n      ]),\n      false,\n    );\n\n    st.equal(\n      isSemanticRoleElement('button', [\n        JSXAttributeMock('role', 'switch'),\n        JSXAttributeMock('aria-pressed', 'true'),\n      ]),\n      false,\n    );\n\n    st.equal(\n      isSemanticRoleElement('input', [\n        JSXAttributeMock('role', 'switch'),\n      ]),\n      false,\n    );\n\n    st.end();\n  });\n\n  t.doesNotThrow(\n    () => {\n      isSemanticRoleElement('input', [\n        JSXAttributeMock('type', 'checkbox'),\n        JSXAttributeMock('role', 'checkbox'),\n        JSXAttributeMock('aria-checked', 'false'),\n        JSXAttributeMock('aria-labelledby', 'foo'),\n        JSXAttributeMock('tabindex', '0'),\n        {\n          type: 'JSXSpreadAttribute',\n          argument: {\n            type: 'Identifier',\n            name: 'props',\n          },\n        },\n      ]);\n    },\n    'does not throw on JSXSpreadAttribute',\n  );\n\n  t.end();\n});\n"
        }
    ]
}
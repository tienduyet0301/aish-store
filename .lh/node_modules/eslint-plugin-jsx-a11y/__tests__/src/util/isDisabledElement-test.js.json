{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/util/isDisabledElement-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892265041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import test from 'tape';\n\nimport isDisabledElement from '../../../src/util/isDisabledElement';\nimport JSXAttributeMock from '../../../__mocks__/JSXAttributeMock';\n\ntest('isDisabledElement', (t) => {\n  t.test('HTML5', (st) => {\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('disabled', 'disabled'),\n      ]),\n      true,\n      'identifies HTML5 disabled elements',\n    );\n\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('disabled', null),\n      ]),\n      true,\n      'identifies HTML5 disabled elements with null as the value',\n    );\n\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('disabled', undefined),\n      ]),\n      false,\n      'does not identify HTML5 disabled elements with undefined as the value',\n    );\n\n    st.end();\n  });\n\n  t.test('ARIA', (st) => {\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('aria-disabled', 'true'),\n      ]),\n      true,\n      'does not identify ARIA disabled elements',\n    );\n\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('aria-disabled', true),\n      ]),\n      true,\n      'does not identify ARIA disabled elements',\n    );\n\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('aria-disabled', 'false'),\n      ]),\n      false,\n      'does not identify ARIA disabled elements',\n    );\n\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('aria-disabled', false),\n      ]),\n      false,\n      'does not identify ARIA disabled elements',\n    );\n\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('aria-disabled', null),\n      ]),\n      false,\n      'does not identify ARIA disabled elements with null as the value',\n    );\n\n    st.equal(\n      isDisabledElement([\n        JSXAttributeMock('aria-disabled', undefined),\n      ]),\n      false,\n      'does not identify ARIA disabled elements with undefined as the value',\n    );\n\n    st.end();\n  });\n\n  t.end();\n});\n"
        }
    ]
}
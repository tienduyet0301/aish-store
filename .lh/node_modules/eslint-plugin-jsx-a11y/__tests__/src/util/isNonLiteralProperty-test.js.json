{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/util/isNonLiteralProperty-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892265212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import test from 'tape';\n\nimport isNonLiteralProperty from '../../../src/util/isNonLiteralProperty';\nimport IdentifierMock from '../../../__mocks__/IdentifierMock';\nimport JSXAttributeMock from '../../../__mocks__/JSXAttributeMock';\nimport JSXSpreadAttributeMock from '../../../__mocks__/JSXSpreadAttributeMock';\nimport JSXTextMock from '../../../__mocks__/JSXTextMock';\nimport LiteralMock from '../../../__mocks__/LiteralMock';\n\nconst theProp = 'theProp';\n\nconst spread = JSXSpreadAttributeMock('theSpread');\n\ntest('isNonLiteralProperty', (t) => {\n  t.equal(\n    isNonLiteralProperty([], theProp),\n    false,\n    'does not identify them as non-literal role elements',\n  );\n\n  t.equal(\n    isNonLiteralProperty([JSXAttributeMock(theProp, LiteralMock('theRole'))], theProp),\n    false,\n    'does not identify elements with a literal property as non-literal role elements without spread operator',\n  );\n\n  t.equal(\n    isNonLiteralProperty([spread, JSXAttributeMock(theProp, LiteralMock('theRole'))], theProp),\n    false,\n    'does not identify elements with a literal property as non-literal role elements with spread operator',\n  );\n\n  t.equal(\n    isNonLiteralProperty([JSXAttributeMock(theProp, JSXTextMock('theRole'))], theProp),\n    false,\n    'identifies elements with a JSXText property as non-literal role elements',\n  );\n\n  t.equal(\n    isNonLiteralProperty([JSXAttributeMock(theProp, IdentifierMock('undefined'))], theProp),\n    false,\n    'does not identify elements with a property of undefined as non-literal role elements',\n  );\n\n  t.equal(\n    isNonLiteralProperty([JSXAttributeMock(theProp, IdentifierMock('theIdentifier'))], theProp),\n    true,\n    'identifies elements with an expression property as non-literal role elements',\n  );\n\n  t.end();\n});\n"
        }
    ]
}
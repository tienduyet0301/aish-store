{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/util/isContentEditable-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892265016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import test from 'tape';\n\nimport isContentEditable from '../../../src/util/isContentEditable';\nimport JSXAttributeMock from '../../../__mocks__/JSXAttributeMock';\n\ntest('isContentEditable - HTML5', (t) => {\n  t.equal(\n    isContentEditable('some tag', [\n      JSXAttributeMock('contentEditable', 'true'),\n    ]),\n    true,\n    'identifies HTML5 contentEditable elements',\n  );\n\n  t.test('not content editable', (st) => {\n    st.equal(\n      isContentEditable('some tag', [\n        JSXAttributeMock('contentEditable', null),\n      ]),\n      false,\n      'does not identify HTML5 content editable elements with null as the value',\n    );\n\n    st.equal(\n      isContentEditable('some tag', [\n        JSXAttributeMock('contentEditable', undefined),\n      ]),\n      false,\n      'does not identify HTML5 content editable elements with undefined as the value',\n    );\n\n    st.equal(\n      isContentEditable('some tag', [\n        JSXAttributeMock('contentEditable', true),\n      ]),\n      false,\n      'does not identify HTML5 content editable elements with true as the value',\n    );\n\n    st.equal(\n      isContentEditable('some tag', [\n        JSXAttributeMock('contentEditable', 'false'),\n      ]),\n      false,\n      'does not identify HTML5 content editable elements with \"false\" as the value',\n    );\n\n    st.end();\n  });\n\n  t.end();\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/media-has-caption-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892264199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview <audio> and <video> elements must have a <track> for captions.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/media-has-caption';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'Media elements such as <audio> and <video> must have a <track> for captions.',\n  type: 'JSXOpeningElement',\n};\n\nconst customSchema = [\n  {\n    audio: ['Audio'],\n    video: ['Video'],\n    track: ['Track'],\n  },\n];\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    polymorphicPropName: 'as',\n    components: {\n      Audio: 'audio',\n      Video: 'video',\n      Track: 'track',\n    },\n  },\n};\n\nruleTester.run('media-has-caption', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<MyDiv />;' },\n    { code: '<audio><track kind=\"captions\" /></audio>' },\n    { code: '<audio><track kind=\"Captions\" /></audio>' },\n    {\n      code: '<audio><track kind=\"Captions\" /><track kind=\"subtitles\" /></audio>',\n    },\n    { code: '<video><track kind=\"captions\" /></video>' },\n    { code: '<video><track kind=\"Captions\" /></video>' },\n    {\n      code: '<video><track kind=\"Captions\" /><track kind=\"subtitles\" /></video>',\n    },\n    {\n      code: '<audio muted={true}></audio>',\n    },\n    {\n      code: '<video muted={true}></video>',\n    },\n    {\n      code: '<video muted></video>',\n    },\n    {\n      code: '<Audio><track kind=\"captions\" /></Audio>',\n      options: customSchema,\n    },\n    {\n      code: '<audio><Track kind=\"captions\" /></audio>',\n      options: customSchema,\n    },\n    {\n      code: '<Video><track kind=\"captions\" /></Video>',\n      options: customSchema,\n    },\n    {\n      code: '<video><Track kind=\"captions\" /></video>',\n      options: customSchema,\n    },\n    {\n      code: '<Audio><Track kind=\"captions\" /></Audio>',\n      options: customSchema,\n    },\n    {\n      code: '<Video><Track kind=\"captions\" /></Video>',\n      options: customSchema,\n    },\n    {\n      code: '<Video muted></Video>',\n      options: customSchema,\n    },\n    {\n      code: '<Video muted={true}></Video>',\n      options: customSchema,\n    },\n    {\n      code: '<Audio muted></Audio>',\n      options: customSchema,\n    },\n    {\n      code: '<Audio muted={true}></Audio>',\n      options: customSchema,\n    },\n    {\n      code: '<Audio><track kind=\"captions\" /></Audio>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<audio><Track kind=\"captions\" /></audio>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<Video><track kind=\"captions\" /></Video>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<video><Track kind=\"captions\" /></video>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<Audio><Track kind=\"captions\" /></Audio>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<Video><Track kind=\"captions\" /></Video>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<Video muted></Video>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<Video muted={true}></Video>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<Audio muted></Audio>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<Audio muted={true}></Audio>',\n      settings: componentsSettings,\n    },\n    {\n      code: '<Box as=\"audio\" muted={true}></Box>',\n      settings: componentsSettings,\n    },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<audio><track /></audio>', errors: [expectedError] },\n    {\n      code: '<audio><track kind=\"subtitles\" /></audio>',\n      errors: [expectedError],\n    },\n    { code: '<audio />', errors: [expectedError] },\n    { code: '<video><track /></video>', errors: [expectedError] },\n    {\n      code: '<video><track kind=\"subtitles\" /></video>',\n      errors: [expectedError],\n    },\n    {\n      code: '<Audio muted={false}></Audio>',\n      options: customSchema,\n      errors: [expectedError],\n    },\n    {\n      code: '<Video muted={false}></Video>',\n      options: customSchema,\n      errors: [expectedError],\n    },\n    {\n      code: '<Audio muted={false}></Audio>',\n      settings: componentsSettings,\n      errors: [expectedError],\n    },\n    {\n      code: '<Video muted={false}></Video>',\n      settings: componentsSettings,\n      errors: [expectedError],\n    },\n    { code: '<video />', errors: [expectedError] },\n    { code: '<audio>Foo</audio>', errors: [expectedError] },\n    { code: '<video>Foo</video>', errors: [expectedError] },\n    { code: '<Audio />', options: customSchema, errors: [expectedError] },\n    { code: '<Video />', options: customSchema, errors: [expectedError] },\n    { code: '<Audio />', settings: componentsSettings, errors: [expectedError] },\n    { code: '<Video />', settings: componentsSettings, errors: [expectedError] },\n    { code: '<audio><Track /></audio>', options: customSchema, errors: [expectedError] },\n    { code: '<video><Track /></video>', options: customSchema, errors: [expectedError] },\n    {\n      code: '<Audio><Track kind=\"subtitles\" /></Audio>',\n      options: customSchema,\n      errors: [expectedError],\n    },\n    {\n      code: '<Video><Track kind=\"subtitles\" /></Video>',\n      options: customSchema,\n      errors: [expectedError],\n    },\n    {\n      code: '<Audio><Track kind=\"subtitles\" /></Audio>',\n      settings: componentsSettings,\n      errors: [expectedError],\n    },\n    {\n      code: '<Video><Track kind=\"subtitles\" /></Video>',\n      settings: componentsSettings,\n      errors: [expectedError],\n    },\n    {\n      code: '<Box as=\"audio\"><Track kind=\"subtitles\" /></Box>',\n      settings: componentsSettings,\n      errors: [expectedError],\n    },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
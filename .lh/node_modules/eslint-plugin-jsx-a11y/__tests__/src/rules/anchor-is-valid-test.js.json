{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/anchor-is-valid-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892263694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Performs validity check on anchor hrefs. Warns when anchors are used as buttons.\n * @author Almero Steyn\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/anchor-is-valid';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst preferButtonErrorMessage = 'Anchor used as a button. Anchors are primarily expected to navigate. Use the button element instead. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md';\n\nconst noHrefErrorMessage = 'The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md';\n\nconst invalidHrefErrorMessage = 'The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md';\n\nconst preferButtonexpectedError = {\n  message: preferButtonErrorMessage,\n  type: 'JSXOpeningElement',\n};\nconst noHrefexpectedError = {\n  message: noHrefErrorMessage,\n  type: 'JSXOpeningElement',\n};\nconst invalidHrefexpectedError = {\n  message: invalidHrefErrorMessage,\n  type: 'JSXOpeningElement',\n};\n\nconst components = [{\n  components: ['Anchor', 'Link'],\n}];\nconst specialLink = [{\n  specialLink: ['hrefLeft', 'hrefRight'],\n}];\nconst noHrefAspect = [{\n  aspects: ['noHref'],\n}];\nconst invalidHrefAspect = [{\n  aspects: ['invalidHref'],\n}];\nconst preferButtonAspect = [{\n  aspects: ['preferButton'],\n}];\nconst noHrefInvalidHrefAspect = [{\n  aspects: ['noHref', 'invalidHref'],\n}];\nconst noHrefPreferButtonAspect = [{\n  aspects: ['noHref', 'preferButton'],\n}];\nconst preferButtonInvalidHrefAspect = [{\n  aspects: ['preferButton', 'invalidHref'],\n}];\n\nconst componentsAndSpecialLink = [{\n  components: ['Anchor'],\n  specialLink: ['hrefLeft'],\n}];\n\nconst componentsAndSpecialLinkAndInvalidHrefAspect = [{\n  components: ['Anchor'],\n  specialLink: ['hrefLeft'],\n  aspects: ['invalidHref'],\n}];\n\nconst componentsAndSpecialLinkAndNoHrefAspect = [{\n  components: ['Anchor'],\n  specialLink: ['hrefLeft'],\n  aspects: ['noHref'],\n}];\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Anchor: 'a',\n      Link: 'a',\n    },\n  },\n};\n\nruleTester.run('anchor-is-valid', rule, {\n  valid: parsers.all([].concat(\n    // DEFAULT ELEMENT 'a' TESTS\n    { code: '<Anchor />' },\n    { code: '<a {...props} />' },\n    { code: '<a href=\"foo\" />' },\n    { code: '<a href={foo} />' },\n    { code: '<a href=\"/foo\" />' },\n    { code: '<a href=\"https://foo.bar.com\" />' },\n    { code: '<div href=\"foo\" />' },\n    { code: '<a href=\"javascript\" />' },\n    { code: '<a href=\"javascriptFoo\" />' },\n    { code: '<a href={`#foo`}/>' },\n    { code: '<a href={\"foo\"}/>' },\n    { code: '<a href={\"javascript\"}/>' },\n    { code: '<a href={`#javascript`}/>' },\n    { code: '<a href=\"#foo\" />' },\n    { code: '<a href=\"#javascript\" />' },\n    { code: '<a href=\"#javascriptFoo\" />' },\n    { code: '<UX.Layout>test</UX.Layout>' },\n    { code: '<a href={this} />' },\n\n    // CUSTOM ELEMENT TEST FOR ARRAY OPTION\n    { code: '<Anchor {...props} />', options: components },\n    { code: '<Anchor href=\"foo\" />', options: components },\n    { code: '<Anchor href={foo} />', options: components },\n    { code: '<Anchor href=\"/foo\" />', options: components },\n    { code: '<Anchor href=\"https://foo.bar.com\" />', options: components },\n    { code: '<div href=\"foo\" />', options: components },\n    { code: '<Anchor href={`#foo`}/>', options: components },\n    { code: '<Anchor href={\"foo\"}/>', options: components },\n    { code: '<Anchor href=\"#foo\" />', options: components },\n    { code: '<Link {...props} />', options: components },\n    { code: '<Link href=\"foo\" />', options: components },\n    { code: '<Link href={foo} />', options: components },\n    { code: '<Link href=\"/foo\" />', options: components },\n    { code: '<Link href=\"https://foo.bar.com\" />', options: components },\n    { code: '<div href=\"foo\" />', options: components },\n    { code: '<Link href={`#foo`}/>', options: components },\n    { code: '<Link href={\"foo\"}/>', options: components },\n    { code: '<Link href=\"#foo\" />', options: components },\n    { code: '<Link href=\"#foo\" />', settings: componentsSettings },\n\n    // CUSTOM PROP TESTS\n    { code: '<a {...props} />', options: specialLink },\n    { code: '<a hrefLeft=\"foo\" />', options: specialLink },\n    { code: '<a hrefLeft={foo} />', options: specialLink },\n    { code: '<a hrefLeft=\"/foo\" />', options: specialLink },\n    { code: '<a hrefLeft=\"https://foo.bar.com\" />', options: specialLink },\n    { code: '<div hrefLeft=\"foo\" />', options: specialLink },\n    { code: '<a hrefLeft={`#foo`}/>', options: specialLink },\n    { code: '<a hrefLeft={\"foo\"}/>', options: specialLink },\n    { code: '<a hrefLeft=\"#foo\" />', options: specialLink },\n    { code: '<UX.Layout>test</UX.Layout>', options: specialLink },\n    { code: '<a hrefRight={this} />', options: specialLink },\n    { code: '<a {...props} />', options: specialLink },\n    { code: '<a hrefRight=\"foo\" />', options: specialLink },\n    { code: '<a hrefRight={foo} />', options: specialLink },\n    { code: '<a hrefRight=\"/foo\" />', options: specialLink },\n    { code: '<a hrefRight=\"https://foo.bar.com\" />', options: specialLink },\n    { code: '<div hrefRight=\"foo\" />', options: specialLink },\n    { code: '<a hrefRight={`#foo`}/>', options: specialLink },\n    { code: '<a hrefRight={\"foo\"}/>', options: specialLink },\n    { code: '<a hrefRight=\"#foo\" />', options: specialLink },\n    { code: '<UX.Layout>test</UX.Layout>', options: specialLink },\n    { code: '<a hrefRight={this} />', options: specialLink },\n\n    // CUSTOM BOTH COMPONENTS AND SPECIALLINK TESTS\n    { code: '<Anchor {...props} />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft=\"foo\" />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft={foo} />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft=\"/foo\" />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft=\"https://foo.bar.com\" />', options: componentsAndSpecialLink },\n    { code: '<div hrefLeft=\"foo\" />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft={`#foo`}/>', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft={\"foo\"}/>', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft=\"#foo\" />', options: componentsAndSpecialLink },\n    { code: '<UX.Layout>test</UX.Layout>', options: componentsAndSpecialLink },\n\n    // WITH ONCLICK\n    // DEFAULT ELEMENT 'a' TESTS\n    { code: '<a {...props} onClick={() => void 0} />' },\n    { code: '<a href=\"foo\" onClick={() => void 0} />' },\n    { code: '<a href={foo} onClick={() => void 0} />' },\n    { code: '<a href=\"/foo\" onClick={() => void 0} />' },\n    { code: '<a href=\"https://foo.bar.com\" onClick={() => void 0} />' },\n    { code: '<div href=\"foo\" onClick={() => void 0} />' },\n    { code: '<a href={`#foo`} onClick={() => void 0} />' },\n    { code: '<a href={\"foo\"} onClick={() => void 0} />' },\n    { code: '<a href=\"#foo\" onClick={() => void 0} />' },\n    { code: '<a href={this} onClick={() => void 0} />' },\n\n    // CUSTOM ELEMENT TEST FOR ARRAY OPTION\n    { code: '<Anchor {...props} onClick={() => void 0} />', options: components },\n    { code: '<Anchor href=\"foo\" onClick={() => void 0} />', options: components },\n    { code: '<Anchor href={foo} onClick={() => void 0} />', options: components },\n    { code: '<Anchor href=\"/foo\" onClick={() => void 0} />', options: components },\n    { code: '<Anchor href=\"https://foo.bar.com\" onClick={() => void 0} />', options: components },\n    { code: '<Anchor href={`#foo`} onClick={() => void 0} />', options: components },\n    { code: '<Anchor href={\"foo\"} onClick={() => void 0} />', options: components },\n    { code: '<Anchor href=\"#foo\" onClick={() => void 0} />', options: components },\n    { code: '<Link {...props} onClick={() => void 0} />', options: components },\n    { code: '<Link href=\"foo\" onClick={() => void 0} />', options: components },\n    { code: '<Link href={foo} onClick={() => void 0} />', options: components },\n    { code: '<Link href=\"/foo\" onClick={() => void 0} />', options: components },\n    { code: '<Link href=\"https://foo.bar.com\" onClick={() => void 0} />', options: components },\n    { code: '<div href=\"foo\" onClick={() => void 0} />', options: components },\n    { code: '<Link href={`#foo`} onClick={() => void 0} />', options: components },\n    { code: '<Link href={\"foo\"} onClick={() => void 0} />', options: components },\n    { code: '<Link href=\"#foo\" onClick={() => void 0} />', options: components },\n\n    // CUSTOM PROP TESTS\n    { code: '<a {...props} onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefLeft=\"foo\" onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefLeft={foo} onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefLeft=\"/foo\" onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefLeft href=\"https://foo.bar.com\" onClick={() => void 0} />', options: specialLink },\n    { code: '<div hrefLeft=\"foo\" onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefLeft={`#foo`} onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefLeft={\"foo\"} onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefLeft=\"#foo\" onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight={this} onClick={() => void 0} />', options: specialLink },\n    { code: '<a {...props} onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight=\"foo\" onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight={foo} onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight=\"/foo\" onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight href=\"https://foo.bar.com\" onClick={() => void 0} />', options: specialLink },\n    { code: '<div hrefRight=\"foo\" onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight={`#foo`} onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight={\"foo\"} onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight=\"#foo\" onClick={() => void 0} />', options: specialLink },\n    { code: '<a hrefRight={this} onClick={() => void 0} />', options: specialLink },\n\n    // CUSTOM BOTH COMPONENTS AND SPECIALLINK TESTS\n    { code: '<Anchor {...props} onClick={() => void 0} />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft=\"foo\" onClick={() => void 0} />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft={foo} onClick={() => void 0} />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft=\"/foo\" onClick={() => void 0} />', options: componentsAndSpecialLink },\n    {\n      code: '<Anchor hrefLeft href=\"https://foo.bar.com\" onClick={() => void 0} />',\n      options: componentsAndSpecialLink,\n    },\n    { code: '<Anchor hrefLeft={`#foo`} onClick={() => void 0} />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft={\"foo\"} onClick={() => void 0} />', options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft=\"#foo\" onClick={() => void 0} />', options: componentsAndSpecialLink },\n\n    // WITH ASPECTS TESTS\n    // NO HREF\n    { code: '<a />', options: invalidHrefAspect },\n    { code: '<a href={undefined} />', options: invalidHrefAspect },\n    { code: '<a href={null} />', options: invalidHrefAspect },\n    { code: '<a />', options: preferButtonAspect },\n    { code: '<a href={undefined} />', options: preferButtonAspect },\n    { code: '<a href={null} />', options: preferButtonAspect },\n    { code: '<a />', options: preferButtonInvalidHrefAspect },\n    { code: '<a href={undefined} />', options: preferButtonInvalidHrefAspect },\n    { code: '<a href={null} />', options: preferButtonInvalidHrefAspect },\n\n    // INVALID HREF\n    { code: '<a href=\"\" />;', options: preferButtonAspect },\n    { code: '<a href=\"#\" />', options: preferButtonAspect },\n    { code: '<a href={\"#\"} />', options: preferButtonAspect },\n    { code: '<a href=\"javascript:void(0)\" />', options: preferButtonAspect },\n    { code: '<a href={\"javascript:void(0)\"} />', options: preferButtonAspect },\n    { code: '<a href=\"\" />;', options: noHrefAspect },\n    { code: '<a href=\"#\" />', options: noHrefAspect },\n    { code: '<a href={\"#\"} />', options: noHrefAspect },\n    { code: '<a href=\"javascript:void(0)\" />', options: noHrefAspect },\n    { code: '<a href={\"javascript:void(0)\"} />', options: noHrefAspect },\n    { code: '<a href=\"\" />;', options: noHrefPreferButtonAspect },\n    { code: '<a href=\"#\" />', options: noHrefPreferButtonAspect },\n    { code: '<a href={\"#\"} />', options: noHrefPreferButtonAspect },\n    { code: '<a href=\"javascript:void(0)\" />', options: noHrefPreferButtonAspect },\n    { code: '<a href={\"javascript:void(0)\"} />', options: noHrefPreferButtonAspect },\n\n    // SHOULD BE BUTTON\n    { code: '<a onClick={() => void 0} />', options: invalidHrefAspect },\n    { code: '<a href=\"#\" onClick={() => void 0} />', options: noHrefAspect },\n    { code: '<a href=\"javascript:void(0)\" onClick={() => void 0} />', options: noHrefAspect },\n    {\n      code: '<a href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      options: noHrefAspect,\n    },\n\n    // CUSTOM COMPONENTS AND SPECIAL LINK AND ASPECT\n    { code: '<Anchor hrefLeft={undefined} />', options: componentsAndSpecialLinkAndInvalidHrefAspect },\n    { code: '<Anchor hrefLeft={null} />', options: componentsAndSpecialLinkAndInvalidHrefAspect },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    // DEFAULT ELEMENT 'a' TESTS\n    // NO HREF\n    { code: '<a />', errors: [noHrefexpectedError] },\n    { code: '<a href={undefined} />', errors: [noHrefexpectedError] },\n    { code: '<a href={null} />', errors: [noHrefexpectedError] },\n    // INVALID HREF\n    { code: '<a href=\"\" />;', errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"#\" />', errors: [invalidHrefexpectedError] },\n    { code: '<a href={\"#\"} />', errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"javascript:void(0)\" />', errors: [invalidHrefexpectedError] },\n    { code: '<a href={\"javascript:void(0)\"} />', errors: [invalidHrefexpectedError] },\n    // SHOULD BE BUTTON\n    { code: '<a onClick={() => void 0} />', errors: [preferButtonexpectedError] },\n    { code: '<a href=\"#\" onClick={() => void 0} />', errors: [preferButtonexpectedError] },\n    { code: '<a href=\"javascript:void(0)\" onClick={() => void 0} />', errors: [preferButtonexpectedError] },\n    {\n      code: '<a href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n    },\n\n    // CUSTOM ELEMENT TEST FOR ARRAY OPTION\n    // NO HREF\n    { code: '<Link />', errors: [noHrefexpectedError], options: components },\n    { code: '<Link href={undefined} />', errors: [noHrefexpectedError], options: components },\n    { code: '<Link href={null} />', errors: [noHrefexpectedError], options: components },\n    // INVALID HREF\n    { code: '<Link href=\"\" />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Link href=\"#\" />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Link href={\"#\"} />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Link href=\"javascript:void(0)\" />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Link href={\"javascript:void(0)\"} />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Anchor href=\"\" />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Anchor href=\"#\" />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Anchor href={\"#\"} />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Anchor href=\"javascript:void(0)\" />', errors: [invalidHrefexpectedError], options: components },\n    { code: '<Anchor href={\"javascript:void(0)\"} />', errors: [invalidHrefexpectedError], options: components },\n    // SHOULD BE BUTTON\n    { code: '<Link onClick={() => void 0} />', errors: [preferButtonexpectedError], options: components },\n    { code: '<Link href=\"#\" onClick={() => void 0} />', errors: [preferButtonexpectedError], options: components },\n    {\n      code: '<Link href=\"javascript:void(0)\" onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: components,\n    },\n    {\n      code: '<Link href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: components,\n    },\n    { code: '<Anchor onClick={() => void 0} />', errors: [preferButtonexpectedError], options: components },\n    { code: '<Anchor href=\"#\" onClick={() => void 0} />', errors: [preferButtonexpectedError], options: components },\n    {\n      code: '<Anchor href=\"javascript:void(0)\" onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: components,\n    },\n    {\n      code: '<Anchor href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: components,\n    },\n    {\n      code: '<Link href=\"#\" onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      settings: componentsSettings,\n    },\n\n    // CUSTOM PROP TESTS\n    // NO HREF\n    { code: '<a hrefLeft={undefined} />', errors: [noHrefexpectedError], options: specialLink },\n    { code: '<a hrefLeft={null} />', errors: [noHrefexpectedError], options: specialLink },\n    // INVALID HREF\n    { code: '<a hrefLeft=\"\" />;', errors: [invalidHrefexpectedError], options: specialLink },\n    { code: '<a hrefLeft=\"#\" />', errors: [invalidHrefexpectedError], options: specialLink },\n    { code: '<a hrefLeft={\"#\"} />', errors: [invalidHrefexpectedError], options: specialLink },\n    { code: '<a hrefLeft=\"javascript:void(0)\" />', errors: [invalidHrefexpectedError], options: specialLink },\n    { code: '<a hrefLeft={\"javascript:void(0)\"} />', errors: [invalidHrefexpectedError], options: specialLink },\n    // SHOULD BE BUTTON\n    { code: '<a hrefLeft=\"#\" onClick={() => void 0} />', errors: [preferButtonexpectedError], options: specialLink },\n    {\n      code: '<a hrefLeft=\"javascript:void(0)\" onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: specialLink,\n    },\n    {\n      code: '<a hrefLeft={\"javascript:void(0)\"} onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: specialLink,\n    },\n\n    // CUSTOM BOTH COMPONENTS AND SPECIAL LINK TESTS\n    // NO HREF\n    { code: '<Anchor Anchor={undefined} />', errors: [noHrefexpectedError], options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft={null} />', errors: [noHrefexpectedError], options: componentsAndSpecialLink },\n    // INVALID HREF\n    { code: '<Anchor hrefLeft=\"\" />;', errors: [invalidHrefexpectedError], options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft=\"#\" />', errors: [invalidHrefexpectedError], options: componentsAndSpecialLink },\n    { code: '<Anchor hrefLeft={\"#\"} />', errors: [invalidHrefexpectedError], options: componentsAndSpecialLink },\n    {\n      code: '<Anchor hrefLeft=\"javascript:void(0)\" />',\n      errors: [invalidHrefexpectedError],\n      options: componentsAndSpecialLink,\n    },\n    {\n      code: '<Anchor hrefLeft={\"javascript:void(0)\"} />',\n      errors: [invalidHrefexpectedError],\n      options: componentsAndSpecialLink,\n    },\n    // SHOULD BE BUTTON\n    {\n      code: '<Anchor hrefLeft=\"#\" onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: componentsAndSpecialLink,\n    },\n    {\n      code: '<Anchor hrefLeft=\"javascript:void(0)\" onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: componentsAndSpecialLink,\n    },\n    {\n      code: '<Anchor hrefLeft={\"javascript:void(0)\"} onClick={() => void 0} />',\n      errors: [preferButtonexpectedError],\n      options: componentsAndSpecialLink,\n    },\n\n    // WITH ASPECTS TESTS\n    // NO HREF\n    { code: '<a />', options: noHrefAspect, errors: [noHrefexpectedError] },\n    { code: '<a />', options: noHrefPreferButtonAspect, errors: [noHrefexpectedError] },\n    { code: '<a />', options: noHrefInvalidHrefAspect, errors: [noHrefexpectedError] },\n    { code: '<a href={undefined} />', options: noHrefAspect, errors: [noHrefexpectedError] },\n    { code: '<a href={undefined} />', options: noHrefPreferButtonAspect, errors: [noHrefexpectedError] },\n    { code: '<a href={undefined} />', options: noHrefInvalidHrefAspect, errors: [noHrefexpectedError] },\n    { code: '<a href={null} />', options: noHrefAspect, errors: [noHrefexpectedError] },\n    { code: '<a href={null} />', options: noHrefPreferButtonAspect, errors: [noHrefexpectedError] },\n    { code: '<a href={null} />', options: noHrefInvalidHrefAspect, errors: [noHrefexpectedError] },\n\n    // INVALID HREF\n    { code: '<a href=\"\" />;', options: invalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"\" />;', options: noHrefInvalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"\" />;', options: preferButtonInvalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"#\" />;', options: invalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"#\" />;', options: noHrefInvalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"#\" />;', options: preferButtonInvalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href={\"#\"} />;', options: invalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href={\"#\"} />;', options: noHrefInvalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href={\"#\"} />;', options: preferButtonInvalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"javascript:void(0)\" />;', options: invalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href=\"javascript:void(0)\" />;', options: noHrefInvalidHrefAspect, errors: [invalidHrefexpectedError] },\n    {\n      code: '<a href=\"javascript:void(0)\" />;',\n      options: preferButtonInvalidHrefAspect,\n      errors: [invalidHrefexpectedError],\n    },\n    { code: '<a href={\"javascript:void(0)\"} />;', options: invalidHrefAspect, errors: [invalidHrefexpectedError] },\n    { code: '<a href={\"javascript:void(0)\"} />;', options: noHrefInvalidHrefAspect, errors: [invalidHrefexpectedError] },\n    {\n      code: '<a href={\"javascript:void(0)\"} />;',\n      options: preferButtonInvalidHrefAspect,\n      errors: [invalidHrefexpectedError],\n    },\n\n    // SHOULD BE BUTTON\n    { code: '<a onClick={() => void 0} />', options: preferButtonAspect, errors: [preferButtonexpectedError] },\n    {\n      code: '<a onClick={() => void 0} />',\n      options: preferButtonInvalidHrefAspect,\n      errors: [preferButtonexpectedError],\n    },\n    { code: '<a onClick={() => void 0} />', options: noHrefPreferButtonAspect, errors: [preferButtonexpectedError] },\n    { code: '<a onClick={() => void 0} />', options: noHrefAspect, errors: [noHrefexpectedError] },\n    { code: '<a onClick={() => void 0} />', options: noHrefInvalidHrefAspect, errors: [noHrefexpectedError] },\n    { code: '<a href=\"#\" onClick={() => void 0} />', options: preferButtonAspect, errors: [preferButtonexpectedError] },\n    {\n      code: '<a href=\"#\" onClick={() => void 0} />',\n      options: noHrefPreferButtonAspect,\n      errors: [preferButtonexpectedError],\n    },\n    {\n      code: '<a href=\"#\" onClick={() => void 0} />',\n      options: preferButtonInvalidHrefAspect,\n      errors: [preferButtonexpectedError],\n    },\n    { code: '<a href=\"#\" onClick={() => void 0} />', options: invalidHrefAspect, errors: [invalidHrefexpectedError] },\n    {\n      code: '<a href=\"#\" onClick={() => void 0} />',\n      options: noHrefInvalidHrefAspect,\n      errors: [invalidHrefexpectedError],\n    },\n    {\n      code: '<a href=\"javascript:void(0)\" onClick={() => void 0} />',\n      options: preferButtonAspect,\n      errors: [preferButtonexpectedError],\n    },\n    {\n      code: '<a href=\"javascript:void(0)\" onClick={() => void 0} />',\n      options: noHrefPreferButtonAspect,\n      errors: [preferButtonexpectedError],\n    },\n    {\n      code: '<a href=\"javascript:void(0)\" onClick={() => void 0} />',\n      options: preferButtonInvalidHrefAspect,\n      errors: [preferButtonexpectedError],\n    },\n    {\n      code: '<a href=\"javascript:void(0)\" onClick={() => void 0} />',\n      options: invalidHrefAspect,\n      errors: [invalidHrefexpectedError],\n    },\n    {\n      code: '<a href=\"javascript:void(0)\" onClick={() => void 0} />',\n      options: noHrefInvalidHrefAspect,\n      errors: [invalidHrefexpectedError],\n    },\n    {\n      code: '<a href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      options: preferButtonAspect,\n      errors: [preferButtonexpectedError],\n    },\n    {\n      code: '<a href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      options: noHrefPreferButtonAspect,\n      errors: [preferButtonexpectedError],\n    },\n    {\n      code: '<a href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      options: preferButtonInvalidHrefAspect,\n      errors: [preferButtonexpectedError],\n    },\n    {\n      code: '<a href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      options: invalidHrefAspect,\n      errors: [invalidHrefexpectedError],\n    },\n    {\n      code: '<a href={\"javascript:void(0)\"} onClick={() => void 0} />',\n      options: noHrefInvalidHrefAspect,\n      errors: [invalidHrefexpectedError],\n    },\n\n    // CUSTOM COMPONENTS AND SPECIAL LINK AND ASPECT\n    {\n      code: '<Anchor hrefLeft={undefined} />',\n      options: componentsAndSpecialLinkAndNoHrefAspect,\n      errors: [noHrefexpectedError],\n    },\n    {\n      code: '<Anchor hrefLeft={null} />',\n      options: componentsAndSpecialLinkAndNoHrefAspect,\n      errors: [noHrefexpectedError],\n    },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
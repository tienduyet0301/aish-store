{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/iframe-has-title-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892264003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce iframe elements have a title attribute.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/iframe-has-title';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: '<iframe> elements must have a unique title property.',\n  type: 'JSXOpeningElement',\n};\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      FooComponent: 'iframe',\n    },\n  },\n};\n\nruleTester.run('html-has-lang', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<iframe title=\"Unique title\" />' },\n    { code: '<iframe title={foo} />' },\n    { code: '<FooComponent />' },\n    { code: '<FooComponent title=\"Unique title\" />', settings: componentsSettings },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<iframe />', errors: [expectedError] },\n    { code: '<iframe {...props} />', errors: [expectedError] },\n    { code: '<iframe title={undefined} />', errors: [expectedError] },\n    { code: '<iframe title=\"\" />', errors: [expectedError] },\n    { code: '<iframe title={false} />', errors: [expectedError] },\n    { code: '<iframe title={true} />', errors: [expectedError] },\n    { code: \"<iframe title={''} />\", errors: [expectedError] },\n    { code: '<iframe title={``} />', errors: [expectedError] },\n    { code: '<iframe title={\"\"} />', errors: [expectedError] },\n    { code: '<iframe title={42} />', errors: [expectedError] },\n    { code: '<FooComponent />', errors: [expectedError], settings: componentsSettings },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
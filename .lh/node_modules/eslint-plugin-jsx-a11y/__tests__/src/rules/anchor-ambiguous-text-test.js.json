{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/anchor-ambiguous-text-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892263622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce `<a>` text to not exactly match \"click here\", \"here\", \"link\", or \"a link\".\n * @author Matt Wang\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/anchor-ambiguous-text';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst DEFAULT_AMBIGUOUS_WORDS = [\n  'click here',\n  'here',\n  'link',\n  'a link',\n  'learn more',\n];\n\nconst expectedErrorGenerator = (words) => ({\n  message: `Ambiguous text within anchor. Screen reader users rely on link text for context; the words \"${words.join('\", \"')}\" are ambiguous and do not provide enough context.`,\n  type: 'JSXOpeningElement',\n});\n\nconst expectedError = expectedErrorGenerator(DEFAULT_AMBIGUOUS_WORDS);\n\nruleTester.run('anchor-ambiguous-text', rule, {\n  valid: parsers.all([].concat(\n    { code: '<a>documentation</a>;' },\n    { code: '<a>${here}</a>;' },\n    { code: '<a aria-label=\"tutorial on using eslint-plugin-jsx-a11y\">click here</a>;' },\n    { code: '<a><span aria-label=\"tutorial on using eslint-plugin-jsx-a11y\">click here</span></a>;' },\n    { code: '<a><img alt=\"documentation\" /></a>;' },\n    {\n      code: '<a>click here</a>',\n      options: [{\n        words: ['disabling the defaults'],\n      }],\n    },\n    {\n      code: '<Link>documentation</Link>;',\n      settings: { 'jsx-a11y': { components: { Link: 'a' } } },\n    },\n    {\n      code: '<a><Image alt=\"documentation\" /></a>;',\n      settings: { 'jsx-a11y': { components: { Image: 'img' } } },\n    },\n    {\n      code: '<Link>${here}</Link>;',\n      settings: { 'jsx-a11y': { components: { Link: 'a' } } },\n    },\n    {\n      code: '<Link aria-label=\"tutorial on using eslint-plugin-jsx-a11y\">click here</Link>;',\n      settings: { 'jsx-a11y': { components: { Link: 'a' } } },\n    },\n    {\n      code: '<Link>click here</Link>',\n      options: [{\n        words: ['disabling the defaults with components'],\n      }],\n      settings: { 'jsx-a11y': { components: { Link: 'a' } } },\n    },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<a>here</a>;', errors: [expectedError] },\n    { code: '<a>HERE</a>;', errors: [expectedError] },\n    { code: '<a>click here</a>;', errors: [expectedError] },\n    { code: '<a>learn more</a>;', errors: [expectedError] },\n    { code: '<a>learn      more</a>;', errors: [expectedError] },\n    { code: '<a>learn more.</a>;', errors: [expectedError] },\n    { code: '<a>learn more?</a>;', errors: [expectedError] },\n    { code: '<a>learn more,</a>;', errors: [expectedError] },\n    { code: '<a>learn more!</a>;', errors: [expectedError] },\n    { code: '<a>learn more;</a>;', errors: [expectedError] },\n    { code: '<a>learn more:</a>;', errors: [expectedError] },\n    { code: '<a>link</a>;', errors: [expectedError] },\n    { code: '<a>a link</a>;', errors: [expectedError] },\n    { code: '<a aria-label=\"click here\">something</a>;', errors: [expectedError] },\n    { code: '<a> a link </a>;', errors: [expectedError] },\n    { code: '<a>a<i></i> link</a>;', errors: [expectedError] },\n    { code: '<a><i></i>a link</a>;', errors: [expectedError] },\n    { code: '<a><span>click</span> here</a>;', errors: [expectedError] },\n    { code: '<a><span> click </span> here</a>;', errors: [expectedError] },\n    { code: '<a><span aria-hidden>more text</span>learn more</a>;', errors: [expectedError] },\n    { code: '<a><span aria-hidden=\"true\">more text</span>learn more</a>;', errors: [expectedError] },\n    { code: '<a><img alt=\"click here\"/></a>;', errors: [expectedError] },\n    { code: '<a alt=\"tutorial on using eslint-plugin-jsx-a11y\">click here</a>;', errors: [expectedError] },\n    { code: '<a><span alt=\"tutorial on using eslint-plugin-jsx-a11y\">click here</span></a>;', errors: [expectedError] },\n    { code: '<a><CustomElement>click</CustomElement> here</a>;', errors: [expectedError] },\n    {\n      code: '<Link>here</Link>',\n      errors: [expectedError],\n      settings: { 'jsx-a11y': { components: { Link: 'a' } } },\n    },\n    {\n      code: '<a><Image alt=\"click here\" /></a>',\n      errors: [expectedError],\n      settings: { 'jsx-a11y': { components: { Image: 'img' } } },\n    },\n    {\n      code: '<a>a disallowed word</a>',\n      errors: [expectedErrorGenerator(['a disallowed word'])],\n      options: [{\n        words: ['a disallowed word'],\n      }],\n    },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
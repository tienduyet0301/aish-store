{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/no-access-key-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892264255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce no accesskey attribute on element.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/no-access-key';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'No access key attribute allowed. Inconsistencies between keyboard shortcuts and keyboard commands used by screen readers and keyboard-only users create a11y complications.',\n  type: 'JSXOpeningElement',\n};\n\nruleTester.run('no-access-key', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<div {...props} />' },\n    { code: '<div accessKey={undefined} />' },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<div accesskey=\"h\" />', errors: [expectedError] },\n    { code: '<div accessKey=\"h\" />', errors: [expectedError] },\n    { code: '<div accessKey=\"h\" {...props} />', errors: [expectedError] },\n    { code: '<div acCesSKeY=\"y\" />', errors: [expectedError] },\n    { code: '<div accessKey={\"y\"} />', errors: [expectedError] },\n    { code: '<div accessKey={`${y}`} />', errors: [expectedError] },\n    {\n      code: '<div accessKey={`${undefined}y${undefined}`} />',\n      errors: [expectedError],\n    },\n    { code: '<div accessKey={`This is ${bad}`} />', errors: [expectedError] },\n    { code: '<div accessKey={accessKey} />', errors: [expectedError] },\n    { code: '<div accessKey={`${undefined}`} />', errors: [expectedError] },\n    { code: '<div accessKey={`${undefined}${undefined}`} />', errors: [expectedError] },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
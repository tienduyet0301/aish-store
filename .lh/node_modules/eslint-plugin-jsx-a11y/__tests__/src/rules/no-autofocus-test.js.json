{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/no-autofocus-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892264310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce autoFocus prop is not used.\n * @author Ethan Cohen <@evcohen>\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/no-autofocus';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'The autoFocus prop should not be used, as it can reduce usability and accessibility for users.',\n  type: 'JSXAttribute',\n};\n\nconst ignoreNonDOMSchema = [\n  {\n    ignoreNonDOM: true,\n  },\n];\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Button: 'button',\n    },\n  },\n};\n\nruleTester.run('no-autofocus', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<div autofocus />;' },\n    { code: '<input autofocus=\"true\" />;' },\n    { code: '<Foo bar />' },\n    { code: '<Foo autoFocus />', options: ignoreNonDOMSchema },\n    { code: '<div><div autofocus /></div>', options: ignoreNonDOMSchema },\n    { code: '<Button />', settings: componentsSettings },\n    { code: '<Button />', options: ignoreNonDOMSchema, settings: componentsSettings },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<div autoFocus />', errors: [expectedError] },\n    { code: '<div autoFocus={true} />', errors: [expectedError] },\n    { code: '<div autoFocus={false} />', errors: [expectedError] },\n    { code: '<div autoFocus={undefined} />', errors: [expectedError] },\n    { code: '<div autoFocus=\"true\" />', errors: [expectedError] },\n    { code: '<div autoFocus=\"false\" />', errors: [expectedError] },\n    { code: '<input autoFocus />', errors: [expectedError] },\n    { code: '<Foo autoFocus />', errors: [expectedError] },\n    { code: '<Button autoFocus />', errors: [expectedError], settings: componentsSettings },\n    {\n      code: '<Button autoFocus />',\n      errors: [expectedError],\n      options: ignoreNonDOMSchema,\n      settings: componentsSettings,\n    },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/tabindex-no-positive-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892264647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce tabIndex value is not greater than zero.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/tabindex-no-positive';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'Avoid positive integer values for tabIndex.',\n  type: 'JSXAttribute',\n};\n\nruleTester.run('tabindex-no-positive', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<div {...props} />' },\n    { code: '<div id=\"main\" />' },\n    { code: '<div tabIndex={undefined} />' },\n    { code: '<div tabIndex={`${undefined}`} />' },\n    { code: '<div tabIndex={`${undefined}${undefined}`} />' },\n    { code: '<div tabIndex={0} />' },\n    { code: '<div tabIndex={-1} />' },\n    { code: '<div tabIndex={null} />' },\n    { code: '<div tabIndex={bar()} />' },\n    { code: '<div tabIndex={bar} />' },\n    { code: '<div tabIndex={\"foobar\"} />' },\n    { code: '<div tabIndex=\"0\" />' },\n    { code: '<div tabIndex=\"-1\" />' },\n    { code: '<div tabIndex=\"-5\" />' },\n    { code: '<div tabIndex=\"-5.5\" />' },\n    { code: '<div tabIndex={-5.5} />' },\n    { code: '<div tabIndex={-5} />' },\n  )).map(parserOptionsMapper),\n\n  invalid: parsers.all([].concat(\n    { code: '<div tabIndex=\"1\" />', errors: [expectedError] },\n    { code: '<div tabIndex={1} />', errors: [expectedError] },\n    { code: '<div tabIndex={\"1\"} />', errors: [expectedError] },\n    { code: '<div tabIndex={`1`} />', errors: [expectedError] },\n    { code: '<div tabIndex={1.589} />', errors: [expectedError] },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
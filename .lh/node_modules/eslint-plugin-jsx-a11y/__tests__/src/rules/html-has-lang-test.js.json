{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/html-has-lang-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892263979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce html element has lang prop.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/html-has-lang';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: '<html> elements must have the lang prop.',\n  type: 'JSXOpeningElement',\n};\n\nruleTester.run('html-has-lang', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<html lang=\"en\" />' },\n    { code: '<html lang=\"en-US\" />' },\n    { code: '<html lang={foo} />' },\n    { code: '<html lang />' },\n    { code: '<HTML />' },\n    { code: '<HTMLTop lang=\"en\" />', errors: [expectedError], settings: { 'jsx-a11y': { components: { HTMLTop: 'html' } } } },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<html />', errors: [expectedError] },\n    { code: '<html {...props} />', errors: [expectedError] },\n    { code: '<html lang={undefined} />', errors: [expectedError] },\n    { code: '<HTMLTop />', errors: [expectedError], settings: { 'jsx-a11y': { components: { HTMLTop: 'html' } } } },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/scope-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892264623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce scope prop is only used on <th> elements.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/scope';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'The scope prop can only be used on <th> elements.',\n  type: 'JSXAttribute',\n};\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Foo: 'div',\n      TableHeader: 'th',\n    },\n  },\n};\n\nruleTester.run('scope', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<div foo />;' },\n    { code: '<th scope />' },\n    { code: '<th scope=\"row\" />' },\n    { code: '<th scope={foo} />' },\n    { code: '<th scope={\"col\"} {...props} />' },\n    { code: '<Foo scope=\"bar\" {...props} />' },\n    { code: '<TableHeader scope=\"row\" />', settings: componentsSettings },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<div scope />', errors: [expectedError] },\n    { code: '<Foo scope=\"bar\" />', settings: componentsSettings, errors: [expectedError] },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
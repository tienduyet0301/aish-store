{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/no-distracting-elements-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892264337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce distracting elements are not used.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/no-distracting-elements';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = (element) => ({\n  message: `Do not use <${element}> elements as they can create visual accessibility issues and are deprecated.`,\n  type: 'JSXOpeningElement',\n});\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Blink: 'blink',\n    },\n  },\n};\n\nruleTester.run('no-marquee', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<Marquee />' },\n    { code: '<div marquee />' },\n    { code: '<Blink />' },\n    { code: '<div blink />' },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<marquee />', errors: [expectedError('marquee')] },\n    { code: '<marquee {...props} />', errors: [expectedError('marquee')] },\n    { code: '<marquee lang={undefined} />', errors: [expectedError('marquee')] },\n    { code: '<blink />', errors: [expectedError('blink')] },\n    { code: '<blink {...props} />', errors: [expectedError('blink')] },\n    { code: '<blink foo={undefined} />', errors: [expectedError('blink')] },\n    { code: '<Blink />', settings: componentsSettings, errors: [expectedError('blink')] },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/accessible-emoji-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892263558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce <marquee> elements are not used.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/accessible-emoji';\nimport parsers from '../../__util__/helpers/parsers';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'Emojis should be wrapped in <span>, have role=\"img\", and have an accessible description with aria-label or aria-labelledby.',\n  type: 'JSXOpeningElement',\n};\n\nruleTester.run('accessible-emoji', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<span />' },\n    { code: '<span>No emoji here!</span>' },\n    { code: '<span role=\"img\" aria-label=\"Panda face\">🐼</span>' },\n    { code: '<span role=\"img\" aria-label=\"Snowman\">&#9731;</span>' },\n    { code: '<span role=\"img\" aria-labelledby=\"id1\">🐼</span>' },\n    { code: '<span role=\"img\" aria-labelledby=\"id1\">&#9731;</span>' },\n    { code: '<span role=\"img\" aria-labelledby=\"id1\" aria-label=\"Snowman\">&#9731;</span>' },\n    { code: '<span>{props.emoji}</span>' },\n    { code: '<span aria-hidden>{props.emoji}</span>' },\n    { code: '<span aria-hidden=\"true\">🐼</span>' },\n    { code: '<span aria-hidden>🐼</span>' },\n    { code: '<div aria-hidden=\"true\">🐼</div>' },\n    { code: '<input type=\"hidden\">🐼</input>' },\n    {\n      code: '<CustomInput type=\"hidden\">🐼</CustomInput>',\n      settings: { 'jsx-a11y': { components: { CustomInput: 'input' } } },\n    },\n    {\n      code: '<Box as=\"input\" type=\"hidden\">🐼</Box>',\n      settings: { 'jsx-a11y': { polymorphicPropName: 'as' } },\n    },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<span>🐼</span>', errors: [expectedError] },\n    { code: '<span>foo🐼bar</span>', errors: [expectedError] },\n    { code: '<span>foo 🐼 bar</span>', errors: [expectedError] },\n    { code: '<i role=\"img\" aria-label=\"Panda face\">🐼</i>', errors: [expectedError] },\n    { code: '<i role=\"img\" aria-labelledby=\"id1\">🐼</i>', errors: [expectedError] },\n    { code: '<Foo>🐼</Foo>', errors: [expectedError] },\n    { code: '<span aria-hidden=\"false\">🐼</span>', errors: [expectedError] },\n    { code: '<CustomInput type=\"hidden\">🐼</CustomInput>', errors: [expectedError] },\n    {\n      code: '<Box as=\"span\">🐼</Box>',\n      settings: { 'jsx-a11y': { polymorphicPropName: 'as' } },\n      errors: [expectedError],\n    },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
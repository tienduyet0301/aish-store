{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/aria-activedescendant-has-tabindex-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892263726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce elements with aria-activedescendant are tabbable.\n * @author Jesse Beach <@jessebeach>\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/aria-activedescendant-has-tabindex';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'An element that manages focus with `aria-activedescendant` must have a tabindex',\n  type: 'JSXOpeningElement',\n};\n\nruleTester.run('aria-activedescendant-has-tabindex', rule, {\n  valid: parsers.all([].concat(\n    {\n      code: '<CustomComponent />;',\n    },\n    {\n      code: '<CustomComponent aria-activedescendant={someID} />;',\n    },\n    {\n      code: '<CustomComponent aria-activedescendant={someID} tabIndex={0} />;',\n    },\n    {\n      code: '<CustomComponent aria-activedescendant={someID} tabIndex={-1} />;',\n    },\n    {\n      code: '<CustomComponent aria-activedescendant={someID} tabIndex={0} />;',\n      settings: { 'jsx-a11y': { components: { CustomComponent: 'div' } } },\n    },\n    {\n      code: '<div />;',\n    },\n    {\n      code: '<input />;',\n    },\n    {\n      code: '<div tabIndex={0} />;',\n    },\n    {\n      code: '<div aria-activedescendant={someID} tabIndex={0} />;',\n    },\n    {\n      code: '<div aria-activedescendant={someID} tabIndex=\"0\" />;',\n    },\n    {\n      code: '<div aria-activedescendant={someID} tabIndex={1} />;',\n    },\n    {\n      code: '<input aria-activedescendant={someID} />;',\n    },\n    {\n      code: '<input aria-activedescendant={someID} tabIndex={1} />;',\n    },\n    {\n      code: '<input aria-activedescendant={someID} tabIndex={0} />;',\n    },\n    {\n      code: '<input aria-activedescendant={someID} tabIndex={-1} />;',\n    },\n    {\n      code: '<div aria-activedescendant={someID} tabIndex={-1} />;',\n    },\n    {\n      code: '<div aria-activedescendant={someID} tabIndex=\"-1\" />;',\n    },\n    {\n      code: '<input aria-activedescendant={someID} tabIndex={-1} />;',\n    },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    {\n      code: '<div aria-activedescendant={someID} />;',\n      errors: [expectedError],\n    },\n    {\n      code: '<CustomComponent aria-activedescendant={someID} />;',\n      errors: [expectedError],\n      settings: { 'jsx-a11y': { components: { CustomComponent: 'div' } } },\n    },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
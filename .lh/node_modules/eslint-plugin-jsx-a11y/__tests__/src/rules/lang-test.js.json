{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/lang-test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892264170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce lang attribute has a valid value.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport parsers from '../../__util__/helpers/parsers';\nimport rule from '../../../src/rules/lang';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'lang attribute must have a valid value.',\n  type: 'JSXAttribute',\n};\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    polymorphicPropName: 'as',\n    components: {\n      Foo: 'html',\n    },\n  },\n};\n\nruleTester.run('lang', rule, {\n  valid: parsers.all([].concat(\n    { code: '<div />;' },\n    { code: '<div foo=\"bar\" />;' },\n    { code: '<div lang=\"foo\" />;' },\n    { code: '<html lang=\"en\" />' },\n    { code: '<html lang=\"en-US\" />' },\n    { code: '<html lang=\"zh-Hans\" />' },\n    { code: '<html lang=\"zh-Hant-HK\" />' },\n    { code: '<html lang=\"zh-yue-Hant\" />' },\n    { code: '<html lang=\"ja-Latn\" />' },\n    { code: '<html lang={foo} />' },\n    { code: '<HTML lang=\"foo\" />' },\n    { code: '<Foo lang={undefined} />' },\n    { code: '<Foo lang=\"en\" />', settings: componentsSettings },\n    { code: '<Box as=\"html\" lang=\"en\"  />', settings: componentsSettings },\n  )).map(parserOptionsMapper),\n  invalid: parsers.all([].concat(\n    { code: '<html lang=\"foo\" />', errors: [expectedError] },\n    { code: '<html lang=\"zz-LL\" />', errors: [expectedError] },\n    { code: '<html lang={undefined} />', errors: [expectedError] },\n    { code: '<Foo lang={undefined} />', settings: componentsSettings, errors: [expectedError] },\n    { code: '<Box as=\"html\" lang=\"foo\" />', settings: componentsSettings, errors: [expectedError] },\n  )).map(parserOptionsMapper),\n});\n"
        }
    ]
}
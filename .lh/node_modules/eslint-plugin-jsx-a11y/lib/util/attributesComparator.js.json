{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/util/attributesComparator.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892261194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n/**\n * Returns true if all items in baseAttributes are found in attributes. Always\n * returns true if baseAttributes is empty.\n */\nfunction attributesComparator() {\n  var baseAttributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return baseAttributes.every(function (baseAttr) {\n    return attributes.some(function (attribute) {\n      // Guard against non-JSXAttribute nodes like JSXSpreadAttribute\n      if (attribute.type !== 'JSXAttribute') {\n        return false;\n      }\n      // Attribute matches.\n      if (baseAttr.name !== (0, _jsxAstUtils.propName)(attribute)) {\n        return false;\n      }\n      // Value exists and does not match.\n      if (baseAttr.value && baseAttr.value !== (0, _jsxAstUtils.getLiteralPropValue)(attribute)) {\n        return false;\n      }\n      return true;\n    });\n  });\n}\nvar _default = exports[\"default\"] = attributesComparator;\nmodule.exports = exports.default;"
        }
    ]
}
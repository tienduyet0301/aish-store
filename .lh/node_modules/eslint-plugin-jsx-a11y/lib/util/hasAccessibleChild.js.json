{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/util/hasAccessibleChild.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892261496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hasAccessibleChild;\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\nvar _isHiddenFromScreenReader = _interopRequireDefault(require(\"./isHiddenFromScreenReader\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\nfunction hasAccessibleChild(node, elementType) {\n  return node.children.some(function (child) {\n    switch (child.type) {\n      case 'Literal':\n        return !!child.value;\n      // $FlowFixMe JSXText is missing in ast-types-flow\n      case 'JSXText':\n        return !!child.value;\n      case 'JSXElement':\n        return !(0, _isHiddenFromScreenReader[\"default\"])(elementType(child.openingElement), child.openingElement.attributes);\n      case 'JSXExpressionContainer':\n        if (child.expression.type === 'Identifier') {\n          return child.expression.name !== 'undefined';\n        }\n        return true;\n      default:\n        return false;\n    }\n  }) || (0, _jsxAstUtils.hasAnyProp)(node.openingElement.attributes, ['dangerouslySetInnerHTML', 'children']);\n}\nmodule.exports = exports.default;"
        }
    ]
}
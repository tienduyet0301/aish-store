{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/rules/lang.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892260430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\nvar _languageTags = _interopRequireDefault(require(\"language-tags\"));\nvar _schemas = require(\"../util/schemas\");\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\n/**\n * @fileoverview Enforce lang attribute has a valid value.\n * @author Ethan Cohen\n */\n\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\nvar errorMessage = 'lang attribute must have a valid value.';\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = exports[\"default\"] = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/lang.md',\n      description: 'Enforce lang attribute has a valid value.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXAttribute: function JSXAttribute(node) {\n        var name = (0, _jsxAstUtils.propName)(node);\n        if (name && name.toUpperCase() !== 'LANG') {\n          return;\n        }\n        var parent = node.parent;\n        var type = elementType(parent);\n        if (type && type !== 'html') {\n          return;\n        }\n        var value = (0, _jsxAstUtils.getLiteralPropValue)(node);\n\n        // Don't check identifiers\n        if (value === null) {\n          return;\n        }\n        if (value === undefined) {\n          context.report({\n            node,\n            message: errorMessage\n          });\n          return;\n        }\n        if (_languageTags[\"default\"].check(value)) {\n          return;\n        }\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nmodule.exports = exports.default;"
        }
    ]
}
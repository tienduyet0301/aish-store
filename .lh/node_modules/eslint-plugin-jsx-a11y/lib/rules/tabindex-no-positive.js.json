{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/rules/tabindex-no-positive.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892261152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\nvar _schemas = require(\"../util/schemas\");\n/**\n * @fileoverview Enforce tabIndex value is not greater than zero.\n * @author Ethan Cohen\n */\n\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\nvar errorMessage = 'Avoid positive integer values for tabIndex.';\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = exports[\"default\"] = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/tabindex-no-positive.md',\n      description: 'Enforce `tabIndex` value is not greater than zero.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    return {\n      JSXAttribute: function JSXAttribute(attribute) {\n        var name = (0, _jsxAstUtils.propName)(attribute).toUpperCase();\n\n        // Check if tabIndex is the attribute\n        if (name !== 'TABINDEX') {\n          return;\n        }\n\n        // Only check literals because we can't infer values from certain expressions.\n        var value = Number((0, _jsxAstUtils.getLiteralPropValue)(attribute));\n\n        // eslint-disable-next-line no-restricted-globals\n        if (isNaN(value) || value <= 0) {\n          return;\n        }\n        context.report({\n          node: attribute,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nmodule.exports = exports.default;"
        }
    ]
}
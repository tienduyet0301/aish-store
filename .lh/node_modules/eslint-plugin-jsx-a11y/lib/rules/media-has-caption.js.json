{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/rules/media-has-caption.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892260478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\nvar _arrayPrototype = _interopRequireDefault(require(\"array.prototype.flatmap\"));\nvar _schemas = require(\"../util/schemas\");\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\n/**\n * @fileoverview <audio> and <video> elements must have a <track> for captions.\n * @author Ethan Cohen\n * \n */\n\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\nvar errorMessage = 'Media elements such as <audio> and <video> must have a <track> for captions.';\nvar MEDIA_TYPES = ['audio', 'video'];\nvar schema = (0, _schemas.generateObjSchema)({\n  audio: _schemas.arraySchema,\n  video: _schemas.arraySchema,\n  track: _schemas.arraySchema\n});\nvar isMediaType = function isMediaType(context, type) {\n  var options = context.options[0] || {};\n  return MEDIA_TYPES.concat((0, _arrayPrototype[\"default\"])(MEDIA_TYPES, function (mediaType) {\n    return options[mediaType];\n  })).some(function (typeToCheck) {\n    return typeToCheck === type;\n  });\n};\nvar isTrackType = function isTrackType(context, type) {\n  var options = context.options[0] || {};\n  return ['track'].concat(options.track || []).some(function (typeToCheck) {\n    return typeToCheck === type;\n  });\n};\nvar _default = exports[\"default\"] = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/media-has-caption.md',\n      description: 'Enforces that `<audio>` and `<video>` elements must have a `<track>` for captions.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXElement: function JSXElement(node) {\n        var element = node.openingElement;\n        var type = elementType(element);\n        if (!isMediaType(context, type)) {\n          return;\n        }\n        var mutedProp = (0, _jsxAstUtils.getProp)(element.attributes, 'muted');\n        var mutedPropVal = (0, _jsxAstUtils.getLiteralPropValue)(mutedProp);\n        if (mutedPropVal === true) {\n          return;\n        }\n        // $FlowFixMe https://github.com/facebook/flow/issues/1414\n        var trackChildren = node.children.filter(function (child) {\n          if (child.type !== 'JSXElement') {\n            return false;\n          }\n\n          // $FlowFixMe https://github.com/facebook/flow/issues/1414\n          return isTrackType(context, elementType(child.openingElement));\n        });\n        if (trackChildren.length === 0) {\n          context.report({\n            node: element,\n            message: errorMessage\n          });\n          return;\n        }\n        var hasCaption = trackChildren.some(function (track) {\n          var kindProp = (0, _jsxAstUtils.getProp)(track.openingElement.attributes, 'kind');\n          var kindPropValue = (0, _jsxAstUtils.getLiteralPropValue)(kindProp) || '';\n          return kindPropValue.toLowerCase() === 'captions';\n        });\n        if (!hasCaption) {\n          context.report({\n            node: element,\n            message: errorMessage\n          });\n        }\n      }\n    };\n  }\n};\nmodule.exports = exports.default;"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/rules/anchor-ambiguous-text.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892259408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _schemas = require(\"../util/schemas\");\nvar _getAccessibleChildText = _interopRequireDefault(require(\"../util/getAccessibleChildText\"));\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\n/**\n * @fileoverview Enforce anchor text to not exactly match 'click here', 'here', 'link', 'learn more', and user-specified words.\n * @author Matt Wang\n * \n */\n\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_AMBIGUOUS_WORDS = ['click here', 'here', 'link', 'a link', 'learn more'];\nvar schema = (0, _schemas.generateObjSchema)({\n  words: _schemas.arraySchema\n});\nvar _default = exports[\"default\"] = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-ambiguous-text.md',\n      description: 'Enforce `<a>` text to not exactly match \"click here\", \"here\", \"link\", or \"a link\".'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    var typesToValidate = ['a'];\n    var options = context.options[0] || {};\n    var _options$words = options.words,\n      words = _options$words === void 0 ? DEFAULT_AMBIGUOUS_WORDS : _options$words;\n    var ambiguousWords = new Set(words);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var nodeType = elementType(node);\n\n        // Only check anchor elements and custom types.\n        if (typesToValidate.indexOf(nodeType) === -1) {\n          return;\n        }\n        var nodeText = (0, _getAccessibleChildText[\"default\"])(node.parent, elementType);\n        if (!ambiguousWords.has(nodeText)) {\n          // check the value\n          return;\n        }\n        context.report({\n          node,\n          message: 'Ambiguous text within anchor. Screen reader users rely on link text for context; the words \"{{wordsList}}\" are ambiguous and do not provide enough context.',\n          data: {\n            wordsList: words.join('\", \"')\n          }\n        });\n      }\n    };\n  }\n};\nmodule.exports = exports.default;"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/rules/no-onchange.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892260860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\nvar _schemas = require(\"../util/schemas\");\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\n/**\n * @fileoverview Enforce usage of onBlur over onChange for accessibility.\n * @author Ethan Cohen\n */\n\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\nvar errorMessage = 'onBlur must be used instead of onchange, unless absolutely necessary and it causes no negative consequences for keyboard only or screen reader users.';\nvar applicableTypes = ['select', 'option'];\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = exports[\"default\"] = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-onchange.md',\n      description: 'Enforce usage of `onBlur` over `onChange` on select menus for accessibility.'\n    },\n    deprecated: true,\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var nodeType = elementType(node);\n        if (applicableTypes.indexOf(nodeType) === -1) {\n          return;\n        }\n        var onChange = (0, _jsxAstUtils.getProp)(node.attributes, 'onChange');\n        var hasOnBlur = (0, _jsxAstUtils.getProp)(node.attributes, 'onBlur') !== undefined;\n        if (onChange && !hasOnBlur) {\n          context.report({\n            node,\n            message: errorMessage\n          });\n        }\n      }\n    };\n  }\n};\nmodule.exports = exports.default;"
        }
    ]
}
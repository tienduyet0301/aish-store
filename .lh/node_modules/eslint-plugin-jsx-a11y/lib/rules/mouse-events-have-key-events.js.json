{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/rules/mouse-events-have-key-events.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892260524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _ariaQuery = require(\"aria-query\");\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\nvar _schemas = require(\"../util/schemas\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /**\n * @fileoverview Enforce onmouseover/onmouseout are\n *  accompanied by onfocus/onblur.\n * @author Ethan Cohen\n * \n */ // ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar schema = (0, _schemas.generateObjSchema)({\n  hoverInHandlers: _objectSpread(_objectSpread({}, _schemas.arraySchema), {}, {\n    description: 'An array of events that need to be accompanied by `onFocus`'\n  }),\n  hoverOutHandlers: _objectSpread(_objectSpread({}, _schemas.arraySchema), {}, {\n    description: 'An array of events that need to be accompanied by `onBlur`'\n  })\n});\n\n// Use `onMouseOver` and `onMouseOut` by default if no config is\n// passed in for backwards compatibility\nvar DEFAULT_HOVER_IN_HANDLERS = ['onMouseOver'];\nvar DEFAULT_HOVER_OUT_HANDLERS = ['onMouseOut'];\nvar _default = exports[\"default\"] = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/mouse-events-have-key-events.md',\n      description: 'Enforce that `onMouseOver`/`onMouseOut` are accompanied by `onFocus`/`onBlur` for keyboard-only users.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var _options$0$hoverInHan, _options$, _options$0$hoverOutHa, _options$2;\n        var name = node.name.name;\n        if (!_ariaQuery.dom.get(name)) {\n          return;\n        }\n        var options = context.options;\n        var hoverInHandlers = (_options$0$hoverInHan = (_options$ = options[0]) === null || _options$ === void 0 ? void 0 : _options$.hoverInHandlers) !== null && _options$0$hoverInHan !== void 0 ? _options$0$hoverInHan : DEFAULT_HOVER_IN_HANDLERS;\n        var hoverOutHandlers = (_options$0$hoverOutHa = (_options$2 = options[0]) === null || _options$2 === void 0 ? void 0 : _options$2.hoverOutHandlers) !== null && _options$0$hoverOutHa !== void 0 ? _options$0$hoverOutHa : DEFAULT_HOVER_OUT_HANDLERS;\n        var attributes = node.attributes;\n\n        // Check hover in / onfocus pairing\n        var firstHoverInHandlerWithValue = hoverInHandlers.find(function (handler) {\n          var prop = (0, _jsxAstUtils.getProp)(attributes, handler);\n          var propValue = (0, _jsxAstUtils.getPropValue)(prop);\n          return propValue != null;\n        });\n        if (firstHoverInHandlerWithValue != null) {\n          var hasOnFocus = (0, _jsxAstUtils.getProp)(attributes, 'onFocus');\n          var onFocusValue = (0, _jsxAstUtils.getPropValue)(hasOnFocus);\n          if (hasOnFocus === false || onFocusValue === null || onFocusValue === undefined) {\n            context.report({\n              node: (0, _jsxAstUtils.getProp)(attributes, firstHoverInHandlerWithValue),\n              message: \"\".concat(firstHoverInHandlerWithValue, \" must be accompanied by onFocus for accessibility.\")\n            });\n          }\n        }\n\n        // Check hover out / onblur pairing\n        var firstHoverOutHandlerWithValue = hoverOutHandlers.find(function (handler) {\n          var prop = (0, _jsxAstUtils.getProp)(attributes, handler);\n          var propValue = (0, _jsxAstUtils.getPropValue)(prop);\n          return propValue != null;\n        });\n        if (firstHoverOutHandlerWithValue != null) {\n          var hasOnBlur = (0, _jsxAstUtils.getProp)(attributes, 'onBlur');\n          var onBlurValue = (0, _jsxAstUtils.getPropValue)(hasOnBlur);\n          if (hasOnBlur === false || onBlurValue === null || onBlurValue === undefined) {\n            context.report({\n              node: (0, _jsxAstUtils.getProp)(attributes, firstHoverOutHandlerWithValue),\n              message: \"\".concat(firstHoverOutHandlerWithValue, \" must be accompanied by onBlur for accessibility.\")\n            });\n          }\n        }\n      }\n    };\n  }\n};\nmodule.exports = exports.default;"
        }
    ]
}
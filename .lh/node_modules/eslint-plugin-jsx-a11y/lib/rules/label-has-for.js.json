{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/lib/rules/label-has-for.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892260394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\nvar _schemas = require(\"../util/schemas\");\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\nvar _hasAccessibleChild = _interopRequireDefault(require(\"../util/hasAccessibleChild\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\n/**\n * @fileoverview Enforce label tags have htmlFor attribute.\n * @author Ethan Cohen\n */\n\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\nvar enumValues = ['nesting', 'id'];\nvar schema = {\n  type: 'object',\n  properties: {\n    components: _schemas.arraySchema,\n    required: {\n      oneOf: [{\n        type: 'string',\n        \"enum\": enumValues\n      }, (0, _schemas.generateObjSchema)({\n        some: (0, _schemas.enumArraySchema)(enumValues)\n      }, ['some']), (0, _schemas.generateObjSchema)({\n        every: (0, _schemas.enumArraySchema)(enumValues)\n      }, ['every'])]\n    },\n    allowChildren: {\n      type: 'boolean'\n    }\n  }\n};\n// Breadth-first search, assuming that HTML for forms is shallow.\nfunction validateNesting(node) {\n  var queue = node.parent.children.slice();\n  var child;\n  var opener;\n  while (queue.length) {\n    child = queue.shift();\n    opener = child.openingElement;\n    if (child.type === 'JSXElement' && opener && (opener.name.name === 'input' || opener.name.name === 'textarea' || opener.name.name === 'select')) {\n      return true;\n    }\n    if (child.children) {\n      queue = queue.concat(child.children);\n    }\n  }\n  return false;\n}\nfunction validateID(_ref, context) {\n  var _settings$jsxA11y$at, _settings$jsxA11y, _settings$jsxA11y$att;\n  var attributes = _ref.attributes;\n  var settings = context.settings;\n  var htmlForAttributes = (_settings$jsxA11y$at = (_settings$jsxA11y = settings['jsx-a11y']) === null || _settings$jsxA11y === void 0 ? void 0 : (_settings$jsxA11y$att = _settings$jsxA11y.attributes) === null || _settings$jsxA11y$att === void 0 ? void 0 : _settings$jsxA11y$att[\"for\"]) !== null && _settings$jsxA11y$at !== void 0 ? _settings$jsxA11y$at : ['htmlFor'];\n  for (var i = 0; i < htmlForAttributes.length; i += 1) {\n    var attribute = htmlForAttributes[i];\n    if ((0, _jsxAstUtils.hasProp)(attributes, attribute)) {\n      var htmlForAttr = (0, _jsxAstUtils.getProp)(attributes, attribute);\n      var htmlForValue = (0, _jsxAstUtils.getPropValue)(htmlForAttr);\n      return htmlForAttr !== false && !!htmlForValue;\n    }\n  }\n  return false;\n}\nfunction validate(node, required, allowChildren, elementType, context) {\n  if (allowChildren === true) {\n    return (0, _hasAccessibleChild[\"default\"])(node.parent, elementType);\n  }\n  if (required === 'nesting') {\n    return validateNesting(node);\n  }\n  return validateID(node, context);\n}\nfunction getValidityStatus(node, required, allowChildren, elementType, context) {\n  if (Array.isArray(required.some)) {\n    var _isValid = required.some.some(function (rule) {\n      return validate(node, rule, allowChildren, elementType, context);\n    });\n    var _message = !_isValid ? \"Form label must have ANY of the following types of associated control: \".concat(required.some.join(', ')) : null;\n    return {\n      isValid: _isValid,\n      message: _message\n    };\n  }\n  if (Array.isArray(required.every)) {\n    var _isValid2 = required.every.every(function (rule) {\n      return validate(node, rule, allowChildren, elementType, context);\n    });\n    var _message2 = !_isValid2 ? \"Form label must have ALL of the following types of associated control: \".concat(required.every.join(', ')) : null;\n    return {\n      isValid: _isValid2,\n      message: _message2\n    };\n  }\n  var isValid = validate(node, required, allowChildren, elementType, context);\n  var message = !isValid ? \"Form label must have the following type of associated control: \".concat(required) : null;\n  return {\n    isValid,\n    message\n  };\n}\nvar _default = exports[\"default\"] = {\n  meta: {\n    deprecated: true,\n    replacedBy: ['label-has-associated-control'],\n    docs: {\n      description: 'Enforce that `<label>` elements have the `htmlFor` prop.',\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/label-has-for.md'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement(node) {\n        var options = context.options[0] || {};\n        var componentOptions = options.components || [];\n        var typesToValidate = ['label'].concat(componentOptions);\n        var nodeType = elementType(node);\n\n        // Only check 'label' elements and custom types.\n        if (typesToValidate.indexOf(nodeType) === -1) {\n          return;\n        }\n        var required = options.required || {\n          every: ['nesting', 'id']\n        };\n        var allowChildren = options.allowChildren || false;\n        var _getValidityStatus = getValidityStatus(node, required, allowChildren, elementType, context),\n          isValid = _getValidityStatus.isValid,\n          message = _getValidityStatus.message;\n        if (!isValid) {\n          context.report({\n            node,\n            message\n          });\n        }\n      }\n    };\n  }\n};\nmodule.exports = exports.default;"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/docs/rules/anchor-ambiguous-text.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892257143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# jsx-a11y/anchor-ambiguous-text\n\nüö´ This rule is _disabled_ in the ‚òëÔ∏è `recommended` config.\n\n<!-- end auto-generated rule header -->\n\nEnforces `<a>` values are not exact matches for the phrases \"click here\", \"here\", \"link\", \"a link\", or \"learn more\". Screen readers announce tags as links/interactive, but rely on values for context. Ambiguous anchor descriptions do not provide sufficient context for users.\n\n## Rule options\n\nThis rule takes one optional object argument with the parameter `words`.\n\n```json\n{\n  \"rules\": {\n    \"jsx-a11y/anchor-ambiguous-text\": [2, {\n      \"words\": [\"click this\"],\n    }],\n  }\n}\n```\n\nThe `words` option allows users to modify the strings that can be checked for in the anchor text. Useful for specifying other words in other languages. The default value is set by `DEFAULT_AMBIGUOUS_WORDS`:\n\n```js\nconst DEFAULT_AMBIGUOUS_WORDS = ['click here', 'here', 'link', 'a link', 'learn more'];\n```\n\nThe logic to calculate the inner text of an anchor is as follows:\n\n- if an element has the `aria-label` property, its value is used instead of the inner text\n- if an element has `aria-hidden=\"true`, it is skipped over\n- if an element is `<img />` or configured to be interpreted like one, its `alt` value is used as its inner text\n\nNote that this rule still disallows ambiguous `aria-label` or `alt` values.\n\nNote that this rule is case-insensitive, trims whitespace, and ignores certain punctuation (`[,.?¬ø!‚ÄΩ¬°;:]`). It only looks for **exact matches**.\n\n### Succeed\n\n```jsx\n<a>read this tutorial</a> // passes since it is not one of the disallowed words\n<a>${here}</a> // this is valid since 'here' is a variable name\n<a aria-label=\"tutorial on using eslint-plugin-jsx-a11y\">click here</a> // the aria-label supersedes the inner text\n```\n\n### Fail\n\n```jsx\n<a>here</a>\n<a>HERE</a>\n<a>link</a>\n<a>click here</a>\n<a>learn more</a>\n<a>learn more.</a>\n<a>learn more,</a>\n<a>learn more?</a>\n<a>learn more!</a>\n<a>learn more:</a>\n<a>learn more;</a>\n<a>a link</a>\n<a> a link </a>\n<a><span> click </span> here</a> // goes through element children\n<a>a<i></i> link</a>\n<a><i></i>a link</a>\n<a><span aria-hidden=\"true\">more text</span>learn more</a> // skips over elements with aria-hidden=true\n<a aria-label=\"click here\">something</a> // the aria-label here is inaccessible\n<a><img alt=\"click here\"/></a> // the alt tag is still ambiguous\n<a alt=\"tutorial on using eslint-plugin-jsx-a11y\">click here</a> // the alt tag is only parsed on img\n```\n\n## Accessibility guidelines\n\nEnsure anchor tags describe the content of the link, opposed to simply describing them as a link.\n\nCompare\n\n```jsx\n<p><a href=\"#\">click here</a> to read a tutorial by Foo Bar</p>\n```\n\nwhich can be more concise and accessible with\n\n```jsx\n<p>read <a href=\"#\">a tutorial by Foo Bar</a></p>\n```\n\n### Resources\n\n1. [WebAIM, Hyperlinks](https://webaim.org/techniques/hypertext/)\n2. [Deque University, Link Checklist - 'Avoid \"link\" (or similar) in the link text'](https://dequeuniversity.com/checklists/web/links)\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-jsx-a11y/docs/rules/aria-role.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892257545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# jsx-a11y/aria-role\n\nüíº This rule is enabled in the following configs: ‚òëÔ∏è `recommended`, üîí `strict`.\n\n<!-- end auto-generated rule header -->\n\nElements with ARIA roles must use a valid, non-abstract ARIA role. A reference to role definitions can be found at [WAI-ARIA](https://www.w3.org/TR/wai-aria/#role_definitions) site.\n\n## Rule options\n\nThis rule takes one optional object argument of type object:\n\n```json\n{\n    \"rules\": {\n        \"jsx-a11y/aria-role\": [ 2, {\n            \"allowedInvalidRoles\": [\"text\"],\n            \"ignoreNonDOM\": true\n        }],\n    }\n}\n```\n\n`allowedInvalidRules` is an optional string array of custom roles that should be allowed in addition to the ARIA spec, such as for cases when you [need to use a non-standard role](https://axesslab.com/text-splitting).\n\nFor the `ignoreNonDOM` option, this determines if developer created components are checked.\n\n### Succeed\n```jsx\n<div role=\"button\"></div>     <!-- Good: \"button\" is a valid ARIA role -->\n<div role={role}></div>       <!-- Good: role is a variable & cannot be determined until runtime. -->\n<div></div>                   <!-- Good: No ARIA role -->\n<Foo role={role}></Foo>       <!-- Good: ignoreNonDOM is set to true -->\n```\n\n### Fail\n\n```jsx\n<div role=\"datepicker\"></div> <!-- Bad: \"datepicker\" is not an ARIA role -->\n<div role=\"range\"></div>      <!-- Bad: \"range\" is an _abstract_ ARIA role -->\n<div role=\"\"></div>           <!-- Bad: An empty ARIA role is not allowed -->\n<Foo role={role}></Foo>       <!-- Bad: ignoreNonDOM is set to false or not set -->\n```\n\n## Accessibility guidelines\n- [WCAG 4.1.2](https://www.w3.org/WAI/WCAG21/Understanding/name-role-value)\n\n### Resources\n- [Chrome Audit Rules, AX_ARIA_01](https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_01)\n- [DPUB-ARIA roles](https://www.w3.org/TR/dpub-aria-1.0/)\n- [MDN: Using ARIA: Roles, states, and properties](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques)\n"
        }
    ]
}
{
    "sourceFile": "node_modules/chalk/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892102426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\nBasic foreground colors.\n\n[More colors here.](https://github.com/chalk/chalk/blob/master/readme.md#256-and-truecolor-color-support)\n*/\ndeclare type ForegroundColor =\n\t| 'black'\n\t| 'red'\n\t| 'green'\n\t| 'yellow'\n\t| 'blue'\n\t| 'magenta'\n\t| 'cyan'\n\t| 'white'\n\t| 'gray'\n\t| 'grey'\n\t| 'blackBright'\n\t| 'redBright'\n\t| 'greenBright'\n\t| 'yellowBright'\n\t| 'blueBright'\n\t| 'magentaBright'\n\t| 'cyanBright'\n\t| 'whiteBright';\n\n/**\nBasic background colors.\n\n[More colors here.](https://github.com/chalk/chalk/blob/master/readme.md#256-and-truecolor-color-support)\n*/\ndeclare type BackgroundColor =\n\t| 'bgBlack'\n\t| 'bgRed'\n\t| 'bgGreen'\n\t| 'bgYellow'\n\t| 'bgBlue'\n\t| 'bgMagenta'\n\t| 'bgCyan'\n\t| 'bgWhite'\n\t| 'bgGray'\n\t| 'bgGrey'\n\t| 'bgBlackBright'\n\t| 'bgRedBright'\n\t| 'bgGreenBright'\n\t| 'bgYellowBright'\n\t| 'bgBlueBright'\n\t| 'bgMagentaBright'\n\t| 'bgCyanBright'\n\t| 'bgWhiteBright';\n\n/**\nBasic colors.\n\n[More colors here.](https://github.com/chalk/chalk/blob/master/readme.md#256-and-truecolor-color-support)\n*/\ndeclare type Color = ForegroundColor | BackgroundColor;\n\ndeclare type Modifiers =\n\t| 'reset'\n\t| 'bold'\n\t| 'dim'\n\t| 'italic'\n\t| 'underline'\n\t| 'inverse'\n\t| 'hidden'\n\t| 'strikethrough'\n\t| 'visible';\n\ndeclare namespace chalk {\n\t/**\n\tLevels:\n\t- `0` - All colors disabled.\n\t- `1` - Basic 16 colors support.\n\t- `2` - ANSI 256 colors support.\n\t- `3` - Truecolor 16 million colors support.\n\t*/\n\ttype Level = 0 | 1 | 2 | 3;\n\n\tinterface Options {\n\t\t/**\n\t\tSpecify the color support for Chalk.\n\n\t\tBy default, color support is automatically detected based on the environment.\n\n\t\tLevels:\n\t\t- `0` - All colors disabled.\n\t\t- `1` - Basic 16 colors support.\n\t\t- `2` - ANSI 256 colors support.\n\t\t- `3` - Truecolor 16 million colors support.\n\t\t*/\n\t\tlevel?: Level;\n\t}\n\n\t/**\n\tReturn a new Chalk instance.\n\t*/\n\ttype Instance = new (options?: Options) => Chalk;\n\n\t/**\n\tDetect whether the terminal supports color.\n\t*/\n\tinterface ColorSupport {\n\t\t/**\n\t\tThe color level used by Chalk.\n\t\t*/\n\t\tlevel: Level;\n\n\t\t/**\n\t\tReturn whether Chalk supports basic 16 colors.\n\t\t*/\n\t\thasBasic: boolean;\n\n\t\t/**\n\t\tReturn whether Chalk supports ANSI 256 colors.\n\t\t*/\n\t\thas256: boolean;\n\n\t\t/**\n\t\tReturn whether Chalk supports Truecolor 16 million colors.\n\t\t*/\n\t\thas16m: boolean;\n\t}\n\n\tinterface ChalkFunction {\n\t\t/**\n\t\tUse a template string.\n\n\t\t@remarks Template literals are unsupported for nested calls (see [issue #341](https://github.com/chalk/chalk/issues/341))\n\n\t\t@example\n\t\t```\n\t\timport chalk = require('chalk');\n\n\t\tlog(chalk`\n\t\tCPU: {red ${cpu.totalPercent}%}\n\t\tRAM: {green ${ram.used / ram.total * 100}%}\n\t\tDISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%}\n\t\t`);\n\t\t```\n\n\t\t@example\n\t\t```\n\t\timport chalk = require('chalk');\n\n\t\tlog(chalk.red.bgBlack`2 + 3 = {bold ${2 + 3}}`)\n\t\t```\n\t\t*/\n\t\t(text: TemplateStringsArray, ...placeholders: unknown[]): string;\n\n\t\t(...text: unknown[]): string;\n\t}\n\n\tinterface Chalk extends ChalkFunction {\n\t\t/**\n\t\tReturn a new Chalk instance.\n\t\t*/\n\t\tInstance: Instance;\n\n\t\t/**\n\t\tThe color support for Chalk.\n\n\t\tBy default, color support is automatically detected based on the environment.\n\n\t\tLevels:\n\t\t- `0` - All colors disabled.\n\t\t- `1` - Basic 16 colors support.\n\t\t- `2` - ANSI 256 colors support.\n\t\t- `3` - Truecolor 16 million colors support.\n\t\t*/\n\t\tlevel: Level;\n\n\t\t/**\n\t\tUse HEX value to set text color.\n\n\t\t@param color - Hexadecimal value representing the desired color.\n\n\t\t@example\n\t\t```\n\t\timport chalk = require('chalk');\n\n\t\tchalk.hex('#DEADED');\n\t\t```\n\t\t*/\n\t\thex(color: string): Chalk;\n\n\t\t/**\n\t\tUse keyword color value to set text color.\n\n\t\t@param color - Keyword value representing the desired color.\n\n\t\t@example\n\t\t```\n\t\timport chalk = require('chalk');\n\n\t\tchalk.keyword('orange');\n\t\t```\n\t\t*/\n\t\tkeyword(color: string): Chalk;\n\n\t\t/**\n\t\tUse RGB values to set text color.\n\t\t*/\n\t\trgb(red: number, green: number, blue: number): Chalk;\n\n\t\t/**\n\t\tUse HSL values to set text color.\n\t\t*/\n\t\thsl(hue: number, saturation: number, lightness: number): Chalk;\n\n\t\t/**\n\t\tUse HSV values to set text color.\n\t\t*/\n\t\thsv(hue: number, saturation: number, value: number): Chalk;\n\n\t\t/**\n\t\tUse HWB values to set text color.\n\t\t*/\n\t\thwb(hue: number, whiteness: number, blackness: number): Chalk;\n\n\t\t/**\n\t\tUse a [Select/Set Graphic Rendition](https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_parameters) (SGR) [color code number](https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit) to set text color.\n\n\t\t30 <= code && code < 38 || 90 <= code && code < 98\n\t\tFor example, 31 for red, 91 for redBright.\n\t\t*/\n\t\tansi(code: number): Chalk;\n\n\t\t/**\n\t\tUse a [8-bit unsigned number](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) to set text color.\n\t\t*/\n\t\tansi256(index: number): Chalk;\n\n\t\t/**\n\t\tUse HEX value to set background color.\n\n\t\t@param color - Hexadecimal value representing the desired color.\n\n\t\t@example\n\t\t```\n\t\timport chalk = require('chalk');\n\n\t\tchalk.bgHex('#DEADED');\n\t\t```\n\t\t*/\n\t\tbgHex(color: string): Chalk;\n\n\t\t/**\n\t\tUse keyword color value to set background color.\n\n\t\t@param color - Keyword value representing the desired color.\n\n\t\t@example\n\t\t```\n\t\timport chalk = require('chalk');\n\n\t\tchalk.bgKeyword('orange');\n\t\t```\n\t\t*/\n\t\tbgKeyword(color: string): Chalk;\n\n\t\t/**\n\t\tUse RGB values to set background color.\n\t\t*/\n\t\tbgRgb(red: number, green: number, blue: number): Chalk;\n\n\t\t/**\n\t\tUse HSL values to set background color.\n\t\t*/\n\t\tbgHsl(hue: number, saturation: number, lightness: number): Chalk;\n\n\t\t/**\n\t\tUse HSV values to set background color.\n\t\t*/\n\t\tbgHsv(hue: number, saturation: number, value: number): Chalk;\n\n\t\t/**\n\t\tUse HWB values to set background color.\n\t\t*/\n\t\tbgHwb(hue: number, whiteness: number, blackness: number): Chalk;\n\n\t\t/**\n\t\tUse a [Select/Set Graphic Rendition](https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_parameters) (SGR) [color code number](https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit) to set background color.\n\n\t\t30 <= code && code < 38 || 90 <= code && code < 98\n\t\tFor example, 31 for red, 91 for redBright.\n\t\tUse the foreground code, not the background code (for example, not 41, nor 101).\n\t\t*/\n\t\tbgAnsi(code: number): Chalk;\n\n\t\t/**\n\t\tUse a [8-bit unsigned number](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) to set background color.\n\t\t*/\n\t\tbgAnsi256(index: number): Chalk;\n\n\t\t/**\n\t\tModifier: Resets the current color chain.\n\t\t*/\n\t\treadonly reset: Chalk;\n\n\t\t/**\n\t\tModifier: Make text bold.\n\t\t*/\n\t\treadonly bold: Chalk;\n\n\t\t/**\n\t\tModifier: Emitting only a small amount of light.\n\t\t*/\n\t\treadonly dim: Chalk;\n\n\t\t/**\n\t\tModifier: Make text italic. (Not widely supported)\n\t\t*/\n\t\treadonly italic: Chalk;\n\n\t\t/**\n\t\tModifier: Make text underline. (Not widely supported)\n\t\t*/\n\t\treadonly underline: Chalk;\n\n\t\t/**\n\t\tModifier: Inverse background and foreground colors.\n\t\t*/\n\t\treadonly inverse: Chalk;\n\n\t\t/**\n\t\tModifier: Prints the text, but makes it invisible.\n\t\t*/\n\t\treadonly hidden: Chalk;\n\n\t\t/**\n\t\tModifier: Puts a horizontal line through the center of the text. (Not widely supported)\n\t\t*/\n\t\treadonly strikethrough: Chalk;\n\n\t\t/**\n\t\tModifier: Prints the text only when Chalk has a color support level > 0.\n\t\tCan be useful for things that are purely cosmetic.\n\t\t*/\n\t\treadonly visible: Chalk;\n\n\t\treadonly black: Chalk;\n\t\treadonly red: Chalk;\n\t\treadonly green: Chalk;\n\t\treadonly yellow: Chalk;\n\t\treadonly blue: Chalk;\n\t\treadonly magenta: Chalk;\n\t\treadonly cyan: Chalk;\n\t\treadonly white: Chalk;\n\n\t\t/*\n\t\tAlias for `blackBright`.\n\t\t*/\n\t\treadonly gray: Chalk;\n\n\t\t/*\n\t\tAlias for `blackBright`.\n\t\t*/\n\t\treadonly grey: Chalk;\n\n\t\treadonly blackBright: Chalk;\n\t\treadonly redBright: Chalk;\n\t\treadonly greenBright: Chalk;\n\t\treadonly yellowBright: Chalk;\n\t\treadonly blueBright: Chalk;\n\t\treadonly magentaBright: Chalk;\n\t\treadonly cyanBright: Chalk;\n\t\treadonly whiteBright: Chalk;\n\n\t\treadonly bgBlack: Chalk;\n\t\treadonly bgRed: Chalk;\n\t\treadonly bgGreen: Chalk;\n\t\treadonly bgYellow: Chalk;\n\t\treadonly bgBlue: Chalk;\n\t\treadonly bgMagenta: Chalk;\n\t\treadonly bgCyan: Chalk;\n\t\treadonly bgWhite: Chalk;\n\n\t\t/*\n\t\tAlias for `bgBlackBright`.\n\t\t*/\n\t\treadonly bgGray: Chalk;\n\n\t\t/*\n\t\tAlias for `bgBlackBright`.\n\t\t*/\n\t\treadonly bgGrey: Chalk;\n\n\t\treadonly bgBlackBright: Chalk;\n\t\treadonly bgRedBright: Chalk;\n\t\treadonly bgGreenBright: Chalk;\n\t\treadonly bgYellowBright: Chalk;\n\t\treadonly bgBlueBright: Chalk;\n\t\treadonly bgMagentaBright: Chalk;\n\t\treadonly bgCyanBright: Chalk;\n\t\treadonly bgWhiteBright: Chalk;\n\t}\n}\n\n/**\nMain Chalk object that allows to chain styles together.\nCall the last one as a method with a string argument.\nOrder doesn't matter, and later styles take precedent in case of a conflict.\nThis simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n*/\ndeclare const chalk: chalk.Chalk & chalk.ChalkFunction & {\n\tsupportsColor: chalk.ColorSupport | false;\n\tLevel: chalk.Level;\n\tColor: Color;\n\tForegroundColor: ForegroundColor;\n\tBackgroundColor: BackgroundColor;\n\tModifiers: Modifiers;\n\tstderr: chalk.Chalk & {supportsColor: chalk.ColorSupport | false};\n};\n\nexport = chalk;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/lucide-react/dist/esm/DynamicIcon.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892427138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\"use client\";\n/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, useState, useEffect, createElement } from 'react';\nimport dynamicIconImports from './dynamicIconImports.js';\nimport Icon from './Icon.js';\n\nconst iconNames = Object.keys(dynamicIconImports);\nasync function getIconNode(name) {\n  if (!(name in dynamicIconImports)) {\n    throw new Error(\"[lucide-react]: Name in Lucide DynamicIcon not found\");\n  }\n  const icon = await dynamicIconImports[name]();\n  return icon.__iconNode;\n}\nconst DynamicIcon = forwardRef(\n  ({ name, fallback: Fallback, ...props }, ref) => {\n    const [iconNode, setIconNode] = useState();\n    useEffect(() => {\n      getIconNode(name).then(setIconNode).catch((error) => {\n        console.error(error);\n      });\n    }, [name]);\n    if (iconNode == null) {\n      if (Fallback == null) {\n        return null;\n      }\n      return createElement(Fallback);\n    }\n    return createElement(Icon, {\n      ref,\n      ...props,\n      iconNode\n    });\n  }\n);\n\nexport { DynamicIcon as default, iconNames };\n//# sourceMappingURL=DynamicIcon.js.map\n"
        }
    ]
}
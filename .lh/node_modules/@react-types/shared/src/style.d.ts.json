{
    "sourceFile": "node_modules/@react-types/shared/src/style.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891922884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BackgroundColorValue, BackgroundColorValueV6, BorderColorValue, BorderColorValueV6, BorderRadiusValue, BorderSizeValue, DimensionValue} from './dna';\nimport {CSSProperties} from 'react';\n\ntype ResponsiveProp<T> = {\n  base?: T,\n  S?: T,\n  M?: T,\n  L?: T,\n  [custom: string]: T | undefined\n}\ntype Responsive<T> = T | ResponsiveProp<T>\n\nexport interface StyleProps {\n  // For backward compatibility!\n  /** Sets the CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. Only use as a **last resort**. Use style props instead. */\n  UNSAFE_className?: string,\n  /** Sets inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. Only use as a **last resort**. Use style props instead. */\n  UNSAFE_style?: CSSProperties,\n\n  /** The margin for all four sides of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin). */\n  margin?: Responsive<DimensionValue>,\n  /** The margin for the logical start side of the element, depending on layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-inline-start). */\n  marginStart?: Responsive<DimensionValue>,\n  /** The margin for the logical end side of an element, depending on layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-inline-end). */\n  marginEnd?: Responsive<DimensionValue>,\n  // /** The margin for the left side of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left). Consider using `marginStart` instead for RTL support. */\n  // marginLeft?: Responsive<DimensionValue>,\n  // /** The margin for the right side of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left). Consider using `marginEnd` instead for RTL support. */\n  // marginRight?: Responsive<DimensionValue>,\n  /** The margin for the top side of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top). */\n  marginTop?: Responsive<DimensionValue>,\n  /** The margin for the bottom side of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom). */\n  marginBottom?: Responsive<DimensionValue>,\n  /** The margin for both the left and right sides of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin). */\n  marginX?: Responsive<DimensionValue>,\n  /** The margin for both the top and bottom sides of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/margin). */\n  marginY?: Responsive<DimensionValue>,\n\n  /** The width of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/width). */\n  width?: Responsive<DimensionValue>,\n  /** The height of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/height). */\n  height?: Responsive<DimensionValue>,\n  /** The minimum width of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width). */\n  minWidth?: Responsive<DimensionValue>,\n  /** The minimum height of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/min-height). */\n  minHeight?: Responsive<DimensionValue>,\n  /** The maximum width of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/max-width). */\n  maxWidth?: Responsive<DimensionValue>,\n  /** The maximum height of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/max-height). */\n  maxHeight?: Responsive<DimensionValue>,\n\n  /** When used in a flex layout, specifies how the element will grow or shrink to fit the space available. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex). */\n  flex?: Responsive<string | number | boolean>,\n  /** When used in a flex layout, specifies how the element will grow to fit the space available. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow). */\n  flexGrow?: Responsive<number>,\n  /** When used in a flex layout, specifies how the element will shrink to fit the space available. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-shrink). */\n  flexShrink?: Responsive<number>,\n  /** When used in a flex layout, specifies the initial main size of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis). */\n  flexBasis?: Responsive<number | string>,\n  /** Specifies how the element is justified inside a flex or grid container. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-self). */\n  justifySelf?: Responsive<'auto' | 'normal' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'self-start' | 'self-end' | 'center' | 'left' | 'right' | 'stretch'>, // ...\n  /** Overrides the `alignItems` property of a flex or grid container. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self). */\n  alignSelf?: Responsive<'auto' | 'normal' | 'start' | 'end' | 'center' | 'flex-start' | 'flex-end' | 'self-start' | 'self-end' | 'stretch'>,\n  /** The layout order for the element within a flex or grid container. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/order). */\n  order?: Responsive<number>,\n\n  /** When used in a grid layout, specifies the named grid area that the element should be placed in within the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area). */\n  gridArea?: Responsive<string>,\n  /** When used in a grid layout, specifies the column the element should be placed in within the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column). */\n  gridColumn?: Responsive<string>,\n  /** When used in a grid layout, specifies the row the element should be placed in within the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row). */\n  gridRow?: Responsive<string>,\n  /** When used in a grid layout, specifies the starting column to span within the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column-start). */\n  gridColumnStart?: Responsive<string>,\n  /** When used in a grid layout, specifies the ending column to span within the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column-end). */\n  gridColumnEnd?: Responsive<string>,\n  /** When used in a grid layout, specifies the starting row to span within the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row-start). */\n  gridRowStart?: Responsive<string>,\n  /** When used in a grid layout, specifies the ending row to span within the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row-end). */\n  gridRowEnd?: Responsive<string>,\n\n  /** Specifies how the element is positioned. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/position). */\n  position?: Responsive<'static' | 'relative' | 'absolute' | 'fixed' | 'sticky'>,\n  /** The stacking order for the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/z-index). */\n  zIndex?: Responsive<number>,\n  /** The top position for the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/top). */\n  top?: Responsive<DimensionValue>,\n  /** The bottom position for the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/bottom). */\n  bottom?: Responsive<DimensionValue>,\n  /** The logical start position for the element, depending on layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/inset-inline-start). */\n  start?: Responsive<DimensionValue>,\n  /** The logical end position for the element, depending on layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/inset-inline-end). */\n  end?: Responsive<DimensionValue>,\n  /** The left position for the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/left). Consider using `start` instead for RTL support. */\n  left?: Responsive<DimensionValue>,\n  /** The right position for the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/right). Consider using `start` instead for RTL support. */\n  right?: Responsive<DimensionValue>,\n\n  /** Hides the element. */\n  isHidden?: Responsive<boolean>\n}\n\nexport type ColorVersion = 5 | 6;\ntype BackgroundColor = {\n  5: BackgroundColorValue,\n  6: BackgroundColorValueV6\n};\n\ntype BorderColor = {\n  5: BorderColorValue,\n  6: BorderColorValueV6\n}\n\n// These support more properties than specific Spectrum components\n// but still based on spectrum global/alias variables.\nexport interface ViewStyleProps<C extends ColorVersion> extends StyleProps {\n  /**\n   * The Spectrum color token version number.\n   * @default 5\n   */\n  colorVersion?: C,\n\n  /** The background color for the element. */\n  backgroundColor?: Responsive<BackgroundColor[C]>,\n\n  /** The width of the element's border on all four sides. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-width). */\n  borderWidth?: Responsive<BorderSizeValue>,\n  /** The width of the border on the logical start side, depending on the layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start-width). */\n  borderStartWidth?: Responsive<BorderSizeValue>,\n  /** The width of the border on the logical end side, depending on the layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end-width). */\n  borderEndWidth?: Responsive<BorderSizeValue>,\n  // borderLeftWidth?: BorderSizeValue,\n  // borderRightWidth?: BorderSizeValue,\n  /** The width of the top border. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-width). */\n  borderTopWidth?: Responsive<BorderSizeValue>,\n  /** The width of the bottom border. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-width). */\n  borderBottomWidth?: Responsive<BorderSizeValue>,\n  /** The width of the left and right borders. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-width). */\n  borderXWidth?: Responsive<BorderSizeValue>,\n  /** The width of the top and bottom borders. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-width). */\n  borderYWidth?: Responsive<BorderSizeValue>,\n\n  /** The color of the element's border on all four sides. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-color). */\n  borderColor?: Responsive<BorderColor[C]>,\n  /** The color of the border on the logical start side, depending on the layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start-color). */\n  borderStartColor?: Responsive<BorderColor[C]>,\n  /** The color of the border on the logical end side, depending on the layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end-color). */\n  borderEndColor?: Responsive<BorderColor[C]>,\n  // borderLeftColor?: BorderColorValue,\n  // borderRightColor?: BorderColorValue,\n  /** The color of the top border. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-color). */\n  borderTopColor?: Responsive<BorderColor[C]>,\n  /** The color of the bottom border. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-color). */\n  borderBottomColor?: Responsive<BorderColor[C]>,\n  /** The color of the left and right borders. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-color). */\n  borderXColor?: Responsive<BorderColor[C]>,\n  /** The color of the top and bottom borders. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-width). */\n  borderYColor?: Responsive<BorderColor[C]>,\n\n  /** The border radius on all four sides of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius). */\n  borderRadius?: Responsive<BorderRadiusValue>,\n  /** The border radius for the top start corner of the element, depending on the layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-start-start-radius). */\n  borderTopStartRadius?: Responsive<BorderRadiusValue>,\n  /** The border radius for the top end corner of the element, depending on the layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-start-end-radius). */\n  borderTopEndRadius?: Responsive<BorderRadiusValue>,\n  /** The border radius for the bottom start corner of the element, depending on the layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-end-start-radius). */\n  borderBottomStartRadius?: Responsive<BorderRadiusValue>,\n  /** The border radius for the bottom end corner of the element, depending on the layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/border-end-end-radius). */\n  borderBottomEndRadius?: Responsive<BorderRadiusValue>,\n  // borderTopLeftRadius?: BorderRadiusValue,\n  // borderTopRightRadius?: BorderRadiusValue,\n  // borderBottomLeftRadius?: BorderRadiusValue,\n  // borderBottomRightRadius?: BorderRadiusValue,\n\n  /** The padding for all four sides of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/padding). */\n  padding?: Responsive<DimensionValue>,\n  /** The padding for the logical start side of the element, depending on layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/padding-inline-start). */\n  paddingStart?: Responsive<DimensionValue>,\n  /** The padding for the logical end side of an element, depending on layout direction. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/padding-inline-end). */\n  paddingEnd?: Responsive<DimensionValue>,\n  // paddingLeft?: Responsive<DimensionValue>,\n  // paddingRight?: Responsive<DimensionValue>,\n  /** The padding for the top side of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/padding-top). */\n  paddingTop?: Responsive<DimensionValue>,\n  /** The padding for the bottom side of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom). */\n  paddingBottom?: Responsive<DimensionValue>,\n  /** The padding for both the left and right sides of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/padding). */\n  paddingX?: Responsive<DimensionValue>,\n  /** The padding for both the top and bottom sides of the element. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/padding). */\n  paddingY?: Responsive<DimensionValue>,\n\n  /** Species what to do when the element's content is too long to fit its size. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/overflow). */\n  overflow?: Responsive<string>\n  // ...\n  // shadows?\n  // transforms?\n}\n\nexport interface BoxAlignmentStyleProps {\n  /** The distribution of space around items along the main axis. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content). */\n  justifyContent?: Responsive<'start' | 'end' | 'center' | 'left' | 'right' | 'space-between' | 'space-around' | 'space-evenly' | 'stretch' | 'baseline' | 'first baseline' | 'last baseline' | 'safe center' | 'unsafe center'>,\n  /** The distribution of space around child items along the cross axis. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-content).*/\n  alignContent?: Responsive<'start' | 'end' | 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'stretch' | 'baseline' | 'first baseline' | 'last baseline' | 'safe center' | 'unsafe center'>,\n  /** The alignment of children within their container. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items). */\n  alignItems?: Responsive<'start' | 'end' | 'center' | 'stretch' | 'self-start' | 'self-end' | 'baseline' | 'first baseline' | 'last baseline' | 'safe center' | 'unsafe center'>,\n  /** The space to display between both rows and columns. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/gap). */\n  gap?: Responsive<DimensionValue>,\n  /** The space to display between columns. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap). */\n  columnGap?: Responsive<DimensionValue>,\n  /** The space to display between rows. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap). */\n  rowGap?: Responsive<DimensionValue>\n}\n\nexport interface FlexStyleProps extends BoxAlignmentStyleProps, StyleProps {\n  /**\n   * The direction in which to layout children. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction).\n   * @default 'row'\n   */\n  direction?: Responsive<'row' | 'column' | 'row-reverse' | 'column-reverse'>,\n  /**\n   * Whether to wrap items onto multiple lines. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap).\n   * @default false\n   */\n  wrap?: Responsive<boolean | 'wrap' | 'nowrap' | 'wrap-reverse'>\n}\n\nexport interface GridStyleProps extends BoxAlignmentStyleProps, StyleProps {\n  /** Defines named grid areas. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas). */\n  areas?: Responsive<string[]>,\n  /** Defines the sizes of each row in the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows). */\n  rows?: Responsive<string | DimensionValue[]>,\n  /** Defines the sizes of each column in the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns). */\n  columns?: Responsive<string | DimensionValue[]>,\n  /** Defines the size of implicitly generated columns. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-columns). */\n  autoColumns?: Responsive<DimensionValue>,\n  /** Defines the size of implicitly generated rows. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-rows). */\n  autoRows?: Responsive<DimensionValue>,\n  /** Controls how auto-placed items are flowed into the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow). */\n  autoFlow?: Responsive<'row' | 'column' | 'row dense' | 'column dense'>,\n  /** Defines the default `justifySelf` for all items in the grid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-items). */\n  justifyItems?: Responsive<'auto' | 'normal' | 'start' | 'end' | 'center' | 'left' | 'right' | 'stretch' | 'self-start' | 'self-end' | 'baseline' | 'first baseline' | 'last baseline' | 'safe center' | 'unsafe center' | 'legacy right' | 'legacy left' | 'legacy center'>\n}\n"
        }
    ]
}
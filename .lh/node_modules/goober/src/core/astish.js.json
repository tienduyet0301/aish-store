{
    "sourceFile": "node_modules/goober/src/core/astish.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892319678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "let newRule = /(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g;\nlet ruleClean = /\\/\\*[^]*?\\*\\/|  +/g;\nlet ruleNewline = /\\n+/g;\nlet empty = ' ';\n\n/**\n * Convert a css style string into a object\n * @param {String} val\n * @returns {Object}\n */\nexport let astish = (val) => {\n    let tree = [{}];\n    let block, left;\n\n    while ((block = newRule.exec(val.replace(ruleClean, '')))) {\n        // Remove the current entry\n        if (block[4]) {\n            tree.shift();\n        } else if (block[3]) {\n            left = block[3].replace(ruleNewline, empty).trim();\n            tree.unshift((tree[0][left] = tree[0][left] || {}));\n        } else {\n            tree[0][block[1]] = block[2].replace(ruleNewline, empty).trim();\n        }\n    }\n\n    return tree[0];\n};\n"
        }
    ]
}
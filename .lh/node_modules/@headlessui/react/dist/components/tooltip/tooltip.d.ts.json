{
    "sourceFile": "node_modules/@headlessui/react/dist/components/tooltip/tooltip.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891765857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type Ref } from 'react';\nimport { type AnchorProps } from '../../internal/floating.js';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type PropsForFeatures, type RefProp } from '../../utils/render.js';\ndeclare let DEFAULT_TOOLTIP_TAG: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>;\ntype TooltipRenderPropArg = {};\ntype TooltipPropsWeControl = never;\nexport type TooltipProps<TTag extends ElementType = typeof DEFAULT_TOOLTIP_TAG> = Props<TTag, TooltipRenderPropArg, TooltipPropsWeControl, {\n    showDelayMs?: number;\n    hideDelayMs?: number;\n}>;\ndeclare function TooltipFn<TTag extends ElementType = typeof DEFAULT_TOOLTIP_TAG>(props: TooltipProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_TRIGGER_TAG: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>;\ntype TriggerRenderPropArg = {\n    hover: boolean;\n    focus: boolean;\n    autofocus: boolean;\n};\ntype TriggerPropsWeControl = 'aria-describedby';\nexport type TooltipTriggerProps<TTag extends ElementType = typeof DEFAULT_TRIGGER_TAG> = Props<TTag, TriggerRenderPropArg, TriggerPropsWeControl, {\n    autoFocus?: boolean;\n    disabled?: boolean;\n}>;\ndeclare function TriggerFn<TTag extends ElementType = typeof DEFAULT_TRIGGER_TAG>(props: TooltipTriggerProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\ndeclare let DEFAULT_PANEL_TAG: import('../description/description.js')._internal_ComponentDescription;\ntype PanelRenderPropArg = {};\ntype PanelPropsWeControl = 'role';\ndeclare let PanelRenderFeatures: number;\nexport type TooltipPanelProps<TTag extends ElementType = typeof DEFAULT_PANEL_TAG> = Props<TTag, PanelRenderPropArg, PanelPropsWeControl, {\n    anchor?: AnchorProps;\n} & PropsForFeatures<typeof PanelRenderFeatures>>;\ndeclare function PanelFn<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(props: TooltipPanelProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\nexport interface _internal_ComponentTooltip extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_TOOLTIP_TAG>(props: TooltipProps<TTag> & RefProp<typeof TooltipFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentTrigger extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_TRIGGER_TAG>(props: TooltipTriggerProps<TTag> & RefProp<typeof TriggerFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentPanel extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(props: TooltipPanelProps<TTag> & RefProp<typeof PanelFn>): React.JSX.Element;\n}\nexport declare let Tooltip: _internal_ComponentTooltip;\nexport declare let TooltipTrigger: _internal_ComponentTrigger;\nexport declare let TooltipPanel: _internal_ComponentPanel;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@headlessui/react/dist/components/menu/menu.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891764303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type Ref } from 'react';\nimport { type AnchorProps } from '../../internal/floating.js';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type RefProp } from '../../utils/render.js';\ndeclare let DEFAULT_MENU_TAG: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>;\ntype MenuRenderPropArg = {\n    open: boolean;\n    close: () => void;\n};\ntype MenuPropsWeControl = never;\nexport type MenuProps<TTag extends ElementType = typeof DEFAULT_MENU_TAG> = Props<TTag, MenuRenderPropArg, MenuPropsWeControl, {\n    __demoMode?: boolean;\n}>;\ndeclare function MenuFn<TTag extends ElementType = typeof DEFAULT_MENU_TAG>(props: MenuProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_BUTTON_TAG: \"button\";\ntype ButtonRenderPropArg = {\n    open: boolean;\n    active: boolean;\n    hover: boolean;\n    focus: boolean;\n    disabled: boolean;\n    autofocus: boolean;\n};\ntype ButtonPropsWeControl = 'aria-controls' | 'aria-expanded' | 'aria-haspopup';\nexport type MenuButtonProps<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG> = Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl, {\n    disabled?: boolean;\n    autoFocus?: boolean;\n}>;\ndeclare function ButtonFn<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(props: MenuButtonProps<TTag>, ref: Ref<HTMLButtonElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\ndeclare let DEFAULT_ITEMS_TAG: \"div\";\ntype ItemsRenderPropArg = {\n    open: boolean;\n};\ntype ItemsPropsWeControl = 'aria-activedescendant' | 'aria-labelledby' | 'role' | 'tabIndex';\nexport type MenuItemsProps<TTag extends ElementType = typeof DEFAULT_ITEMS_TAG> = Props<TTag, ItemsRenderPropArg, ItemsPropsWeControl, {\n    anchor?: AnchorProps;\n    portal?: boolean;\n    modal?: boolean;\n    transition?: boolean;\n    static?: boolean;\n    unmount?: boolean;\n}>;\ndeclare function ItemsFn<TTag extends ElementType = typeof DEFAULT_ITEMS_TAG>(props: MenuItemsProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_ITEM_TAG: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>;\ntype ItemRenderPropArg = {\n    /** @deprecated use `focus` instead */\n    active: boolean;\n    focus: boolean;\n    disabled: boolean;\n    close: () => void;\n};\ntype ItemPropsWeControl = 'aria-describedby' | 'aria-disabled' | 'aria-labelledby' | 'role' | 'tabIndex';\nexport type MenuItemProps<TTag extends ElementType = typeof DEFAULT_ITEM_TAG> = Props<TTag, ItemRenderPropArg, ItemPropsWeControl, {\n    disabled?: boolean;\n}>;\ndeclare function ItemFn<TTag extends ElementType = typeof DEFAULT_ITEM_TAG>(props: MenuItemProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_SECTION_TAG: \"div\";\ntype SectionRenderPropArg = {};\ntype SectionPropsWeControl = 'role' | 'aria-labelledby';\nexport type MenuSectionProps<TTag extends ElementType = typeof DEFAULT_SECTION_TAG> = Props<TTag, SectionRenderPropArg, SectionPropsWeControl>;\ndeclare function SectionFn<TTag extends ElementType = typeof DEFAULT_SECTION_TAG>(props: MenuSectionProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_HEADING_TAG: \"header\";\ntype HeadingRenderPropArg = {};\ntype HeadingPropsWeControl = 'role';\nexport type MenuHeadingProps<TTag extends ElementType = typeof DEFAULT_HEADING_TAG> = Props<TTag, HeadingRenderPropArg, HeadingPropsWeControl>;\ndeclare function HeadingFn<TTag extends ElementType = typeof DEFAULT_HEADING_TAG>(props: MenuHeadingProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\ndeclare let DEFAULT_SEPARATOR_TAG: \"div\";\ntype SeparatorRenderPropArg = {};\ntype SeparatorPropsWeControl = 'role';\nexport type MenuSeparatorProps<TTag extends ElementType = typeof DEFAULT_SEPARATOR_TAG> = Props<TTag, SeparatorRenderPropArg, SeparatorPropsWeControl>;\ndeclare function SeparatorFn<TTag extends ElementType = typeof DEFAULT_SEPARATOR_TAG>(props: MenuSeparatorProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\nexport interface _internal_ComponentMenu extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_MENU_TAG>(props: MenuProps<TTag> & RefProp<typeof MenuFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentMenuButton extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(props: MenuButtonProps<TTag> & RefProp<typeof ButtonFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentMenuItems extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_ITEMS_TAG>(props: MenuItemsProps<TTag> & RefProp<typeof ItemsFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentMenuItem extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_ITEM_TAG>(props: MenuItemProps<TTag> & RefProp<typeof ItemFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentMenuSection extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_SECTION_TAG>(props: MenuSectionProps<TTag> & RefProp<typeof SectionFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentMenuHeading extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_HEADING_TAG>(props: MenuHeadingProps<TTag> & RefProp<typeof HeadingFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentMenuSeparator extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_SEPARATOR_TAG>(props: MenuSeparatorProps<TTag> & RefProp<typeof SeparatorFn>): React.JSX.Element;\n}\nexport declare let MenuButton: _internal_ComponentMenuButton;\nexport declare let MenuItems: _internal_ComponentMenuItems;\nexport declare let MenuItem: _internal_ComponentMenuItem;\nexport declare let MenuSection: _internal_ComponentMenuSection;\nexport declare let MenuHeading: _internal_ComponentMenuHeading;\nexport declare let MenuSeparator: _internal_ComponentMenuSeparator;\nexport declare let Menu: _internal_ComponentMenu & {\n    /** @deprecated use `<MenuButton>` instead of `<Menu.Button>` */\n    Button: _internal_ComponentMenuButton;\n    /** @deprecated use `<MenuItems>` instead of `<Menu.Items>` */\n    Items: _internal_ComponentMenuItems;\n    /** @deprecated use `<MenuItem>` instead of `<Menu.Item>` */\n    Item: _internal_ComponentMenuItem;\n    /** @deprecated use `<MenuSection>` instead of `<Menu.Section>` */\n    Section: _internal_ComponentMenuSection;\n    /** @deprecated use `<MenuHeading>` instead of `<Menu.Heading>` */\n    Heading: _internal_ComponentMenuHeading;\n    /** @deprecated use `<MenuSeparator>` instead of `<Menu.Separator>` */\n    Separator: _internal_ComponentMenuSeparator;\n};\nexport {};\n"
        }
    ]
}
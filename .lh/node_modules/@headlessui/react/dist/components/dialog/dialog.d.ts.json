{
    "sourceFile": "node_modules/@headlessui/react/dist/components/dialog/dialog.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891763155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type MutableRefObject, type Ref } from 'react';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type PropsForFeatures, type RefProp } from '../../utils/render.js';\nimport { type _internal_ComponentDescription } from '../description/description.js';\ndeclare let DEFAULT_DIALOG_TAG: \"div\";\ntype DialogRenderPropArg = {\n    open: boolean;\n};\ntype DialogPropsWeControl = 'aria-describedby' | 'aria-labelledby' | 'aria-modal';\ndeclare let DialogRenderFeatures: number;\nexport type DialogProps<TTag extends ElementType = typeof DEFAULT_DIALOG_TAG> = Props<TTag, DialogRenderPropArg, DialogPropsWeControl, PropsForFeatures<typeof DialogRenderFeatures> & {\n    open?: boolean;\n    onClose: (value: boolean) => void;\n    initialFocus?: MutableRefObject<HTMLElement | null>;\n    role?: 'dialog' | 'alertdialog';\n    autoFocus?: boolean;\n    transition?: boolean;\n    __demoMode?: boolean;\n}>;\ndeclare function DialogFn<TTag extends ElementType = typeof DEFAULT_DIALOG_TAG>(props: DialogProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_PANEL_TAG: \"div\";\ntype PanelRenderPropArg = {\n    open: boolean;\n};\nexport type DialogPanelProps<TTag extends ElementType = typeof DEFAULT_PANEL_TAG> = Props<TTag, PanelRenderPropArg, never, {\n    transition?: boolean;\n}>;\ndeclare function PanelFn<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(props: DialogPanelProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_BACKDROP_TAG: \"div\";\ntype BackdropRenderPropArg = {\n    open: boolean;\n};\nexport type DialogBackdropProps<TTag extends ElementType = typeof DEFAULT_BACKDROP_TAG> = Props<TTag, BackdropRenderPropArg, never, {\n    transition?: boolean;\n}>;\ndeclare function BackdropFn<TTag extends ElementType = typeof DEFAULT_BACKDROP_TAG>(props: DialogBackdropProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_TITLE_TAG: \"h2\";\ntype TitleRenderPropArg = {\n    open: boolean;\n};\nexport type DialogTitleProps<TTag extends ElementType = typeof DEFAULT_TITLE_TAG> = Props<TTag, TitleRenderPropArg>;\ndeclare function TitleFn<TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(props: DialogTitleProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\nexport interface _internal_ComponentDialog extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_DIALOG_TAG>(props: DialogProps<TTag> & RefProp<typeof DialogFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentDialogPanel extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(props: DialogPanelProps<TTag> & RefProp<typeof PanelFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentDialogBackdrop extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_BACKDROP_TAG>(props: DialogBackdropProps<TTag> & RefProp<typeof BackdropFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentDialogTitle extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(props: DialogTitleProps<TTag> & RefProp<typeof TitleFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentDialogDescription extends _internal_ComponentDescription {\n}\nexport declare let DialogPanel: _internal_ComponentDialogPanel;\nexport declare let DialogBackdrop: _internal_ComponentDialogBackdrop;\nexport declare let DialogTitle: _internal_ComponentDialogTitle;\n/** @deprecated use `<Description>` instead of `<DialogDescription>` */\nexport declare let DialogDescription: _internal_ComponentDialogDescription;\nexport declare let Dialog: _internal_ComponentDialog & {\n    /** @deprecated use `<DialogPanel>` instead of `<Dialog.Panel>` */\n    Panel: _internal_ComponentDialogPanel;\n    /** @deprecated use `<DialogTitle>` instead of `<Dialog.Title>` */\n    Title: _internal_ComponentDialogTitle;\n    /** @deprecated use `<Description>` instead of `<Dialog.Description>` */\n    Description: _internal_ComponentDialogDescription;\n};\nexport {};\n"
        }
    ]
}
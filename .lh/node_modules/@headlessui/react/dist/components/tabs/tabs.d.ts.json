{
    "sourceFile": "node_modules/@headlessui/react/dist/components/tabs/tabs.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891765751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type Ref } from 'react';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type PropsForFeatures, type RefProp } from '../../utils/render.js';\ndeclare let DEFAULT_TABS_TAG: \"div\";\ntype TabsRenderPropArg = {\n    selectedIndex: number;\n};\ntype TabsPropsWeControl = never;\nexport type TabGroupProps<TTag extends ElementType = typeof DEFAULT_TABS_TAG> = Props<TTag, TabsRenderPropArg, TabsPropsWeControl, {\n    defaultIndex?: number;\n    onChange?: (index: number) => void;\n    selectedIndex?: number;\n    vertical?: boolean;\n    manual?: boolean;\n}>;\ndeclare function GroupFn<TTag extends ElementType = typeof DEFAULT_TABS_TAG>(props: TabGroupProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_LIST_TAG: \"div\";\ntype ListRenderPropArg = {\n    selectedIndex: number;\n};\ntype ListPropsWeControl = 'aria-orientation' | 'role';\nexport type TabListProps<TTag extends ElementType = typeof DEFAULT_LIST_TAG> = Props<TTag, ListRenderPropArg, ListPropsWeControl, {}>;\ndeclare function ListFn<TTag extends ElementType = typeof DEFAULT_LIST_TAG>(props: TabListProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\ndeclare let DEFAULT_TAB_TAG: \"button\";\ntype TabRenderPropArg = {\n    hover: boolean;\n    focus: boolean;\n    active: boolean;\n    autofocus: boolean;\n    selected: boolean;\n    disabled: boolean;\n};\ntype TabPropsWeControl = 'aria-controls' | 'aria-selected' | 'role' | 'tabIndex';\nexport type TabProps<TTag extends ElementType = typeof DEFAULT_TAB_TAG> = Props<TTag, TabRenderPropArg, TabPropsWeControl, {\n    autoFocus?: boolean;\n    disabled?: boolean;\n}>;\ndeclare function TabFn<TTag extends ElementType = typeof DEFAULT_TAB_TAG>(props: TabProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\ndeclare let DEFAULT_PANELS_TAG: \"div\";\ntype PanelsRenderPropArg = {\n    selectedIndex: number;\n};\nexport type TabPanelsProps<TTag extends ElementType = typeof DEFAULT_PANELS_TAG> = Props<TTag, PanelsRenderPropArg>;\ndeclare function PanelsFn<TTag extends ElementType = typeof DEFAULT_PANELS_TAG>(props: TabPanelsProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\ndeclare let DEFAULT_PANEL_TAG: \"div\";\ntype PanelRenderPropArg = {\n    selected: boolean;\n    focus: boolean;\n};\ntype PanelPropsWeControl = 'role' | 'aria-labelledby';\ndeclare let PanelRenderFeatures: number;\nexport type TabPanelProps<TTag extends ElementType = typeof DEFAULT_PANEL_TAG> = Props<TTag, PanelRenderPropArg, PanelPropsWeControl, PropsForFeatures<typeof PanelRenderFeatures> & {\n    id?: string;\n    tabIndex?: number;\n}>;\ndeclare function PanelFn<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(props: TabPanelProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element | null;\nexport interface _internal_ComponentTab extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_TAB_TAG>(props: TabProps<TTag> & RefProp<typeof TabFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentTabGroup extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_TABS_TAG>(props: TabGroupProps<TTag> & RefProp<typeof GroupFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentTabList extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_LIST_TAG>(props: TabListProps<TTag> & RefProp<typeof ListFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentTabPanels extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_PANELS_TAG>(props: TabPanelsProps<TTag> & RefProp<typeof PanelsFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentTabPanel extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(props: TabPanelProps<TTag> & RefProp<typeof PanelFn>): React.JSX.Element;\n}\nexport declare let TabGroup: _internal_ComponentTabGroup;\nexport declare let TabList: _internal_ComponentTabList;\nexport declare let TabPanels: _internal_ComponentTabPanels;\nexport declare let TabPanel: _internal_ComponentTabPanel;\nexport declare let Tab: _internal_ComponentTab & {\n    /** @deprecated use `<TabGroup>` instead of `<Tab.Group>` */\n    Group: _internal_ComponentTabGroup;\n    /** @deprecated use `<TabList>` instead of `<Tab.List>` */\n    List: _internal_ComponentTabList;\n    /** @deprecated use `<TabPanels>` instead of `<Tab.Panels>` */\n    Panels: _internal_ComponentTabPanels;\n    /** @deprecated use `<TabPanel>` instead of `<Tab.Panel>` */\n    Panel: _internal_ComponentTabPanel;\n};\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@headlessui/react/dist/components/transition/transition.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891765902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type MutableRefObject, type Ref } from 'react';\nimport type { Props, ReactTag } from '../../types.js';\nimport { RenderFeatures, type HasDisplayName, type PropsForFeatures, type RefProp } from '../../utils/render.js';\nexport interface TransitionClasses {\n    enter?: string;\n    enterFrom?: string;\n    enterTo?: string;\n    /**\n     * @deprecated The `enterTo` and `leaveTo` classes stay applied after the transition has finished.\n     */\n    entered?: string;\n    leave?: string;\n    leaveFrom?: string;\n    leaveTo?: string;\n}\nexport interface TransitionEvents {\n    beforeEnter?: () => void;\n    afterEnter?: () => void;\n    beforeLeave?: () => void;\n    afterLeave?: () => void;\n}\ntype TransitionChildPropsWeControl = never;\nexport type TransitionChildProps<TTag extends ReactTag> = Props<TTag, TransitionChildRenderPropArg, TransitionChildPropsWeControl, PropsForFeatures<typeof TransitionChildRenderFeatures> & TransitionClasses & TransitionEvents & {\n    transition?: boolean;\n    appear?: boolean;\n}>;\ndeclare let DEFAULT_TRANSITION_CHILD_TAG: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>;\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLElement>;\ndeclare let TransitionChildRenderFeatures: RenderFeatures;\ndeclare function TransitionChildFn<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(props: TransitionChildProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\nexport type TransitionRootProps<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG> = TransitionChildProps<TTag> & {\n    show?: boolean;\n    appear?: boolean;\n};\ndeclare function TransitionRootFn<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(props: TransitionRootProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\nexport interface _internal_ComponentTransitionRoot extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(props: TransitionRootProps<TTag> & RefProp<typeof TransitionRootFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentTransitionChild extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(props: TransitionChildProps<TTag> & RefProp<typeof TransitionChildFn>): React.JSX.Element;\n}\nexport declare let TransitionChild: _internal_ComponentTransitionChild;\nexport declare let Transition: _internal_ComponentTransitionRoot & {\n    /** @deprecated use `<TransitionChild>` instead of `<Transition.Child>` */\n    Child: _internal_ComponentTransitionChild;\n    /** @deprecated use `<Transition>` instead of `<Transition.Root>` */\n    Root: _internal_ComponentTransitionRoot;\n};\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@headlessui/react/dist/components/description/description.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891763072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type ReactNode, type Ref } from 'react';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type RefProp } from '../../utils/render.js';\ninterface SharedData {\n    slot?: {};\n    name?: string;\n    props?: {};\n}\nexport declare function useDescribedBy(): string | undefined;\ninterface DescriptionProviderProps extends SharedData {\n    children: ReactNode;\n    value?: string | undefined;\n}\nexport declare function useDescriptions(): [\n    string | undefined,\n    (props: DescriptionProviderProps) => React.JSX.Element\n];\ndeclare let DEFAULT_DESCRIPTION_TAG: \"p\";\nexport type DescriptionProps<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG> = Props<TTag>;\ndeclare function DescriptionFn<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(props: DescriptionProps<TTag>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\nexport interface _internal_ComponentDescription extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(props: DescriptionProps<TTag> & RefProp<typeof DescriptionFn>): React.JSX.Element;\n}\nexport declare let Description: _internal_ComponentDescription;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891763557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type MutableRefObject, type Ref } from 'react';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type RefProp } from '../../utils/render.js';\ntype Containers = (() => Iterable<HTMLElement>) | MutableRefObject<Set<MutableRefObject<HTMLElement | null>>>;\ndeclare let DEFAULT_FOCUS_TRAP_TAG: \"div\";\nexport declare enum FocusTrapFeatures {\n    /** No features enabled for the focus trap. */\n    None = 0,\n    /** Ensure that we move focus initially into the container. */\n    InitialFocus = 1,\n    /** Ensure that pressing `Tab` and `Shift+Tab` is trapped within the container. */\n    TabLock = 2,\n    /** Ensure that programmatically moving focus outside of the container is disallowed. */\n    FocusLock = 4,\n    /** Ensure that we restore the focus when unmounting the focus trap. */\n    RestoreFocus = 8,\n    /** Initial focus should look for the `data-autofocus` */\n    AutoFocus = 16\n}\ntype FocusTrapRenderPropArg = {};\ntype FocusTrapPropsWeControl = never;\nexport type FocusTrapProps<TTag extends ElementType = typeof DEFAULT_FOCUS_TRAP_TAG> = Props<TTag, FocusTrapRenderPropArg, FocusTrapPropsWeControl, {\n    initialFocus?: MutableRefObject<HTMLElement | null>;\n    initialFocusFallback?: MutableRefObject<HTMLElement | null>;\n    features?: FocusTrapFeatures;\n    containers?: Containers;\n}>;\ndeclare function FocusTrapFn<TTag extends ElementType = typeof DEFAULT_FOCUS_TRAP_TAG>(props: FocusTrapProps<TTag>, ref: Ref<HTMLElement>): React.JSX.Element;\nexport interface _internal_ComponentFocusTrap extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_FOCUS_TRAP_TAG>(props: FocusTrapProps<TTag> & RefProp<typeof FocusTrapFn>): React.JSX.Element;\n}\nexport declare let FocusTrap: _internal_ComponentFocusTrap & {\n    /** @deprecated use `FocusTrapFeatures` instead of `FocusTrap.features` */\n    features: typeof FocusTrapFeatures;\n};\nexport {};\n"
        }
    ]
}
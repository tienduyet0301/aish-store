{
    "sourceFile": "node_modules/@headlessui/react/dist/components/radio-group/radio-group.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891765135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type Ref } from 'react';\nimport { type ByComparator } from '../../hooks/use-by-comparator.js';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type RefProp } from '../../utils/render.js';\nimport { type _internal_ComponentDescription } from '../description/description.js';\nimport { type _internal_ComponentLabel } from '../label/label.js';\ndeclare let DEFAULT_RADIO_GROUP_TAG: \"div\";\ntype RadioGroupRenderPropArg<TType> = {\n    value: TType;\n};\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby';\nexport type RadioGroupProps<TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG, TType = string> = Props<TTag, RadioGroupRenderPropArg<TType>, RadioGroupPropsWeControl, {\n    value?: TType;\n    defaultValue?: TType;\n    onChange?(value: TType): void;\n    by?: ByComparator<TType>;\n    disabled?: boolean;\n    form?: string;\n    name?: string;\n}>;\ndeclare function RadioGroupFn<TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG, TType = string>(props: RadioGroupProps<TTag, TType>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_OPTION_TAG: \"div\";\ntype OptionRenderPropArg = {\n    checked: boolean;\n    /** @deprecated use `focus` instead */\n    active: boolean;\n    hover: boolean;\n    focus: boolean;\n    autofocus: boolean;\n    disabled: boolean;\n};\ntype OptionPropsWeControl = 'aria-checked' | 'aria-describedby' | 'aria-labelledby' | 'role' | 'tabIndex';\nexport type RadioOptionProps<TTag extends ElementType, TType> = Props<TTag, OptionRenderPropArg, OptionPropsWeControl, {\n    value: TType;\n    disabled?: boolean;\n    autoFocus?: boolean;\n}>;\ndeclare function OptionFn<TTag extends ElementType = typeof DEFAULT_OPTION_TAG, TType = Parameters<typeof RadioGroupRoot>[0]['value']>(props: RadioOptionProps<TTag, TType>, ref: Ref<HTMLElement>): React.JSX.Element;\ndeclare let DEFAULT_RADIO_TAG: \"span\";\ntype RadioRenderPropArg = {\n    checked: boolean;\n    hover: boolean;\n    focus: boolean;\n    autofocus: boolean;\n    disabled: boolean;\n};\ntype RadioPropsWeControl = 'aria-checked' | 'aria-describedby' | 'aria-labelledby' | 'role' | 'tabIndex';\nexport type RadioProps<TTag extends ElementType = typeof DEFAULT_RADIO_TAG, TType = string> = Props<TTag, RadioRenderPropArg, RadioPropsWeControl, {\n    value: TType;\n    disabled?: boolean;\n    autoFocus?: boolean;\n}>;\ndeclare function RadioFn<TTag extends ElementType = typeof DEFAULT_RADIO_TAG, TType = Parameters<typeof RadioGroupRoot>[0]['value']>(props: RadioProps<TTag, TType>, ref: Ref<HTMLElement>): React.ReactElement<any, string | React.JSXElementConstructor<any>> | null;\nexport interface _internal_ComponentRadioGroup extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG, TType = string>(props: RadioGroupProps<TTag, TType> & RefProp<typeof RadioGroupFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentRadioOption extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_OPTION_TAG, TType = string>(props: RadioOptionProps<TTag, TType> & RefProp<typeof OptionFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentRadio extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_RADIO_TAG, TType = string>(props: RadioProps<TTag, TType> & RefProp<typeof RadioFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentRadioLabel extends _internal_ComponentLabel {\n}\nexport interface _internal_ComponentRadioDescription extends _internal_ComponentDescription {\n}\ndeclare let RadioGroupRoot: _internal_ComponentRadioGroup;\n/** @deprecated use `<Radio>` instead of `<RadioGroupOption>` */\nexport declare let RadioGroupOption: _internal_ComponentRadioOption;\nexport declare let Radio: _internal_ComponentRadio;\n/** @deprecated use `<Label>` instead of `<RadioGroupLabel>` */\nexport declare let RadioGroupLabel: _internal_ComponentRadioLabel;\n/** @deprecated use `<Description>` instead of `<RadioGroupDescription>` */\nexport declare let RadioGroupDescription: _internal_ComponentRadioDescription;\nexport declare let RadioGroup: _internal_ComponentRadioGroup & {\n    /** @deprecated use `<Radio>` instead of `<RadioGroup.Option>` */\n    Option: _internal_ComponentRadioOption;\n    /** @deprecated use `<Radio>` instead of `<RadioGroup.Radio>` */\n    Radio: _internal_ComponentRadio;\n    /** @deprecated use `<Label>` instead of `<RadioGroup.Label>` */\n    Label: _internal_ComponentRadioLabel;\n    /** @deprecated use `<Description>` instead of `<RadioGroup.Description>` */\n    Description: _internal_ComponentRadioDescription;\n};\nexport {};\n"
        }
    ]
}
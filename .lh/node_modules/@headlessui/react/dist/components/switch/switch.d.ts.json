{
    "sourceFile": "node_modules/@headlessui/react/dist/components/switch/switch.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891765359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type ElementType, type Ref } from 'react';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type RefProp } from '../../utils/render.js';\nimport { type _internal_ComponentDescription } from '../description/description.js';\nimport { type _internal_ComponentLabel } from '../label/label.js';\ndeclare let DEFAULT_GROUP_TAG: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>;\nexport type SwitchGroupProps<TTag extends ElementType = typeof DEFAULT_GROUP_TAG> = Props<TTag>;\ndeclare function GroupFn<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: SwitchGroupProps<TTag>): React.JSX.Element;\ndeclare let DEFAULT_SWITCH_TAG: \"button\";\ntype SwitchRenderPropArg = {\n    checked: boolean;\n    hover: boolean;\n    focus: boolean;\n    active: boolean;\n    autofocus: boolean;\n    changing: boolean;\n    disabled: boolean;\n};\ntype SwitchPropsWeControl = 'aria-checked' | 'aria-describedby' | 'aria-labelledby' | 'role';\nexport type SwitchProps<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG> = Props<TTag, SwitchRenderPropArg, SwitchPropsWeControl, {\n    checked?: boolean;\n    defaultChecked?: boolean;\n    onChange?(checked: boolean): void;\n    name?: string;\n    value?: string;\n    form?: string;\n    autoFocus?: boolean;\n    disabled?: boolean;\n    tabIndex?: number;\n}>;\ndeclare function SwitchFn<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(props: SwitchProps<TTag>, ref: Ref<HTMLButtonElement>): React.JSX.Element;\nexport interface _internal_ComponentSwitch extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(props: SwitchProps<TTag> & RefProp<typeof SwitchFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentSwitchGroup extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: SwitchGroupProps<TTag> & RefProp<typeof GroupFn>): React.JSX.Element;\n}\nexport interface _internal_ComponentSwitchLabel extends _internal_ComponentLabel {\n}\nexport interface _internal_ComponentSwitchDescription extends _internal_ComponentDescription {\n}\n/** @deprecated use `<Field>` instead of `<SwitchGroup>` */\nexport declare let SwitchGroup: _internal_ComponentSwitchGroup;\n/** @deprecated use `<Label>` instead of `<SwitchLabel>` */\nexport declare let SwitchLabel: _internal_ComponentSwitchLabel;\n/** @deprecated use `<Description>` instead of `<SwitchDescription>` */\nexport declare let SwitchDescription: _internal_ComponentSwitchDescription;\nexport declare let Switch: _internal_ComponentSwitch & {\n    /** @deprecated use `<Field>` instead of `<Switch.Group>` */\n    Group: _internal_ComponentSwitchGroup;\n    /** @deprecated use `<Label>` instead of `<Switch.Label>` */\n    Label: _internal_ComponentSwitchLabel;\n    /** @deprecated use `<Description>` instead of `<Switch.Description>` */\n    Description: _internal_ComponentSwitchDescription;\n};\nexport {};\n"
        }
    ]
}
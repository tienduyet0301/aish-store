{
    "sourceFile": "node_modules/@headlessui/react/dist/components/select/select.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891765317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { type ElementType, type Ref } from 'react';\nimport type { Props } from '../../types.js';\nimport { type HasDisplayName, type RefProp } from '../../utils/render.js';\ndeclare let DEFAULT_SELECT_TAG: \"select\";\ntype SelectRenderPropArg = {\n    disabled: boolean;\n    hover: boolean;\n    focus: boolean;\n    active: boolean;\n    autofocus: boolean;\n    invalid: boolean;\n};\ntype SelectPropsWeControl = 'aria-labelledby' | 'aria-describedby';\nexport type SelectProps<TTag extends ElementType = typeof DEFAULT_SELECT_TAG> = Props<TTag, SelectRenderPropArg, SelectPropsWeControl, {\n    disabled?: boolean;\n    invalid?: boolean;\n    autoFocus?: boolean;\n}>;\ndeclare function SelectFn<TTag extends ElementType = typeof DEFAULT_SELECT_TAG>(props: SelectProps<TTag>, ref: Ref<HTMLElement>): import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>> | null;\nexport interface _internal_ComponentSelect extends HasDisplayName {\n    <TTag extends ElementType = typeof DEFAULT_SELECT_TAG>(props: SelectProps<TTag> & RefProp<typeof SelectFn>): React.JSX.Element;\n}\nexport declare let Select: _internal_ComponentSelect;\nexport {};\n"
        }
    ]
}
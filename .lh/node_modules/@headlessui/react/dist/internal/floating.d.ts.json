{
    "sourceFile": "node_modules/@headlessui/react/dist/internal/floating.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891768744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { type InnerProps } from '@floating-ui/react';\nimport * as React from 'react';\ntype Align = 'start' | 'end';\ntype Placement = 'top' | 'right' | 'bottom' | 'left';\ntype BaseAnchorProps = {\n    /**\n     * The `gap` is the space between the trigger and the panel.\n     */\n    gap: number | string;\n    /**\n     * The `offset` is the amount the panel should be nudged from its original position.\n     */\n    offset: number | string;\n    /**\n     * The `padding` is the minimum space between the panel and the viewport.\n     */\n    padding: number | string;\n};\nexport type AnchorProps = false | (`${Placement}` | `${Placement} ${Align}`) | Partial<BaseAnchorProps & {\n    /**\n     * The `to` value defines which side of the trigger the panel should be placed on and its\n     * alignment.\n     */\n    to: `${Placement}` | `${Placement} ${Align}`;\n}>;\nexport type AnchorPropsWithSelection = false | (`${Placement | 'selection'}` | `${Placement | 'selection'} ${Align}`) | Partial<BaseAnchorProps & {\n    /**\n     * The `to` value defines which side of the trigger the panel should be placed on and its\n     * alignment.\n     */\n    to: `${Placement | 'selection'}` | `${Placement | 'selection'} ${Align}`;\n}>;\nexport type InternalFloatingPanelProps = Partial<{\n    inner: {\n        listRef: InnerProps['listRef'];\n        index: InnerProps['index'];\n    };\n}>;\nexport declare function useResolvedAnchor<T extends AnchorProps | AnchorPropsWithSelection>(anchor?: T): Exclude<T, boolean | string> | null;\nexport declare function useFloatingReference(): ((node: import(\"@floating-ui/react-dom\").ReferenceType | null) => void) & ((node: any) => void);\nexport declare function useFloatingReferenceProps(): (userProps?: React.HTMLProps<Element> | undefined) => Record<string, unknown>;\nexport declare function useFloatingPanelProps(): (userProps?: React.HTMLProps<HTMLElement> | undefined) => Record<string, unknown> & {\n    'data-anchor': Placement | \"left end\" | \"left start\" | \"right end\" | \"right start\" | \"top end\" | \"top start\" | \"bottom end\" | \"bottom start\" | \"selection\" | \"selection end\" | \"selection start\" | undefined;\n};\nexport declare function useFloatingPanel(placement?: (AnchorPropsWithSelection & InternalFloatingPanelProps) | null): readonly [((node: HTMLElement | null) => void) & ((node: HTMLElement | null) => void), React.CSSProperties | undefined];\nexport declare function FloatingProvider({ children, enabled, }: {\n    children: React.ReactNode;\n    enabled?: boolean;\n}): React.JSX.Element;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@headlessui/react/dist/utils/store.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891770077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "type ChangeFn = () => void;\ntype UnsubscribeFn = () => void;\ntype ActionFn<T> = (this: T, ...args: any[]) => T | void;\ntype StoreActions<Key extends string, T> = Record<Key, ActionFn<T>>;\nexport interface Store<T, ActionKey extends string> {\n    getSnapshot(): T;\n    subscribe(onChange: ChangeFn): UnsubscribeFn;\n    dispatch(action: ActionKey, ...args: any[]): void;\n}\nexport declare function createStore<T, ActionKey extends string>(initial: () => T, actions: StoreActions<ActionKey, T>): Store<T, ActionKey>;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/@headlessui/react/dist/utils/calculate-active-index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891769294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export declare enum Focus {\n    /** Focus the first non-disabled item. */\n    First = 0,\n    /** Focus the previous non-disabled item. */\n    Previous = 1,\n    /** Focus the next non-disabled item. */\n    Next = 2,\n    /** Focus the last non-disabled item. */\n    Last = 3,\n    /** Focus a specific item based on the `id` of the item. */\n    Specific = 4,\n    /** Focus no items at all. */\n    Nothing = 5\n}\nexport declare function calculateActiveIndex<TItem>(action: {\n    focus: Focus.Specific;\n    id: string;\n} | {\n    focus: Exclude<Focus, Focus.Specific>;\n}, resolvers: {\n    resolveItems(): TItem[];\n    resolveActiveIndex(): number | null;\n    resolveId(item: TItem, index: number, items: TItem[]): string;\n    resolveDisabled(item: TItem, index: number, items: TItem[]): boolean;\n}): number | null;\n"
        }
    ]
}
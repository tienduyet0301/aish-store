{
    "sourceFile": "node_modules/@headlessui/react/dist/machine.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891769102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export declare abstract class Machine<State, Event extends {\n    type: number | string;\n}> {\n    #private;\n    constructor(initialState: State);\n    get state(): Readonly<State>;\n    abstract reduce(state: Readonly<State>, event: Event): Readonly<State>;\n    subscribe<Slice>(selector: (state: Readonly<State>) => Slice, callback: (state: Slice) => void): () => void;\n    on(type: Event['type'], callback: (state: State, event: Event) => void): () => void;\n    send(event: Event): void;\n}\nexport declare function shallowEqual(a: any, b: any): boolean;\nexport declare function batch<F extends (...args: any[]) => void, P extends any[] = Parameters<F>>(setup: () => [callback: F, handle: () => void]): (...args: P) => void;\n"
        }
    ]
}
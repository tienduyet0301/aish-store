{
    "sourceFile": "node_modules/eslint-module-utils/contextCompat.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892247217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Scope, SourceCode, Rule } from 'eslint';\nimport * as ESTree from 'estree';\n\ntype LegacyContext = {\n  getFilename: () => string,\n  getPhysicalFilename: () => string,\n  getSourceCode: () => SourceCode,\n  getScope: never,\n  getAncestors: never,\n  getDeclaredVariables: never,\n};\n\ntype NewContext = {\n  filename: string,\n  sourceCode: SourceCode,\n  getPhysicalFilename?: () => string,\n  getScope: () => Scope.Scope,\n  getAncestors: () => ESTree.Node[],\n  getDeclaredVariables: (node: ESTree.Node) => Scope.Variable[],\n};\n\nexport type Context = LegacyContext | NewContext | Rule.RuleContext;\n\ndeclare function getAncestors(context: Context, node: ESTree.Node): ESTree.Node[];\ndeclare function getDeclaredVariables(context: Context, node: ESTree.Node): Scope.Variable[];\ndeclare function getFilename(context: Context): string;\ndeclare function getPhysicalFilename(context: Context): string;\ndeclare function getScope(context: Context, node: ESTree.Node): Scope.Scope;\ndeclare function getSourceCode(context: Context): SourceCode;\n\nexport {\n  getAncestors,\n  getDeclaredVariables,\n  getFilename,\n  getPhysicalFilename,\n  getScope,\n  getSourceCode,\n};\n"
        }
    ]
}
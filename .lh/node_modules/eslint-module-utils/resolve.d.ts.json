{
    "sourceFile": "node_modules/eslint-module-utils/resolve.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892248971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Rule } from 'eslint';\n\nimport type ModuleCache from './ModuleCache';\nimport type { ESLintSettings } from './types';\n\nexport type ResultNotFound = { found: false, path?: undefined };\nexport type ResultFound = { found: true, path: string | null };\nexport type ResolvedResult = ResultNotFound | ResultFound;\n\nexport type ResolverResolve = (modulePath: string, sourceFile:string, config: unknown) => ResolvedResult;\nexport type ResolverResolveImport = (modulePath: string, sourceFile:string, config: unknown) => string | undefined;\nexport type Resolver = { interfaceVersion?: 1 | 2, resolve: ResolverResolve, resolveImport: ResolverResolveImport };\n\ndeclare function resolve(\n    p: string,\n    context: Rule.RuleContext,\n): ResolvedResult['path'];\n\nexport default resolve;\n\ndeclare function fileExistsWithCaseSync(\n    filepath: string | null,\n    cacheSettings: ESLintSettings,\n    strict: boolean\n): boolean | ReturnType<typeof ModuleCache.prototype.get>;\n\ndeclare function relative(modulePath: string, sourceFile: string, settings: ESLintSettings): ResolvedResult['path'];\n\n\nexport { fileExistsWithCaseSync, relative };\n"
        }
    ]
}
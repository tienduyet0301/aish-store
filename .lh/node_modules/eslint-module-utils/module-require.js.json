{
    "sourceFile": "node_modules/eslint-module-utils/module-require.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892247779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nexports.__esModule = true;\n\nconst Module = require('module');\nconst path = require('path');\n\n// borrowed from babel-eslint\n/** @type {(filename: string) => Module} */\nfunction createModule(filename) {\n  const mod = new Module(filename);\n  mod.filename = filename;\n  // @ts-expect-error _nodeModulesPaths are undocumented\n  mod.paths = Module._nodeModulePaths(path.dirname(filename));\n  return mod;\n}\n\n/** @type {import('./module-require').default} */\nexports.default = function moduleRequire(p) {\n  try {\n    // attempt to get espree relative to eslint\n    const eslintPath = require.resolve('eslint');\n    const eslintModule = createModule(eslintPath);\n    // @ts-expect-error _resolveFilename is undocumented\n    return require(Module._resolveFilename(p, eslintModule));\n  } catch (err) { /* ignore */ }\n\n  try {\n    // try relative to entry point\n    // @ts-expect-error TODO: figure out what this is\n    return require.main.require(p);\n  } catch (err) { /* ignore */ }\n\n  // finally, try from here\n  return require(p);\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/is-shared-array-buffer/test/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892341515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\nvar inspect = require('object-inspect');\nvar forEach = require('for-each');\nvar v = require('es-value-fixtures');\nvar availableTypedArrays = require('available-typed-arrays')();\n\nvar isSharedArrayBuffer = require('..');\n\ntest('isSharedArrayBuffer', function (t) {\n\tt.equal(typeof isSharedArrayBuffer, 'function', 'is a function');\n\n\t// @ts-expect-error TS sucks with concat\n\tvar nonSABs = [].concat(v.primitives, v.objects);\n\tforEach(nonSABs, function (nonSAB) {\n\t\tt.equal(isSharedArrayBuffer(nonSAB), false, inspect(nonSAB) + ' is not a SharedArrayBuffer');\n\t});\n\n\tt.test('actual SharedArrayBuffer instances', { skip: typeof SharedArrayBuffer === 'undefined' }, function (st) {\n\t\tvar sab = new SharedArrayBuffer(0);\n\n\t\tst.equal(isSharedArrayBuffer(sab), true, inspect(sab) + ' is a SharedArrayBuffer');\n\n\t\tst.end();\n\t});\n\n\tt.test('Typed Arrays', { skip: availableTypedArrays.length === 0 }, function (st) {\n\t\tforEach(availableTypedArrays, function (TypedArray) {\n\t\t\tvar ta = new global[TypedArray](0);\n\t\t\tst.equal(isSharedArrayBuffer(ta.buffer), false, inspect(ta.buffer) + ', the TA\\'s buffer, is not a SharedArrayBuffer');\n\t\t\tst.equal(isSharedArrayBuffer(ta), false, inspect(ta) + ' is not a SharedArrayBuffer');\n\t\t});\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"
        }
    ]
}
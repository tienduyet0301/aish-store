{
    "sourceFile": "node_modules/object.assign/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892945392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "# object.assign <sup>[![Version Badge][npm-version-svg]][npm-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][npm-url]\n\nAn Object.assign shim. Invoke its \"shim\" method to shim Object.assign if it is unavailable.\n\nThis package implements the [es-shim API](https://github.com/es-shims/api) interface. It works in an ES3-supported environment and complies with the [spec](http://www.ecma-international.org/ecma-262/6.0/#sec-object.assign). In an ES6 environment, it will also work properly with `Symbol`s.\n\nTakes a minimum of 2 arguments: `target` and `source`.\nTakes a variable sized list of source arguments - at least 1, as many as you want.\nThrows a TypeError if the `target` argument is `null` or `undefined`.\n\nMost common usage:\n```js\nvar assign = require('object.assign').getPolyfill(); // returns native method if compliant\n\t/* or */\nvar assign = require('object.assign/polyfill')(); // returns native method if compliant\n```\n\n## Example\n\n```js\nvar assert = require('assert');\n\n// Multiple sources!\nvar target = { a: true };\nvar source1 = { b: true };\nvar source2 = { c: true };\nvar sourceN = { n: true };\n\nvar expected = {\n\ta: true,\n\tb: true,\n\tc: true,\n\tn: true\n};\n\nassign(target, source1, source2, sourceN);\nassert.deepEqual(target, expected); // AWESOME!\n```\n\n```js\nvar target = {\n\ta: true,\n\tb: true,\n\tc: true\n};\nvar source1 = {\n\tc: false,\n\td: false\n};\nvar sourceN = {\n\te: false\n};\n\nvar assigned = assign(target, source1, sourceN);\nassert.equal(target, assigned); // returns the target object\nassert.deepEqual(assigned, {\n\ta: true,\n\tb: true,\n\tc: false,\n\td: false,\n\te: false\n});\n```\n\n```js\n/* when Object.assign is not present */\ndelete Object.assign;\nvar shimmedAssign = require('object.assign').shim();\n\t/* or */\nvar shimmedAssign = require('object.assign/shim')();\n\nassert.equal(shimmedAssign, assign);\n\nvar target = {\n\ta: true,\n\tb: true,\n\tc: true\n};\nvar source = {\n\tc: false,\n\td: false,\n\te: false\n};\n\nvar assigned = assign(target, source);\nassert.deepEqual(Object.assign(target, source), assign(target, source));\n```\n\n```js\n/* when Object.assign is present */\nvar shimmedAssign = require('object.assign').shim();\nassert.equal(shimmedAssign, Object.assign);\n\nvar target = {\n\ta: true,\n\tb: true,\n\tc: true\n};\nvar source = {\n\tc: false,\n\td: false,\n\te: false\n};\n\nassert.deepEqual(Object.assign(target, source), assign(target, source));\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[npm-url]: https://npmjs.org/package/object.assign\n[npm-version-svg]: http://versionbadg.es/ljharb/object.assign.svg\n[travis-svg]: https://travis-ci.org/ljharb/object.assign.svg\n[travis-url]: https://travis-ci.org/ljharb/object.assign\n[deps-svg]: https://david-dm.org/ljharb/object.assign.svg?theme=shields.io\n[deps-url]: https://david-dm.org/ljharb/object.assign\n[dev-deps-svg]: https://david-dm.org/ljharb/object.assign/dev-status.svg?theme=shields.io\n[dev-deps-url]: https://david-dm.org/ljharb/object.assign#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/object.assign.png?downloads=true&stars=true\n[license-image]: http://img.shields.io/npm/l/object.assign.svg\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/object.assign.svg\n[downloads-url]: http://npm-stat.com/charts.html?package=object.assign\n[codecov-image]: https://codecov.io/gh/ljharb/object.assign/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/object.assign/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/object.assign\n[actions-url]: https://github.com/ljharb/object.assign/actions\n"
        }
    ]
}
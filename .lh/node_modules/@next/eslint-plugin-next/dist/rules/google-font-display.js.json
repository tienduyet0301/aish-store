{
    "sourceFile": "node_modules/@next/eslint-plugin-next/dist/rules/google-font-display.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891882661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nvar _definerule = require(\"../utils/define-rule\");\nvar _nodeattributes = /*#__PURE__*/ _interop_require_default(require(\"../utils/node-attributes\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nvar url = 'https://nextjs.org/docs/messages/google-font-display';\nmodule.exports = (0, _definerule.defineRule)({\n    meta: {\n        docs: {\n            description: 'Enforce font-display behavior with Google Fonts.',\n            recommended: true,\n            url: url\n        },\n        type: 'problem',\n        schema: []\n    },\n    create: function create(context) {\n        return {\n            JSXOpeningElement: function JSXOpeningElement(node) {\n                var message;\n                if (node.name.name !== 'link') {\n                    return;\n                }\n                var attributes = new _nodeattributes.default(node);\n                if (!attributes.has('href') || !attributes.hasValue('href')) {\n                    return;\n                }\n                var hrefValue = attributes.value('href');\n                var isGoogleFont = typeof hrefValue === 'string' && hrefValue.startsWith('https://fonts.googleapis.com/css');\n                if (isGoogleFont) {\n                    var params = new URLSearchParams(hrefValue.split('?', 2)[1]);\n                    var displayValue = params.get('display');\n                    if (!params.has('display')) {\n                        message = 'A font-display parameter is missing (adding `&display=optional` is recommended).';\n                    } else if (displayValue === 'auto' || displayValue === 'block' || displayValue === 'fallback') {\n                        message = \"\".concat(displayValue[0].toUpperCase() + displayValue.slice(1), \" is not recommended.\");\n                    }\n                }\n                if (message) {\n                    context.report({\n                        node: node,\n                        message: \"\".concat(message, \" See: \").concat(url)\n                    });\n                }\n            }\n        };\n    }\n});\n"
        }
    ]
}
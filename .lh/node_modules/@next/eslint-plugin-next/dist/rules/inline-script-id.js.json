{
    "sourceFile": "node_modules/@next/eslint-plugin-next/dist/rules/inline-script-id.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891882718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nvar _definerule = require(\"../utils/define-rule\");\nvar url = 'https://nextjs.org/docs/messages/inline-script-id';\nmodule.exports = (0, _definerule.defineRule)({\n    meta: {\n        docs: {\n            description: 'Enforce `id` attribute on `next/script` components with inline content.',\n            recommended: true,\n            url: url\n        },\n        type: 'problem',\n        schema: []\n    },\n    create: function create(context) {\n        var nextScriptImportName = null;\n        return {\n            ImportDeclaration: function ImportDeclaration(node) {\n                if (node.source.value === 'next/script') {\n                    nextScriptImportName = node.specifiers[0].local.name;\n                }\n            },\n            JSXElement: function JSXElement(node) {\n                if (nextScriptImportName == null) return;\n                if (node.openingElement && node.openingElement.name && node.openingElement.name.name !== nextScriptImportName) {\n                    return;\n                }\n                var attributeNames = new Set();\n                var hasNonCheckableSpreadAttribute = false;\n                node.openingElement.attributes.forEach(function(attribute) {\n                    // Early return if we already have a non-checkable spread attribute, for better performance\n                    if (hasNonCheckableSpreadAttribute) return;\n                    if (attribute.type === 'JSXAttribute') {\n                        attributeNames.add(attribute.name.name);\n                    } else if (attribute.type === 'JSXSpreadAttribute') {\n                        if (attribute.argument && attribute.argument.properties) {\n                            attribute.argument.properties.forEach(function(property) {\n                                attributeNames.add(property.key.name);\n                            });\n                        } else {\n                            // JSXSpreadAttribute without properties is not checkable\n                            hasNonCheckableSpreadAttribute = true;\n                        }\n                    }\n                });\n                // https://github.com/vercel/next.js/issues/34030\n                // If there is a non-checkable spread attribute, we simply ignore them\n                if (hasNonCheckableSpreadAttribute) return;\n                if (node.children.length > 0 || attributeNames.has('dangerouslySetInnerHTML')) {\n                    if (!attributeNames.has('id')) {\n                        context.report({\n                            node: node,\n                            message: \"`next/script` components with inline content must specify an `id` attribute. See: \".concat(url)\n                        });\n                    }\n                }\n            }\n        };\n    }\n});\n"
        }
    ]
}
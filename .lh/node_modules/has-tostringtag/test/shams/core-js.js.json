{
    "sourceFile": "node_modules/has-tostringtag/test/shams/core-js.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892324757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nvar test = require('tape');\n\nif (typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol') {\n\ttest('has native Symbol.toStringTag support', function (t) {\n\t\tt.equal(typeof Symbol, 'function');\n\t\tt.equal(typeof Symbol.toStringTag, 'symbol');\n\t\tt.end();\n\t});\n\t// @ts-expect-error CJS has top-level return\n\treturn;\n}\n\nvar hasSymbolToStringTag = require('../../shams');\n\ntest('polyfilled Symbols', function (t) {\n\t/* eslint-disable global-require */\n\tt.equal(hasSymbolToStringTag(), false, 'hasSymbolToStringTag is false before polyfilling');\n\t// @ts-expect-error no types defined\n\trequire('core-js/fn/symbol');\n\t// @ts-expect-error no types defined\n\trequire('core-js/fn/symbol/to-string-tag');\n\n\trequire('../tests')(t);\n\n\tvar hasToStringTagAfter = hasSymbolToStringTag();\n\tt.equal(hasToStringTagAfter, true, 'hasSymbolToStringTag is true after polyfilling');\n\t/* eslint-enable global-require */\n\tt.end();\n});\n"
        }
    ]
}
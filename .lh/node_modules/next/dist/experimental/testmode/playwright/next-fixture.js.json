{
    "sourceFile": "node_modules/next/dist/experimental/testmode/playwright/next-fixture.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892854605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"applyNextFixture\", {\n    enumerable: true,\n    get: function() {\n        return applyNextFixture;\n    }\n});\nconst _pageroute = require(\"./page-route\");\nconst _report = require(\"./report\");\nclass NextFixtureImpl {\n    constructor(testInfo, options, worker, page){\n        this.testInfo = testInfo;\n        this.options = options;\n        this.worker = worker;\n        this.page = page;\n        this.fetchHandlers = [];\n        this.testId = testInfo.testId;\n        worker.onFetch(this.testId, this.handleFetch.bind(this));\n    }\n    async setup() {\n        const testHeaders = {\n            'Next-Test-Proxy-Port': String(this.worker.proxyPort),\n            'Next-Test-Data': this.testId\n        };\n        await this.page.context().route('**', (route)=>(0, _pageroute.handleRoute)(route, this.page, testHeaders, this.handleFetch.bind(this)));\n    }\n    teardown() {\n        this.worker.cleanupTest(this.testId);\n    }\n    onFetch(handler) {\n        this.fetchHandlers.push(handler);\n    }\n    async handleFetch(request) {\n        return (0, _report.reportFetch)(this.testInfo, request, async (req)=>{\n            for (const handler of this.fetchHandlers.slice().reverse()){\n                const result = await handler(req.clone());\n                if (result) {\n                    return result;\n                }\n            }\n            if (this.options.fetchLoopback) {\n                return fetch(req.clone());\n            }\n            return undefined;\n        });\n    }\n}\nasync function applyNextFixture(use, { testInfo, nextOptions, nextWorker, page }) {\n    const fixture = new NextFixtureImpl(testInfo, nextOptions, nextWorker, page);\n    await fixture.setup();\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- not React.use()\n    await use(fixture);\n    fixture.teardown();\n}\n\n//# sourceMappingURL=next-fixture.js.map"
        }
    ]
}
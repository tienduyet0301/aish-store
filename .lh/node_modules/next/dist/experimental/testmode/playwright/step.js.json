{
    "sourceFile": "node_modules/next/dist/experimental/testmode/playwright/step.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892854950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"step\", {\n    enumerable: true,\n    get: function() {\n        return step;\n    }\n});\nconst _test = require(\"@playwright/test\");\nfunction isWithRunAsStep(testInfo) {\n    return '_runAsStep' in testInfo;\n}\nasync function step(testInfo, props, handler) {\n    if (isWithRunAsStep(testInfo)) {\n        return testInfo._runAsStep(props, ({ complete })=>handler(complete));\n    }\n    // Fallback to the `test.step()`.\n    let result;\n    let reportedError;\n    try {\n        await _test.test.step(props.title, async ()=>{\n            result = await handler(({ error })=>{\n                reportedError = error;\n                if (reportedError) {\n                    throw reportedError;\n                }\n            });\n        });\n    } catch (error) {\n        if (error !== reportedError) {\n            throw error;\n        }\n    }\n    return result;\n}\n\n//# sourceMappingURL=step.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/experimental/testmode/playwright/next-worker-fixture.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892854733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"applyNextWorkerFixture\", {\n    enumerable: true,\n    get: function() {\n        return applyNextWorkerFixture;\n    }\n});\nconst _proxy = require(\"../proxy\");\nclass NextWorkerFixtureImpl {\n    async setup() {\n        const server = await (0, _proxy.createProxyServer)({\n            onFetch: this.handleProxyFetch.bind(this)\n        });\n        this.proxyPort = server.port;\n        this.proxyServer = server;\n    }\n    teardown() {\n        if (this.proxyServer) {\n            this.proxyServer.close();\n            this.proxyServer = null;\n        }\n    }\n    cleanupTest(testId) {\n        this.proxyFetchMap.delete(testId);\n    }\n    onFetch(testId, handler) {\n        this.proxyFetchMap.set(testId, handler);\n    }\n    async handleProxyFetch(testId, request) {\n        const handler = this.proxyFetchMap.get(testId);\n        return handler == null ? void 0 : handler(request);\n    }\n    constructor(){\n        this.proxyPort = 0;\n        this.proxyServer = null;\n        this.proxyFetchMap = new Map();\n    }\n}\nasync function applyNextWorkerFixture(use) {\n    const fixture = new NextWorkerFixtureImpl();\n    await fixture.setup();\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- not React.use()\n    await use(fixture);\n    fixture.teardown();\n}\n\n//# sourceMappingURL=next-worker-fixture.js.map"
        }
    ]
}
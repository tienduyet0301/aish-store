{
    "sourceFile": "node_modules/next/dist/experimental/testmode/proxy/types.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892855178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export interface ProxyServer {\n    readonly port: number;\n    fetchWith(input: string | URL, init?: RequestInit, testData?: string): Promise<Response>;\n    close(): void;\n}\ninterface ProxyRequestBase {\n    testData: string;\n    api: string;\n}\ninterface ProxyResponseBase {\n    api: string;\n}\nexport interface ProxyUnhandledResponse extends ProxyResponseBase {\n    api: 'unhandled';\n}\nexport interface ProxyAbortResponse extends ProxyResponseBase {\n    api: 'abort';\n}\nexport interface ProxyContinueResponse extends ProxyResponseBase {\n    api: 'continue';\n}\nexport interface ProxyFetchRequest extends ProxyRequestBase {\n    api: 'fetch';\n    request: {\n        url: string;\n        headers: Array<[string, string]>;\n        body: string | null;\n    } & Omit<RequestInit, 'headers' | 'body'>;\n}\nexport interface ProxyFetchResponse extends ProxyResponseBase {\n    api: 'fetch';\n    response: {\n        status: number;\n        headers: Array<[string, string]>;\n        body: string | null;\n    };\n}\nexport type ProxyRequest = ProxyFetchRequest;\nexport type ProxyResponse = ProxyUnhandledResponse | ProxyAbortResponse | ProxyContinueResponse | ProxyFetchResponse;\nexport declare const ABORT: ProxyResponse;\nexport declare const CONTINUE: ProxyResponse;\nexport declare const UNHANDLED: ProxyResponse;\nexport {};\n"
        }
    ]
}
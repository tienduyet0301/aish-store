{
    "sourceFile": "node_modules/next/dist/lib/memory/startup.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892860650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"enableMemoryDebuggingMode\", {\n    enumerable: true,\n    get: function() {\n        return enableMemoryDebuggingMode;\n    }\n});\nconst _v8 = /*#__PURE__*/ _interop_require_default(require(\"v8\"));\nconst _log = require(\"../../build/output/log\");\nconst _picocolors = require(\"../picocolors\");\nconst _gcobserver = require(\"./gc-observer\");\nconst _trace = require(\"./trace\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction enableMemoryDebuggingMode() {\n    // This will generate a heap snapshot when the program is close to the\n    // memory limit. It does not give any warning to the user though which\n    // can be jarring. If memory is large, this may take a long time.\n    if ('setHeapSnapshotNearHeapLimit' in _v8.default) {\n        _v8.default.setHeapSnapshotNearHeapLimit(1);\n    }\n    // This flag will kill the process when it starts to GC thrash when it's\n    // close to the memory limit rather than continuing to try to collect\n    // memory ineffectively.\n    _v8.default.setFlagsFromString('--detect-ineffective-gcs-near-heap-limit');\n    // This allows users to generate a heap snapshot on demand just by sending\n    // a signal to the process.\n    process.on('SIGUSR2', ()=>{\n        (0, _log.warn)(`Received SIGUSR2 signal. Generating heap snapshot. ${(0, _picocolors.italic)('Note: this will take some time.')}`);\n        _v8.default.writeHeapSnapshot();\n    });\n    (0, _gcobserver.startObservingGc)();\n    (0, _trace.startPeriodicMemoryUsageTracing)();\n    (0, _log.warn)(`Memory debugging mode is enabled. ${(0, _picocolors.italic)('Note: This will affect performance.')}`);\n    (0, _log.info)(' - Heap snapshots will be automatically generated when the process reaches more than 70% of the memory limit and again when the process is just about to run out of memory.');\n    (0, _log.info)(` - To manually generate a heap snapshot, send the process a SIGUSR2 signal: \\`kill -SIGUSR2 ${process.pid}\\``);\n    (0, _log.info)(' - Heap snapshots when there is high memory will take a very long time to complete and may be difficult to analyze in tools.');\n    (0, _log.info)(' - See https://nextjs.org/docs/app/building-your-application/optimizing/memory-usage for more information.');\n}\n\n//# sourceMappingURL=startup.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/lib/has-necessary-dependencies.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892859122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"hasNecessaryDependencies\", {\n    enumerable: true,\n    get: function() {\n        return hasNecessaryDependencies;\n    }\n});\nconst _fs = require(\"fs\");\nconst _resolvefrom = require(\"./resolve-from\");\nconst _path = require(\"path\");\nasync function hasNecessaryDependencies(baseDir, requiredPackages) {\n    let resolutions = new Map();\n    const missingPackages = [];\n    await Promise.all(requiredPackages.map(async (p)=>{\n        try {\n            const pkgPath = await _fs.promises.realpath((0, _resolvefrom.resolveFrom)(baseDir, `${p.pkg}/package.json`));\n            const pkgDir = (0, _path.dirname)(pkgPath);\n            if (p.exportsRestrict) {\n                const fileNameToVerify = (0, _path.relative)(p.pkg, p.file);\n                if (fileNameToVerify) {\n                    const fileToVerify = (0, _path.join)(pkgDir, fileNameToVerify);\n                    if ((0, _fs.existsSync)(fileToVerify)) {\n                        resolutions.set(p.pkg, fileToVerify);\n                    } else {\n                        return missingPackages.push(p);\n                    }\n                } else {\n                    resolutions.set(p.pkg, pkgPath);\n                }\n            } else {\n                resolutions.set(p.pkg, (0, _resolvefrom.resolveFrom)(baseDir, p.file));\n            }\n        } catch (_) {\n            return missingPackages.push(p);\n        }\n    }));\n    return {\n        resolved: resolutions,\n        missing: missingPackages\n    };\n}\n\n//# sourceMappingURL=has-necessary-dependencies.js.map"
        }
    ]
}
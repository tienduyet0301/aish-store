{
    "sourceFile": "node_modules/next/dist/lib/worker.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892865528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Worker as JestWorker } from 'next/dist/compiled/jest-worker';\ntype FarmOptions = ConstructorParameters<typeof JestWorker>[1];\nexport declare class Worker {\n    private _worker;\n    constructor(workerPath: string, options: FarmOptions & {\n        timeout?: number;\n        onActivity?: () => void;\n        onActivityAbort?: () => void;\n        onRestart?: (method: string, args: any[], attempts: number) => void;\n        logger?: Pick<typeof console, 'error' | 'info' | 'warn'>;\n        exposedMethods: ReadonlyArray<string>;\n        enableWorkerThreads?: boolean;\n    });\n    end(): ReturnType<JestWorker['end']>;\n    /**\n     * Quietly end the worker if it exists\n     */\n    close(): void;\n}\nexport {};\n"
        }
    ]
}
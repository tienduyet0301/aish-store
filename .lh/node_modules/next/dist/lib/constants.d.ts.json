{
    "sourceFile": "node_modules/next/dist/lib/constants.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892856892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { ServerRuntime } from '../types';\nexport declare const NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nexport declare const NEXT_INTERCEPTION_MARKER_PREFIX = \"nxtI\";\nexport declare const MATCHED_PATH_HEADER = \"x-matched-path\";\nexport declare const PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nexport declare const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nexport declare const RSC_PREFETCH_SUFFIX = \".prefetch.rsc\";\nexport declare const RSC_SEGMENTS_DIR_SUFFIX = \".segments\";\nexport declare const RSC_SEGMENT_SUFFIX = \".segment.rsc\";\nexport declare const RSC_SUFFIX = \".rsc\";\nexport declare const ACTION_SUFFIX = \".action\";\nexport declare const NEXT_DATA_SUFFIX = \".json\";\nexport declare const NEXT_META_SUFFIX = \".meta\";\nexport declare const NEXT_BODY_SUFFIX = \".body\";\nexport declare const NEXT_CACHE_TAGS_HEADER = \"x-next-cache-tags\";\nexport declare const NEXT_CACHE_REVALIDATED_TAGS_HEADER = \"x-next-revalidated-tags\";\nexport declare const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = \"x-next-revalidate-tag-token\";\nexport declare const NEXT_RESUME_HEADER = \"next-resume\";\nexport declare const NEXT_CACHE_TAG_MAX_ITEMS = 128;\nexport declare const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport declare const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport declare const NEXT_CACHE_IMPLICIT_TAG_ID = \"_N_T_\";\nexport declare const CACHE_ONE_YEAR = 31536000;\nexport declare const INFINITE_CACHE = 4294967294;\nexport declare const MIDDLEWARE_FILENAME = \"middleware\";\nexport declare const MIDDLEWARE_LOCATION_REGEXP = \"(?:src/)?middleware\";\nexport declare const INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\nexport declare const PAGES_DIR_ALIAS = \"private-next-pages\";\nexport declare const DOT_NEXT_ALIAS = \"private-dot-next\";\nexport declare const ROOT_DIR_ALIAS = \"private-next-root-dir\";\nexport declare const APP_DIR_ALIAS = \"private-next-app-dir\";\nexport declare const RSC_MOD_REF_PROXY_ALIAS = \"private-next-rsc-mod-ref-proxy\";\nexport declare const RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nexport declare const RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-server-reference\";\nexport declare const RSC_CACHE_WRAPPER_ALIAS = \"private-next-rsc-cache-wrapper\";\nexport declare const RSC_ACTION_ENCRYPTION_ALIAS = \"private-next-rsc-action-encryption\";\nexport declare const RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nexport declare const PUBLIC_DIR_MIDDLEWARE_CONFLICT = \"You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict\";\nexport declare const SSG_GET_INITIAL_PROPS_CONFLICT = \"You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps\";\nexport declare const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = \"You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.\";\nexport declare const SERVER_PROPS_SSG_CONFLICT = \"You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps\";\nexport declare const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = \"can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props\";\nexport declare const SERVER_PROPS_EXPORT_ERROR = \"pages with `getServerSideProps` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export\";\nexport declare const GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nexport declare const GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nexport declare const UNSTABLE_REVALIDATE_RENAME_ERROR: string;\nexport declare const GSSP_COMPONENT_MEMBER_ERROR = \"can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member\";\nexport declare const NON_STANDARD_NODE_ENV = \"You are using a non-standard \\\"NODE_ENV\\\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env\";\nexport declare const SSG_FALLBACK_EXPORT_ERROR = \"Pages with `fallback` enabled in `getStaticPaths` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export\";\nexport declare const ESLINT_DEFAULT_DIRS: string[];\nexport declare const SERVER_RUNTIME: Record<string, ServerRuntime>;\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\ndeclare const WEBPACK_LAYERS_NAMES: {\n    /**\n     * The layer for the shared code between the client and server bundles.\n     */\n    readonly shared: \"shared\";\n    /**\n     * The layer for server-only runtime and picking up `react-server` export conditions.\n     * Including app router RSC pages and app router custom routes and metadata routes.\n     */\n    readonly reactServerComponents: \"rsc\";\n    /**\n     * Server Side Rendering layer for app (ssr).\n     */\n    readonly serverSideRendering: \"ssr\";\n    /**\n     * The browser client bundle layer for actions.\n     */\n    readonly actionBrowser: \"action-browser\";\n    /**\n     * The Node.js bundle layer for the API routes.\n     */\n    readonly apiNode: \"api-node\";\n    /**\n     * The Edge Lite bundle layer for the API routes.\n     */\n    readonly apiEdge: \"api-edge\";\n    /**\n     * The layer for the middleware code.\n     */\n    readonly middleware: \"middleware\";\n    /**\n     * The layer for the instrumentation hooks.\n     */\n    readonly instrument: \"instrument\";\n    /**\n     * The layer for assets on the edge.\n     */\n    readonly edgeAsset: \"edge-asset\";\n    /**\n     * The browser client bundle layer for App directory.\n     */\n    readonly appPagesBrowser: \"app-pages-browser\";\n    /**\n     * The browser client bundle layer for Pages directory.\n     */\n    readonly pagesDirBrowser: \"pages-dir-browser\";\n    /**\n     * The Edge Lite bundle layer for Pages directory.\n     */\n    readonly pagesDirEdge: \"pages-dir-edge\";\n    /**\n     * The Node.js bundle layer for Pages directory.\n     */\n    readonly pagesDirNode: \"pages-dir-node\";\n};\nexport type WebpackLayerName = (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES];\ndeclare const WEBPACK_LAYERS: {\n    GROUP: {\n        builtinReact: (\"rsc\" | \"action-browser\")[];\n        serverOnly: (\"middleware\" | \"rsc\" | \"action-browser\" | \"instrument\")[];\n        neutralTarget: (\"api-node\" | \"api-edge\")[];\n        clientOnly: (\"ssr\" | \"app-pages-browser\")[];\n        bundled: (\"shared\" | \"middleware\" | \"rsc\" | \"ssr\" | \"action-browser\" | \"instrument\" | \"app-pages-browser\")[];\n        appPages: (\"rsc\" | \"ssr\" | \"action-browser\" | \"app-pages-browser\")[];\n    };\n    shared: \"shared\";\n    reactServerComponents: \"rsc\";\n    serverSideRendering: \"ssr\";\n    actionBrowser: \"action-browser\";\n    apiNode: \"api-node\";\n    apiEdge: \"api-edge\";\n    middleware: \"middleware\";\n    instrument: \"instrument\";\n    edgeAsset: \"edge-asset\";\n    appPagesBrowser: \"app-pages-browser\";\n    pagesDirBrowser: \"pages-dir-browser\";\n    pagesDirEdge: \"pages-dir-edge\";\n    pagesDirNode: \"pages-dir-node\";\n};\ndeclare const WEBPACK_RESOURCE_QUERIES: {\n    edgeSSREntry: string;\n    metadata: string;\n    metadataRoute: string;\n    metadataImageMeta: string;\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n"
        }
    ]
}
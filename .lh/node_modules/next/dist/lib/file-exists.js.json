{
    "sourceFile": "node_modules/next/dist/lib/file-exists.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892858023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    FileType: null,\n    fileExists: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    FileType: function() {\n        return FileType;\n    },\n    fileExists: function() {\n        return fileExists;\n    }\n});\nconst _fs = require(\"fs\");\nconst _iserror = /*#__PURE__*/ _interop_require_default(require(\"./is-error\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nvar FileType = /*#__PURE__*/ function(FileType) {\n    FileType[\"File\"] = \"file\";\n    FileType[\"Directory\"] = \"directory\";\n    return FileType;\n}({});\nasync function fileExists(fileName, type) {\n    try {\n        if (type === \"file\") {\n            const stats = await _fs.promises.stat(fileName);\n            return stats.isFile();\n        } else if (type === \"directory\") {\n            const stats = await _fs.promises.stat(fileName);\n            return stats.isDirectory();\n        }\n        return (0, _fs.existsSync)(fileName);\n    } catch (err) {\n        if ((0, _iserror.default)(err) && (err.code === 'ENOENT' || err.code === 'ENAMETOOLONG')) {\n            return false;\n        }\n        throw err;\n    }\n}\n\n//# sourceMappingURL=file-exists.js.map"
        }
    ]
}
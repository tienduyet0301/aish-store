{
    "sourceFile": "node_modules/next/dist/lib/metadata/resolvers/resolve-url.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892862096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { MetadataContext } from '../types/resolvers';\ndeclare function isStringOrURL(icon: any): icon is string | URL;\n/**\n * Given an optional user-provided metadataBase, this determines what the metadataBase should\n * fallback to. Specifically:\n * - In dev, it should always be localhost\n * - In Vercel preview builds, it should be the preview build ID\n * - In start, it should be the user-provided metadataBase value. Otherwise,\n * it'll fall back to the Vercel production deployment, and localhost as a last resort.\n */\nexport declare function getSocialImageMetadataBaseFallback(metadataBase: URL | null): URL;\ndeclare function resolveUrl(url: null | undefined, metadataBase: URL | null): null;\ndeclare function resolveUrl(url: string | URL, metadataBase: URL | null): URL;\ndeclare function resolveUrl(url: string | URL | null | undefined, metadataBase: URL | null): URL | null;\ndeclare function resolveRelativeUrl(url: string | URL, pathname: string): string | URL;\ndeclare function resolveAbsoluteUrlWithPathname(url: string | URL, metadataBase: URL | null, { trailingSlash, pathname }: MetadataContext): string;\nexport { isStringOrURL, resolveUrl, resolveRelativeUrl, resolveAbsoluteUrlWithPathname, };\n"
        }
    ]
}
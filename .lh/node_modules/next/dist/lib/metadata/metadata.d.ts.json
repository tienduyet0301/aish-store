{
    "sourceFile": "node_modules/next/dist/lib/metadata/metadata.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892861656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React from 'react';\nimport type { GetDynamicParamFromSegment } from '../../server/app-render/app-render';\nimport type { LoaderTree } from '../../server/lib/app-dir-module';\nimport type { SearchParams } from '../../server/request/search-params';\nimport { type MetadataErrorType } from './resolve-metadata';\nimport type { MetadataContext } from './types/resolvers';\nimport type { WorkStore } from '../../server/app-render/work-async-storage.external';\nexport declare function createMetadataComponents({ tree, parsedQuery, metadataContext, getDynamicParamFromSegment, appUsingSizeAdjustment, errorType, workStore, MetadataBoundary, ViewportBoundary, serveStreamingMetadata, }: {\n    tree: LoaderTree;\n    parsedQuery: SearchParams;\n    metadataContext: MetadataContext;\n    getDynamicParamFromSegment: GetDynamicParamFromSegment;\n    appUsingSizeAdjustment: boolean;\n    errorType?: MetadataErrorType | 'redirect';\n    workStore: WorkStore;\n    MetadataBoundary: (props: {\n        children: React.ReactNode;\n    }) => React.ReactNode;\n    ViewportBoundary: (props: {\n        children: React.ReactNode;\n    }) => React.ReactNode;\n    serveStreamingMetadata: boolean;\n}): {\n    MetadataTree: React.ComponentType;\n    ViewportTree: React.ComponentType;\n    getMetadataReady: () => Promise<void>;\n    getViewportReady: () => Promise<void>;\n    StreamingMetadataOutlet: React.ComponentType;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/lib/eslint/writeDefaultConfig.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892857744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"writeDefaultConfig\", {\n    enumerable: true,\n    get: function() {\n        return writeDefaultConfig;\n    }\n});\nconst _fs = require(\"fs\");\nconst _picocolors = require(\"../picocolors\");\nconst _os = /*#__PURE__*/ _interop_require_default(require(\"os\"));\nconst _path = /*#__PURE__*/ _interop_require_default(require(\"path\"));\nconst _commentjson = /*#__PURE__*/ _interop_require_wildcard(require(\"next/dist/compiled/comment-json\"));\nconst _log = /*#__PURE__*/ _interop_require_wildcard(require(\"../../build/output/log\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {\n        __proto__: null\n    };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function writeDefaultConfig(baseDir, { exists, emptyEslintrc, emptyPkgJsonConfig }, selectedConfig, eslintrcFile, pkgJsonPath, packageJsonConfig) {\n    if (!exists && emptyEslintrc && eslintrcFile) {\n        const ext = _path.default.extname(eslintrcFile);\n        let newFileContent;\n        if (ext === '.yaml' || ext === '.yml') {\n            newFileContent = \"extends: 'next'\";\n        } else {\n            newFileContent = _commentjson.stringify(selectedConfig, null, 2);\n            if (ext === '.js') {\n                newFileContent = 'module.exports = ' + newFileContent;\n            }\n        }\n        await _fs.promises.writeFile(eslintrcFile, newFileContent + _os.default.EOL);\n        _log.info(`We detected an empty ESLint configuration file (${(0, _picocolors.bold)(_path.default.basename(eslintrcFile))}) and updated it for you!`);\n    } else if (!exists && emptyPkgJsonConfig && packageJsonConfig) {\n        packageJsonConfig.eslintConfig = selectedConfig;\n        if (pkgJsonPath) await _fs.promises.writeFile(pkgJsonPath, _commentjson.stringify(packageJsonConfig, null, 2) + _os.default.EOL);\n        _log.info(`We detected an empty ${(0, _picocolors.bold)('eslintConfig')} field in package.json and updated it for you!`);\n    } else if (!exists) {\n        await _fs.promises.writeFile(_path.default.join(baseDir, '.eslintrc.json'), _commentjson.stringify(selectedConfig, null, 2) + _os.default.EOL);\n        console.log((0, _picocolors.green)(`We created the ${(0, _picocolors.bold)('.eslintrc.json')} file for you and included your selected configuration.`));\n    }\n}\n\n//# sourceMappingURL=writeDefaultConfig.js.map"
        }
    ]
}
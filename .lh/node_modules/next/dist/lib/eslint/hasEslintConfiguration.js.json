{
    "sourceFile": "node_modules/next/dist/lib/eslint/hasEslintConfiguration.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892857587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"hasEslintConfiguration\", {\n    enumerable: true,\n    get: function() {\n        return hasEslintConfiguration;\n    }\n});\nconst _fs = require(\"fs\");\nasync function hasEslintConfiguration(eslintrcFile, packageJsonConfig) {\n    const configObject = {\n        exists: false,\n        emptyEslintrc: false,\n        emptyPkgJsonConfig: false\n    };\n    if (eslintrcFile) {\n        const content = await _fs.promises.readFile(eslintrcFile, {\n            encoding: 'utf8'\n        }).then((txt)=>txt.trim().replace(/\\n/g, ''), ()=>null);\n        if (content === '' || content === '{}' || content === '---' || content === 'module.exports = {}') {\n            configObject.emptyEslintrc = true;\n        } else {\n            configObject.exists = true;\n        }\n    } else if (packageJsonConfig == null ? void 0 : packageJsonConfig.eslintConfig) {\n        if (Object.keys(packageJsonConfig.eslintConfig).length) {\n            configObject.exists = true;\n        } else {\n            configObject.emptyPkgJsonConfig = true;\n        }\n    }\n    return configObject;\n}\n\n//# sourceMappingURL=hasEslintConfiguration.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/lib/helpers/get-registry.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892859488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getRegistry\", {\n    enumerable: true,\n    get: function() {\n        return getRegistry;\n    }\n});\nconst _child_process = require(\"child_process\");\nconst _getpkgmanager = require(\"./get-pkg-manager\");\nconst _utils = require(\"../../server/lib/utils\");\nfunction getRegistry(baseDir = process.cwd()) {\n    const pkgManager = (0, _getpkgmanager.getPkgManager)(baseDir);\n    // Since `npm config` command fails in npm workspace to prevent workspace config conflicts,\n    // add `--no-workspaces` flag to run under the context of the root project only.\n    // Safe for non-workspace projects as it's equivalent to default `--workspaces=false`.\n    // x-ref: https://github.com/vercel/next.js/issues/47121#issuecomment-1499044345\n    // x-ref: https://github.com/npm/statusboard/issues/371#issue-920669998\n    const resolvedFlags = pkgManager === 'npm' ? '--no-workspaces' : '';\n    let registry = `https://registry.npmjs.org/`;\n    try {\n        const output = (0, _child_process.execSync)(`${pkgManager} config get registry ${resolvedFlags}`, {\n            env: {\n                ...process.env,\n                NODE_OPTIONS: (0, _utils.getFormattedNodeOptionsWithoutInspect)()\n            }\n        }).toString().trim();\n        if (output.startsWith('http')) {\n            registry = output.endsWith('/') ? output : `${output}/`;\n        }\n    } catch (err) {\n        throw Object.defineProperty(new Error(`Failed to get registry from \"${pkgManager}\".`, {\n            cause: err\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E508\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return registry;\n}\n\n//# sourceMappingURL=get-registry.js.map"
        }
    ]
}
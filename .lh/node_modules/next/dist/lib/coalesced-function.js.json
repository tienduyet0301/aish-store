{
    "sourceFile": "node_modules/next/dist/lib/coalesced-function.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892856770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"withCoalescedInvoke\", {\n    enumerable: true,\n    get: function() {\n        return withCoalescedInvoke;\n    }\n});\nconst globalInvokeCache = new Map();\nfunction withCoalescedInvoke(func) {\n    return async function(key, args) {\n        const entry = globalInvokeCache.get(key);\n        if (entry) {\n            return entry.then((res)=>({\n                    isOrigin: false,\n                    value: res.value\n                }));\n        }\n        async function __wrapper() {\n            return await func.apply(undefined, args);\n        }\n        const future = __wrapper().then((res)=>{\n            globalInvokeCache.delete(key);\n            return {\n                isOrigin: true,\n                value: res\n            };\n        }).catch((err)=>{\n            globalInvokeCache.delete(key);\n            return Promise.reject(err);\n        });\n        globalInvokeCache.set(key, future);\n        return future;\n    };\n}\n\n//# sourceMappingURL=coalesced-function.js.map"
        }
    ]
}
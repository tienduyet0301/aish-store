{
    "sourceFile": "node_modules/next/dist/telemetry/project-id.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892911334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getRawProjectId\", {\n    enumerable: true,\n    get: function() {\n        return getRawProjectId;\n    }\n});\nconst _child_process = require(\"child_process\");\n// Q: Why does Next.js need a project ID? Why is it looking at my git remote?\n// A:\n// Next.js' telemetry is and always will be completely anonymous. Because of\n// this, we need a way to differentiate different projects to track feature\n// usage accurately. For example, to prevent a feature from appearing to be\n// constantly `used` and then `unused` when switching between local projects.\n// To reiterate,\n// we **never** can read your actual git remote. The value is hashed one-way\n// with random salt data, making it impossible for us to reverse or try to\n// guess the remote by re-computing hashes.\nasync function _getProjectIdByGit() {\n    try {\n        let resolve, reject;\n        const promise = new Promise((res, rej)=>{\n            resolve = res;\n            reject = rej;\n        });\n        (0, _child_process.exec)(`git config --local --get remote.origin.url`, {\n            timeout: 1000,\n            windowsHide: true\n        }, (error, stdout)=>{\n            if (error) {\n                reject(error);\n                return;\n            }\n            resolve(stdout);\n        });\n        return String(await promise).trim();\n    } catch (_) {\n        return null;\n    }\n}\nasync function getRawProjectId() {\n    return await _getProjectIdByGit() || process.env.REPOSITORY_URL || process.cwd();\n}\n\n//# sourceMappingURL=project-id.js.map"
        }
    ]
}
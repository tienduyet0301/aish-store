{
    "sourceFile": "node_modules/next/dist/telemetry/post-telemetry-payload.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892911212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"postNextTelemetryPayload\", {\n    enumerable: true,\n    get: function() {\n        return postNextTelemetryPayload;\n    }\n});\nconst _asyncretry = /*#__PURE__*/ _interop_require_default(require(\"next/dist/compiled/async-retry\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction postNextTelemetryPayload(payload, signal) {\n    if (!signal && 'timeout' in AbortSignal) {\n        signal = AbortSignal.timeout(5000);\n    }\n    return (0, _asyncretry.default)(()=>fetch('https://telemetry.nextjs.org/api/v1/record', {\n            method: 'POST',\n            body: JSON.stringify(payload),\n            headers: {\n                'content-type': 'application/json'\n            },\n            signal\n        }).then((res)=>{\n            if (!res.ok) {\n                const err = Object.defineProperty(new Error(res.statusText), \"__NEXT_ERROR_CODE\", {\n                    value: \"E394\",\n                    enumerable: false,\n                    configurable: true\n                });\n                err.response = res;\n                throw err;\n            }\n        }), {\n        minTimeout: 500,\n        retries: 1,\n        factor: 1\n    }).catch(()=>{\n    // We swallow errors when telemetry cannot be sent\n    })// Ensure promise is voided\n    .then(()=>{}, ()=>{});\n}\n\n//# sourceMappingURL=post-telemetry-payload.js.map"
        }
    ]
}
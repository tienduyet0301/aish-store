{
    "sourceFile": "node_modules/next/dist/telemetry/events/build.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892910562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { TelemetryPlugin } from '../../build/webpack/plugins/telemetry-plugin/telemetry-plugin';\nimport type { SWC_TARGET_TRIPLE } from '../../build/webpack/plugins/telemetry-plugin/telemetry-plugin';\nimport type { UseCacheTrackerKey } from '../../build/webpack/plugins/telemetry-plugin/use-cache-tracker-utils';\ntype EventTypeCheckCompleted = {\n    durationInSeconds: number;\n    typescriptVersion: string | null;\n    inputFilesCount?: number;\n    totalFilesCount?: number;\n    incremental?: boolean;\n};\nexport declare function eventTypeCheckCompleted(event: EventTypeCheckCompleted): {\n    eventName: string;\n    payload: EventTypeCheckCompleted;\n};\nexport type EventLintCheckCompleted = {\n    durationInSeconds: number;\n    eslintVersion: string | null;\n    lintedFilesCount?: number;\n    lintFix?: boolean;\n    buildLint?: boolean;\n    nextEslintPluginVersion?: string | null;\n    nextEslintPluginErrorsCount?: number;\n    nextEslintPluginWarningsCount?: number;\n    nextRulesEnabled: {\n        [ruleName: `@next/next/${string}`]: 'off' | 'warn' | 'error';\n    };\n};\nexport declare function eventLintCheckCompleted(event: EventLintCheckCompleted): {\n    eventName: string;\n    payload: EventLintCheckCompleted;\n};\ntype EventBuildCompleted = {\n    bundler: 'webpack' | 'rspack' | 'turbopack';\n    durationInSeconds: number;\n    totalPageCount: number;\n    hasDunderPages: boolean;\n    hasTestPages: boolean;\n    totalAppPagesCount?: number;\n};\nexport declare function eventBuildCompleted(pagePaths: string[], event: Omit<EventBuildCompleted, 'totalPageCount' | 'hasDunderPages' | 'hasTestPages'>): {\n    eventName: string;\n    payload: EventBuildCompleted;\n};\ntype EventBuildFailed = {\n    bundler: 'webpack' | 'rspack' | 'turbopack';\n    errorCode: string;\n    durationInSeconds: number;\n};\nexport declare function eventBuildFailed(event: EventBuildFailed): {\n    eventName: string;\n    payload: EventBuildFailed;\n};\ntype EventBuildOptimized = {\n    durationInSeconds: number;\n    totalPageCount: number;\n    staticPageCount: number;\n    staticPropsPageCount: number;\n    serverPropsPageCount: number;\n    ssrPageCount: number;\n    hasDunderPages: boolean;\n    hasTestPages: boolean;\n    hasStatic404: boolean;\n    hasReportWebVitals: boolean;\n    headersCount: number;\n    rewritesCount: number;\n    redirectsCount: number;\n    headersWithHasCount: number;\n    rewritesWithHasCount: number;\n    redirectsWithHasCount: number;\n    middlewareCount: number;\n    isRspack: boolean;\n    totalAppPagesCount?: number;\n    staticAppPagesCount?: number;\n    serverAppPagesCount?: number;\n    edgeRuntimeAppCount?: number;\n    edgeRuntimePagesCount?: number;\n};\nexport declare function eventBuildOptimize(pagePaths: string[], event: Omit<EventBuildOptimized, 'totalPageCount' | 'hasDunderPages' | 'hasTestPages' | 'isRspack'>): {\n    eventName: string;\n    payload: EventBuildOptimized;\n};\nexport declare const EVENT_BUILD_FEATURE_USAGE = \"NEXT_BUILD_FEATURE_USAGE\";\nexport type EventBuildFeatureUsage = {\n    featureName: 'next/image' | 'next/legacy/image' | 'next/future/image' | 'next/script' | 'next/dynamic' | '@next/font/google' | '@next/font/local' | 'next/font/google' | 'next/font/local' | 'experimental/nextScriptWorkers' | 'experimental/dynamicIO' | 'experimental/optimizeCss' | 'experimental/ppr' | 'swcLoader' | 'swcRelay' | 'swcStyledComponents' | 'swcReactRemoveProperties' | 'swcExperimentalDecorators' | 'swcRemoveConsole' | 'swcImportSource' | 'swcEmotion' | `swc/target/${SWC_TARGET_TRIPLE}` | 'turbotrace' | 'build-lint' | 'vercelImageGeneration' | 'transpilePackages' | 'skipMiddlewareUrlNormalize' | 'skipTrailingSlashRedirect' | 'modularizeImports' | 'esmExternals' | 'webpackPlugins' | UseCacheTrackerKey | 'turbopackPersistentCaching';\n    invocationCount: number;\n};\nexport declare function eventBuildFeatureUsage(usages: ReturnType<TelemetryPlugin['usages']>): Array<{\n    eventName: string;\n    payload: EventBuildFeatureUsage;\n}>;\nexport declare const EVENT_NAME_PACKAGE_USED_IN_GET_SERVER_SIDE_PROPS = \"NEXT_PACKAGE_USED_IN_GET_SERVER_SIDE_PROPS\";\nexport type EventPackageUsedInGetServerSideProps = {\n    package: string;\n};\nexport declare function eventPackageUsedInGetServerSideProps(packagesUsedInServerSideProps: ReturnType<TelemetryPlugin['packagesUsedInServerSideProps']>): Array<{\n    eventName: string;\n    payload: EventPackageUsedInGetServerSideProps;\n}>;\nexport declare const ERROR_THROWN_EVENT = \"NEXT_ERROR_THROWN\";\ntype ErrorThrownEvent = {\n    eventName: typeof ERROR_THROWN_EVENT;\n    payload: {\n        errorCode: string | undefined;\n    };\n};\nexport declare function eventErrorThrown(error: Error): ErrorThrownEvent;\nexport {};\n"
        }
    ]
}
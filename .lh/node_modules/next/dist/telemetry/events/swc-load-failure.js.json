{
    "sourceFile": "node_modules/next/dist/telemetry/events/swc-load-failure.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892910940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"eventSwcLoadFailure\", {\n    enumerable: true,\n    get: function() {\n        return eventSwcLoadFailure;\n    }\n});\nconst _shared = require(\"../../trace/shared\");\nconst _packagejson = require(\"next/package.json\");\nconst EVENT_PLUGIN_PRESENT = 'NEXT_SWC_LOAD_FAILURE';\nasync function eventSwcLoadFailure(event) {\n    const telemetry = _shared.traceGlobals.get('telemetry');\n    // can't continue if telemetry isn't set\n    if (!telemetry) return;\n    let glibcVersion;\n    let installedSwcPackages;\n    try {\n        var _process_report;\n        // @ts-ignore\n        glibcVersion = (_process_report = process.report) == null ? void 0 : _process_report.getReport().header.glibcVersionRuntime;\n    } catch  {}\n    try {\n        const pkgNames = Object.keys(_packagejson.optionalDependencies || {}).filter((pkg)=>pkg.startsWith('@next/swc'));\n        const installedPkgs = [];\n        for (const pkg of pkgNames){\n            try {\n                const { version } = require(`${pkg}/package.json`);\n                installedPkgs.push(`${pkg}@${version}`);\n            } catch  {}\n        }\n        if (installedPkgs.length > 0) {\n            installedSwcPackages = installedPkgs.sort().join(',');\n        }\n    } catch  {}\n    telemetry.record({\n        eventName: EVENT_PLUGIN_PRESENT,\n        payload: {\n            nextVersion: _packagejson.version,\n            glibcVersion,\n            installedSwcPackages,\n            arch: process.arch,\n            platform: process.platform,\n            nodeVersion: process.versions.node,\n            wasm: event == null ? void 0 : event.wasm,\n            nativeBindingsErrorCode: event == null ? void 0 : event.nativeBindingsErrorCode\n        }\n    });\n    // ensure this event is flushed before process exits\n    await telemetry.flush();\n}\n\n//# sourceMappingURL=swc-load-failure.js.map"
        }
    ]
}
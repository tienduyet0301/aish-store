{
    "sourceFile": "node_modules/next/dist/telemetry/events/build.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892910606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    ERROR_THROWN_EVENT: null,\n    EVENT_BUILD_FEATURE_USAGE: null,\n    EVENT_NAME_PACKAGE_USED_IN_GET_SERVER_SIDE_PROPS: null,\n    eventBuildCompleted: null,\n    eventBuildFailed: null,\n    eventBuildFeatureUsage: null,\n    eventBuildOptimize: null,\n    eventErrorThrown: null,\n    eventLintCheckCompleted: null,\n    eventPackageUsedInGetServerSideProps: null,\n    eventTypeCheckCompleted: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    ERROR_THROWN_EVENT: function() {\n        return ERROR_THROWN_EVENT;\n    },\n    EVENT_BUILD_FEATURE_USAGE: function() {\n        return EVENT_BUILD_FEATURE_USAGE;\n    },\n    EVENT_NAME_PACKAGE_USED_IN_GET_SERVER_SIDE_PROPS: function() {\n        return EVENT_NAME_PACKAGE_USED_IN_GET_SERVER_SIDE_PROPS;\n    },\n    eventBuildCompleted: function() {\n        return eventBuildCompleted;\n    },\n    eventBuildFailed: function() {\n        return eventBuildFailed;\n    },\n    eventBuildFeatureUsage: function() {\n        return eventBuildFeatureUsage;\n    },\n    eventBuildOptimize: function() {\n        return eventBuildOptimize;\n    },\n    eventErrorThrown: function() {\n        return eventErrorThrown;\n    },\n    eventLintCheckCompleted: function() {\n        return eventLintCheckCompleted;\n    },\n    eventPackageUsedInGetServerSideProps: function() {\n        return eventPackageUsedInGetServerSideProps;\n    },\n    eventTypeCheckCompleted: function() {\n        return eventTypeCheckCompleted;\n    }\n});\nconst _errortelemetryutils = require(\"../../lib/error-telemetry-utils\");\nconst REGEXP_DIRECTORY_DUNDER = /[\\\\/]__[^\\\\/]+(?<![\\\\/]__(?:tests|mocks))__[\\\\/]/i;\nconst REGEXP_DIRECTORY_TESTS = /[\\\\/]__(tests|mocks)__[\\\\/]/i;\nconst REGEXP_FILE_TEST = /\\.(?:spec|test)\\.[^.]+$/i;\nconst EVENT_TYPE_CHECK_COMPLETED = 'NEXT_TYPE_CHECK_COMPLETED';\nfunction eventTypeCheckCompleted(event) {\n    return {\n        eventName: EVENT_TYPE_CHECK_COMPLETED,\n        payload: event\n    };\n}\nconst EVENT_LINT_CHECK_COMPLETED = 'NEXT_LINT_CHECK_COMPLETED';\nfunction eventLintCheckCompleted(event) {\n    return {\n        eventName: EVENT_LINT_CHECK_COMPLETED,\n        payload: event\n    };\n}\nconst EVENT_BUILD_COMPLETED = 'NEXT_BUILD_COMPLETED';\nfunction eventBuildCompleted(pagePaths, event) {\n    return {\n        eventName: EVENT_BUILD_COMPLETED,\n        payload: {\n            ...event,\n            totalPageCount: pagePaths.length,\n            hasDunderPages: pagePaths.some((path)=>REGEXP_DIRECTORY_DUNDER.test(path)),\n            hasTestPages: pagePaths.some((path)=>REGEXP_DIRECTORY_TESTS.test(path) || REGEXP_FILE_TEST.test(path)),\n            totalAppPagesCount: event.totalAppPagesCount\n        }\n    };\n}\nconst EVENT_BUILD_FAILED = 'NEXT_BUILD_FAILED';\nfunction eventBuildFailed(event) {\n    return {\n        eventName: EVENT_BUILD_FAILED,\n        payload: event\n    };\n}\nconst EVENT_BUILD_OPTIMIZED = 'NEXT_BUILD_OPTIMIZED';\nfunction eventBuildOptimize(pagePaths, event) {\n    return {\n        eventName: EVENT_BUILD_OPTIMIZED,\n        payload: {\n            ...event,\n            totalPageCount: pagePaths.length,\n            hasDunderPages: pagePaths.some((path)=>REGEXP_DIRECTORY_DUNDER.test(path)),\n            hasTestPages: pagePaths.some((path)=>REGEXP_DIRECTORY_TESTS.test(path) || REGEXP_FILE_TEST.test(path)),\n            totalAppPagesCount: event.totalAppPagesCount,\n            staticAppPagesCount: event.staticAppPagesCount,\n            serverAppPagesCount: event.serverAppPagesCount,\n            edgeRuntimeAppCount: event.edgeRuntimeAppCount,\n            edgeRuntimePagesCount: event.edgeRuntimePagesCount,\n            isRspack: process.env.NEXT_RSPACK !== undefined\n        }\n    };\n}\nconst EVENT_BUILD_FEATURE_USAGE = 'NEXT_BUILD_FEATURE_USAGE';\nfunction eventBuildFeatureUsage(usages) {\n    return usages.map(({ featureName, invocationCount })=>({\n            eventName: EVENT_BUILD_FEATURE_USAGE,\n            payload: {\n                featureName,\n                invocationCount\n            }\n        }));\n}\nconst EVENT_NAME_PACKAGE_USED_IN_GET_SERVER_SIDE_PROPS = 'NEXT_PACKAGE_USED_IN_GET_SERVER_SIDE_PROPS';\nfunction eventPackageUsedInGetServerSideProps(packagesUsedInServerSideProps) {\n    return packagesUsedInServerSideProps.map((packageName)=>({\n            eventName: EVENT_NAME_PACKAGE_USED_IN_GET_SERVER_SIDE_PROPS,\n            payload: {\n                package: packageName\n            }\n        }));\n}\nconst ERROR_THROWN_EVENT = 'NEXT_ERROR_THROWN';\nfunction eventErrorThrown(error) {\n    return {\n        eventName: ERROR_THROWN_EVENT,\n        payload: {\n            errorCode: (0, _errortelemetryutils.extractNextErrorCode)(error) || 'Unknown'\n        }\n    };\n}\n\n//# sourceMappingURL=build.js.map"
        }
    ]
}
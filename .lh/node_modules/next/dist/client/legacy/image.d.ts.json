{
    "sourceFile": "node_modules/next/dist/client/legacy/image.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892696939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React, { type JSX } from 'react';\ndeclare const VALID_LOADING_VALUES: readonly [\"lazy\", \"eager\", undefined];\ntype LoadingValue = (typeof VALID_LOADING_VALUES)[number];\nexport type ImageLoader = (resolverProps: ImageLoaderProps) => string;\nexport type ImageLoaderProps = {\n    src: string;\n    width: number;\n    quality?: number;\n};\ndeclare const VALID_LAYOUT_VALUES: readonly [\"fill\", \"fixed\", \"intrinsic\", \"responsive\", undefined];\ntype LayoutValue = (typeof VALID_LAYOUT_VALUES)[number];\ntype PlaceholderValue = 'blur' | 'empty';\ntype OnLoadingComplete = (result: {\n    naturalWidth: number;\n    naturalHeight: number;\n}) => void;\ntype ImgElementStyle = NonNullable<JSX.IntrinsicElements['img']['style']>;\nexport interface StaticImageData {\n    src: string;\n    height: number;\n    width: number;\n    blurDataURL?: string;\n}\ninterface StaticRequire {\n    default: StaticImageData;\n}\ntype StaticImport = StaticRequire | StaticImageData;\ntype SafeNumber = number | `${number}`;\nexport type ImageProps = Omit<JSX.IntrinsicElements['img'], 'src' | 'srcSet' | 'ref' | 'width' | 'height' | 'loading'> & {\n    src: string | StaticImport;\n    width?: SafeNumber;\n    height?: SafeNumber;\n    layout?: LayoutValue;\n    loader?: ImageLoader;\n    quality?: SafeNumber;\n    priority?: boolean;\n    loading?: LoadingValue;\n    lazyRoot?: React.RefObject<HTMLElement | null> | null;\n    lazyBoundary?: string;\n    placeholder?: PlaceholderValue;\n    blurDataURL?: string;\n    unoptimized?: boolean;\n    objectFit?: ImgElementStyle['objectFit'];\n    objectPosition?: ImgElementStyle['objectPosition'];\n    onLoadingComplete?: OnLoadingComplete;\n};\nexport default function Image({ src, sizes, unoptimized, priority, loading, lazyRoot, lazyBoundary, className, quality, width, height, style, objectFit, objectPosition, onLoadingComplete, placeholder, blurDataURL, ...all }: ImageProps): import(\"react/jsx-runtime\").JSX.Element;\nexport {};\n"
        }
    ]
}
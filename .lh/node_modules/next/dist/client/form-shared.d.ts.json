{
    "sourceFile": "node_modules/next/dist/client/form-shared.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892696365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { HTMLProps } from 'react';\nexport declare const DISALLOWED_FORM_PROPS: readonly [\"method\", \"encType\", \"target\"];\ntype HTMLFormProps = HTMLProps<HTMLFormElement>;\ntype DisallowedFormProps = (typeof DISALLOWED_FORM_PROPS)[number];\ntype InternalFormProps = {\n    /**\n     * `action` can be either a `string` or a function.\n     * - If `action` is a string, it will be interpreted as a path or URL to navigate to when the form is submitted.\n     *   The path will be prefetched when the form becomes visible.\n     * - If `action` is a function, it will be called when the form is submitted. See the [React docs](https://react.dev/reference/react-dom/components/form#props) for more.\n     */\n    action: NonNullable<HTMLFormProps['action']>;\n    /**\n     * Controls how the route specified by `action` is prefetched.\n     * Any `<Form />` that is in the viewport (initially or through scroll) will be prefetched.\n     * Prefetch can be disabled by passing `prefetch={false}`. Prefetching is only enabled in production.\n     *\n     * Options:\n     * - `null` (default): For statically generated pages, this will prefetch the full React Server Component data. For dynamic pages, this will prefetch up to the nearest route segment with a [`loading.js`](https://nextjs.org/docs/app/api-reference/file-conventions/loading) file. If there is no loading file, it will not fetch the full tree to avoid fetching too much data.\n     * - `false`: This will not prefetch any data.\n     *\n     * In pages dir, prefetching is not supported, and passing this prop will emit a warning.\n     *\n     * @defaultValue `null`\n     */\n    prefetch?: false | null;\n    /**\n     * Whether submitting the form should replace the current `history` state instead of adding a new url into the stack.\n     * Only valid if `action` is a string.\n     *\n     * @defaultValue `false`\n     */\n    replace?: boolean;\n    /**\n     * Override the default scroll behavior when navigating.\n     * Only valid if `action` is a string.\n     *\n     * @defaultValue `true`\n     */\n    scroll?: boolean;\n} & Omit<HTMLFormProps, 'action' | DisallowedFormProps>;\nexport type FormProps<RouteInferType = any> = InternalFormProps;\nexport declare function createFormSubmitDestinationUrl(action: string, formElement: HTMLFormElement): URL;\nexport declare function checkFormActionUrl(action: string, source: 'action' | 'formAction'): void;\nexport declare const isSupportedFormEncType: (value: string) => value is \"application/x-www-form-urlencoded\";\nexport declare const isSupportedFormMethod: (value: string) => value is \"get\";\nexport declare const isSupportedFormTarget: (value: string) => value is \"_self\";\nexport declare function hasUnsupportedSubmitterAttributes(submitter: HTMLElement): boolean;\nexport declare function hasReactClientActionAttributes(submitter: HTMLElement): boolean | \"\" | null;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/components/router-reducer/create-initial-router-state.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892690463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime';\nimport type { FlightDataPath } from '../../../server/app-render/types';\nimport { type PrefetchCacheEntry } from './router-reducer-types';\nexport interface InitialRouterStateParameters {\n    navigatedAt: number;\n    initialCanonicalUrlParts: string[];\n    initialParallelRoutes: CacheNode['parallelRoutes'];\n    initialFlightData: FlightDataPath[];\n    location: Location | null;\n    couldBeIntercepted: boolean;\n    postponed: boolean;\n    prerendered: boolean;\n}\nexport declare function createInitialRouterState({ navigatedAt, initialFlightData, initialCanonicalUrlParts, initialParallelRoutes, location, couldBeIntercepted, postponed, prerendered, }: InitialRouterStateParameters): {\n    tree: import(\"../../../server/app-render/types\").FlightRouterState;\n    cache: import(\"../../../shared/lib/app-router-context.shared-runtime\").ReadyCacheNode;\n    prefetchCache: Map<string, PrefetchCacheEntry>;\n    pushRef: {\n        pendingPush: boolean;\n        mpaNavigation: boolean;\n        preserveCustomHistoryState: boolean;\n    };\n    focusAndScrollRef: {\n        apply: boolean;\n        onlyHashChange: boolean;\n        hashFragment: null;\n        segmentPaths: never[];\n    };\n    canonicalUrl: string;\n    nextUrl: string | null;\n};\n"
        }
    ]
}
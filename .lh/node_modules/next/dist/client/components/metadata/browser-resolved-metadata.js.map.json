{
    "sourceFile": "node_modules/next/dist/client/components/metadata/browser-resolved-metadata.js.map",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892678655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "{\"version\":3,\"sources\":[\"../../../../src/client/components/metadata/browser-resolved-metadata.tsx\"],\"sourcesContent\":[\"import { use } from 'react'\\nimport type { StreamingMetadataResolvedState } from './types'\\n\\nexport function BrowserResolvedMetadata({\\n  promise,\\n}: {\\n  promise: Promise<StreamingMetadataResolvedState>\\n}) {\\n  const { metadata, error } = use(promise)\\n  // If there's metadata error on client, discard the browser metadata\\n  // and let metadata outlet deal with the error. This will avoid the duplication metadata.\\n  if (error) return null\\n  return metadata\\n}\\n\"],\"names\":[\"BrowserResolvedMetadata\",\"promise\",\"metadata\",\"error\",\"use\"],\"mappings\":\";;;;+BAGgBA;;;eAAAA;;;uBAHI;AAGb,SAASA,wBAAwB,KAIvC;IAJuC,IAAA,EACtCC,OAAO,EAGR,GAJuC;IAKtC,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE,GAAGC,IAAAA,UAAG,EAACH;IAChC,oEAAoE;IACpE,yFAAyF;IACzF,IAAIE,OAAO,OAAO;IAClB,OAAOD;AACT\"}"
        }
    ]
}
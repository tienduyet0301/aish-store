{
    "sourceFile": "node_modules/next/dist/client/components/metadata/browser-resolved-metadata.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892678636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"BrowserResolvedMetadata\", {\n    enumerable: true,\n    get: function() {\n        return BrowserResolvedMetadata;\n    }\n});\nconst _react = require(\"react\");\nfunction BrowserResolvedMetadata(param) {\n    let { promise } = param;\n    const { metadata, error } = (0, _react.use)(promise);\n    // If there's metadata error on client, discard the browser metadata\n    // and let metadata outlet deal with the error. This will avoid the duplication metadata.\n    if (error) return null;\n    return metadata;\n}\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=browser-resolved-metadata.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/components/segment-cache-impl/tuple-map.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892693142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export type Prefix<T extends any[]> = T extends [infer First, ...infer Rest] ? [] | [First] | [First, ...Prefix<Rest>] : [];\nexport type TupleMap<Keypath extends Array<any>, V> = {\n    set(keys: Prefix<Keypath>, value: V): void;\n    get(keys: Prefix<Keypath>): V | null;\n    delete(keys: Prefix<Keypath>): void;\n};\n/**\n * Creates a map whose keys are tuples. Tuples are compared per-element. This\n * is useful when a key has multiple parts, but you don't want to concatenate\n * them into a single string value.\n *\n * In the Segment Cache, we use this to store cache entries by both their href\n * and their Next-URL.\n *\n * Example:\n *   map.set(['https://localhost', 'foo/bar/baz'], 'yay');\n *   map.get(['https://localhost', 'foo/bar/baz']); // returns 'yay'\n */\nexport declare function createTupleMap<Keypath extends Array<any>, V>(): TupleMap<Keypath, V>;\n"
        }
    ]
}
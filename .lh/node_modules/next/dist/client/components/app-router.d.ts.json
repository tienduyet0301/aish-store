{
    "sourceFile": "node_modules/next/dist/client/components/app-router.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892676554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React from 'react';\nimport type { CacheNode } from '../../shared/lib/app-router-context.shared-runtime';\nimport { type GlobalErrorComponent } from './error-boundary';\nimport { type AppRouterActionQueue } from './app-router-instance';\nexport declare function isExternalURL(url: URL): boolean;\n/**\n * Given a link href, constructs the URL that should be prefetched. Returns null\n * in cases where prefetching should be disabled, like external URLs, or\n * during development.\n * @param href The href passed to <Link>, router.prefetch(), or similar\n * @returns A URL object to prefetch, or null if prefetching should be disabled\n */\nexport declare function createPrefetchURL(href: string): URL | null;\nexport declare function createEmptyCacheNode(): CacheNode;\nexport default function AppRouter({ actionQueue, globalErrorComponentAndStyles: [globalErrorComponent, globalErrorStyles], assetPrefix, }: {\n    actionQueue: AppRouterActionQueue;\n    globalErrorComponentAndStyles: [GlobalErrorComponent, React.ReactNode];\n    assetPrefix: string;\n}): import(\"react/jsx-runtime\").JSX.Element;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/components/http-access-fallback/error-boundary.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892677949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * HTTPAccessFallbackBoundary is a boundary that catches errors and renders a\n * fallback component for HTTP errors.\n *\n * It receives the status code, and determine if it should render fallbacks for few HTTP 4xx errors.\n *\n * e.g. 404\n * 404 represents not found, and the fallback component pair contains the component and its styles.\n *\n */\nimport React from 'react';\ninterface HTTPAccessFallbackBoundaryProps {\n    notFound?: React.ReactNode;\n    forbidden?: React.ReactNode;\n    unauthorized?: React.ReactNode;\n    children: React.ReactNode;\n    missingSlots?: Set<string>;\n}\nexport declare function HTTPAccessFallbackBoundary({ notFound, forbidden, unauthorized, children, }: HTTPAccessFallbackBoundaryProps): import(\"react/jsx-runtime\").JSX.Element;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/components/errors/hydration-error-info.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892677283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export type HydrationErrorState = {\n    warning?: [string, string, string];\n    serverContent?: string;\n    clientContent?: string;\n    notes?: string;\n    reactOutputComponentDiff?: string;\n};\ntype NullableText = string | null | undefined;\nexport declare const hydrationErrorState: HydrationErrorState;\nexport declare const getHydrationWarningType: (message: NullableText) => \"tag\" | \"text\" | \"text-in-tag\";\nexport declare const getReactHydrationDiffSegments: (msg: NullableText) => (string | undefined)[] | undefined;\n/**\n * Patch console.error to capture hydration errors.\n * If any of the knownHydrationWarnings are logged, store the message and component stack.\n * When the hydration runtime error is thrown, the message and component stack are added to the error.\n * This results in a more helpful error message in the error overlay.\n */\nexport declare function storeHydrationErrorStateFromConsoleArgs(...args: any[]): void;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/shared.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892681099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { StackFrame } from 'next/dist/compiled/stacktrace-parser';\nimport type { VersionInfo } from '../../../server/dev/parse-version-info';\nimport type { SupportedErrorEvent } from './ui/container/runtime-error/render-error';\nimport type { ComponentStackFrame } from './utils/parse-component-stack';\nimport type { DebugInfo } from './types';\nimport type { DevIndicatorServerState } from '../../../server/dev/dev-indicator-server-state';\nimport type { HMR_ACTION_TYPES } from '../../../server/dev/hot-reloader-types';\ntype FastRefreshState = \n/** No refresh in progress. */\n{\n    type: 'idle';\n}\n/** The refresh process has been triggered, but the new code has not been executed yet. */\n | {\n    type: 'pending';\n    errors: SupportedErrorEvent[];\n};\nexport interface OverlayState {\n    nextId: number;\n    buildError: string | null;\n    errors: SupportedErrorEvent[];\n    refreshState: FastRefreshState;\n    versionInfo: VersionInfo;\n    notFound: boolean;\n    staticIndicator: boolean;\n    showIndicator: boolean;\n    disableDevIndicator: boolean;\n    debugInfo: DebugInfo;\n    routerType: 'pages' | 'app';\n}\nexport declare const ACTION_STATIC_INDICATOR = \"static-indicator\";\nexport declare const ACTION_BUILD_OK = \"build-ok\";\nexport declare const ACTION_BUILD_ERROR = \"build-error\";\nexport declare const ACTION_BEFORE_REFRESH = \"before-fast-refresh\";\nexport declare const ACTION_REFRESH = \"fast-refresh\";\nexport declare const ACTION_VERSION_INFO = \"version-info\";\nexport declare const ACTION_UNHANDLED_ERROR = \"unhandled-error\";\nexport declare const ACTION_UNHANDLED_REJECTION = \"unhandled-rejection\";\nexport declare const ACTION_DEBUG_INFO = \"debug-info\";\nexport declare const ACTION_DEV_INDICATOR = \"dev-indicator\";\nexport declare const STORAGE_KEY_THEME = \"__nextjs-dev-tools-theme\";\nexport declare const STORAGE_KEY_POSITION = \"__nextjs-dev-tools-position\";\nexport declare const STORAGE_KEY_SCALE = \"__nextjs-dev-tools-scale\";\ninterface StaticIndicatorAction {\n    type: typeof ACTION_STATIC_INDICATOR;\n    staticIndicator: boolean;\n}\ninterface BuildOkAction {\n    type: typeof ACTION_BUILD_OK;\n}\ninterface BuildErrorAction {\n    type: typeof ACTION_BUILD_ERROR;\n    message: string;\n}\ninterface BeforeFastRefreshAction {\n    type: typeof ACTION_BEFORE_REFRESH;\n}\ninterface FastRefreshAction {\n    type: typeof ACTION_REFRESH;\n}\nexport interface UnhandledErrorAction {\n    type: typeof ACTION_UNHANDLED_ERROR;\n    reason: Error;\n    frames: StackFrame[];\n    componentStackFrames?: ComponentStackFrame[];\n}\nexport interface UnhandledRejectionAction {\n    type: typeof ACTION_UNHANDLED_REJECTION;\n    reason: Error;\n    frames: StackFrame[];\n}\nexport interface DebugInfoAction {\n    type: typeof ACTION_DEBUG_INFO;\n    debugInfo: any;\n}\ninterface VersionInfoAction {\n    type: typeof ACTION_VERSION_INFO;\n    versionInfo: VersionInfo;\n}\ninterface DevIndicatorAction {\n    type: typeof ACTION_DEV_INDICATOR;\n    devIndicator: DevIndicatorServerState;\n}\nexport type BusEvent = BuildOkAction | BuildErrorAction | BeforeFastRefreshAction | FastRefreshAction | UnhandledErrorAction | UnhandledRejectionAction | VersionInfoAction | StaticIndicatorAction | DebugInfoAction | DevIndicatorAction;\nexport declare const INITIAL_OVERLAY_STATE: Omit<OverlayState, 'routerType'>;\nexport declare function useErrorOverlayReducer(routerType: 'pages' | 'app'): [OverlayState & {\n    routerType: \"pages\" | \"app\";\n}, import(\"react\").ActionDispatch<[action: BusEvent]>];\nexport declare const REACT_REFRESH_FULL_RELOAD: string;\nexport declare const REACT_REFRESH_FULL_RELOAD_FROM_ERROR = \"[Fast Refresh] performing full reload because your application had an unrecoverable error\";\nexport declare function reportInvalidHmrMessage(message: HMR_ACTION_TYPES | MessageEvent<unknown>, err: unknown): void;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/server/middleware-webpack.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892680889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { StackFrame } from 'next/dist/compiled/stacktrace-parser';\nimport { getSourceMapFromFile } from '../utils/get-source-map-from-file';\nimport { type OriginalStackFrameResponse } from './shared';\nexport { getServerError } from '../utils/node-stack-frames';\nexport { parseStack } from '../utils/parse-stack';\nexport { getSourceMapFromFile };\nimport type { IncomingMessage, ServerResponse } from 'http';\nimport type webpack from 'webpack';\nimport type { RawSourceMap } from 'next/dist/compiled/source-map08';\ntype IgnoredSources = Array<{\n    url: string;\n    ignored: boolean;\n}>;\nexport interface IgnorableStackFrame extends StackFrame {\n    ignored: boolean;\n}\ntype Source = {\n    type: 'file';\n    sourceMap: RawSourceMap;\n    ignoredSources: IgnoredSources;\n    moduleURL: string;\n} | {\n    type: 'bundle';\n    sourceMap: RawSourceMap;\n    ignoredSources: IgnoredSources;\n    compilation: webpack.Compilation;\n    moduleId: string;\n    moduleURL: string;\n};\nexport declare function getIgnoredSources(sourceMap: RawSourceMap & {\n    ignoreList?: number[];\n}): IgnoredSources;\nexport declare function createOriginalStackFrame({ source, rootDirectory, frame, errorMessage, }: {\n    source: Source;\n    rootDirectory: string;\n    frame: StackFrame;\n    errorMessage?: string;\n}): Promise<OriginalStackFrameResponse | null>;\nexport declare function getOverlayMiddleware(options: {\n    rootDirectory: string;\n    clientStats: () => webpack.Stats | null;\n    serverStats: () => webpack.Stats | null;\n    edgeServerStats: () => webpack.Stats | null;\n}): (req: IncomingMessage, res: ServerResponse, next: () => void) => Promise<void>;\nexport declare function getSourceMapMiddleware(options: {\n    clientStats: () => webpack.Stats | null;\n    serverStats: () => webpack.Stats | null;\n    edgeServerStats: () => webpack.Stats | null;\n}): (req: IncomingMessage, res: ServerResponse, next: () => void) => Promise<void>;\n"
        }
    ]
}
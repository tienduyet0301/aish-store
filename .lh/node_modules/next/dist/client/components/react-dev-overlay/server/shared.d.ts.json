{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/server/shared.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892680963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { StackFrame } from 'stacktrace-parser';\nexport interface OriginalStackFramesRequest {\n    frames: StackFrame[];\n    isServer: boolean;\n    isEdgeServer: boolean;\n    isAppDirectory: boolean;\n}\nexport type OriginalStackFramesResponse = OriginalStackFrameResponseResult[];\nexport type OriginalStackFrameResponseResult = PromiseSettledResult<OriginalStackFrameResponse>;\nexport interface OriginalStackFrameResponse {\n    originalStackFrame?: (StackFrame & {\n        ignored: boolean;\n    }) | null;\n    originalCodeFrame?: string | null;\n}\n/**\n * It looks up the code frame of the traced source.\n * @note It ignores Next.js/React internals, as these can often be huge bundled files.\n */\nexport declare function getOriginalCodeFrame(frame: StackFrame, source: string | null, colors?: boolean): string | null;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/app/app-dev-overlay-error-boundary.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892679570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { PureComponent } from 'react';\nimport { type GlobalErrorComponent } from '../../error-boundary';\ntype AppDevOverlayErrorBoundaryProps = {\n    children: React.ReactNode;\n    globalError: [GlobalErrorComponent, React.ReactNode];\n    onError: (value: boolean) => void;\n};\ntype AppDevOverlayErrorBoundaryState = {\n    isReactError: boolean;\n    reactError: unknown;\n};\nexport declare class AppDevOverlayErrorBoundary extends PureComponent<AppDevOverlayErrorBoundaryProps, AppDevOverlayErrorBoundaryState> {\n    state: {\n        isReactError: boolean;\n        reactError: null;\n    };\n    static getDerivedStateFromError(error: Error): {\n        isReactError: boolean;\n        reactError: null;\n    } | {\n        isReactError: boolean;\n        reactError: Error;\n    };\n    componentDidCatch(): void;\n    render(): string | number | bigint | boolean | Iterable<import(\"react\").ReactNode> | Promise<string | number | bigint | boolean | import(\"react\").ReactElement<unknown, string | import(\"react\").JSXElementConstructor<any>> | import(\"react\").ReactPortal | Iterable<import(\"react\").ReactNode> | null | undefined> | import(\"react/jsx-runtime\").JSX.Element | null | undefined;\n}\nexport {};\n"
        }
    ]
}
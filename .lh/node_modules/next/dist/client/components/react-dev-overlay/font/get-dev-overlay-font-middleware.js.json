{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/font/get-dev-overlay-font-middleware.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892680096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getDevOverlayFontMiddleware\", {\n    enumerable: true,\n    get: function() {\n        return getDevOverlayFontMiddleware;\n    }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _path = /*#__PURE__*/ _interop_require_default._(require(\"path\"));\nconst _promises = /*#__PURE__*/ _interop_require_wildcard._(require(\"fs/promises\"));\nconst _fs = require(\"fs\");\nconst _log = /*#__PURE__*/ _interop_require_wildcard._(require(\"../../../../build/output/log\"));\nconst _middlewareresponse = require(\"../server/middleware-response\");\nconst FONT_PREFIX = '/__nextjs_font/';\nconst VALID_FONTS = [\n    'geist-latin-ext.woff2',\n    'geist-mono-latin-ext.woff2',\n    'geist-latin.woff2',\n    'geist-mono-latin.woff2'\n];\nconst FONT_HEADERS = {\n    'Content-Type': 'font/woff2',\n    'Cache-Control': 'public, max-age=31536000, immutable'\n};\nfunction getDevOverlayFontMiddleware() {\n    return async function devOverlayFontMiddleware(req, res, next) {\n        try {\n            const { pathname } = new URL(\"http://n\" + req.url);\n            if (!pathname.startsWith(FONT_PREFIX)) {\n                return next();\n            }\n            const fontFile = pathname.replace(FONT_PREFIX, '');\n            if (!VALID_FONTS.includes(fontFile)) {\n                return _middlewareresponse.middlewareResponse.notFound(res);\n            }\n            const fontPath = _path.default.resolve(__dirname, fontFile);\n            const fileExists = await checkFileExists(fontPath);\n            if (!fileExists) {\n                return _middlewareresponse.middlewareResponse.notFound(res);\n            }\n            const fontData = await _promises.readFile(fontPath);\n            Object.entries(FONT_HEADERS).forEach((param)=>{\n                let [key, value] = param;\n                res.setHeader(key, value);\n            });\n            res.end(fontData);\n        } catch (err) {\n            _log.error('Failed to serve font:', err instanceof Error ? err.message : err);\n            return _middlewareresponse.middlewareResponse.internalServerError(res);\n        }\n    };\n}\nasync function checkFileExists(filePath) {\n    try {\n        await _promises.access(filePath, _fs.constants.F_OK);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=get-dev-overlay-font-middleware.js.map"
        }
    ]
}
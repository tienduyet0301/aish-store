{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/pages/hot-reloader-client.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892680366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * MIT License\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport type { TurbopackMsgToBrowser } from '../../../../server/dev/hot-reloader-types';\ndeclare global {\n    interface Window {\n        __nextDevClientId: number;\n    }\n}\nexport default function connect(): {\n    subscribeToHmrEvent(handler: any): void;\n    onUnrecoverableError(): void;\n    addTurbopackMessageListener(cb: (msg: TurbopackMsgToBrowser) => void): void;\n    sendTurbopackMessage(msg: string): void;\n    handleUpdateError(err: unknown): void;\n};\nexport declare function handleStaticIndicator(): void;\nexport declare function performFullReload(err: any): void;\n"
        }
    ]
}
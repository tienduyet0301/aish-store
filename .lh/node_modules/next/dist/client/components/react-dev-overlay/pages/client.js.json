{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/pages/client.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892680254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    getErrorByType: null,\n    getServerError: null,\n    onBeforeRefresh: null,\n    onBuildError: null,\n    onBuildOk: null,\n    onDevIndicator: null,\n    onRefresh: null,\n    onStaticIndicator: null,\n    onVersionInfo: null,\n    register: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getErrorByType: function() {\n        return _geterrorbytype.getErrorByType;\n    },\n    getServerError: function() {\n        return _nodestackframes.getServerError;\n    },\n    onBeforeRefresh: function() {\n        return onBeforeRefresh;\n    },\n    onBuildError: function() {\n        return onBuildError;\n    },\n    onBuildOk: function() {\n        return onBuildOk;\n    },\n    onDevIndicator: function() {\n        return onDevIndicator;\n    },\n    onRefresh: function() {\n        return onRefresh;\n    },\n    onStaticIndicator: function() {\n        return onStaticIndicator;\n    },\n    onVersionInfo: function() {\n        return onVersionInfo;\n    },\n    register: function() {\n        return register;\n    }\n});\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _bus = /*#__PURE__*/ _interop_require_wildcard._(require(\"./bus\"));\nconst _parsestack = require(\"../utils/parse-stack\");\nconst _parsecomponentstack = require(\"../utils/parse-component-stack\");\nconst _hydrationerrorinfo = require(\"../../errors/hydration-error-info\");\nconst _shared = require(\"../shared\");\nconst _attachhydrationerrorstate = require(\"../../errors/attach-hydration-error-state\");\nconst _geterrorbytype = require(\"../utils/get-error-by-type\");\nconst _nodestackframes = require(\"../utils/node-stack-frames\");\nlet isRegistered = false;\nfunction handleError(error) {\n    if (!error || !(error instanceof Error) || typeof error.stack !== 'string') {\n        // A non-error was thrown, we don't have anything to show. :-(\n        return;\n    }\n    (0, _attachhydrationerrorstate.attachHydrationErrorState)(error);\n    const componentStackTrace = error._componentStack;\n    const componentStackFrames = typeof componentStackTrace === 'string' ? (0, _parsecomponentstack.parseComponentStack)(componentStackTrace) : undefined;\n    // Skip ModuleBuildError and ModuleNotFoundError, as it will be sent through onBuildError callback.\n    // This is to avoid same error as different type showing up on client to cause flashing.\n    if (error.name !== 'ModuleBuildError' && error.name !== 'ModuleNotFoundError') {\n        _bus.emit({\n            type: _shared.ACTION_UNHANDLED_ERROR,\n            reason: error,\n            frames: (0, _parsestack.parseStack)(error.stack),\n            componentStackFrames\n        });\n    }\n}\nlet origConsoleError = console.error;\nfunction nextJsHandleConsoleError() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    // See https://github.com/facebook/react/blob/d50323eb845c5fde0d720cae888bf35dedd05506/packages/react-reconciler/src/ReactFiberErrorLogger.js#L78\n    const error = process.env.NODE_ENV !== 'production' ? args[1] : args[0];\n    (0, _hydrationerrorinfo.storeHydrationErrorStateFromConsoleArgs)(...args);\n    handleError(error);\n    origConsoleError.apply(window.console, args);\n}\nfunction onUnhandledError(event) {\n    const error = event == null ? void 0 : event.error;\n    handleError(error);\n}\nfunction onUnhandledRejection(ev) {\n    const reason = ev == null ? void 0 : ev.reason;\n    if (!reason || !(reason instanceof Error) || typeof reason.stack !== 'string') {\n        // A non-error was thrown, we don't have anything to show. :-(\n        return;\n    }\n    const e = reason;\n    _bus.emit({\n        type: _shared.ACTION_UNHANDLED_REJECTION,\n        reason: reason,\n        frames: (0, _parsestack.parseStack)(e.stack)\n    });\n}\nfunction register() {\n    if (isRegistered) {\n        return;\n    }\n    isRegistered = true;\n    try {\n        Error.stackTraceLimit = 50;\n    } catch (e) {}\n    window.addEventListener('error', onUnhandledError);\n    window.addEventListener('unhandledrejection', onUnhandledRejection);\n    window.console.error = nextJsHandleConsoleError;\n}\nfunction onBuildOk() {\n    _bus.emit({\n        type: _shared.ACTION_BUILD_OK\n    });\n}\nfunction onBuildError(message) {\n    _bus.emit({\n        type: _shared.ACTION_BUILD_ERROR,\n        message\n    });\n}\nfunction onRefresh() {\n    _bus.emit({\n        type: _shared.ACTION_REFRESH\n    });\n}\nfunction onBeforeRefresh() {\n    _bus.emit({\n        type: _shared.ACTION_BEFORE_REFRESH\n    });\n}\nfunction onVersionInfo(versionInfo) {\n    _bus.emit({\n        type: _shared.ACTION_VERSION_INFO,\n        versionInfo\n    });\n}\nfunction onStaticIndicator(isStatic) {\n    _bus.emit({\n        type: _shared.ACTION_STATIC_INDICATOR,\n        staticIndicator: isStatic\n    });\n}\nfunction onDevIndicator(devIndicatorsState) {\n    _bus.emit({\n        type: _shared.ACTION_DEV_INDICATOR,\n        devIndicator: devIndicatorsState\n    });\n}\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=client.js.map"
        }
    ]
}
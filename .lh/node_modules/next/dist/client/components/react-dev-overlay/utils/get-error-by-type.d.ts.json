{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/utils/get-error-by-type.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892688705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { SupportedErrorEvent } from '../ui/container/runtime-error/render-error';\nimport type { OriginalStackFrame } from './stack-frame';\nimport type { ComponentStackFrame } from './parse-component-stack';\nexport type ReadyRuntimeError = {\n    id: number;\n    runtime: true;\n    error: Error & {\n        environmentName?: string;\n    };\n    frames: OriginalStackFrame[] | (() => Promise<OriginalStackFrame[]>);\n    componentStackFrames?: ComponentStackFrame[];\n};\nexport declare const useFrames: (error: ReadyRuntimeError) => OriginalStackFrame[];\nexport declare function getErrorByType(ev: SupportedErrorEvent, isAppDir: boolean): Promise<ReadyRuntimeError>;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/components/react-dev-overlay/utils/report-hmr-latency.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892689269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "declare global {\n    interface Window {\n        __NEXT_HMR_LATENCY_CB: ((latencyMs: number) => void) | undefined;\n    }\n}\n/**\n * Logs information about a completed HMR to the console, the server (via a\n * `client-hmr-latency` event), and to `self.__NEXT_HMR_LATENCY_CB` (a debugging\n * hook).\n *\n * @param hasUpdate Set this to `false` to avoid reporting the HMR event via a\n *   `client-hmr-latency` event or to `self.__NEXT_HMR_LATENCY_CB`. Used by\n *   turbopack when we must report a message to the browser console (because we\n *   already logged a \"rebuilding\" message), but it's not a real HMR, so we\n *   don't want to impact our telemetry.\n */\nexport default function reportHmrLatency(sendMessage: (message: string) => void, updatedModules: ReadonlyArray<string | number>, startMsSinceEpoch: number, endMsSinceEpoch: number, hasUpdate?: boolean): void;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/client/next-turbopack.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892697380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// A client-side entry point for Turbopack builds. Includes logic to load chunks,\n// but does not include development-time features like hot module reloading.\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nrequire(\"../lib/require-instrumentation-client\");\nconst _ = require(\"./\");\nconst _fouc = require(\"./dev/fouc\");\nwindow.next = {\n    version: \"\" + _.version + \"-turbo\",\n    // router is initialized later so it has to be live-binded\n    get router () {\n        return _.router;\n    },\n    emitter: _.emitter\n};\nself.__next_set_public_path__ = ()=>{};\nself.__webpack_hash__ = '';\n(0, _.initialize)({}).then(()=>{\n    // for the page loader\n    ;\n    self.__turbopack_load_page_chunks__ = (page, chunksData)=>{\n        const chunkPromises = chunksData.map(__turbopack_load__);\n        Promise.all(chunkPromises).catch((err)=>console.error('failed to load chunks for page ' + page, err));\n    };\n    return (0, _.hydrate)({\n        beforeRender: _fouc.displayContent\n    });\n}).catch((err)=>{\n    console.error('Error was not caught', err);\n});\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=next-turbopack.js.map"
        }
    ]
}
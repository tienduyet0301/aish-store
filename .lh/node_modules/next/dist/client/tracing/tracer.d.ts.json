{
    "sourceFile": "node_modules/next/dist/client/tracing/tracer.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892699362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { MittEmitter } from '../../shared/lib/mitt';\nexport type SpanOptions = {\n    startTime?: number;\n    attributes?: Record<string, unknown>;\n};\nexport type SpanState = {\n    state: 'inprogress';\n} | {\n    state: 'ended';\n    endTime: number;\n};\ninterface ISpan {\n    name: string;\n    startTime: number;\n    attributes: Record<string, unknown>;\n    state: SpanState;\n    end(endTime?: number): void;\n}\ndeclare class Span implements ISpan {\n    name: string;\n    startTime: number;\n    onSpanEnd: (span: Span) => void;\n    state: SpanState;\n    attributes: Record<string, unknown>;\n    constructor(name: string, options: SpanOptions, onSpanEnd: (span: Span) => void);\n    end(endTime?: number): void;\n}\ndeclare class Tracer {\n    _emitter: MittEmitter<string>;\n    private handleSpanEnd;\n    startSpan(name: string, options: SpanOptions): Span;\n    onSpanEnd(cb: (span: ISpan) => void): () => void;\n}\nexport type { ISpan as Span };\ndeclare const _default: Tracer;\nexport default _default;\n"
        }
    ]
}
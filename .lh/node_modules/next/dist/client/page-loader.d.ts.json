{
    "sourceFile": "node_modules/next/dist/client/page-loader.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892697739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { ComponentType } from 'react';\nimport type { RouteLoader } from './route-loader';\nimport type { MiddlewareMatcher } from '../build/analysis/get-page-static-info';\ndeclare global {\n    interface Window {\n        __DEV_MIDDLEWARE_MATCHERS?: MiddlewareMatcher[];\n        __DEV_PAGES_MANIFEST?: {\n            pages: string[];\n        };\n        __SSG_MANIFEST_CB?: () => void;\n        __SSG_MANIFEST?: Set<string>;\n    }\n}\nexport type StyleSheetTuple = {\n    href: string;\n    text: string;\n};\nexport type GoodPageCache = {\n    page: ComponentType;\n    mod: any;\n    styleSheets: StyleSheetTuple[];\n};\nexport default class PageLoader {\n    private buildId;\n    private assetPrefix;\n    private promisedSsgManifest;\n    private promisedDevPagesManifest?;\n    private promisedMiddlewareMatchers?;\n    routeLoader: RouteLoader;\n    constructor(buildId: string, assetPrefix: string);\n    getPageList(): string[] | Promise<string[]>;\n    getMiddleware(): MiddlewareMatcher[] | Promise<MiddlewareMatcher[]> | undefined;\n    getDataHref(params: {\n        asPath: string;\n        href: string;\n        locale?: string | false;\n        skipInterpolation?: boolean;\n    }): string;\n    _isSsg(\n    /** the route (file-system path) */\n    route: string): Promise<boolean>;\n    loadPage(route: string): Promise<GoodPageCache>;\n    prefetch(route: string): Promise<void>;\n}\n"
        }
    ]
}
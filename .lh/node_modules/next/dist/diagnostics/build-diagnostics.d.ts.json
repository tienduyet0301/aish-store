{
    "sourceFile": "node_modules/next/dist/diagnostics/build-diagnostics.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892743891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { ExportAppResult } from '../export/types';\ninterface BuildDiagnostics {\n    buildStage?: string;\n    buildOptions?: Record<string, string>;\n}\n/**\n * Saves the exact version of Next.js that was used to build the app to a diagnostics file.\n */\nexport declare function recordFrameworkVersion(version: string): Promise<void>;\n/**\n * Saves build diagnostics information to a file. This method can be called\n * multiple times during a build to save additional information that can help\n * debug a build such as what stage the build was in when a failure happened.\n * Each time this method is called, the new information will be merged with any\n * existing build diagnostics that previously existed.\n */\nexport declare function updateBuildDiagnostics(diagnostics: BuildDiagnostics): Promise<void>;\n/**\n * Writes fetch metrics collected during static generation to a file.\n */\nexport declare function recordFetchMetrics(exportResult: ExportAppResult): Promise<void>;\ninterface IncrementalBuildDiagnostics {\n    changedAppPaths?: string[];\n    unchangedAppPaths?: string[];\n    changedPagePaths?: string[];\n    unchangedPagePaths?: string[];\n    changedDependencies?: Record<string, string>;\n    shuttleGitSha?: string;\n    currentGitSha?: string;\n}\n/**\n * Writes incremental build metrics to a file.\n */\nexport declare function updateIncrementalBuildMetrics(diagnostics: IncrementalBuildDiagnostics): Promise<void>;\nexport {};\n"
        }
    ]
}
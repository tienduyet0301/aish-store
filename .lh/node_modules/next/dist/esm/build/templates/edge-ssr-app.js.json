{
    "sourceFile": "node_modules/next/dist/esm/build/templates/edge-ssr-app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892750638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var _self___RSC_MANIFEST;\nimport '../../server/web/globals';\nimport { adapter } from '../../server/web/adapter';\nimport { getRender } from '../webpack/loaders/next-edge-ssr-loader/render';\nimport { IncrementalCache } from '../../server/lib/incremental-cache';\nimport { renderToHTMLOrFlight as renderToHTML } from '../../server/app-render/app-render';\nimport * as pageMod from 'VAR_USERLAND';\nimport { PAGE_TYPES } from '../../lib/page-types';\nimport { setReferenceManifestsSingleton } from '../../server/app-render/encryption-utils';\nimport { createServerModuleMap } from '../../server/app-render/action-utils';\nimport { initializeCacheHandlers } from '../../server/use-cache/handlers';\n// OPTIONAL_IMPORT:incrementalCacheHandler\n// Initialize the cache handlers interface.\ninitializeCacheHandlers();\nconst Document = null;\nconst appMod = null;\nconst errorMod = null;\nconst error500Mod = null;\n// INJECT:sriEnabled\n// INJECT:isServerComponent\n// INJECT:dev\n// INJECT:serverActions\n// INJECT:nextConfig\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst buildManifest = self.__BUILD_MANIFEST;\nconst reactLoadableManifest = maybeJSONParse(self.__REACT_LOADABLE_MANIFEST);\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST['VAR_PAGE'];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nconst subresourceIntegrityManifest = sriEnabled ? maybeJSONParse(self.__SUBRESOURCE_INTEGRITY_MANIFEST) : undefined;\nconst nextFontManifest = maybeJSONParse(self.__NEXT_FONT_MANIFEST);\nconst interceptionRouteRewrites = maybeJSONParse(self.__INTERCEPTION_ROUTE_REWRITE_MANIFEST) ?? [];\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: 'VAR_PAGE',\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nconst render = getRender({\n    pagesType: PAGE_TYPES.APP,\n    dev,\n    page: 'VAR_PAGE',\n    appMod,\n    pageMod,\n    errorMod,\n    error500Mod,\n    Document,\n    buildManifest,\n    renderToHTML,\n    reactLoadableManifest,\n    clientReferenceManifest: isServerComponent ? rscManifest : null,\n    serverActionsManifest: isServerComponent ? rscServerManifest : null,\n    serverActions: isServerComponent ? serverActions : undefined,\n    subresourceIntegrityManifest,\n    config: nextConfig,\n    buildId: process.env.__NEXT_BUILD_ID,\n    nextFontManifest,\n    incrementalCacheHandler,\n    interceptionRouteRewrites\n});\nexport const ComponentMod = pageMod;\nexport default function nHandler(opts) {\n    return adapter({\n        ...opts,\n        IncrementalCache,\n        handler: render\n    });\n}\n\n//# sourceMappingURL=edge-ssr-app.js.map"
        }
    ]
}
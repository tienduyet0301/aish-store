{
    "sourceFile": "node_modules/next/dist/esm/build/babel/loader/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892745178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import transform from './transform';\nasync function nextBabelLoader(parentTrace, inputSource, inputSourceMap) {\n    const filename = this.resourcePath;\n    // Ensure `.d.ts` are not processed.\n    if (filename.endsWith('.d.ts')) {\n        return [\n            inputSource,\n            inputSourceMap\n        ];\n    }\n    const target = this.target;\n    const loaderOptions = parentTrace.traceChild('get-options')// @ts-ignore TODO: remove ignore once webpack 5 types are used\n    .traceFn(()=>this.getOptions());\n    if (loaderOptions.exclude && loaderOptions.exclude(filename)) {\n        return [\n            inputSource,\n            inputSourceMap\n        ];\n    }\n    const loaderSpanInner = parentTrace.traceChild('next-babel-turbo-transform');\n    const { code: transformedSource, map: outputSourceMap } = await loaderSpanInner.traceAsyncFn(async ()=>await transform.call(this, inputSource, inputSourceMap, loaderOptions, filename, target, loaderSpanInner));\n    return [\n        transformedSource,\n        outputSourceMap\n    ];\n}\nconst nextBabelLoaderOuter = function nextBabelLoaderOuter(inputSource, inputSourceMap) {\n    const callback = this.async();\n    const loaderSpan = this.currentTraceSpan.traceChild('next-babel-turbo-loader');\n    loaderSpan.traceAsyncFn(()=>nextBabelLoader.call(this, loaderSpan, inputSource, inputSourceMap)).then(([transformedSource, outputSourceMap])=>callback == null ? void 0 : callback(null, transformedSource, outputSourceMap || inputSourceMap), (err)=>{\n        callback == null ? void 0 : callback(err);\n    });\n};\nexport default nextBabelLoaderOuter;\n\n//# sourceMappingURL=index.js.map"
        }
    ]
}
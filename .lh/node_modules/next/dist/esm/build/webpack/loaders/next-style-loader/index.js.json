{
    "sourceFile": "node_modules/next/dist/esm/build/webpack/loaders/next-style-loader/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892756924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import path from 'path';\nimport { stringifyRequest } from '../../stringify-request';\nconst loaderApi = ()=>{};\nloaderApi.pitch = function loader(request) {\n    const loaderSpan = this.currentTraceSpan.traceChild('next-style-loader');\n    return loaderSpan.traceFn(()=>{\n        const options = this.getOptions();\n        const insert = typeof options.insert === 'undefined' ? '\"head\"' : typeof options.insert === 'string' ? JSON.stringify(options.insert) : options.insert.toString();\n        const injectType = options.injectType || 'styleTag';\n        const esModule = typeof options.esModule !== 'undefined' ? options.esModule : false;\n        delete options.esModule;\n        switch(injectType){\n            case 'linkTag':\n                {\n                    const hmrCode = this.hot ? `\nif (module.hot) {\n  module.hot.accept(\n    ${stringifyRequest(this, `!!${request}`)},\n    function() {\n     ${esModule ? 'update(content);' : `content = require(${stringifyRequest(this, `!!${request}`)});\n\n           content = content.__esModule ? content.default : content;\n\n           update(content);`}\n    }\n  );\n\n  module.hot.dispose(function() {\n    update();\n  });\n}` : '';\n                    return `${esModule ? `import api from ${stringifyRequest(this, `!${path.join(__dirname, 'runtime/injectStylesIntoLinkTag.js')}`)};\n            import content from ${stringifyRequest(this, `!!${request}`)};` : `var api = require(${stringifyRequest(this, `!${path.join(__dirname, 'runtime/injectStylesIntoLinkTag.js')}`)});\n            var content = require(${stringifyRequest(this, `!!${request}`)});\n\n            content = content.__esModule ? content.default : content;`}\n\nvar options = ${JSON.stringify(options)};\n\noptions.insert = ${insert};\n\nvar update = api(content, options);\n\n${hmrCode}\n\n${esModule ? 'export default {}' : ''}`;\n                }\n            case 'lazyStyleTag':\n            case 'lazySingletonStyleTag':\n                {\n                    const isSingleton = injectType === 'lazySingletonStyleTag';\n                    const hmrCode = this.hot ? `\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = ${require('./runtime/isEqualLocals').toString()};\n    console.log({isEqualLocals})\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      ${stringifyRequest(this, `!!${request}`)},\n      function () {\n        ${esModule ? `if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              if (update && refs > 0) {\n                update(content);\n              }` : `content = require(${stringifyRequest(this, `!!${request}`)});\n\n              content = content.__esModule ? content.default : content;\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              if (update && refs > 0) {\n                update(content);\n              }`}\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    if (update) {\n      update();\n    }\n  });\n}` : '';\n                    return `${esModule ? `import api from ${stringifyRequest(this, `!${path.join(__dirname, 'runtime/injectStylesIntoStyleTag.js')}`)};\n            import content from ${stringifyRequest(this, `!!${request}`)};` : `var api = require(${stringifyRequest(this, `!${path.join(__dirname, 'runtime/injectStylesIntoStyleTag.js')}`)});\n            var content = require(${stringifyRequest(this, `!!${request}`)});\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }`}\n\nvar refs = 0;\nvar update;\nvar options = ${JSON.stringify(options)};\n\noptions.insert = ${insert};\noptions.singleton = ${isSingleton};\n\nvar exported = {};\n\nexported.locals = content.locals || {};\nexported.use = function() {\n  if (!(refs++)) {\n    update = api(content, options);\n  }\n\n  return exported;\n};\nexported.unuse = function() {\n  if (refs > 0 && !--refs) {\n    update();\n    update = null;\n  }\n};\n\n${hmrCode}\n\n${esModule ? 'export default' : 'module.exports ='} exported;`;\n                }\n            case 'styleTag':\n            case 'singletonStyleTag':\n            default:\n                {\n                    const isSingleton = injectType === 'singletonStyleTag';\n                    const hmrCode = this.hot ? `\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = ${require('./runtime/isEqualLocals').toString()};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      ${stringifyRequest(this, `!!${request}`)},\n      function () {\n        ${esModule ? `if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);` : `content = require(${stringifyRequest(this, `!!${request}`)});\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);`}\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}` : '';\n                    return `${esModule ? `import api from ${stringifyRequest(this, `!${path.join(__dirname, 'runtime/injectStylesIntoStyleTag.js')}`)};\n            import content from ${stringifyRequest(this, `!!${request}`)};` : `var api = require(${stringifyRequest(this, `!${path.join(__dirname, 'runtime/injectStylesIntoStyleTag.js')}`)});\n            var content = require(${stringifyRequest(this, `!!${request}`)});\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }`}\n\nvar options = ${JSON.stringify(options)};\n\noptions.insert = ${insert};\noptions.singleton = ${isSingleton};\n\nvar update = api(content, options);\n\n${hmrCode}\n\n${esModule ? 'export default' : 'module.exports ='} content.locals || {};`;\n                }\n        }\n    });\n};\nmodule.exports = loaderApi;\n\n//# sourceMappingURL=index.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/build/webpack/loaders/next-flight-client-entry-loader.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892755426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { BARREL_OPTIMIZATION_PREFIX, RSC_MODULE_TYPES } from '../../../shared/lib/constants';\nimport { getModuleBuildInfo } from './get-module-build-info';\nimport { regexCSS } from './utils';\nexport default function transformSource() {\n    let { modules, server } = this.getOptions();\n    const isServer = server === 'true';\n    if (!Array.isArray(modules)) {\n        modules = modules ? [\n            modules\n        ] : [];\n    }\n    const code = modules.map((x)=>JSON.parse(x))// Filter out CSS files in the SSR compilation\n    .filter(({ request })=>isServer ? !regexCSS.test(request) : true).map(({ request, ids })=>{\n        const importPath = JSON.stringify(request.startsWith(BARREL_OPTIMIZATION_PREFIX) ? request.replace(':', '!=!') : request);\n        // When we cannot determine the export names, we use eager mode to include the whole module.\n        // Otherwise, we use eager mode with webpackExports to only include the necessary exports.\n        // If we have '*' in the ids, we include all the imports\n        if (ids.length === 0 || ids.includes('*')) {\n            return `import(/* webpackMode: \"eager\" */ ${importPath});\\n`;\n        } else {\n            return `import(/* webpackMode: \"eager\", webpackExports: ${JSON.stringify(ids)} */ ${importPath});\\n`;\n        }\n    }).join(';\\n');\n    const buildInfo = getModuleBuildInfo(this._module);\n    buildInfo.rsc = {\n        type: RSC_MODULE_TYPES.client\n    };\n    if (process.env.BUILTIN_FLIGHT_CLIENT_ENTRY_PLUGIN) {\n        const rscModuleInformationJson = JSON.stringify(buildInfo.rsc);\n        return `/* __rspack_internal_rsc_module_information_do_not_use__ ${rscModuleInformationJson} */\\n` + code;\n    }\n    return code;\n}\n\n//# sourceMappingURL=next-flight-client-entry-loader.js.map"
        }
    ]
}
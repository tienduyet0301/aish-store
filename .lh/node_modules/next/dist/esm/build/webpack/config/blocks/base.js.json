{
    "sourceFile": "node_modules/next/dist/esm/build/webpack/config/blocks/base.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892751961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import curry from 'next/dist/compiled/lodash.curry';\nimport { COMPILER_NAMES } from '../../../../shared/lib/constants';\nimport DevToolsIgnorePlugin from '../../plugins/devtools-ignore-list-plugin';\nimport EvalSourceMapDevToolPlugin from '../../plugins/eval-source-map-dev-tool-plugin';\nfunction shouldIgnorePath(modulePath) {\n    return modulePath.includes('node_modules') || // Only relevant for when Next.js is symlinked e.g. in the Next.js monorepo\n    modulePath.includes('next/dist');\n}\nexport const base = curry(function base(ctx, config) {\n    config.mode = ctx.isDevelopment ? 'development' : 'production';\n    config.name = ctx.isServer ? ctx.isEdgeRuntime ? COMPILER_NAMES.edgeServer : COMPILER_NAMES.server : COMPILER_NAMES.client;\n    config.target = !ctx.targetWeb ? 'node18.17' // Same version defined in packages/next/package.json#engines\n     : ctx.isEdgeRuntime ? [\n        'web',\n        'es6'\n    ] : [\n        'web',\n        'es6'\n    ];\n    // https://webpack.js.org/configuration/devtool/#development\n    if (ctx.isDevelopment) {\n        if (process.env.__NEXT_TEST_MODE && !process.env.__NEXT_TEST_WITH_DEVTOOL) {\n            config.devtool = false;\n        } else {\n            // `eval-source-map` provides full-fidelity source maps for the\n            // original source, including columns and original variable names.\n            // This is desirable so the in-browser debugger can correctly pause\n            // and show scoped variables with their original names.\n            config.devtool = 'eval-source-map';\n        }\n    } else {\n        if (ctx.isEdgeRuntime || ctx.isServer && ctx.serverSourceMaps || // Enable browser sourcemaps:\n        ctx.productionBrowserSourceMaps && ctx.isClient) {\n            config.devtool = 'source-map';\n        } else {\n            config.devtool = false;\n        }\n    }\n    if (!config.module) {\n        config.module = {\n            rules: []\n        };\n    }\n    config.plugins ??= [];\n    if (config.devtool === 'source-map' && !process.env.NEXT_RSPACK) {\n        config.plugins.push(new DevToolsIgnorePlugin({\n            shouldIgnorePath\n        }));\n    } else if (config.devtool === 'eval-source-map' && !process.env.NEXT_RSPACK) {\n        var _config_output;\n        // We're using a fork of `eval-source-map`\n        config.devtool = false;\n        config.plugins.push(new EvalSourceMapDevToolPlugin({\n            moduleFilenameTemplate: (_config_output = config.output) == null ? void 0 : _config_output.devtoolModuleFilenameTemplate,\n            shouldIgnorePath\n        }));\n    }\n    // TODO: add codemod for \"Should not import the named export\" with JSON files\n    // config.module.strictExportPresence = !isWebpack5\n    return config;\n});\n\n//# sourceMappingURL=base.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/build/webpack/plugins/rspack-profiling-plugin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892760346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// A basic implementation to allow loaders access to loaderContext.currentTraceSpan\nimport { getRspackCore } from '../../../shared/lib/get-rspack';\nconst pluginName = 'RspackProfilingPlugin';\nconst moduleSpansByCompilation = new WeakMap();\nexport const compilationSpans = new WeakMap();\nexport class RspackProfilingPlugin {\n    constructor({ runWebpackSpan }){\n        this.runWebpackSpan = runWebpackSpan;\n    }\n    apply(compiler) {\n        compiler.hooks.compilation.tap({\n            name: pluginName,\n            stage: -Infinity\n        }, (compilation)=>{\n            const rspack = getRspackCore();\n            moduleSpansByCompilation.set(compilation, new WeakMap());\n            compilationSpans.set(compilation, this.runWebpackSpan.traceChild('compilation-' + compilation.name));\n            const compilationSpan = this.runWebpackSpan.traceChild(`compilation-${compilation.name}`);\n            const moduleHooks = rspack.NormalModule.getCompilationHooks(compilation);\n            moduleHooks.loader.tap(pluginName, (loaderContext, module)=>{\n                var _moduleSpansByCompilation_get;\n                const moduleSpan = (_moduleSpansByCompilation_get = moduleSpansByCompilation.get(compilation)) == null ? void 0 : _moduleSpansByCompilation_get.get(module);\n                loaderContext.currentTraceSpan = moduleSpan;\n            });\n            compilation.hooks.buildModule.tap(pluginName, (module)=>{\n                var _moduleSpansByCompilation_get;\n                const span = compilationSpan.traceChild('build-module');\n                span.setAttribute('name', module.userRequest);\n                span.setAttribute('layer', module.layer);\n                moduleSpansByCompilation == null ? void 0 : (_moduleSpansByCompilation_get = moduleSpansByCompilation.get(compilation)) == null ? void 0 : _moduleSpansByCompilation_get.set(module, span);\n            });\n            compilation.hooks.succeedModule.tap(pluginName, (module)=>{\n                var _moduleSpansByCompilation_get_get, _moduleSpansByCompilation_get;\n                moduleSpansByCompilation == null ? void 0 : (_moduleSpansByCompilation_get = moduleSpansByCompilation.get(compilation)) == null ? void 0 : (_moduleSpansByCompilation_get_get = _moduleSpansByCompilation_get.get(module)) == null ? void 0 : _moduleSpansByCompilation_get_get.stop();\n            });\n        });\n    }\n}\n\n//# sourceMappingURL=rspack-profiling-plugin.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/build/webpack/plugins/define-env-plugin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892758574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { needsExperimentalReact } from '../../../lib/needs-experimental-react';\nimport { checkIsAppPPREnabled } from '../../../server/lib/experimental/ppr';\nimport { getNextConfigEnv, getNextPublicEnvironmentVariables } from '../../../lib/static-env';\nimport getWebpackBundler from '../../../shared/lib/get-webpack-bundler';\n/**\n * Serializes the DefineEnv config so that it can be inserted into the code by Webpack/Turbopack, JSON stringifies each value.\n */ function serializeDefineEnv(defineEnv) {\n    const defineEnvStringified = {};\n    for(const key in defineEnv){\n        const value = defineEnv[key];\n        defineEnvStringified[key] = JSON.stringify(value);\n    }\n    return defineEnvStringified;\n}\nfunction getImageConfig(config, dev) {\n    var _config_images, _config_images1, _config_images2;\n    return {\n        'process.env.__NEXT_IMAGE_OPTS': {\n            deviceSizes: config.images.deviceSizes,\n            imageSizes: config.images.imageSizes,\n            qualities: config.images.qualities,\n            path: config.images.path,\n            loader: config.images.loader,\n            dangerouslyAllowSVG: config.images.dangerouslyAllowSVG,\n            unoptimized: config == null ? void 0 : (_config_images = config.images) == null ? void 0 : _config_images.unoptimized,\n            ...dev ? {\n                // additional config in dev to allow validating on the client\n                domains: config.images.domains,\n                remotePatterns: (_config_images1 = config.images) == null ? void 0 : _config_images1.remotePatterns,\n                localPatterns: (_config_images2 = config.images) == null ? void 0 : _config_images2.localPatterns,\n                output: config.output\n            } : {}\n        }\n    };\n}\nexport function getDefineEnv({ isTurbopack, clientRouterFilters, config, dev, distDir, fetchCacheKeyPrefix, hasRewrites, isClient, isEdgeServer, isNodeOrEdgeCompilation, isNodeServer, middlewareMatchers, omitNonDeterministic }) {\n    var _config_experimental_staleTimes, _config_experimental_staleTimes1, _config_experimental_staleTimes2, _config_experimental_staleTimes3, _config_i18n, _config_compiler;\n    const nextPublicEnv = getNextPublicEnvironmentVariables();\n    const nextConfigEnv = getNextConfigEnv(config);\n    const isPPREnabled = checkIsAppPPREnabled(config.experimental.ppr);\n    const isDynamicIOEnabled = !!config.experimental.dynamicIO;\n    const isUseCacheEnabled = !!config.experimental.useCache;\n    const defineEnv = {\n        // internal field to identify the plugin config\n        __NEXT_DEFINE_ENV: true,\n        ...nextPublicEnv,\n        ...nextConfigEnv,\n        ...!isEdgeServer ? {} : {\n            EdgeRuntime: /**\n             * Cloud providers can set this environment variable to allow users\n             * and library authors to have different implementations based on\n             * the runtime they are running with, if it's not using `edge-runtime`\n             */ process.env.NEXT_EDGE_RUNTIME_PROVIDER ?? 'edge-runtime',\n            // process should be only { env: {...} } for edge runtime.\n            // For ignore avoid warn on `process.emit` usage but directly omit it.\n            'process.emit': false\n        },\n        'process.turbopack': isTurbopack,\n        'process.env.TURBOPACK': isTurbopack,\n        'process.env.__NEXT_BUNDLER': isTurbopack ? 'Turbopack' : process.env.NEXT_RSPACK ? 'Rspack' : 'Webpack',\n        // TODO: enforce `NODE_ENV` on `process.env`, and add a test:\n        'process.env.NODE_ENV': dev || config.experimental.allowDevelopmentBuild ? 'development' : 'production',\n        'process.env.NEXT_RUNTIME': isEdgeServer ? 'edge' : isNodeServer ? 'nodejs' : '',\n        'process.env.NEXT_MINIMAL': '',\n        'process.env.__NEXT_APP_NAV_FAIL_HANDLING': Boolean(config.experimental.appNavFailHandling),\n        'process.env.__NEXT_PPR': isPPREnabled,\n        'process.env.__NEXT_DYNAMIC_IO': isDynamicIOEnabled,\n        'process.env.__NEXT_USE_CACHE': isUseCacheEnabled,\n        'process.env.NEXT_DEPLOYMENT_ID': config.deploymentId || false,\n        // Propagates the `__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING` environment\n        // variable to the client.\n        'process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING': process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING || false,\n        'process.env.__NEXT_FETCH_CACHE_KEY_PREFIX': fetchCacheKeyPrefix ?? '',\n        ...isTurbopack ? {} : {\n            'process.env.__NEXT_MIDDLEWARE_MATCHERS': middlewareMatchers ?? []\n        },\n        'process.env.__NEXT_MANUAL_CLIENT_BASE_PATH': config.experimental.manualClientBasePath ?? false,\n        'process.env.__NEXT_CLIENT_ROUTER_DYNAMIC_STALETIME': JSON.stringify(isNaN(Number((_config_experimental_staleTimes = config.experimental.staleTimes) == null ? void 0 : _config_experimental_staleTimes.dynamic)) ? 0 : (_config_experimental_staleTimes1 = config.experimental.staleTimes) == null ? void 0 : _config_experimental_staleTimes1.dynamic),\n        'process.env.__NEXT_CLIENT_ROUTER_STATIC_STALETIME': JSON.stringify(isNaN(Number((_config_experimental_staleTimes2 = config.experimental.staleTimes) == null ? void 0 : _config_experimental_staleTimes2.static)) ? 5 * 60 // 5 minutes\n         : (_config_experimental_staleTimes3 = config.experimental.staleTimes) == null ? void 0 : _config_experimental_staleTimes3.static),\n        'process.env.__NEXT_CLIENT_ROUTER_FILTER_ENABLED': config.experimental.clientRouterFilter ?? true,\n        'process.env.__NEXT_CLIENT_ROUTER_S_FILTER': (clientRouterFilters == null ? void 0 : clientRouterFilters.staticFilter) ?? false,\n        'process.env.__NEXT_CLIENT_ROUTER_D_FILTER': (clientRouterFilters == null ? void 0 : clientRouterFilters.dynamicFilter) ?? false,\n        'process.env.__NEXT_CLIENT_SEGMENT_CACHE': Boolean(config.experimental.clientSegmentCache),\n        'process.env.__NEXT_DYNAMIC_ON_HOVER': Boolean(config.experimental.dynamicOnHover),\n        'process.env.__NEXT_ROUTER_BF_CACHE': Boolean(config.experimental.routerBFCache),\n        'process.env.__NEXT_OPTIMISTIC_CLIENT_CACHE': config.experimental.optimisticClientCache ?? true,\n        'process.env.__NEXT_MIDDLEWARE_PREFETCH': config.experimental.middlewarePrefetch ?? 'flexible',\n        'process.env.__NEXT_CROSS_ORIGIN': config.crossOrigin,\n        'process.browser': isClient,\n        'process.env.__NEXT_TEST_MODE': process.env.__NEXT_TEST_MODE ?? false,\n        // This is used in client/dev-error-overlay/hot-dev-client.js to replace the dist directory\n        ...dev && (isClient ?? isEdgeServer) ? {\n            'process.env.__NEXT_DIST_DIR': distDir\n        } : {},\n        'process.env.__NEXT_TRAILING_SLASH': config.trailingSlash,\n        'process.env.__NEXT_DEV_INDICATOR': config.devIndicators !== false,\n        'process.env.__NEXT_DEV_INDICATOR_POSITION': config.devIndicators === false ? 'bottom-left' // This will not be used as the indicator is disabled.\n         : config.devIndicators.position ?? 'bottom-left',\n        'process.env.__NEXT_STRICT_MODE': config.reactStrictMode === null ? false : config.reactStrictMode,\n        'process.env.__NEXT_STRICT_MODE_APP': // When next.config.js does not have reactStrictMode it's enabled by default.\n        config.reactStrictMode === null ? true : config.reactStrictMode,\n        'process.env.__NEXT_OPTIMIZE_CSS': (config.experimental.optimizeCss && !dev) ?? false,\n        'process.env.__NEXT_SCRIPT_WORKERS': (config.experimental.nextScriptWorkers && !dev) ?? false,\n        'process.env.__NEXT_SCROLL_RESTORATION': config.experimental.scrollRestoration ?? false,\n        ...getImageConfig(config, dev),\n        'process.env.__NEXT_ROUTER_BASEPATH': config.basePath,\n        'process.env.__NEXT_STRICT_NEXT_HEAD': config.experimental.strictNextHead ?? true,\n        'process.env.__NEXT_HAS_REWRITES': hasRewrites,\n        'process.env.__NEXT_CONFIG_OUTPUT': config.output,\n        'process.env.__NEXT_I18N_SUPPORT': !!config.i18n,\n        'process.env.__NEXT_I18N_DOMAINS': ((_config_i18n = config.i18n) == null ? void 0 : _config_i18n.domains) ?? false,\n        'process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE': config.skipMiddlewareUrlNormalize,\n        'process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE': config.experimental.externalMiddlewareRewritesResolve ?? false,\n        'process.env.__NEXT_MANUAL_TRAILING_SLASH': config.skipTrailingSlashRedirect,\n        'process.env.__NEXT_HAS_WEB_VITALS_ATTRIBUTION': (config.experimental.webVitalsAttribution && config.experimental.webVitalsAttribution.length > 0) ?? false,\n        'process.env.__NEXT_WEB_VITALS_ATTRIBUTION': config.experimental.webVitalsAttribution ?? false,\n        'process.env.__NEXT_LINK_NO_TOUCH_START': config.experimental.linkNoTouchStart ?? false,\n        'process.env.__NEXT_ASSET_PREFIX': config.assetPrefix,\n        'process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS': !!config.experimental.authInterrupts,\n        'process.env.__NEXT_TELEMETRY_DISABLED': Boolean(process.env.NEXT_TELEMETRY_DISABLED),\n        ...isNodeOrEdgeCompilation ? {\n            // Fix bad-actors in the npm ecosystem (e.g. `node-formidable`)\n            // This is typically found in unmaintained modules from the\n            // pre-webpack era (common in server-side code)\n            'global.GENTLY': false\n        } : undefined,\n        ...isNodeOrEdgeCompilation ? {\n            'process.env.__NEXT_EXPERIMENTAL_REACT': needsExperimentalReact(config)\n        } : undefined\n    };\n    const userDefines = ((_config_compiler = config.compiler) == null ? void 0 : _config_compiler.define) ?? {};\n    for(const key in userDefines){\n        if (defineEnv.hasOwnProperty(key)) {\n            throw Object.defineProperty(new Error(`The \\`compiler.define\\` option is configured to replace the \\`${key}\\` variable. This variable is either part of a Next.js built-in or is already configured via the \\`env\\` option.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E430\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        defineEnv[key] = userDefines[key];\n    }\n    const serializedDefineEnv = serializeDefineEnv(defineEnv);\n    // we delay inlining these values until after the build\n    // with flying shuttle enabled so we can update them\n    // without invalidating entries\n    if (!dev && omitNonDeterministic) {\n        // client uses window. instead of leaving process.env\n        // in case process isn't polyfilled on client already\n        // since by this point it won't be added by webpack\n        const safeKey = (key)=>isClient ? `window.${key.split('.').pop()}` : key;\n        for(const key in nextPublicEnv){\n            serializedDefineEnv[key] = safeKey(key);\n        }\n        for(const key in nextConfigEnv){\n            serializedDefineEnv[key] = safeKey(key);\n        }\n        for (const key of [\n            'process.env.NEXT_DEPLOYMENT_ID'\n        ]){\n            serializedDefineEnv[key] = safeKey(key);\n        }\n    }\n    return serializedDefineEnv;\n}\nexport function getDefineEnvPlugin(options) {\n    return new (getWebpackBundler()).DefinePlugin(getDefineEnv(options));\n}\n\n//# sourceMappingURL=define-env-plugin.js.map"
        }
    ]
}
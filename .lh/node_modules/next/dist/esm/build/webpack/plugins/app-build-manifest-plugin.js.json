{
    "sourceFile": "node_modules/next/dist/esm/build/webpack/plugins/app-build-manifest-plugin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892758126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { webpack, sources } from 'next/dist/compiled/webpack/webpack';\nimport { APP_BUILD_MANIFEST, CLIENT_STATIC_FILES_RUNTIME_MAIN_APP, SYSTEM_ENTRYPOINTS } from '../../../shared/lib/constants';\nimport { getEntrypointFiles } from './build-manifest-plugin';\nimport getAppRouteFromEntrypoint from '../../../server/get-app-route-from-entrypoint';\nconst PLUGIN_NAME = 'AppBuildManifestPlugin';\nexport class AppBuildManifestPlugin {\n    constructor(options){\n        this.dev = options.dev;\n    }\n    apply(compiler) {\n        compiler.hooks.make.tap(PLUGIN_NAME, (compilation)=>{\n            compilation.hooks.processAssets.tap({\n                name: PLUGIN_NAME,\n                stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS\n            }, ()=>this.createAsset(compilation));\n        });\n    }\n    createAsset(compilation) {\n        const manifest = {\n            pages: {}\n        };\n        const mainFiles = new Set(getEntrypointFiles(compilation.entrypoints.get(CLIENT_STATIC_FILES_RUNTIME_MAIN_APP)));\n        for (const entrypoint of compilation.entrypoints.values()){\n            if (!entrypoint.name) {\n                continue;\n            }\n            if (SYSTEM_ENTRYPOINTS.has(entrypoint.name)) {\n                continue;\n            }\n            const pagePath = getAppRouteFromEntrypoint(entrypoint.name);\n            if (!pagePath) {\n                continue;\n            }\n            const filesForPage = getEntrypointFiles(entrypoint);\n            manifest.pages[pagePath] = [\n                ...new Set([\n                    ...mainFiles,\n                    ...filesForPage\n                ])\n            ];\n        }\n        const json = JSON.stringify(manifest, null, 2);\n        compilation.emitAsset(APP_BUILD_MANIFEST, new sources.RawSource(json));\n    }\n}\n\n//# sourceMappingURL=app-build-manifest-plugin.js.map"
        }
    ]
}
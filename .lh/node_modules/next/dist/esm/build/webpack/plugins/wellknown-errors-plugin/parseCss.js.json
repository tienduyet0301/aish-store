{
    "sourceFile": "node_modules/next/dist/esm/build/webpack/plugins/wellknown-errors-plugin/parseCss.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892761041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { bold, cyan, red, yellow } from '../../../../lib/picocolors';\nimport { SimpleWebpackError } from './simpleWebpackError';\nconst regexCssError = /^(?:CssSyntaxError|SyntaxError)\\n\\n\\((\\d+):(\\d*)\\) (.*)$/s;\nexport function getCssError(fileName, err) {\n    if (!((err.name === 'CssSyntaxError' || err.name === 'SyntaxError') && err.stack === false && !(err instanceof SyntaxError))) {\n        return false;\n    }\n    // https://github.com/postcss/postcss-loader/blob/d6931da177ac79707bd758436e476036a55e4f59/src/Error.js\n    const res = regexCssError.exec(err.message);\n    if (res) {\n        const [, _lineNumber, _column, reason] = res;\n        const lineNumber = Math.max(1, parseInt(_lineNumber, 10));\n        const column = Math.max(1, parseInt(_column, 10));\n        return new SimpleWebpackError(`${cyan(fileName)}:${yellow(lineNumber.toString())}:${yellow(column.toString())}`, red(bold('Syntax error')).concat(`: ${reason}`));\n    }\n    return false;\n}\n\n//# sourceMappingURL=parseCss.js.map"
        }
    ]
}
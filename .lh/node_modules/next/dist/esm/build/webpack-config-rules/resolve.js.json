{
    "sourceFile": "node_modules/next/dist/esm/build/webpack-config-rules/resolve.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892761849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { COMPILER_NAMES } from '../../shared/lib/constants';\n// exports.<conditionName>\nexport const edgeConditionNames = [\n    'edge-light',\n    // inherits the default conditions\n    '...'\n];\nconst mainFieldsPerCompiler = {\n    // For default case, prefer CJS over ESM on server side. e.g. pages dir SSR\n    [COMPILER_NAMES.server]: [\n        'main',\n        'module'\n    ],\n    [COMPILER_NAMES.client]: [\n        'browser',\n        'module',\n        'main'\n    ],\n    // For bundling-all strategy, prefer ESM over CJS\n    'server-esm': [\n        'module',\n        'main'\n    ]\n};\nexport function getMainField(compilerType, preferEsm) {\n    if (compilerType === COMPILER_NAMES.edgeServer) {\n        return edgeConditionNames;\n    } else if (compilerType === COMPILER_NAMES.client) {\n        return mainFieldsPerCompiler[COMPILER_NAMES.client];\n    }\n    // Prefer module fields over main fields for isomorphic packages on server layer\n    return preferEsm ? mainFieldsPerCompiler['server-esm'] : mainFieldsPerCompiler[COMPILER_NAMES.server];\n}\n\n//# sourceMappingURL=resolve.js.map"
        }
    ]
}
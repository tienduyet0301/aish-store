{
    "sourceFile": "node_modules/next/dist/esm/build/analysis/parse-module.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892745034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { LRUCache } from '../../server/lib/lru-cache';\nimport { withPromiseCache } from '../../lib/with-promise-cache';\nimport { createHash } from 'crypto';\nimport { parse } from '../swc';\n/**\n * Parses a module with SWC using an LRU cache where the parsed module will\n * be indexed by a sha of its content holding up to 500 entries.\n */ export const parseModule = withPromiseCache(new LRUCache(500), async (filename, content)=>parse(content, {\n        isModule: 'unknown',\n        filename\n    }).catch(()=>null), (_, content)=>createHash('sha1').update(content).digest('hex'));\n\n//# sourceMappingURL=parse-module.js.map"
        }
    ]
}
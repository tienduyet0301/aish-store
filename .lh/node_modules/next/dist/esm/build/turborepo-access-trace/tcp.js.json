{
    "sourceFile": "node_modules/next/dist/esm/build/turborepo-access-trace/tcp.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892751569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import net from 'net';\n/**\n * Proxy the TCP connect method to determine if any network access is made during the build\n *\n * @param addresses An array to track the addresses that are accessed.\n * @returns A function that restores the original connect method.\n */ export function tcpProxy(addresses) {\n    // net.Socket docs https://nodejs.org/api/net.html#class-netsocket\n    const originalConnect = net.Socket.prototype.connect;\n    // Override the connect method\n    net.Socket.prototype.connect = function(...args) {\n        // First, check if the first argument is an object and not null\n        if (typeof args[0] === 'object' && args[0] !== null) {\n            const options = args[0];\n            // check if the options has what we need\n            if ('port' in options && options.port !== undefined && 'host' in options && options.host !== undefined) {\n                addresses.push({\n                    addr: options.host,\n                    port: options.port.toString()\n                });\n            }\n        }\n        return originalConnect.apply(this, args);\n    };\n    return ()=>{\n        // Restore the original connect method\n        net.Socket.prototype.connect = originalConnect;\n    };\n}\n\n//# sourceMappingURL=tcp.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/server/route-matcher-providers/dev/helpers/file-reader/default-file-reader.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892839830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { recursiveReadDir } from '../../../../../lib/recursive-readdir';\n/**\n * Reads all the files in the directory and its subdirectories following any\n * symbolic links.\n */ export class DefaultFileReader {\n    /**\n   * Creates a new file reader.\n   *\n   * @param pathnameFilter filter to ignore files with absolute pathnames, false to ignore\n   * @param ignoreFilter filter to ignore files and directories with absolute pathnames, false to ignore\n   * @param ignorePartFilter filter to ignore files and directories with the pathname part, false to ignore\n   */ constructor(options){\n        this.options = options;\n    }\n    /**\n   * Reads all the files in the directory and its subdirectories following any\n   * symbolic links.\n   *\n   * @param dir the directory to read\n   * @returns a promise that resolves to the list of files\n   */ async read(dir) {\n        return recursiveReadDir(dir, {\n            pathnameFilter: this.options.pathnameFilter,\n            ignoreFilter: this.options.ignoreFilter,\n            ignorePartFilter: this.options.ignorePartFilter,\n            // We don't need to sort the results because we're not depending on the\n            // order of the results.\n            sortPathnames: false,\n            // We want absolute pathnames because we're going to be comparing them\n            // with other absolute pathnames.\n            relativePathnames: false\n        });\n    }\n}\n\n//# sourceMappingURL=default-file-reader.js.map"
        }
    ]
}
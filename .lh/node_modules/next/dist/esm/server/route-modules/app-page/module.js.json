{
    "sourceFile": "node_modules/next/dist/esm/server/route-modules/app-page/module.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892840952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { renderToHTMLOrFlight } from '../../app-render/app-render';\nimport { RouteModule } from '../route-module';\nimport * as vendoredContexts from './vendored/contexts/entrypoints';\nlet vendoredReactRSC;\nlet vendoredReactSSR;\n// the vendored Reacts are loaded from their original source in the edge runtime\nif (process.env.NEXT_RUNTIME !== 'edge') {\n    vendoredReactRSC = require('./vendored/rsc/entrypoints');\n    vendoredReactSSR = require('./vendored/ssr/entrypoints');\n}\nexport class AppPageRouteModule extends RouteModule {\n    render(req, res, context) {\n        return renderToHTMLOrFlight(req, res, context.page, context.query, context.fallbackRouteParams, context.renderOpts, context.serverComponentsHmrCache, false, context.sharedContext);\n    }\n    warmup(req, res, context) {\n        return renderToHTMLOrFlight(req, res, context.page, context.query, context.fallbackRouteParams, context.renderOpts, context.serverComponentsHmrCache, true, context.sharedContext);\n    }\n}\nconst vendored = {\n    'react-rsc': vendoredReactRSC,\n    'react-ssr': vendoredReactSSR,\n    contexts: vendoredContexts\n};\nexport { renderToHTMLOrFlight, vendored };\nexport default AppPageRouteModule;\n\n//# sourceMappingURL=module.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/server/route-modules/pages-api/module.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892844503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { wrapApiHandler } from '../../api-utils';\nimport { RouteModule } from '../route-module';\nimport { apiResolver } from '../../api-utils/node/api-resolver';\nexport class PagesAPIRouteModule extends RouteModule {\n    constructor(options){\n        super(options);\n        if (typeof options.userland.default !== 'function') {\n            throw Object.defineProperty(new Error(`Page ${options.definition.page} does not export a default function.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E379\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.apiResolverWrapped = wrapApiHandler(options.definition.page, apiResolver);\n    }\n    /**\n   *\n   * @param req the incoming server request\n   * @param res the outgoing server response\n   * @param context the context for the render\n   */ async render(req, res, context) {\n        const { apiResolverWrapped } = this;\n        await apiResolverWrapped(req, res, context.query, this.userland, {\n            ...context.previewProps,\n            revalidate: context.revalidate,\n            trustHostHeader: context.trustHostHeader,\n            allowedRevalidateHeaderKeys: context.allowedRevalidateHeaderKeys,\n            hostname: context.hostname,\n            multiZoneDraftMode: context.multiZoneDraftMode,\n            dev: context.dev\n        }, context.minimalMode, context.dev, context.page, context.onError);\n    }\n}\nexport default PagesAPIRouteModule;\n\n//# sourceMappingURL=module.js.map"
        }
    ]
}
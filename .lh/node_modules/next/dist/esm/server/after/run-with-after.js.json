{
    "sourceFile": "node_modules/next/dist/esm/server/after/run-with-after.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892819205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { DetachedPromise } from '../../lib/detached-promise';\nimport { CloseController } from '../web/web-on-close';\nimport { AwaiterOnce } from './awaiter';\nexport class AfterRunner {\n    async executeAfter() {\n        this.closeController.dispatchClose();\n        await this.awaiter.awaiting();\n        // if we got an error while running the callbacks,\n        // thenthis is a noop, because the promise is already rejected\n        this.finishedWithoutErrors.resolve();\n        return this.finishedWithoutErrors.promise;\n    }\n    constructor(){\n        this.awaiter = new AwaiterOnce();\n        this.closeController = new CloseController();\n        this.finishedWithoutErrors = new DetachedPromise();\n        this.context = {\n            waitUntil: this.awaiter.waitUntil.bind(this.awaiter),\n            onClose: this.closeController.onClose.bind(this.closeController),\n            onTaskError: (error)=>this.finishedWithoutErrors.reject(error)\n        };\n    }\n}\n\n//# sourceMappingURL=run-with-after.js.map"
        }
    ]
}
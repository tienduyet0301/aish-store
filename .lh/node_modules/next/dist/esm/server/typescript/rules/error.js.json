{
    "sourceFile": "node_modules/next/dist/esm/server/typescript/rules/error.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892845398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// This module provides intellisense for all components that has the `\"use client\"` directive.\nimport { NEXT_TS_ERRORS } from '../constant';\nimport { getTs } from '../utils';\nconst errorEntry = {\n    getSemanticDiagnostics (source, isClientEntry) {\n        const isErrorFile = /[\\\\/]error\\.tsx?$/.test(source.fileName);\n        const isGlobalErrorFile = /[\\\\/]global-error\\.tsx?$/.test(source.fileName);\n        if (!isErrorFile && !isGlobalErrorFile) return [];\n        const ts = getTs();\n        if (!isClientEntry) {\n            // Error components must be Client components\n            return [\n                {\n                    file: source,\n                    category: ts.DiagnosticCategory.Error,\n                    code: NEXT_TS_ERRORS.INVALID_ERROR_COMPONENT,\n                    messageText: `Error Components must be Client Components, please add the \"use client\" directive: https://nextjs.org/docs/app/api-reference/file-conventions/error`,\n                    start: 0,\n                    length: source.text.length\n                }\n            ];\n        }\n        return [];\n    }\n};\nexport default errorEntry;\n\n//# sourceMappingURL=error.js.map"
        }
    ]
}
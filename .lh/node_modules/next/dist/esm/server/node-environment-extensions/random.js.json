{
    "sourceFile": "node_modules/next/dist/esm/server/node-environment-extensions/random.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892834653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * We extend Math.random() during builds and revalidates to ensure that prerenders don't observe randomness\n * When dynamicIO is enabled. randomness is a form of IO even though it resolves synchronously. When dyanmicIO is\n * enabled we need to ensure that randomness is excluded from prerenders.\n *\n * The extensions here never error nor alter the random generation itself and thus should be transparent to callers.\n */ import { io } from './utils';\nconst expression = '`Math.random()`';\ntry {\n    const _random = Math.random;\n    Math.random = (function random() {\n        io(expression, 'random');\n        return _random.apply(null, arguments);\n    // We bind here to alter the `toString` printing to match `Math.random`'s native `toString`.\n    // eslint-disable-next-line no-extra-bind\n    }).bind(null);\n    Object.defineProperty(Math.random, 'name', {\n        value: 'random'\n    });\n} catch  {\n    console.error(`Failed to install ${expression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`);\n}\n\n//# sourceMappingURL=random.js.map"
        }
    ]
}
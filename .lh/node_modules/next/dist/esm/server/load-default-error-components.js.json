{
    "sourceFile": "node_modules/next/dist/esm/server/load-default-error-components.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892834015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { BUILD_MANIFEST } from '../shared/lib/constants';\nimport { join } from 'path';\nimport { interopDefault } from '../lib/interop-default';\nimport { getTracer } from './lib/trace/tracer';\nimport { LoadComponentsSpan } from './lib/trace/constants';\nimport { loadManifestWithRetries } from './load-components';\nasync function loadDefaultErrorComponentsImpl(distDir) {\n    const Document = interopDefault(require('next/dist/pages/_document'));\n    const AppMod = require('next/dist/pages/_app');\n    const App = interopDefault(AppMod);\n    // Load the compiled route module for this builtin error.\n    // TODO: (wyattjoh) replace this with just exporting the route module when the transition is complete\n    const ComponentMod = require('./route-modules/pages/builtin/_error');\n    const Component = ComponentMod.routeModule.userland.default;\n    return {\n        App,\n        Document,\n        Component,\n        pageConfig: {},\n        buildManifest: await loadManifestWithRetries(join(distDir, `fallback-${BUILD_MANIFEST}`)),\n        reactLoadableManifest: {},\n        ComponentMod,\n        page: '/_error',\n        routeModule: ComponentMod.routeModule\n    };\n}\nexport const loadDefaultErrorComponents = getTracer().wrap(LoadComponentsSpan.loadDefaultErrorComponents, loadDefaultErrorComponentsImpl);\n\n//# sourceMappingURL=load-default-error-components.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/server/app-render/get-css-inlined-link-tags.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892823601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * Get external stylesheet link hrefs based on server CSS manifest.\n */ export function getLinkAndScriptTags(clientReferenceManifest, filePath, injectedCSS, injectedScripts, collectNewImports) {\n    var _clientReferenceManifest_entryJSFiles;\n    const filePathWithoutExt = filePath.replace(/\\.[^.]+$/, '');\n    const cssChunks = new Set();\n    const jsChunks = new Set();\n    const entryCSSFiles = clientReferenceManifest.entryCSSFiles[filePathWithoutExt];\n    const entryJSFiles = ((_clientReferenceManifest_entryJSFiles = clientReferenceManifest.entryJSFiles) == null ? void 0 : _clientReferenceManifest_entryJSFiles[filePathWithoutExt]) ?? [];\n    if (entryCSSFiles) {\n        for (const css of entryCSSFiles){\n            if (!injectedCSS.has(css.path)) {\n                if (collectNewImports) {\n                    injectedCSS.add(css.path);\n                }\n                cssChunks.add(css);\n            }\n        }\n    }\n    if (entryJSFiles) {\n        for (const file of entryJSFiles){\n            if (!injectedScripts.has(file)) {\n                if (collectNewImports) {\n                    injectedScripts.add(file);\n                }\n                jsChunks.add(file);\n            }\n        }\n    }\n    return {\n        styles: [\n            ...cssChunks\n        ],\n        scripts: [\n            ...jsChunks\n        ]\n    };\n}\n\n//# sourceMappingURL=get-css-inlined-link-tags.js.map"
        }
    ]
}
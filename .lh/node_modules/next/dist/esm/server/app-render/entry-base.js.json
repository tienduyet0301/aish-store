{
    "sourceFile": "node_modules/next/dist/esm/server/app-render/entry-base.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892823444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// eslint-disable-next-line import/no-extraneous-dependencies\nexport { createTemporaryReferenceSet, renderToReadableStream, decodeReply, decodeAction, decodeFormState } from 'react-server-dom-webpack/server.edge';\n// eslint-disable-next-line import/no-extraneous-dependencies\nexport { unstable_prerender as prerender } from 'react-server-dom-webpack/static.edge';\nimport LayoutRouter from '../../client/components/layout-router';\nimport RenderFromTemplateContext from '../../client/components/render-from-template-context';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { actionAsyncStorage } from '../app-render/action-async-storage.external';\nimport { ClientPageRoot } from '../../client/components/client-page';\nimport { ClientSegmentRoot } from '../../client/components/client-segment';\nimport { createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage } from '../request/search-params';\nimport { createServerParamsForServerSegment, createPrerenderParamsForClientSegment } from '../request/params';\nimport * as serverHooks from '../../client/components/hooks-server-context';\nimport { HTTPAccessFallbackBoundary } from '../../client/components/http-access-fallback/error-boundary';\nimport { createMetadataComponents } from '../../lib/metadata/metadata';\nimport { patchFetch as _patchFetch } from '../lib/patch-fetch';\n// not being used but needs to be included in the client manifest for /_not-found\nimport '../../client/components/error-boundary';\nimport { MetadataBoundary, ViewportBoundary, OutletBoundary } from '../../client/components/metadata/metadata-boundary';\nimport { preloadStyle, preloadFont, preconnect } from './rsc/preloads';\nimport { Postpone } from './rsc/postpone';\nimport { taintObjectReference } from './rsc/taint';\nexport { collectSegmentData } from './collect-segment-data';\n// patchFetch makes use of APIs such as `React.unstable_postpone` which are only available\n// in the experimental channel of React, so export it from here so that it comes from the bundled runtime\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { LayoutRouter, RenderFromTemplateContext, workAsyncStorage, workUnitAsyncStorage, actionAsyncStorage, createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage, createServerParamsForServerSegment, createPrerenderParamsForClientSegment, serverHooks, preloadStyle, preloadFont, preconnect, Postpone, MetadataBoundary, ViewportBoundary, OutletBoundary, taintObjectReference, ClientPageRoot, ClientSegmentRoot, HTTPAccessFallbackBoundary, patchFetch, createMetadataComponents,  };\n\n//# sourceMappingURL=entry-base.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/server/lib/server-ipc/utils.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892833051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export const ipcForbiddenHeaders = [\n    'accept-encoding',\n    'keepalive',\n    'keep-alive',\n    'content-encoding',\n    'transfer-encoding',\n    // https://github.com/nodejs/undici/issues/1470\n    'connection',\n    // marked as unsupported by undici: https://github.com/nodejs/undici/blob/c83b084879fa0bb8e0469d31ec61428ac68160d5/lib/core/request.js#L354\n    'expect'\n];\nexport const actionsForbiddenHeaders = [\n    ...ipcForbiddenHeaders,\n    'content-length',\n    'set-cookie'\n];\nexport const filterReqHeaders = (headers, forbiddenHeaders)=>{\n    // Some browsers are not matching spec and sending Content-Length: 0. This causes issues in undici\n    // https://github.com/nodejs/undici/issues/2046\n    if (headers['content-length'] && headers['content-length'] === '0') {\n        delete headers['content-length'];\n    }\n    for (const [key, value] of Object.entries(headers)){\n        if (forbiddenHeaders.includes(key) || !(Array.isArray(value) || typeof value === 'string')) {\n            delete headers[key];\n        }\n    }\n    return headers;\n};\n// These are headers that are only used internally and should\n// not be honored from the external request\nconst INTERNAL_HEADERS = [\n    'x-middleware-rewrite',\n    'x-middleware-redirect',\n    'x-middleware-set-cookie',\n    'x-middleware-skip',\n    'x-middleware-override-headers',\n    'x-middleware-next',\n    'x-now-route-matches',\n    'x-matched-path'\n];\nexport const filterInternalHeaders = (headers)=>{\n    for(const header in headers){\n        if (INTERNAL_HEADERS.includes(header)) {\n            delete headers[header];\n        }\n    }\n};\n\n//# sourceMappingURL=utils.js.map"
        }
    ]
}
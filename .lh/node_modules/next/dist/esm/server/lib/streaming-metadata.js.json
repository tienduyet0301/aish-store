{
    "sourceFile": "node_modules/next/dist/esm/server/lib/streaming-metadata.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892833351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { getBotType, HTML_LIMITED_BOT_UA_RE_STRING } from '../../shared/lib/router/utils/is-bot';\nexport function shouldServeStreamingMetadata(userAgent, htmlLimitedBots) {\n    const blockingMetadataUARegex = new RegExp(htmlLimitedBots || HTML_LIMITED_BOT_UA_RE_STRING, 'i');\n    return(// When it's static generation, userAgents are not available - do not serve streaming metadata\n    !!userAgent && !blockingMetadataUARegex.test(userAgent));\n}\n// When the request UA is a html-limited bot, we should do a dynamic render.\n// In this case, postpone state is not sent.\nexport function isHtmlBotRequest(req) {\n    const ua = req.headers['user-agent'] || '';\n    const botType = getBotType(ua);\n    return botType === 'html';\n}\n\n//# sourceMappingURL=streaming-metadata.js.map"
        }
    ]
}
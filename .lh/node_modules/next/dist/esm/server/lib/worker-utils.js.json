{
    "sourceFile": "node_modules/next/dist/esm/server/lib/worker-utils.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892833845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import http from 'http';\nexport const getFreePort = async ()=>{\n    return new Promise((resolve, reject)=>{\n        const server = http.createServer(()=>{});\n        server.listen(0, ()=>{\n            const address = server.address();\n            server.close();\n            if (address && typeof address === 'object') {\n                resolve(address.port);\n            } else {\n                reject(Object.defineProperty(new Error('invalid address from server: ' + (address == null ? void 0 : address.toString())), \"__NEXT_ERROR_CODE\", {\n                    value: \"E327\",\n                    enumerable: false,\n                    configurable: true\n                }));\n            }\n        });\n    });\n};\n\n//# sourceMappingURL=worker-utils.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/server/lib/router-utils/build-data-route.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892832299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import path from '../../../shared/lib/isomorphic/path';\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path';\nimport { isDynamicRoute } from '../../../shared/lib/router/utils/is-dynamic';\nimport { getNamedRouteRegex } from '../../../shared/lib/router/utils/route-regex';\nimport { normalizeRouteRegex } from '../../../lib/load-custom-routes';\nimport { escapeStringRegexp } from '../../../shared/lib/escape-regexp';\nexport function buildDataRoute(page, buildId) {\n    const pagePath = normalizePagePath(page);\n    const dataRoute = path.posix.join('/_next/data', buildId, `${pagePath}.json`);\n    let dataRouteRegex;\n    let namedDataRouteRegex;\n    let routeKeys;\n    if (isDynamicRoute(page)) {\n        const routeRegex = getNamedRouteRegex(dataRoute, {\n            prefixRouteKeys: true,\n            includeSuffix: true,\n            excludeOptionalTrailingSlash: true\n        });\n        dataRouteRegex = normalizeRouteRegex(routeRegex.re.source);\n        namedDataRouteRegex = routeRegex.namedRegex;\n        routeKeys = routeRegex.routeKeys;\n    } else {\n        dataRouteRegex = normalizeRouteRegex(new RegExp(`^${path.posix.join('/_next/data', escapeStringRegexp(buildId), `${pagePath}\\\\.json`)}$`).source);\n    }\n    return {\n        page,\n        routeKeys,\n        dataRouteRegex,\n        namedDataRouteRegex\n    };\n}\n\n//# sourceMappingURL=build-data-route.js.map"
        }
    ]
}
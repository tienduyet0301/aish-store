{
    "sourceFile": "node_modules/next/dist/esm/server/normalizers/request/prefix.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892836028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export class PrefixPathnameNormalizer {\n    constructor(prefix){\n        this.prefix = prefix;\n        if (prefix.endsWith('/')) {\n            throw Object.defineProperty(new Error(`PrefixPathnameNormalizer: prefix \"${prefix}\" should not end with a slash`), \"__NEXT_ERROR_CODE\", {\n                value: \"E219\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    match(pathname) {\n        // If the pathname doesn't start with the prefix, we don't match.\n        if (pathname !== this.prefix && !pathname.startsWith(this.prefix + '/')) {\n            return false;\n        }\n        return true;\n    }\n    normalize(pathname, matched) {\n        // If we're not matched and we don't match, we don't need to normalize.\n        if (!matched && !this.match(pathname)) return pathname;\n        if (pathname.length === this.prefix.length) {\n            return '/';\n        }\n        return pathname.substring(this.prefix.length);\n    }\n}\n\n//# sourceMappingURL=prefix.js.map"
        }
    ]
}
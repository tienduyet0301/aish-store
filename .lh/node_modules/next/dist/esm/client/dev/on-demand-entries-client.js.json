{
    "sourceFile": "node_modules/next/dist/esm/client/dev/on-demand-entries-client.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892786781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import Router from '../router';\nimport { sendMessage } from '../components/react-dev-overlay/pages/websocket';\nexport default (async (page)=>{\n    // Never send pings when using Turbopack as it's not used.\n    // Pings were originally used to keep track of active routes in on-demand-entries with webpack.\n    if (process.env.TURBOPACK) {\n        return;\n    }\n    if (page) {\n        // in AMP the router isn't initialized on the client and\n        // client-transitions don't occur so ping initial page\n        setInterval(()=>{\n            sendMessage(JSON.stringify({\n                event: 'ping',\n                page\n            }));\n        }, 2500);\n    } else {\n        Router.ready(()=>{\n            setInterval(()=>{\n                // when notFound: true is returned we should use the notFoundPage\n                // as the Router.pathname will point to the 404 page but we want\n                // to ping the source page that returned notFound: true instead\n                const notFoundSrcPage = self.__NEXT_DATA__.notFoundSrcPage;\n                const pathname = (Router.pathname === '/404' || Router.pathname === '/_error') && notFoundSrcPage ? notFoundSrcPage : Router.pathname;\n                sendMessage(JSON.stringify({\n                    event: 'ping',\n                    page: pathname\n                }));\n            }, 2500);\n        });\n    }\n});\n\n//# sourceMappingURL=on-demand-entries-client.js.map"
        }
    ]
}
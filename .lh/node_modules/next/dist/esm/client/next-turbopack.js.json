{
    "sourceFile": "node_modules/next/dist/esm/client/next-turbopack.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892789102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// A client-side entry point for Turbopack builds. Includes logic to load chunks,\n// but does not include development-time features like hot module reloading.\nimport '../lib/require-instrumentation-client';\n// TODO: Remove use of `any` type.\nimport { initialize, version, router, emitter, hydrate } from './';\n// TODO: This seems necessary, but is a module in the `dev` directory.\nimport { displayContent } from './dev/fouc';\nwindow.next = {\n    version: \"\" + version + \"-turbo\",\n    // router is initialized later so it has to be live-binded\n    get router () {\n        return router;\n    },\n    emitter\n};\nself.__next_set_public_path__ = ()=>{};\nself.__webpack_hash__ = '';\ninitialize({}).then(()=>{\n    // for the page loader\n    ;\n    self.__turbopack_load_page_chunks__ = (page, chunksData)=>{\n        const chunkPromises = chunksData.map(__turbopack_load__);\n        Promise.all(chunkPromises).catch((err)=>console.error('failed to load chunks for page ' + page, err));\n    };\n    return hydrate({\n        beforeRender: displayContent\n    });\n}).catch((err)=>{\n    console.error('Error was not caught', err);\n});\n\n//# sourceMappingURL=next-turbopack.js.map"
        }
    ]
}
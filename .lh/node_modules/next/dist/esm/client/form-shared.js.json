{
    "sourceFile": "node_modules/next/dist/esm/client/form-shared.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892786927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export const DISALLOWED_FORM_PROPS = [\n    'method',\n    'encType',\n    'target'\n];\nexport function createFormSubmitDestinationUrl(action, formElement) {\n    let targetUrl;\n    try {\n        // NOTE: It might be more correct to resolve URLs relative to `document.baseURI`,\n        // but we already do it relative to `location.href` elsewhere:\n        //  (see e.g. https://github.com/vercel/next.js/blob/bb0e6722f87ceb2d43015f5b8a413d0072f2badf/packages/next/src/client/components/app-router.tsx#L146)\n        // so it's better to stay consistent.\n        const base = window.location.href;\n        targetUrl = new URL(action, base);\n    } catch (err) {\n        throw Object.defineProperty(new Error('Cannot parse form action \"' + action + '\" as a URL', {\n            cause: err\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E152\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (targetUrl.searchParams.size) {\n        // url-encoded HTML forms *overwrite* any search params in the `action` url:\n        //\n        //  \"Let `query` be the result of running the application/x-www-form-urlencoded serializer [...]\"\n        //  \"Set parsed action's query component to `query`.\"\n        //   https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#submit-mutate-action\n        //\n        // We need to match that.\n        // (note that all other parts of the URL, like `hash`, are preserved)\n        targetUrl.search = '';\n    }\n    const formData = new FormData(formElement);\n    for (let [name, value] of formData){\n        if (typeof value !== 'string') {\n            // For file inputs, the native browser behavior is to use the filename as the value instead:\n            //\n            //   \"If entry's value is a File object, then let value be entry's value's name. Otherwise, let value be entry's value.\"\n            //   https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n            //\n            if (process.env.NODE_ENV === 'development') {\n                console.warn(\"<Form> only supports file inputs if `action` is a function. File inputs cannot be used if `action` is a string, \" + \"because files cannot be encoded as search params.\");\n            }\n            value = value.name;\n        }\n        targetUrl.searchParams.append(name, value);\n    }\n    return targetUrl;\n}\nexport function checkFormActionUrl(action, source) {\n    const aPropName = source === 'action' ? \"an `action`\" : \"a `formAction`\";\n    let testUrl;\n    try {\n        testUrl = new URL(action, 'http://n');\n    } catch (err) {\n        console.error(\"<Form> received \" + aPropName + ' that cannot be parsed as a URL: \"' + action + '\".');\n        return;\n    }\n    // url-encoded HTML forms ignore any queryparams in the `action` url. We need to match that.\n    if (testUrl.searchParams.size) {\n        console.warn(\"<Form> received \" + aPropName + ' that contains search params: \"' + action + '\". This is not supported, and they will be ignored. ' + 'If you need to pass in additional search params, use an `<input type=\"hidden\" />` instead.');\n    }\n}\nexport const isSupportedFormEncType = (value)=>value === 'application/x-www-form-urlencoded';\nexport const isSupportedFormMethod = (value)=>value === 'get';\nexport const isSupportedFormTarget = (value)=>value === '_self';\nexport function hasUnsupportedSubmitterAttributes(submitter) {\n    // A submitter can override `encType` for the form.\n    const formEncType = submitter.getAttribute('formEncType');\n    if (formEncType !== null && !isSupportedFormEncType(formEncType)) {\n        if (process.env.NODE_ENV === 'development') {\n            console.error(\"<Form>'s `encType` was set to an unsupported value via `formEncType=\\\"\" + formEncType + '\"`. ' + \"This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.\");\n        }\n        return true;\n    }\n    // A submitter can override `method` for the form.\n    const formMethod = submitter.getAttribute('formMethod');\n    if (formMethod !== null && !isSupportedFormMethod(formMethod)) {\n        if (process.env.NODE_ENV === 'development') {\n            console.error(\"<Form>'s `method` was set to an unsupported value via `formMethod=\\\"\" + formMethod + '\"`. ' + \"This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.\");\n        }\n        return true;\n    }\n    // A submitter can override `target` for the form.\n    const formTarget = submitter.getAttribute('formTarget');\n    if (formTarget !== null && !isSupportedFormTarget(formTarget)) {\n        if (process.env.NODE_ENV === 'development') {\n            console.error(\"<Form>'s `target` was set to an unsupported value via `formTarget=\\\"\" + formTarget + '\"`. ' + \"This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.\");\n        }\n        return true;\n    }\n    return false;\n}\nexport function hasReactClientActionAttributes(submitter) {\n    // CSR: https://github.com/facebook/react/blob/942eb80381b96f8410eab1bef1c539bed1ab0eb1/packages/react-dom-bindings/src/client/ReactDOMComponent.js#L482-L487\n    // SSR: https://github.com/facebook/react/blob/942eb80381b96f8410eab1bef1c539bed1ab0eb1/packages/react-dom-bindings/src/client/ReactDOMComponent.js#L2401\n    const action = submitter.getAttribute('formAction');\n    return action && /\\s*javascript:/i.test(action);\n}\n\n//# sourceMappingURL=form-shared.js.map"
        }
    ]
}
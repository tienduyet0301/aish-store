{
    "sourceFile": "node_modules/next/dist/esm/client/components/globals/intercept-console-error.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892764964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import isError from '../../../lib/is-error';\nimport { isNextRouterError } from '../is-next-router-error';\nimport { handleConsoleError } from '../errors/use-error-handler';\nimport { parseConsoleArgs } from '../../lib/console';\nexport const originConsoleError = globalThis.console.error;\n// Patch console.error to collect information about hydration errors\nexport function patchConsoleError() {\n    // Ensure it's only patched once\n    if (typeof window === 'undefined') {\n        return;\n    }\n    window.console.error = function error() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        let maybeError;\n        if (process.env.NODE_ENV !== 'production') {\n            const { error: replayedError } = parseConsoleArgs(args);\n            if (replayedError) {\n                maybeError = replayedError;\n            } else if (isError(args[0])) {\n                maybeError = args[0];\n            } else {\n                // See https://github.com/facebook/react/blob/d50323eb845c5fde0d720cae888bf35dedd05506/packages/react-reconciler/src/ReactFiberErrorLogger.js#L78\n                maybeError = args[1];\n            }\n        } else {\n            maybeError = args[0];\n        }\n        if (!isNextRouterError(maybeError)) {\n            if (process.env.NODE_ENV !== 'production') {\n                handleConsoleError(// replayed errors have their own complex format string that should be used,\n                // but if we pass the error directly, `handleClientError` will ignore it\n                maybeError, args);\n            }\n            originConsoleError.apply(window.console, args);\n        }\n    };\n}\n\n//# sourceMappingURL=intercept-console-error.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/client/components/metadata/server-inserted-metadata.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892766401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { use, useContext } from 'react';\nimport { ServerInsertedMetadataContext } from '../../../shared/lib/server-inserted-metadata.shared-runtime';\n// Receives a metadata resolver setter from the context, and will pass the metadata resolving promise to\n// the context where we gonna use it to resolve the metadata, and render as string to append in <body>.\nconst useServerInsertedMetadata = (metadataResolver)=>{\n    const setMetadataResolver = useContext(ServerInsertedMetadataContext);\n    if (setMetadataResolver) {\n        setMetadataResolver(metadataResolver);\n    }\n};\nexport function ServerInsertMetadata(param) {\n    let { promise } = param;\n    // Apply use() to the metadata promise to suspend the rendering in SSR.\n    const { metadata } = use(promise);\n    // Insert metadata into the HTML stream through the `useServerInsertedMetadata`\n    useServerInsertedMetadata(()=>metadata);\n    return null;\n}\n\n//# sourceMappingURL=server-inserted-metadata.js.map"
        }
    ]
}
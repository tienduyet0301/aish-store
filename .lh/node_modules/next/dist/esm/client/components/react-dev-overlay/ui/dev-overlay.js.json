{
    "sourceFile": "node_modules/next/dist/esm/client/components/react-dev-overlay/ui/dev-overlay.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892775781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { ShadowPortal } from './components/shadow-portal';\nimport { Base } from './styles/base';\nimport { ComponentStyles } from './styles/component-styles';\nimport { CssReset } from './styles/css-reset';\nimport { Colors } from './styles/colors';\nimport { ErrorOverlay } from './components/errors/error-overlay/error-overlay';\nimport { DevToolsIndicator } from './components/errors/dev-tools-indicator/dev-tools-indicator';\nimport { RenderError } from './container/runtime-error/render-error';\nimport { DarkTheme } from './styles/dark-theme';\nimport { useDevToolsScale } from './components/errors/dev-tools-indicator/dev-tools-info/preferences';\nexport function DevOverlay(param) {\n    let { state, isErrorOverlayOpen, setIsErrorOverlayOpen } = param;\n    const [scale, setScale] = useDevToolsScale();\n    return /*#__PURE__*/ _jsxs(ShadowPortal, {\n        children: [\n            /*#__PURE__*/ _jsx(CssReset, {}),\n            /*#__PURE__*/ _jsx(Base, {\n                scale: scale\n            }),\n            /*#__PURE__*/ _jsx(Colors, {}),\n            /*#__PURE__*/ _jsx(ComponentStyles, {}),\n            /*#__PURE__*/ _jsx(DarkTheme, {}),\n            /*#__PURE__*/ _jsx(RenderError, {\n                state: state,\n                isAppDir: true,\n                children: (param)=>{\n                    let { runtimeErrors, totalErrorCount } = param;\n                    const isBuildError = state.buildError !== null;\n                    return /*#__PURE__*/ _jsxs(_Fragment, {\n                        children: [\n                            state.showIndicator && /*#__PURE__*/ _jsx(DevToolsIndicator, {\n                                scale: scale,\n                                setScale: setScale,\n                                state: state,\n                                errorCount: totalErrorCount,\n                                isBuildError: isBuildError,\n                                setIsErrorOverlayOpen: setIsErrorOverlayOpen\n                            }),\n                            /*#__PURE__*/ _jsx(ErrorOverlay, {\n                                state: state,\n                                runtimeErrors: runtimeErrors,\n                                isErrorOverlayOpen: isErrorOverlayOpen,\n                                setIsErrorOverlayOpen: setIsErrorOverlayOpen\n                            })\n                        ]\n                    });\n                }\n            })\n        ]\n    });\n}\n\n//# sourceMappingURL=dev-overlay.js.map"
        }
    ]
}
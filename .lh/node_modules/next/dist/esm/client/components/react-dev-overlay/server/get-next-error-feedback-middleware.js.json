{
    "sourceFile": "node_modules/next/dist/esm/client/components/react-dev-overlay/server/get-next-error-feedback-middleware.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892768098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { eventErrorFeedback } from '../../../../telemetry/events/error-feedback';\nimport { middlewareResponse } from './middleware-response';\n// Handles HTTP requests to /__nextjs_error_feedback endpoint for collecting user feedback on error messages\nexport function getNextErrorFeedbackMiddleware(telemetry) {\n    return async function(req, res, next) {\n        const { pathname, searchParams } = new URL(\"http://n\" + req.url);\n        if (pathname !== '/__nextjs_error_feedback') {\n            return next();\n        }\n        try {\n            const errorCode = searchParams.get('errorCode');\n            const wasHelpful = searchParams.get('wasHelpful');\n            if (!errorCode || !wasHelpful) {\n                return middlewareResponse.badRequest(res);\n            }\n            await telemetry.record(eventErrorFeedback({\n                errorCode,\n                wasHelpful: wasHelpful === 'true'\n            }));\n            return middlewareResponse.noContent(res);\n        } catch (error) {\n            return middlewareResponse.internalServerError(res);\n        }\n    };\n}\n\n//# sourceMappingURL=get-next-error-feedback-middleware.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/client/components/react-dev-overlay/ui/container/runtime-error/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892775677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport { CodeFrame } from '../../components/code-frame/code-frame';\nimport { CallStack } from '../../components/errors/call-stack/call-stack';\nimport { PSEUDO_HTML_DIFF_STYLES } from './component-stack-pseudo-html';\nimport { useFrames } from '../../../utils/get-error-by-type';\nexport function RuntimeError(param) {\n    let { error, dialogResizerRef } = param;\n    const frames = useFrames(error);\n    const firstFrame = useMemo(()=>{\n        const firstFirstPartyFrameIndex = frames.findIndex((entry)=>!entry.ignored && Boolean(entry.originalCodeFrame) && Boolean(entry.originalStackFrame));\n        var _frames_firstFirstPartyFrameIndex;\n        return (_frames_firstFirstPartyFrameIndex = frames[firstFirstPartyFrameIndex]) != null ? _frames_firstFirstPartyFrameIndex : null;\n    }, [\n        frames\n    ]);\n    return /*#__PURE__*/ _jsxs(_Fragment, {\n        children: [\n            firstFrame && /*#__PURE__*/ _jsx(CodeFrame, {\n                stackFrame: firstFrame.originalStackFrame,\n                codeFrame: firstFrame.originalCodeFrame\n            }),\n            frames.length > 0 && /*#__PURE__*/ _jsx(CallStack, {\n                dialogResizerRef: dialogResizerRef,\n                frames: frames\n            })\n        ]\n    });\n}\nexport const styles = \"\\n  \" + PSEUDO_HTML_DIFF_STYLES + \"\\n\";\n\n//# sourceMappingURL=index.js.map"
        }
    ]
}
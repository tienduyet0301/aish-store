{
    "sourceFile": "node_modules/next/dist/esm/client/components/react-dev-overlay/server/shared.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892768380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { codeFrameColumns } from 'next/dist/compiled/babel/code-frame';\nimport isInternal from '../../../../shared/lib/is-internal';\n/**\n * It looks up the code frame of the traced source.\n * @note It ignores Next.js/React internals, as these can often be huge bundled files.\n */ export function getOriginalCodeFrame(frame, source, colors) {\n    if (colors === void 0) colors = process.stdout.isTTY;\n    if (!source || isInternal(frame.file)) {\n        return null;\n    }\n    var _frame_lineNumber, _frame_column;\n    return codeFrameColumns(source, {\n        start: {\n            // 1-based, but -1 means start line without highlighting\n            line: (_frame_lineNumber = frame.lineNumber) != null ? _frame_lineNumber : -1,\n            // 1-based, but 0 means whole line without column highlighting\n            column: (_frame_column = frame.column) != null ? _frame_column : 0\n        }\n    }, {\n        forceColor: colors\n    });\n}\n\n//# sourceMappingURL=shared.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/client/components/react-dev-overlay/ui/components/errors/error-overlay-layout/error-overlay-layout.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892773739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from 'react';\nimport { DialogContent } from '../../dialog';\nimport { ErrorOverlayToolbar, styles as toolbarStyles } from '../error-overlay-toolbar/error-overlay-toolbar';\nimport { ErrorOverlayFooter } from '../error-overlay-footer/error-overlay-footer';\nimport { ErrorMessage, styles as errorMessageStyles } from '../error-message/error-message';\nimport { ErrorTypeLabel, styles as errorTypeLabelStyles } from '../error-type-label/error-type-label';\nimport { ErrorOverlayNav, styles as floatingHeaderStyles } from '../error-overlay-nav/error-overlay-nav';\nimport { ErrorOverlayDialog, DIALOG_STYLES } from '../dialog/dialog';\nimport { ErrorOverlayDialogHeader, DIALOG_HEADER_STYLES } from '../dialog/header';\nimport { ErrorOverlayDialogBody, DIALOG_BODY_STYLES } from '../dialog/body';\nimport { CALL_STACK_STYLES } from '../call-stack/call-stack';\nimport { OVERLAY_STYLES, ErrorOverlayOverlay } from '../overlay/overlay';\nimport { ErrorOverlayBottomStack } from '../error-overlay-bottom-stack';\nimport { EnvironmentNameLabel } from '../environment-name-label/environment-name-label';\nimport { useFocusTrap } from '../dev-tools-indicator/utils';\nimport { Fader } from '../../fader';\nexport function ErrorOverlayLayout(param) {\n    let { errorMessage, errorType, children, errorCode, error, debugInfo, isBuildError, onClose, versionInfo, runtimeErrors, activeIdx, setActiveIndex, footerMessage, isTurbopack, dialogResizerRef, // This prop is used to animate the dialog, it comes from a parent component (<ErrorOverlay>)\n    // If it's not being passed, we should just render the component as it is being\n    // used without the context of a parent component that controls its state (e.g. Storybook).\n    rendered = true, transitionDurationMs } = param;\n    const animationProps = {\n        'data-rendered': rendered,\n        style: {\n            '--transition-duration': \"\" + transitionDurationMs + \"ms\"\n        }\n    };\n    const faderRef = React.useRef(null);\n    const hasFooter = Boolean(footerMessage || errorCode);\n    const dialogRef = React.useRef(null);\n    useFocusTrap(dialogRef, null, rendered);\n    function onScroll(e) {\n        if (faderRef.current) {\n            const opacity = clamp(e.currentTarget.scrollTop / 17, [\n                0,\n                1\n            ]);\n            faderRef.current.style.opacity = String(opacity);\n        }\n    }\n    var _runtimeErrors_length;\n    return /*#__PURE__*/ _jsx(ErrorOverlayOverlay, {\n        fixed: isBuildError,\n        ...animationProps,\n        children: /*#__PURE__*/ _jsxs(\"div\", {\n            \"data-nextjs-dialog-root\": true,\n            ref: dialogRef,\n            ...animationProps,\n            children: [\n                /*#__PURE__*/ _jsx(ErrorOverlayNav, {\n                    runtimeErrors: runtimeErrors,\n                    activeIdx: activeIdx,\n                    setActiveIndex: setActiveIndex,\n                    versionInfo: versionInfo,\n                    isTurbopack: isTurbopack\n                }),\n                /*#__PURE__*/ _jsxs(ErrorOverlayDialog, {\n                    onClose: onClose,\n                    dialogResizerRef: dialogResizerRef,\n                    \"data-has-footer\": hasFooter,\n                    onScroll: onScroll,\n                    footer: hasFooter && /*#__PURE__*/ _jsx(ErrorOverlayFooter, {\n                        footerMessage: footerMessage,\n                        errorCode: errorCode\n                    }),\n                    children: [\n                        /*#__PURE__*/ _jsxs(DialogContent, {\n                            children: [\n                                /*#__PURE__*/ _jsxs(ErrorOverlayDialogHeader, {\n                                    children: [\n                                        /*#__PURE__*/ _jsxs(\"div\", {\n                                            className: \"nextjs__container_errors__error_title\",\n                                            // allow assertion in tests before error rating is implemented\n                                            \"data-nextjs-error-code\": errorCode,\n                                            children: [\n                                                /*#__PURE__*/ _jsxs(\"span\", {\n                                                    \"data-nextjs-error-label-group\": true,\n                                                    children: [\n                                                        /*#__PURE__*/ _jsx(ErrorTypeLabel, {\n                                                            errorType: errorType\n                                                        }),\n                                                        error.environmentName && /*#__PURE__*/ _jsx(EnvironmentNameLabel, {\n                                                            environmentName: error.environmentName\n                                                        })\n                                                    ]\n                                                }),\n                                                /*#__PURE__*/ _jsx(ErrorOverlayToolbar, {\n                                                    error: error,\n                                                    debugInfo: debugInfo\n                                                })\n                                            ]\n                                        }),\n                                        /*#__PURE__*/ _jsx(ErrorMessage, {\n                                            errorMessage: errorMessage\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ _jsx(ErrorOverlayDialogBody, {\n                                    children: children\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ _jsx(ErrorOverlayBottomStack, {\n                            errorCount: (_runtimeErrors_length = runtimeErrors == null ? void 0 : runtimeErrors.length) != null ? _runtimeErrors_length : 0,\n                            activeIdx: activeIdx != null ? activeIdx : 0\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ _jsx(Fader, {\n                    ref: faderRef,\n                    side: \"top\",\n                    stop: \"50%\",\n                    blur: \"4px\",\n                    height: 48\n                })\n            ]\n        })\n    });\n}\nfunction clamp(value, param) {\n    let [min, max] = param;\n    return Math.min(Math.max(value, min), max);\n}\nexport const styles = \"\\n  \" + OVERLAY_STYLES + \"\\n  \" + DIALOG_STYLES + \"\\n  \" + DIALOG_HEADER_STYLES + \"\\n  \" + DIALOG_BODY_STYLES + \"\\n\\n  \" + floatingHeaderStyles + \"\\n  \" + errorTypeLabelStyles + \"\\n  \" + errorMessageStyles + \"\\n  \" + toolbarStyles + \"\\n  \" + CALL_STACK_STYLES + \"\\n\\n  [data-nextjs-error-label-group] {\\n    display: flex;\\n    align-items: center;\\n    gap: 8px;\\n  }\\n\";\n\n//# sourceMappingURL=error-overlay-layout.js.map"
        }
    ]
}
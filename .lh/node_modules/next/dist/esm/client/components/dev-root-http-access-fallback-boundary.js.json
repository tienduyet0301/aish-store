{
    "sourceFile": "node_modules/next/dist/esm/client/components/dev-root-http-access-fallback-boundary.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892763937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { HTTPAccessFallbackBoundary } from './http-access-fallback/error-boundary';\n// TODO: error on using forbidden and unauthorized in root layout\nexport function bailOnRootNotFound() {\n    throw Object.defineProperty(new Error('notFound() is not allowed to use in root layout'), \"__NEXT_ERROR_CODE\", {\n        value: \"E192\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction NotAllowedRootHTTPFallbackError() {\n    bailOnRootNotFound();\n    return null;\n}\nexport function DevRootHTTPAccessFallbackBoundary(param) {\n    let { children } = param;\n    return /*#__PURE__*/ _jsx(HTTPAccessFallbackBoundary, {\n        notFound: /*#__PURE__*/ _jsx(NotAllowedRootHTTPFallbackError, {}),\n        children: children\n    });\n}\n\n//# sourceMappingURL=dev-root-http-access-fallback-boundary.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/esm/client/components/segment-cache-impl/prefetch.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892784609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { createPrefetchURL } from '../app-router';\nimport { createCacheKey } from './cache-key';\nimport { schedulePrefetchTask } from './scheduler';\nimport { PrefetchPriority } from '../segment-cache';\n/**\n * Entrypoint for prefetching a URL into the Segment Cache.\n * @param href - The URL to prefetch. Typically this will come from a <Link>,\n * or router.prefetch. It must be validated before we attempt to prefetch it.\n * @param nextUrl - A special header used by the server for interception routes.\n * Roughly  corresponds to the current URL.\n * @param treeAtTimeOfPrefetch - The FlightRouterState at the time the prefetch\n * was requested. This is only used when PPR is disabled.\n * @param includeDynamicData - Whether to prefetch dynamic data, in addition to\n * static data. This is used by <Link prefetch={true}>.\n */ export function prefetch(href, nextUrl, treeAtTimeOfPrefetch, includeDynamicData) {\n    const url = createPrefetchURL(href);\n    if (url === null) {\n        // This href should not be prefetched.\n        return;\n    }\n    const cacheKey = createCacheKey(url.href, nextUrl);\n    schedulePrefetchTask(cacheKey, treeAtTimeOfPrefetch, includeDynamicData, PrefetchPriority.Default);\n}\n\n//# sourceMappingURL=prefetch.js.map"
        }
    ]
}
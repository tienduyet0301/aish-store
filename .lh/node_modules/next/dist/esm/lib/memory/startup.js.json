{
    "sourceFile": "node_modules/next/dist/esm/lib/memory/startup.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892812029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import v8 from 'v8';\nimport { info, warn } from '../../build/output/log';\nimport { italic } from '../picocolors';\nimport { startObservingGc } from './gc-observer';\nimport { startPeriodicMemoryUsageTracing } from './trace';\nexport function enableMemoryDebuggingMode() {\n    // This will generate a heap snapshot when the program is close to the\n    // memory limit. It does not give any warning to the user though which\n    // can be jarring. If memory is large, this may take a long time.\n    if ('setHeapSnapshotNearHeapLimit' in v8) {\n        v8.setHeapSnapshotNearHeapLimit(1);\n    }\n    // This flag will kill the process when it starts to GC thrash when it's\n    // close to the memory limit rather than continuing to try to collect\n    // memory ineffectively.\n    v8.setFlagsFromString('--detect-ineffective-gcs-near-heap-limit');\n    // This allows users to generate a heap snapshot on demand just by sending\n    // a signal to the process.\n    process.on('SIGUSR2', ()=>{\n        warn(`Received SIGUSR2 signal. Generating heap snapshot. ${italic('Note: this will take some time.')}`);\n        v8.writeHeapSnapshot();\n    });\n    startObservingGc();\n    startPeriodicMemoryUsageTracing();\n    warn(`Memory debugging mode is enabled. ${italic('Note: This will affect performance.')}`);\n    info(' - Heap snapshots will be automatically generated when the process reaches more than 70% of the memory limit and again when the process is just about to run out of memory.');\n    info(` - To manually generate a heap snapshot, send the process a SIGUSR2 signal: \\`kill -SIGUSR2 ${process.pid}\\``);\n    info(' - Heap snapshots when there is high memory will take a very long time to complete and may be difficult to analyze in tools.');\n    info(' - See https://nextjs.org/docs/app/building-your-application/optimizing/memory-usage for more information.');\n}\n\n//# sourceMappingURL=startup.js.map"
        }
    ]
}
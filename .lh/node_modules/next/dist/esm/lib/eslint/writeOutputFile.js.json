{
    "sourceFile": "node_modules/next/dist/esm/lib/eslint/writeOutputFile.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892807784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { promises as fs } from 'fs';\nimport path from 'path';\nimport * as Log from '../../build/output/log';\nimport isError from '../../lib/is-error';\n/**\n * Check if a given file path is a directory or not.\n * Returns `true` if the path is a directory.\n */ function isDirectory(/**  The path to a file to check. */ filePath) {\n    return fs.stat(filePath).then((stat)=>stat.isDirectory()).catch((error)=>{\n        if (isError(error) && (error.code === 'ENOENT' || error.code === 'ENOTDIR')) {\n            return false;\n        }\n        throw error;\n    });\n}\n/**\n * Create a file with eslint output data\n */ export async function writeOutputFile(/** The name file that needs to be created */ outputFile, /** The data that needs to be inserted into the file */ outputData) {\n    const filePath = path.resolve(process.cwd(), outputFile);\n    if (await isDirectory(filePath)) {\n        Log.error(`Cannot write to output file path, it is a directory: ${filePath}`);\n    } else {\n        try {\n            await fs.mkdir(path.dirname(filePath), {\n                recursive: true\n            });\n            await fs.writeFile(filePath, outputData);\n            Log.info(`The output file has been created: ${filePath}`);\n        } catch (err) {\n            Log.error(`There was a problem writing the output file: ${filePath}`);\n            console.error(err);\n        }\n    }\n}\n\n//# sourceMappingURL=writeOutputFile.js.map"
        }
    ]
}
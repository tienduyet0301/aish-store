{
    "sourceFile": "node_modules/next/dist/esm/lib/get-project-dir.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892809518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import path from 'path';\nimport { warn } from '../build/output/log';\nimport { detectTypo } from './detect-typo';\nimport { realpathSync } from './realpath';\nimport { printAndExit } from '../server/lib/utils';\nexport function getProjectDir(dir, exitOnEnoent = true) {\n    const resolvedDir = path.resolve(dir || '.');\n    try {\n        const realDir = realpathSync(resolvedDir);\n        if (resolvedDir !== realDir && resolvedDir.toLowerCase() === realDir.toLowerCase()) {\n            warn(`Invalid casing detected for project dir, received ${resolvedDir} actual path ${realDir}, see more info here https://nextjs.org/docs/messages/invalid-project-dir-casing`);\n        }\n        return realDir;\n    } catch (err) {\n        if (err.code === 'ENOENT' && exitOnEnoent) {\n            if (typeof dir === 'string') {\n                const detectedTypo = detectTypo(dir, [\n                    'build',\n                    'dev',\n                    'info',\n                    'lint',\n                    'start',\n                    'telemetry',\n                    'experimental-test'\n                ]);\n                if (detectedTypo) {\n                    return printAndExit(`\"next ${dir}\" does not exist. Did you mean \"next ${detectedTypo}\"?`);\n                }\n            }\n            return printAndExit(`Invalid project directory provided, no such directory: ${resolvedDir}`);\n        }\n        throw err;\n    }\n}\n\n//# sourceMappingURL=get-project-dir.js.map"
        }
    ]
}
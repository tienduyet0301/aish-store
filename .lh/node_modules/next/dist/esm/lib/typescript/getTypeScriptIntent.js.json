{
    "sourceFile": "node_modules/next/dist/esm/lib/typescript/getTypeScriptIntent.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892817468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { existsSync, promises as fs } from 'fs';\nimport path from 'path';\nimport { recursiveReadDir } from '../recursive-readdir';\nexport async function getTypeScriptIntent(baseDir, intentDirs, tsconfigPath) {\n    const resolvedTsConfigPath = path.join(baseDir, tsconfigPath);\n    // The integration turns on if we find a `tsconfig.json` in the user's\n    // project.\n    const hasTypeScriptConfiguration = existsSync(resolvedTsConfigPath);\n    if (hasTypeScriptConfiguration) {\n        const content = await fs.readFile(resolvedTsConfigPath, {\n            encoding: 'utf8'\n        }).then((txt)=>txt.trim(), ()=>null);\n        return {\n            firstTimeSetup: content === '' || content === '{}'\n        };\n    }\n    // Next.js also offers a friendly setup mode that bootstraps a TypeScript\n    // project for the user when we detect TypeScript files. So, we need to check\n    // the `pages/` directory for a TypeScript file.\n    // Checking all directories is too slow, so this is a happy medium.\n    const tsFilesRegex = /.*\\.(ts|tsx)$/;\n    const excludedRegex = /(node_modules|.*\\.d\\.ts$)/;\n    for (const dir of intentDirs){\n        const typescriptFiles = await recursiveReadDir(dir, {\n            pathnameFilter: (name)=>tsFilesRegex.test(name),\n            ignoreFilter: (name)=>excludedRegex.test(name)\n        });\n        if (typescriptFiles.length) {\n            return {\n                firstTimeSetup: true\n            };\n        }\n    }\n    return false;\n}\n\n//# sourceMappingURL=getTypeScriptIntent.js.map"
        }
    ]
}
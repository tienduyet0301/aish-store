{
    "sourceFile": "node_modules/next/dist/esm/shared/lib/page-path/get-page-paths.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892850639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { denormalizePagePath } from './denormalize-page-path';\nimport path from '../isomorphic/path';\n/**\n * Calculate all possible pagePaths for a given normalized pagePath along with\n * allowed extensions. This can be used to check which one of the files exists\n * and to debug inspected locations.\n *\n * For pages, map `/route` to [`/route.[ext]`, `/route/index.[ext]`]\n * For app paths, map `/route/page` to [`/route/page.[ext]`] or `/route/route`\n * to [`/route/route.[ext]`]\n *\n * @param normalizedPagePath Normalized page path (it will denormalize).\n * @param extensions Allowed extensions.\n */ export function getPagePaths(normalizedPagePath, extensions, isAppDir) {\n    const page = denormalizePagePath(normalizedPagePath);\n    let prefixes;\n    if (isAppDir) {\n        prefixes = [\n            page\n        ];\n    } else if (normalizedPagePath.endsWith('/index')) {\n        prefixes = [\n            path.join(page, 'index')\n        ];\n    } else {\n        prefixes = [\n            page,\n            path.join(page, 'index')\n        ];\n    }\n    const paths = [];\n    for (const extension of extensions){\n        for (const prefix of prefixes){\n            paths.push(prefix + \".\" + extension);\n        }\n    }\n    return paths;\n}\n\n//# sourceMappingURL=get-page-paths.js.map"
        }
    ]
}
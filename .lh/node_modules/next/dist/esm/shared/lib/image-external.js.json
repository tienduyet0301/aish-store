{
    "sourceFile": "node_modules/next/dist/esm/shared/lib/image-external.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892849518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { getImgProps } from './get-img-props';\nimport { Image } from '../../client/image-component';\n// @ts-ignore - This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader';\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */ export function getImageProps(imgProps) {\n    const { props } = getImgProps(imgProps, {\n        defaultLoader,\n        // This is replaced by webpack define plugin\n        imgConf: process.env.__NEXT_IMAGE_OPTS\n    });\n    // Normally we don't care about undefined props because we pass to JSX,\n    // but this exported function could be used by the end user for anything\n    // so we delete undefined props to clean it up a little.\n    for (const [key, value] of Object.entries(props)){\n        if (value === undefined) {\n            delete props[key];\n        }\n    }\n    return {\n        props\n    };\n}\nexport default Image;\n\n//# sourceMappingURL=image-external.js.map"
        }
    ]
}
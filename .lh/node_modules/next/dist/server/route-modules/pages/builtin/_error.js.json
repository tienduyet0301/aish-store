{
    "sourceFile": "node_modules/next/dist/server/route-modules/pages/builtin/_error.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892889425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"routeModule\", {\n    enumerable: true,\n    get: function() {\n        return routeModule;\n    }\n});\nconst _document = /*#__PURE__*/ _interop_require_default(require(\"../../../../pages/_document\"));\nconst _app = /*#__PURE__*/ _interop_require_default(require(\"../../../../pages/_app\"));\nconst _routekind = require(\"../../../route-kind\");\nconst _error = /*#__PURE__*/ _interop_require_wildcard(require(\"../../../../pages/_error\"));\nconst _module = /*#__PURE__*/ _interop_require_default(require(\"../module\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {\n        __proto__: null\n    };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst routeModule = new _module.default({\n    // TODO: add descriptor for internal error page\n    definition: {\n        kind: _routekind.RouteKind.PAGES,\n        page: '/_error',\n        pathname: '/_error',\n        filename: '',\n        bundlePath: ''\n    },\n    components: {\n        App: _app.default,\n        Document: _document.default\n    },\n    // @ts-expect-error -- Types don't account for getInitialProps. `Error` requires to be instantiated with `statusCode` but the types currently don't guarantee that.\n    userland: _error\n});\n\n//# sourceMappingURL=_error.js.map"
        }
    ]
}
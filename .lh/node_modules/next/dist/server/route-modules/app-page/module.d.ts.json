{
    "sourceFile": "node_modules/next/dist/server/route-modules/app-page/module.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892886113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { AppPageRouteDefinition } from '../../route-definitions/app-page-route-definition';\nimport type RenderResult from '../../render-result';\nimport type { RenderOpts } from '../../app-render/types';\nimport type { NextParsedUrlQuery } from '../../request-meta';\nimport type { LoaderTree } from '../../lib/app-dir-module';\nimport { renderToHTMLOrFlight, type AppSharedContext } from '../../app-render/app-render';\nimport { RouteModule, type RouteModuleOptions, type RouteModuleHandleContext } from '../route-module';\nimport * as vendoredContexts from './vendored/contexts/entrypoints';\nimport type { BaseNextRequest, BaseNextResponse } from '../../base-http';\nimport type { ServerComponentsHmrCache } from '../../response-cache';\nimport type { FallbackRouteParams } from '../../request/fallback-params';\n/**\n * The AppPageModule is the type of the module exported by the bundled app page\n * module.\n */\nexport type AppPageModule = typeof import('../../../build/templates/app-page');\ntype AppPageUserlandModule = {\n    /**\n     * The tree created in next-app-loader that holds component segments and modules\n     */\n    loaderTree: LoaderTree;\n};\nexport interface AppPageRouteHandlerContext extends RouteModuleHandleContext {\n    page: string;\n    query: NextParsedUrlQuery;\n    fallbackRouteParams: FallbackRouteParams | null;\n    renderOpts: RenderOpts;\n    serverComponentsHmrCache?: ServerComponentsHmrCache;\n    sharedContext: AppSharedContext;\n}\nexport type AppPageRouteModuleOptions = RouteModuleOptions<AppPageRouteDefinition, AppPageUserlandModule>;\nexport declare class AppPageRouteModule extends RouteModule<AppPageRouteDefinition, AppPageUserlandModule> {\n    render(req: BaseNextRequest, res: BaseNextResponse, context: AppPageRouteHandlerContext): Promise<RenderResult>;\n    warmup(req: BaseNextRequest, res: BaseNextResponse, context: AppPageRouteHandlerContext): Promise<RenderResult>;\n}\ndeclare const vendored: {\n    'react-rsc': any;\n    'react-ssr': any;\n    contexts: typeof vendoredContexts;\n};\nexport { renderToHTMLOrFlight, vendored };\nexport default AppPageRouteModule;\n"
        }
    ]
}
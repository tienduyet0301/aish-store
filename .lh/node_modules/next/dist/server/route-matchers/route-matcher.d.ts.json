{
    "sourceFile": "node_modules/next/dist/server/route-matchers/route-matcher.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892885635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { RouteMatch } from '../route-matches/route-match';\nimport type { RouteDefinition } from '../route-definitions/route-definition';\nimport type { Params } from '../request/params';\ntype RouteMatchResult = {\n    params?: Params;\n};\nexport declare class RouteMatcher<D extends RouteDefinition = RouteDefinition> {\n    readonly definition: D;\n    private readonly dynamic?;\n    /**\n     * When set, this is an array of all the other matchers that are duplicates of\n     * this one. This is used by the managers to warn the users about possible\n     * duplicate matches on routes.\n     */\n    duplicated?: Array<RouteMatcher>;\n    constructor(definition: D);\n    /**\n     * Identity returns the identity part of the matcher. This is used to compare\n     * a unique matcher to another. This is also used when sorting dynamic routes,\n     * so it must contain the pathname part.\n     */\n    get identity(): string;\n    get isDynamic(): boolean;\n    match(pathname: string): RouteMatch<D> | null;\n    test(pathname: string): RouteMatchResult | null;\n}\nexport {};\n"
        }
    ]
}
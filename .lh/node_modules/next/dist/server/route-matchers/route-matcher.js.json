{
    "sourceFile": "node_modules/next/dist/server/route-matchers/route-matcher.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892885668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"RouteMatcher\", {\n    enumerable: true,\n    get: function() {\n        return RouteMatcher;\n    }\n});\nconst _utils = require(\"../../shared/lib/router/utils\");\nconst _routematcher = require(\"../../shared/lib/router/utils/route-matcher\");\nconst _routeregex = require(\"../../shared/lib/router/utils/route-regex\");\nclass RouteMatcher {\n    constructor(definition){\n        this.definition = definition;\n        if ((0, _utils.isDynamicRoute)(definition.pathname)) {\n            this.dynamic = (0, _routematcher.getRouteMatcher)((0, _routeregex.getRouteRegex)(definition.pathname));\n        }\n    }\n    /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */ get identity() {\n        return this.definition.pathname;\n    }\n    get isDynamic() {\n        return this.dynamic !== undefined;\n    }\n    match(pathname) {\n        const result = this.test(pathname);\n        if (!result) return null;\n        return {\n            definition: this.definition,\n            params: result.params\n        };\n    }\n    test(pathname) {\n        if (this.dynamic) {\n            const params = this.dynamic(pathname);\n            if (!params) return null;\n            return {\n                params\n            };\n        }\n        if (pathname === this.definition.pathname) {\n            return {};\n        }\n        return null;\n    }\n}\n\n//# sourceMappingURL=route-matcher.js.map"
        }
    ]
}
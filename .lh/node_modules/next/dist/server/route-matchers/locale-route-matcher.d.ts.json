{
    "sourceFile": "node_modules/next/dist/server/route-matchers/locale-route-matcher.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892885406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { LocaleAnalysisResult } from '../lib/i18n-provider';\nimport type { LocaleRouteDefinition } from '../route-definitions/locale-route-definition';\nimport type { LocaleRouteMatch } from '../route-matches/locale-route-match';\nimport { RouteMatcher } from './route-matcher';\nexport type LocaleMatcherMatchOptions = {\n    /**\n     * If defined, this indicates to the matcher that the request should be\n     * treated as locale-aware. If this is undefined, it means that this\n     * application was not configured for additional locales.\n     */\n    i18n?: LocaleAnalysisResult;\n};\nexport declare class LocaleRouteMatcher<D extends LocaleRouteDefinition = LocaleRouteDefinition> extends RouteMatcher<D> {\n    /**\n     * Identity returns the identity part of the matcher. This is used to compare\n     * a unique matcher to another. This is also used when sorting dynamic routes,\n     * so it must contain the pathname part as well.\n     */\n    get identity(): string;\n    /**\n     * Match will attempt to match the given pathname against this route while\n     * also taking into account the locale information.\n     *\n     * @param pathname The pathname to match against.\n     * @param options The options to use when matching.\n     * @returns The match result, or `null` if there was no match.\n     */\n    match(pathname: string, options?: LocaleMatcherMatchOptions): LocaleRouteMatch<D> | null;\n    /**\n     * Test will attempt to match the given pathname against this route while\n     * also taking into account the locale information.\n     *\n     * @param pathname The pathname to match against.\n     * @param options The options to use when matching.\n     * @returns The match result, or `null` if there was no match.\n     */\n    test(pathname: string, options?: LocaleMatcherMatchOptions): {\n        params?: import(\"../request/params\").Params;\n    } | null;\n}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/revalidation-utils.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892883198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { WorkStore } from './app-render/work-async-storage.external';\n/** Run a callback, and execute any *new* revalidations added during its runtime. */\nexport declare function withExecuteRevalidates<T>(store: WorkStore | undefined, callback: () => Promise<T>): Promise<T>;\ntype RevalidationState = Required<Pick<WorkStore, 'pendingRevalidatedTags' | 'pendingRevalidates' | 'pendingRevalidateWrites'>>;\nexport declare function executeRevalidates(workStore: WorkStore, state?: RevalidationState): Promise<[void, ...any[]]>;\nexport {};\n"
        }
    ]
}
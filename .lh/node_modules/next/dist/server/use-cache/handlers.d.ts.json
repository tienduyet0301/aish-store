{
    "sourceFile": "node_modules/next/dist/server/use-cache/handlers.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892894535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { CacheHandlerCompat } from '../lib/cache-handlers/types';\n/**\n * Initialize the cache handlers.\n * @returns `true` if the cache handlers were initialized, `false` if they were already initialized.\n */\nexport declare function initializeCacheHandlers(): boolean;\n/**\n * Get a cache handler by kind.\n * @param kind - The kind of cache handler to get.\n * @returns The cache handler, or `undefined` if it does not exist.\n * @throws If the cache handlers are not initialized.\n */\nexport declare function getCacheHandler(kind: string): CacheHandlerCompat | undefined;\n/**\n * Get a set iterator over the cache handlers.\n * @returns An iterator over the cache handlers, or `undefined` if they are not\n * initialized.\n */\nexport declare function getCacheHandlers(): SetIterator<CacheHandlerCompat> | undefined;\n/**\n * Get a map iterator over the cache handlers (keyed by kind).\n * @returns An iterator over the cache handler entries, or `undefined` if they\n * are not initialized.\n * @throws If the cache handlers are not initialized.\n */\nexport declare function getCacheHandlerEntries(): MapIterator<[string, CacheHandlerCompat]> | undefined;\n/**\n * Set a cache handler by kind.\n * @param kind - The kind of cache handler to set.\n * @param cacheHandler - The cache handler to set.\n */\nexport declare function setCacheHandler(kind: string, cacheHandler: CacheHandlerCompat): void;\n"
        }
    ]
}
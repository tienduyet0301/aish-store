{
    "sourceFile": "node_modules/next/dist/server/use-cache/cache-tag.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892893660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"cacheTag\", {\n    enumerable: true,\n    get: function() {\n        return cacheTag;\n    }\n});\nconst _workunitasyncstorageexternal = require(\"../app-render/work-unit-async-storage.external\");\nconst _patchfetch = require(\"../lib/patch-fetch\");\nfunction cacheTag(...tags) {\n    if (!process.env.__NEXT_USE_CACHE) {\n        throw Object.defineProperty(new Error('cacheTag() is only available with the experimental.useCache config.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E628\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (!workUnitStore || workUnitStore.type !== 'cache') {\n        throw Object.defineProperty(new Error('cacheTag() can only be called inside a \"use cache\" function.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E177\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const validTags = (0, _patchfetch.validateTags)(tags, 'cacheTag()');\n    if (!workUnitStore.tags) {\n        workUnitStore.tags = validTags;\n    } else {\n        workUnitStore.tags.push(...validTags);\n    }\n}\n\n//# sourceMappingURL=cache-tag.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/dev/require-cache.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892873393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    deleteCache: null,\n    deleteFromRequireCache: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    deleteCache: function() {\n        return deleteCache;\n    },\n    deleteFromRequireCache: function() {\n        return deleteFromRequireCache;\n    }\n});\nconst _iserror = /*#__PURE__*/ _interop_require_default(require(\"../../lib/is-error\"));\nconst _realpath = require(\"../../lib/realpath\");\nconst _loadmanifest = require(\"../load-manifest\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction deleteFromRequireCache(filePath) {\n    try {\n        filePath = (0, _realpath.realpathSync)(filePath);\n    } catch (e) {\n        if ((0, _iserror.default)(e) && e.code !== 'ENOENT') throw e;\n    }\n    const mod = require.cache[filePath];\n    if (mod) {\n        // remove the child reference from all parent modules\n        for (const parent of Object.values(require.cache)){\n            if (parent == null ? void 0 : parent.children) {\n                const idx = parent.children.indexOf(mod);\n                if (idx >= 0) parent.children.splice(idx, 1);\n            }\n        }\n        // remove parent references from external modules\n        for (const child of mod.children){\n            child.parent = null;\n        }\n        delete require.cache[filePath];\n        return true;\n    }\n    return false;\n}\nfunction deleteCache(filePath) {\n    // try to clear it from the fs cache\n    (0, _loadmanifest.clearManifestCache)(filePath);\n    deleteFromRequireCache(filePath);\n}\n\n//# sourceMappingURL=require-cache.js.map"
        }
    ]
}
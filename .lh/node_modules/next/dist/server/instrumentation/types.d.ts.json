{
    "sourceFile": "node_modules/next/dist/server/instrumentation/types.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892874124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export type RequestErrorContext = {\n    routerKind: 'Pages Router' | 'App Router';\n    routePath: string;\n    routeType: 'render' | 'route' | 'action' | 'middleware';\n    renderSource?: 'react-server-components' | 'react-server-components-payload' | 'server-rendering';\n    revalidateReason: 'on-demand' | 'stale' | undefined;\n};\nexport type InstrumentationOnRequestError = (error: unknown, errorRequest: Readonly<{\n    path: string;\n    method: string;\n    headers: NodeJS.Dict<string | string[]>;\n}>, errorContext: Readonly<RequestErrorContext>) => void | Promise<void>;\nexport type InstrumentationModule = {\n    register?(): void;\n    onRequestError?: InstrumentationOnRequestError;\n};\nexport declare namespace Instrumentation {\n    type onRequestError = InstrumentationOnRequestError;\n}\n"
        }
    ]
}
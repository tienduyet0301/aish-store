{
    "sourceFile": "node_modules/next/dist/server/app-render/metadata-insertion/create-server-inserted-metadata.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892869601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"createServerInsertedMetadata\", {\n    enumerable: true,\n    get: function() {\n        return createServerInsertedMetadata;\n    }\n});\nconst _jsxruntime = require(\"react/jsx-runtime\");\nconst _react = /*#__PURE__*/ _interop_require_default(require(\"react\"));\nconst _serveredge = require(\"react-dom/server.edge\");\nconst _serverinsertedmetadatasharedruntime = require(\"../../../shared/lib/server-inserted-metadata.shared-runtime\");\nconst _rendertostring = require(\"../render-to-string\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * For chromium based browsers (Chrome, Edge, etc.) and Safari,\n * icons need to stay under <head> to be picked up by the browser.\n *\n */ const REINSERT_ICON_SCRIPT = `\\\ndocument.querySelectorAll('body link[rel=\"icon\"], body link[rel=\"apple-touch-icon\"]').forEach(el => document.head.appendChild(el))`;\nfunction createServerInsertedMetadata(nonce) {\n    let metadataResolver = null;\n    let metadataToFlush = null;\n    const setMetadataResolver = (resolver)=>{\n        metadataResolver = resolver;\n    };\n    return {\n        ServerInsertedMetadataProvider: ({ children })=>{\n            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_serverinsertedmetadatasharedruntime.ServerInsertedMetadataContext.Provider, {\n                value: setMetadataResolver,\n                children: children\n            });\n        },\n        async getServerInsertedMetadata () {\n            if (!metadataResolver || metadataToFlush) {\n                return '';\n            }\n            metadataToFlush = metadataResolver();\n            const html = await (0, _rendertostring.renderToString)({\n                renderToReadableStream: _serveredge.renderToReadableStream,\n                element: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {\n                    children: [\n                        metadataToFlush,\n                        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"script\", {\n                            nonce: nonce,\n                            children: REINSERT_ICON_SCRIPT\n                        })\n                    ]\n                })\n            });\n            return html;\n        }\n    };\n}\n\n//# sourceMappingURL=create-server-inserted-metadata.js.map"
        }
    ]
}
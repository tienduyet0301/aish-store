{
    "sourceFile": "node_modules/next/dist/server/app-render/server-inserted-html.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892870495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// Provider for the `useServerInsertedHTML` API to register callbacks to insert\n// elements into the HTML stream.\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"createServerInsertedHTML\", {\n    enumerable: true,\n    get: function() {\n        return createServerInsertedHTML;\n    }\n});\nconst _jsxruntime = require(\"react/jsx-runtime\");\nconst _react = /*#__PURE__*/ _interop_require_default(require(\"react\"));\nconst _serverinsertedhtmlsharedruntime = require(\"../../shared/lib/server-inserted-html.shared-runtime\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction createServerInsertedHTML() {\n    const serverInsertedHTMLCallbacks = [];\n    const addInsertedHtml = (handler)=>{\n        serverInsertedHTMLCallbacks.push(handler);\n    };\n    return {\n        ServerInsertedHTMLProvider ({ children }) {\n            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_serverinsertedhtmlsharedruntime.ServerInsertedHTMLContext.Provider, {\n                value: addInsertedHtml,\n                children: children\n            });\n        },\n        renderServerInsertedHTML () {\n            return serverInsertedHTMLCallbacks.map((callback, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_react.default.Fragment, {\n                    children: callback()\n                }, '__next_server_inserted__' + index));\n        }\n    };\n}\n\n//# sourceMappingURL=server-inserted-html.js.map"
        }
    ]
}
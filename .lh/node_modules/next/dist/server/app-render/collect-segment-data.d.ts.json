{
    "sourceFile": "node_modules/next/dist/server/app-render/collect-segment-data.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892867830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Segment as FlightRouterStateSegment } from './types';\nimport type { ManifestNode } from '../../build/webpack/plugins/flight-manifest-plugin';\nimport type { HeadData, LoadingModuleData } from '../../shared/lib/app-router-context.shared-runtime';\nimport type { FallbackRouteParams } from '../request/fallback-params';\nexport type RootTreePrefetch = {\n    buildId: string;\n    tree: TreePrefetch;\n    head: HeadData;\n    isHeadPartial: boolean;\n    staleTime: number;\n};\nexport type TreePrefetch = {\n    segment: FlightRouterStateSegment;\n    slots: null | {\n        [parallelRouteKey: string]: TreePrefetch;\n    };\n    isRootLayout: boolean;\n};\nexport type SegmentPrefetch = {\n    buildId: string;\n    rsc: React.ReactNode | null;\n    loading: LoadingModuleData | Promise<LoadingModuleData>;\n    isPartial: boolean;\n};\nexport declare function collectSegmentData(shouldAssumePartialData: boolean, fullPageDataBuffer: Buffer, staleTime: number, clientModules: ManifestNode, serverConsumerManifest: any, fallbackRouteParams: FallbackRouteParams | null): Promise<Map<string, Buffer>>;\n"
        }
    ]
}
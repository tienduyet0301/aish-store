{
    "sourceFile": "node_modules/next/dist/server/app-render/required-scripts.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892870204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getRequiredScripts\", {\n    enumerable: true,\n    get: function() {\n        return getRequiredScripts;\n    }\n});\nconst _encodeuripath = require(\"../../shared/lib/encode-uri-path\");\nconst _reactdom = /*#__PURE__*/ _interop_require_default(require(\"react-dom\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction getRequiredScripts(buildManifest, assetPrefix, crossOrigin, SRIManifest, qs, nonce, pagePath) {\n    var _buildManifest_rootMainFilesTree;\n    let preinitScripts;\n    let preinitScriptCommands = [];\n    const bootstrapScript = {\n        src: '',\n        crossOrigin\n    };\n    const files = (((_buildManifest_rootMainFilesTree = buildManifest.rootMainFilesTree) == null ? void 0 : _buildManifest_rootMainFilesTree[pagePath]) || buildManifest.rootMainFiles).map(_encodeuripath.encodeURIPath);\n    if (files.length === 0) {\n        throw Object.defineProperty(new Error('Invariant: missing bootstrap script. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n            value: \"E459\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (SRIManifest) {\n        bootstrapScript.src = `${assetPrefix}/_next/` + files[0] + qs;\n        bootstrapScript.integrity = SRIManifest[files[0]];\n        for(let i = 1; i < files.length; i++){\n            const src = `${assetPrefix}/_next/` + files[i] + qs;\n            const integrity = SRIManifest[files[i]];\n            preinitScriptCommands.push(src, integrity);\n        }\n        preinitScripts = ()=>{\n            // preinitScriptCommands is a double indexed array of src/integrity pairs\n            for(let i = 0; i < preinitScriptCommands.length; i += 2){\n                _reactdom.default.preinit(preinitScriptCommands[i], {\n                    as: 'script',\n                    integrity: preinitScriptCommands[i + 1],\n                    crossOrigin,\n                    nonce\n                });\n            }\n        };\n    } else {\n        bootstrapScript.src = `${assetPrefix}/_next/` + files[0] + qs;\n        for(let i = 1; i < files.length; i++){\n            const src = `${assetPrefix}/_next/` + files[i] + qs;\n            preinitScriptCommands.push(src);\n        }\n        preinitScripts = ()=>{\n            // preinitScriptCommands is a singled indexed array of src values\n            for(let i = 0; i < preinitScriptCommands.length; i++){\n                _reactdom.default.preinit(preinitScriptCommands[i], {\n                    as: 'script',\n                    nonce,\n                    crossOrigin\n                });\n            }\n        };\n    }\n    return [\n        preinitScripts,\n        bootstrapScript\n    ];\n}\n\n//# sourceMappingURL=required-scripts.js.map"
        }
    ]
}
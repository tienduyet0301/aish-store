{
    "sourceFile": "node_modules/next/dist/server/app-render/encryption-utils.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892868425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin';\nimport type { ClientReferenceManifest, ClientReferenceManifestForRsc } from '../../build/webpack/plugins/flight-manifest-plugin';\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly';\nexport declare function arrayBufferToString(buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>): string;\nexport declare function stringToUint8Array(binary: string): Uint8Array<ArrayBuffer>;\nexport declare function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array): Promise<ArrayBuffer>;\nexport declare function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array): Promise<ArrayBuffer>;\nexport declare function setReferenceManifestsSingleton({ page, clientReferenceManifest, serverActionsManifest, serverModuleMap, }: {\n    page: string;\n    clientReferenceManifest: DeepReadonly<ClientReferenceManifest>;\n    serverActionsManifest: DeepReadonly<ActionManifest>;\n    serverModuleMap: {\n        [id: string]: {\n            id: string;\n            chunks: string[];\n            name: string;\n        };\n    };\n}): void;\nexport declare function getServerModuleMap(): {\n    [id: string]: {\n        id: string;\n        chunks: string[];\n        name: string;\n    };\n};\nexport declare function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc>;\nexport declare function getActionEncryptionKey(): Promise<CryptoKey>;\n"
        }
    ]
}
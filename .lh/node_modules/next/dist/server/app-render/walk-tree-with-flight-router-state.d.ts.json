{
    "sourceFile": "node_modules/next/dist/server/app-render/walk-tree-with-flight-router-state.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892870783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { FlightDataPath, FlightRouterState, PreloadCallbacks } from './types';\nimport type { LoaderTree } from '../lib/app-dir-module';\nimport type { AppRenderContext } from './app-render';\nimport type { HeadData } from '../../shared/lib/app-router-context.shared-runtime';\n/**\n * Use router state to decide at what common layout to render the page.\n * This can either be the common layout between two pages or a specific place to start rendering from using the \"refetch\" marker in the tree.\n */\nexport declare function walkTreeWithFlightRouterState({ loaderTreeToFilter, parentParams, flightRouterState, parentIsInsideSharedLayout, rscHead, injectedCSS, injectedJS, injectedFontPreloadTags, rootLayoutIncluded, getViewportReady, getMetadataReady, ctx, preloadCallbacks, StreamingMetadataOutlet, }: {\n    loaderTreeToFilter: LoaderTree;\n    parentParams: {\n        [key: string]: string | string[];\n    };\n    flightRouterState?: FlightRouterState;\n    rscHead: HeadData;\n    parentIsInsideSharedLayout?: boolean;\n    injectedCSS: Set<string>;\n    injectedJS: Set<string>;\n    injectedFontPreloadTags: Set<string>;\n    rootLayoutIncluded: boolean;\n    getMetadataReady: () => Promise<void>;\n    getViewportReady: () => Promise<void>;\n    ctx: AppRenderContext;\n    preloadCallbacks: PreloadCallbacks;\n    StreamingMetadataOutlet: React.ComponentType;\n}): Promise<FlightDataPath[]>;\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/typescript/utils.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892893274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { VirtualTypeScriptEnvironment } from 'next/dist/compiled/@typescript/vfs';\nimport type tsModule from 'typescript/lib/tsserverlibrary';\ntype TypeScript = typeof import('typescript/lib/tsserverlibrary');\nexport declare let virtualTsEnv: VirtualTypeScriptEnvironment;\nexport declare function log(message: string): void;\nexport declare function init(opts: {\n    ts: TypeScript;\n    info: tsModule.server.PluginCreateInfo;\n}): boolean;\nexport declare function getTs(): typeof tsModule;\nexport declare function getInfo(): tsModule.server.PluginCreateInfo;\nexport declare function getTypeChecker(): tsModule.TypeChecker | undefined;\nexport declare function getSource(fileName: string): tsModule.SourceFile | undefined;\nexport declare function getSourceFromVirtualTsEnv(fileName: string): tsModule.SourceFile | undefined;\nexport declare function removeStringQuotes(str: string): string;\nexport declare const isPositionInsideNode: (position: number, node: tsModule.Node) => boolean;\nexport declare const isDefaultFunctionExport: (node: tsModule.Node) => node is tsModule.FunctionDeclaration;\nexport declare const isInsideApp: (filePath: string) => boolean;\nexport declare const isAppEntryFile: (filePath: string) => boolean;\nexport declare const isPageFile: (filePath: string) => boolean;\nexport declare function getEntryInfo(fileName: string, throwOnInvalidDirective?: boolean): {\n    client: boolean;\n    server: boolean;\n};\nexport {};\n"
        }
    ]
}
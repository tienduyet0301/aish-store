{
    "sourceFile": "node_modules/next/dist/server/api-utils/node/try-get-preview-data.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892866796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"tryGetPreviewData\", {\n    enumerable: true,\n    get: function() {\n        return tryGetPreviewData;\n    }\n});\nconst _ = require(\"../.\");\nconst _index = require(\"../index\");\nconst _cookies = require(\"../../web/spec-extension/cookies\");\nconst _headers = require(\"../../web/spec-extension/adapters/headers\");\nfunction tryGetPreviewData(req, res, options, multiZoneDraftMode) {\n    var _cookies_get, _cookies_get1;\n    // if an On-Demand revalidation is being done preview mode\n    // is disabled\n    if (options && (0, _.checkIsOnDemandRevalidate)(req, options).isOnDemandRevalidate) {\n        return false;\n    }\n    // Read cached preview data if present\n    // TODO: use request metadata instead of a symbol\n    if (_index.SYMBOL_PREVIEW_DATA in req) {\n        return req[_index.SYMBOL_PREVIEW_DATA];\n    }\n    const headers = _headers.HeadersAdapter.from(req.headers);\n    const cookies = new _cookies.RequestCookies(headers);\n    const previewModeId = (_cookies_get = cookies.get(_index.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n    const tokenPreviewData = (_cookies_get1 = cookies.get(_index.COOKIE_NAME_PRERENDER_DATA)) == null ? void 0 : _cookies_get1.value;\n    // Case: preview mode cookie set but data cookie is not set\n    if (previewModeId && !tokenPreviewData && previewModeId === options.previewModeId) {\n        // This is \"Draft Mode\" which doesn't use\n        // previewData, so we return an empty object\n        // for backwards compat with \"Preview Mode\".\n        const data = {};\n        Object.defineProperty(req, _index.SYMBOL_PREVIEW_DATA, {\n            value: data,\n            enumerable: false\n        });\n        return data;\n    }\n    // Case: neither cookie is set.\n    if (!previewModeId && !tokenPreviewData) {\n        return false;\n    }\n    // Case: one cookie is set, but not the other.\n    if (!previewModeId || !tokenPreviewData) {\n        if (!multiZoneDraftMode) {\n            (0, _index.clearPreviewData)(res);\n        }\n        return false;\n    }\n    // Case: preview session is for an old build.\n    if (previewModeId !== options.previewModeId) {\n        if (!multiZoneDraftMode) {\n            (0, _index.clearPreviewData)(res);\n        }\n        return false;\n    }\n    let encryptedPreviewData;\n    try {\n        const jsonwebtoken = require('next/dist/compiled/jsonwebtoken');\n        encryptedPreviewData = jsonwebtoken.verify(tokenPreviewData, options.previewModeSigningKey);\n    } catch  {\n        // TODO: warn\n        (0, _index.clearPreviewData)(res);\n        return false;\n    }\n    const { decryptWithSecret } = require('../../crypto-utils');\n    const decryptedPreviewData = decryptWithSecret(Buffer.from(options.previewModeEncryptionKey), encryptedPreviewData.data);\n    try {\n        // TODO: strict runtime type checking\n        const data = JSON.parse(decryptedPreviewData);\n        // Cache lookup\n        Object.defineProperty(req, _index.SYMBOL_PREVIEW_DATA, {\n            value: data,\n            enumerable: false\n        });\n        return data;\n    } catch  {\n        return false;\n    }\n}\n\n//# sourceMappingURL=try-get-preview-data.js.map"
        }
    ]
}
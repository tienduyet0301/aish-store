{
    "sourceFile": "node_modules/next/dist/server/api-utils/node/api-resolver.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892866612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { IncomingMessage, ServerResponse } from 'http';\nimport type { __ApiPreviewProps } from '../.';\nimport type { ServerOnInstrumentationRequestError } from '../../app-render/types';\ntype RevalidateFn = (config: {\n    urlPath: string;\n    revalidateHeaders: {\n        [key: string]: string | string[];\n    };\n    opts: {\n        unstable_onlyGenerated?: boolean;\n    };\n}) => Promise<void>;\ntype ApiContext = __ApiPreviewProps & {\n    trustHostHeader?: boolean;\n    allowedRevalidateHeaderKeys?: string[];\n    hostname?: string;\n    revalidate?: RevalidateFn;\n    multiZoneDraftMode?: boolean;\n    dev: boolean;\n};\nexport declare function apiResolver(req: IncomingMessage, res: ServerResponse, query: any, resolverModule: any, apiContext: ApiContext, propagateError: boolean, dev?: boolean, page?: string, onError?: ServerOnInstrumentationRequestError): Promise<void>;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892896677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { RequestCookies } from '../cookies';\nimport { ResponseCookies } from '../cookies';\nimport { type RequestStore } from '../../../app-render/work-unit-async-storage.external';\nexport type { ResponseCookies };\nexport type ReadonlyRequestCookies = Omit<RequestCookies, 'set' | 'clear' | 'delete'> & Pick<ResponseCookies, 'set' | 'delete'>;\nexport declare class RequestCookiesAdapter {\n    static seal(cookies: RequestCookies): ReadonlyRequestCookies;\n}\nexport declare function getModifiedCookieValues(cookies: ResponseCookies): ResponseCookie[];\nexport declare function appendMutableCookies(headers: Headers, mutableCookies: ResponseCookies): boolean;\ntype ResponseCookie = NonNullable<ReturnType<InstanceType<typeof ResponseCookies>['get']>>;\nexport declare class MutableRequestCookiesAdapter {\n    static wrap(cookies: RequestCookies, onUpdateCookies?: (cookies: string[]) => void): ResponseCookies;\n}\nexport declare function wrapWithMutableAccessCheck(responseCookies: ResponseCookies): ResponseCookies;\nexport declare function areCookiesMutableInCurrentPhase(requestStore: RequestStore): boolean;\nexport declare function responseCookiesToRequestCookies(responseCookies: ResponseCookies): RequestCookies;\n"
        }
    ]
}
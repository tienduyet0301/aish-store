{
    "sourceFile": "node_modules/next/dist/server/web/spec-extension/response.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892897089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { I18NConfig } from '../../config-shared';\nimport { NextURL } from '../next-url';\nimport { ResponseCookies } from './cookies';\ndeclare const INTERNALS: unique symbol;\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */\nexport declare class NextResponse<Body = unknown> extends Response {\n    [INTERNALS]: {\n        cookies: ResponseCookies;\n        url?: NextURL;\n        body?: Body;\n    };\n    constructor(body?: BodyInit | null, init?: ResponseInit);\n    get cookies(): ResponseCookies;\n    static json<JsonBody>(body: JsonBody, init?: ResponseInit): NextResponse<JsonBody>;\n    static redirect(url: string | NextURL | URL, init?: number | ResponseInit): NextResponse<unknown>;\n    static rewrite(destination: string | NextURL | URL, init?: MiddlewareResponseInit): NextResponse<unknown>;\n    static next(init?: MiddlewareResponseInit): NextResponse<unknown>;\n}\ninterface ResponseInit extends globalThis.ResponseInit {\n    nextConfig?: {\n        basePath?: string;\n        i18n?: I18NConfig;\n        trailingSlash?: boolean;\n    };\n    url?: string;\n}\ninterface ModifiedRequest {\n    /**\n     * If this is set, the request headers will be overridden with this value.\n     */\n    headers?: Headers;\n}\ninterface MiddlewareResponseInit extends globalThis.ResponseInit {\n    /**\n     * These fields will override the request from clients.\n     */\n    request?: ModifiedRequest;\n}\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/web/spec-extension/unstable-cache.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892897316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "type Callback = (...args: any[]) => Promise<any>;\n/**\n * This function allows you to cache the results of expensive operations, like database queries, and reuse them across multiple requests.\n *\n * Read more: [Next.js Docs: `unstable_cache`](https://nextjs.org/docs/app/api-reference/functions/unstable_cache)\n */\nexport declare function unstable_cache<T extends Callback>(cb: T, keyParts?: string[], options?: {\n    /**\n     * The revalidation interval in seconds.\n     */\n    revalidate?: number | false;\n    tags?: string[];\n}): T;\nexport {};\n"
        }
    ]
}
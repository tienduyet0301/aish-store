{
    "sourceFile": "node_modules/next/dist/server/node-environment-extensions/web-crypto.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892879405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * We extend Web Crypto APIs during builds and revalidates to ensure that prerenders don't observe random bytes\n * When dynamicIO is enabled. Random bytes are a form of IO even if they resolve synchronously. When dyanmicIO is\n * enabled we need to ensure that random bytes are excluded from prerenders unless they are cached.\n *\n *\n * The extensions here never error nor alter the underlying return values and thus should be transparent to callers.\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nconst _utils = require(\"./utils\");\nlet webCrypto;\nif (process.env.NEXT_RUNTIME === 'edge') {\n    webCrypto = crypto;\n} else {\n    if (typeof crypto === 'undefined') {\n        webCrypto = require('node:crypto').webcrypto;\n    } else {\n        webCrypto = crypto;\n    }\n}\nconst getRandomValuesExpression = '`crypto.getRandomValues()`';\ntry {\n    const _getRandomValues = webCrypto.getRandomValues;\n    webCrypto.getRandomValues = function getRandomValues() {\n        (0, _utils.io)(getRandomValuesExpression, 'crypto');\n        return _getRandomValues.apply(webCrypto, arguments);\n    };\n} catch  {\n    console.error(`Failed to install ${getRandomValuesExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`);\n}\nconst randomUUIDExpression = '`crypto.randomUUID()`';\ntry {\n    const _randomUUID = webCrypto.randomUUID;\n    webCrypto.randomUUID = function randomUUID() {\n        (0, _utils.io)(randomUUIDExpression, 'crypto');\n        return _randomUUID.apply(webCrypto, arguments);\n    };\n} catch  {\n    console.error(`Failed to install ${getRandomValuesExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`);\n}\n\n//# sourceMappingURL=web-crypto.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/route-matcher-providers/app-page-route-matcher-provider.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892884066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"AppPageRouteMatcherProvider\", {\n    enumerable: true,\n    get: function() {\n        return AppPageRouteMatcherProvider;\n    }\n});\nconst _isapppageroute = require(\"../../lib/is-app-page-route\");\nconst _constants = require(\"../../shared/lib/constants\");\nconst _app = require(\"../normalizers/built/app\");\nconst _routekind = require(\"../route-kind\");\nconst _apppageroutematcher = require(\"../route-matchers/app-page-route-matcher\");\nconst _manifestroutematcherprovider = require(\"./manifest-route-matcher-provider\");\nclass AppPageRouteMatcherProvider extends _manifestroutematcherprovider.ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader){\n        super(_constants.APP_PATHS_MANIFEST, manifestLoader);\n        this.normalizers = new _app.AppNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher only matches app pages.\n        const pages = Object.keys(manifest).filter((page)=>(0, _isapppageroute.isAppPageRoute)(page));\n        // Collect all the app paths for each page. This could include any parallel\n        // routes.\n        const allAppPaths = {};\n        for (const page of pages){\n            const pathname = this.normalizers.pathname.normalize(page);\n            if (pathname in allAppPaths) allAppPaths[pathname].push(page);\n            else allAppPaths[pathname] = [\n                page\n            ];\n        }\n        // Format the routes.\n        const matchers = [];\n        for (const [pathname, appPaths] of Object.entries(allAppPaths)){\n            // TODO-APP: (wyattjoh) this is a hack right now, should be more deterministic\n            const page = appPaths[0];\n            const filename = this.normalizers.filename.normalize(manifest[page]);\n            const bundlePath = this.normalizers.bundlePath.normalize(page);\n            matchers.push(new _apppageroutematcher.AppPageRouteMatcher({\n                kind: _routekind.RouteKind.APP_PAGE,\n                pathname,\n                page,\n                bundlePath,\n                filename,\n                appPaths\n            }));\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=app-page-route-matcher-provider.js.map"
        }
    ]
}
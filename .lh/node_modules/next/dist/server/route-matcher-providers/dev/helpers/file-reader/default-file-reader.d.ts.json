{
    "sourceFile": "node_modules/next/dist/server/route-matcher-providers/dev/helpers/file-reader/default-file-reader.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892884615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { FileReader } from './file-reader';\nimport type { RecursiveReadDirOptions } from '../../../../../lib/recursive-readdir';\nexport type DefaultFileReaderOptions = Pick<RecursiveReadDirOptions, 'pathnameFilter' | 'ignoreFilter' | 'ignorePartFilter'>;\n/**\n * Reads all the files in the directory and its subdirectories following any\n * symbolic links.\n */\nexport declare class DefaultFileReader implements FileReader {\n    /**\n     * Filter to ignore files with absolute pathnames. If undefined, no files are\n     * ignored.\n     */\n    private readonly options;\n    /**\n     * Creates a new file reader.\n     *\n     * @param pathnameFilter filter to ignore files with absolute pathnames, false to ignore\n     * @param ignoreFilter filter to ignore files and directories with absolute pathnames, false to ignore\n     * @param ignorePartFilter filter to ignore files and directories with the pathname part, false to ignore\n     */\n    constructor(options: Readonly<DefaultFileReaderOptions>);\n    /**\n     * Reads all the files in the directory and its subdirectories following any\n     * symbolic links.\n     *\n     * @param dir the directory to read\n     * @returns a promise that resolves to the list of files\n     */\n    read(dir: string): Promise<ReadonlyArray<string>>;\n}\n"
        }
    ]
}
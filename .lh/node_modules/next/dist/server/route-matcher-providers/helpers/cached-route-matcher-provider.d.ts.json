{
    "sourceFile": "node_modules/next/dist/server/route-matcher-providers/helpers/cached-route-matcher-provider.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892884724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { RouteMatcherProvider } from '../route-matcher-provider';\nimport type { RouteMatcher } from '../../route-matchers/route-matcher';\ninterface LoaderComparable<D> {\n    load(): Promise<D>;\n    compare(left: D, right: D): boolean;\n}\n/**\n * This will memoize the matchers if the loaded data is comparable.\n */\nexport declare abstract class CachedRouteMatcherProvider<M extends RouteMatcher = RouteMatcher, D = any> implements RouteMatcherProvider<M> {\n    private readonly loader;\n    private data?;\n    private cached;\n    constructor(loader: LoaderComparable<D>);\n    protected abstract transform(data: D): Promise<ReadonlyArray<M>>;\n    matchers(): Promise<readonly M[]>;\n}\nexport {};\n"
        }
    ]
}
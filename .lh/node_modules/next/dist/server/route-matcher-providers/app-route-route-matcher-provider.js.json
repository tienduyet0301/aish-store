{
    "sourceFile": "node_modules/next/dist/server/route-matcher-providers/app-route-route-matcher-provider.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892884132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"AppRouteRouteMatcherProvider\", {\n    enumerable: true,\n    get: function() {\n        return AppRouteRouteMatcherProvider;\n    }\n});\nconst _isapprouteroute = require(\"../../lib/is-app-route-route\");\nconst _constants = require(\"../../shared/lib/constants\");\nconst _routekind = require(\"../route-kind\");\nconst _approuteroutematcher = require(\"../route-matchers/app-route-route-matcher\");\nconst _manifestroutematcherprovider = require(\"./manifest-route-matcher-provider\");\nconst _app = require(\"../normalizers/built/app\");\nclass AppRouteRouteMatcherProvider extends _manifestroutematcherprovider.ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader){\n        super(_constants.APP_PATHS_MANIFEST, manifestLoader);\n        this.normalizers = new _app.AppNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher only matches app routes.\n        const pages = Object.keys(manifest).filter((page)=>(0, _isapprouteroute.isAppRouteRoute)(page));\n        // Format the routes.\n        const matchers = [];\n        for (const page of pages){\n            const filename = this.normalizers.filename.normalize(manifest[page]);\n            const pathname = this.normalizers.pathname.normalize(page);\n            const bundlePath = this.normalizers.bundlePath.normalize(page);\n            matchers.push(new _approuteroutematcher.AppRouteRouteMatcher({\n                kind: _routekind.RouteKind.APP_ROUTE,\n                pathname,\n                page,\n                bundlePath,\n                filename\n            }));\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=app-route-route-matcher-provider.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/route-matcher-providers/pages-api-route-matcher-provider.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892885116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"PagesAPIRouteMatcherProvider\", {\n    enumerable: true,\n    get: function() {\n        return PagesAPIRouteMatcherProvider;\n    }\n});\nconst _isapiroute = require(\"../../lib/is-api-route\");\nconst _constants = require(\"../../shared/lib/constants\");\nconst _routekind = require(\"../route-kind\");\nconst _pagesapiroutematcher = require(\"../route-matchers/pages-api-route-matcher\");\nconst _manifestroutematcherprovider = require(\"./manifest-route-matcher-provider\");\nconst _pages = require(\"../normalizers/built/pages\");\nclass PagesAPIRouteMatcherProvider extends _manifestroutematcherprovider.ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader, i18nProvider){\n        super(_constants.PAGES_MANIFEST, manifestLoader), this.i18nProvider = i18nProvider;\n        this.normalizers = new _pages.PagesNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher is only for Pages API routes.\n        const pathnames = Object.keys(manifest).filter((pathname)=>(0, _isapiroute.isAPIRoute)(pathname));\n        const matchers = [];\n        for (const page of pathnames){\n            if (this.i18nProvider) {\n                // Match the locale on the page name, or default to the default locale.\n                const { detectedLocale, pathname } = this.i18nProvider.analyze(page);\n                matchers.push(new _pagesapiroutematcher.PagesAPILocaleRouteMatcher({\n                    kind: _routekind.RouteKind.PAGES_API,\n                    pathname,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page]),\n                    i18n: {\n                        locale: detectedLocale\n                    }\n                }));\n            } else {\n                matchers.push(new _pagesapiroutematcher.PagesAPIRouteMatcher({\n                    kind: _routekind.RouteKind.PAGES_API,\n                    // In `pages/`, the page is the same as the pathname.\n                    pathname: page,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page])\n                }));\n            }\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=pages-api-route-matcher-provider.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/config-schema.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892872175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"configSchema\", {\n    enumerable: true,\n    get: function() {\n        return configSchema;\n    }\n});\nconst _imageconfig = require(\"../shared/lib/image-config\");\nconst _zod = require(\"next/dist/compiled/zod\");\nconst _nexttest = require(\"../cli/next-test\");\n// A custom zod schema for the SizeLimit type\nconst zSizeLimit = _zod.z.custom((val)=>{\n    if (typeof val === 'number' || typeof val === 'string') {\n        return true;\n    }\n    return false;\n});\nconst zExportMap = _zod.z.record(_zod.z.string(), _zod.z.object({\n    page: _zod.z.string(),\n    query: _zod.z.any(),\n    // private optional properties\n    _fallbackRouteParams: _zod.z.array(_zod.z.string()).optional(),\n    _isAppDir: _zod.z.boolean().optional(),\n    _isDynamicError: _zod.z.boolean().optional(),\n    _isRoutePPREnabled: _zod.z.boolean().optional(),\n    _isProspectiveRender: _zod.z.boolean().optional()\n}));\nconst zRouteHas = _zod.z.union([\n    _zod.z.object({\n        type: _zod.z.enum([\n            'header',\n            'query',\n            'cookie'\n        ]),\n        key: _zod.z.string(),\n        value: _zod.z.string().optional()\n    }),\n    _zod.z.object({\n        type: _zod.z.literal('host'),\n        key: _zod.z.undefined().optional(),\n        value: _zod.z.string()\n    })\n]);\nconst zRewrite = _zod.z.object({\n    source: _zod.z.string(),\n    destination: _zod.z.string(),\n    basePath: _zod.z.literal(false).optional(),\n    locale: _zod.z.literal(false).optional(),\n    has: _zod.z.array(zRouteHas).optional(),\n    missing: _zod.z.array(zRouteHas).optional(),\n    internal: _zod.z.boolean().optional()\n});\nconst zRedirect = _zod.z.object({\n    source: _zod.z.string(),\n    destination: _zod.z.string(),\n    basePath: _zod.z.literal(false).optional(),\n    locale: _zod.z.literal(false).optional(),\n    has: _zod.z.array(zRouteHas).optional(),\n    missing: _zod.z.array(zRouteHas).optional(),\n    internal: _zod.z.boolean().optional()\n}).and(_zod.z.union([\n    _zod.z.object({\n        statusCode: _zod.z.never().optional(),\n        permanent: _zod.z.boolean()\n    }),\n    _zod.z.object({\n        statusCode: _zod.z.number(),\n        permanent: _zod.z.never().optional()\n    })\n]));\nconst zHeader = _zod.z.object({\n    source: _zod.z.string(),\n    basePath: _zod.z.literal(false).optional(),\n    locale: _zod.z.literal(false).optional(),\n    headers: _zod.z.array(_zod.z.object({\n        key: _zod.z.string(),\n        value: _zod.z.string()\n    })),\n    has: _zod.z.array(zRouteHas).optional(),\n    missing: _zod.z.array(zRouteHas).optional(),\n    internal: _zod.z.boolean().optional()\n});\nconst zTurboLoaderItem = _zod.z.union([\n    _zod.z.string(),\n    _zod.z.object({\n        loader: _zod.z.string(),\n        // Any JSON value can be used as turbo loader options, so use z.any() here\n        options: _zod.z.record(_zod.z.string(), _zod.z.any())\n    })\n]);\nconst zTurboRuleConfigItemOptions = _zod.z.object({\n    loaders: _zod.z.array(zTurboLoaderItem),\n    as: _zod.z.string().optional()\n});\nconst zTurboRuleConfigItem = _zod.z.union([\n    _zod.z.literal(false),\n    _zod.z.record(_zod.z.string(), _zod.z.lazy(()=>zTurboRuleConfigItem)),\n    zTurboRuleConfigItemOptions\n]);\nconst zTurboRuleConfigItemOrShortcut = _zod.z.union([\n    _zod.z.array(zTurboLoaderItem),\n    zTurboRuleConfigItem\n]);\nconst zTurbopackConfig = _zod.z.strictObject({\n    rules: _zod.z.record(_zod.z.string(), zTurboRuleConfigItemOrShortcut).optional(),\n    resolveAlias: _zod.z.record(_zod.z.string(), _zod.z.union([\n        _zod.z.string(),\n        _zod.z.array(_zod.z.string()),\n        _zod.z.record(_zod.z.string(), _zod.z.union([\n            _zod.z.string(),\n            _zod.z.array(_zod.z.string())\n        ]))\n    ])).optional(),\n    resolveExtensions: _zod.z.array(_zod.z.string()).optional(),\n    moduleIds: _zod.z.enum([\n        'named',\n        'deterministic'\n    ]).optional()\n});\n// Same as zTurbopackConfig but with deprecated properties. Unfortunately, base\n// properties are duplicated here as `ZodType`s do not export `extend()`.\nconst zDeprecatedExperimentalTurboConfig = _zod.z.strictObject({\n    loaders: _zod.z.record(_zod.z.string(), _zod.z.array(zTurboLoaderItem)).optional(),\n    rules: _zod.z.record(_zod.z.string(), zTurboRuleConfigItemOrShortcut).optional(),\n    resolveAlias: _zod.z.record(_zod.z.string(), _zod.z.union([\n        _zod.z.string(),\n        _zod.z.array(_zod.z.string()),\n        _zod.z.record(_zod.z.string(), _zod.z.union([\n            _zod.z.string(),\n            _zod.z.array(_zod.z.string())\n        ]))\n    ])).optional(),\n    resolveExtensions: _zod.z.array(_zod.z.string()).optional(),\n    treeShaking: _zod.z.boolean().optional(),\n    persistentCaching: _zod.z.union([\n        _zod.z.number(),\n        _zod.z.literal(false)\n    ]).optional(),\n    memoryLimit: _zod.z.number().optional(),\n    moduleIds: _zod.z.enum([\n        'named',\n        'deterministic'\n    ]).optional(),\n    minify: _zod.z.boolean().optional(),\n    sourceMaps: _zod.z.boolean().optional()\n});\nconst configSchema = _zod.z.lazy(()=>_zod.z.strictObject({\n        allowedDevOrigins: _zod.z.array(_zod.z.string()).optional(),\n        amp: _zod.z.object({\n            canonicalBase: _zod.z.string().optional()\n        }).optional(),\n        assetPrefix: _zod.z.string().optional(),\n        basePath: _zod.z.string().optional(),\n        bundlePagesRouterDependencies: _zod.z.boolean().optional(),\n        cacheHandler: _zod.z.string().min(1).optional(),\n        cacheMaxMemorySize: _zod.z.number().optional(),\n        cleanDistDir: _zod.z.boolean().optional(),\n        compiler: _zod.z.strictObject({\n            emotion: _zod.z.union([\n                _zod.z.boolean(),\n                _zod.z.object({\n                    sourceMap: _zod.z.boolean().optional(),\n                    autoLabel: _zod.z.union([\n                        _zod.z.literal('always'),\n                        _zod.z.literal('dev-only'),\n                        _zod.z.literal('never')\n                    ]).optional(),\n                    labelFormat: _zod.z.string().min(1).optional(),\n                    importMap: _zod.z.record(_zod.z.string(), _zod.z.record(_zod.z.string(), _zod.z.object({\n                        canonicalImport: _zod.z.tuple([\n                            _zod.z.string(),\n                            _zod.z.string()\n                        ]).optional(),\n                        styledBaseImport: _zod.z.tuple([\n                            _zod.z.string(),\n                            _zod.z.string()\n                        ]).optional()\n                    }))).optional()\n                })\n            ]).optional(),\n            reactRemoveProperties: _zod.z.union([\n                _zod.z.boolean().optional(),\n                _zod.z.object({\n                    properties: _zod.z.array(_zod.z.string()).optional()\n                })\n            ]).optional(),\n            relay: _zod.z.object({\n                src: _zod.z.string(),\n                artifactDirectory: _zod.z.string().optional(),\n                language: _zod.z.enum([\n                    'javascript',\n                    'typescript',\n                    'flow'\n                ]).optional(),\n                eagerEsModules: _zod.z.boolean().optional()\n            }).optional(),\n            removeConsole: _zod.z.union([\n                _zod.z.boolean().optional(),\n                _zod.z.object({\n                    exclude: _zod.z.array(_zod.z.string()).min(1).optional()\n                })\n            ]).optional(),\n            styledComponents: _zod.z.union([\n                _zod.z.boolean().optional(),\n                _zod.z.object({\n                    displayName: _zod.z.boolean().optional(),\n                    topLevelImportPaths: _zod.z.array(_zod.z.string()).optional(),\n                    ssr: _zod.z.boolean().optional(),\n                    fileName: _zod.z.boolean().optional(),\n                    meaninglessFileNames: _zod.z.array(_zod.z.string()).optional(),\n                    minify: _zod.z.boolean().optional(),\n                    transpileTemplateLiterals: _zod.z.boolean().optional(),\n                    namespace: _zod.z.string().min(1).optional(),\n                    pure: _zod.z.boolean().optional(),\n                    cssProp: _zod.z.boolean().optional()\n                })\n            ]),\n            styledJsx: _zod.z.union([\n                _zod.z.boolean().optional(),\n                _zod.z.object({\n                    useLightningcss: _zod.z.boolean().optional()\n                })\n            ]),\n            define: _zod.z.record(_zod.z.string(), _zod.z.string()).optional()\n        }).optional(),\n        compress: _zod.z.boolean().optional(),\n        configOrigin: _zod.z.string().optional(),\n        crossOrigin: _zod.z.union([\n            _zod.z.literal('anonymous'),\n            _zod.z.literal('use-credentials')\n        ]).optional(),\n        deploymentId: _zod.z.string().optional(),\n        devIndicators: _zod.z.union([\n            _zod.z.object({\n                buildActivityPosition: _zod.z.union([\n                    _zod.z.literal('bottom-left'),\n                    _zod.z.literal('bottom-right'),\n                    _zod.z.literal('top-left'),\n                    _zod.z.literal('top-right')\n                ]).optional(),\n                position: _zod.z.union([\n                    _zod.z.literal('bottom-left'),\n                    _zod.z.literal('bottom-right'),\n                    _zod.z.literal('top-left'),\n                    _zod.z.literal('top-right')\n                ]).optional()\n            }),\n            _zod.z.literal(false)\n        ]).optional(),\n        distDir: _zod.z.string().min(1).optional(),\n        env: _zod.z.record(_zod.z.string(), _zod.z.union([\n            _zod.z.string(),\n            _zod.z.undefined()\n        ])).optional(),\n        eslint: _zod.z.strictObject({\n            dirs: _zod.z.array(_zod.z.string().min(1)).optional(),\n            ignoreDuringBuilds: _zod.z.boolean().optional()\n        }).optional(),\n        excludeDefaultMomentLocales: _zod.z.boolean().optional(),\n        experimental: _zod.z.strictObject({\n            nodeMiddleware: _zod.z.boolean().optional(),\n            after: _zod.z.boolean().optional(),\n            appDocumentPreloading: _zod.z.boolean().optional(),\n            appNavFailHandling: _zod.z.boolean().optional(),\n            preloadEntriesOnStart: _zod.z.boolean().optional(),\n            allowedRevalidateHeaderKeys: _zod.z.array(_zod.z.string()).optional(),\n            amp: _zod.z.object({\n                // AMP optimizer option is unknown, use z.any() here\n                optimizer: _zod.z.any().optional(),\n                skipValidation: _zod.z.boolean().optional(),\n                validator: _zod.z.string().optional()\n            }).optional(),\n            staleTimes: _zod.z.object({\n                dynamic: _zod.z.number().optional(),\n                static: _zod.z.number().optional()\n            }).optional(),\n            cacheLife: _zod.z.record(_zod.z.object({\n                stale: _zod.z.number().optional(),\n                revalidate: _zod.z.number().optional(),\n                expire: _zod.z.number().optional()\n            })).optional(),\n            cacheHandlers: _zod.z.record(_zod.z.string(), _zod.z.string().optional()).optional(),\n            clientRouterFilter: _zod.z.boolean().optional(),\n            clientRouterFilterRedirects: _zod.z.boolean().optional(),\n            clientRouterFilterAllowedRate: _zod.z.number().optional(),\n            cpus: _zod.z.number().optional(),\n            memoryBasedWorkersCount: _zod.z.boolean().optional(),\n            craCompat: _zod.z.boolean().optional(),\n            caseSensitiveRoutes: _zod.z.boolean().optional(),\n            clientSegmentCache: _zod.z.union([\n                _zod.z.boolean(),\n                _zod.z.literal('client-only')\n            ]).optional(),\n            dynamicOnHover: _zod.z.boolean().optional(),\n            disableOptimizedLoading: _zod.z.boolean().optional(),\n            disablePostcssPresetEnv: _zod.z.boolean().optional(),\n            dynamicIO: _zod.z.boolean().optional(),\n            inlineCss: _zod.z.boolean().optional(),\n            esmExternals: _zod.z.union([\n                _zod.z.boolean(),\n                _zod.z.literal('loose')\n            ]).optional(),\n            serverActions: _zod.z.object({\n                bodySizeLimit: zSizeLimit.optional(),\n                allowedOrigins: _zod.z.array(_zod.z.string()).optional()\n            }).optional(),\n            // The original type was Record<string, any>\n            extensionAlias: _zod.z.record(_zod.z.string(), _zod.z.any()).optional(),\n            externalDir: _zod.z.boolean().optional(),\n            externalMiddlewareRewritesResolve: _zod.z.boolean().optional(),\n            fallbackNodePolyfills: _zod.z.literal(false).optional(),\n            fetchCacheKeyPrefix: _zod.z.string().optional(),\n            forceSwcTransforms: _zod.z.boolean().optional(),\n            fullySpecified: _zod.z.boolean().optional(),\n            gzipSize: _zod.z.boolean().optional(),\n            imgOptConcurrency: _zod.z.number().int().optional().nullable(),\n            imgOptTimeoutInSeconds: _zod.z.number().int().optional(),\n            imgOptMaxInputPixels: _zod.z.number().int().optional(),\n            imgOptSequentialRead: _zod.z.boolean().optional().nullable(),\n            isrFlushToDisk: _zod.z.boolean().optional(),\n            largePageDataBytes: _zod.z.number().optional(),\n            linkNoTouchStart: _zod.z.boolean().optional(),\n            manualClientBasePath: _zod.z.boolean().optional(),\n            middlewarePrefetch: _zod.z.enum([\n                'strict',\n                'flexible'\n            ]).optional(),\n            multiZoneDraftMode: _zod.z.boolean().optional(),\n            cssChunking: _zod.z.union([\n                _zod.z.boolean(),\n                _zod.z.literal('strict')\n            ]).optional(),\n            nextScriptWorkers: _zod.z.boolean().optional(),\n            // The critter option is unknown, use z.any() here\n            optimizeCss: _zod.z.union([\n                _zod.z.boolean(),\n                _zod.z.any()\n            ]).optional(),\n            optimisticClientCache: _zod.z.boolean().optional(),\n            parallelServerCompiles: _zod.z.boolean().optional(),\n            parallelServerBuildTraces: _zod.z.boolean().optional(),\n            ppr: _zod.z.union([\n                _zod.z.boolean(),\n                _zod.z.literal('incremental')\n            ]).readonly().optional(),\n            taint: _zod.z.boolean().optional(),\n            prerenderEarlyExit: _zod.z.boolean().optional(),\n            proxyTimeout: _zod.z.number().gte(0).optional(),\n            routerBFCache: _zod.z.boolean().optional(),\n            scrollRestoration: _zod.z.boolean().optional(),\n            sri: _zod.z.object({\n                algorithm: _zod.z.enum([\n                    'sha256',\n                    'sha384',\n                    'sha512'\n                ]).optional()\n            }).optional(),\n            strictNextHead: _zod.z.boolean().optional(),\n            swcPlugins: _zod.z// The specific swc plugin's option is unknown, use z.any() here\n            .array(_zod.z.tuple([\n                _zod.z.string(),\n                _zod.z.record(_zod.z.string(), _zod.z.any())\n            ])).optional(),\n            swcTraceProfiling: _zod.z.boolean().optional(),\n            // NonNullable<webpack.Configuration['experiments']>['buildHttp']\n            urlImports: _zod.z.any().optional(),\n            viewTransition: _zod.z.boolean().optional(),\n            workerThreads: _zod.z.boolean().optional(),\n            webVitalsAttribution: _zod.z.array(_zod.z.union([\n                _zod.z.literal('CLS'),\n                _zod.z.literal('FCP'),\n                _zod.z.literal('FID'),\n                _zod.z.literal('INP'),\n                _zod.z.literal('LCP'),\n                _zod.z.literal('TTFB')\n            ])).optional(),\n            // This is partial set of mdx-rs transform options we support, aligned\n            // with next_core::next_config::MdxRsOptions. Ensure both types are kept in sync.\n            mdxRs: _zod.z.union([\n                _zod.z.boolean(),\n                _zod.z.object({\n                    development: _zod.z.boolean().optional(),\n                    jsxRuntime: _zod.z.string().optional(),\n                    jsxImportSource: _zod.z.string().optional(),\n                    providerImportSource: _zod.z.string().optional(),\n                    mdxType: _zod.z.enum([\n                        'gfm',\n                        'commonmark'\n                    ]).optional()\n                })\n            ]).optional(),\n            typedRoutes: _zod.z.boolean().optional(),\n            webpackBuildWorker: _zod.z.boolean().optional(),\n            webpackMemoryOptimizations: _zod.z.boolean().optional(),\n            /**\n         * @deprecated Use `config.turbopack` instead.\n         */ turbo: zDeprecatedExperimentalTurboConfig.optional(),\n            turbopackMemoryLimit: _zod.z.number().optional(),\n            turbopackMinify: _zod.z.boolean().optional(),\n            turbopackPersistentCaching: _zod.z.boolean().optional(),\n            turbopackSourceMaps: _zod.z.boolean().optional(),\n            turbopackTreeShaking: _zod.z.boolean().optional(),\n            optimizePackageImports: _zod.z.array(_zod.z.string()).optional(),\n            optimizeServerReact: _zod.z.boolean().optional(),\n            clientTraceMetadata: _zod.z.array(_zod.z.string()).optional(),\n            serverMinification: _zod.z.boolean().optional(),\n            serverSourceMaps: _zod.z.boolean().optional(),\n            useWasmBinary: _zod.z.boolean().optional(),\n            useLightningcss: _zod.z.boolean().optional(),\n            useEarlyImport: _zod.z.boolean().optional(),\n            testProxy: _zod.z.boolean().optional(),\n            defaultTestRunner: _zod.z.enum(_nexttest.SUPPORTED_TEST_RUNNERS_LIST).optional(),\n            allowDevelopmentBuild: _zod.z.literal(true).optional(),\n            reactCompiler: _zod.z.union([\n                _zod.z.boolean(),\n                _zod.z.object({\n                    compilationMode: _zod.z.enum([\n                        'infer',\n                        'annotation',\n                        'all'\n                    ]).optional(),\n                    panicThreshold: _zod.z.enum([\n                        'ALL_ERRORS',\n                        'CRITICAL_ERRORS',\n                        'NONE'\n                    ]).optional()\n                }).optional()\n            ]),\n            staticGenerationRetryCount: _zod.z.number().int().optional(),\n            staticGenerationMaxConcurrency: _zod.z.number().int().optional(),\n            staticGenerationMinPagesPerWorker: _zod.z.number().int().optional(),\n            typedEnv: _zod.z.boolean().optional(),\n            serverComponentsHmrCache: _zod.z.boolean().optional(),\n            authInterrupts: _zod.z.boolean().optional(),\n            useCache: _zod.z.boolean().optional(),\n            slowModuleDetection: _zod.z.object({\n                buildTimeThresholdMs: _zod.z.number().int()\n            }).optional()\n        }).optional(),\n        exportPathMap: _zod.z.function().args(zExportMap, _zod.z.object({\n            dev: _zod.z.boolean(),\n            dir: _zod.z.string(),\n            outDir: _zod.z.string().nullable(),\n            distDir: _zod.z.string(),\n            buildId: _zod.z.string()\n        })).returns(_zod.z.union([\n            zExportMap,\n            _zod.z.promise(zExportMap)\n        ])).optional(),\n        generateBuildId: _zod.z.function().args().returns(_zod.z.union([\n            _zod.z.string(),\n            _zod.z.null(),\n            _zod.z.promise(_zod.z.union([\n                _zod.z.string(),\n                _zod.z.null()\n            ]))\n        ])).optional(),\n        generateEtags: _zod.z.boolean().optional(),\n        headers: _zod.z.function().args().returns(_zod.z.promise(_zod.z.array(zHeader))).optional(),\n        htmlLimitedBots: _zod.z.instanceof(RegExp).optional(),\n        httpAgentOptions: _zod.z.strictObject({\n            keepAlive: _zod.z.boolean().optional()\n        }).optional(),\n        i18n: _zod.z.strictObject({\n            defaultLocale: _zod.z.string().min(1),\n            domains: _zod.z.array(_zod.z.strictObject({\n                defaultLocale: _zod.z.string().min(1),\n                domain: _zod.z.string().min(1),\n                http: _zod.z.literal(true).optional(),\n                locales: _zod.z.array(_zod.z.string().min(1)).optional()\n            })).optional(),\n            localeDetection: _zod.z.literal(false).optional(),\n            locales: _zod.z.array(_zod.z.string().min(1))\n        }).nullable().optional(),\n        images: _zod.z.strictObject({\n            localPatterns: _zod.z.array(_zod.z.strictObject({\n                pathname: _zod.z.string().optional(),\n                search: _zod.z.string().optional()\n            })).max(25).optional(),\n            remotePatterns: _zod.z.array(_zod.z.union([\n                _zod.z.instanceof(URL),\n                _zod.z.strictObject({\n                    hostname: _zod.z.string(),\n                    pathname: _zod.z.string().optional(),\n                    port: _zod.z.string().max(5).optional(),\n                    protocol: _zod.z.enum([\n                        'http',\n                        'https'\n                    ]).optional(),\n                    search: _zod.z.string().optional()\n                })\n            ])).max(50).optional(),\n            unoptimized: _zod.z.boolean().optional(),\n            contentSecurityPolicy: _zod.z.string().optional(),\n            contentDispositionType: _zod.z.enum([\n                'inline',\n                'attachment'\n            ]).optional(),\n            dangerouslyAllowSVG: _zod.z.boolean().optional(),\n            deviceSizes: _zod.z.array(_zod.z.number().int().gte(1).lte(10000)).max(25).optional(),\n            disableStaticImages: _zod.z.boolean().optional(),\n            domains: _zod.z.array(_zod.z.string()).max(50).optional(),\n            formats: _zod.z.array(_zod.z.enum([\n                'image/avif',\n                'image/webp'\n            ])).max(4).optional(),\n            imageSizes: _zod.z.array(_zod.z.number().int().gte(1).lte(10000)).min(0).max(25).optional(),\n            loader: _zod.z.enum(_imageconfig.VALID_LOADERS).optional(),\n            loaderFile: _zod.z.string().optional(),\n            minimumCacheTTL: _zod.z.number().int().gte(0).optional(),\n            path: _zod.z.string().optional(),\n            qualities: _zod.z.array(_zod.z.number().int().gte(1).lte(100)).min(1).max(20).optional()\n        }).optional(),\n        logging: _zod.z.union([\n            _zod.z.object({\n                fetches: _zod.z.object({\n                    fullUrl: _zod.z.boolean().optional(),\n                    hmrRefreshes: _zod.z.boolean().optional()\n                }).optional(),\n                incomingRequests: _zod.z.union([\n                    _zod.z.boolean(),\n                    _zod.z.object({\n                        ignore: _zod.z.array(_zod.z.instanceof(RegExp))\n                    })\n                ]).optional()\n            }),\n            _zod.z.literal(false)\n        ]).optional(),\n        modularizeImports: _zod.z.record(_zod.z.string(), _zod.z.object({\n            transform: _zod.z.union([\n                _zod.z.string(),\n                _zod.z.record(_zod.z.string(), _zod.z.string())\n            ]),\n            preventFullImport: _zod.z.boolean().optional(),\n            skipDefaultConversion: _zod.z.boolean().optional()\n        })).optional(),\n        onDemandEntries: _zod.z.strictObject({\n            maxInactiveAge: _zod.z.number().optional(),\n            pagesBufferLength: _zod.z.number().optional()\n        }).optional(),\n        output: _zod.z.enum([\n            'standalone',\n            'export'\n        ]).optional(),\n        outputFileTracingRoot: _zod.z.string().optional(),\n        outputFileTracingExcludes: _zod.z.record(_zod.z.string(), _zod.z.array(_zod.z.string())).optional(),\n        outputFileTracingIncludes: _zod.z.record(_zod.z.string(), _zod.z.array(_zod.z.string())).optional(),\n        pageExtensions: _zod.z.array(_zod.z.string()).min(1).optional(),\n        poweredByHeader: _zod.z.boolean().optional(),\n        productionBrowserSourceMaps: _zod.z.boolean().optional(),\n        publicRuntimeConfig: _zod.z.record(_zod.z.string(), _zod.z.any()).optional(),\n        reactProductionProfiling: _zod.z.boolean().optional(),\n        reactStrictMode: _zod.z.boolean().nullable().optional(),\n        reactMaxHeadersLength: _zod.z.number().nonnegative().int().optional(),\n        redirects: _zod.z.function().args().returns(_zod.z.promise(_zod.z.array(zRedirect))).optional(),\n        rewrites: _zod.z.function().args().returns(_zod.z.promise(_zod.z.union([\n            _zod.z.array(zRewrite),\n            _zod.z.object({\n                beforeFiles: _zod.z.array(zRewrite),\n                afterFiles: _zod.z.array(zRewrite),\n                fallback: _zod.z.array(zRewrite)\n            })\n        ]))).optional(),\n        // sassOptions properties are unknown besides implementation, use z.any() here\n        sassOptions: _zod.z.object({\n            implementation: _zod.z.string().optional()\n        }).catchall(_zod.z.any()).optional(),\n        serverExternalPackages: _zod.z.array(_zod.z.string()).optional(),\n        serverRuntimeConfig: _zod.z.record(_zod.z.string(), _zod.z.any()).optional(),\n        skipMiddlewareUrlNormalize: _zod.z.boolean().optional(),\n        skipTrailingSlashRedirect: _zod.z.boolean().optional(),\n        staticPageGenerationTimeout: _zod.z.number().optional(),\n        expireTime: _zod.z.number().optional(),\n        target: _zod.z.string().optional(),\n        trailingSlash: _zod.z.boolean().optional(),\n        transpilePackages: _zod.z.array(_zod.z.string()).optional(),\n        turbopack: zTurbopackConfig.optional(),\n        typescript: _zod.z.strictObject({\n            ignoreBuildErrors: _zod.z.boolean().optional(),\n            tsconfigPath: _zod.z.string().min(1).optional()\n        }).optional(),\n        useFileSystemPublicRoutes: _zod.z.boolean().optional(),\n        // The webpack config type is unknown, use z.any() here\n        webpack: _zod.z.any().nullable().optional(),\n        watchOptions: _zod.z.strictObject({\n            pollIntervalMs: _zod.z.number().positive().finite().optional()\n        }).optional()\n    }));\n\n//# sourceMappingURL=config-schema.js.map"
        }
    ]
}
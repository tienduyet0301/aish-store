{
    "sourceFile": "node_modules/next/dist/server/lib/worker-utils.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892878367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getFreePort\", {\n    enumerable: true,\n    get: function() {\n        return getFreePort;\n    }\n});\nconst _http = /*#__PURE__*/ _interop_require_default(require(\"http\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst getFreePort = async ()=>{\n    return new Promise((resolve, reject)=>{\n        const server = _http.default.createServer(()=>{});\n        server.listen(0, ()=>{\n            const address = server.address();\n            server.close();\n            if (address && typeof address === 'object') {\n                resolve(address.port);\n            } else {\n                reject(Object.defineProperty(new Error('invalid address from server: ' + (address == null ? void 0 : address.toString())), \"__NEXT_ERROR_CODE\", {\n                    value: \"E327\",\n                    enumerable: false,\n                    configurable: true\n                }));\n            }\n        });\n    });\n};\n\n//# sourceMappingURL=worker-utils.js.map"
        }
    ]
}
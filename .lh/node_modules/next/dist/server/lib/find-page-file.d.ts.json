{
    "sourceFile": "node_modules/next/dist/server/lib/find-page-file.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892875360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { PageExtensions } from '../../build/page-extensions-type';\n/**\n * Finds a page file with the given parameters. If the page is duplicated with\n * multiple extensions it will throw, otherwise it will return the *relative*\n * path to the page file or null if it is not found.\n *\n * @param pagesDir Absolute path to the pages folder with trailing `/pages`.\n * @param normalizedPagePath The page normalized (it will be denormalized).\n * @param pageExtensions Array of page extensions.\n */\nexport declare function findPageFile(pagesDir: string, normalizedPagePath: string, pageExtensions: PageExtensions, isAppDir: boolean): Promise<string | null>;\n/**\n *\n * createValidFileMatcher receives configured page extensions and return helpers to determine:\n * `isLayoutsLeafPage`: if a file is a valid page file or routes file under app directory\n * `isTrackedFiles`: if it's a tracked file for webpack watcher\n *\n */\nexport declare function createValidFileMatcher(pageExtensions: PageExtensions, appDirPath: string | undefined): {\n    isPageFile: (filePath: string) => boolean;\n    isAppRouterPage: (filePath: string) => boolean;\n    isMetadataFile: (filePath: string) => boolean;\n    isRootNotFound: (filePath: string) => boolean;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/lib/router-utils/resolve-routes.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892877405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { FsOutput } from './filesystem';\nimport type { IncomingMessage, ServerResponse } from 'http';\nimport type { NextConfigComplete } from '../../config-shared';\nimport type { RenderServer, initialize } from '../router-server';\nimport type { UnwrapPromise } from '../../../lib/coalesced-function';\nimport type { NextUrlWithParsedQuery } from '../../request-meta';\nexport declare function getResolveRoutes(fsChecker: UnwrapPromise<ReturnType<typeof import('./filesystem').setupFsCheck>>, config: NextConfigComplete, opts: Parameters<typeof initialize>[0], renderServer: RenderServer, renderServerOpts: Parameters<RenderServer['initialize']>[0], ensureMiddleware?: (url?: string) => Promise<void>): ({ req, res, isUpgradeReq, invokedOutputs, }: {\n    req: IncomingMessage;\n    res: ServerResponse;\n    isUpgradeReq: boolean;\n    signal: AbortSignal;\n    invokedOutputs?: Set<string>;\n}) => Promise<{\n    finished: boolean;\n    statusCode?: number;\n    bodyStream?: ReadableStream | null;\n    resHeaders: Record<string, string | string[]>;\n    parsedUrl: NextUrlWithParsedQuery;\n    matchedOutput?: FsOutput | null;\n}>;\n"
        }
    ]
}
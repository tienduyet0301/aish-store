{
    "sourceFile": "node_modules/next/dist/server/lib/router-utils/build-data-route.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892877035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"buildDataRoute\", {\n    enumerable: true,\n    get: function() {\n        return buildDataRoute;\n    }\n});\nconst _path = /*#__PURE__*/ _interop_require_default(require(\"../../../shared/lib/isomorphic/path\"));\nconst _normalizepagepath = require(\"../../../shared/lib/page-path/normalize-page-path\");\nconst _isdynamic = require(\"../../../shared/lib/router/utils/is-dynamic\");\nconst _routeregex = require(\"../../../shared/lib/router/utils/route-regex\");\nconst _loadcustomroutes = require(\"../../../lib/load-custom-routes\");\nconst _escaperegexp = require(\"../../../shared/lib/escape-regexp\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction buildDataRoute(page, buildId) {\n    const pagePath = (0, _normalizepagepath.normalizePagePath)(page);\n    const dataRoute = _path.default.posix.join('/_next/data', buildId, `${pagePath}.json`);\n    let dataRouteRegex;\n    let namedDataRouteRegex;\n    let routeKeys;\n    if ((0, _isdynamic.isDynamicRoute)(page)) {\n        const routeRegex = (0, _routeregex.getNamedRouteRegex)(dataRoute, {\n            prefixRouteKeys: true,\n            includeSuffix: true,\n            excludeOptionalTrailingSlash: true\n        });\n        dataRouteRegex = (0, _loadcustomroutes.normalizeRouteRegex)(routeRegex.re.source);\n        namedDataRouteRegex = routeRegex.namedRegex;\n        routeKeys = routeRegex.routeKeys;\n    } else {\n        dataRouteRegex = (0, _loadcustomroutes.normalizeRouteRegex)(new RegExp(`^${_path.default.posix.join('/_next/data', (0, _escaperegexp.escapeStringRegexp)(buildId), `${pagePath}\\\\.json`)}$`).source);\n    }\n    return {\n        page,\n        routeKeys,\n        dataRouteRegex,\n        namedDataRouteRegex\n    };\n}\n\n//# sourceMappingURL=build-data-route.js.map"
        }
    ]
}
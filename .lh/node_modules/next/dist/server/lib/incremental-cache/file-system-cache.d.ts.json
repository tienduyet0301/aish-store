{
    "sourceFile": "node_modules/next/dist/server/lib/incremental-cache/file-system-cache.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892875654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from './';\nimport type { CacheFs } from '../../../shared/lib/utils';\nimport { type IncrementalCacheValue, type SetIncrementalFetchCacheContext, type SetIncrementalResponseCacheContext } from '../../response-cache';\ntype FileSystemCacheContext = Omit<CacheHandlerContext, 'fs' | 'serverDistDir'> & {\n    fs: CacheFs;\n    serverDistDir: string;\n};\nexport default class FileSystemCache implements CacheHandler {\n    private fs;\n    private flushToDisk?;\n    private serverDistDir;\n    private revalidatedTags;\n    private debug;\n    constructor(ctx: FileSystemCacheContext);\n    resetRequestCache(): void;\n    revalidateTag(...args: Parameters<CacheHandler['revalidateTag']>): Promise<void>;\n    get(...args: Parameters<CacheHandler['get']>): Promise<CacheHandlerValue | null>;\n    set(key: string, data: IncrementalCacheValue | null, ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext): Promise<void>;\n    private getFilePath;\n}\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/server/lib/patch-set-header.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892876732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"patchSetHeaderWithCookieSupport\", {\n    enumerable: true,\n    get: function() {\n        return patchSetHeaderWithCookieSupport;\n    }\n});\nconst _requestmeta = require(\"../request-meta\");\nfunction patchSetHeaderWithCookieSupport(req, res) {\n    const setHeader = res.setHeader.bind(res);\n    res.setHeader = (name, value)=>{\n        // When renders /_error after page is failed, it could attempt to set\n        // headers after headers.\n        if ('headersSent' in res && res.headersSent) {\n            return res;\n        }\n        if (name.toLowerCase() === 'set-cookie') {\n            const middlewareValue = (0, _requestmeta.getRequestMeta)(req, 'middlewareCookie');\n            if (!middlewareValue || !Array.isArray(value) || !value.every((item, idx)=>item === middlewareValue[idx])) {\n                value = [\n                    // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n                    ...new Set([\n                        ...middlewareValue || [],\n                        ...typeof value === 'string' ? [\n                            value\n                        ] : Array.isArray(value) ? value : []\n                    ])\n                ];\n            }\n        }\n        return setHeader(name, value);\n    };\n}\n\n//# sourceMappingURL=patch-set-header.js.map"
        }
    ]
}
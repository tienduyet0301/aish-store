{
    "sourceFile": "node_modules/next/dist/server/config-shared.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892872217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { webpack } from 'next/dist/compiled/webpack/webpack';\nimport type { Header, Redirect, Rewrite } from '../lib/load-custom-routes';\nimport type { ImageConfig, ImageConfigComplete } from '../shared/lib/image-config';\nimport type { SubresourceIntegrityAlgorithm } from '../build/webpack/plugins/subresource-integrity-plugin';\nimport type { WEB_VITALS } from '../shared/lib/utils';\nimport type { NextParsedUrlQuery } from './request-meta';\nimport type { SizeLimit } from '../types';\nimport type { SupportedTestRunners } from '../cli/next-test';\nimport type { ExperimentalPPRConfig } from './lib/experimental/ppr';\nexport type NextConfigComplete = Required<NextConfig> & {\n    images: Required<ImageConfigComplete>;\n    typescript: Required<TypeScriptConfig>;\n    configOrigin?: string;\n    configFile?: string;\n    configFileName: string;\n    htmlLimitedBots: string | undefined;\n    experimental: Omit<ExperimentalConfig, 'turbo'>;\n};\nexport type I18NDomains = readonly DomainLocale[];\nexport interface I18NConfig {\n    defaultLocale: string;\n    domains?: I18NDomains;\n    localeDetection?: false;\n    locales: readonly string[];\n}\nexport interface DomainLocale {\n    defaultLocale: string;\n    domain: string;\n    http?: true;\n    locales?: readonly string[];\n}\nexport interface ESLintConfig {\n    /** Only run ESLint on these directories with `next lint` and `next build`. */\n    dirs?: string[];\n    /** Do not run ESLint during production builds (`next build`). */\n    ignoreDuringBuilds?: boolean;\n}\nexport interface TypeScriptConfig {\n    /** Do not run TypeScript during production builds (`next build`). */\n    ignoreBuildErrors?: boolean;\n    /** Relative path to a custom tsconfig file */\n    tsconfigPath?: string;\n}\nexport interface EmotionConfig {\n    sourceMap?: boolean;\n    autoLabel?: 'dev-only' | 'always' | 'never';\n    labelFormat?: string;\n    importMap?: {\n        [importName: string]: {\n            [exportName: string]: {\n                canonicalImport?: [string, string];\n                styledBaseImport?: [string, string];\n            };\n        };\n    };\n}\nexport interface StyledComponentsConfig {\n    /**\n     * Enabled by default in development, disabled in production to reduce file size,\n     * setting this will override the default for all environments.\n     */\n    displayName?: boolean;\n    topLevelImportPaths?: string[];\n    ssr?: boolean;\n    fileName?: boolean;\n    meaninglessFileNames?: string[];\n    minify?: boolean;\n    transpileTemplateLiterals?: boolean;\n    namespace?: string;\n    pure?: boolean;\n    cssProp?: boolean;\n}\ntype JSONValue = string | number | boolean | JSONValue[] | {\n    [k: string]: JSONValue;\n};\n/**\n * @deprecated Use `TurbopackRuleConfigItem` instead.\n */\nexport type TurbopackLoaderItem = string | {\n    loader: string;\n    options: Record<string, JSONValue>;\n};\nexport type TurbopackRuleConfigItemOrShortcut = TurbopackLoaderItem[] | TurbopackRuleConfigItem;\nexport type TurbopackRuleConfigItemOptions = {\n    loaders: TurbopackLoaderItem[];\n    as?: string;\n};\nexport type TurbopackRuleConfigItem = TurbopackRuleConfigItemOptions | {\n    [condition: string]: TurbopackRuleConfigItem;\n} | false;\nexport interface TurbopackOptions {\n    /**\n     * (`next --turbopack` only) A mapping of aliased imports to modules to load in their place.\n     *\n     * @see [Resolve Alias](https://nextjs.org/docs/app/api-reference/next-config-js/turbo#resolve-alias)\n     */\n    resolveAlias?: Record<string, string | string[] | Record<string, string | string[]>>;\n    /**\n     * (`next --turbopack` only) A list of extensions to resolve when importing files.\n     *\n     * @see [Resolve Extensions](https://nextjs.org/docs/app/api-reference/next-config-js/turbo#resolve-extensions)\n     */\n    resolveExtensions?: string[];\n    /**\n     * (`next --turbopack` only) A list of webpack loaders to apply when running with Turbopack.\n     *\n     * @see [Turbopack Loaders](https://nextjs.org/docs/app/api-reference/next-config-js/turbo#webpack-loaders)\n     */\n    rules?: Record<string, TurbopackRuleConfigItemOrShortcut>;\n    /**\n     * The module ID strategy to use for Turbopack.\n     * If not set, the default is `'named'` for development and `'deterministic'`\n     * for production.\n     */\n    moduleIds?: 'named' | 'deterministic';\n    /**\n     * This is the repo root usually and only files above this\n     * directory can be resolved by turbopack.\n     */\n    root?: string;\n}\nexport interface DeprecatedExperimentalTurboOptions extends TurbopackOptions {\n    /**\n     * (`next --turbopack` only) A list of webpack loaders to apply when running with Turbopack.\n     *\n     * @deprecated Use `rules` instead.\n     * @see [Turbopack Loaders](https://nextjs.org/docs/app/api-reference/next-config-js/turbo#webpack-loaders)\n     */\n    loaders?: Record<string, TurbopackLoaderItem[]>;\n    /**\n     * A target memory limit for turbo, in bytes.\n     * @deprecated Use `experimental.turbopackMemoryLimit` instead.\n     */\n    memoryLimit?: number;\n    /**\n     * Enable minification. Defaults to true in build mode and false in dev mode.\n     * @deprecated Use `experimental.turbopackMinify` instead.\n     */\n    minify?: boolean;\n    /**\n     * Enable tree shaking for the turbopack dev server and build.\n     * @deprecated Use `experimental.turbopackTreeShaking` instead.\n     */\n    treeShaking?: boolean;\n    /**\n     * Enable source maps. Defaults to true.\n     * @deprecated Use `experimental.turbopackSourceMaps` instead.\n     */\n    sourceMaps?: boolean;\n}\nexport interface WebpackConfigContext {\n    /** Next.js root directory */\n    dir: string;\n    /** Indicates if the compilation will be done in development */\n    dev: boolean;\n    /** It's `true` for server-side compilation, and `false` for client-side compilation */\n    isServer: boolean;\n    /**  The build id, used as a unique identifier between builds */\n    buildId: string;\n    /** The next.config.js merged with default values */\n    config: NextConfigComplete;\n    /** Default loaders used internally by Next.js */\n    defaultLoaders: {\n        /** Default babel-loader configuration */\n        babel: any;\n    };\n    /** Number of total Next.js pages */\n    totalPages: number;\n    /** The webpack configuration */\n    webpack: any;\n    /** The current server runtime */\n    nextRuntime?: 'nodejs' | 'edge';\n}\nexport interface NextJsWebpackConfig {\n    (\n    /** Existing Webpack config */\n    config: any, context: WebpackConfigContext): any;\n}\n/**\n * Set of options for the react compiler next.js\n * currently supports.\n *\n * This can be changed without breaking changes while supporting\n * react compiler in the experimental phase.\n */\nexport interface ReactCompilerOptions {\n    compilationMode?: 'infer' | 'annotation' | 'all';\n    panicThreshold?: 'ALL_ERRORS' | 'CRITICAL_ERRORS' | 'NONE';\n}\nexport interface IncomingRequestLoggingConfig {\n    /**\n     * A regular expression array to match incoming requests that should not be logged.\n     * You can specify multiple patterns to match incoming requests that should not be logged.\n     */\n    ignore?: RegExp[];\n}\nexport interface LoggingConfig {\n    fetches?: {\n        fullUrl?: boolean;\n        /**\n         * If true, fetch requests that are restored from the HMR cache are logged\n         * during an HMR refresh request, i.e. when editing a server component.\n         */\n        hmrRefreshes?: boolean;\n    };\n    /**\n     * If set to false, incoming request logging is disabled.\n     * You can specify a pattern to match incoming requests that should not be logged.\n     */\n    incomingRequests?: boolean | IncomingRequestLoggingConfig;\n}\nexport interface ExperimentalConfig {\n    nodeMiddleware?: boolean;\n    cacheHandlers?: {\n        default?: string;\n        remote?: string;\n        static?: string;\n        [handlerName: string]: string | undefined;\n    };\n    multiZoneDraftMode?: boolean;\n    appNavFailHandling?: boolean;\n    prerenderEarlyExit?: boolean;\n    linkNoTouchStart?: boolean;\n    caseSensitiveRoutes?: boolean;\n    clientSegmentCache?: boolean | 'client-only';\n    dynamicOnHover?: boolean;\n    appDocumentPreloading?: boolean;\n    preloadEntriesOnStart?: boolean;\n    /** @default true */\n    strictNextHead?: boolean;\n    clientRouterFilter?: boolean;\n    clientRouterFilterRedirects?: boolean;\n    /**\n     * This config can be used to override the cache behavior for the client router.\n     * These values indicate the time, in seconds, that the cache should be considered\n     * reusable. When the `prefetch` Link prop is left unspecified, this will use the `dynamic` value.\n     * When the `prefetch` Link prop is set to `true`, this will use the `static` value.\n     */\n    staleTimes?: {\n        dynamic?: number;\n        static?: number;\n    };\n    cacheLife?: {\n        [profile: string]: {\n            stale?: number;\n            revalidate?: number;\n            expire?: number;\n        };\n    };\n    clientRouterFilterAllowedRate?: number;\n    externalMiddlewareRewritesResolve?: boolean;\n    extensionAlias?: Record<string, any>;\n    allowedRevalidateHeaderKeys?: string[];\n    fetchCacheKeyPrefix?: string;\n    imgOptConcurrency?: number | null;\n    imgOptTimeoutInSeconds?: number;\n    imgOptMaxInputPixels?: number;\n    imgOptSequentialRead?: boolean | null;\n    optimisticClientCache?: boolean;\n    /**\n     * @deprecated use config.expireTime instead\n     */\n    expireTime?: number;\n    middlewarePrefetch?: 'strict' | 'flexible';\n    manualClientBasePath?: boolean;\n    /**\n     * CSS Chunking strategy. Defaults to `true` (\"loose\" mode), which guesses dependencies\n     * between CSS files to keep ordering of them.\n     * An alternative is 'strict', which will try to keep correct ordering as\n     * much as possible, even when this leads to many requests.\n     */\n    cssChunking?: boolean | 'strict';\n    disablePostcssPresetEnv?: boolean;\n    cpus?: number;\n    memoryBasedWorkersCount?: boolean;\n    proxyTimeout?: number;\n    isrFlushToDisk?: boolean;\n    workerThreads?: boolean;\n    optimizeCss?: boolean | Record<string, unknown>;\n    nextScriptWorkers?: boolean;\n    scrollRestoration?: boolean;\n    externalDir?: boolean;\n    amp?: {\n        optimizer?: any;\n        validator?: string;\n        skipValidation?: boolean;\n    };\n    disableOptimizedLoading?: boolean;\n    gzipSize?: boolean;\n    craCompat?: boolean;\n    esmExternals?: boolean | 'loose';\n    fullySpecified?: boolean;\n    urlImports?: NonNullable<webpack.Configuration['experiments']>['buildHttp'];\n    swcTraceProfiling?: boolean;\n    forceSwcTransforms?: boolean;\n    swcPlugins?: Array<[string, Record<string, unknown>]>;\n    largePageDataBytes?: number;\n    /**\n     * If set to `false`, webpack won't fall back to polyfill Node.js modules in the browser\n     * Full list of old polyfills is accessible here:\n     * [webpack/webpack#ModuleNotoundError.js#L13-L42](https://github.com/webpack/webpack/blob/2a0536cf510768111a3a6dceeb14cb79b9f59273/lib/ModuleNotFoundError.js#L13-L42)\n     */\n    fallbackNodePolyfills?: false;\n    sri?: {\n        algorithm?: SubresourceIntegrityAlgorithm;\n    };\n    webVitalsAttribution?: Array<(typeof WEB_VITALS)[number]>;\n    /**\n     * Automatically apply the \"modularizeImports\" optimization to imports of the specified packages.\n     */\n    optimizePackageImports?: string[];\n    /**\n     * Optimize React APIs for server builds.\n     */\n    optimizeServerReact?: boolean;\n    /**\n     * @deprecated Use `config.turbopack` instead.\n     */\n    turbo?: DeprecatedExperimentalTurboOptions;\n    /**\n     * A target memory limit for turbo, in bytes.\n     */\n    turbopackMemoryLimit?: number;\n    /**\n     * Enable minification. Defaults to true in build mode and false in dev mode.\n     */\n    turbopackMinify?: boolean;\n    /**\n     * Enable persistent caching for the turbopack dev server and build.\n     */\n    turbopackPersistentCaching?: boolean;\n    /**\n     * Enable source maps. Defaults to true.\n     */\n    turbopackSourceMaps?: boolean;\n    /**\n     * Enable tree shaking for the turbopack dev server and build.\n     */\n    turbopackTreeShaking?: boolean;\n    /**\n     * For use with `@next/mdx`. Compile MDX files using the new Rust compiler.\n     * @see https://nextjs.org/docs/app/api-reference/next-config-js/mdxRs\n     */\n    mdxRs?: boolean | {\n        development?: boolean;\n        jsx?: boolean;\n        jsxRuntime?: string;\n        jsxImportSource?: string;\n        providerImportSource?: string;\n        mdxType?: 'gfm' | 'commonmark';\n    };\n    /**\n     * Generate Route types and enable type checking for Link and Router.push, etc.\n     * @see https://nextjs.org/docs/app/api-reference/next-config-js/typedRoutes\n     */\n    typedRoutes?: boolean;\n    /**\n     * Enable type-checking and autocompletion for environment variables.\n     *\n     * @default false\n     */\n    typedEnv?: boolean;\n    /**\n     * Runs the compilations for server and edge in parallel instead of in serial.\n     * This will make builds faster if there is enough server and edge functions\n     * in the application at the cost of more memory.\n     *\n     * NOTE: This option is only valid when the build process can use workers. See\n     * the documentation for `webpackBuildWorker` for more details.\n     */\n    parallelServerCompiles?: boolean;\n    /**\n     * Runs the logic to collect build traces for the server routes in parallel\n     * with other work during the compilation. This will increase the speed of\n     * the build at the cost of more memory. This option may incur some additional\n     * work compared to if the option was disabled since the work is started\n     * before data from the client compilation is available to potentially reduce\n     * the amount of code that needs to be traced. Despite that, this may still\n     * result in faster builds for some applications.\n     *\n     * Valid values are:\n     * - `true`: Collect the server build traces in parallel.\n     * - `false`: Do not collect the server build traces in parallel.\n     * - `undefined`: Collect server build traces in parallel only in the `experimental-compile` mode.\n     *\n     * NOTE: This option is only valid when the build process can use workers. See\n     * the documentation for `webpackBuildWorker` for more details.\n     */\n    parallelServerBuildTraces?: boolean;\n    /**\n     * Run the Webpack build in a separate process to optimize memory usage during build.\n     * Valid values are:\n     * - `false`: Disable the Webpack build worker\n     * - `true`: Enable the Webpack build worker\n     * - `undefined`: Enable the Webpack build worker only if the webpack config is not customized\n     */\n    webpackBuildWorker?: boolean;\n    /**\n     * Enables optimizations to reduce memory usage in Webpack. This reduces the max size of the heap\n     * but may increase compile times slightly.\n     * Valid values are:\n     * - `false`: Disable Webpack memory optimizations (default).\n     * - `true`: Enables Webpack memory optimizations.\n     */\n    webpackMemoryOptimizations?: boolean;\n    /**\n     * The array of the meta tags to the client injected by tracing propagation data.\n     */\n    clientTraceMetadata?: string[];\n    /**\n     * Enables experimental Partial Prerendering feature of Next.js.\n     * Using this feature will enable the `react@experimental` for the `app` directory.\n     */\n    ppr?: ExperimentalPPRConfig;\n    /**\n     * Enables experimental taint APIs in React.\n     * Using this feature will enable the `react@experimental` for the `app` directory.\n     */\n    taint?: boolean;\n    /**\n     * Enables the Back/Forward Cache for the router.\n     */\n    routerBFCache?: boolean;\n    serverActions?: {\n        /**\n         * Allows adjusting body parser size limit for server actions.\n         */\n        bodySizeLimit?: SizeLimit;\n        /**\n         * Allowed origins that can bypass Server Action's CSRF check. This is helpful\n         * when you have reverse proxy in front of your app.\n         * @example\n         * [\"my-app.com\", \"*.my-app.com\"]\n         */\n        allowedOrigins?: string[];\n    };\n    /**\n     * enables the minification of server code.\n     */\n    serverMinification?: boolean;\n    /**\n     * Enables source maps generation for the server production bundle.\n     */\n    serverSourceMaps?: boolean;\n    useWasmBinary?: boolean;\n    /**\n     * Use lightningcss instead of postcss-loader\n     */\n    useLightningcss?: boolean;\n    /**\n     * Enables early import feature for app router modules\n     */\n    useEarlyImport?: boolean;\n    /**\n     * Enables view transitions by using the {@link https://github.com/facebook/react/pull/31975 unstable_ViewTransition} Component.\n     */\n    viewTransition?: boolean;\n    /**\n     * Enables `fetch` requests to be proxied to the experimental test proxy server\n     */\n    testProxy?: boolean;\n    /**\n     * Set a default test runner to be used by `next experimental-test`.\n     */\n    defaultTestRunner?: SupportedTestRunners;\n    /**\n     * Allow NODE_ENV=development even for `next build`.\n     */\n    allowDevelopmentBuild?: true;\n    /**\n     * @deprecated use `config.bundlePagesRouterDependencies` instead\n     *\n     */\n    bundlePagesExternals?: boolean;\n    /**\n     * @deprecated use `config.serverExternalPackages` instead\n     *\n     */\n    serverComponentsExternalPackages?: string[];\n    /**\n     * Enable experimental React compiler optimization.\n     * Configuration accepts partial config object to the compiler, if provided\n     * compiler will be enabled.\n     */\n    reactCompiler?: boolean | ReactCompilerOptions;\n    /**\n     * The number of times to retry static generation (per page) before giving up.\n     */\n    staticGenerationRetryCount?: number;\n    /**\n     * The amount of pages to export per worker during static generation.\n     */\n    staticGenerationMaxConcurrency?: number;\n    /**\n     * The minimum number of pages to be chunked into each export worker.\n     */\n    staticGenerationMinPagesPerWorker?: number;\n    /**\n     * Allows previously fetched data to be re-used when editing server components.\n     */\n    serverComponentsHmrCache?: boolean;\n    /**\n     * When enabled will cause IO in App Router to be excluded from prerenders\n     * unless explicitly cached.\n     */\n    dynamicIO?: boolean;\n    /**\n     * Render <style> tags inline in the HTML for imported CSS assets.\n     * Supports app-router in production mode only.\n     */\n    inlineCss?: boolean;\n    /**\n     * This config allows you to enable the experimental navigation API `forbidden` and `unauthorized`.\n     */\n    authInterrupts?: boolean;\n    /**\n     * Enables the use of the `\"use cache\"` directive.\n     */\n    useCache?: boolean;\n    /**\n     * Enables detection and reporting of slow modules during development builds.\n     * Enabling this may impact build performance to ensure accurate measurements.\n     */\n    slowModuleDetection?: {\n        /**\n         * The time threshold in milliseconds for identifying slow modules.\n         * Modules taking longer than this build time threshold will be reported.\n         */\n        buildTimeThresholdMs: number;\n    };\n    /**\n     * Enables the client instrumentation hook.\n     * Loads the instrumentation-client.ts file from the project root\n     * and executes it on the client side before hydration.\n     *\n     * Note: Use with caution as this can negatively impact page loading performance.\n     */\n    clientInstrumentationHook?: boolean;\n}\nexport type ExportPathMap = {\n    [path: string]: {\n        page: string;\n        query?: NextParsedUrlQuery;\n    };\n};\n/**\n * Next.js can be configured through a `next.config.js` file in the root of your project directory.\n *\n * This can change the behavior, enable experimental features, and configure other advanced options.\n *\n * Read more: [Next.js Docs: `next.config.js`](https://nextjs.org/docs/app/api-reference/config/next-config-js)\n */\nexport interface NextConfig extends Record<string, any> {\n    allowedDevOrigins?: string[];\n    exportPathMap?: (defaultMap: ExportPathMap, ctx: {\n        dev: boolean;\n        dir: string;\n        outDir: string | null;\n        distDir: string;\n        buildId: string;\n    }) => Promise<ExportPathMap> | ExportPathMap;\n    /**\n     * Internationalization configuration\n     *\n     * @see [Internationalization docs](https://nextjs.org/docs/advanced-features/i18n-routing)\n     */\n    i18n?: I18NConfig | null;\n    /**\n     * @since version 11\n     * @see [ESLint configuration](https://nextjs.org/docs/app/api-reference/config/eslint)\n     */\n    eslint?: ESLintConfig;\n    /**\n     * @see [Next.js TypeScript documentation](https://nextjs.org/docs/app/api-reference/config/typescript)\n     */\n    typescript?: TypeScriptConfig;\n    /**\n     * Headers allow you to set custom HTTP headers for an incoming request path.\n     *\n     * @see [Headers configuration documentation](https://nextjs.org/docs/app/api-reference/config/next-config-js/headers)\n     */\n    headers?: () => Promise<Header[]>;\n    /**\n     * Rewrites allow you to map an incoming request path to a different destination path.\n     *\n     * @see [Rewrites configuration documentation](https://nextjs.org/docs/app/api-reference/config/next-config-js/rewrites)\n     */\n    rewrites?: () => Promise<Rewrite[] | {\n        beforeFiles?: Rewrite[];\n        afterFiles?: Rewrite[];\n        fallback?: Rewrite[];\n    }>;\n    /**\n     * Redirects allow you to redirect an incoming request path to a different destination path.\n     *\n     * @see [Redirects configuration documentation](https://nextjs.org/docs/app/api-reference/config/next-config-js/redirects)\n     */\n    redirects?: () => Promise<Redirect[]>;\n    /**\n     * @see [Moment.js locales excluded by default](https://nextjs.org/docs/upgrading#momentjs-locales-excluded-by-default)\n     */\n    excludeDefaultMomentLocales?: boolean;\n    /**\n     * Before continuing to add custom webpack configuration to your application make sure Next.js doesn't already support your use-case\n     *\n     * @see [Custom Webpack Config documentation](https://nextjs.org/docs/app/api-reference/config/next-config-js/webpack)\n     */\n    webpack?: NextJsWebpackConfig | null;\n    /**\n     * By default Next.js will redirect urls with trailing slashes to their counterpart without a trailing slash.\n     *\n     * @default false\n     * @see [Trailing Slash Configuration](https://nextjs.org/docs/app/api-reference/config/next-config-js/trailingSlash)\n     */\n    trailingSlash?: boolean;\n    /**\n     * Next.js comes with built-in support for environment variables\n     *\n     * @see [Environment Variables documentation](https://nextjs.org/docs/app/api-reference/config/next-config-js/env)\n     */\n    env?: Record<string, string | undefined>;\n    /**\n     * Destination directory (defaults to `.next`)\n     */\n    distDir?: string;\n    /**\n     * The build output directory (defaults to `.next`) is now cleared by default except for the Next.js caches.\n     */\n    cleanDistDir?: boolean;\n    /**\n     * To set up a CDN, you can set up an asset prefix and configure your CDN's origin to resolve to the domain that Next.js is hosted on.\n     *\n     * @see [CDN Support with Asset Prefix](https://nextjs.org/docs/app/api-reference/config/next-config-js/assetPrefix)\n     */\n    assetPrefix?: string;\n    /**\n     * The default cache handler for the Pages and App Router uses the filesystem cache. This requires no configuration, however, you can customize the cache handler if you prefer.\n     *\n     * @see [Configuring Caching](https://nextjs.org/docs/app/building-your-application/deploying#configuring-caching) and the [API Reference](https://nextjs.org/docs/app/api-reference/next-config-js/incrementalCacheHandlerPath).\n     */\n    cacheHandler?: string | undefined;\n    /**\n     * Configure the in-memory cache size in bytes. Defaults to 50 MB.\n     * If `cacheMaxMemorySize: 0`, this disables in-memory caching entirely.\n     *\n     * @see [Configuring Caching](https://nextjs.org/docs/app/building-your-application/deploying#configuring-caching).\n     */\n    cacheMaxMemorySize?: number;\n    /**\n     * By default, `Next` will serve each file in the `pages` folder under a pathname matching the filename.\n     * To disable this behavior and prevent routing based set this to `true`.\n     *\n     * @default true\n     * @see [Disabling file-system routing](https://nextjs.org/docs/advanced-features/custom-server#disabling-file-system-routing)\n     */\n    useFileSystemPublicRoutes?: boolean;\n    /**\n     * @see [Configuring the build ID](https://nextjs.org/docs/app/api-reference/config/next-config-js/generateBuildId)\n     */\n    generateBuildId?: () => string | null | Promise<string | null>;\n    /** @see [Disabling ETag Configuration](https://nextjs.org/docs/app/api-reference/config/next-config-js/generateEtags) */\n    generateEtags?: boolean;\n    /** @see [Including non-page files in the pages directory](https://nextjs.org/docs/app/api-reference/config/next-config-js/pageExtensions) */\n    pageExtensions?: string[];\n    /** @see [Compression documentation](https://nextjs.org/docs/app/api-reference/config/next-config-js/compress) */\n    compress?: boolean;\n    /** @see [Disabling x-powered-by](https://nextjs.org/docs/app/api-reference/config/next-config-js/poweredByHeader) */\n    poweredByHeader?: boolean;\n    /** @see [Using the Image Component](https://nextjs.org/docs/app/api-reference/next-config-js/images) */\n    images?: ImageConfig;\n    /** Configure indicators in development environment */\n    devIndicators?: false | {\n        /**\n         * @deprecated The dev tools indicator has it enabled by default. To disable, set `devIndicators` to `false`.\n         * */\n        appIsrStatus?: boolean;\n        /**\n         * Show \"building...\" indicator in development\n         * @deprecated The dev tools indicator has it enabled by default. To disable, set `devIndicators` to `false`.\n         */\n        buildActivity?: boolean;\n        /**\n         * Position of \"building...\" indicator in browser\n         * @default \"bottom-right\"\n         * @deprecated Renamed as `position`.\n         */\n        buildActivityPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n        /**\n         * Position of the development tools indicator in the browser window.\n         * @default \"bottom-left\"\n         * */\n        position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n    };\n    /**\n     * Next.js exposes some options that give you some control over how the server will dispose or keep in memory built pages in development.\n     *\n     * @see [Configuring `onDemandEntries`](https://nextjs.org/docs/app/api-reference/config/next-config-js/onDemandEntries)\n     */\n    onDemandEntries?: {\n        /** period (in ms) where the server will keep pages in the buffer */\n        maxInactiveAge?: number;\n        /** number of pages that should be kept simultaneously without being disposed */\n        pagesBufferLength?: number;\n    };\n    /** @see [`next/amp`](https://nextjs.org/docs/api-reference/next/amp) */\n    amp?: {\n        canonicalBase?: string;\n    };\n    /**\n     * A unique identifier for a deployment that will be included in each request's query string or header.\n     */\n    deploymentId?: string;\n    /**\n     * Deploy a Next.js application under a sub-path of a domain\n     *\n     * @see [Base path configuration](https://nextjs.org/docs/app/api-reference/config/next-config-js/basePath)\n     */\n    basePath?: string;\n    /** @see [Customizing sass options](https://nextjs.org/docs/app/api-reference/next-config-js/sassOptions) */\n    sassOptions?: {\n        implementation?: string;\n        [key: string]: any;\n    };\n    /**\n     * Enable browser source map generation during the production build\n     *\n     * @see [Source Maps](https://nextjs.org/docs/advanced-features/source-maps)\n     */\n    productionBrowserSourceMaps?: boolean;\n    /**\n     * Enable react profiling in production\n     *\n     */\n    reactProductionProfiling?: boolean;\n    /**\n     * The Next.js runtime is Strict Mode-compliant.\n     *\n     * @see [React Strict Mode](https://nextjs.org/docs/app/api-reference/config/next-config-js/reactStrictMode)\n     */\n    reactStrictMode?: boolean | null;\n    /**\n     * The maximum length of the headers that are emitted by React and added to\n     * the response.\n     *\n     * @see [React Max Headers Length](https://nextjs.org/docs/app/api-reference/config/next-config-js/reactMaxHeadersLength)\n     */\n    reactMaxHeadersLength?: number;\n    /**\n     * Add public (in browser) runtime configuration to your app\n     *\n     * @see [Runtime configuration](https://nextjs.org/docs/pages/api-reference/config/next-config-js/runtime-configuration\n     */\n    publicRuntimeConfig?: {\n        [key: string]: any;\n    };\n    /**\n     * Add server runtime configuration to your app\n     *\n     * @see [Runtime configuration](https://nextjs.org/docs/pages/api-reference/config/next-config-js/runtime-configuration\n     */\n    serverRuntimeConfig?: {\n        [key: string]: any;\n    };\n    /**\n     * Next.js enables HTTP Keep-Alive by default.\n     * You may want to disable HTTP Keep-Alive for certain `fetch()` calls or globally.\n     *\n     * @see [Disabling HTTP Keep-Alive](https://nextjs.org/docs/app/api-reference/next-config-js/httpAgentOptions)\n     */\n    httpAgentOptions?: {\n        keepAlive?: boolean;\n    };\n    /**\n     * Timeout after waiting to generate static pages in seconds\n     *\n     * @default 60\n     */\n    staticPageGenerationTimeout?: number;\n    /**\n     * Add `\"crossorigin\"` attribute to generated `<script>` elements generated by `<Head />` or `<NextScript />` components\n     *\n     *\n     * @see [`crossorigin` attribute documentation](https://developer.mozilla.org/docs/Web/HTML/Attributes/crossorigin)\n     */\n    crossOrigin?: 'anonymous' | 'use-credentials';\n    /**\n     * Optionally enable compiler transforms\n     *\n     * @see [Supported Compiler Options](https://nextjs.org/docs/advanced-features/compiler#supported-features)\n     */\n    compiler?: {\n        reactRemoveProperties?: boolean | {\n            properties?: string[];\n        };\n        relay?: {\n            src: string;\n            artifactDirectory?: string;\n            language?: 'typescript' | 'javascript' | 'flow';\n            eagerEsModules?: boolean;\n        };\n        removeConsole?: boolean | {\n            exclude?: string[];\n        };\n        styledComponents?: boolean | StyledComponentsConfig;\n        emotion?: boolean | EmotionConfig;\n        styledJsx?: boolean | {\n            useLightningcss?: boolean;\n        };\n        /**\n         * Replaces variables in your code during compile time. Each key will be\n         * replaced with the respective values.\n         */\n        define?: Record<string, string>;\n    };\n    /**\n     * The type of build output.\n     * - `undefined`: The default build output, `.next` directory, that works with production mode `next start` or a hosting provider like Vercel\n     * - `'standalone'`: A standalone build output, `.next/standalone` directory, that only includes necessary files/dependencies. Useful for self-hosting in a Docker container.\n     * - `'export'`: An exported build output, `out` directory, that only includes static HTML/CSS/JS. Useful for self-hosting without a Node.js server.\n     * @see [Output File Tracing](https://nextjs.org/docs/advanced-features/output-file-tracing)\n     * @see [Static HTML Export](https://nextjs.org/docs/advanced-features/static-html-export)\n     */\n    output?: 'standalone' | 'export';\n    /**\n     * Automatically transpile and bundle dependencies from local packages (like monorepos) or from external dependencies (`node_modules`). This replaces the\n     * `next-transpile-modules` package.\n     * @see [transpilePackages](https://nextjs.org/docs/advanced-features/compiler#module-transpilation)\n     */\n    transpilePackages?: string[];\n    /**\n     * Options for Turbopack. Temporarily also available as `experimental.turbo` for compatibility.\n     */\n    turbopack?: TurbopackOptions;\n    skipMiddlewareUrlNormalize?: boolean;\n    skipTrailingSlashRedirect?: boolean;\n    modularizeImports?: Record<string, {\n        transform: string | Record<string, string>;\n        preventFullImport?: boolean;\n        skipDefaultConversion?: boolean;\n    }>;\n    /**\n     * Logging configuration. Set to `false` to disable logging.\n     */\n    logging?: LoggingConfig | false;\n    /**\n     * period (in seconds) where the server allow to serve stale cache\n     */\n    expireTime?: number;\n    /**\n     * Enable experimental features. Note that all experimental features are subject to breaking changes in the future.\n     */\n    experimental?: ExperimentalConfig;\n    /**\n     * Enables the bundling of node_modules packages (externals) for pages server-side bundles.\n     * @see https://nextjs.org/docs/pages/api-reference/next-config-js/bundlePagesRouterDependencies\n     */\n    bundlePagesRouterDependencies?: boolean;\n    /**\n     * A list of packages that should be treated as external in the server build.\n     * @see https://nextjs.org/docs/app/api-reference/next-config-js/serverExternalPackages\n     */\n    serverExternalPackages?: string[];\n    /**\n     * This is the repo root usually and only files above this\n     * directory are traced and included.\n     */\n    outputFileTracingRoot?: string;\n    /**\n     * This allows manually excluding traced files if too many\n     * are included incorrectly on a per-page basis.\n     */\n    outputFileTracingExcludes?: Record<string, string[]>;\n    /**\n     * This allows manually including traced files if some\n     * were not detected on a per-page basis.\n     */\n    outputFileTracingIncludes?: Record<string, string[]>;\n    watchOptions?: {\n        pollIntervalMs?: number;\n    };\n    /**\n     * User Agent of bots that can handle streaming metadata.\n     * Besides the default behavior, Next.js act differently on serving metadata to bots based on their capability.\n     *\n     * @default\n     * /Mediapartners-Google|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview/i\n     */\n    htmlLimitedBots?: RegExp;\n}\nexport declare const defaultConfig: NextConfig;\nexport declare function normalizeConfig(phase: string, config: any): Promise<any>;\nexport {};\n"
        }
    ]
}
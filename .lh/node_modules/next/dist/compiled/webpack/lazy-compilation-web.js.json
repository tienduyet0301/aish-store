{
    "sourceFile": "node_modules/next/dist/compiled/webpack/lazy-compilation-web.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892742859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/* global __resourceQuery */\n\n\"use strict\";\n\nif (typeof EventSource !== \"function\") {\n\tthrow new Error(\n\t\t\"Environment doesn't support lazy compilation (requires EventSource)\"\n\t);\n}\n\nvar urlBase = decodeURIComponent(__resourceQuery.slice(1));\n/** @type {EventSource | undefined} */\nvar activeEventSource;\nvar activeKeys = new Map();\nvar errorHandlers = new Set();\n\nvar updateEventSource = function updateEventSource() {\n\tif (activeEventSource) activeEventSource.close();\n\tif (activeKeys.size) {\n\t\tactiveEventSource = new EventSource(\n\t\t\turlBase + Array.from(activeKeys.keys()).join(\"@\")\n\t\t);\n\t\t/**\n\t\t * @this {EventSource}\n\t\t * @param {Event & { message?: string, filename?: string, lineno?: number, colno?: number, error?: Error }} event event\n\t\t */\n\t\tactiveEventSource.onerror = function (event) {\n\t\t\terrorHandlers.forEach(function (onError) {\n\t\t\t\tonError(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"Problem communicating active modules to the server: \" +\n\t\t\t\t\t\t\tevent.message +\n\t\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t\tevent.filename +\n\t\t\t\t\t\t\t\":\" +\n\t\t\t\t\t\t\tevent.lineno +\n\t\t\t\t\t\t\t\":\" +\n\t\t\t\t\t\t\tevent.colno +\n\t\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t\tevent.error\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\t} else {\n\t\tactiveEventSource = undefined;\n\t}\n};\n\n/**\n * @param {{ data: string, onError: (err: Error) => void, active: boolean, module: module }} options options\n * @returns {() => void} function to destroy response\n */\nexports.keepAlive = function (options) {\n\tvar data = options.data;\n\tvar onError = options.onError;\n\tvar active = options.active;\n\tvar module = options.module;\n\terrorHandlers.add(onError);\n\tvar value = activeKeys.get(data) || 0;\n\tactiveKeys.set(data, value + 1);\n\tif (value === 0) {\n\t\tupdateEventSource();\n\t}\n\tif (!active && !module.hot) {\n\t\tconsole.log(\n\t\t\t\"Hot Module Replacement is not enabled. Waiting for process restart...\"\n\t\t);\n\t}\n\n\treturn function () {\n\t\terrorHandlers.delete(onError);\n\t\tsetTimeout(function () {\n\t\t\tvar value = activeKeys.get(data);\n\t\t\tif (value === 1) {\n\t\t\t\tactiveKeys.delete(data);\n\t\t\t\tupdateEventSource();\n\t\t\t} else {\n\t\t\t\tactiveKeys.set(data, value - 1);\n\t\t\t}\n\t\t}, 1000);\n\t};\n};\n"
        }
    ]
}
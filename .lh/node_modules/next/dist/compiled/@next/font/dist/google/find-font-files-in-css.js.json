{
    "sourceFile": "node_modules/next/dist/compiled/@next/font/dist/google/find-font-files-in-css.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892707317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findFontFilesInCss = findFontFilesInCss;\n/**\n * Find all font files in the CSS response and determine which files should be preloaded.\n * In Google Fonts responses, the @font-face's subset is above it in a comment.\n * Walk through the CSS from top to bottom, keeping track of the current subset.\n */\nfunction findFontFilesInCss(css, subsetsToPreload) {\n    var _a, _b;\n    // Find font files to download\n    const fontFiles = [];\n    // Keep track of the current subset\n    let currentSubset = '';\n    for (const line of css.split('\\n')) {\n        const newSubset = (_a = /\\/\\* (.+?) \\*\\//.exec(line)) === null || _a === void 0 ? void 0 : _a[1];\n        if (newSubset) {\n            // Found new subset in a comment above the next @font-face declaration\n            currentSubset = newSubset;\n        }\n        else {\n            const googleFontFileUrl = (_b = /src: url\\((.+?)\\)/.exec(line)) === null || _b === void 0 ? void 0 : _b[1];\n            if (googleFontFileUrl &&\n                !fontFiles.some((foundFile) => foundFile.googleFontFileUrl === googleFontFileUrl)) {\n                // Found the font file in the @font-face declaration.\n                fontFiles.push({\n                    googleFontFileUrl,\n                    preloadFontFile: !!(subsetsToPreload === null || subsetsToPreload === void 0 ? void 0 : subsetsToPreload.includes(currentSubset)),\n                });\n            }\n        }\n    }\n    return fontFiles;\n}\n"
        }
    ]
}
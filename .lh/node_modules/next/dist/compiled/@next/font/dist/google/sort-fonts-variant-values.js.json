{
    "sourceFile": "node_modules/next/dist/compiled/@next/font/dist/google/sort-fonts-variant-values.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892707833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n/**\n * Callback function for sorting font variant values.\n * Used as a parameter in `Array.prototype.sort` function to ensure correct sorting.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sortFontsVariantValues = sortFontsVariantValues;\nfunction sortFontsVariantValues(valA, valB) {\n    // If both values contain commas, it indicates they are in \"ital,wght\" format\n    if (valA.includes(',') && valB.includes(',')) {\n        // Split the values into prefix and suffix\n        const [aPrefix, aSuffix] = valA.split(',', 2);\n        const [bPrefix, bSuffix] = valB.split(',', 2);\n        // Compare the prefixes (ital values)\n        if (aPrefix === bPrefix) {\n            // If prefixes are equal, then compare the suffixes (wght values)\n            return parseInt(aSuffix) - parseInt(bSuffix);\n        }\n        else {\n            // If prefixes are different, then compare the prefixes directly\n            return parseInt(aPrefix) - parseInt(bPrefix);\n        }\n    }\n    // If values are not in \"ital,wght\" format, then directly compare them as integers\n    return parseInt(valA) - parseInt(valB);\n}\n"
        }
    ]
}
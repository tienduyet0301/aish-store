{
    "sourceFile": "node_modules/next/dist/compiled/@next/font/dist/google/get-google-fonts-url.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892707487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGoogleFontsUrl = getGoogleFontsUrl;\nconst sort_fonts_variant_values_1 = require(\"./sort-fonts-variant-values\");\n/**\n * Generate the Google Fonts URL given the requested weight(s), style(s) and additional variable axes\n */\nfunction getGoogleFontsUrl(fontFamily, axes, display) {\n    var _a, _b;\n    // Variants are all combinations of weight and style, each variant will result in a separate font file\n    const variants = [];\n    if (axes.wght) {\n        for (const wght of axes.wght) {\n            if (!axes.ital) {\n                variants.push([['wght', wght], ...((_a = axes.variableAxes) !== null && _a !== void 0 ? _a : [])]);\n            }\n            else {\n                for (const ital of axes.ital) {\n                    variants.push([\n                        ['ital', ital],\n                        ['wght', wght],\n                        ...((_b = axes.variableAxes) !== null && _b !== void 0 ? _b : []),\n                    ]);\n                }\n            }\n        }\n    }\n    else if (axes.variableAxes) {\n        // Variable fonts might not have a range of weights, just add optional variable axes in that case\n        variants.push([...axes.variableAxes]);\n    }\n    // Google api requires the axes to be sorted, starting with lowercase words\n    if (axes.variableAxes) {\n        variants.forEach((variant) => {\n            variant.sort(([a], [b]) => {\n                const aIsLowercase = a.charCodeAt(0) > 96;\n                const bIsLowercase = b.charCodeAt(0) > 96;\n                if (aIsLowercase && !bIsLowercase)\n                    return -1;\n                if (bIsLowercase && !aIsLowercase)\n                    return 1;\n                return a > b ? 1 : -1;\n            });\n        });\n    }\n    let url = `https://fonts.googleapis.com/css2?family=${fontFamily.replace(/ /g, '+')}`;\n    if (variants.length > 0) {\n        url = `${url}:${variants[0].map(([key]) => key).join(',')}@${variants\n            .map((variant) => variant.map(([, val]) => val).join(','))\n            .sort(sort_fonts_variant_values_1.sortFontsVariantValues)\n            .join(';')}`;\n    }\n    url = `${url}&display=${display}`;\n    return url;\n}\n"
        }
    ]
}
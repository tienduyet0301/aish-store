{
    "sourceFile": "node_modules/next/dist/compiled/@next/font/dist/google/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892707623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * This is an autogenerated file by scripts/update-google-fonts.js\n */\nimport type { CssVariable, NextFont, NextFontWithVariable, Display } from '../types';\nexport declare function ABeeZee<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function ADLaM_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'adlam' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function AR_One_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'ARRR'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Abel<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Abhaya_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aboreto<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Abril_Fatface<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Abyssinica_SIL<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'ethiopic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aclonica<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Acme<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Actor<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Adamina<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Advent_Pro<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Afacad<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Afacad_Flux<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'slnt'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Agbalumo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Agdasima<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Agu_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'MORF'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aguafina_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Akatab<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | '900' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tifinagh'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Akaya_Kanadaka<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Akaya_Telivigala<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Akronim<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Akshar<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aladin<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alata<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alatsi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Albert_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aldrich<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alef<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alegreya<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alegreya_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | '800' | '900' | Array<'400' | '500' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alegreya_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alegreya_Sans_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aleo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alex_Brush<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alexandria<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alfa_Slab_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alice<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alike<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alike_Angular<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alkalami<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alkatra<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'devanagari' | 'latin' | 'latin-ext' | 'oriya'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Allan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Allerta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Allerta_Stencil<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Allison<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Allura<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Almarai<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | '800' | Array<'300' | '400' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Almendra<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Almendra_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Almendra_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alumni_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alumni_Sans_Collegiate_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alumni_Sans_Inline_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Alumni_Sans_Pinstripe<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Amarante<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Amaranth<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Amatic_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Amethysta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Amiko<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '600' | '700' | Array<'400' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Amiri<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Amiri_Quran<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Amita<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anaheim<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Andada_Pro<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Andika<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Bangla<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Devanagari<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Gujarati<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Gurmukhi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Kannada<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Latin<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Malayalam<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Odia<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'oriya'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Tamil<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anek_Telugu<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Angkor<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Annapurna_SIL<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Annie_Use_Your_Telescope<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anonymous_Pro<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Antic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Antic_Didone<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Antic_Slab<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anton<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anton_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Antonio<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anuphan<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Anybody<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aoboshi_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arapey<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arbutus<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arbutus_Slab<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Architects_Daughter<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Archivo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Archivo_Black<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Archivo_Narrow<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Are_You_Serious<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aref_Ruqaa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aref_Ruqaa_Ink<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arima<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'malayalam' | 'tamil' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arimo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arizonia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Armata<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arsenal<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arsenal_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Artifika<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arvo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Arya<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Asap<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Asap_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Asar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Asset<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Assistant<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Astloch<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Asul<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Athiti<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Atkinson_Hyperlegible<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Atma<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Atomic_Age<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Aubrey<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Audiowide<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Autour_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Average<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Average_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Averia_Gruesa_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Averia_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Averia_Sans_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Averia_Serif_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Azeret_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function B612<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function B612_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function BIZ_UDGothic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function BIZ_UDMincho<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function BIZ_UDPGothic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function BIZ_UDPMincho<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Babylonica<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bacasime_Antique<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bad_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Badeen_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bagel_Fat_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bahiana<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bahianita<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bai_Jamjuree<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bakbak_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ballet<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Bhai_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Bhaijaan_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Bhaina_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'oriya' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Chettan_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'malayalam' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Da_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Paaji_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Tamma_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Tammudu_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baloo_Thambi_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Balsamiq_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Balthazar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bangers<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Barlow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Barlow_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Barlow_Semi_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Barriecito<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Barrio<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Basic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baskervville<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baskervville_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Battambang<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Baumans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bayon<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Be_Vietnam_Pro<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Beau_Rivage<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bebas_Neue<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Beiruti<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Belanosima<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '600' | '700' | Array<'400' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Belgrano<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bellefair<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Belleza<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bellota<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bellota_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function BenchNine<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Benne<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bentham<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Berkshire_Swash<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Besley<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Beth_Ellen<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bevan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function BhuTuka_Expanded_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Big_Shoulders_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Big_Shoulders_Inline_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Big_Shoulders_Inline_Text<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Big_Shoulders_Stencil_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Big_Shoulders_Stencil_Text<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Big_Shoulders_Text<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bigelow_Rules<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bigshot_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bilbo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bilbo_Swash_Caps<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function BioRhyme<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function BioRhyme_Expanded<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '700' | '800' | Array<'200' | '300' | '400' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Birthstone<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Birthstone_Bounce<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | Array<'400' | '500'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Biryani<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bitter<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Black_And_White_Picture<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Black_Han_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Black_Ops_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Blaka<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Blaka_Hollow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Blaka_Ink<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Blinker<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bodoni_Moda<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bodoni_Moda_SC<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bokor<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bona_Nova<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bona_Nova_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bonbon<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bonheur_Royale<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Boogaloo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Borel<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bowlby_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bowlby_One_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Braah_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Brawler<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bree_Serif<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bricolage_Grotesque<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('opsz' | 'wdth')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bruno_Ace<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bruno_Ace_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Brygada_1918<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bubblegum_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bubbler_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Buda<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | Array<'300'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Buenard<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bungee<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bungee_Hairline<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bungee_Inline<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bungee_Outline<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bungee_Shade<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bungee_Spice<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Bungee_Tint<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Butcherman<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Butterfly_Kids<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cabin<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cabin_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cabin_Sketch<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cactus_Classical_Serif<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Caesar_Dressing<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cagliostro<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cairo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n    axes?: 'slnt'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cairo_Play<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n    axes?: 'slnt'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Caladea<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Calistoga<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Calligraffitti<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cambay<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cambo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Candal<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cantarell<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cantata_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cantora_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Caprasimo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Capriola<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Caramel<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Carattere<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cardo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Carlito<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Carme<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Carrois_Gothic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Carrois_Gothic_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Carter_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Castoro<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Castoro_Titling<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Catamaran<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Caudex<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Caveat<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Caveat_Brush<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cedarville_Cursive<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ceviche_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chakra_Petch<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Changa<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Changa_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chango<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Charis_SIL<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Charm<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Charmonman<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chathura<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '700' | '800' | Array<'100' | '300' | '400' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chau_Philomene_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chela_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chelsea_Market<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chenla<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cherish<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cherry_Bomb_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cherry_Cream_Soda<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cherry_Swash<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chewy<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chicle<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chilanka<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chivo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chivo_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chocolate_Classical_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chokokutai<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Chonburi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cinzel<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cinzel_Decorative<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Clicker_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Climate_Crisis<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n    axes?: 'YEAR'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Coda<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '800' | Array<'400' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Codystar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | Array<'300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Coiny<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Combo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Comfortaa<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Comforter<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Comforter_Brush<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Comic_Neue<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Coming_Soon<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Comme<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Commissioner<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('FLAR' | 'VOLM' | 'slnt')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Concert_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Condiment<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Content<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Contrail_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Convergence<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cookie<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Copse<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Corben<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Corinthia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cormorant<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cormorant_Garamond<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cormorant_Infant<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cormorant_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cormorant_Unicase<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cormorant_Upright<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Courgette<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Courier_Prime<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cousine<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Coustard<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '900' | Array<'400' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Covered_By_Your_Grace<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Crafty_Girls<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Creepster<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Crete_Round<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Crimson_Pro<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Crimson_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '600' | '700' | Array<'400' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Croissant_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Crushed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cuprum<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cute_Font<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cutive<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Cutive_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function DM_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | Array<'300' | '400' | '500'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function DM_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function DM_Serif_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function DM_Serif_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dai_Banna_SIL<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'new-tai-lue'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Damion<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dancing_Script<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Danfo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'ELSH'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dangrek<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Darker_Grotesque<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Darumadrop_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function David_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dawning_of_a_New_Day<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Days_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dekko<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dela_Gothic_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Delicious_Handrawn<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Delius<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Delius_Swash_Caps<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Delius_Unicase<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Della_Respira<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Denk_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Devonshire<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dhurjati<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Didact_Gothic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Diphylleia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Diplomata<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Diplomata_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Do_Hyeon<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dokdo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Domine<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Donegal_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dongle<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Doppio_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dorsa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dosis<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function DotGothic16<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Doto<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n    axes?: 'ROND'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dr_Sugiyama<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Duru_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function DynaPuff<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Dynalight<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function EB_Garamond<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Eagle_Lake<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function East_Sea_Dokdo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Eater<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Economica<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Eczar<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_AU_VIC_WA_NT_Arrows<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_AU_VIC_WA_NT_Dots<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_AU_VIC_WA_NT_Guides<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_AU_VIC_WA_NT_Hand<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_AU_VIC_WA_NT_Pre<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_NSW_ACT_Foundation<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_QLD_Beginner<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_SA_Beginner<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_TAS_Beginner<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Edu_VIC_WA_NT_Beginner<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function El_Messiri<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Electrolize<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Elsie<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '900' | Array<'400' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Elsie_Swash_Caps<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '900' | Array<'400' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Emblema_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Emilys_Candy<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Encode_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Encode_Sans_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Encode_Sans_Expanded<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Encode_Sans_SC<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Encode_Sans_Semi_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Encode_Sans_Semi_Expanded<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Engagement<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Englebert<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Enriqueta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ephesis<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Epilogue<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Erica_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Esteban<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Estonia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Euphoria_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ewert<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Exo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Exo_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Expletus_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Explora<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cherokee' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Faculty_Glyphic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fahkwang<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Familjen_Grotesk<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fanwood_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Farro<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '700' | Array<'300' | '400' | '500' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Farsan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fascinate<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fascinate_Inline<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Faster_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fasthand<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fauna_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Faustina<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Federant<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Federo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Felipa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fenix<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Festive<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Figtree<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Finger_Paint<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Finlandica<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fira_Code<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fira_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fira_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fira_Sans_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fira_Sans_Extra_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fjalla_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fjord_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Flamenco<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | Array<'300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Flavors<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fleur_De_Leah<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Flow_Block<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Flow_Circular<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Flow_Rounded<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Foldit<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fondamento<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fontdiner_Swanky<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Forum<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fragment_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Francois_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Frank_Ruhl_Libre<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fraunces<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('SOFT' | 'WONK' | 'opsz')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Freckle_Face<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fredericka_the_Great<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fredoka<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Freehand<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Freeman<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fresca<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Frijole<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fruktur<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fugaz_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fuggles<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Funnel_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Funnel_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fustat<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Fuzzy_Bubbles<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function GFS_Didot<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function GFS_Neohellenic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ga_Maamli<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gabarito<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gabriela<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gaegu<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gafata<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gajraj_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Galada<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Galdeano<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Galindo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gamja_Flower<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gantari<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gasoek_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gayathri<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '400' | '700' | Array<'100' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'malayalam'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Geist<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Geist_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gelasio<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gemunu_Libre<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Genos<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cherokee' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gentium_Book_Plus<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gentium_Plus<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Geo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Geologica<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('CRSV' | 'SHRP' | 'slnt')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Georama<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Geostar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Geostar_Fill<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Germania_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gideon_Roman<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gidugu<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gilda_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Girassol<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Give_You_Glory<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Glass_Antiqua<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Glegoo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gloock<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gloria_Hallelujah<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Glory<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gluten<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'slnt'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Goblin_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gochi_Hand<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Goldman<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Golos_Text<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gorditas<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gothic_A1<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gotu<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Goudy_Bookletter_1911<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gowun_Batang<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gowun_Dodum<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Graduate<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Grand_Hotel<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Grandiflora_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Grandstander<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Grape_Nuts<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gravitas_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Great_Vibes<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Grechen_Fuemen<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Grenze<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Grenze_Gotisch<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Grey_Qo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Griffy<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gruppo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gudea<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gugi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gulzar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gupter<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gurajada<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Gwendolyn<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Habibi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hachi_Maru_Pop<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hahmlet<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Halant<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hammersmith_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hanalei<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hanalei_Fill<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Handjet<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'armenian' | 'cyrillic' | 'cyrillic-ext' | 'greek' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('ELGR' | 'ELSH')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Handlee<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hanken_Grotesk<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hanuman<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Happy_Monkey<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Harmattan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Headland_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hedvig_Letters_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hedvig_Letters_Serif<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Heebo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Henny_Penny<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hepta_Slab<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Herr_Von_Muellerhoff<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hi_Melody<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hina_Mincho<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hind<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hind_Guntur<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hind_Madurai<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hind_Mysuru<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hind_Siliguri<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hind_Vadodara<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Holtwood_One_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Homemade_Apple<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Homenaje<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Honk<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n    axes?: ('MORF' | 'SHLN')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Host_Grotesk<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hubballi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hubot_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Hurricane<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans_Arabic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans_Devanagari<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans_Hebrew<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans_JP<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans_KR<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans_Thai<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'thai'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Sans_Thai_Looped<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'thai'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IBM_Plex_Serif<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_DW_Pica<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_DW_Pica_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_Double_Pica<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_Double_Pica_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_English<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_English_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_French_Canon<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_French_Canon_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_Great_Primer<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function IM_Fell_Great_Primer_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ibarra_Real_Nova<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Iceberg<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Iceland<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Imbue<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Imperial_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Imprima<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inclusive_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inconsolata<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inder<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Indie_Flower<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ingrid_Darling<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inika<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inknut_Antiqua<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inria_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inria_Serif<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inspiration<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Instrument_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Instrument_Serif<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inter<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Inter_Tight<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Irish_Grover<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Island_Moments<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Istok_Web<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Italiana<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Italianno<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Itim<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jacquard_12<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jacquard_12_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jacquard_24<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jacquard_24_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jacquarda_Bastarda_9<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jacquarda_Bastarda_9_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jacques_Francois<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jacques_Francois_Shadow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jaini<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jaini_Purva<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jaldi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jaro<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jersey_10<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jersey_10_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jersey_15<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jersey_15_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jersey_20<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jersey_20_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jersey_25<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jersey_25_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function JetBrains_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jim_Nightshade<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Joan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jockey_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jolly_Lodger<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jomhuria<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jomolhari<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'tibetan'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Josefin_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Josefin_Slab<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jost<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Joti_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jua<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Judson<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Julee<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Julius_Sans_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Junge<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Jura<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'kayah-li' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Just_Another_Hand<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Just_Me_Again_Down_Here<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function K2D<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kablammo<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'MORF'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kadwa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kaisei_Decol<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kaisei_HarunoUmi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kaisei_Opti<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kaisei_Tokumin<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | '800' | Array<'400' | '500' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kalam<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kalnia<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kalnia_Glaze<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kameron<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kanit<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kantumruy_Pro<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Karantina<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Karla<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Karla_Tamil_Inclined<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Karla_Tamil_Upright<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Karma<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Katibeh<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kaushan_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kavivanar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kavoon<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kay_Pho_Du<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kayah-li' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kdam_Thmor_Pro<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Keania_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kelly_Slab<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kenia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Khand<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Khmer<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Khula<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '600' | '700' | '800' | Array<'300' | '400' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kings<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kirang_Haerang<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kite_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kiwi_Maru<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | Array<'300' | '400' | '500'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Klee_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '600' | Array<'400' | '600'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Knewave<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function KoHo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kodchasan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kode_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Koh_Santepheap<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kolker_Brush<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Konkhmer_Sleokchher<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kosugi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kosugi_Maru<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kotta_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Koulen<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kranky<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kreon<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kristi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Krona_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Krub<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kufam<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kulim_Park<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '600' | '700' | Array<'200' | '300' | '400' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kumar_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kumar_One_Outline<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kumbh_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n    axes?: 'YOPQ'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Kurale<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function LXGW_WenKai_Mono_TC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'lisu' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function LXGW_WenKai_TC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'lisu' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function La_Belle_Aurore<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Labrada<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lacquer<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Laila<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lakki_Reddy<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lalezar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lancelot<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Langar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lateef<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lato<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lavishly_Yours<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function League_Gothic<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function League_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function League_Spartan<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Leckerli_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ledger<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lekton<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lemon<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lemonada<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lexend<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lexend_Deca<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lexend_Exa<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lexend_Giga<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lexend_Mega<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lexend_Peta<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lexend_Tera<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lexend_Zetta<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Barcode_128<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Barcode_128_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Barcode_39<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Barcode_39_Extended<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Barcode_39_Extended_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Barcode_39_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Barcode_EAN13_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Baskerville<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Bodoni<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Caslon_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Caslon_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Libre_Franklin<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Licorice<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Life_Savers<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '800' | Array<'400' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lilita_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lily_Script_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Limelight<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Linden_Hill<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Linefont<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lisu_Bosa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'lisu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Literata<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Liu_Jian_Mao_Cao<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Livvic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lobster<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lobster_Two<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Londrina_Outline<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Londrina_Shadow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Londrina_Sketch<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Londrina_Solid<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '900' | Array<'100' | '300' | '400' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Long_Cang<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lora<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Love_Light<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Love_Ya_Like_A_Sister<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Loved_by_the_King<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lovers_Quarrel<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Luckiest_Guy<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lugrasimo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lumanosimo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lunasima<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lusitana<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Lustria<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Luxurious_Roman<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Luxurious_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function M_PLUS_1<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function M_PLUS_1_Code<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function M_PLUS_1p<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function M_PLUS_2<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function M_PLUS_Code_Latin<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function M_PLUS_Rounded_1c<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ma_Shan_Zheng<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Macondo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Macondo_Swash_Caps<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mada<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Madimi_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Magra<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Maiden_Orange<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Maitree<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Major_Mono_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mako<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mali<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mallanna<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Maname<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sinhala' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mandali<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Manjari<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '400' | '700' | Array<'100' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Manrope<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mansalva<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Manuale<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Marcellus<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Marcellus_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Marck_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Margarine<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Marhey<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Markazi_Text<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Marko_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Marmelad<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Martel<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Martel_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Martian_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Marvel<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mate<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mate_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Matemasie<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Maven_Pro<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function McLaren<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mea_Culpa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Meddon<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function MedievalSharp<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Medula_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Meera_Inimai<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Megrim<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Meie_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Meow_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Merienda<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Merriweather<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | '900' | Array<'300' | '400' | '700' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Merriweather_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Metal<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Metal_Mania<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Metamorphous<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Metrophobic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Michroma<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Micro_5<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Micro_5_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Milonga<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Miltonian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Miltonian_Tattoo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mina<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mingzat<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'lepcha'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Miniver<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Miriam_Libre<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mirza<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Miss_Fajardose<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mitr<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mochiy_Pop_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mochiy_Pop_P_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Modak<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Modern_Antiqua<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Moderustic<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mogra<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mohave<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Moirai_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Molengo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Molle<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'italic' | Array<'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mona_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Monda<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Monofett<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Monomaniac_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Monoton<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Monsieur_La_Doulaise<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Montaga<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Montagu_Slab<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function MonteCarlo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Montez<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Montserrat<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Montserrat_Alternates<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Montserrat_Subrayada<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Montserrat_Underline<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Moo_Lah_Lah<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mooli<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Moon_Dance<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Moul<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Moulpali<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mountains_of_Christmas<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mouse_Memoirs<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mr_Bedfort<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mr_Dafoe<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mr_De_Haviland<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mrs_Saint_Delafield<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mrs_Sheppards<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ms_Madi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mukta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mukta_Mahee<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mukta_Malar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mukta_Vaani<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mulish<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Murecho<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function MuseoModerno<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function My_Soul<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mynerve<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Mystery_Quest<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function NTR<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nabla<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'vietnamese'>;\n    axes?: ('EDPT' | 'EHLT')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Namdhinggo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'limbu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nanum_Brush_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nanum_Gothic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '800' | Array<'400' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nanum_Gothic_Coding<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nanum_Myeongjo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '800' | Array<'400' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nanum_Pen_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Narnoor<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gunjala-gondi' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Neonderthaw<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nerko_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Neucha<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Neuton<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '700' | '800' | Array<'200' | '300' | '400' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function New_Amsterdam<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function New_Rocker<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function New_Tegomin<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function News_Cycle<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Newsreader<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Niconne<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Niramit<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nixie_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nobile<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nokora<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Norican<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nosifer<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Notable<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nothing_You_Could_Do<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noticia_Text<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Color_Emoji<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'emoji'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Emoji<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'emoji'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Kufi_Arabic<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Music<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'music'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Naskh_Arabic<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Nastaliq_Urdu<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Rashi_Hebrew<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'devanagari' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Adlam<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'adlam' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Adlam_Unjoined<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'adlam' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Anatolian_Hieroglyphs<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'anatolian-hieroglyphs' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Arabic<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Armenian<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'armenian' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Avestan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'avestan' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Balinese<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'balinese' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Bamum<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bamum' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Bassa_Vah<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bassa-vah' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Batak<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'batak' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Bengali<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Bhaiksuki<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bhaiksuki' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Brahmi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'brahmi' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Buginese<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'buginese' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Buhid<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'buhid' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Canadian_Aboriginal<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'canadian-aboriginal' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Carian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'carian' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Caucasian_Albanian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'caucasian-albanian' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Chakma<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'chakma' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Cham<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cham' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Cherokee<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cherokee' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Chorasmian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'chorasmian' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Coptic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'coptic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Cuneiform<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cuneiform' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Cypriot<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cypriot' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Cypro_Minoan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cypro-minoan' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Deseret<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'deseret' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Devanagari<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Duployan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'duployan' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Egyptian_Hieroglyphs<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'egyptian-hieroglyphs' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Elbasan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'elbasan' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Elymaic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'elymaic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Ethiopic<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'ethiopic' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Georgian<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'georgian' | 'greek-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Glagolitic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'glagolitic' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Gothic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gothic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Grantha<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'grantha' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Gujarati<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Gunjala_Gondi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gunjala-gondi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Gurmukhi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_HK<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Hanifi_Rohingya<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hanifi-rohingya' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Hanunoo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hanunoo' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Hatran<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hatran' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Hebrew<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Imperial_Aramaic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'imperial-aramaic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Indic_Siyaq_Numbers<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'indic-siyaq-numbers' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Inscriptional_Pahlavi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'inscriptional-pahlavi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Inscriptional_Parthian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'inscriptional-parthian' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_JP<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Javanese<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'javanese' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_KR<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Kaithi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kaithi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Kannada<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Kawi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kawi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Kayah_Li<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kayah-li' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Kharoshthi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kharoshthi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Khmer<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Khojki<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khojki' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Khudawadi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khudawadi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Lao<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'lao' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Lao_Looped<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'lao' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Lepcha<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'lepcha'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Limbu<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'limbu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Linear_A<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'linear-a'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Linear_B<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'linear-b'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Lisu<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'lisu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Lycian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'lycian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Lydian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'lydian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Mahajani<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'mahajani'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Malayalam<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Mandaic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'mandaic'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Manichaean<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'manichaean'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Marchen<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'marchen'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Masaram_Gondi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'masaram-gondi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Math<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'math'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Mayan_Numerals<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'mayan-numerals'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Medefaidrin<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'medefaidrin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Meetei_Mayek<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'meetei-mayek'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Mende_Kikakui<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'mende-kikakui'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Meroitic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'meroitic' | 'meroitic-cursive' | 'meroitic-hieroglyphs'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Miao<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'miao'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Modi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'modi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Mongolian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'mongolian' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Mro<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'mro'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Multani<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'multani'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Myanmar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'myanmar'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_NKo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'nko'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_NKo_Unjoined<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'nko'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Nabataean<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'nabataean'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Nag_Mundari<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'nag-mundari'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Nandinagari<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'nandinagari'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_New_Tai_Lue<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'new-tai-lue'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Newa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'newa'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Nushu<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'nushu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Ogham<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'ogham'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Ol_Chiki<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'ol-chiki'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Old_Hungarian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'old-hungarian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Old_Italic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'old-italic'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Old_North_Arabian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'old-north-arabian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Old_Permic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'old-permic'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Old_Persian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'old-persian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Old_Sogdian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'old-sogdian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Old_South_Arabian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'old-south-arabian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Old_Turkic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'old-turkic'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Oriya<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'oriya'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Osage<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'osage'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Osmanya<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'osmanya'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Pahawh_Hmong<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'pahawh-hmong'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Palmyrene<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'palmyrene'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Pau_Cin_Hau<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'pau-cin-hau'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_PhagsPa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'phags-pa' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Phoenician<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'phoenician'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Psalter_Pahlavi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'psalter-pahlavi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Rejang<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'rejang'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Runic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'runic'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_SC<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Samaritan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'samaritan'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Saurashtra<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'saurashtra'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Sharada<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sharada'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Shavian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'shavian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Siddham<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'siddham'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_SignWriting<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'signwriting'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Sinhala<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Sogdian<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sogdian'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Sora_Sompeng<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sora-sompeng'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Soyombo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'soyombo'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Sundanese<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sundanese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Syloti_Nagri<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'syloti-nagri'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Symbols<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Symbols_2<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'braille' | 'latin' | 'latin-ext' | 'math' | 'mayan-numerals' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Syriac<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'syriac'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Syriac_Eastern<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'syriac'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_TC<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tagalog<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tagalog'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tagbanwa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tagbanwa'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tai_Le<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tai-le'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tai_Tham<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tai-tham'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tai_Viet<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tai-viet'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Takri<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'takri'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tamil<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tamil_Supplement<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil-supplement'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tangsa<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tangsa'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Telugu<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Thaana<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thaana'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Thai<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Thai_Looped<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tifinagh<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tifinagh'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Tirhuta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tirhuta'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Ugaritic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'ugaritic'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Vai<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vai'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Vithkuqi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vithkuqi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Wancho<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'wancho'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Warang_Citi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'warang-citi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Yi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'yi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Sans_Zanabazar_Square<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'zanabazar-square'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Ahom<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'ahom' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Armenian<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'armenian' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Balinese<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'balinese' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Bengali<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Devanagari<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Dogra<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'dogra' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Ethiopic<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'ethiopic' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Georgian<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'georgian' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Grantha<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'grantha' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Gujarati<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Gurmukhi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_HK<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Hebrew<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_JP<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_KR<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Kannada<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Khitan_Small_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khitan-small-script' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Khmer<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Khojki<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khojki' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Lao<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'lao' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Makasar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'makasar'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Malayalam<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Myanmar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'myanmar'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_NP_Hmong<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'nyiakeng-puachue-hmong'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Old_Uyghur<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'old-uyghur'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Oriya<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'oriya'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Ottoman_Siyaq<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'ottoman-siyaq-numbers'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_SC<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Sinhala<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_TC<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Tamil<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Tangut<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tangut'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Telugu<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Thai<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Tibetan<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tibetan'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Toto<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'toto'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Vithkuqi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vithkuqi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Serif_Yezidi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'yezidi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Traditional_Nushu<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'nushu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Noto_Znamenny_Musical_Notation<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'znamenny'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nova_Cut<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nova_Flat<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nova_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nova_Oval<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nova_Round<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nova_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nova_Slim<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nova_Square<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Numans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nunito<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nunito_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('YTLC' | 'opsz' | 'wdth')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Nuosu_SIL<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'yi'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Odibee_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Odor_Mean_Chey<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Offside<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'tamil' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ojuju<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Old_Standard_TT<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oldenburg<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ole<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oleo_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oleo_Script_Swash_Caps<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Onest<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oooh_Baby<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Open_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oranienbaum<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Orbit<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Orbitron<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oregano<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Orelega_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Orienta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Original_Surfer<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oswald<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Outfit<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Over_the_Rainbow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Overlock<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Overlock_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Overpass<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Overpass_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ovo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oxanium<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oxygen<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Oxygen_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function PT_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function PT_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function PT_Sans_Caption<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function PT_Sans_Narrow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function PT_Serif<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function PT_Serif_Caption<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pacifico<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Padauk<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'myanmar'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Padyakke_Expanded_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Palanquin<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Palanquin_Dark<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Palette_Mosaic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pangolin<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Paprika<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Parisienne<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Parkinsans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Passero_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Passion_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Passions_Conflict<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pathway_Extreme<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('opsz' | 'wdth')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pathway_Gothic_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Patrick_Hand<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Patrick_Hand_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pattaya<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Patua_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pavanam<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Paytone_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Peddana<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Peralta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Permanent_Marker<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Petemoss<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Petit_Formal_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Petrona<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Phetsarath<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'lao'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Philosopher<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Phudu<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Piazzolla<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Piedra<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pinyon_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pirata_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pixelify_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Plaster<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Platypi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Play<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playball<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playfair<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('opsz' | 'wdth')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playfair_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playfair_Display_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playpen_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'emoji' | 'latin' | 'latin-ext' | 'math' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AR<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AR_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AT<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AT_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_NSW<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_NSW_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_QLD<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_QLD_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_SA<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_SA_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_TAS<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_TAS_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_VIC<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_AU_VIC_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_BE_VLG<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_BE_VLG_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_BE_WAL<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_BE_WAL_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_BR<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_BR_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CA<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CA_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CL<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CL_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CO<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CO_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CU<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CU_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CZ<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_CZ_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DE_Grund<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DE_Grund_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DE_LA<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DE_LA_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DE_SAS<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DE_SAS_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DE_VA<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DE_VA_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DK_Loopet<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DK_Loopet_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DK_Uloopet<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_DK_Uloopet_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_ES<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_ES_Deco<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_ES_Deco_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_ES_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_FR_Moderne<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_FR_Moderne_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_FR_Trad<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_FR_Trad_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_GB_J<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_GB_J_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_GB_S<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_GB_S_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_HR<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_HR_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_HR_Lijeva<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_HR_Lijeva_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_HU<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_HU_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_ID<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_ID_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IE<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IE_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IN<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IN_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IS<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IS_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IT_Moderna<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IT_Moderna_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IT_Trad<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_IT_Trad_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_MX<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_MX_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_NG_Modern<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_NG_Modern_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_NL<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_NL_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_NO<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_NO_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_NZ<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_NZ_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_PE<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_PE_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_PL<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_PL_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_PT<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_PT_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_RO<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_RO_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_SK<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_SK_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_TZ<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_TZ_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_US_Modern<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_US_Modern_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_US_Trad<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_US_Trad_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_VN<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_VN_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_ZA<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Playwrite_ZA_Guides<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Plus_Jakarta_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Podkova<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Poetsen_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Poiret_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Poller_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Poltawski_Nowy<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Poly<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pompiere<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ponnala<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pontano_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Poor_Story<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Poppins<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Port_Lligat_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Port_Lligat_Slab<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Potta_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pragati_Narrow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Praise<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Prata<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Preahvihear<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Press_Start_2P<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Pridi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Princess_Sofia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Prociono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Prompt<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Prosto_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Protest_Guerrilla<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Protest_Revolution<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Protest_Riot<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Protest_Strike<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Proza_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Public_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Puppies_Play<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Puritan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Purple_Purse<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Qahiri<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Quando<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Quantico<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Quattrocento<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Quattrocento_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Questrial<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Quicksand<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Quintessential<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Qwigley<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Qwitcher_Grypen<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function REM<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Racing_Sans_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Radio_Canada<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'canadian-aboriginal' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Radio_Canada_Big<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Radley<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rajdhani<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rakkas<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Raleway<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Raleway_Dots<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ramabhadra<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ramaraja<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rambla<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rammetto_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rampart_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ranchers<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rancho<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ranga<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rasa<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rationale<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ravi_Prakash<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Readex_Pro<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'HEXP'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Recursive<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('CASL' | 'CRSV' | 'MONO' | 'slnt')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Red_Hat_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Red_Hat_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Red_Hat_Text<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Red_Rose<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Redacted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Redacted_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Reddit_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Reddit_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Reddit_Sans_Condensed<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Redressed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Reem_Kufi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Reem_Kufi_Fun<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Reem_Kufi_Ink<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Reenie_Beanie<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Reggae_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rethink_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Revalia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rhodium_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ribeye<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ribeye_Marrow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Righteous<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Risque<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Road_Rage<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Roboto<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Roboto_Condensed<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Roboto_Flex<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('GRAD' | 'XOPQ' | 'XTRA' | 'YOPQ' | 'YTAS' | 'YTDE' | 'YTFI' | 'YTLC' | 'YTUC' | 'opsz' | 'slnt' | 'wdth')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Roboto_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Roboto_Serif<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('GRAD' | 'opsz' | 'wdth')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Roboto_Slab<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rochester<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rock_3D<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rock_Salt<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function RocknRoll_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rokkitt<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Romanesco<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ropa_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rosario<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rosarivo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rouge_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rowdies<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rozha_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_80s_Fade<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Beastly<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Broken_Fax<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Bubbles<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Burned<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Dirt<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Distressed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Doodle_Shadow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Doodle_Triangles<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Gemstones<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Glitch<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Glitch_Pop<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Iso<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Lines<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Maps<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Marker_Hatch<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Maze<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Microbe<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Mono_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Moonrocks<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Pixels<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Puddles<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Scribble<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Spray_Paint<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Storm<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Vinyl<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rubik_Wet_Paint<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ruda<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rufina<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ruge_Boogie<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ruluko<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rum_Raisin<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ruslan_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Russo_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ruthie<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ruwudu<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Rye<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function STIX_Two_Text<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function SUSE<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sacramento<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sahitya<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sail<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Saira<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Saira_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Saira_Extra_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Saira_Semi_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Saira_Stencil_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Salsa<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sanchez<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sancreek<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sankofa_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sansita<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '800' | '900' | Array<'400' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sansita_Swashed<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sarabun<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sarala<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sarina<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sarpanch<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | '900' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sassy_Frass<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Satisfy<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sawarabi_Gothic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sawarabi_Mincho<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Scada<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Scheherazade_New<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Schibsted_Grotesk<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Schoolbell<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Scope_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Seaweed_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Secular_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sedan<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sedan_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sedgwick_Ave<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sedgwick_Ave_Display<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sen<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Send_Flowers<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sevillana<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Seymour_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shadows_Into_Light<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shadows_Into_Light_Two<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shalimar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shantell_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('BNCE' | 'INFM' | 'SPAC')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shanti<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Share<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Share_Tech<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Share_Tech_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shippori_Antique<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shippori_Antique_B1<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shippori_Mincho<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shippori_Mincho_B1<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shizuru<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shojumaru<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Short_Stack<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Shrikhand<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Siemreap<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sigmar<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sigmar_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Signika<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'GRAD'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Signika_Negative<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Silkscreen<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Simonetta<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '900' | Array<'400' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Single_Day<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sintony<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sirin_Stencil<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Six_Caps<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sixtyfour<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n    axes?: ('BLED' | 'SCAN')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sixtyfour_Convergence<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>;\n    axes?: ('BLED' | 'SCAN' | 'XELA' | 'YELA')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Skranji<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Slabo_13px<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Slabo_27px<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Slackey<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Slackside_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Smokum<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Smooch<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Smooch_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Smythe<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sniglet<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '800' | Array<'400' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Snippet<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Snowburst_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sofadi_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sofia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sofia_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sofia_Sans_Condensed<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sofia_Sans_Extra_Condensed<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sofia_Sans_Semi_Condensed<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Solitreo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Solway<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '700' | '800' | Array<'300' | '400' | '500' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sometype_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Song_Myung<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'MONO'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sonsie_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sora<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sorts_Mill_Goudy<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sour_Gummy<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Source_Code_Pro<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Source_Sans_3<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Source_Serif_4<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Space_Grotesk<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Space_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Special_Elite<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Spectral<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Spectral_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Spicy_Rice<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Spinnaker<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Spirax<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Splash<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Spline_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Spline_Sans_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Squada_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Square_Peg<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sree_Krushnadevaraya<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sriracha<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Srisakdi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Staatliches<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stalemate<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stalinist_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stardos_Stencil<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stick<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stick_No_Bills<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stint_Ultra_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stint_Ultra_Expanded<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stoke<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | Array<'300' | '400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Strait<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Style_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Stylish<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sue_Ellen_Francisco<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Suez_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sulphur_Point<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sumana<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sunflower<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '500' | '700' | Array<'300' | '500' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sunshiney<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Supermercado_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Sura<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Suranna<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Suravaram<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Suwannaphum<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Swanky_and_Moo_Moo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Syncopate<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Syne<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Syne_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Syne_Tactile<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tac_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tai_Heritage_Pro<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tai-viet' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tajawal<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '500' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tangerine<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tapestry<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Taprom<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'khmer' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tauri<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Taviraj<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Teachers<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Teko<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tektur<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Telex<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tenali_Ramakrishna<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tenor_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Text_Me_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Texturina<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'opsz'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Thasadith<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function The_Girl_Next_Door<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function The_Nautigal<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tienne<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tillana<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tilt_Neon<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('XROT' | 'YROT')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tilt_Prism<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('XROT' | 'YROT')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tilt_Warp<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('XROT' | 'YROT')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Timmana<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tinos<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiny5<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiro_Bangla<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'bengali' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiro_Devanagari_Hindi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiro_Devanagari_Marathi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiro_Devanagari_Sanskrit<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiro_Gurmukhi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiro_Kannada<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'kannada' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiro_Tamil<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'tamil'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tiro_Telugu<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'telugu'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Titan_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Titillium_Web<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '600' | '700' | '900' | Array<'200' | '300' | '400' | '600' | '700' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tomorrow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tourney<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Trade_Winds<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Train_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Trirong<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Trispace<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Trocchi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Trochut<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Truculenta<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n    axes?: ('opsz' | 'wdth')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Trykker<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tsukimi_Rounded<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Tulpen_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Turret_Road<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '500' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Twinkle_Star<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ubuntu<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '700' | Array<'300' | '400' | '500' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ubuntu_Condensed<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ubuntu_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ubuntu_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n    axes?: 'wdth'[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ubuntu_Sans_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Uchen<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'tibetan'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ultra<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Unbounded<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Uncial_Antiqua<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Underdog<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Unica_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function UnifrakturCook<T extends CssVariable | undefined = undefined>(options: {\n    weight: '700' | Array<'700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function UnifrakturMaguntia<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Unkempt<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Unlock<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Unna<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Updock<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Urbanist<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function VT323<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vampiro_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Varela<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Varela_Round<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Varta<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vast_Shadow<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vazirmatn<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vesper_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '700' | '900' | Array<'400' | '500' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Viaoda_Libre<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vibes<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vibur<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Victor_Mono<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vidaloka<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Viga<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vina_Sans<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Voces<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Volkhov<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vollkorn<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vollkorn_SC<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '600' | '700' | '900' | Array<'400' | '600' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Voltaire<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Vujahday_Script<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Waiting_for_the_Sunrise<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Wallpoet<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Walter_Turncoat<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Warnes<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Water_Brush<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Waterfall<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Wavefont<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    axes?: ('ROND' | 'YELA')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Wellfleet<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Wendy_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Whisper<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function WindSong<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | Array<'400' | '500'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Wire_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Wittgenstein<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Wix_Madefor_Display<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Wix_Madefor_Text<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Work_Sans<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Workbench<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '400' | 'variable' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'math' | 'symbols'>;\n    axes?: ('BLED' | 'SCAN')[];\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Xanh_Mono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yaldevi<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yanone_Kaffeesatz<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yantramanav<T extends CssVariable | undefined = undefined>(options: {\n    weight: '100' | '300' | '400' | '500' | '700' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yarndings_12<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yarndings_12_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yarndings_20<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yarndings_20_Charted<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'math' | 'symbols'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yatra_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yellowtail<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yeon_Sung<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yeseva_One<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yesteryear<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yomogi<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Young_Serif<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yrsa<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ysabeau<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ysabeau_Infant<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ysabeau_Office<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Ysabeau_SC<T extends CssVariable | undefined = undefined>(options?: {\n    weight?: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yuji_Boku<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yuji_Hentaigana_Akari<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yuji_Hentaigana_Akebono<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yuji_Mai<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yuji_Syuku<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Yusei_Magic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function ZCOOL_KuaiLe<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function ZCOOL_QingKe_HuangYou<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function ZCOOL_XiaoWei<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zain<T extends CssVariable | undefined = undefined>(options: {\n    weight: '200' | '300' | '400' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '700' | '800' | '900'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'arabic' | 'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Antique<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Antique_Soft<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Dots<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Kaku_Gothic_Antique<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '700' | '900' | Array<'300' | '400' | '500' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Kaku_Gothic_New<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '700' | '900' | Array<'300' | '400' | '500' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Kurenaido<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Loop<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Maru_Gothic<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '700' | '900' | Array<'300' | '400' | '500' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Old_Mincho<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '500' | '600' | '700' | '900' | Array<'400' | '500' | '600' | '700' | '900'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zen_Tokyo_Zoo<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zeyada<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zhi_Mang_Xing<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | Array<'400'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zilla_Slab<T extends CssVariable | undefined = undefined>(options: {\n    weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>;\n    style?: 'normal' | 'italic' | Array<'normal' | 'italic'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\nexport declare function Zilla_Slab_Highlight<T extends CssVariable | undefined = undefined>(options: {\n    weight: '400' | '700' | Array<'400' | '700'>;\n    style?: 'normal' | Array<'normal'>;\n    display?: Display;\n    variable?: T;\n    preload?: boolean;\n    fallback?: string[];\n    adjustFontFallback?: boolean;\n    subsets?: Array<'latin' | 'latin-ext'>;\n}): T extends undefined ? NextFont : NextFontWithVariable;\n"
        }
    ]
}
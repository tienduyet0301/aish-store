{
    "sourceFile": "node_modules/next/dist/compiled/@edge-runtime/primitives/load.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892706344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import * as __index from './index';\n\n/**\n * Load all the modules in the correct order.\n * This is just like the entrypoint (`@edge-runtime/primitives`), only\n * lazy.\n *\n * @param scopedContext a record of values that will be available to\n * all modules. This is useful for providing a different implementation of\n * globals, like `Uint8Array`.\n *\n * @example\n * ```ts\n * import { load } from '@edge-runtime/primitives/load'\n *\n * const { crypto, fetch, Request, Headers } = load({\n *   Uint8Array: MyCustomUint8Array,\n *   Error: MyCustomError,\n * })\n * ```\n */\ndeclare function load(\n  scopedContext: Record<string, unknown>,\n): typeof __index\n\nexport { load };\n"
        }
    ]
}
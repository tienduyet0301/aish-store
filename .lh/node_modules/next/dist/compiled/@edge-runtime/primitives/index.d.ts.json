{
    "sourceFile": "node_modules/next/dist/compiled/@edge-runtime/primitives/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892706292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export { AbortController, AbortSignal, DOMException } from './abort-controller.d.js';\nexport { console } from './console.d.js';\nexport { Crypto, CryptoKey, SubtleCrypto, crypto } from './crypto.d.js';\nexport { Event, EventTarget, FetchEvent, PromiseRejectionEvent } from './events.d.js';\nexport { File, FormData, Headers, Request, RequestInfo, RequestInit, Response, WebSocket, fetch } from './fetch.d.js';\nexport { URL, URLPattern, URLSearchParams } from './url.d.js';\nexport { setInterval, setTimeout } from './timers.d.js';\n\ndeclare const BlobConstructor: typeof Blob\n\ndeclare const TextEncoderConstructor: typeof TextEncoder\ndeclare const TextDecoderConstructor: typeof TextDecoder\n\n\ndeclare const _atob: typeof atob\ndeclare const _btoa: typeof btoa\n\n/**\n * The type of `ReadableStreamBYOBReader` is not included in Typescript so we\n * are declaring it inline to not have to worry about bundling.\n */\ndeclare class ReadableStreamBYOBReader {\n  constructor(stream: ReadableStream<Uint8Array>)\n  get closed(): Promise<undefined>\n  cancel(reason?: any): Promise<void>\n  read<T extends ArrayBufferView>(\n    view: T,\n  ): Promise<{ done: false; value: T } | { done: true; value: T | undefined }>\n  releaseLock(): void\n}\n\ndeclare const ReadableStreamConstructor: typeof ReadableStream\ndeclare const ReadableStreamBYOBReaderConstructor: typeof ReadableStreamBYOBReader\ndeclare const ReadableStreamDefaultReaderConstructor: typeof ReadableStreamDefaultReader\ndeclare const TransformStreamConstructor: typeof TransformStream\ndeclare const WritableStreamConstructor: typeof WritableStream\ndeclare const WritableStreamDefaultWriterConstructor: typeof WritableStreamDefaultWriter\n\ndeclare const TextDecoderStreamConstructor: typeof TextDecoderStream\ndeclare const TextEncoderStreamConstructor: typeof TextEncoderStream\n\ndeclare const structuredCloneConstructor: typeof structuredClone\n\ndeclare const performanceConstructor: typeof performance\n\nexport { BlobConstructor as Blob, ReadableStreamConstructor as ReadableStream, ReadableStreamBYOBReaderConstructor as ReadableStreamBYOBReader, ReadableStreamDefaultReaderConstructor as ReadableStreamDefaultReader, TextDecoderConstructor as TextDecoder, TextDecoderStreamConstructor as TextDecoderStream, TextEncoderConstructor as TextEncoder, TextEncoderStreamConstructor as TextEncoderStream, TransformStreamConstructor as TransformStream, WritableStreamConstructor as WritableStream, WritableStreamDefaultWriterConstructor as WritableStreamDefaultWriter, _atob as atob, _btoa as btoa, performanceConstructor as performance, structuredCloneConstructor as structuredClone };\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/compiled/@babel/runtime/helpers/dispose.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892701546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "function dispose_SuppressedError(suppressed, error) {\n  return \"undefined\" != typeof SuppressedError ? dispose_SuppressedError = SuppressedError : (dispose_SuppressedError = function dispose_SuppressedError(suppressed, error) {\n    this.suppressed = suppressed, this.error = error, this.stack = new Error().stack;\n  }, dispose_SuppressedError.prototype = Object.create(Error.prototype, {\n    constructor: {\n      value: dispose_SuppressedError,\n      writable: !0,\n      configurable: !0\n    }\n  })), new dispose_SuppressedError(suppressed, error);\n}\nfunction _dispose(stack, error, hasError) {\n  function next() {\n    if (0 !== stack.length) {\n      var r = stack.pop();\n      if (r.a) return Promise.resolve(r.d.call(r.v)).then(next, err);\n      try {\n        r.d.call(r.v);\n      } catch (e) {\n        return err(e);\n      }\n      return next();\n    }\n    if (hasError) throw error;\n  }\n  function err(e) {\n    return error = hasError ? new dispose_SuppressedError(e, error) : e, hasError = !0, next();\n  }\n  return next();\n}\nmodule.exports = _dispose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/shared/lib/image-config.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892901184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export declare const VALID_LOADERS: readonly [\"default\", \"imgix\", \"cloudinary\", \"akamai\", \"custom\"];\nexport type LoaderValue = (typeof VALID_LOADERS)[number];\nexport type ImageLoaderProps = {\n    src: string;\n    width: number;\n    quality?: number;\n};\nexport type ImageLoaderPropsWithConfig = ImageLoaderProps & {\n    config: Readonly<ImageConfig>;\n};\nexport type LocalPattern = {\n    /**\n     * Can be literal or wildcard.\n     * Single `*` matches a single path segment.\n     * Double `**` matches any number of path segments.\n     */\n    pathname?: string;\n    /**\n     * Can be literal query string such as `?v=1` or\n     * empty string meaning no query string.\n     */\n    search?: string;\n};\nexport type RemotePattern = {\n    /**\n     * Must be `http` or `https`.\n     */\n    protocol?: 'http' | 'https';\n    /**\n     * Can be literal or wildcard.\n     * Single `*` matches a single subdomain.\n     * Double `**` matches any number of subdomains.\n     */\n    hostname: string;\n    /**\n     * Can be literal port such as `8080` or empty string\n     * meaning no port.\n     */\n    port?: string;\n    /**\n     * Can be literal or wildcard.\n     * Single `*` matches a single path segment.\n     * Double `**` matches any number of path segments.\n     */\n    pathname?: string;\n    /**\n     * Can be literal query string such as `?v=1` or\n     * empty string meaning no query string.\n     */\n    search?: string;\n};\ntype ImageFormat = 'image/avif' | 'image/webp';\n/**\n * Image configurations\n *\n * @see [Image configuration options](https://nextjs.org/docs/api-reference/next/image#configuration-options)\n */\nexport type ImageConfigComplete = {\n    /** @see [Device sizes documentation](https://nextjs.org/docs/api-reference/next/image#device-sizes) */\n    deviceSizes: number[];\n    /** @see [Image sizing documentation](https://nextjs.org/docs/app/building-your-application/optimizing/images#image-sizing) */\n    imageSizes: number[];\n    /** @see [Image loaders configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader) */\n    loader: LoaderValue;\n    /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader-configuration) */\n    path: string;\n    /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/image#loader-configuration) */\n    loaderFile: string;\n    /**\n     * @deprecated Use `remotePatterns` instead.\n     */\n    domains: string[];\n    /** @see [Disable static image import configuration](https://nextjs.org/docs/api-reference/next/image#disable-static-imports) */\n    disableStaticImages: boolean;\n    /** @see [Cache behavior](https://nextjs.org/docs/api-reference/next/image#caching-behavior) */\n    minimumCacheTTL: number;\n    /** @see [Acceptable formats](https://nextjs.org/docs/api-reference/next/image#acceptable-formats) */\n    formats: ImageFormat[];\n    /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n    dangerouslyAllowSVG: boolean;\n    /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n    contentSecurityPolicy: string;\n    /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n    contentDispositionType: 'inline' | 'attachment';\n    /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#remotepatterns) */\n    remotePatterns: Array<URL | RemotePattern>;\n    /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#localPatterns) */\n    localPatterns: LocalPattern[] | undefined;\n    /** @see [Qualities](https://nextjs.org/docs/api-reference/next/image#qualities) */\n    qualities: number[] | undefined;\n    /** @see [Unoptimized](https://nextjs.org/docs/api-reference/next/image#unoptimized) */\n    unoptimized: boolean;\n};\nexport type ImageConfig = Partial<ImageConfigComplete>;\nexport declare const imageConfigDefault: ImageConfigComplete;\nexport {};\n"
        }
    ]
}
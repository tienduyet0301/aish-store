{
    "sourceFile": "node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892906827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { I18NProvider } from '../../../../server/lib/i18n-provider';\nexport interface NextPathnameInfo {\n    /**\n     * The base path in case the pathname included it.\n     */\n    basePath?: string;\n    /**\n     * The buildId for when the parsed URL is a data URL. Parsing it can be\n     * disabled with the `parseData` option.\n     */\n    buildId?: string;\n    /**\n     * If there was a locale in the pathname, this will hold its value.\n     */\n    locale?: string;\n    /**\n     * The processed pathname without a base path, locale, or data URL elements\n     * when parsing it is enabled.\n     */\n    pathname: string;\n    /**\n     * A boolean telling if the pathname had a trailingSlash. This can be only\n     * true if trailingSlash is enabled.\n     */\n    trailingSlash?: boolean;\n}\ninterface Options {\n    /**\n     * When passed to true, this function will also parse Nextjs data URLs.\n     */\n    parseData?: boolean;\n    /**\n     * A partial of the Next.js configuration to parse the URL.\n     */\n    nextConfig?: {\n        basePath?: string;\n        i18n?: {\n            locales?: readonly string[];\n        } | null;\n        trailingSlash?: boolean;\n    };\n    /**\n     * If provided, this normalizer will be used to detect the locale instead of\n     * the default locale detection.\n     */\n    i18nProvider?: I18NProvider;\n}\nexport declare function getNextPathnameInfo(pathname: string, options: Options): NextPathnameInfo;\nexport {};\n"
        }
    ]
}
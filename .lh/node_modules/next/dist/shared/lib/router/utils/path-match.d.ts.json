{
    "sourceFile": "node_modules/next/dist/shared/lib/router/utils/path-match.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892907952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "interface Options {\n    /**\n     * A transformer function that will be applied to the regexp generated\n     * from the provided path and path-to-regexp.\n     */\n    regexModifier?: (regex: string) => string;\n    /**\n     * When true the function will remove all unnamed parameters\n     * from the matched parameters.\n     */\n    removeUnnamedParams?: boolean;\n    /**\n     * When true the regexp won't allow an optional trailing delimiter\n     * to match.\n     */\n    strict?: boolean;\n    /**\n     * When true the matcher will be case-sensitive, defaults to false\n     */\n    sensitive?: boolean;\n}\nexport type PatchMatcher = (pathname: string, params?: Record<string, any>) => Record<string, any> | false;\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport declare function getPathMatch(path: string, options?: Options): PatchMatcher;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/shared/lib/dynamic.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892899308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import React from 'react';\ntype ComponentModule<P = {}> = {\n    default: React.ComponentType<P>;\n};\nexport declare type LoaderComponent<P = {}> = Promise<React.ComponentType<P> | ComponentModule<P>>;\nexport declare type Loader<P = {}> = (() => LoaderComponent<P>) | LoaderComponent<P>;\nexport type LoaderMap = {\n    [module: string]: () => Loader<any>;\n};\nexport type LoadableGeneratedOptions = {\n    webpack?(): any;\n    modules?(): LoaderMap;\n};\nexport type DynamicOptionsLoadingProps = {\n    error?: Error | null;\n    isLoading?: boolean;\n    pastDelay?: boolean;\n    retry?: () => void;\n    timedOut?: boolean;\n};\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n    loading?: (loadingProps: DynamicOptionsLoadingProps) => React.ReactNode;\n    loader?: Loader<P> | LoaderMap;\n    loadableGenerated?: LoadableGeneratedOptions;\n    ssr?: boolean;\n};\nexport type LoadableOptions<P = {}> = DynamicOptions<P>;\nexport type LoadableFn<P = {}> = (opts: LoadableOptions<P>) => React.ComponentType<P>;\nexport type LoadableComponent<P = {}> = React.ComponentType<P>;\nexport declare function noSSR<P = {}>(LoadableInitializer: LoadableFn<P>, loadableOptions: DynamicOptions<P>): React.ComponentType<P>;\n/**\n * This function lets you dynamically import a component.\n * It uses [React.lazy()](https://react.dev/reference/react/lazy) with [Suspense](https://react.dev/reference/react/Suspense) under the hood.\n *\n * Read more: [Next.js Docs: `next/dynamic`](https://nextjs.org/docs/app/building-your-application/optimizing/lazy-loading#nextdynamic)\n */\nexport default function dynamic<P = {}>(dynamicOptions: DynamicOptions<P> | Loader<P>, options?: DynamicOptions<P>): React.ComponentType<P>;\nexport {};\n"
        }
    ]
}
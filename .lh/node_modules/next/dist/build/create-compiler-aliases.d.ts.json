{
    "sourceFile": "node_modules/next/dist/build/create-compiler-aliases.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892655046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { type WebpackLayerName } from '../lib/constants';\nimport type { NextConfigComplete } from '../server/config-shared';\ninterface CompilerAliases {\n    [alias: string]: string | string[];\n}\nexport declare function createWebpackAliases({ distDir, isClient, isEdgeServer, isNodeServer, dev, config, pagesDir, appDir, dir, reactProductionProfiling, hasRewrites, }: {\n    distDir: string;\n    isClient: boolean;\n    isEdgeServer: boolean;\n    isNodeServer: boolean;\n    dev: boolean;\n    config: NextConfigComplete;\n    pagesDir: string | undefined;\n    appDir: string | undefined;\n    dir: string;\n    reactProductionProfiling: boolean;\n    hasRewrites: boolean;\n}): CompilerAliases;\nexport declare function createServerOnlyClientOnlyAliases(isServer: boolean): CompilerAliases;\nexport declare function createNextApiEsmAliases(): Record<string, string>;\nexport declare function createAppRouterApiAliases(isServerOnlyLayer: boolean): Record<string, string>;\nexport declare function createRSCAliases(bundledReactChannel: string, { layer, isEdgeServer, reactProductionProfiling, }: {\n    layer: WebpackLayerName;\n    isEdgeServer: boolean;\n    reactProductionProfiling: boolean;\n}): CompilerAliases;\nexport declare function getOptimizedModuleAliases(): CompilerAliases;\nexport {};\n"
        }
    ]
}
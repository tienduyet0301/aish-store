{
    "sourceFile": "node_modules/next/dist/build/build-context.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892654773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    NextBuildContext: null,\n    getPluginState: null,\n    getProxiedPluginState: null,\n    resumePluginState: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    NextBuildContext: function() {\n        return NextBuildContext;\n    },\n    getPluginState: function() {\n        return getPluginState;\n    },\n    getProxiedPluginState: function() {\n        return getProxiedPluginState;\n    },\n    resumePluginState: function() {\n        return resumePluginState;\n    }\n});\n// A layer for storing data that is used by plugins to communicate with each\n// other between different steps of the build process. This is only internal\n// to Next.js and will not be a part of the final build output.\n// These states don't need to be deeply merged.\nlet pluginState = {};\nfunction resumePluginState(resumedState) {\n    Object.assign(pluginState, resumedState);\n}\nfunction getProxiedPluginState(initialState) {\n    return new Proxy(pluginState, {\n        get (target, key) {\n            if (typeof target[key] === 'undefined') {\n                return target[key] = initialState[key];\n            }\n            return target[key];\n        },\n        set (target, key, value) {\n            target[key] = value;\n            return true;\n        }\n    });\n}\nfunction getPluginState() {\n    return pluginState;\n}\nconst NextBuildContext = {};\n\n//# sourceMappingURL=build-context.js.map"
        }
    ]
}
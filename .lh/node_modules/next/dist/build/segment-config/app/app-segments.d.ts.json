{
    "sourceFile": "node_modules/next/dist/build/segment-config/app/app-segments.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892659547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { LoadComponentsReturnType } from '../../../server/load-components';\nimport type { Params } from '../../../server/request/params';\nimport type { AppPageModule } from '../../../server/route-modules/app-page/module.compiled';\nimport type { AppRouteModule } from '../../../server/route-modules/app-route/module.compiled';\nimport { type AppSegmentConfig } from './app-segment-config';\ntype GenerateStaticParams = (options: {\n    params?: Params;\n}) => Promise<Params[]>;\nexport type AppSegment = {\n    name: string;\n    param: string | undefined;\n    filePath: string | undefined;\n    config: AppSegmentConfig | undefined;\n    isDynamicSegment: boolean;\n    generateStaticParams: GenerateStaticParams | undefined;\n};\n/**\n * Collects the segments for a given route module.\n *\n * @param components the loaded components\n * @returns the segments for the route module\n */\nexport declare function collectSegments({ routeModule, }: LoadComponentsReturnType<AppPageModule | AppRouteModule>): Promise<AppSegment[]> | AppSegment[];\nexport {};\n"
        }
    ]
}
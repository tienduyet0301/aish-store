{
    "sourceFile": "node_modules/next/dist/build/segment-config/app/collect-root-param-keys.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892659651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"collectRootParamKeys\", {\n    enumerable: true,\n    get: function() {\n        return collectRootParamKeys;\n    }\n});\nconst _getsegmentparam = require(\"../../../server/app-render/get-segment-param\");\nconst _checks = require(\"../../../server/route-modules/checks\");\nconst _invarianterror = require(\"../../../shared/lib/invariant-error\");\nfunction collectAppPageRootParamKeys(routeModule) {\n    let rootParams = [];\n    let current = routeModule.userland.loaderTree;\n    while(current){\n        var _getSegmentParam;\n        const [name, parallelRoutes, modules] = current;\n        // If this is a dynamic segment, then we collect the param.\n        const param = (_getSegmentParam = (0, _getsegmentparam.getSegmentParam)(name)) == null ? void 0 : _getSegmentParam.param;\n        if (param) {\n            rootParams.push(param);\n        }\n        // If this has a layout module, then we've found the root layout because\n        // we return once we found the first layout.\n        if (typeof modules.layout !== 'undefined') {\n            return rootParams;\n        }\n        // This didn't include a root layout, so we need to continue. We don't need\n        // to collect from other parallel routes because we can't have a parallel\n        // route above a root layout.\n        current = parallelRoutes.children;\n    }\n    // If we didn't find a root layout, then we don't have any params.\n    return [];\n}\nfunction collectRootParamKeys({ routeModule }) {\n    if ((0, _checks.isAppRouteRouteModule)(routeModule)) {\n        return [];\n    }\n    if ((0, _checks.isAppPageRouteModule)(routeModule)) {\n        return collectAppPageRootParamKeys(routeModule);\n    }\n    throw Object.defineProperty(new _invarianterror.InvariantError('Expected a route module to be one of app route or page'), \"__NEXT_ERROR_CODE\", {\n        value: \"E568\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=collect-root-param-keys.js.map"
        }
    ]
}
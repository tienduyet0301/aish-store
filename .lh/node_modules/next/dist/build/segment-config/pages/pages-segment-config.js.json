{
    "sourceFile": "node_modules/next/dist/build/segment-config/pages/pages-segment-config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892659839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    PagesSegmentConfigSchemaKeys: null,\n    parsePagesSegmentConfig: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    PagesSegmentConfigSchemaKeys: function() {\n        return PagesSegmentConfigSchemaKeys;\n    },\n    parsePagesSegmentConfig: function() {\n        return parsePagesSegmentConfig;\n    }\n});\nconst _zod = require(\"next/dist/compiled/zod\");\nconst _zod1 = require(\"../../../shared/lib/zod\");\n/**\n * The schema for the page segment config.\n */ const PagesSegmentConfigSchema = _zod.z.object({\n    /**\n   * The runtime to use for the page.\n   */ runtime: _zod.z.enum([\n        'edge',\n        'experimental-edge',\n        'nodejs'\n    ]).optional(),\n    /**\n   * The maximum duration for the page render.\n   */ maxDuration: _zod.z.number().optional(),\n    /**\n   * The exported config object for the page.\n   */ config: _zod.z.object({\n        /**\n       * Enables AMP for the page.\n       */ amp: _zod.z.union([\n            _zod.z.boolean(),\n            _zod.z.literal('hybrid')\n        ]).optional(),\n        /**\n       * The runtime to use for the page.\n       */ runtime: _zod.z.enum([\n            'edge',\n            'experimental-edge',\n            'nodejs'\n        ]).optional(),\n        /**\n       * The maximum duration for the page render.\n       */ maxDuration: _zod.z.number().optional()\n    }).optional()\n});\nfunction parsePagesSegmentConfig(data, route) {\n    const parsed = PagesSegmentConfigSchema.safeParse(data, {});\n    if (!parsed.success) {\n        throw (0, _zod1.formatZodError)(`Invalid segment configuration options detected for \"${route}\". Read more at https://nextjs.org/docs/messages/invalid-page-config`, parsed.error);\n    }\n    return parsed.data;\n}\nconst PagesSegmentConfigSchemaKeys = PagesSegmentConfigSchema.keyof().options;\n\n//# sourceMappingURL=pages-segment-config.js.map"
        }
    ]
}
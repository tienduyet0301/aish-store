{
    "sourceFile": "node_modules/next/dist/build/webpack/plugins/next-trace-entrypoints-plugin.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892671799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { Span } from '../../../trace';\nimport type { NodeFileTraceReasons } from 'next/dist/compiled/@vercel/nft';\nimport { type CompilerNameValues } from '../../../shared/lib/constants';\nimport { webpack } from 'next/dist/compiled/webpack/webpack';\nimport type { NextConfigComplete } from '../../../server/config-shared';\nexport declare const TRACE_IGNORES: string[];\nexport declare function getFilesMapFromReasons(fileList: Set<string>, reasons: NodeFileTraceReasons, ignoreFn?: (file: string, parent?: string) => Boolean): Map<string, Map<string, {\n    ignored: boolean;\n}>>;\nexport interface TurbotraceAction {\n    action: 'print' | 'annotate';\n    input: string[];\n    contextDirectory: string;\n    processCwd: string;\n    showAll?: boolean;\n    memoryLimit?: number;\n}\nexport interface BuildTraceContext {\n    entriesTrace?: {\n        action: TurbotraceAction;\n        appDir: string;\n        outputPath: string;\n        depModArray: string[];\n        entryNameMap: Record<string, string>;\n        absolutePathByEntryName: Record<string, string>;\n    };\n    chunksTrace?: {\n        action: TurbotraceAction;\n        outputPath: string;\n        entryNameFilesMap: Record<string, Array<string>>;\n    };\n}\nexport declare class TraceEntryPointsPlugin implements webpack.WebpackPluginInstance {\n    buildTraceContext: BuildTraceContext;\n    private rootDir;\n    private appDir;\n    private pagesDir;\n    private appDirEnabled?;\n    private tracingRoot;\n    private entryTraces;\n    private traceIgnores;\n    private esmExternals?;\n    private compilerType;\n    constructor({ rootDir, appDir, pagesDir, compilerType, appDirEnabled, traceIgnores, esmExternals, outputFileTracingRoot, }: {\n        rootDir: string;\n        compilerType: CompilerNameValues;\n        appDir: string | undefined;\n        pagesDir: string | undefined;\n        appDirEnabled?: boolean;\n        traceIgnores?: string[];\n        outputFileTracingRoot?: string;\n        esmExternals?: NextConfigComplete['experimental']['esmExternals'];\n    });\n    createTraceAssets(compilation: webpack.Compilation, span: Span): Promise<void>;\n    tapfinishModules(compilation: webpack.Compilation, traceEntrypointsPluginSpan: Span, doResolve: (request: string, parent: string, job: import('@vercel/nft/out/node-file-trace').Job, isEsmRequested: boolean) => Promise<string>, readlink: any, stat: any): void;\n    apply(compiler: webpack.Compiler): void;\n}\n"
        }
    ]
}
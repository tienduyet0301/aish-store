{
    "sourceFile": "node_modules/next/dist/build/webpack/plugins/middleware-plugin.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892671411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { AssetBinding } from '../loaders/get-module-build-info';\nimport type { MiddlewareMatcher } from '../../analysis/get-page-static-info';\nimport { webpack } from 'next/dist/compiled/webpack/webpack';\nimport type { CustomRoutes } from '../../../lib/load-custom-routes';\nexport interface EdgeFunctionDefinition {\n    files: string[];\n    name: string;\n    page: string;\n    matchers: MiddlewareMatcher[];\n    env: Record<string, string>;\n    wasm?: AssetBinding[];\n    assets?: AssetBinding[];\n    regions?: string[] | string;\n}\nexport interface MiddlewareManifest {\n    version: 3;\n    sortedMiddleware: string[];\n    middleware: {\n        [page: string]: EdgeFunctionDefinition;\n    };\n    functions: {\n        [page: string]: EdgeFunctionDefinition;\n    };\n}\ntype EdgeRuntimeEnvironments = Record<string, string> & {\n    __NEXT_BUILD_ID: string;\n    NEXT_SERVER_ACTIONS_ENCRYPTION_KEY: string;\n};\ninterface Options {\n    dev: boolean;\n    sriEnabled: boolean;\n    rewrites: CustomRoutes['rewrites'];\n    edgeEnvironments: EdgeRuntimeEnvironments;\n}\nexport default class MiddlewarePlugin {\n    private readonly dev;\n    private readonly sriEnabled;\n    private readonly rewrites;\n    private readonly edgeEnvironments;\n    constructor({ dev, sriEnabled, rewrites, edgeEnvironments }: Options);\n    apply(compiler: webpack.Compiler): void;\n}\nexport declare const SUPPORTED_NATIVE_MODULES: readonly [\"buffer\", \"events\", \"assert\", \"util\", \"async_hooks\"];\nexport declare function getEdgePolyfilledModules(): Record<string, string>;\nexport declare function handleWebpackExternalForEdgeRuntime({ request, context, contextInfo, getResolve, }: {\n    request: string;\n    context: string;\n    contextInfo: any;\n    getResolve: () => any;\n}): Promise<string | undefined>;\nexport {};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/build/webpack/plugins/next-font-manifest-plugin.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892671719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { webpack } from 'next/dist/compiled/webpack/webpack';\nexport type NextFontManifest = {\n    pages: {\n        [path: string]: string[];\n    };\n    app: {\n        [entry: string]: string[];\n    };\n    appUsingSizeAdjust: boolean;\n    pagesUsingSizeAdjust: boolean;\n};\n/**\n * The NextFontManifestPlugin collects all font files emitted by next-font-loader and creates a manifest file.\n * The manifest file is used in the Next.js render functions (_document.tsx for pages/ and app-render for app/) to add preload tags for the font files.\n * We only want to att preload fonts that are used by the current route.\n *\n * For pages/ the plugin finds the fonts imported in the entrypoint chunks and creates a map:\n * { [route]: fontFile[] }\n * When rendering the app in _document.tsx, it gets the font files to preload: manifest.pages[currentRouteBeingRendered].\n *\n * For app/, the manifest is a bit different.\n * Instead of creating a map of route to font files, it creates a map of the webpack module request to font files.\n * { [webpackModuleRequest]: fontFile[]]}\n * When creating the component tree in app-render it looks for font files to preload: manifest.app[moduleBeingRendered]\n */\nexport declare class NextFontManifestPlugin {\n    private appDir;\n    constructor(options: {\n        appDir: undefined | string;\n    });\n    apply(compiler: webpack.Compiler): void;\n}\n"
        }
    ]
}
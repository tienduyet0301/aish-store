{
    "sourceFile": "node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/getModuleTrace.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892672980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    formatModuleTrace: null,\n    getModuleTrace: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    formatModuleTrace: function() {\n        return formatModuleTrace;\n    },\n    getModuleTrace: function() {\n        return getModuleTrace;\n    }\n});\nconst _loaderutils3 = /*#__PURE__*/ _interop_require_default(require(\"next/dist/compiled/loader-utils3\"));\nconst _path = require(\"path\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction formatModule(compiler, module1) {\n    const relativePath = (0, _path.relative)(compiler.context, module1.resource).replace(/\\?.+$/, '');\n    return _loaderutils3.default.isUrlRequest(relativePath) ? _loaderutils3.default.urlToRequest(relativePath) : relativePath;\n}\nfunction formatModuleTrace(compiler, moduleTrace) {\n    let importTrace = [];\n    let firstExternalModule;\n    for(let i = moduleTrace.length - 1; i >= 0; i--){\n        const mod = moduleTrace[i];\n        if (!mod.resource) continue;\n        if (!mod.resource.includes('node_modules/')) {\n            importTrace.unshift(formatModule(compiler, mod));\n        } else {\n            firstExternalModule = mod;\n            break;\n        }\n    }\n    let invalidImportMessage = '';\n    if (firstExternalModule) {\n        var _firstExternalModule_resourceResolveData_descriptionFileData, _firstExternalModule_resourceResolveData;\n        const firstExternalPackageName = (_firstExternalModule_resourceResolveData = firstExternalModule.resourceResolveData) == null ? void 0 : (_firstExternalModule_resourceResolveData_descriptionFileData = _firstExternalModule_resourceResolveData.descriptionFileData) == null ? void 0 : _firstExternalModule_resourceResolveData_descriptionFileData.name;\n        if (firstExternalPackageName === 'styled-jsx') {\n            invalidImportMessage += `\\n\\nThe error was caused by using 'styled-jsx' in '${importTrace[0]}'. It only works in a Client Component but none of its parents are marked with \"use client\", so they're Server Components by default.`;\n        } else {\n            let formattedExternalFile = firstExternalModule.resource.split('node_modules');\n            formattedExternalFile = formattedExternalFile[formattedExternalFile.length - 1];\n            invalidImportMessage += `\\n\\nThe error was caused by importing '${formattedExternalFile.slice(1)}' in '${importTrace[0]}'.`;\n        }\n    }\n    return {\n        lastInternalFileName: importTrace[0],\n        invalidImportMessage,\n        formattedModuleTrace: importTrace.map((mod)=>'  ' + mod).join('\\n')\n    };\n}\nfunction getModuleTrace(module1, compilation, compiler) {\n    // Get the module trace:\n    // https://cs.github.com/webpack/webpack/blob/9fcaa243573005d6fdece9a3f8d89a0e8b399613/lib/stats/DefaultStatsFactoryPlugin.js#L414\n    const visitedModules = new Set();\n    const moduleTrace = [];\n    let current = module1;\n    let isPagesDir = false;\n    while(current){\n        if (visitedModules.has(current)) break;\n        if (/[\\\\/]pages/.test(current.resource.replace(compiler.context, ''))) {\n            isPagesDir = true;\n        }\n        visitedModules.add(current);\n        moduleTrace.push(current);\n        const origin = compilation.moduleGraph.getIssuer(current);\n        if (!origin) break;\n        current = origin;\n    }\n    return {\n        moduleTrace,\n        isPagesDir\n    };\n}\n\n//# sourceMappingURL=getModuleTrace.js.map"
        }
    ]
}
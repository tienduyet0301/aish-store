{
    "sourceFile": "node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseNextInvalidImportError.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892673479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getNextInvalidImportError\", {\n    enumerable: true,\n    get: function() {\n        return getNextInvalidImportError;\n    }\n});\nconst _getModuleTrace = require(\"./getModuleTrace\");\nconst _simpleWebpackError = require(\"./simpleWebpackError\");\nfunction getNextInvalidImportError(err, module, compilation, compiler) {\n    try {\n        if (!module.loaders.find((loader)=>loader.loader.includes('next-invalid-import-error-loader.js'))) {\n            return false;\n        }\n        const { moduleTrace } = (0, _getModuleTrace.getModuleTrace)(module, compilation, compiler);\n        const { formattedModuleTrace, lastInternalFileName, invalidImportMessage } = (0, _getModuleTrace.formatModuleTrace)(compiler, moduleTrace);\n        return new _simpleWebpackError.SimpleWebpackError(lastInternalFileName, err.message + invalidImportMessage + '\\n\\nImport trace for requested module:\\n' + formattedModuleTrace);\n    } catch  {\n        return false;\n    }\n}\n\n//# sourceMappingURL=parseNextInvalidImportError.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseBabel.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892673184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getBabelError\", {\n    enumerable: true,\n    get: function() {\n        return getBabelError;\n    }\n});\nconst _picocolors = require(\"../../../../lib/picocolors\");\nconst _simpleWebpackError = require(\"./simpleWebpackError\");\nfunction getBabelError(fileName, err) {\n    if (err.code !== 'BABEL_PARSE_ERROR') {\n        return false;\n    }\n    // https://github.com/babel/babel/blob/34693d6024da3f026534dd8d569f97ac0109602e/packages/babel-core/src/parser/index.js\n    if (err.loc) {\n        const lineNumber = Math.max(1, err.loc.line);\n        const column = Math.max(1, err.loc.column);\n        let message = err.message// Remove file information, which instead is provided by webpack.\n        .replace(/^.+?: /, '')// Remove column information from message\n        .replace(new RegExp(`[^\\\\S\\\\r\\\\n]*\\\\(${lineNumber}:${column}\\\\)[^\\\\S\\\\r\\\\n]*`), '');\n        return new _simpleWebpackError.SimpleWebpackError(`${(0, _picocolors.cyan)(fileName)}:${(0, _picocolors.yellow)(lineNumber.toString())}:${(0, _picocolors.yellow)(column.toString())}`, (0, _picocolors.red)((0, _picocolors.bold)('Syntax error')).concat(`: ${message}`));\n    }\n    return false;\n}\n\n//# sourceMappingURL=parseBabel.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892673045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"WellKnownErrorsPlugin\", {\n    enumerable: true,\n    get: function() {\n        return WellKnownErrorsPlugin;\n    }\n});\nconst _webpackModuleError = require(\"./webpackModuleError\");\nconst NAME = 'WellKnownErrorsPlugin';\nclass WellKnownErrorsPlugin {\n    apply(compiler) {\n        compiler.hooks.compilation.tap(NAME, (compilation)=>{\n            compilation.hooks.afterSeal.tapPromise(NAME, async ()=>{\n                var _compilation_warnings, _compilation_errors;\n                if ((_compilation_warnings = compilation.warnings) == null ? void 0 : _compilation_warnings.length) {\n                    await Promise.all(compilation.warnings.map(async (warn, i)=>{\n                        var _warn_module_context, _warn_module;\n                        if (warn.name === 'ModuleDependencyWarning' && ((_warn_module = warn.module) == null ? void 0 : (_warn_module_context = _warn_module.context) == null ? void 0 : _warn_module_context.includes('node_modules'))) {\n                            compilation.warnings.splice(i, 1);\n                        }\n                    }));\n                }\n                if ((_compilation_errors = compilation.errors) == null ? void 0 : _compilation_errors.length) {\n                    await Promise.all(compilation.errors.map(async (err, i)=>{\n                        try {\n                            const moduleError = await (0, _webpackModuleError.getModuleBuildError)(compiler, compilation, err);\n                            if (moduleError !== false) {\n                                compilation.errors[i] = moduleError;\n                            }\n                        } catch (e) {\n                            console.log(e);\n                        }\n                    }));\n                }\n            });\n        });\n    }\n}\n\n//# sourceMappingURL=index.js.map"
        }
    ]
}
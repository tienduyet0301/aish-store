{
    "sourceFile": "node_modules/next/dist/build/webpack/plugins/devtools-ignore-list-plugin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892670952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// Source: https://github.com/mondaychen/devtools-ignore-webpack-plugin/blob/e35ce41d9606a92a455ef247f509a1c2ccab5778/src/index.ts\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, /**\n * This plugin adds a field to source maps that identifies which sources are\n * vendored or runtime-injected (aka third-party) sources. These are consumed by\n * Chrome DevTools to automatically ignore-list sources.\n */ \"default\", {\n    enumerable: true,\n    get: function() {\n        return DevToolsIgnorePlugin;\n    }\n});\nconst _webpack = require(\"next/dist/compiled/webpack/webpack\");\n// Following the naming conventions from\n// https://tc39.es/source-map/#source-map-format\nconst IGNORE_LIST = 'ignoreList';\nconst PLUGIN_NAME = 'devtools-ignore-plugin';\nfunction defaultShouldIgnorePath(path) {\n    return path.includes('/node_modules/') || path.includes('/webpack/');\n}\nfunction defaultIsSourceMapAsset(name) {\n    return name.endsWith('.map');\n}\nclass DevToolsIgnorePlugin {\n    constructor(options = {}){\n        this.options = {\n            shouldIgnorePath: options.shouldIgnorePath ?? defaultShouldIgnorePath,\n            isSourceMapAsset: options.isSourceMapAsset ?? defaultIsSourceMapAsset\n        };\n    }\n    apply(compiler) {\n        const { RawSource } = compiler.webpack.sources;\n        compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation)=>{\n            compilation.hooks.processAssets.tap({\n                name: PLUGIN_NAME,\n                stage: _webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_DEV_TOOLING,\n                additionalAssets: true\n            }, (assets)=>{\n                for (const [name, asset] of Object.entries(assets)){\n                    // Instead of using `asset.map()` to fetch the source maps from\n                    // SourceMapSource assets, process them directly as a RawSource.\n                    // This is because `.map()` is slow and can take several seconds.\n                    if (!this.options.isSourceMapAsset(name)) {\n                        continue;\n                    }\n                    const mapContent = asset.source().toString();\n                    if (!mapContent) {\n                        continue;\n                    }\n                    const sourcemap = JSON.parse(mapContent);\n                    const ignoreList = [];\n                    for (const [index, path] of sourcemap.sources.entries()){\n                        if (this.options.shouldIgnorePath(path)) {\n                            ignoreList.push(index);\n                        }\n                    }\n                    sourcemap[IGNORE_LIST] = ignoreList;\n                    compilation.updateAsset(name, new RawSource(JSON.stringify(sourcemap)));\n                }\n            });\n        });\n    }\n}\n\n//# sourceMappingURL=devtools-ignore-list-plugin.js.map"
        }
    ]
}
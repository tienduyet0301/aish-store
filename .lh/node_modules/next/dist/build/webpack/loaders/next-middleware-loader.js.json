{
    "sourceFile": "node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892669132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    decodeMatchers: null,\n    default: null,\n    encodeMatchers: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    decodeMatchers: function() {\n        return decodeMatchers;\n    },\n    default: function() {\n        return middlewareLoader;\n    },\n    encodeMatchers: function() {\n        return encodeMatchers;\n    }\n});\nconst _getmodulebuildinfo = require(\"./get-module-build-info\");\nconst _constants = require(\"../../../lib/constants\");\nconst _loadentrypoint = require(\"../../load-entrypoint\");\nfunction encodeMatchers(matchers) {\n    return Buffer.from(JSON.stringify(matchers)).toString('base64');\n}\nfunction decodeMatchers(encodedMatchers) {\n    return JSON.parse(Buffer.from(encodedMatchers, 'base64').toString());\n}\nasync function middlewareLoader() {\n    const { absolutePagePath, page, rootDir, matchers: encodedMatchers, preferredRegion, middlewareConfig: middlewareConfigBase64 } = this.getOptions();\n    const matchers = encodedMatchers ? decodeMatchers(encodedMatchers) : undefined;\n    const pagePath = this.utils.contextify(this.context || this.rootContext, absolutePagePath);\n    const middlewareConfig = JSON.parse(Buffer.from(middlewareConfigBase64, 'base64').toString());\n    const buildInfo = (0, _getmodulebuildinfo.getModuleBuildInfo)(this._module);\n    buildInfo.nextEdgeMiddleware = {\n        matchers,\n        page: page.replace(new RegExp(`/${_constants.MIDDLEWARE_LOCATION_REGEXP}$`), '') || '/'\n    };\n    buildInfo.rootDir = rootDir;\n    buildInfo.route = {\n        page,\n        absolutePagePath,\n        preferredRegion,\n        middlewareConfig\n    };\n    return await (0, _loadentrypoint.loadEntrypoint)('middleware', {\n        VAR_USERLAND: pagePath,\n        VAR_DEFINITION_PAGE: page\n    });\n}\n\n//# sourceMappingURL=next-middleware-loader.js.map"
        }
    ]
}
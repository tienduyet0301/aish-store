{
    "sourceFile": "node_modules/next/dist/build/webpack/loaders/next-font-loader/postcss-next-font.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892668607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { AdjustFontFallback } from '../../../../../font';\n/**\n * The next/font postcss plugin recieves the @font-face declarations returned from the next/font loaders.\n *\n * It hashes the font-family name to make it unguessable, it shouldn't be globally accessible.\n * If it were global, we wouldn't be able to tell which pages are using which fonts when generating preload tags.\n *\n * If the font loader returned fallback metrics, generate a fallback @font-face.\n *\n * If the font loader returned a variable name, add a CSS class that declares a variable containing the font and fallback fonts.\n *\n * Lastly, it adds the font-family to the exports object.\n * This enables you to access the actual font-family name, not just through the CSS class.\n * e.g:\n * const inter = Inter({ subsets: ['latin'] })\n * inter.style.fontFamily // => '__Inter_123456'\n */\ndeclare const postcssNextFontPlugin: {\n    ({ exports, fallbackFonts, adjustFontFallback, variable, weight, style, }: {\n        exports: {\n            name: any;\n            value: any;\n        }[];\n        fallbackFonts?: string[];\n        adjustFontFallback?: AdjustFontFallback;\n        variable?: string;\n        weight?: string;\n        style?: string;\n    }): {\n        postcssPlugin: string;\n        Once(root: any): void;\n    };\n    postcss: boolean;\n};\nexport default postcssNextFontPlugin;\n"
        }
    ]
}
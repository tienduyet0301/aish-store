{
    "sourceFile": "node_modules/next/dist/build/webpack/loaders/next-edge-app-route-loader/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892667296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nconst _getmodulebuildinfo = require(\"../get-module-build-info\");\nconst _stringifyrequest = require(\"../../stringify-request\");\nconst _constants = require(\"../../../../lib/constants\");\nconst _loadentrypoint = require(\"../../../load-entrypoint\");\nconst _ismetadataroute = require(\"../../../../lib/metadata/is-metadata-route\");\nconst EdgeAppRouteLoader = async function() {\n    const { page, absolutePagePath, preferredRegion, appDirLoader: appDirLoaderBase64 = '', middlewareConfig: middlewareConfigBase64 = '', nextConfig: nextConfigBase64, cacheHandlers: cacheHandlersStringified } = this.getOptions();\n    const appDirLoader = Buffer.from(appDirLoaderBase64, 'base64').toString();\n    const middlewareConfig = JSON.parse(Buffer.from(middlewareConfigBase64, 'base64').toString());\n    const cacheHandlers = JSON.parse(cacheHandlersStringified || '{}');\n    if (!cacheHandlers.default) {\n        cacheHandlers.default = require.resolve('../../../../server/lib/cache-handlers/default');\n    }\n    // Ensure we only run this loader for as a module.\n    if (!this._module) throw Object.defineProperty(new Error('This loader is only usable as a module'), \"__NEXT_ERROR_CODE\", {\n        value: \"E433\",\n        enumerable: false,\n        configurable: true\n    });\n    const buildInfo = (0, _getmodulebuildinfo.getModuleBuildInfo)(this._module);\n    buildInfo.nextEdgeSSR = {\n        isServerComponent: !(0, _ismetadataroute.isMetadataRoute)(page),\n        page: page,\n        isAppDir: true\n    };\n    buildInfo.route = {\n        page,\n        absolutePagePath,\n        preferredRegion,\n        middlewareConfig\n    };\n    const stringifiedPagePath = (0, _stringifyrequest.stringifyRequest)(this, absolutePagePath);\n    const modulePath = `${appDirLoader}${stringifiedPagePath.substring(1, stringifiedPagePath.length - 1)}?${_constants.WEBPACK_RESOURCE_QUERIES.edgeSSREntry}`;\n    const stringifiedConfig = Buffer.from(nextConfigBase64 || '', 'base64').toString();\n    return await (0, _loadentrypoint.loadEntrypoint)('edge-app-route', {\n        VAR_USERLAND: modulePath,\n        VAR_PAGE: page\n    }, {\n        nextConfig: stringifiedConfig\n    });\n};\nconst _default = EdgeAppRouteLoader;\n\n//# sourceMappingURL=index.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892669277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    default: null,\n    getRouteLoaderEntry: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return _default;\n    },\n    getRouteLoaderEntry: function() {\n        return getRouteLoaderEntry;\n    }\n});\nconst _querystring = require(\"querystring\");\nconst _getmodulebuildinfo = require(\"../get-module-build-info\");\nconst _routekind = require(\"../../../../server/route-kind\");\nconst _normalizepagepath = require(\"../../../../shared/lib/page-path/normalize-page-path\");\nconst _utils = require(\"../utils\");\nconst _utils1 = require(\"../../../utils\");\nconst _loadentrypoint = require(\"../../../load-entrypoint\");\nfunction getRouteLoaderEntry(options) {\n    switch(options.kind){\n        case _routekind.RouteKind.PAGES:\n            {\n                const query = {\n                    kind: options.kind,\n                    page: options.page,\n                    preferredRegion: options.preferredRegion,\n                    absolutePagePath: options.absolutePagePath,\n                    // These are the path references to the internal components that may be\n                    // overridden by userland components.\n                    absoluteAppPath: options.pages['/_app'],\n                    absoluteDocumentPath: options.pages['/_document'],\n                    middlewareConfigBase64: (0, _utils.encodeToBase64)(options.middlewareConfig)\n                };\n                return `next-route-loader?${(0, _querystring.stringify)(query)}!`;\n            }\n        case _routekind.RouteKind.PAGES_API:\n            {\n                const query = {\n                    kind: options.kind,\n                    page: options.page,\n                    preferredRegion: options.preferredRegion,\n                    absolutePagePath: options.absolutePagePath,\n                    middlewareConfigBase64: (0, _utils.encodeToBase64)(options.middlewareConfig)\n                };\n                return `next-route-loader?${(0, _querystring.stringify)(query)}!`;\n            }\n        default:\n            {\n                throw Object.defineProperty(new Error('Invariant: Unexpected route kind'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E453\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n    }\n}\nconst loadPages = async ({ page, absolutePagePath, absoluteDocumentPath, absoluteAppPath, preferredRegion, middlewareConfigBase64 }, buildInfo)=>{\n    const middlewareConfig = (0, _utils.decodeFromBase64)(middlewareConfigBase64);\n    // Attach build info to the module.\n    buildInfo.route = {\n        page,\n        absolutePagePath,\n        preferredRegion,\n        middlewareConfig\n    };\n    let file = await (0, _loadentrypoint.loadEntrypoint)('pages', {\n        VAR_USERLAND: absolutePagePath,\n        VAR_MODULE_DOCUMENT: absoluteDocumentPath,\n        VAR_MODULE_APP: absoluteAppPath,\n        VAR_DEFINITION_PAGE: (0, _normalizepagepath.normalizePagePath)(page),\n        VAR_DEFINITION_PATHNAME: page\n    });\n    if ((0, _utils1.isInstrumentationHookFile)(page)) {\n        // When we're building the instrumentation page (only when the\n        // instrumentation file conflicts with a page also labeled\n        // /instrumentation) hoist the `register` method.\n        file += '\\nexport const register = hoist(userland, \"register\")';\n    }\n    return file;\n};\nconst loadPagesAPI = async ({ page, absolutePagePath, preferredRegion, middlewareConfigBase64 }, buildInfo)=>{\n    const middlewareConfig = (0, _utils.decodeFromBase64)(middlewareConfigBase64);\n    // Attach build info to the module.\n    buildInfo.route = {\n        page,\n        absolutePagePath,\n        preferredRegion,\n        middlewareConfig\n    };\n    return await (0, _loadentrypoint.loadEntrypoint)('pages-api', {\n        VAR_USERLAND: absolutePagePath,\n        VAR_DEFINITION_PAGE: (0, _normalizepagepath.normalizePagePath)(page),\n        VAR_DEFINITION_PATHNAME: page\n    });\n};\n/**\n * Handles the `next-route-loader` options.\n * @returns the loader definition function\n */ const loader = async function() {\n    if (!this._module) {\n        throw Object.defineProperty(new Error('Invariant: expected this to reference a module'), \"__NEXT_ERROR_CODE\", {\n            value: \"E383\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const buildInfo = (0, _getmodulebuildinfo.getModuleBuildInfo)(this._module);\n    const opts = this.getOptions();\n    switch(opts.kind){\n        case _routekind.RouteKind.PAGES:\n            {\n                return await loadPages(opts, buildInfo);\n            }\n        case _routekind.RouteKind.PAGES_API:\n            {\n                return await loadPagesAPI(opts, buildInfo);\n            }\n        default:\n            {\n                throw Object.defineProperty(new Error('Invariant: Unexpected route kind'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E453\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n    }\n};\nconst _default = loader;\n\n//# sourceMappingURL=index.js.map"
        }
    ]
}
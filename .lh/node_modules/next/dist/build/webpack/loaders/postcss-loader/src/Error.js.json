{
    "sourceFile": "node_modules/next/dist/build/webpack/loaders/postcss-loader/src/Error.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892669749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * **PostCSS Syntax Error**\n *\n * Loader wrapper for postcss syntax errors\n *\n * @class SyntaxError\n * @extends Error\n *\n * @param {Object} err CssSyntaxError\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return PostCSSSyntaxError;\n    }\n});\nclass PostCSSSyntaxError extends Error {\n    constructor(error){\n        super(error);\n        const { line, column, reason, plugin, file } = error;\n        this.name = 'SyntaxError';\n        this.message = `${this.name}\\n\\n`;\n        if (typeof line !== 'undefined') {\n            this.message += `(${line}:${column}) `;\n        }\n        this.message += plugin ? `${plugin}: ` : '';\n        this.message += file ? `${file} ` : '<css input> ';\n        this.message += reason;\n        const code = error.showSourceCode();\n        if (code) {\n            this.message += `\\n\\n${code}\\n`;\n        }\n        this.stack = false;\n    }\n}\n\n//# sourceMappingURL=Error.js.map"
        }
    ]
}
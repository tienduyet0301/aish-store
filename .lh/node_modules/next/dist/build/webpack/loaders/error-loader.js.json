{
    "sourceFile": "node_modules/next/dist/build/webpack/loaders/error-loader.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892665989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nconst _picocolors = require(\"../../../lib/picocolors\");\nconst _path = /*#__PURE__*/ _interop_require_default(require(\"path\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst ErrorLoader = function() {\n    var _this__module_issuer, _this__module, _this__compiler;\n    // @ts-ignore exists\n    const options = this.getOptions() || {};\n    const { reason = 'An unknown error has occurred' } = options;\n    // @ts-expect-error\n    const resource = ((_this__module = this._module) == null ? void 0 : (_this__module_issuer = _this__module.issuer) == null ? void 0 : _this__module_issuer.resource) ?? null;\n    const context = this.rootContext ?? ((_this__compiler = this._compiler) == null ? void 0 : _this__compiler.context);\n    const issuer = resource ? context ? _path.default.relative(context, resource) : resource : null;\n    const err = Object.defineProperty(new Error(reason + (issuer ? `\\nLocation: ${(0, _picocolors.cyan)(issuer)}` : '')), \"__NEXT_ERROR_CODE\", {\n        value: \"E339\",\n        enumerable: false,\n        configurable: true\n    });\n    this.emitError(err);\n};\nconst _default = ErrorLoader;\n\n//# sourceMappingURL=error-loader.js.map"
        }
    ]
}
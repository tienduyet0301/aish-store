{
    "sourceFile": "node_modules/next/dist/build/webpack/loaders/get-module-build-info.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892666059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type { MiddlewareConfig, MiddlewareMatcher, RSCModuleType } from '../../analysis/get-page-static-info';\nimport type { webpack } from 'next/dist/compiled/webpack/webpack';\nexport type ModuleBuildInfo = {\n    nextEdgeMiddleware?: EdgeMiddlewareMeta;\n    nextEdgeApiFunction?: EdgeMiddlewareMeta;\n    nextEdgeSSR?: EdgeSSRMeta;\n    nextWasmMiddlewareBinding?: AssetBinding;\n    nextAssetMiddlewareBinding?: AssetBinding;\n    usingIndirectEval?: boolean | Set<string>;\n    route?: RouteMeta;\n    importLocByPath?: Map<string, any>;\n    rootDir?: string;\n    rsc?: RSCMeta;\n};\n/**\n * A getter for module build info that casts to the type it should have.\n * We also expose here types to make easier to use it.\n */\nexport declare function getModuleBuildInfo(webpackModule: webpack.Module): ModuleBuildInfo;\nexport interface RSCMeta {\n    type: RSCModuleType;\n    actionIds?: Record<string, string>;\n    clientRefs?: string[];\n    clientEntryType?: 'cjs' | 'auto';\n    isClientRef?: boolean;\n    requests?: string[];\n}\nexport interface RouteMeta {\n    page: string;\n    absolutePagePath: string;\n    preferredRegion: string | string[] | undefined;\n    middlewareConfig: MiddlewareConfig;\n    relatedModules?: string[];\n}\nexport interface EdgeMiddlewareMeta {\n    page: string;\n    matchers?: MiddlewareMatcher[];\n}\nexport interface EdgeSSRMeta {\n    isServerComponent: boolean;\n    isAppDir?: boolean;\n    page: string;\n}\nexport interface AssetBinding {\n    filePath: string;\n    name: string;\n}\n"
        }
    ]
}
{
    "sourceFile": "node_modules/next/dist/build/webpack/loaders/next-app-loader/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892666973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import type webpack from 'next/dist/compiled/webpack/webpack';\nimport { type ValueOf } from '../../../../shared/lib/constants';\nimport type { ModuleTuple, CollectedMetadata } from '../metadata/types';\nimport type { NextConfig } from '../../../../server/config-shared';\nimport type { PageExtensions } from '../../../page-extensions-type';\nexport type AppLoaderOptions = {\n    name: string;\n    page: string;\n    pagePath: string;\n    appDir: string;\n    appPaths: readonly string[] | null;\n    preferredRegion: string | string[] | undefined;\n    pageExtensions: PageExtensions;\n    assetPrefix: string;\n    rootDir?: string;\n    tsconfigPath?: string;\n    isDev?: true;\n    basePath: string;\n    nextConfigOutput?: NextConfig['output'];\n    nextConfigExperimentalUseEarlyImport?: true;\n    middlewareConfig: string;\n};\ntype AppLoader = webpack.LoaderDefinitionFunction<AppLoaderOptions>;\ndeclare const FILE_TYPES: {\n    readonly 'not-found': \"not-found\";\n    readonly forbidden: \"forbidden\";\n    readonly unauthorized: \"unauthorized\";\n    readonly layout: \"layout\";\n    readonly template: \"template\";\n    readonly error: \"error\";\n    readonly loading: \"loading\";\n    readonly 'global-error': \"global-error\";\n};\nexport type MetadataResolver = (dir: string, filename: string, extensions: readonly string[]) => Promise<string | undefined>;\nexport type AppDirModules = {\n    readonly [moduleKey in ValueOf<typeof FILE_TYPES>]?: ModuleTuple;\n} & {\n    readonly page?: ModuleTuple;\n} & {\n    readonly metadata?: CollectedMetadata;\n} & {\n    readonly defaultPage?: ModuleTuple;\n};\ndeclare const nextAppLoader: AppLoader;\nexport default nextAppLoader;\n"
        }
    ]
}
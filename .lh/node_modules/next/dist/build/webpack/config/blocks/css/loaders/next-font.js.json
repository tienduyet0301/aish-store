{
    "sourceFile": "node_modules/next/dist/build/webpack/config/blocks/css/loaders/next-font.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892664464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getNextFontLoader\", {\n    enumerable: true,\n    get: function() {\n        return getNextFontLoader;\n    }\n});\nconst _client = require(\"./client\");\nconst _fileresolve = require(\"./file-resolve\");\nfunction getNextFontLoader(ctx, postcss, fontLoaderPath) {\n    const loaders = [];\n    if (ctx.isClient) {\n        // Add appropriate development mode or production mode style\n        // loader\n        loaders.push((0, _client.getClientStyleLoader)({\n            hasAppDir: ctx.hasAppDir,\n            isDevelopment: ctx.isDevelopment,\n            assetPrefix: ctx.assetPrefix\n        }));\n    }\n    loaders.push({\n        loader: require.resolve('../../../../loaders/css-loader/src'),\n        options: {\n            postcss,\n            importLoaders: 1,\n            // Use CJS mode for backwards compatibility:\n            esModule: false,\n            url: (url, resourcePath)=>(0, _fileresolve.cssFileResolve)(url, resourcePath, ctx.experimental.urlImports),\n            import: (url, _, resourcePath)=>(0, _fileresolve.cssFileResolve)(url, resourcePath, ctx.experimental.urlImports),\n            modules: {\n                // Do not transform class names (CJS mode backwards compatibility):\n                exportLocalsConvention: 'asIs',\n                // Server-side (Node.js) rendering support:\n                exportOnlyLocals: ctx.isServer,\n                // Disallow global style exports so we can code-split CSS and\n                // not worry about loading order.\n                mode: 'pure',\n                getLocalIdent: (_context, _localIdentName, exportName, _options, meta)=>{\n                    // hash from next-font-loader\n                    return `__${exportName}_${meta.fontFamilyHash}`;\n                }\n            },\n            fontLoader: true\n        }\n    });\n    loaders.push({\n        loader: 'next-font-loader',\n        options: {\n            isDev: ctx.isDevelopment,\n            isServer: ctx.isServer,\n            assetPrefix: ctx.assetPrefix,\n            fontLoaderPath,\n            postcss\n        }\n    });\n    return loaders;\n}\n\n//# sourceMappingURL=next-font.js.map"
        }
    ]
}
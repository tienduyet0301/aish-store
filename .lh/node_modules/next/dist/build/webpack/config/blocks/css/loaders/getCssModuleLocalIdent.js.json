{
    "sourceFile": "node_modules/next/dist/build/webpack/config/blocks/css/loaders/getCssModuleLocalIdent.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892664143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getCssModuleLocalIdent\", {\n    enumerable: true,\n    get: function() {\n        return getCssModuleLocalIdent;\n    }\n});\nconst _loaderutils3 = /*#__PURE__*/ _interop_require_default(require(\"next/dist/compiled/loader-utils3\"));\nconst _path = /*#__PURE__*/ _interop_require_default(require(\"path\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst regexLikeIndexModule = /(?<!pages[\\\\/])index\\.module\\.(scss|sass|css)$/;\nfunction getCssModuleLocalIdent(context, _, exportName, options) {\n    const relativePath = _path.default.relative(context.rootContext, context.resourcePath).replace(/\\\\+/g, '/');\n    // Generate a more meaningful name (parent folder) when the user names the\n    // file `index.module.css`.\n    const fileNameOrFolder = regexLikeIndexModule.test(relativePath) ? '[folder]' : '[name]';\n    // Generate a hash to make the class name unique.\n    const hash = _loaderutils3.default.getHashDigest(Buffer.from(`filePath:${relativePath}#className:${exportName}`), 'sha1', 'base64', 5);\n    // Have webpack interpolate the `[folder]` or `[name]` to its real value.\n    return _loaderutils3.default.interpolateName(context, fileNameOrFolder + '_' + exportName + '__' + hash, options).replace(// Webpack name interpolation returns `about.module_root__2oFM9` for\n    // `.root {}` inside a file named `about.module.css`. Let's simplify\n    // this.\n    /\\.module_/, '_')// Replace invalid symbols with underscores instead of escaping\n    // https://mathiasbynens.be/notes/css-escapes#identifiers-strings\n    .replace(/[^a-zA-Z0-9-_]/g, '_')// \"they cannot start with a digit, two hyphens, or a hyphen followed by a digit [sic]\"\n    // https://www.w3.org/TR/CSS21/syndata.html#characters\n    .replace(/^(\\d|--|-\\d)/, '__$1');\n}\n\n//# sourceMappingURL=getCssModuleLocalIdent.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/@noble/hashes/hmac.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891896876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { Hash, type CHash, type Input } from './utils.ts';\nexport declare class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n    oHash: T;\n    iHash: T;\n    blockLen: number;\n    outputLen: number;\n    private finished;\n    private destroyed;\n    constructor(hash: CHash, _key: Input);\n    update(buf: Input): this;\n    digestInto(out: Uint8Array): void;\n    digest(): Uint8Array;\n    _cloneInto(to?: HMAC<T>): HMAC<T>;\n    clone(): HMAC<T>;\n    destroy(): void;\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport declare const hmac: {\n    (hash: CHash, key: Input, message: Input): Uint8Array;\n    create(hash: CHash, key: Input): HMAC<any>;\n};\n//# sourceMappingURL=hmac.d.ts.map"
        }
    ]
}
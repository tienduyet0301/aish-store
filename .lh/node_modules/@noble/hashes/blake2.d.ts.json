{
    "sourceFile": "node_modules/@noble/hashes/blake2.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891892045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { Hash, type CHashO, type Input } from './utils.ts';\n/** Blake hash options. dkLen is output length. key is used in MAC mode. salt is used in KDF mode. */\nexport type Blake2Opts = {\n    dkLen?: number;\n    key?: Input;\n    salt?: Input;\n    personalization?: Input;\n};\n/** Class, from which others are subclassed. */\nexport declare abstract class BLAKE2<T extends BLAKE2<T>> extends Hash<T> {\n    protected abstract compress(msg: Uint32Array, offset: number, isLast: boolean): void;\n    protected abstract get(): number[];\n    protected abstract set(...args: number[]): void;\n    abstract destroy(): void;\n    protected buffer: Uint8Array;\n    protected buffer32: Uint32Array;\n    protected finished: boolean;\n    protected destroyed: boolean;\n    protected length: number;\n    protected pos: number;\n    readonly blockLen: number;\n    readonly outputLen: number;\n    constructor(blockLen: number, outputLen: number);\n    update(data: Input): this;\n    digestInto(out: Uint8Array): void;\n    digest(): Uint8Array;\n    _cloneInto(to?: T): T;\n    clone(): T;\n}\nexport declare class BLAKE2b extends BLAKE2<BLAKE2b> {\n    private v0l;\n    private v0h;\n    private v1l;\n    private v1h;\n    private v2l;\n    private v2h;\n    private v3l;\n    private v3h;\n    private v4l;\n    private v4h;\n    private v5l;\n    private v5h;\n    private v6l;\n    private v6h;\n    private v7l;\n    private v7h;\n    constructor(opts?: Blake2Opts);\n    protected get(): [\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number\n    ];\n    protected set(v0l: number, v0h: number, v1l: number, v1h: number, v2l: number, v2h: number, v3l: number, v3h: number, v4l: number, v4h: number, v5l: number, v5h: number, v6l: number, v6h: number, v7l: number, v7h: number): void;\n    protected compress(msg: Uint32Array, offset: number, isLast: boolean): void;\n    destroy(): void;\n}\n/**\n * Blake2b hash function. 64-bit. 1.5x slower than blake2s in JS.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nexport declare const blake2b: CHashO;\nexport type Num16 = {\n    v0: number;\n    v1: number;\n    v2: number;\n    v3: number;\n    v4: number;\n    v5: number;\n    v6: number;\n    v7: number;\n    v8: number;\n    v9: number;\n    v10: number;\n    v11: number;\n    v12: number;\n    v13: number;\n    v14: number;\n    v15: number;\n};\nexport declare function compress(s: Uint8Array, offset: number, msg: Uint32Array, rounds: number, v0: number, v1: number, v2: number, v3: number, v4: number, v5: number, v6: number, v7: number, v8: number, v9: number, v10: number, v11: number, v12: number, v13: number, v14: number, v15: number): Num16;\nexport declare class BLAKE2s extends BLAKE2<BLAKE2s> {\n    private v0;\n    private v1;\n    private v2;\n    private v3;\n    private v4;\n    private v5;\n    private v6;\n    private v7;\n    constructor(opts?: Blake2Opts);\n    protected get(): [number, number, number, number, number, number, number, number];\n    protected set(v0: number, v1: number, v2: number, v3: number, v4: number, v5: number, v6: number, v7: number): void;\n    protected compress(msg: Uint32Array, offset: number, isLast: boolean): void;\n    destroy(): void;\n}\n/**\n * Blake2s hash function. Focuses on 8-bit to 32-bit platforms. 1.5x faster than blake2b in JS.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nexport declare const blake2s: CHashO;\n//# sourceMappingURL=blake2.d.ts.map"
        }
    ]
}
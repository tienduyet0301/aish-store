{
    "sourceFile": "node_modules/@noble/hashes/argon2.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891891745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { type KDFInput } from './utils.ts';\n/**\n * Argon2 options.\n * * t: time cost, m: mem cost in kb, p: parallelization.\n * * key: optional key. personalization: arbitrary extra data.\n * * dkLen: desired number of output bytes.\n */\nexport type ArgonOpts = {\n    t: number;\n    m: number;\n    p: number;\n    version?: number;\n    key?: KDFInput;\n    personalization?: KDFInput;\n    dkLen?: number;\n    asyncTick?: number;\n    maxmem?: number;\n    onProgress?: (progress: number) => void;\n};\n/** argon2d GPU-resistant version. */\nexport declare const argon2d: (password: KDFInput, salt: KDFInput, opts: ArgonOpts) => Uint8Array;\n/** argon2i side-channel-resistant version. */\nexport declare const argon2i: (password: KDFInput, salt: KDFInput, opts: ArgonOpts) => Uint8Array;\n/** argon2id, combining i+d, the most popular version from RFC 9106 */\nexport declare const argon2id: (password: KDFInput, salt: KDFInput, opts: ArgonOpts) => Uint8Array;\n/** argon2d async GPU-resistant version. */\nexport declare const argon2dAsync: (password: KDFInput, salt: KDFInput, opts: ArgonOpts) => Promise<Uint8Array>;\n/** argon2i async side-channel-resistant version. */\nexport declare const argon2iAsync: (password: KDFInput, salt: KDFInput, opts: ArgonOpts) => Promise<Uint8Array>;\n/** argon2id async, combining i+d, the most popular version from RFC 9106 */\nexport declare const argon2idAsync: (password: KDFInput, salt: KDFInput, opts: ArgonOpts) => Promise<Uint8Array>;\n//# sourceMappingURL=argon2.d.ts.map"
        }
    ]
}
{
    "sourceFile": "node_modules/@noble/hashes/_md.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891899403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { type Input, Hash } from './utils.ts';\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport declare function setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void;\n/** Choice: a ? b : c */\nexport declare function Chi(a: number, b: number, c: number): number;\n/** Majority function, true if any two inputs is true. */\nexport declare function Maj(a: number, b: number, c: number): number;\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport declare abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n    protected abstract process(buf: DataView, offset: number): void;\n    protected abstract get(): number[];\n    protected abstract set(...args: number[]): void;\n    abstract destroy(): void;\n    protected abstract roundClean(): void;\n    readonly blockLen: number;\n    readonly outputLen: number;\n    readonly padOffset: number;\n    readonly isLE: boolean;\n    protected buffer: Uint8Array;\n    protected view: DataView;\n    protected finished: boolean;\n    protected length: number;\n    protected pos: number;\n    protected destroyed: boolean;\n    constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean);\n    update(data: Input): this;\n    digestInto(out: Uint8Array): void;\n    digest(): Uint8Array;\n    _cloneInto(to?: T): T;\n    clone(): T;\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport declare const SHA256_IV: Uint32Array;\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport declare const SHA224_IV: Uint32Array;\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport declare const SHA384_IV: Uint32Array;\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport declare const SHA512_IV: Uint32Array;\n//# sourceMappingURL=_md.d.ts.map"
        }
    ]
}
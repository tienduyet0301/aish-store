{
    "sourceFile": "node_modules/@noble/hashes/sha2.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891897912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { HashMD } from './_md.ts';\nimport { type CHash } from './utils.ts';\nexport declare class SHA256 extends HashMD<SHA256> {\n    protected A: number;\n    protected B: number;\n    protected C: number;\n    protected D: number;\n    protected E: number;\n    protected F: number;\n    protected G: number;\n    protected H: number;\n    constructor(outputLen?: number);\n    protected get(): [number, number, number, number, number, number, number, number];\n    protected set(A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number): void;\n    protected process(view: DataView, offset: number): void;\n    protected roundClean(): void;\n    destroy(): void;\n}\nexport declare class SHA224 extends SHA256 {\n    protected A: number;\n    protected B: number;\n    protected C: number;\n    protected D: number;\n    protected E: number;\n    protected F: number;\n    protected G: number;\n    protected H: number;\n    constructor();\n}\nexport declare class SHA512 extends HashMD<SHA512> {\n    protected Ah: number;\n    protected Al: number;\n    protected Bh: number;\n    protected Bl: number;\n    protected Ch: number;\n    protected Cl: number;\n    protected Dh: number;\n    protected Dl: number;\n    protected Eh: number;\n    protected El: number;\n    protected Fh: number;\n    protected Fl: number;\n    protected Gh: number;\n    protected Gl: number;\n    protected Hh: number;\n    protected Hl: number;\n    constructor(outputLen?: number);\n    protected get(): [\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number,\n        number\n    ];\n    protected set(Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number, Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number): void;\n    protected process(view: DataView, offset: number): void;\n    protected roundClean(): void;\n    destroy(): void;\n}\nexport declare class SHA384 extends SHA512 {\n    protected Ah: number;\n    protected Al: number;\n    protected Bh: number;\n    protected Bl: number;\n    protected Ch: number;\n    protected Cl: number;\n    protected Dh: number;\n    protected Dl: number;\n    protected Eh: number;\n    protected El: number;\n    protected Fh: number;\n    protected Fl: number;\n    protected Gh: number;\n    protected Gl: number;\n    protected Hh: number;\n    protected Hl: number;\n    constructor();\n}\nexport declare class SHA512_224 extends SHA512 {\n    protected Ah: number;\n    protected Al: number;\n    protected Bh: number;\n    protected Bl: number;\n    protected Ch: number;\n    protected Cl: number;\n    protected Dh: number;\n    protected Dl: number;\n    protected Eh: number;\n    protected El: number;\n    protected Fh: number;\n    protected Fl: number;\n    protected Gh: number;\n    protected Gl: number;\n    protected Hh: number;\n    protected Hl: number;\n    constructor();\n}\nexport declare class SHA512_256 extends SHA512 {\n    protected Ah: number;\n    protected Al: number;\n    protected Bh: number;\n    protected Bl: number;\n    protected Ch: number;\n    protected Cl: number;\n    protected Dh: number;\n    protected Dl: number;\n    protected Eh: number;\n    protected El: number;\n    protected Fh: number;\n    protected Fl: number;\n    protected Gh: number;\n    protected Gl: number;\n    protected Hh: number;\n    protected Hl: number;\n    constructor();\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport declare const sha256: CHash;\n/** SHA2-224 hash function from RFC 4634 */\nexport declare const sha224: CHash;\n/** SHA2-512 hash function from RFC 4634. */\nexport declare const sha512: CHash;\n/** SHA2-384 hash function from RFC 4634. */\nexport declare const sha384: CHash;\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport declare const sha512_256: CHash;\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport declare const sha512_224: CHash;\n//# sourceMappingURL=sha2.d.ts.map"
        }
    ]
}
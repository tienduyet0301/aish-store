{
    "sourceFile": "node_modules/@rushstack/eslint-patch/lib/custom-config-package-names.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891923855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// This is a workaround for ESLint's requirement to consume shareable configurations from package names prefixed\n// with \"eslint-config\".\n//\n// To remove this requirement, add this line to the top of your project's .eslintrc.js file:\n//\n//    require(\"@rushstack/eslint-patch/custom-config-package-names\");\n//\nconst _patch_base_1 = require(\"./_patch-base\");\nif (!_patch_base_1.configArrayFactory.__loadExtendedShareableConfigPatched) {\n    _patch_base_1.configArrayFactory.__loadExtendedShareableConfigPatched = true;\n    // eslint-disable-next-line @typescript-eslint/typedef\n    const originalLoadExtendedShareableConfig = _patch_base_1.configArrayFactory.prototype._loadExtendedShareableConfig;\n    // Common between ESLint versions\n    // https://github.com/eslint/eslintrc/blob/242d569020dfe4f561e4503787b99ec016337457/lib/config-array-factory.js#L910\n    _patch_base_1.configArrayFactory.prototype._loadExtendedShareableConfig = function (extendName) {\n        const originalResolve = _patch_base_1.ModuleResolver.resolve;\n        try {\n            _patch_base_1.ModuleResolver.resolve = function (moduleName, relativeToPath) {\n                try {\n                    return originalResolve.call(this, moduleName, relativeToPath);\n                }\n                catch (e) {\n                    // Only change the name we resolve if we cannot find the normalized module, since it is\n                    // valid to rely on the normalized package name. Use the originally provided module path\n                    // instead of the normalized module path.\n                    if ((e === null || e === void 0 ? void 0 : e.code) === 'MODULE_NOT_FOUND' &&\n                        moduleName !== extendName &&\n                        moduleName === _patch_base_1.Naming.normalizePackageName(extendName, 'eslint-config')) {\n                        return originalResolve.call(this, extendName, relativeToPath);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            };\n            return originalLoadExtendedShareableConfig.apply(this, arguments);\n        }\n        finally {\n            _patch_base_1.ModuleResolver.resolve = originalResolve;\n        }\n    };\n}\n//# sourceMappingURL=custom-config-package-names.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/@rushstack/eslint-patch/lib/eslint-bulk-suppressions/cli/start.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891925134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prune_1 = require(\"./prune\");\nconst suppress_1 = require(\"./suppress\");\nconst is_correct_cwd_1 = require(\"./utils/is-correct-cwd\");\nconst print_help_1 = require(\"./utils/print-help\");\nif (process.argv.includes('-h') || process.argv.includes('-H') || process.argv.includes('--help')) {\n    (0, print_help_1.printHelp)();\n    process.exit(0);\n}\nif (process.argv.length < 3) {\n    (0, print_help_1.printHelp)();\n    process.exit(1);\n}\nif (!(0, is_correct_cwd_1.isCorrectCwd)(process.cwd())) {\n    console.error('@rushstack/eslint-bulk: Please call this command from the directory that contains .eslintrc.js or .eslintrc.cjs');\n    process.exit(1);\n}\nconst subcommand = process.argv[2];\nlet processPromise;\nswitch (subcommand) {\n    case 'suppress': {\n        processPromise = (0, suppress_1.suppressAsync)();\n        break;\n    }\n    case 'prune': {\n        processPromise = (0, prune_1.pruneAsync)();\n        break;\n    }\n    default: {\n        console.error('@rushstack/eslint-bulk: Unknown subcommand: ' + subcommand);\n        process.exit(1);\n    }\n}\nprocessPromise.catch((e) => {\n    if (e instanceof Error) {\n        console.error(e.message);\n        process.exit(1);\n    }\n    throw e;\n});\n//# sourceMappingURL=start.js.map"
        }
    ]
}
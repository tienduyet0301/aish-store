{
    "sourceFile": "node_modules/@rushstack/eslint-patch/lib/eslint-bulk-suppressions/cli/suppress.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891925415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.suppressAsync = void 0;\nconst print_help_1 = require(\"./utils/print-help\");\nconst runEslint_1 = require(\"./runEslint\");\nconst constants_1 = require(\"../constants\");\nasync function suppressAsync() {\n    const args = process.argv.slice(3);\n    if (args.includes('--help') || args.includes('-h')) {\n        (0, print_help_1.printSuppressHelp)();\n        process.exit(0);\n    }\n    // Use reduce to create an object with all the parsed arguments\n    const parsedArgs = args.reduce((acc, arg, index, arr) => {\n        if (arg === '--rule') {\n            // continue because next arg should be the rule\n        }\n        else if (index > 0 && arr[index - 1] === '--rule' && arr[index + 1]) {\n            acc.rules.push(arg);\n        }\n        else if (arg === '--all') {\n            acc.all = true;\n        }\n        else if (arg.startsWith('--')) {\n            throw new Error(`@rushstack/eslint-bulk: Unknown option: ${arg}`);\n        }\n        else {\n            acc.files.push(arg);\n        }\n        return acc;\n    }, { rules: [], all: false, files: [] });\n    if (parsedArgs.files.length === 0) {\n        throw new Error('@rushstack/eslint-bulk: Files argument is required. Use glob patterns to specify files or use ' +\n            '`.` to suppress all files for the specified rules.');\n    }\n    if (parsedArgs.rules.length === 0 && !parsedArgs.all) {\n        throw new Error('@rushstack/eslint-bulk: Please specify at least one rule to suppress. Use --all to suppress all rules.');\n    }\n    // Find the index of the last argument that starts with '--'\n    const lastOptionIndex = args\n        .map((arg, i) => (arg.startsWith('--') ? i : -1))\n        .reduce((lastIndex, currentIndex) => Math.max(lastIndex, currentIndex), -1);\n    // Check if options come before files\n    if (parsedArgs.files.some((file) => args.indexOf(file) < lastOptionIndex)) {\n        throw new Error('@rushstack/eslint-bulk: Unable to parse command line arguments. All options should come before files argument.');\n    }\n    if (parsedArgs.all) {\n        process.env[constants_1.ESLINT_BULK_SUPPRESS_ENV_VAR_NAME] = '*';\n    }\n    else if (parsedArgs.rules.length > 0) {\n        process.env[constants_1.ESLINT_BULK_SUPPRESS_ENV_VAR_NAME] = parsedArgs.rules.join(',');\n    }\n    await (0, runEslint_1.runEslintAsync)(parsedArgs.files, 'suppress');\n    if (parsedArgs.all) {\n        console.log(`@rushstack/eslint-bulk: Successfully suppressed all rules for file(s) ${parsedArgs.files}`);\n    }\n    else if (parsedArgs.rules.length > 0) {\n        console.log(`@rushstack/eslint-bulk: Successfully suppressed rules ${parsedArgs.rules} for file(s) ${parsedArgs.files}`);\n    }\n}\nexports.suppressAsync = suppressAsync;\n//# sourceMappingURL=suppress.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/@rushstack/eslint-patch/lib/eslint-bulk-suppressions/path-utils.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891932959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensurePathToGeneratedPatch = exports.getPathToLinterJS = exports.findAndConsoleLogPatchPathCli = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst os_1 = __importDefault(require(\"os\"));\nconst _patch_base_1 = require(\"../_patch-base\");\nconst constants_1 = require(\"./constants\");\nconst package_json_1 = __importDefault(require(\"../../package.json\"));\nconst CURRENT_PACKAGE_VERSION = package_json_1.default.version;\nfunction findAndConsoleLogPatchPathCli() {\n    const eslintBulkDetectEnvVarValue = process.env[constants_1.ESLINT_BULK_DETECT_ENV_VAR_NAME];\n    if (eslintBulkDetectEnvVarValue !== 'true' && eslintBulkDetectEnvVarValue !== '1') {\n        return;\n    }\n    const startDelimiter = 'RUSHSTACK_ESLINT_BULK_START';\n    const endDelimiter = 'RUSHSTACK_ESLINT_BULK_END';\n    const configuration = {\n        /**\n         * `@rushstack/eslint-bulk` should report an error if its package.json is older than this number\n         */\n        minCliVersion: '0.0.0',\n        /**\n         * `@rushstack/eslint-bulk` will invoke this entry point\n         */\n        cliEntryPoint: require.resolve('../exports/eslint-bulk')\n    };\n    console.log(startDelimiter + JSON.stringify(configuration) + endDelimiter);\n}\nexports.findAndConsoleLogPatchPathCli = findAndConsoleLogPatchPathCli;\nfunction getPathToLinterJS() {\n    if (!_patch_base_1.eslintFolder) {\n        throw new Error('Cannot find ESLint installation to patch.');\n    }\n    return `${_patch_base_1.eslintFolder}/lib/linter/linter.js`;\n}\nexports.getPathToLinterJS = getPathToLinterJS;\nfunction ensurePathToGeneratedPatch() {\n    const patchesFolderPath = `${os_1.default.tmpdir()}/rushstack-eslint-bulk-${CURRENT_PACKAGE_VERSION}/patches`;\n    fs_1.default.mkdirSync(patchesFolderPath, { recursive: true });\n    const pathToGeneratedPatch = `${patchesFolderPath}/linter-patch-v${_patch_base_1.eslintPackageVersion}.js`;\n    return pathToGeneratedPatch;\n}\nexports.ensurePathToGeneratedPatch = ensurePathToGeneratedPatch;\n//# sourceMappingURL=path-utils.js.map"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint/lib/cli-engine/load-rules.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892208987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Module for loading rules from files and directories.\n * @author Michael Ficarra\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst fs = require(\"node:fs\"),\n    path = require(\"node:path\");\n\nconst rulesDirCache = {};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Load all rule modules from specified directory.\n * @param {string} relativeRulesDir Path to rules directory, may be relative.\n * @param {string} cwd Current working directory\n * @returns {Object} Loaded rule modules.\n */\nmodule.exports = function(relativeRulesDir, cwd) {\n    const rulesDir = path.resolve(cwd, relativeRulesDir);\n\n    // cache will help performance as IO operation are expensive\n    if (rulesDirCache[rulesDir]) {\n        return rulesDirCache[rulesDir];\n    }\n\n    const rules = Object.create(null);\n\n    fs.readdirSync(rulesDir).forEach(file => {\n        if (path.extname(file) !== \".js\") {\n            return;\n        }\n        rules[file.slice(0, -3)] = require(path.join(rulesDir, file));\n    });\n    rulesDirCache[rulesDir] = rules;\n\n    return rules;\n};\n"
        }
    ]
}
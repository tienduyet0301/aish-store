{
    "sourceFile": "node_modules/eslint/lib/shared/option-utils.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892242047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Utilities to operate on option objects.\n * @author Josh Goldberg\n */\n\n\"use strict\";\n\n/**\n * Determines whether any of input's properties are different\n * from values that already exist in original.\n * @template T\n * @param {Partial<T>} input New value.\n * @param {T} original Original value.\n * @returns {boolean} Whether input includes an explicit difference.\n */\nfunction containsDifferentProperty(input, original) {\n    if (input === original) {\n        return false;\n    }\n\n    if (\n        typeof input !== typeof original ||\n        Array.isArray(input) !== Array.isArray(original)\n    ) {\n        return true;\n    }\n\n    if (Array.isArray(input)) {\n        return (\n            input.length !== original.length ||\n            input.some((value, i) =>\n                containsDifferentProperty(value, original[i]))\n        );\n    }\n\n    if (typeof input === \"object\") {\n        if (input === null || original === null) {\n            return true;\n        }\n\n        const inputKeys = Object.keys(input);\n        const originalKeys = Object.keys(original);\n\n        return inputKeys.length !== originalKeys.length || inputKeys.some(\n            inputKey =>\n                !Object.hasOwn(original, inputKey) ||\n                containsDifferentProperty(input[inputKey], original[inputKey])\n        );\n    }\n\n    return true;\n}\n\nmodule.exports = {\n    containsDifferentProperty\n};\n"
        }
    ]
}
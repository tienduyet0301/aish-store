{
    "sourceFile": "node_modules/eslint/lib/rules/no-octal-escape.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892229199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Rule to flag octal escape sequences in string literals.\n * @author Ian Christian Myers\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow octal escape sequences in string literals\",\n            recommended: false,\n            url: \"https://eslint.org/docs/latest/rules/no-octal-escape\"\n        },\n\n        schema: [],\n\n        messages: {\n            octalEscapeSequence: \"Don't use octal: '\\\\{{sequence}}'. Use '\\\\u....' instead.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n\n            Literal(node) {\n                if (typeof node.value !== \"string\") {\n                    return;\n                }\n\n                // \\0 represents a valid NULL character if it isn't followed by a digit.\n                const match = node.raw.match(\n                    /^(?:[^\\\\]|\\\\.)*?\\\\([0-3][0-7]{1,2}|[4-7][0-7]|0(?=[89])|[1-7])/su\n                );\n\n                if (match) {\n                    context.report({\n                        node,\n                        messageId: \"octalEscapeSequence\",\n                        data: { sequence: match[1] }\n                    });\n                }\n            }\n\n        };\n\n    }\n};\n"
        }
    ]
}
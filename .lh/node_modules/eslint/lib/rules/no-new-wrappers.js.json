{
    "sourceFile": "node_modules/eslint/lib/rules/no-new-wrappers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892228923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Rule to flag when using constructor for wrapper objects\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst { getVariableByName } = require(\"./utils/ast-utils\");\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow `new` operators with the `String`, `Number`, and `Boolean` objects\",\n            recommended: false,\n            url: \"https://eslint.org/docs/latest/rules/no-new-wrappers\"\n        },\n\n        schema: [],\n\n        messages: {\n            noConstructor: \"Do not use {{fn}} as a constructor.\"\n        }\n    },\n\n    create(context) {\n        const { sourceCode } = context;\n\n        return {\n\n            NewExpression(node) {\n                const wrapperObjects = [\"String\", \"Number\", \"Boolean\"];\n                const { name } = node.callee;\n\n                if (wrapperObjects.includes(name)) {\n                    const variable = getVariableByName(sourceCode.getScope(node), name);\n\n                    if (variable && variable.identifiers.length === 0) {\n                        context.report({\n                            node,\n                            messageId: \"noConstructor\",\n                            data: { fn: name }\n                        });\n                    }\n                }\n            }\n        };\n\n    }\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint/lib/rules/no-new-require.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892228811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Rule to disallow use of new operator with the `require` function\n * @author Wil Moore III\n * @deprecated in ESLint v7.0.0\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        deprecated: {\n            message: \"Node.js rules were moved out of ESLint core.\",\n            url: \"https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules\",\n            deprecatedSince: \"7.0.0\",\n            availableUntil: null,\n            replacedBy: [\n                {\n                    message: \"eslint-plugin-n now maintains deprecated Node.js-related rules.\",\n                    plugin: {\n                        name: \"eslint-plugin-n\",\n                        url: \"https://github.com/eslint-community/eslint-plugin-n\"\n                    },\n                    rule: {\n                        name: \"no-new-require\",\n                        url: \"https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-new-require.md\"\n                    }\n                }\n            ]\n        },\n\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow `new` operators with calls to `require`\",\n            recommended: false,\n            url: \"https://eslint.org/docs/latest/rules/no-new-require\"\n        },\n\n        schema: [],\n\n        messages: {\n            noNewRequire: \"Unexpected use of new with require.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n\n            NewExpression(node) {\n                if (node.callee.type === \"Identifier\" && node.callee.name === \"require\") {\n                    context.report({\n                        node,\n                        messageId: \"noNewRequire\"\n                    });\n                }\n            }\n        };\n\n    }\n};\n"
        }
    ]
}
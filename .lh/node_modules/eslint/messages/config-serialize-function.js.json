{
    "sourceFile": "node_modules/eslint/messages/config-serialize-function.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892243220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use strict\";\n\nmodule.exports = function({ key, objectKey }) {\n\n    // special case for parsers\n    const isParser = objectKey === \"parser\" && (key === \"parse\" || key === \"parseForESLint\");\n    const parserMessage = `\n    This typically happens when you're using a custom parser that does not\nprovide a \"meta\" property, which is how ESLint determines the serialized\nrepresentation. Please open an issue with the maintainer of the custom parser\nand share this link:\n\nhttps://eslint.org/docs/latest/extend/custom-parsers#meta-data-in-custom-parsers\n`.trim();\n\n    return `\nThe requested operation requires ESLint to serialize configuration data,\nbut the configuration key \"${objectKey}.${key}\" contains a function value,\nwhich cannot be serialized.\n\n${\n    isParser ? parserMessage : \"Please double-check your configuration for errors.\"\n}\n\nIf you still have problems, please stop by https://eslint.org/chat/help to chat\nwith the team.\n`.trimStart();\n};\n"
        }
    ]
}
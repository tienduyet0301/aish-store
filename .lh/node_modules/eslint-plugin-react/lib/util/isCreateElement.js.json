{
    "sourceFile": "node_modules/eslint-plugin-react/lib/util/isCreateElement.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892279138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nconst pragmaUtil = require('./pragma');\nconst isDestructuredFromPragmaImport = require('./isDestructuredFromPragmaImport');\n\n/**\n * Checks if the node is a createElement call\n * @param {Context} context - The AST node being checked.\n * @param {ASTNode} node - The AST node being checked.\n * @returns {boolean} - True if node is a createElement call object literal, False if not.\n*/\nmodule.exports = function isCreateElement(context, node) {\n  if (!node.callee) {\n    return false;\n  }\n\n  if (\n    node.callee.type === 'MemberExpression'\n    && node.callee.property.name === 'createElement'\n    && node.callee.object\n    && node.callee.object.name === pragmaUtil.getFromContext(context)\n  ) {\n    return true;\n  }\n\n  if (\n    node.callee.name === 'createElement'\n    && isDestructuredFromPragmaImport(context, node, 'createElement')\n  ) {\n    return true;\n  }\n\n  return false;\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-react/lib/util/variable.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892280243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * Search a particular variable in a list\n * @param {Array} variables The variables list.\n * @param {string} name The name of the variable to search.\n * @returns {boolean} True if the variable was found, false if not.\n */\nexport function findVariable(variables: any[], name: string): boolean;\n/**\n * Find a variable by name in the current scope.\n * @param {Object} context The current rule context.\n * @param {ASTNode} node The node to check. Must be an Identifier node.\n * @param  {string} name Name of the variable to look for.\n * @returns {ASTNode|null} Return null if the variable could not be found, ASTNode otherwise.\n */\nexport function findVariableByName(context: any, node: ASTNode, name: string): ASTNode | null;\n/**\n * Find and return a particular variable in a list\n * @param {Array} variables The variables list.\n * @param {string} name The name of the variable to search.\n * @returns {Object} Variable if the variable was found, null if not.\n */\nexport function getVariable(variables: any[], name: string): any;\n/**\n * Searches for a variable in the given scope.\n *\n * @param {Object} context The current rule context.\n * @param {ASTNode} node The node to start looking from.\n * @param {string} name The name of the variable to search.\n * @returns {Object | undefined} Variable if the variable was found, undefined if not.\n */\nexport function getVariableFromContext(context: any, node: ASTNode, name: string): any | undefined;\n/**\n * Returns the latest definition of the variable.\n * @param {Object} variable\n * @returns {Object | undefined} The latest variable definition or undefined.\n */\nexport function getLatestVariableDefinition(variable: any): any | undefined;\n//# sourceMappingURL=variable.d.ts.map"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-react/lib/util/eslint.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892278928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use strict';\n\nfunction getSourceCode(context) {\n  return context.getSourceCode ? context.getSourceCode() : context.sourceCode;\n}\n\nfunction getAncestors(context, node) {\n  const sourceCode = getSourceCode(context);\n  return sourceCode.getAncestors ? sourceCode.getAncestors(node) : context.getAncestors();\n}\n\nfunction getScope(context, node) {\n  const sourceCode = getSourceCode(context);\n  if (sourceCode.getScope) {\n    return sourceCode.getScope(node);\n  }\n\n  return context.getScope();\n}\n\nfunction markVariableAsUsed(name, node, context) {\n  const sourceCode = getSourceCode(context);\n  return sourceCode.markVariableAsUsed\n    ? sourceCode.markVariableAsUsed(name, node)\n    : context.markVariableAsUsed(name);\n}\n\nfunction getFirstTokens(context, node, count) {\n  const sourceCode = getSourceCode(context);\n  return sourceCode.getFirstTokens ? sourceCode.getFirstTokens(node, count) : context.getFirstTokens(node, count);\n}\n\nfunction getText(context) {\n  const sourceCode = getSourceCode(context);\n  const args = Array.prototype.slice.call(arguments, 1);\n  return sourceCode.getText ? sourceCode.getText.apply(sourceCode, args) : context.getSource.apply(context, args);\n}\n\nmodule.exports = {\n  getAncestors,\n  getFirstTokens,\n  getScope,\n  getSourceCode,\n  getText,\n  markVariableAsUsed,\n};\n"
        }
    ]
}
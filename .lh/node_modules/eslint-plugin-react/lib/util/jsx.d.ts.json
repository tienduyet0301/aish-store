{
    "sourceFile": "node_modules/eslint-plugin-react/lib/util/jsx.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892279290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * Checks if a node represents a DOM element according to React.\n * @param {object} node - JSXOpeningElement to check.\n * @returns {boolean} Whether or not the node corresponds to a DOM element.\n */\nexport function isDOMComponent(node: object): boolean;\n/**\n * Test whether a JSXElement is a fragment\n * @param {JSXElement} node\n * @param {string} reactPragma\n * @param {string} fragmentPragma\n * @returns {boolean}\n */\nexport function isFragment(node: JSXElement, reactPragma: string, fragmentPragma: string): boolean;\n/**\n * Checks if a node represents a JSX element or fragment.\n * @param {object} node - node to check.\n * @returns {boolean} Whether or not the node if a JSX element or fragment.\n */\nexport function isJSX(node: object): boolean;\n/**\n * Check if node is like `key={...}` as in `<Foo key={...} />`\n * @param {ASTNode} node\n * @returns {boolean}\n */\nexport function isJSXAttributeKey(node: ASTNode): boolean;\n/**\n * Check if value has only whitespaces\n * @param {unknown} value\n * @returns {boolean}\n */\nexport function isWhiteSpaces(value: unknown): boolean;\n/**\n * Check if the node is returning JSX or null\n *\n * @param {Context} context The context of `ASTNode`.\n * @param {ASTNode} ASTnode The AST node being checked\n * @param {boolean} [strict] If true, in a ternary condition the node must return JSX in both cases\n * @param {boolean} [ignoreNull] If true, null return values will be ignored\n * @returns {boolean} True if the node is returning JSX or null, false if not\n */\nexport function isReturningJSX(context: Context, ASTnode: ASTNode, strict?: boolean, ignoreNull?: boolean): boolean;\n/**\n * Check if the node is returning only null values\n *\n * @param {ASTNode} ASTnode The AST node being checked\n * @param {Context} context The context of `ASTNode`.\n * @returns {boolean} True if the node is returning only null values\n */\nexport function isReturningOnlyNull(ASTnode: ASTNode, context: Context): boolean;\n//# sourceMappingURL=jsx.d.ts.map"
        }
    ]
}
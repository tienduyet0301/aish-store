{
    "sourceFile": "node_modules/eslint-plugin-react/lib/types.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892278052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import eslint from 'eslint';\nimport estree from 'estree';\n\ndeclare global {\n  interface ASTNode extends estree.BaseNode {\n    [_: string]: any; // TODO: fixme\n  }\n  type Scope = eslint.Scope.Scope;\n  type Token = eslint.AST.Token;\n  type Fixer = eslint.Rule.RuleFixer;\n  type JSXAttribute = ASTNode;\n  type JSXElement = ASTNode;\n  type JSXFragment = ASTNode;\n  type JSXOpeningElement = ASTNode;\n  type JSXSpreadAttribute = ASTNode;\n\n  type Context = eslint.Rule.RuleContext;\n\n  type TypeDeclarationBuilder = (annotation: ASTNode, parentName: string, seen: Set<typeof annotation>) => object;\n\n  type TypeDeclarationBuilders = {\n    [k in string]: TypeDeclarationBuilder;\n  };\n\n  type UnionTypeDefinition = {\n    type: 'union' | 'shape';\n    children: unknown[];\n  };\n}\n"
        }
    ]
}
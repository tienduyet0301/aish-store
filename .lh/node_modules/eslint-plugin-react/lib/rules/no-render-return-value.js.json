{
    "sourceFile": "node_modules/eslint-plugin-react/lib/rules/no-render-return-value.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892274782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Prevent usage of the return value of React.render\n * @author Dustan Kasten\n */\n\n'use strict';\n\nconst testReactVersion = require('../util/version').testReactVersion;\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noReturnValue: 'Do not depend on the return value from {{node}}.render',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of the return value of ReactDOM.render',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-render-return-value'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    let calleeObjectName = /^ReactDOM$/;\n    if (testReactVersion(context, '>= 15.0.0')) {\n      calleeObjectName = /^ReactDOM$/;\n    } else if (testReactVersion(context, '^0.14.0')) {\n      calleeObjectName = /^React(DOM)?$/;\n    } else if (testReactVersion(context, '^0.13.0')) {\n      calleeObjectName = /^React$/;\n    }\n\n    return {\n      CallExpression(node) {\n        const callee = node.callee;\n        const parent = node.parent;\n        if (callee.type !== 'MemberExpression') {\n          return;\n        }\n\n        if (\n          callee.object.type !== 'Identifier'\n          || !calleeObjectName.test(callee.object.name)\n          || (!('name' in callee.property) || callee.property.name !== 'render')\n        ) {\n          return;\n        }\n\n        if (\n          parent.type === 'VariableDeclarator'\n          || parent.type === 'Property'\n          || parent.type === 'ReturnStatement'\n          || parent.type === 'ArrowFunctionExpression'\n          || parent.type === 'AssignmentExpression'\n        ) {\n          report(context, messages.noReturnValue, 'noReturnValue', {\n            node: callee,\n            data: {\n              node: callee.object.name,\n            },\n          });\n        }\n      },\n    };\n  },\n};\n"
        }
    ]
}
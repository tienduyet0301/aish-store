{
    "sourceFile": "node_modules/eslint-plugin-react/lib/rules/state-in-constructor.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892277688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce the state initialization style to be either in a constructor or with a class property\n * @author Kanitkorn Sujautra\n */\n\n'use strict';\n\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  stateInitConstructor: 'State initialization should be in a constructor',\n  stateInitClassProp: 'State initialization should be in a class property',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce class component state initialization style',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('state-in-constructor'),\n    },\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const option = context.options[0] || 'always';\n    return {\n      'ClassProperty, PropertyDefinition'(node) {\n        if (\n          option === 'always'\n          && !node.static\n          && node.key.name === 'state'\n          && componentUtil.getParentES6Component(context, node)\n        ) {\n          report(context, messages.stateInitConstructor, 'stateInitConstructor', {\n            node,\n          });\n        }\n      },\n      AssignmentExpression(node) {\n        if (\n          option === 'never'\n          && componentUtil.isStateMemberExpression(node.left)\n          && astUtil.inConstructor(context, node)\n          && componentUtil.getParentES6Component(context, node)\n        ) {\n          report(context, messages.stateInitClassProp, 'stateInitClassProp', {\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n"
        }
    ]
}
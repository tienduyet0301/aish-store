{
    "sourceFile": "node_modules/eslint-plugin-react/lib/rules/no-find-dom-node.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892274229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Prevent usage of findDOMNode\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noFindDOMNode: 'Do not use findDOMNode. It doesnâ€™t work with function components and is deprecated in StrictMode. See https://reactjs.org/docs/react-dom.html#finddomnode',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of findDOMNode',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-find-dom-node'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      CallExpression(node) {\n        const callee = node.callee;\n\n        const isFindDOMNode = ('name' in callee && callee.name === 'findDOMNode') || (\n          'property' in callee\n          && callee.property\n          && 'name' in callee.property\n          && callee.property.name === 'findDOMNode'\n        );\n\n        if (!isFindDOMNode) {\n          return;\n        }\n\n        report(context, messages.noFindDOMNode, 'noFindDOMNode', {\n          node: callee,\n        });\n      },\n    };\n  },\n};\n"
        }
    ]
}
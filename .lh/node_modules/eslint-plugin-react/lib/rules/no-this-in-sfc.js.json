{
    "sourceFile": "node_modules/eslint-plugin-react/lib/rules/no-this-in-sfc.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892275006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Report \"this\" being used in stateless functional components.\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noThisInSFC: 'Stateless functional components should not use `this`',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow `this` from being used in stateless functional components',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-this-in-sfc'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create: Components.detect((context, components, utils) => ({\n    MemberExpression(node) {\n      if (node.object.type === 'ThisExpression') {\n        const component = components.get(utils.getParentStatelessComponent(node));\n        if (!component || (component.node && component.node.parent && component.node.parent.type === 'Property')) {\n          return;\n        }\n        report(context, messages.noThisInSFC, 'noThisInSFC', {\n          node,\n        });\n      }\n    },\n  })),\n};\n"
        }
    ]
}
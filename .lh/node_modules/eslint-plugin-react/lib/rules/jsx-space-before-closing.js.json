{
    "sourceFile": "node_modules/eslint-plugin-react/lib/rules/jsx-space-before-closing.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892272670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Validate spacing before closing bracket in JSX.\n * @author ryym\n * @deprecated\n */\n\n'use strict';\n\nconst getTokenBeforeClosingBracket = require('../util/getTokenBeforeClosingBracket');\nconst docsUrl = require('../util/docsUrl');\nconst log = require('../util/log');\nconst report = require('../util/report');\nconst getSourceCode = require('../util/eslint').getSourceCode;\n\nlet isWarnedForDeprecation = false;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noSpaceBeforeClose: 'A space is forbidden before closing bracket',\n  needSpaceBeforeClose: 'A space is required before closing bracket',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    deprecated: true,\n    replacedBy: ['jsx-tag-spacing'],\n    docs: {\n      description: 'Enforce spacing before closing bracket in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-space-before-closing'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || 'always';\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXOpeningElement(node) {\n        if (!node.selfClosing) {\n          return;\n        }\n\n        const sourceCode = getSourceCode(context);\n\n        const leftToken = getTokenBeforeClosingBracket(node);\n        const closingSlash = /** @type {import('eslint').AST.Token} */ (sourceCode.getTokenAfter(leftToken));\n\n        if (leftToken.loc.end.line !== closingSlash.loc.start.line) {\n          return;\n        }\n\n        if (configuration === 'always' && !sourceCode.isSpaceBetweenTokens(leftToken, closingSlash)) {\n          report(context, messages.needSpaceBeforeClose, 'needSpaceBeforeClose', {\n            loc: closingSlash.loc.start,\n            fix(fixer) {\n              return fixer.insertTextBefore(closingSlash, ' ');\n            },\n          });\n        } else if (configuration === 'never' && sourceCode.isSpaceBetweenTokens(leftToken, closingSlash)) {\n          report(context, messages.noSpaceBeforeClose, 'noSpaceBeforeClose', {\n            loc: closingSlash.loc.start,\n            fix(fixer) {\n              const previousToken = sourceCode.getTokenBefore(closingSlash);\n              return fixer.removeRange([previousToken.range[1], closingSlash.range[0]]);\n            },\n          });\n        }\n      },\n\n      Program() {\n        if (isWarnedForDeprecation) {\n          return;\n        }\n\n        log('The react/jsx-space-before-closing rule is deprecated. '\n            + 'Please use the react/jsx-tag-spacing rule with the '\n            + '\"beforeSelfClosing\" option instead.');\n        isWarnedForDeprecation = true;\n      },\n    };\n  },\n};\n"
        }
    ]
}
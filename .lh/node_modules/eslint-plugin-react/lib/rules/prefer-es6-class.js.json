{
    "sourceFile": "node_modules/eslint-plugin-react/lib/rules/prefer-es6-class.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892275803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Enforce ES5 or ES6 class for React Components\n * @author Dan Hamilton\n */\n\n'use strict';\n\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  shouldUseES6Class: 'Component should use es6 class instead of createClass',\n  shouldUseCreateClass: 'Component should use createClass instead of es6 class',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce ES5 or ES6 class for React Components',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('prefer-es6-class'),\n    },\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || 'always';\n\n    return {\n      ObjectExpression(node) {\n        if (componentUtil.isES5Component(node, context) && configuration === 'always') {\n          report(context, messages.shouldUseES6Class, 'shouldUseES6Class', {\n            node,\n          });\n        }\n      },\n      ClassDeclaration(node) {\n        if (componentUtil.isES6Component(node, context) && configuration === 'never') {\n          report(context, messages.shouldUseCreateClass, 'shouldUseCreateClass', {\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n"
        }
    ]
}
{
    "sourceFile": "node_modules/eslint-plugin-react/lib/rules/jsx-props-no-spread-multi.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892272181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "/**\n * @fileoverview Prevent JSX prop spreading the same expression multiple times\n * @author Simon Schick\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noMultiSpreading: 'Spreading the same expression multiple times is forbidden',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow JSX prop spreading the same identifier multiple times',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('jsx-props-no-spread-multi'),\n    },\n    messages,\n  },\n\n  create(context) {\n    return {\n      JSXOpeningElement(node) {\n        const spreads = node.attributes.filter(\n          (attr) => attr.type === 'JSXSpreadAttribute'\n          && attr.argument.type === 'Identifier'\n        );\n        if (spreads.length < 2) {\n          return;\n        }\n        // We detect duplicate expressions by their identifier\n        const identifierNames = new Set();\n        spreads.forEach((spread) => {\n          if (identifierNames.has(spread.argument.name)) {\n            report(context, messages.noMultiSpreading, 'noMultiSpreading', {\n              node: spread,\n            });\n          }\n          identifierNames.add(spread.argument.name);\n        });\n      },\n    };\n  },\n};\n"
        }
    ]
}
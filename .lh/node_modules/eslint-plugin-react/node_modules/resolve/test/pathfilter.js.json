{
    "sourceFile": "node_modules/eslint-plugin-react/node_modules/resolve/test/pathfilter.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892281650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "var path = require('path');\nvar test = require('tape');\nvar resolve = require('../');\n\nvar resolverDir = path.join(__dirname, '/pathfilter/deep_ref');\n\nvar pathFilterFactory = function (t) {\n    return function (pkg, x, remainder) {\n        t.equal(pkg.version, '1.2.3');\n        t.equal(x, path.join(resolverDir, 'node_modules/deep/ref'));\n        t.equal(remainder, 'ref');\n        return 'alt';\n    };\n};\n\ntest('#62: deep module references and the pathFilter', function (t) {\n    t.test('deep/ref.js', function (st) {\n        st.plan(3);\n\n        resolve('deep/ref', { basedir: resolverDir }, function (err, res, pkg) {\n            if (err) st.fail(err);\n\n            st.equal(pkg.version, '1.2.3');\n            st.equal(res, path.join(resolverDir, 'node_modules/deep/ref.js'));\n        });\n\n        var res = resolve.sync('deep/ref', { basedir: resolverDir });\n        st.equal(res, path.join(resolverDir, 'node_modules/deep/ref.js'));\n    });\n\n    t.test('deep/deeper/ref', function (st) {\n        st.plan(4);\n\n        resolve(\n            'deep/deeper/ref',\n            { basedir: resolverDir },\n            function (err, res, pkg) {\n                if (err) t.fail(err);\n                st.notEqual(pkg, undefined);\n                st.equal(pkg.version, '1.2.3');\n                st.equal(res, path.join(resolverDir, 'node_modules/deep/deeper/ref.js'));\n            }\n        );\n\n        var res = resolve.sync(\n            'deep/deeper/ref',\n            { basedir: resolverDir }\n        );\n        st.equal(res, path.join(resolverDir, 'node_modules/deep/deeper/ref.js'));\n    });\n\n    t.test('deep/ref alt', function (st) {\n        st.plan(8);\n\n        var pathFilter = pathFilterFactory(st);\n\n        var res = resolve.sync(\n            'deep/ref',\n            { basedir: resolverDir, pathFilter: pathFilter }\n        );\n        st.equal(res, path.join(resolverDir, 'node_modules/deep/alt.js'));\n\n        resolve(\n            'deep/ref',\n            { basedir: resolverDir, pathFilter: pathFilter },\n            function (err, res, pkg) {\n                if (err) st.fail(err);\n                st.equal(res, path.join(resolverDir, 'node_modules/deep/alt.js'));\n                st.end();\n            }\n        );\n    });\n\n    t.end();\n});\n"
        }
    ]
}
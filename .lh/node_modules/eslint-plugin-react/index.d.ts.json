{
    "sourceFile": "node_modules/eslint-plugin-react/index.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892265607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "export = plugin;\n/** @typedef {{ plugins: { react: typeof plugin }, rules: import('eslint').Linter.RulesRecord, languageOptions: { parserOptions: import('eslint').Linter.ParserOptions } }} ReactFlatConfig */\n/** @type {{ deprecatedRules: typeof deprecatedRules, rules: typeof allRules, configs: typeof configs & { flat: Record<string, ReactFlatConfig> }}} */\ndeclare const plugin: {\n    deprecatedRules: typeof deprecatedRules;\n    rules: typeof allRules;\n    configs: typeof configs & {\n        flat: Record<string, ReactFlatConfig>;\n    };\n};\ndeclare namespace plugin {\n    export { ReactFlatConfig };\n}\n/** @type {Partial<typeof allRules>} */\ndeclare const deprecatedRules: Partial<typeof allRules>;\ndeclare const allRules: {\n    'boolean-prop-naming': import(\"eslint\").Rule.RuleModule;\n    'button-has-type': import(\"eslint\").Rule.RuleModule;\n    'checked-requires-onchange-or-readonly': import(\"eslint\").Rule.RuleModule;\n    'default-props-match-prop-types': import(\"eslint\").Rule.RuleModule;\n    'destructuring-assignment': import(\"eslint\").Rule.RuleModule;\n    'display-name': import(\"eslint\").Rule.RuleModule;\n    'forbid-component-props': import(\"eslint\").Rule.RuleModule;\n    'forbid-dom-props': import(\"eslint\").Rule.RuleModule;\n    'forbid-elements': import(\"eslint\").Rule.RuleModule;\n    'forbid-foreign-prop-types': import(\"eslint\").Rule.RuleModule;\n    'forbid-prop-types': import(\"eslint\").Rule.RuleModule;\n    'forward-ref-uses-ref': import(\"eslint\").Rule.RuleModule;\n    'function-component-definition': import(\"eslint\").Rule.RuleModule;\n    'hook-use-state': import(\"eslint\").Rule.RuleModule;\n    'iframe-missing-sandbox': import(\"eslint\").Rule.RuleModule;\n    'jsx-boolean-value': import(\"eslint\").Rule.RuleModule;\n    'jsx-child-element-spacing': import(\"eslint\").Rule.RuleModule;\n    'jsx-closing-bracket-location': import(\"eslint\").Rule.RuleModule;\n    'jsx-closing-tag-location': import(\"eslint\").Rule.RuleModule;\n    'jsx-curly-spacing': import(\"eslint\").Rule.RuleModule;\n    'jsx-curly-newline': import(\"eslint\").Rule.RuleModule;\n    'jsx-equals-spacing': import(\"eslint\").Rule.RuleModule;\n    'jsx-filename-extension': import(\"eslint\").Rule.RuleModule;\n    'jsx-first-prop-new-line': import(\"eslint\").Rule.RuleModule;\n    'jsx-handler-names': import(\"eslint\").Rule.RuleModule;\n    'jsx-indent': import(\"eslint\").Rule.RuleModule;\n    'jsx-indent-props': import(\"eslint\").Rule.RuleModule;\n    'jsx-key': import(\"eslint\").Rule.RuleModule;\n    'jsx-max-depth': import(\"eslint\").Rule.RuleModule;\n    'jsx-max-props-per-line': import(\"eslint\").Rule.RuleModule;\n    'jsx-newline': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-bind': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-comment-textnodes': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-constructed-context-values': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-duplicate-props': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-leaked-render': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-literals': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-script-url': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-target-blank': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-useless-fragment': import(\"eslint\").Rule.RuleModule;\n    'jsx-one-expression-per-line': import(\"eslint\").Rule.RuleModule;\n    'jsx-no-undef': import(\"eslint\").Rule.RuleModule;\n    'jsx-curly-brace-presence': import(\"eslint\").Rule.RuleModule;\n    'jsx-pascal-case': import(\"eslint\").Rule.RuleModule;\n    'jsx-fragments': import(\"eslint\").Rule.RuleModule;\n    'jsx-props-no-multi-spaces': import(\"eslint\").Rule.RuleModule;\n    'jsx-props-no-spreading': import(\"eslint\").Rule.RuleModule;\n    'jsx-props-no-spread-multi': import(\"eslint\").Rule.RuleModule;\n    'jsx-sort-default-props': import(\"eslint\").Rule.RuleModule;\n    'jsx-sort-props': import(\"eslint\").Rule.RuleModule;\n    'jsx-space-before-closing': import(\"eslint\").Rule.RuleModule;\n    'jsx-tag-spacing': import(\"eslint\").Rule.RuleModule;\n    'jsx-uses-react': import(\"eslint\").Rule.RuleModule;\n    'jsx-uses-vars': import(\"eslint\").Rule.RuleModule;\n    'jsx-wrap-multilines': import(\"eslint\").Rule.RuleModule;\n    'no-invalid-html-attribute': import(\"eslint\").Rule.RuleModule;\n    'no-access-state-in-setstate': import(\"eslint\").Rule.RuleModule;\n    'no-adjacent-inline-elements': import(\"eslint\").Rule.RuleModule;\n    'no-array-index-key': import(\"eslint\").Rule.RuleModule;\n    'no-arrow-function-lifecycle': import(\"eslint\").Rule.RuleModule;\n    'no-children-prop': import(\"eslint\").Rule.RuleModule;\n    'no-danger': import(\"eslint\").Rule.RuleModule;\n    'no-danger-with-children': import(\"eslint\").Rule.RuleModule;\n    'no-deprecated': import(\"eslint\").Rule.RuleModule;\n    'no-did-mount-set-state': import(\"eslint\").Rule.RuleModule;\n    'no-did-update-set-state': import(\"eslint\").Rule.RuleModule;\n    'no-direct-mutation-state': import(\"eslint\").Rule.RuleModule;\n    'no-find-dom-node': import(\"eslint\").Rule.RuleModule;\n    'no-is-mounted': import(\"eslint\").Rule.RuleModule;\n    'no-multi-comp': import(\"eslint\").Rule.RuleModule;\n    'no-namespace': import(\"eslint\").Rule.RuleModule;\n    'no-set-state': import(\"eslint\").Rule.RuleModule;\n    'no-string-refs': import(\"eslint\").Rule.RuleModule;\n    'no-redundant-should-component-update': import(\"eslint\").Rule.RuleModule;\n    'no-render-return-value': import(\"eslint\").Rule.RuleModule;\n    'no-this-in-sfc': import(\"eslint\").Rule.RuleModule;\n    'no-typos': import(\"eslint\").Rule.RuleModule;\n    'no-unescaped-entities': import(\"eslint\").Rule.RuleModule;\n    'no-unknown-property': import(\"eslint\").Rule.RuleModule;\n    'no-unsafe': import(\"eslint\").Rule.RuleModule;\n    'no-unstable-nested-components': import(\"eslint\").Rule.RuleModule;\n    'no-unused-class-component-methods': import(\"eslint\").Rule.RuleModule;\n    'no-unused-prop-types': import(\"eslint\").Rule.RuleModule;\n    'no-unused-state': import(\"eslint\").Rule.RuleModule;\n    'no-object-type-as-default-prop': import(\"eslint\").Rule.RuleModule;\n    'no-will-update-set-state': import(\"eslint\").Rule.RuleModule;\n    'prefer-es6-class': import(\"eslint\").Rule.RuleModule;\n    'prefer-exact-props': import(\"eslint\").Rule.RuleModule;\n    'prefer-read-only-props': import(\"eslint\").Rule.RuleModule;\n    'prefer-stateless-function': import(\"eslint\").Rule.RuleModule;\n    'prop-types': import(\"eslint\").Rule.RuleModule;\n    'react-in-jsx-scope': import(\"eslint\").Rule.RuleModule;\n    'require-default-props': import(\"eslint\").Rule.RuleModule;\n    'require-optimization': import(\"eslint\").Rule.RuleModule;\n    'require-render-return': import(\"eslint\").Rule.RuleModule;\n    'self-closing-comp': import(\"eslint\").Rule.RuleModule;\n    'sort-comp': import(\"eslint\").Rule.RuleModule;\n    'sort-default-props': import(\"eslint\").Rule.RuleModule;\n    'sort-prop-types': import(\"eslint\").Rule.RuleModule;\n    'state-in-constructor': import(\"eslint\").Rule.RuleModule;\n    'static-property-placement': import(\"eslint\").Rule.RuleModule;\n    'style-prop-object': import(\"eslint\").Rule.RuleModule;\n    'void-dom-elements-no-children': import(\"eslint\").Rule.RuleModule;\n};\ndeclare const configs: {\n    recommended: {\n        plugins: [\"react\"];\n        parserOptions: {\n            ecmaFeatures: {\n                jsx: boolean;\n            };\n        };\n        rules: {\n            'react/display-name': 2;\n            'react/jsx-key': 2;\n            'react/jsx-no-comment-textnodes': 2;\n            'react/jsx-no-duplicate-props': 2;\n            'react/jsx-no-target-blank': 2;\n            'react/jsx-no-undef': 2;\n            'react/jsx-uses-react': 2;\n            'react/jsx-uses-vars': 2;\n            'react/no-children-prop': 2;\n            'react/no-danger-with-children': 2;\n            'react/no-deprecated': 2;\n            'react/no-direct-mutation-state': 2;\n            'react/no-find-dom-node': 2;\n            'react/no-is-mounted': 2;\n            'react/no-render-return-value': 2;\n            'react/no-string-refs': 2;\n            'react/no-unescaped-entities': 2;\n            'react/no-unknown-property': 2;\n            'react/no-unsafe': 0;\n            'react/prop-types': 2;\n            'react/react-in-jsx-scope': 2;\n            'react/require-render-return': 2;\n        };\n    };\n    all: {\n        plugins: [\"react\"];\n        parserOptions: {\n            ecmaFeatures: {\n                jsx: boolean;\n            };\n        };\n        rules: Record<\"boolean-prop-naming\" | \"button-has-type\" | \"checked-requires-onchange-or-readonly\" | \"default-props-match-prop-types\" | \"destructuring-assignment\" | \"display-name\" | \"forbid-component-props\" | \"forbid-dom-props\" | \"forbid-elements\" | \"forbid-foreign-prop-types\" | \"forbid-prop-types\" | \"prop-types\" | \"forward-ref-uses-ref\" | \"function-component-definition\" | \"hook-use-state\" | \"iframe-missing-sandbox\" | \"jsx-boolean-value\" | \"jsx-child-element-spacing\" | \"jsx-closing-bracket-location\" | \"jsx-closing-tag-location\" | \"jsx-curly-spacing\" | \"jsx-curly-newline\" | \"jsx-equals-spacing\" | \"jsx-filename-extension\" | \"jsx-first-prop-new-line\" | \"jsx-handler-names\" | \"jsx-indent\" | \"jsx-indent-props\" | \"jsx-key\" | \"jsx-max-depth\" | \"jsx-max-props-per-line\" | \"jsx-newline\" | \"jsx-no-bind\" | \"jsx-no-comment-textnodes\" | \"jsx-no-constructed-context-values\" | \"jsx-no-duplicate-props\" | \"jsx-no-leaked-render\" | \"jsx-no-literals\" | \"jsx-no-script-url\" | \"jsx-no-target-blank\" | \"jsx-no-useless-fragment\" | \"jsx-one-expression-per-line\" | \"jsx-no-undef\" | \"jsx-curly-brace-presence\" | \"jsx-pascal-case\" | \"jsx-fragments\" | \"jsx-props-no-multi-spaces\" | \"jsx-props-no-spreading\" | \"jsx-props-no-spread-multi\" | \"sort-default-props\" | \"jsx-sort-default-props\" | \"jsx-sort-props\" | \"jsx-tag-spacing\" | \"jsx-space-before-closing\" | \"jsx-uses-react\" | \"jsx-uses-vars\" | \"jsx-wrap-multilines\" | \"no-invalid-html-attribute\" | \"no-access-state-in-setstate\" | \"no-adjacent-inline-elements\" | \"no-array-index-key\" | \"no-arrow-function-lifecycle\" | \"no-children-prop\" | \"no-danger\" | \"no-danger-with-children\" | \"no-deprecated\" | \"no-direct-mutation-state\" | \"no-find-dom-node\" | \"no-is-mounted\" | \"no-multi-comp\" | \"no-namespace\" | \"no-set-state\" | \"no-string-refs\" | \"no-redundant-should-component-update\" | \"no-render-return-value\" | \"no-this-in-sfc\" | \"no-typos\" | \"no-unescaped-entities\" | \"no-unknown-property\" | \"no-unsafe\" | \"no-unstable-nested-components\" | \"no-unused-class-component-methods\" | \"no-unused-prop-types\" | \"no-unused-state\" | \"no-object-type-as-default-prop\" | \"prefer-es6-class\" | \"prefer-exact-props\" | \"prefer-read-only-props\" | \"prefer-stateless-function\" | \"react-in-jsx-scope\" | \"require-default-props\" | \"require-optimization\" | \"require-render-return\" | \"self-closing-comp\" | \"sort-comp\" | \"sort-prop-types\" | \"state-in-constructor\" | \"static-property-placement\" | \"style-prop-object\" | \"void-dom-elements-no-children\" | \"no-did-mount-set-state\" | \"no-did-update-set-state\" | \"no-will-update-set-state\", 2 | \"error\">;\n    };\n    'jsx-runtime': {\n        plugins: [\"react\"];\n        parserOptions: {\n            ecmaFeatures: {\n                jsx: boolean;\n            };\n            jsxPragma: any;\n        };\n        rules: {\n            'react/react-in-jsx-scope': 0;\n            'react/jsx-uses-react': 0;\n        };\n    };\n    flat: Record<string, ReactFlatConfig>;\n};\ntype ReactFlatConfig = {\n    plugins: {\n        react: typeof plugin;\n    };\n    rules: import('eslint').Linter.RulesRecord;\n    languageOptions: {\n        parserOptions: import('eslint').Linter.ParserOptions;\n    };\n};\n//# sourceMappingURL=index.d.ts.map"
        }
    ]
}
{
    "sourceFile": "node_modules/esrecurse/gulpfile.babel.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746892286582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "// Copyright (C) 2014 Yusuke Suzuki <utatane.tea@gmail.com>\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//   * Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//   * Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport gulp from 'gulp';\nimport mocha from 'gulp-mocha';\nimport eslint from 'gulp-eslint';\nimport minimist from 'minimist';\nimport git from 'gulp-git';\nimport bump from 'gulp-bump';\nimport filter from 'gulp-filter';\nimport tagVersion from 'gulp-tag-version';\nimport 'babel-register';\n\nconst SOURCE = [\n    '*.js'\n];\n\nlet ESLINT_OPTION = {\n    parser: 'babel-eslint',\n    parserOptions: {\n        'sourceType': 'module'\n    },\n    rules: {\n        'quotes': 0,\n        'eqeqeq': 0,\n        'no-use-before-define': 0,\n        'no-shadow': 0,\n        'no-new': 0,\n        'no-underscore-dangle': 0,\n        'no-multi-spaces': 0,\n        'no-native-reassign': 0,\n        'no-loop-func': 0\n    },\n    env: {\n        'node': true\n    }\n};\n\ngulp.task('test', function() {\n    let options = minimist(process.argv.slice(2), {\n        string: 'test',\n        default: {\n            test: 'test/*.js'\n        }\n    }\n    );\n    return gulp.src(options.test).pipe(mocha({reporter: 'spec'}));\n});\n\ngulp.task('lint', () =>\n    gulp.src(SOURCE)\n    .pipe(eslint(ESLINT_OPTION))\n    .pipe(eslint.formatEach('stylish', process.stderr))\n    .pipe(eslint.failOnError())\n);\n\nlet inc = importance =>\n    gulp.src(['./package.json'])\n        .pipe(bump({type: importance}))\n        .pipe(gulp.dest('./'))\n        .pipe(git.commit('Bumps package version'))\n        .pipe(filter('package.json'))\n        .pipe(tagVersion({\n            prefix: ''\n        }))\n;\n\ngulp.task('travis', [ 'lint', 'test' ]);\ngulp.task('default', [ 'travis' ]);\n\ngulp.task('patch', [ ], () => inc('patch'));\ngulp.task('minor', [ ], () => inc('minor'));\ngulp.task('major', [ ], () => inc('major'));\n"
        }
    ]
}
{
    "sourceFile": ".next/server/chunks/[root-of-the-server]__0158b4f7._.js.map",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891736792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "{\n  \"version\": 3,\n  \"sources\": [],\n  \"sections\": [\n    {\"offset\": {\"line\": 6, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"debugId\":null}},\n    {\"offset\": {\"line\": 68, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[\"file://C%3A/Users/hongh/aishh/src/lib/mongodb.ts\"],\"sourcesContent\":[\"import { MongoClient } from \\\"mongodb\\\";\\r\\n\\r\\nif (!process.env.MONGODB_URI) {\\r\\n  throw new Error('Invalid/Missing environment variable: \\\"MONGODB_URI\\\"');\\r\\n}\\r\\n\\r\\nconst uri = process.env.MONGODB_URI;\\r\\nconst options = {};\\r\\n\\r\\nlet client;\\r\\nlet clientPromise: Promise<MongoClient>;\\r\\n\\r\\nif (process.env.NODE_ENV === \\\"development\\\") {\\r\\n  // In development mode, use a global variable so that the value\\r\\n  // is preserved across module reloads caused by HMR (Hot Module Replacement).\\r\\n  let globalWithMongo = global as typeof globalThis & {\\r\\n    _mongoClientPromise?: Promise<MongoClient>;\\r\\n  };\\r\\n\\r\\n  if (!globalWithMongo._mongoClientPromise) {\\r\\n    client = new MongoClient(uri, options);\\r\\n    globalWithMongo._mongoClientPromise = client.connect();\\r\\n  }\\r\\n  clientPromise = globalWithMongo._mongoClientPromise;\\r\\n} else {\\r\\n  // In production mode, it's best to not use a global variable.\\r\\n  client = new MongoClient(uri, options);\\r\\n  clientPromise = client.connect();\\r\\n}\\r\\n\\r\\nexport async function connectToDatabase() {\\r\\n  const client = await clientPromise;\\r\\n  const db = client.db(\\\"aishh\\\");\\r\\n\\r\\n  // Update schema if needed\\r\\n  const collections = await db.listCollections().toArray();\\r\\n  const collectionNames = collections.map(col => col.name);\\r\\n\\r\\n  // Create banners collection if it doesn't exist\\r\\n  if (!collectionNames.includes(\\\"banners\\\")) {\\r\\n    await db.createCollection(\\\"banners\\\");\\r\\n    // Create indexes\\r\\n    await db.collection(\\\"banners\\\").createIndex({ order: 1 });\\r\\n    await db.collection(\\\"banners\\\").createIndex({ createdAt: 1 });\\r\\n  }\\r\\n\\r\\n  // Update products schema if needed\\r\\n  if (collectionNames.includes(\\\"products\\\")) {\\r\\n    await db.collection(\\\"products\\\").updateMany(\\r\\n      { sizeGuideImage: { $exists: false } },\\r\\n      { $set: { sizeGuideImage: \\\"\\\" } }\\r\\n    );\\r\\n  }\\r\\n\\r\\n  return { client, db };\\r\\n}\\r\\n\\r\\nexport default clientPromise; \"],\"names\":[],\"mappings\":\";;;;AAAA;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,wCAA4C;IAC1C,+DAA+D;IAC/D,6EAA6E;IAC7E,IAAI,kBAAkB;IAItB,IAAI,CAAC,gBAAgB,mBAAmB,EAAE;QACxC,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,gBAAgB,mBAAmB,GAAG,OAAO,OAAO;IACtD;IACA,gBAAgB,gBAAgB,mBAAmB;AACrD,OAAO;;AAIP;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM;IACrB,MAAM,KAAK,OAAO,EAAE,CAAC;IAErB,0BAA0B;IAC1B,MAAM,cAAc,MAAM,GAAG,eAAe,GAAG,OAAO;IACtD,MAAM,kBAAkB,YAAY,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;IAEvD,gDAAgD;IAChD,IAAI,CAAC,gBAAgB,QAAQ,CAAC,YAAY;QACxC,MAAM,GAAG,gBAAgB,CAAC;QAC1B,iBAAiB;QACjB,MAAM,GAAG,UAAU,CAAC,WAAW,WAAW,CAAC;YAAE,OAAO;QAAE;QACtD,MAAM,GAAG,UAAU,CAAC,WAAW,WAAW,CAAC;YAAE,WAAW;QAAE;IAC5D;IAEA,mCAAmC;IACnC,IAAI,gBAAgB,QAAQ,CAAC,aAAa;QACxC,MAAM,GAAG,UAAU,CAAC,YAAY,UAAU,CACxC;YAAE,gBAAgB;gBAAE,SAAS;YAAM;QAAE,GACrC;YAAE,MAAM;gBAAE,gBAAgB;YAAG;QAAE;IAEnC;IAEA,OAAO;QAAE;QAAQ;IAAG;AACtB;uCAEe\",\"debugId\":null}},\n    {\"offset\": {\"line\": 134, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[\"file://C%3A/Users/hongh/aishh/src/app/api/admin/notifications/route.ts\"],\"sourcesContent\":[\"import { NextResponse } from \\\"next/server\\\";\\nimport { connectToDatabase } from \\\"@/lib/mongodb\\\";\\nimport { ObjectId } from \\\"mongodb\\\";\\n\\n// GET - Lấy thông báo và mã giảm giá\\nexport async function GET() {\\n  try {\\n    console.log(\\\"Fetching notifications from database...\\\");\\n    const { db } = await connectToDatabase();\\n    const notifications = await db.collection(\\\"notifications\\\").findOne({ type: \\\"announcement\\\" });\\n    const promoCodes = await db.collection(\\\"notifications\\\")\\n      .find({ type: \\\"promo\\\" })\\n      .toArray();\\n    \\n    console.log(\\\"Found notifications:\\\", notifications);\\n    console.log(\\\"Found promo codes:\\\", promoCodes);\\n\\n    return NextResponse.json({ \\n      ok: true, \\n      announcement: notifications?.content || \\\"\\\",\\n      isAnnouncementActive: notifications?.isActive || false,\\n      promoCodes: promoCodes.map(code => ({\\n        id: code._id.toString(),\\n        code: code.code,\\n        amount: code.amount,\\n        isActive: code.isActive\\n      }))\\n    });\\n  } catch (error) {\\n    console.error(\\\"Error fetching notifications:\\\", error);\\n    return NextResponse.json(\\n      { ok: false, error: \\\"Failed to fetch notifications\\\" },\\n      { status: 500 }\\n    );\\n  }\\n}\\n\\n// POST - Cập nhật thông báo hoặc mã giảm giá\\nexport async function POST(request: Request) {\\n  try {\\n    const { type, content, code, amount, isActive, action, id } = await request.json();\\n    console.log(\\\"Updating notifications:\\\", { type, content, code, amount, isActive, action, id });\\n    \\n    const { db } = await connectToDatabase();\\n\\n    if (type === \\\"announcement\\\") {\\n      await db.collection(\\\"notifications\\\").updateOne(\\n        { type: \\\"announcement\\\" },\\n        { \\n          $set: { \\n            content,\\n            isActive,\\n            updatedAt: new Date().toISOString()\\n          }\\n        },\\n        { upsert: true }\\n      );\\n      console.log(\\\"Updated announcement successfully\\\");\\n    } else if (type === \\\"promo\\\") {\\n      if (action === \\\"add\\\") {\\n        // Validate input\\n        if (!code || typeof code !== 'string' || code.trim().length === 0) {\\n          return NextResponse.json(\\n            { ok: false, error: \\\"Mã giảm giá không hợp lệ\\\" },\\n            { status: 400 }\\n          );\\n        }\\n\\n        // Convert amount to number and validate\\n        const numericAmount = Number(amount);\\n        if (isNaN(numericAmount) || numericAmount <= 0) {\\n          return NextResponse.json(\\n            { ok: false, error: \\\"Số tiền giảm giá không hợp lệ\\\" },\\n            { status: 400 }\\n          );\\n        }\\n\\n        // Check for duplicate code\\n        const existingCode = await db.collection(\\\"notifications\\\").findOne({\\n          type: \\\"promo\\\",\\n          code: code.trim()\\n        });\\n\\n        if (existingCode) {\\n          return NextResponse.json(\\n            { ok: false, error: \\\"Mã giảm giá đã tồn tại\\\" },\\n            { status: 400 }\\n          );\\n        }\\n\\n        // Add new promo code\\n        await db.collection(\\\"notifications\\\").insertOne({\\n          type: \\\"promo\\\",\\n          code: code.trim(),\\n          amount: numericAmount,\\n          isActive: true,\\n          createdAt: new Date().toISOString(),\\n          updatedAt: new Date().toISOString()\\n        });\\n        console.log(\\\"Added new promo code successfully\\\");\\n      } else if (action === \\\"toggle\\\") {\\n        if (!id) {\\n          return NextResponse.json(\\n            { ok: false, error: \\\"ID không hợp lệ\\\" },\\n            { status: 400 }\\n          );\\n        }\\n\\n        await db.collection(\\\"notifications\\\").updateOne(\\n          { _id: new ObjectId(id) },\\n          { \\n            $set: { \\n              isActive,\\n              updatedAt: new Date().toISOString()\\n            }\\n          }\\n        );\\n        console.log(\\\"Toggled promo code successfully\\\");\\n      } else if (action === \\\"delete\\\") {\\n        if (!id) {\\n          return NextResponse.json(\\n            { ok: false, error: \\\"ID không hợp lệ\\\" },\\n            { status: 400 }\\n          );\\n        }\\n\\n        await db.collection(\\\"notifications\\\").deleteOne({ _id: new ObjectId(id) });\\n        console.log(\\\"Deleted promo code successfully\\\");\\n      }\\n    }\\n\\n    return NextResponse.json({ ok: true });\\n  } catch (error) {\\n    console.error(\\\"Error updating notifications:\\\", error);\\n    return NextResponse.json(\\n      { ok: false, error: \\\"Failed to update notifications\\\" },\\n      { status: 500 }\\n    );\\n  }\\n} \"],\"names\":[],\"mappings\":\"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\",\"debugId\":null}}]\n}"
        }
    ]
}
{
    "sourceFile": ".next/server/chunks/[root-of-the-server]__93e0fc4d._.js.map",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891737160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "{\n  \"version\": 3,\n  \"sources\": [],\n  \"sections\": [\n    {\"offset\": {\"line\": 6, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"debugId\":null}},\n    {\"offset\": {\"line\": 68, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[\"file://C%3A/Users/hongh/aishh/src/lib/mongodb.ts\"],\"sourcesContent\":[\"import { MongoClient } from \\\"mongodb\\\";\\r\\n\\r\\nif (!process.env.MONGODB_URI) {\\r\\n  throw new Error('Invalid/Missing environment variable: \\\"MONGODB_URI\\\"');\\r\\n}\\r\\n\\r\\nconst uri = process.env.MONGODB_URI;\\r\\nconst options = {};\\r\\n\\r\\nlet client;\\r\\nlet clientPromise: Promise<MongoClient>;\\r\\n\\r\\nif (process.env.NODE_ENV === \\\"development\\\") {\\r\\n  // In development mode, use a global variable so that the value\\r\\n  // is preserved across module reloads caused by HMR (Hot Module Replacement).\\r\\n  let globalWithMongo = global as typeof globalThis & {\\r\\n    _mongoClientPromise?: Promise<MongoClient>;\\r\\n  };\\r\\n\\r\\n  if (!globalWithMongo._mongoClientPromise) {\\r\\n    client = new MongoClient(uri, options);\\r\\n    globalWithMongo._mongoClientPromise = client.connect();\\r\\n  }\\r\\n  clientPromise = globalWithMongo._mongoClientPromise;\\r\\n} else {\\r\\n  // In production mode, it's best to not use a global variable.\\r\\n  client = new MongoClient(uri, options);\\r\\n  clientPromise = client.connect();\\r\\n}\\r\\n\\r\\nexport async function connectToDatabase() {\\r\\n  const client = await clientPromise;\\r\\n  const db = client.db(\\\"aishh\\\");\\r\\n\\r\\n  // Update schema if needed\\r\\n  const collections = await db.listCollections().toArray();\\r\\n  const collectionNames = collections.map(col => col.name);\\r\\n\\r\\n  // Create banners collection if it doesn't exist\\r\\n  if (!collectionNames.includes(\\\"banners\\\")) {\\r\\n    await db.createCollection(\\\"banners\\\");\\r\\n    // Create indexes\\r\\n    await db.collection(\\\"banners\\\").createIndex({ order: 1 });\\r\\n    await db.collection(\\\"banners\\\").createIndex({ createdAt: 1 });\\r\\n  }\\r\\n\\r\\n  // Update products schema if needed\\r\\n  if (collectionNames.includes(\\\"products\\\")) {\\r\\n    await db.collection(\\\"products\\\").updateMany(\\r\\n      { sizeGuideImage: { $exists: false } },\\r\\n      { $set: { sizeGuideImage: \\\"\\\" } }\\r\\n    );\\r\\n  }\\r\\n\\r\\n  return { client, db };\\r\\n}\\r\\n\\r\\nexport default clientPromise; \"],\"names\":[],\"mappings\":\";;;;AAAA;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,wCAA4C;IAC1C,+DAA+D;IAC/D,6EAA6E;IAC7E,IAAI,kBAAkB;IAItB,IAAI,CAAC,gBAAgB,mBAAmB,EAAE;QACxC,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,gBAAgB,mBAAmB,GAAG,OAAO,OAAO;IACtD;IACA,gBAAgB,gBAAgB,mBAAmB;AACrD,OAAO;;AAIP;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM;IACrB,MAAM,KAAK,OAAO,EAAE,CAAC;IAErB,0BAA0B;IAC1B,MAAM,cAAc,MAAM,GAAG,eAAe,GAAG,OAAO;IACtD,MAAM,kBAAkB,YAAY,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;IAEvD,gDAAgD;IAChD,IAAI,CAAC,gBAAgB,QAAQ,CAAC,YAAY;QACxC,MAAM,GAAG,gBAAgB,CAAC;QAC1B,iBAAiB;QACjB,MAAM,GAAG,UAAU,CAAC,WAAW,WAAW,CAAC;YAAE,OAAO;QAAE;QACtD,MAAM,GAAG,UAAU,CAAC,WAAW,WAAW,CAAC;YAAE,WAAW;QAAE;IAC5D;IAEA,mCAAmC;IACnC,IAAI,gBAAgB,QAAQ,CAAC,aAAa;QACxC,MAAM,GAAG,UAAU,CAAC,YAAY,UAAU,CACxC;YAAE,gBAAgB;gBAAE,SAAS;YAAM;QAAE,GACrC;YAAE,MAAM;gBAAE,gBAAgB;YAAG;QAAE;IAEnC;IAEA,OAAO;QAAE;QAAQ;IAAG;AACtB;uCAEe\",\"debugId\":null}},\n    {\"offset\": {\"line\": 134, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[\"file://C%3A/Users/hongh/aishh/src/app/api/banners/route.js\"],\"sourcesContent\":[\"import { NextResponse } from \\\"next/server\\\";\\r\\nimport clientPromise from \\\"../../../lib/mongodb\\\";\\r\\nimport { ObjectId } from \\\"mongodb\\\";\\r\\n\\r\\n// GET all banners\\r\\nexport async function GET() {\\r\\n  try {\\r\\n    const client = await clientPromise;\\r\\n    const db = client.db(\\\"aishh\\\");\\r\\n    const banners = await db.collection(\\\"banners\\\").find({}).toArray();\\r\\n    return NextResponse.json(banners);\\r\\n  } catch (error) {\\r\\n    console.error(\\\"Error fetching banners:\\\", error);\\r\\n    return NextResponse.json(\\r\\n      { error: \\\"Failed to fetch banners\\\" },\\r\\n      { status: 500 }\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\n// POST new banner\\r\\nexport async function POST(request) {\\r\\n  try {\\r\\n    const client = await clientPromise;\\r\\n    const db = client.db(\\\"aishh\\\");\\r\\n    const data = await request.json();\\r\\n    \\r\\n    // Validate image URL format\\r\\n    if (!data.imageUrl || !data.imageUrl.startsWith('/uploads/')) {\\r\\n      return NextResponse.json(\\r\\n        { error: \\\"Invalid image URL format. Must start with /uploads/\\\" },\\r\\n        { status: 400 }\\r\\n      );\\r\\n    }\\r\\n    \\r\\n    const banner = {\\r\\n      imageUrl: data.imageUrl,\\r\\n      title: data.title || \\\"\\\",\\r\\n      description: data.description || \\\"\\\",\\r\\n      link: data.link || \\\"\\\",\\r\\n      order: data.order || 0,\\r\\n      isActive: data.isActive !== undefined ? data.isActive : true,\\r\\n      createdAt: new Date(),\\r\\n      updatedAt: new Date()\\r\\n    };\\r\\n    \\r\\n    const result = await db.collection(\\\"banners\\\").insertOne(banner);\\r\\n    \\r\\n    return NextResponse.json({ \\r\\n      success: true,\\r\\n      banner: { ...banner, _id: result.insertedId }\\r\\n    });\\r\\n  } catch (error) {\\r\\n    console.error(\\\"Error creating banner:\\\", error);\\r\\n    return NextResponse.json(\\r\\n      { error: \\\"Failed to create banner\\\" },\\r\\n      { status: 500 }\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\n// PUT update banner\\r\\nexport async function PUT(request) {\\r\\n  try {\\r\\n    const client = await clientPromise;\\r\\n    const db = client.db(\\\"aishh\\\");\\r\\n    const data = await request.json();\\r\\n    \\r\\n    if (!data._id) {\\r\\n      return NextResponse.json(\\r\\n        { error: \\\"Banner ID is required\\\" },\\r\\n        { status: 400 }\\r\\n      );\\r\\n    }\\r\\n\\r\\n    // Validate image URL format if provided\\r\\n    if (data.imageUrl && !data.imageUrl.startsWith('/uploads/')) {\\r\\n      return NextResponse.json(\\r\\n        { error: \\\"Invalid image URL format. Must start with /uploads/\\\" },\\r\\n        { status: 400 }\\r\\n      );\\r\\n    }\\r\\n    \\r\\n    const updateData = {\\r\\n      ...data,\\r\\n      updatedAt: new Date()\\r\\n    };\\r\\n    delete updateData._id; // Remove _id from update data\\r\\n    \\r\\n    const result = await db.collection(\\\"banners\\\").updateOne(\\r\\n      { _id: new ObjectId(data._id) },\\r\\n      { $set: updateData }\\r\\n    );\\r\\n    \\r\\n    if (result.matchedCount === 0) {\\r\\n      return NextResponse.json(\\r\\n        { error: \\\"Banner not found\\\" },\\r\\n        { status: 404 }\\r\\n      );\\r\\n    }\\r\\n    \\r\\n    return NextResponse.json({ \\r\\n      success: true,\\r\\n      message: \\\"Banner updated successfully\\\"\\r\\n    });\\r\\n  } catch (error) {\\r\\n    console.error(\\\"Error updating banner:\\\", error);\\r\\n    return NextResponse.json(\\r\\n      { error: \\\"Failed to update banner\\\" },\\r\\n      { status: 500 }\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\n// DELETE banner\\r\\nexport async function DELETE(request) {\\r\\n  try {\\r\\n    const client = await clientPromise;\\r\\n    const db = client.db(\\\"aishh\\\");\\r\\n    const data = await request.json();\\r\\n    \\r\\n    if (!data._id) {\\r\\n      return NextResponse.json(\\r\\n        { error: \\\"Banner ID is required\\\" },\\r\\n        { status: 400 }\\r\\n      );\\r\\n    }\\r\\n    \\r\\n    const result = await db.collection(\\\"banners\\\").deleteOne({\\r\\n      _id: new ObjectId(data._id)\\r\\n    });\\r\\n    \\r\\n    if (result.deletedCount === 0) {\\r\\n      return NextResponse.json(\\r\\n        { error: \\\"Banner not found\\\" },\\r\\n        { status: 404 }\\r\\n      );\\r\\n    }\\r\\n    \\r\\n    return NextResponse.json({ \\r\\n      success: true,\\r\\n      message: \\\"Banner deleted successfully\\\"\\r\\n    });\\r\\n  } catch (error) {\\r\\n    console.error(\\\"Error deleting banner:\\\", error);\\r\\n    return NextResponse.json(\\r\\n      { error: \\\"Failed to delete banner\\\" },\\r\\n      { status: 500 }\\r\\n    );\\r\\n  }\\r\\n} \"],\"names\":[],\"mappings\":\"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\",\"debugId\":null}}]\n}"
        }
    ]
}
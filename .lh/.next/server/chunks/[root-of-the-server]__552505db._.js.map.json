{
    "sourceFile": ".next/server/chunks/[root-of-the-server]__552505db._.js.map",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891737008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "{\n  \"version\": 3,\n  \"sources\": [],\n  \"sections\": [\n    {\"offset\": {\"line\": 6, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"debugId\":null}},\n    {\"offset\": {\"line\": 68, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[\"file://C%3A/Users/hongh/aishh/src/lib/mongodb.ts\"],\"sourcesContent\":[\"import { MongoClient } from \\\"mongodb\\\";\\r\\n\\r\\nif (!process.env.MONGODB_URI) {\\r\\n  throw new Error('Invalid/Missing environment variable: \\\"MONGODB_URI\\\"');\\r\\n}\\r\\n\\r\\nconst uri = process.env.MONGODB_URI;\\r\\nconst options = {};\\r\\n\\r\\nlet client;\\r\\nlet clientPromise: Promise<MongoClient>;\\r\\n\\r\\nif (process.env.NODE_ENV === \\\"development\\\") {\\r\\n  // In development mode, use a global variable so that the value\\r\\n  // is preserved across module reloads caused by HMR (Hot Module Replacement).\\r\\n  let globalWithMongo = global as typeof globalThis & {\\r\\n    _mongoClientPromise?: Promise<MongoClient>;\\r\\n  };\\r\\n\\r\\n  if (!globalWithMongo._mongoClientPromise) {\\r\\n    client = new MongoClient(uri, options);\\r\\n    globalWithMongo._mongoClientPromise = client.connect();\\r\\n  }\\r\\n  clientPromise = globalWithMongo._mongoClientPromise;\\r\\n} else {\\r\\n  // In production mode, it's best to not use a global variable.\\r\\n  client = new MongoClient(uri, options);\\r\\n  clientPromise = client.connect();\\r\\n}\\r\\n\\r\\nexport async function connectToDatabase() {\\r\\n  const client = await clientPromise;\\r\\n  const db = client.db(\\\"aishh\\\");\\r\\n\\r\\n  // Update schema if needed\\r\\n  const collections = await db.listCollections().toArray();\\r\\n  const collectionNames = collections.map(col => col.name);\\r\\n\\r\\n  // Create banners collection if it doesn't exist\\r\\n  if (!collectionNames.includes(\\\"banners\\\")) {\\r\\n    await db.createCollection(\\\"banners\\\");\\r\\n    // Create indexes\\r\\n    await db.collection(\\\"banners\\\").createIndex({ order: 1 });\\r\\n    await db.collection(\\\"banners\\\").createIndex({ createdAt: 1 });\\r\\n  }\\r\\n\\r\\n  // Update products schema if needed\\r\\n  if (collectionNames.includes(\\\"products\\\")) {\\r\\n    await db.collection(\\\"products\\\").updateMany(\\r\\n      { sizeGuideImage: { $exists: false } },\\r\\n      { $set: { sizeGuideImage: \\\"\\\" } }\\r\\n    );\\r\\n  }\\r\\n\\r\\n  return { client, db };\\r\\n}\\r\\n\\r\\nexport default clientPromise; \"],\"names\":[],\"mappings\":\";;;;AAAA;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,wCAA4C;IAC1C,+DAA+D;IAC/D,6EAA6E;IAC7E,IAAI,kBAAkB;IAItB,IAAI,CAAC,gBAAgB,mBAAmB,EAAE;QACxC,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,gBAAgB,mBAAmB,GAAG,OAAO,OAAO;IACtD;IACA,gBAAgB,gBAAgB,mBAAmB;AACrD,OAAO;;AAIP;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM;IACrB,MAAM,KAAK,OAAO,EAAE,CAAC;IAErB,0BAA0B;IAC1B,MAAM,cAAc,MAAM,GAAG,eAAe,GAAG,OAAO;IACtD,MAAM,kBAAkB,YAAY,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;IAEvD,gDAAgD;IAChD,IAAI,CAAC,gBAAgB,QAAQ,CAAC,YAAY;QACxC,MAAM,GAAG,gBAAgB,CAAC;QAC1B,iBAAiB;QACjB,MAAM,GAAG,UAAU,CAAC,WAAW,WAAW,CAAC;YAAE,OAAO;QAAE;QACtD,MAAM,GAAG,UAAU,CAAC,WAAW,WAAW,CAAC;YAAE,WAAW;QAAE;IAC5D;IAEA,mCAAmC;IACnC,IAAI,gBAAgB,QAAQ,CAAC,aAAa;QACxC,MAAM,GAAG,UAAU,CAAC,YAAY,UAAU,CACxC;YAAE,gBAAgB;gBAAE,SAAS;YAAM;QAAE,GACrC;YAAE,MAAM;gBAAE,gBAAgB;YAAG;QAAE;IAEnC;IAEA,OAAO;QAAE;QAAQ;IAAG;AACtB;uCAEe\",\"debugId\":null}},\n    {\"offset\": {\"line\": 134, \"column\": 0}, \"map\": {\"version\":3,\"sources\":[\"file://C%3A/Users/hongh/aishh/src/app/api/products/%5Bid%5D/route.ts\"],\"sourcesContent\":[\"import { NextResponse } from \\\"next/server\\\";\\r\\nimport clientPromise from \\\"@/lib/mongodb\\\";\\r\\nimport { ObjectId } from \\\"mongodb\\\";\\r\\nimport { revalidatePath } from \\\"next/cache\\\";\\r\\n\\r\\nconst DOMAIN = process.env.NEXT_PUBLIC_DOMAIN || \\\"http://localhost:3000\\\";\\r\\n\\r\\n// GET /api/products/[id] - Lấy thông tin sản phẩm theo ID\\r\\nexport async function GET(\\r\\n  request: Request,\\r\\n  { params }: { params: { id: string } }\\r\\n) {\\r\\n  try {\\r\\n    const client = await clientPromise;\\r\\n    const db = client.db(\\\"aishh\\\");\\r\\n    const { id } = params;\\r\\n\\r\\n    const product = await db\\r\\n      .collection(\\\"products\\\")\\r\\n      .findOne({ _id: new ObjectId(id) });\\r\\n\\r\\n    if (!product) {\\r\\n      return NextResponse.json(\\r\\n        { ok: false, error: \\\"Product not found\\\" },\\r\\n        { status: 404 }\\r\\n      );\\r\\n    }\\r\\n\\r\\n    return NextResponse.json({\\r\\n      ok: true,\\r\\n      product: {\\r\\n        ...product,\\r\\n        _id: product._id.toString(),\\r\\n        images: product.images?.map((url: string) => \\r\\n          url.startsWith('http') ? url : `${DOMAIN}${url}`\\r\\n        ) || []\\r\\n      }\\r\\n    });\\r\\n  } catch (error) {\\r\\n    console.error(\\\"Error fetching product:\\\", error);\\r\\n    return NextResponse.json(\\r\\n      { ok: false, error: \\\"Failed to fetch product\\\" },\\r\\n      { status: 500 }\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\n// PUT /api/products/[id] - Cập nhật sản phẩm theo ID\\r\\nexport async function PUT(\\r\\n  request: Request,\\r\\n  { params }: { params: { id: string } }\\r\\n) {\\r\\n  try {\\r\\n    const client = await clientPromise;\\r\\n    const db = client.db(\\\"aishh\\\");\\r\\n    const product = await request.json();\\r\\n    const { id } = params;\\r\\n\\r\\n    // Chuyển đổi các trường số\\r\\n    const updatedProduct = {\\r\\n      name: product.name,\\r\\n      price: Number(product.price),\\r\\n      description: product.description,\\r\\n      images: product.images,\\r\\n      quantityM: Number(product.quantityM),\\r\\n      quantityL: Number(product.quantityL),\\r\\n      quantityXL: Number(product.quantityXL),\\r\\n      quantityHat: Number(product.quantityHat),\\r\\n      productCode: product.productCode,\\r\\n      details: product.details,\\r\\n      category: product.category,\\r\\n      collection: product.collection,\\r\\n      colors: product.colors || [],\\r\\n      updatedAt: new Date().toISOString()\\r\\n    };\\r\\n\\r\\n    const result = await db\\r\\n      .collection(\\\"products\\\")\\r\\n      .updateOne(\\r\\n        { _id: new ObjectId(id) },\\r\\n        { $set: updatedProduct }\\r\\n      );\\r\\n\\r\\n    if (result.matchedCount === 0) {\\r\\n      return NextResponse.json(\\r\\n        { ok: false, error: \\\"Product not found\\\" },\\r\\n        { status: 404 }\\r\\n      );\\r\\n    }\\r\\n\\r\\n    // Lấy sản phẩm đã cập nhật\\r\\n    const updatedProductData = await db\\r\\n      .collection(\\\"products\\\")\\r\\n      .findOne({ _id: new ObjectId(id) });\\r\\n\\r\\n    if (!updatedProductData) {\\r\\n      return NextResponse.json(\\r\\n        { ok: false, error: \\\"Failed to fetch updated product\\\" },\\r\\n        { status: 500 }\\r\\n      );\\r\\n    }\\r\\n\\r\\n    revalidatePath(\\\"/products\\\");\\r\\n    revalidatePath(\\\"/admin/products\\\");\\r\\n\\r\\n    return NextResponse.json({ \\r\\n      ok: true,\\r\\n      product: {\\r\\n        ...updatedProductData,\\r\\n        _id: updatedProductData._id.toString(),\\r\\n        images: updatedProductData.images?.map((url: string) => \\r\\n          url.startsWith('http') ? url : `${DOMAIN}${url}`\\r\\n        ) || []\\r\\n      }\\r\\n    });\\r\\n  } catch (error) {\\r\\n    console.error(\\\"Error updating product:\\\", error);\\r\\n    return NextResponse.json(\\r\\n      { ok: false, error: \\\"Failed to update product\\\" },\\r\\n      { status: 500 }\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\n// DELETE /api/products/[id] - Xóa sản phẩm theo ID\\r\\nexport async function DELETE(\\r\\n  request: Request,\\r\\n  { params }: { params: { id: string } }\\r\\n) {\\r\\n  try {\\r\\n    const client = await clientPromise;\\r\\n    const db = client.db(\\\"aishh\\\");\\r\\n    const { id } = params;\\r\\n\\r\\n    const result = await db\\r\\n      .collection(\\\"products\\\")\\r\\n      .deleteOne({ _id: new ObjectId(id) });\\r\\n\\r\\n    if (result.deletedCount === 0) {\\r\\n      return NextResponse.json(\\r\\n        { ok: false, error: \\\"Product not found\\\" },\\r\\n        { status: 404 }\\r\\n      );\\r\\n    }\\r\\n\\r\\n    revalidatePath(\\\"/products\\\");\\r\\n    revalidatePath(\\\"/admin/products\\\");\\r\\n\\r\\n    return NextResponse.json({ ok: true });\\r\\n  } catch (error) {\\r\\n    console.error(\\\"Error deleting product:\\\", error);\\r\\n    return NextResponse.json(\\r\\n      { ok: false, error: \\\"Failed to delete product\\\" },\\r\\n      { status: 500 }\\r\\n    );\\r\\n  }\\r\\n} \"],\"names\":[],\"mappings\":\"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\",\"debugId\":null}}]\n}"
        }
    ]
}
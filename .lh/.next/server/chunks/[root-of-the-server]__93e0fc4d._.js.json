{
    "sourceFile": ".next/server/chunks/[root-of-the-server]__93e0fc4d._.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891737139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "module.exports = {\n\n\"[project]/.next-internal/server/app/api/banners/route/actions.js [app-rsc] (server actions loader, ecmascript)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\n}}),\n\"[externals]/next/dist/compiled/next-server/app-route-turbo.runtime.dev.js [external] (next/dist/compiled/next-server/app-route-turbo.runtime.dev.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/compiled/next-server/app-route-turbo.runtime.dev.js\", () => require(\"next/dist/compiled/next-server/app-route-turbo.runtime.dev.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/compiled/@opentelemetry/api [external] (next/dist/compiled/@opentelemetry/api, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/compiled/@opentelemetry/api\", () => require(\"next/dist/compiled/@opentelemetry/api\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/compiled/next-server/app-page-turbo.runtime.dev.js [external] (next/dist/compiled/next-server/app-page-turbo.runtime.dev.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/compiled/next-server/app-page-turbo.runtime.dev.js\", () => require(\"next/dist/compiled/next-server/app-page-turbo.runtime.dev.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/server/app-render/work-unit-async-storage.external.js [external] (next/dist/server/app-render/work-unit-async-storage.external.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/server/app-render/work-unit-async-storage.external.js\", () => require(\"next/dist/server/app-render/work-unit-async-storage.external.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/server/app-render/work-async-storage.external.js [external] (next/dist/server/app-render/work-async-storage.external.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/server/app-render/work-async-storage.external.js\", () => require(\"next/dist/server/app-render/work-async-storage.external.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/server/app-render/after-task-async-storage.external.js [external] (next/dist/server/app-render/after-task-async-storage.external.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/server/app-render/after-task-async-storage.external.js\", () => require(\"next/dist/server/app-render/after-task-async-storage.external.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/mongodb [external] (mongodb, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"mongodb\", () => require(\"mongodb\"));\n\nmodule.exports = mod;\n}}),\n\"[project]/src/lib/mongodb.ts [app-route] (ecmascript)\": ((__turbopack_context__) => {\n\"use strict\";\n\nvar { g: global, __dirname } = __turbopack_context__;\n{\n__turbopack_context__.s({\n    \"connectToDatabase\": (()=>connectToDatabase),\n    \"default\": (()=>__TURBOPACK__default__export__)\n});\nvar __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__ = __turbopack_context__.i(\"[externals]/mongodb [external] (mongodb, cjs)\");\n;\nif (!process.env.MONGODB_URI) {\n    throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"');\n}\nconst uri = process.env.MONGODB_URI;\nconst options = {};\nlet client;\nlet clientPromise;\nif (\"TURBOPACK compile-time truthy\", 1) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    let globalWithMongo = global;\n    if (!globalWithMongo._mongoClientPromise) {\n        client = new __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__[\"MongoClient\"](uri, options);\n        globalWithMongo._mongoClientPromise = client.connect();\n    }\n    clientPromise = globalWithMongo._mongoClientPromise;\n} else {\n    \"TURBOPACK unreachable\";\n}\nasync function connectToDatabase() {\n    const client = await clientPromise;\n    const db = client.db(\"aishh\");\n    // Update schema if needed\n    const collections = await db.listCollections().toArray();\n    const collectionNames = collections.map((col)=>col.name);\n    // Create banners collection if it doesn't exist\n    if (!collectionNames.includes(\"banners\")) {\n        await db.createCollection(\"banners\");\n        // Create indexes\n        await db.collection(\"banners\").createIndex({\n            order: 1\n        });\n        await db.collection(\"banners\").createIndex({\n            createdAt: 1\n        });\n    }\n    // Update products schema if needed\n    if (collectionNames.includes(\"products\")) {\n        await db.collection(\"products\").updateMany({\n            sizeGuideImage: {\n                $exists: false\n            }\n        }, {\n            $set: {\n                sizeGuideImage: \"\"\n            }\n        });\n    }\n    return {\n        client,\n        db\n    };\n}\nconst __TURBOPACK__default__export__ = clientPromise;\n}}),\n\"[project]/src/app/api/banners/route.js [app-route] (ecmascript)\": ((__turbopack_context__) => {\n\"use strict\";\n\nvar { g: global, __dirname } = __turbopack_context__;\n{\n__turbopack_context__.s({\n    \"DELETE\": (()=>DELETE),\n    \"GET\": (()=>GET),\n    \"POST\": (()=>POST),\n    \"PUT\": (()=>PUT)\n});\nvar __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i(\"[project]/node_modules/next/server.js [app-route] (ecmascript)\");\nvar __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$mongodb$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i(\"[project]/src/lib/mongodb.ts [app-route] (ecmascript)\");\nvar __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__ = __turbopack_context__.i(\"[externals]/mongodb [external] (mongodb, cjs)\");\n;\n;\n;\nasync function GET() {\n    try {\n        const client = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$mongodb$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"default\"];\n        const db = client.db(\"aishh\");\n        const banners = await db.collection(\"banners\").find({}).toArray();\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json(banners);\n    } catch (error) {\n        console.error(\"Error fetching banners:\", error);\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            error: \"Failed to fetch banners\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const client = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$mongodb$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"default\"];\n        const db = client.db(\"aishh\");\n        const data = await request.json();\n        // Validate image URL format\n        if (!data.imageUrl || !data.imageUrl.startsWith('/uploads/')) {\n            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                error: \"Invalid image URL format. Must start with /uploads/\"\n            }, {\n                status: 400\n            });\n        }\n        const banner = {\n            imageUrl: data.imageUrl,\n            title: data.title || \"\",\n            description: data.description || \"\",\n            link: data.link || \"\",\n            order: data.order || 0,\n            isActive: data.isActive !== undefined ? data.isActive : true,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        const result = await db.collection(\"banners\").insertOne(banner);\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            success: true,\n            banner: {\n                ...banner,\n                _id: result.insertedId\n            }\n        });\n    } catch (error) {\n        console.error(\"Error creating banner:\", error);\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            error: \"Failed to create banner\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PUT(request) {\n    try {\n        const client = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$mongodb$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"default\"];\n        const db = client.db(\"aishh\");\n        const data = await request.json();\n        if (!data._id) {\n            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                error: \"Banner ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate image URL format if provided\n        if (data.imageUrl && !data.imageUrl.startsWith('/uploads/')) {\n            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                error: \"Invalid image URL format. Must start with /uploads/\"\n            }, {\n                status: 400\n            });\n        }\n        const updateData = {\n            ...data,\n            updatedAt: new Date()\n        };\n        delete updateData._id; // Remove _id from update data\n        const result = await db.collection(\"banners\").updateOne({\n            _id: new __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__[\"ObjectId\"](data._id)\n        }, {\n            $set: updateData\n        });\n        if (result.matchedCount === 0) {\n            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                error: \"Banner not found\"\n            }, {\n                status: 404\n            });\n        }\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            success: true,\n            message: \"Banner updated successfully\"\n        });\n    } catch (error) {\n        console.error(\"Error updating banner:\", error);\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            error: \"Failed to update banner\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function DELETE(request) {\n    try {\n        const client = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$mongodb$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"default\"];\n        const db = client.db(\"aishh\");\n        const data = await request.json();\n        if (!data._id) {\n            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                error: \"Banner ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        const result = await db.collection(\"banners\").deleteOne({\n            _id: new __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__[\"ObjectId\"](data._id)\n        });\n        if (result.deletedCount === 0) {\n            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                error: \"Banner not found\"\n            }, {\n                status: 404\n            });\n        }\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            success: true,\n            message: \"Banner deleted successfully\"\n        });\n    } catch (error) {\n        console.error(\"Error deleting banner:\", error);\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            error: \"Failed to delete banner\"\n        }, {\n            status: 500\n        });\n    }\n}\n}}),\n\n};\n\n//# sourceMappingURL=%5Broot-of-the-server%5D__93e0fc4d._.js.map"
        }
    ]
}
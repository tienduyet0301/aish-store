{
    "sourceFile": ".next/server/chunks/[root-of-the-server]__0158b4f7._.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746891736771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "module.exports = {\n\n\"[project]/.next-internal/server/app/api/admin/notifications/route/actions.js [app-rsc] (server actions loader, ecmascript)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\n}}),\n\"[externals]/next/dist/compiled/next-server/app-route-turbo.runtime.dev.js [external] (next/dist/compiled/next-server/app-route-turbo.runtime.dev.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/compiled/next-server/app-route-turbo.runtime.dev.js\", () => require(\"next/dist/compiled/next-server/app-route-turbo.runtime.dev.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/compiled/@opentelemetry/api [external] (next/dist/compiled/@opentelemetry/api, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/compiled/@opentelemetry/api\", () => require(\"next/dist/compiled/@opentelemetry/api\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/compiled/next-server/app-page-turbo.runtime.dev.js [external] (next/dist/compiled/next-server/app-page-turbo.runtime.dev.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/compiled/next-server/app-page-turbo.runtime.dev.js\", () => require(\"next/dist/compiled/next-server/app-page-turbo.runtime.dev.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/server/app-render/work-unit-async-storage.external.js [external] (next/dist/server/app-render/work-unit-async-storage.external.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/server/app-render/work-unit-async-storage.external.js\", () => require(\"next/dist/server/app-render/work-unit-async-storage.external.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/server/app-render/work-async-storage.external.js [external] (next/dist/server/app-render/work-async-storage.external.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/server/app-render/work-async-storage.external.js\", () => require(\"next/dist/server/app-render/work-async-storage.external.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/next/dist/server/app-render/after-task-async-storage.external.js [external] (next/dist/server/app-render/after-task-async-storage.external.js, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"next/dist/server/app-render/after-task-async-storage.external.js\", () => require(\"next/dist/server/app-render/after-task-async-storage.external.js\"));\n\nmodule.exports = mod;\n}}),\n\"[externals]/mongodb [external] (mongodb, cjs)\": (function(__turbopack_context__) {\n\nvar { g: global, __dirname, m: module, e: exports } = __turbopack_context__;\n{\nconst mod = __turbopack_context__.x(\"mongodb\", () => require(\"mongodb\"));\n\nmodule.exports = mod;\n}}),\n\"[project]/src/lib/mongodb.ts [app-route] (ecmascript)\": ((__turbopack_context__) => {\n\"use strict\";\n\nvar { g: global, __dirname } = __turbopack_context__;\n{\n__turbopack_context__.s({\n    \"connectToDatabase\": (()=>connectToDatabase),\n    \"default\": (()=>__TURBOPACK__default__export__)\n});\nvar __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__ = __turbopack_context__.i(\"[externals]/mongodb [external] (mongodb, cjs)\");\n;\nif (!process.env.MONGODB_URI) {\n    throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"');\n}\nconst uri = process.env.MONGODB_URI;\nconst options = {};\nlet client;\nlet clientPromise;\nif (\"TURBOPACK compile-time truthy\", 1) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    let globalWithMongo = global;\n    if (!globalWithMongo._mongoClientPromise) {\n        client = new __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__[\"MongoClient\"](uri, options);\n        globalWithMongo._mongoClientPromise = client.connect();\n    }\n    clientPromise = globalWithMongo._mongoClientPromise;\n} else {\n    \"TURBOPACK unreachable\";\n}\nasync function connectToDatabase() {\n    const client = await clientPromise;\n    const db = client.db(\"aishh\");\n    // Update schema if needed\n    const collections = await db.listCollections().toArray();\n    const collectionNames = collections.map((col)=>col.name);\n    // Create banners collection if it doesn't exist\n    if (!collectionNames.includes(\"banners\")) {\n        await db.createCollection(\"banners\");\n        // Create indexes\n        await db.collection(\"banners\").createIndex({\n            order: 1\n        });\n        await db.collection(\"banners\").createIndex({\n            createdAt: 1\n        });\n    }\n    // Update products schema if needed\n    if (collectionNames.includes(\"products\")) {\n        await db.collection(\"products\").updateMany({\n            sizeGuideImage: {\n                $exists: false\n            }\n        }, {\n            $set: {\n                sizeGuideImage: \"\"\n            }\n        });\n    }\n    return {\n        client,\n        db\n    };\n}\nconst __TURBOPACK__default__export__ = clientPromise;\n}}),\n\"[project]/src/app/api/admin/notifications/route.ts [app-route] (ecmascript)\": ((__turbopack_context__) => {\n\"use strict\";\n\nvar { g: global, __dirname } = __turbopack_context__;\n{\n__turbopack_context__.s({\n    \"GET\": (()=>GET),\n    \"POST\": (()=>POST)\n});\nvar __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i(\"[project]/node_modules/next/server.js [app-route] (ecmascript)\");\nvar __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$mongodb$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i(\"[project]/src/lib/mongodb.ts [app-route] (ecmascript)\");\nvar __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__ = __turbopack_context__.i(\"[externals]/mongodb [external] (mongodb, cjs)\");\n;\n;\n;\nasync function GET() {\n    try {\n        console.log(\"Fetching notifications from database...\");\n        const { db } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$mongodb$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"connectToDatabase\"])();\n        const notifications = await db.collection(\"notifications\").findOne({\n            type: \"announcement\"\n        });\n        const promoCodes = await db.collection(\"notifications\").find({\n            type: \"promo\"\n        }).toArray();\n        console.log(\"Found notifications:\", notifications);\n        console.log(\"Found promo codes:\", promoCodes);\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            ok: true,\n            announcement: notifications?.content || \"\",\n            isAnnouncementActive: notifications?.isActive || false,\n            promoCodes: promoCodes.map((code)=>({\n                    id: code._id.toString(),\n                    code: code.code,\n                    amount: code.amount,\n                    isActive: code.isActive\n                }))\n        });\n    } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            ok: false,\n            error: \"Failed to fetch notifications\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const { type, content, code, amount, isActive, action, id } = await request.json();\n        console.log(\"Updating notifications:\", {\n            type,\n            content,\n            code,\n            amount,\n            isActive,\n            action,\n            id\n        });\n        const { db } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$mongodb$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"connectToDatabase\"])();\n        if (type === \"announcement\") {\n            await db.collection(\"notifications\").updateOne({\n                type: \"announcement\"\n            }, {\n                $set: {\n                    content,\n                    isActive,\n                    updatedAt: new Date().toISOString()\n                }\n            }, {\n                upsert: true\n            });\n            console.log(\"Updated announcement successfully\");\n        } else if (type === \"promo\") {\n            if (action === \"add\") {\n                // Validate input\n                if (!code || typeof code !== 'string' || code.trim().length === 0) {\n                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                        ok: false,\n                        error: \"Mã giảm giá không hợp lệ\"\n                    }, {\n                        status: 400\n                    });\n                }\n                // Convert amount to number and validate\n                const numericAmount = Number(amount);\n                if (isNaN(numericAmount) || numericAmount <= 0) {\n                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                        ok: false,\n                        error: \"Số tiền giảm giá không hợp lệ\"\n                    }, {\n                        status: 400\n                    });\n                }\n                // Check for duplicate code\n                const existingCode = await db.collection(\"notifications\").findOne({\n                    type: \"promo\",\n                    code: code.trim()\n                });\n                if (existingCode) {\n                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                        ok: false,\n                        error: \"Mã giảm giá đã tồn tại\"\n                    }, {\n                        status: 400\n                    });\n                }\n                // Add new promo code\n                await db.collection(\"notifications\").insertOne({\n                    type: \"promo\",\n                    code: code.trim(),\n                    amount: numericAmount,\n                    isActive: true,\n                    createdAt: new Date().toISOString(),\n                    updatedAt: new Date().toISOString()\n                });\n                console.log(\"Added new promo code successfully\");\n            } else if (action === \"toggle\") {\n                if (!id) {\n                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                        ok: false,\n                        error: \"ID không hợp lệ\"\n                    }, {\n                        status: 400\n                    });\n                }\n                await db.collection(\"notifications\").updateOne({\n                    _id: new __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__[\"ObjectId\"](id)\n                }, {\n                    $set: {\n                        isActive,\n                        updatedAt: new Date().toISOString()\n                    }\n                });\n                console.log(\"Toggled promo code successfully\");\n            } else if (action === \"delete\") {\n                if (!id) {\n                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n                        ok: false,\n                        error: \"ID không hợp lệ\"\n                    }, {\n                        status: 400\n                    });\n                }\n                await db.collection(\"notifications\").deleteOne({\n                    _id: new __TURBOPACK__imported__module__$5b$externals$5d2f$mongodb__$5b$external$5d$__$28$mongodb$2c$__cjs$29$__[\"ObjectId\"](id)\n                });\n                console.log(\"Deleted promo code successfully\");\n            }\n        }\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            ok: true\n        });\n    } catch (error) {\n        console.error(\"Error updating notifications:\", error);\n        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$server$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[\"NextResponse\"].json({\n            ok: false,\n            error: \"Failed to update notifications\"\n        }, {\n            status: 500\n        });\n    }\n}\n}}),\n\n};\n\n//# sourceMappingURL=%5Broot-of-the-server%5D__0158b4f7._.js.map"
        }
    ]
}
{
    "sourceFile": "src/utils/validation.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1747642619376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747721125394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,48 @@\n   const hasLowerCase = /[a-z]/.test(password);\r\n   const hasNumbers = /\\d/.test(password);\r\n   const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n \r\n+  const errors = [];\r\n+  if (!minLength) errors.push(\"Mật khẩu phải có ít nhất 8 ký tự\");\r\n+  if (!hasUpperCase) errors.push(\"Mật khẩu phải có ít nhất một chữ hoa\");\r\n+  if (!hasLowerCase) errors.push(\"Mật khẩu phải có ít nhất một chữ thường\");\r\n+  if (!hasNumbers) errors.push(\"Mật khẩu phải có ít nhất một số\");\r\n+  if (!hasSpecialChar) errors.push(\"Mật khẩu phải có ít nhất một ký tự đặc biệt\");\r\n+\r\n   return {\r\n-    minLength,\r\n-    hasUpperCase,\r\n-    hasLowerCase,\r\n-    hasNumbers,\r\n-    hasSpecialChar,\r\n+    isValid: errors.length === 0,\r\n+    errors,\r\n+    details: {\r\n+      minLength,\r\n+      hasUpperCase,\r\n+      hasLowerCase,\r\n+      hasNumbers,\r\n+      hasSpecialChar,\r\n+    }\r\n   };\r\n+}\r\n+\r\n+export function validateDateOfBirth(day: string, month: string, year: string) {\r\n+  const birthDate = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\r\n+  const today = new Date();\r\n+  const age = today.getFullYear() - birthDate.getFullYear();\r\n+  \r\n+  const errors = [];\r\n+  \r\n+  if (isNaN(birthDate.getTime())) {\r\n+    errors.push(\"Ngày sinh không hợp lệ\");\r\n+  }\r\n+  \r\n+  if (age < 13) {\r\n+    errors.push(\"Bạn phải đủ 13 tuổi để đăng ký\");\r\n+  }\r\n+  \r\n+  if (age > 100) {\r\n+    errors.push(\"Ngày sinh không hợp lệ\");\r\n+  }\r\n+\r\n+  return {\r\n+    isValid: errors.length === 0,\r\n+    errors\r\n+  };\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747727035575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,56 +1,56 @@\n-export function validateEmail(email: string): boolean {\r\n-  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n-  return emailRegex.test(email);\r\n-}\r\n-\r\n-export function validatePassword(password: string) {\r\n-  const minLength = password.length >= 8;\r\n-  const hasUpperCase = /[A-Z]/.test(password);\r\n-  const hasLowerCase = /[a-z]/.test(password);\r\n-  const hasNumbers = /\\d/.test(password);\r\n-  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n-\r\n-  const errors = [];\r\n-  if (!minLength) errors.push(\"Mật khẩu phải có ít nhất 8 ký tự\");\r\n-  if (!hasUpperCase) errors.push(\"Mật khẩu phải có ít nhất một chữ hoa\");\r\n-  if (!hasLowerCase) errors.push(\"Mật khẩu phải có ít nhất một chữ thường\");\r\n-  if (!hasNumbers) errors.push(\"Mật khẩu phải có ít nhất một số\");\r\n-  if (!hasSpecialChar) errors.push(\"Mật khẩu phải có ít nhất một ký tự đặc biệt\");\r\n-\r\n-  return {\r\n-    isValid: errors.length === 0,\r\n-    errors,\r\n-    details: {\r\n-      minLength,\r\n-      hasUpperCase,\r\n-      hasLowerCase,\r\n-      hasNumbers,\r\n-      hasSpecialChar,\r\n-    }\r\n-  };\r\n-}\r\n-\r\n-export function validateDateOfBirth(day: string, month: string, year: string) {\r\n-  const birthDate = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\r\n-  const today = new Date();\r\n-  const age = today.getFullYear() - birthDate.getFullYear();\r\n-  \r\n-  const errors = [];\r\n-  \r\n-  if (isNaN(birthDate.getTime())) {\r\n-    errors.push(\"Ngày sinh không hợp lệ\");\r\n-  }\r\n-  \r\n-  if (age < 13) {\r\n-    errors.push(\"Bạn phải đủ 13 tuổi để đăng ký\");\r\n-  }\r\n-  \r\n-  if (age > 100) {\r\n-    errors.push(\"Ngày sinh không hợp lệ\");\r\n-  }\r\n-\r\n-  return {\r\n-    isValid: errors.length === 0,\r\n-    errors\r\n-  };\r\n+export function validateEmail(email: string): boolean {\n+  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n+  return emailRegex.test(email);\n+}\n+\n+export function validatePassword(password: string) {\n+  const minLength = password.length >= 8;\n+  const hasUpperCase = /[A-Z]/.test(password);\n+  const hasLowerCase = /[a-z]/.test(password);\n+  const hasNumbers = /\\d/.test(password);\n+  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n+\n+  const errors = [];\n+  if (!minLength) errors.push(\"Mật khẩu phải có ít nhất 8 ký tự\");\n+  if (!hasUpperCase) errors.push(\"Mật khẩu phải có ít nhất một chữ hoa\");\n+  if (!hasLowerCase) errors.push(\"Mật khẩu phải có ít nhất một chữ thường\");\n+  if (!hasNumbers) errors.push(\"Mật khẩu phải có ít nhất một số\");\n+  if (!hasSpecialChar) errors.push(\"Mật khẩu phải có ít nhất một ký tự đặc biệt\");\n+\n+  return {\n+    isValid: errors.length === 0,\n+    errors,\n+    details: {\n+      minLength,\n+      hasUpperCase,\n+      hasLowerCase,\n+      hasNumbers,\n+      hasSpecialChar,\n+    }\n+  };\n+}\n+\n+export function validateDateOfBirth(day: string, month: string, year: string) {\n+  const birthDate = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n+  const today = new Date();\n+  const age = today.getFullYear() - birthDate.getFullYear();\n+  \n+  const errors = [];\n+  \n+  if (isNaN(birthDate.getTime())) {\n+    errors.push(\"Ngày sinh không hợp lệ\");\n+  }\n+  \n+  if (age < 13) {\n+    errors.push(\"Bạn phải đủ 13 tuổi để đăng ký\");\n+  }\n+  \n+  if (age > 100) {\n+    errors.push(\"Ngày sinh không hợp lệ\");\n+  }\n+\n+  return {\n+    isValid: errors.length === 0,\n+    errors\n+  };\n } \n\\ No newline at end of file\n"
                }
            ],
            "date": 1747642619376,
            "name": "Commit-0",
            "content": "export function validateEmail(email: string): boolean {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\nexport function validatePassword(password: string) {\r\n  const minLength = password.length >= 8;\r\n  const hasUpperCase = /[A-Z]/.test(password);\r\n  const hasLowerCase = /[a-z]/.test(password);\r\n  const hasNumbers = /\\d/.test(password);\r\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n\r\n  return {\r\n    minLength,\r\n    hasUpperCase,\r\n    hasLowerCase,\r\n    hasNumbers,\r\n    hasSpecialChar,\r\n  };\r\n} "
        }
    ]
}
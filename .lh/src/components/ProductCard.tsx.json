{
    "sourceFile": "src/components/ProductCard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1746893166524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747115540567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n           <button\r\n             onClick={(e) => {\r\n               e.preventDefault();\r\n               e.stopPropagation();\r\n-              toggleWishlist(product._id);\r\n+              toggleWishlist(product);\r\n             }}\r\n             className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n           >\r\n             <AnimatePresence>\r\n"
                },
                {
                    "date": 1747116361806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,74 +41,76 @@\n     setImageIndex(0);\r\n   };\r\n \r\n   return (\r\n-    <Link href={`/products/${product._id}`} className=\"block\">\r\n-      <motion.div\r\n-        className=\"relative group\"\r\n-        onMouseEnter={handleMouseEnter}\r\n-        onMouseLeave={handleMouseLeave}\r\n-        initial={{ opacity: 0, y: 20 }}\r\n-        animate={{ opacity: 1, y: 0 }}\r\n-        transition={{ duration: 0.4, delay: Number(product._id) * 0.1 }}\r\n-      >\r\n-        <div className=\"w-full overflow-hidden rounded-md\">\r\n-          <div className=\"relative h-[250px] sm:h-[350px]\">\r\n-            <Image\r\n-              src={images[currentImageIndex]}\r\n-              alt={product.name || \"Product Image\"}\r\n-              fill\r\n-              quality={100}\r\n-              className=\"object-contain object-center\"\r\n-              sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n-              priority={currentImageIndex === 0}\r\n-            />\r\n+    <div className=\"relative group\">\r\n+      <Link href={`/products/${product._id}`} className=\"block\">\r\n+        <motion.div\r\n+          className=\"relative\"\r\n+          onMouseEnter={handleMouseEnter}\r\n+          onMouseLeave={handleMouseLeave}\r\n+          initial={{ opacity: 0, y: 20 }}\r\n+          animate={{ opacity: 1, y: 0 }}\r\n+          transition={{ duration: 0.4, delay: Number(product._id) * 0.1 }}\r\n+        >\r\n+          <div className=\"w-full overflow-hidden rounded-md\">\r\n+            <div className=\"relative h-[250px] sm:h-[350px]\">\r\n+              <Image\r\n+                src={images[currentImageIndex]}\r\n+                alt={product.name || \"Product Image\"}\r\n+                fill\r\n+                quality={100}\r\n+                className=\"object-contain object-center\"\r\n+                sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n+                priority={currentImageIndex === 0}\r\n+              />\r\n+            </div>\r\n           </div>\r\n-        </div>\r\n-        <div className=\"p-4 flex flex-col items-center text-center\">\r\n-          <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n-            {product.name}\r\n-          </h2>\r\n-          <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n-            {product.price.toLocaleString('vi-VN')} VND\r\n-          </p>\r\n-          <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n-            Shop This\r\n-            <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n-          </span>\r\n-        </div>\r\n-        <div className=\"absolute top-1 right-1 sm:top-2 sm:right-2\">\r\n-          <button\r\n-            onClick={(e) => {\r\n-              e.preventDefault();\r\n-              e.stopPropagation();\r\n-              toggleWishlist(product);\r\n-            }}\r\n-            className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n-          >\r\n-            <AnimatePresence>\r\n-              <motion.svg\r\n-                key={isLiked ? 'filled' : 'empty'}\r\n-                initial={{ scale: 0.8 }}\r\n-                animate={{ scale: 1 }}\r\n-                exit={{ scale: 0.8 }}\r\n-                transition={{ duration: 0.2 }}\r\n-                xmlns=\"http://www.w3.org/2000/svg\"\r\n-                className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n-                viewBox=\"0 0 24 24\"\r\n-                fill={isLiked ? \"currentColor\" : \"none\"}\r\n-                stroke=\"currentColor\"\r\n-              >\r\n-                <path\r\n-                  strokeLinecap=\"round\"\r\n-                  strokeLinejoin=\"round\"\r\n-                  strokeWidth={1.5}\r\n-                  d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n-                />\r\n-              </motion.svg>\r\n-            </AnimatePresence>\r\n-          </button>\r\n-        </div>\r\n-      </motion.div>\r\n-    </Link>\r\n+          <div className=\"p-4 flex flex-col items-center text-center\">\r\n+            <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n+              {product.name}\r\n+            </h2>\r\n+            <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n+              {product.price.toLocaleString('vi-VN')} VND\r\n+            </p>\r\n+            <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n+              Shop This\r\n+              <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n+            </span>\r\n+          </div>\r\n+        </motion.div>\r\n+      </Link>\r\n+      <div className=\"absolute top-1 right-1 sm:top-2 sm:right-2 z-10\">\r\n+        <button\r\n+          onClick={(e) => {\r\n+            e.preventDefault();\r\n+            e.stopPropagation();\r\n+            toggleWishlist(product);\r\n+          }}\r\n+          className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n+        >\r\n+          <AnimatePresence>\r\n+            <motion.svg\r\n+              key={isLiked ? 'filled' : 'empty'}\r\n+              initial={{ scale: 0.8 }}\r\n+              animate={{ scale: 1 }}\r\n+              exit={{ scale: 0.8 }}\r\n+              transition={{ duration: 0.2 }}\r\n+              xmlns=\"http://www.w3.org/2000/svg\"\r\n+              className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n+              viewBox=\"0 0 24 24\"\r\n+              fill={isLiked ? \"currentColor\" : \"none\"}\r\n+              stroke=\"currentColor\"\r\n+            >\r\n+              <path\r\n+                strokeLinecap=\"round\"\r\n+                strokeLinejoin=\"round\"\r\n+                strokeWidth={1.5}\r\n+                d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n+              />\r\n+            </motion.svg>\r\n+          </AnimatePresence>\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747126782918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n   };\r\n \r\n   return (\r\n     <div className=\"relative group\">\r\n-      <Link href={`/products/${product._id}`} className=\"block\">\r\n+      <Link href={`/products/${product.slug}`} className=\"block\">\r\n         <motion.div\r\n           className=\"relative\"\r\n           onMouseEnter={handleMouseEnter}\r\n           onMouseLeave={handleMouseLeave}\r\n"
                },
                {
                    "date": 1747199009642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n   };\r\n \r\n   return (\r\n     <div className=\"relative group\">\r\n-      <Link href={`/products/${product.slug}`} className=\"block\">\r\n+      <Link href={`/${product.slug}`} className=\"block\">\r\n         <motion.div\r\n           className=\"relative\"\r\n           onMouseEnter={handleMouseEnter}\r\n           onMouseLeave={handleMouseLeave}\r\n"
                },
                {
                    "date": 1747206405767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,11 @@\n   const isLiked = isInWishlist(product._id);\r\n   const [imageIndex, setImageIndex] = useState(0);\r\n   const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n \r\n+  // Check if all sizes are out of stock\r\n+  const isOutOfStock = product.quantityM <= 0 && product.quantityL <= 0 && product.quantityXL <= 0;\r\n+\r\n   // Ensure we have valid images\r\n   const defaultImage = \"/images/placeholder.jpg\"; // Add a placeholder image to your public folder\r\n   const images = product.images && product.images.length > 0 ? product.images : [defaultImage];\r\n   const currentImageIndex = imageIndex < images.length ? imageIndex : 0;\r\n@@ -42,11 +45,11 @@\n   };\r\n \r\n   return (\r\n     <div className=\"relative group\">\r\n-      <Link href={`/${product.slug}`} className=\"block\">\r\n+      <Link href={isOutOfStock ? '#' : `/${product.slug}`} className={`block ${isOutOfStock ? 'cursor-not-allowed' : ''}`}>\r\n         <motion.div\r\n-          className=\"relative\"\r\n+          className={`relative ${isOutOfStock ? 'opacity-50' : ''}`}\r\n           onMouseEnter={handleMouseEnter}\r\n           onMouseLeave={handleMouseLeave}\r\n           initial={{ opacity: 0, y: 20 }}\r\n           animate={{ opacity: 1, y: 0 }}\r\n@@ -62,8 +65,13 @@\n                 className=\"object-contain object-center\"\r\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n                 priority={currentImageIndex === 0}\r\n               />\r\n+              {isOutOfStock && (\r\n+                <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n+                  <span className=\"text-white text-lg font-bold uppercase tracking-wider\">Sold Out</span>\r\n+                </div>\r\n+              )}\r\n             </div>\r\n           </div>\r\n           <div className=\"p-4 flex flex-col items-center text-center\">\r\n             <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n"
                },
                {
                    "date": 1747206636599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,20 +61,20 @@\n                 src={images[currentImageIndex]}\r\n                 alt={product.name || \"Product Image\"}\r\n                 fill\r\n                 quality={100}\r\n-                className=\"object-contain object-center\"\r\n+                className={`object-contain object-center ${isOutOfStock ? 'opacity-70' : ''}`}\r\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n                 priority={currentImageIndex === 0}\r\n               />\r\n-              {isOutOfStock && (\r\n-                <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n-                  <span className=\"text-white text-lg font-bold uppercase tracking-wider\">Sold Out</span>\r\n-                </div>\r\n-              )}\r\n             </div>\r\n           </div>\r\n           <div className=\"p-4 flex flex-col items-center text-center\">\r\n+            {isOutOfStock && (\r\n+              <span className=\"text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider mb-2\">\r\n+                Sold Out\r\n+              </span>\r\n+            )}\r\n             <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n               {product.name}\r\n             </h2>\r\n             <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n"
                },
                {
                    "date": 1747206711531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,16 +65,18 @@\n                 className={`object-contain object-center ${isOutOfStock ? 'opacity-70' : ''}`}\r\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n                 priority={currentImageIndex === 0}\r\n               />\r\n+              {isOutOfStock && (\r\n+                <div className=\"absolute top-2 left-1/2 -translate-x-1/2\">\r\n+                  <span className=\"text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\r\n+                    Sold Out\r\n+                  </span>\r\n+                </div>\r\n+              )}\r\n             </div>\r\n           </div>\r\n           <div className=\"p-4 flex flex-col items-center text-center\">\r\n-            {isOutOfStock && (\r\n-              <span className=\"text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider mb-2\">\r\n-                Sold Out\r\n-              </span>\r\n-            )}\r\n             <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n               {product.name}\r\n             </h2>\r\n             <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n"
                },
                {
                    "date": 1747206801819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,10 +66,10 @@\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n                 priority={currentImageIndex === 0}\r\n               />\r\n               {isOutOfStock && (\r\n-                <div className=\"absolute top-2 left-1/2 -translate-x-1/2\">\r\n-                  <span className=\"text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\r\n+                <div className=\"absolute bottom-2 left-1/2 -translate-x-1/2 w-full flex justify-center pointer-events-none\">\r\n+                  <span className=\"bg-white bg-opacity-80 px-2 py-0.5 rounded text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\r\n                     Sold Out\r\n                   </span>\r\n                 </div>\r\n               )}\r\n"
                },
                {
                    "date": 1747239074408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   // Check if all sizes are out of stock\r\n   const isOutOfStock = product.quantityM <= 0 && product.quantityL <= 0 && product.quantityXL <= 0;\r\n \r\n   // Ensure we have valid images\r\n-  const defaultImage = \"/images/placeholder.jpg\"; // Add a placeholder image to your public folder\r\n+  const defaultImage = \"/images/placeholder.jpg\";\r\n   const images = product.images && product.images.length > 0 ? product.images : [defaultImage];\r\n   const currentImageIndex = imageIndex < images.length ? imageIndex : 0;\r\n \r\n   const handleMouseEnter = () => {\r\n@@ -74,53 +74,51 @@\n                 </div>\r\n               )}\r\n             </div>\r\n           </div>\r\n-          <div className=\"p-4 flex flex-col items-center text-center\">\r\n-            <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n-              {product.name}\r\n-            </h2>\r\n-            <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n-              {product.price.toLocaleString('vi-VN')} VND\r\n-            </p>\r\n-            <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n-              Shop This\r\n-              <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n-            </span>\r\n-          </div>\r\n+          \r\n+          <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n+            {product.name}\r\n+          </h2>\r\n+          <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n+            {product.price.toLocaleString('vi-VN')} VND\r\n+          </p>\r\n+          <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n+            Shop This\r\n+            <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n+          </span>\r\n         </motion.div>\r\n       </Link>\r\n-      <div className=\"absolute top-1 right-1 sm:top-2 sm:right-2 z-10\">\r\n-        <button\r\n-          onClick={(e) => {\r\n-            e.preventDefault();\r\n-            e.stopPropagation();\r\n-            toggleWishlist(product);\r\n-          }}\r\n-          className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n-        >\r\n-          <AnimatePresence>\r\n-            <motion.svg\r\n-              key={isLiked ? 'filled' : 'empty'}\r\n-              initial={{ scale: 0.8 }}\r\n-              animate={{ scale: 1 }}\r\n-              exit={{ scale: 0.8 }}\r\n-              transition={{ duration: 0.2 }}\r\n-              xmlns=\"http://www.w3.org/2000/svg\"\r\n-              className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n-              viewBox=\"0 0 24 24\"\r\n-              fill={isLiked ? \"currentColor\" : \"none\"}\r\n-              stroke=\"currentColor\"\r\n-            >\r\n-              <path\r\n-                strokeLinecap=\"round\"\r\n-                strokeLinejoin=\"round\"\r\n-                strokeWidth={1.5}\r\n-                d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n-              />\r\n-            </motion.svg>\r\n-          </AnimatePresence>\r\n-        </button>\r\n-      </div>\r\n+      \r\n+      <button\r\n+        onClick={(e) => {\r\n+          e.preventDefault();\r\n+          e.stopPropagation();\r\n+          toggleWishlist(product);\r\n+        }}\r\n+        className=\"absolute top-2 right-2 text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1 z-10\"\r\n+      >\r\n+        <AnimatePresence>\r\n+          <motion.svg\r\n+            key={isLiked ? 'filled' : 'empty'}\r\n+            initial={{ scale: 0.8 }}\r\n+            animate={{ scale: 1 }}\r\n+            exit={{ scale: 0.8 }}\r\n+            transition={{ duration: 0.2 }}\r\n+            xmlns=\"http://www.w3.org/2000/svg\"\r\n+            className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n+            viewBox=\"0 0 24 24\"\r\n+            fill={isLiked ? \"currentColor\" : \"none\"}\r\n+            stroke=\"currentColor\"\r\n+          >\r\n+            <path\r\n+              strokeLinecap=\"round\"\r\n+              strokeLinejoin=\"round\"\r\n+              strokeWidth={1.5}\r\n+              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n+            />\r\n+          </motion.svg>\r\n+        </AnimatePresence>\r\n+      </button>\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747239112564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   // Check if all sizes are out of stock\r\n   const isOutOfStock = product.quantityM <= 0 && product.quantityL <= 0 && product.quantityXL <= 0;\r\n \r\n   // Ensure we have valid images\r\n-  const defaultImage = \"/images/placeholder.jpg\";\r\n+  const defaultImage = \"/images/placeholder.jpg\"; // Add a placeholder image to your public folder\r\n   const images = product.images && product.images.length > 0 ? product.images : [defaultImage];\r\n   const currentImageIndex = imageIndex < images.length ? imageIndex : 0;\r\n \r\n   const handleMouseEnter = () => {\r\n@@ -74,51 +74,53 @@\n                 </div>\r\n               )}\r\n             </div>\r\n           </div>\r\n-          \r\n-          <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n-            {product.name}\r\n-          </h2>\r\n-          <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n-            {product.price.toLocaleString('vi-VN')} VND\r\n-          </p>\r\n-          <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n-            Shop This\r\n-            <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n-          </span>\r\n+          <div className=\"p-4 flex flex-col items-center text-center\">\r\n+            <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n+              {product.name}\r\n+            </h2>\r\n+            <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n+              {product.price.toLocaleString('vi-VN')} VND\r\n+            </p>\r\n+            <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n+              Shop This\r\n+              <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n+            </span>\r\n+          </div>\r\n         </motion.div>\r\n       </Link>\r\n-      \r\n-      <button\r\n-        onClick={(e) => {\r\n-          e.preventDefault();\r\n-          e.stopPropagation();\r\n-          toggleWishlist(product);\r\n-        }}\r\n-        className=\"absolute top-2 right-2 text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1 z-10\"\r\n-      >\r\n-        <AnimatePresence>\r\n-          <motion.svg\r\n-            key={isLiked ? 'filled' : 'empty'}\r\n-            initial={{ scale: 0.8 }}\r\n-            animate={{ scale: 1 }}\r\n-            exit={{ scale: 0.8 }}\r\n-            transition={{ duration: 0.2 }}\r\n-            xmlns=\"http://www.w3.org/2000/svg\"\r\n-            className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n-            viewBox=\"0 0 24 24\"\r\n-            fill={isLiked ? \"currentColor\" : \"none\"}\r\n-            stroke=\"currentColor\"\r\n-          >\r\n-            <path\r\n-              strokeLinecap=\"round\"\r\n-              strokeLinejoin=\"round\"\r\n-              strokeWidth={1.5}\r\n-              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n-            />\r\n-          </motion.svg>\r\n-        </AnimatePresence>\r\n-      </button>\r\n+      <div className=\"absolute top-1 right-1 sm:top-2 sm:right-2 z-10\">\r\n+        <button\r\n+          onClick={(e) => {\r\n+            e.preventDefault();\r\n+            e.stopPropagation();\r\n+            toggleWishlist(product);\r\n+          }}\r\n+          className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n+        >\r\n+          <AnimatePresence>\r\n+            <motion.svg\r\n+              key={isLiked ? 'filled' : 'empty'}\r\n+              initial={{ scale: 0.8 }}\r\n+              animate={{ scale: 1 }}\r\n+              exit={{ scale: 0.8 }}\r\n+              transition={{ duration: 0.2 }}\r\n+              xmlns=\"http://www.w3.org/2000/svg\"\r\n+              className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n+              viewBox=\"0 0 24 24\"\r\n+              fill={isLiked ? \"currentColor\" : \"none\"}\r\n+              stroke=\"currentColor\"\r\n+            >\r\n+              <path\r\n+                strokeLinecap=\"round\"\r\n+                strokeLinejoin=\"round\"\r\n+                strokeWidth={1.5}\r\n+                d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n+              />\r\n+            </motion.svg>\r\n+          </AnimatePresence>\r\n+        </button>\r\n+      </div>\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747239159781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,14 @@\n     if (intervalRef.current) clearInterval(intervalRef.current);\r\n     setImageIndex(0);\r\n   };\r\n \r\n+  const handleWishlistClick = async (e: React.MouseEvent) => {\r\n+    e.preventDefault();\r\n+    e.stopPropagation();\r\n+    await toggleWishlist(product);\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"relative group\">\r\n       <Link href={isOutOfStock ? '#' : `/${product.slug}`} className={`block ${isOutOfStock ? 'cursor-not-allowed' : ''}`}>\r\n         <motion.div\r\n@@ -88,39 +94,35 @@\n             </span>\r\n           </div>\r\n         </motion.div>\r\n       </Link>\r\n-      <div className=\"absolute top-1 right-1 sm:top-2 sm:right-2 z-10\">\r\n-        <button\r\n-          onClick={(e) => {\r\n-            e.preventDefault();\r\n-            e.stopPropagation();\r\n-            toggleWishlist(product);\r\n-          }}\r\n-          className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n-        >\r\n-          <AnimatePresence>\r\n-            <motion.svg\r\n-              key={isLiked ? 'filled' : 'empty'}\r\n-              initial={{ scale: 0.8 }}\r\n-              animate={{ scale: 1 }}\r\n-              exit={{ scale: 0.8 }}\r\n-              transition={{ duration: 0.2 }}\r\n-              xmlns=\"http://www.w3.org/2000/svg\"\r\n-              className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n-              viewBox=\"0 0 24 24\"\r\n-              fill={isLiked ? \"currentColor\" : \"none\"}\r\n-              stroke=\"currentColor\"\r\n-            >\r\n-              <path\r\n-                strokeLinecap=\"round\"\r\n-                strokeLinejoin=\"round\"\r\n-                strokeWidth={1.5}\r\n-                d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n-              />\r\n-            </motion.svg>\r\n-          </AnimatePresence>\r\n-        </button>\r\n-      </div>\r\n+      \r\n+      <button\r\n+        onClick={handleWishlistClick}\r\n+        className=\"absolute top-2 right-2 z-20 bg-white bg-opacity-70 rounded-full p-1.5 hover:bg-opacity-100 transition-all duration-300\"\r\n+        aria-label={isLiked ? \"Remove from wishlist\" : \"Add to wishlist\"}\r\n+      >\r\n+        <AnimatePresence mode=\"wait\">\r\n+          <motion.svg\r\n+            key={isLiked ? 'filled' : 'empty'}\r\n+            initial={{ scale: 0.8 }}\r\n+            animate={{ scale: 1 }}\r\n+            exit={{ scale: 0.8 }}\r\n+            transition={{ duration: 0.2 }}\r\n+            xmlns=\"http://www.w3.org/2000/svg\"\r\n+            className=\"h-4 w-4 sm:h-5 sm:w-5\"\r\n+            viewBox=\"0 0 24 24\"\r\n+            fill={isLiked ? \"black\" : \"none\"}\r\n+            stroke=\"black\"\r\n+            strokeWidth={1.5}\r\n+          >\r\n+            <path\r\n+              strokeLinecap=\"round\"\r\n+              strokeLinejoin=\"round\"\r\n+              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n+            />\r\n+          </motion.svg>\r\n+        </AnimatePresence>\r\n+      </button>\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747239282043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,14 +43,8 @@\n     if (intervalRef.current) clearInterval(intervalRef.current);\r\n     setImageIndex(0);\r\n   };\r\n \r\n-  const handleWishlistClick = async (e: React.MouseEvent) => {\r\n-    e.preventDefault();\r\n-    e.stopPropagation();\r\n-    await toggleWishlist(product);\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"relative group\">\r\n       <Link href={isOutOfStock ? '#' : `/${product.slug}`} className={`block ${isOutOfStock ? 'cursor-not-allowed' : ''}`}>\r\n         <motion.div\r\n@@ -94,35 +88,39 @@\n             </span>\r\n           </div>\r\n         </motion.div>\r\n       </Link>\r\n-      \r\n-      <button\r\n-        onClick={handleWishlistClick}\r\n-        className=\"absolute top-2 right-2 z-20 bg-white bg-opacity-70 rounded-full p-1.5 hover:bg-opacity-100 transition-all duration-300\"\r\n-        aria-label={isLiked ? \"Remove from wishlist\" : \"Add to wishlist\"}\r\n-      >\r\n-        <AnimatePresence mode=\"wait\">\r\n-          <motion.svg\r\n-            key={isLiked ? 'filled' : 'empty'}\r\n-            initial={{ scale: 0.8 }}\r\n-            animate={{ scale: 1 }}\r\n-            exit={{ scale: 0.8 }}\r\n-            transition={{ duration: 0.2 }}\r\n-            xmlns=\"http://www.w3.org/2000/svg\"\r\n-            className=\"h-4 w-4 sm:h-5 sm:w-5\"\r\n-            viewBox=\"0 0 24 24\"\r\n-            fill={isLiked ? \"black\" : \"none\"}\r\n-            stroke=\"black\"\r\n-            strokeWidth={1.5}\r\n-          >\r\n-            <path\r\n-              strokeLinecap=\"round\"\r\n-              strokeLinejoin=\"round\"\r\n-              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n-            />\r\n-          </motion.svg>\r\n-        </AnimatePresence>\r\n-      </button>\r\n+      <div className=\"absolute top-1 right-1 sm:top-2 sm:right-2 z-10\">\r\n+        <button\r\n+          onClick={(e) => {\r\n+            e.preventDefault();\r\n+            e.stopPropagation();\r\n+            toggleWishlist(product);\r\n+          }}\r\n+          className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n+        >\r\n+          <AnimatePresence>\r\n+            <motion.svg\r\n+              key={isLiked ? 'filled' : 'empty'}\r\n+              initial={{ scale: 0.8 }}\r\n+              animate={{ scale: 1 }}\r\n+              exit={{ scale: 0.8 }}\r\n+              transition={{ duration: 0.2 }}\r\n+              xmlns=\"http://www.w3.org/2000/svg\"\r\n+              className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n+              viewBox=\"0 0 24 24\"\r\n+              fill={isLiked ? \"currentColor\" : \"none\"}\r\n+              stroke=\"currentColor\"\r\n+            >\r\n+              <path\r\n+                strokeLinecap=\"round\"\r\n+                strokeLinejoin=\"round\"\r\n+                strokeWidth={1.5}\r\n+                d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n+              />\r\n+            </motion.svg>\r\n+          </AnimatePresence>\r\n+        </button>\r\n+      </div>\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747239290291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,14 @@\n     if (intervalRef.current) clearInterval(intervalRef.current);\r\n     setImageIndex(0);\r\n   };\r\n \r\n+  const handleWishlistClick = async (e: React.MouseEvent) => {\r\n+    e.preventDefault();\r\n+    e.stopPropagation();\r\n+    await toggleWishlist(product);\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"relative group\">\r\n       <Link href={isOutOfStock ? '#' : `/${product.slug}`} className={`block ${isOutOfStock ? 'cursor-not-allowed' : ''}`}>\r\n         <motion.div\r\n@@ -88,39 +94,35 @@\n             </span>\r\n           </div>\r\n         </motion.div>\r\n       </Link>\r\n-      <div className=\"absolute top-1 right-1 sm:top-2 sm:right-2 z-10\">\r\n-        <button\r\n-          onClick={(e) => {\r\n-            e.preventDefault();\r\n-            e.stopPropagation();\r\n-            toggleWishlist(product);\r\n-          }}\r\n-          className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n-        >\r\n-          <AnimatePresence>\r\n-            <motion.svg\r\n-              key={isLiked ? 'filled' : 'empty'}\r\n-              initial={{ scale: 0.8 }}\r\n-              animate={{ scale: 1 }}\r\n-              exit={{ scale: 0.8 }}\r\n-              transition={{ duration: 0.2 }}\r\n-              xmlns=\"http://www.w3.org/2000/svg\"\r\n-              className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n-              viewBox=\"0 0 24 24\"\r\n-              fill={isLiked ? \"currentColor\" : \"none\"}\r\n-              stroke=\"currentColor\"\r\n-            >\r\n-              <path\r\n-                strokeLinecap=\"round\"\r\n-                strokeLinejoin=\"round\"\r\n-                strokeWidth={1.5}\r\n-                d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n-              />\r\n-            </motion.svg>\r\n-          </AnimatePresence>\r\n-        </button>\r\n-      </div>\r\n+      \r\n+      <button\r\n+        onClick={handleWishlistClick}\r\n+        className=\"absolute top-2 right-2 z-20 bg-white bg-opacity-70 rounded-full p-1.5 hover:bg-opacity-100 transition-all duration-300\"\r\n+        aria-label={isLiked ? \"Remove from wishlist\" : \"Add to wishlist\"}\r\n+      >\r\n+        <AnimatePresence mode=\"wait\">\r\n+          <motion.svg\r\n+            key={isLiked ? 'filled' : 'empty'}\r\n+            initial={{ scale: 0.8 }}\r\n+            animate={{ scale: 1 }}\r\n+            exit={{ scale: 0.8 }}\r\n+            transition={{ duration: 0.2 }}\r\n+            xmlns=\"http://www.w3.org/2000/svg\"\r\n+            className=\"h-4 w-4 sm:h-5 sm:w-5\"\r\n+            viewBox=\"0 0 24 24\"\r\n+            fill={isLiked ? \"black\" : \"none\"}\r\n+            stroke=\"black\"\r\n+            strokeWidth={1.5}\r\n+          >\r\n+            <path\r\n+              strokeLinecap=\"round\"\r\n+              strokeLinejoin=\"round\"\r\n+              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n+            />\r\n+          </motion.svg>\r\n+        </AnimatePresence>\r\n+      </button>\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747280578013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n                 quality={100}\r\n                 className={`object-contain object-center ${isOutOfStock ? 'opacity-70' : ''}`}\r\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n                 priority={currentImageIndex === 0}\r\n+                loading=\"lazy\"\r\n               />\r\n               {isOutOfStock && (\r\n                 <div className=\"absolute bottom-2 left-1/2 -translate-x-1/2 w-full flex justify-center pointer-events-none\">\r\n                   <span className=\"bg-white bg-opacity-80 px-2 py-0.5 rounded text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\r\n"
                },
                {
                    "date": 1747281635055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,9 @@\n                 fill\r\n                 quality={100}\r\n                 className={`object-contain object-center ${isOutOfStock ? 'opacity-70' : ''}`}\r\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n-                priority={currentImageIndex === 0}\r\n-                loading=\"lazy\"\r\n+                {...(currentImageIndex === 0 ? { priority: true } : { loading: \"lazy\" })}\r\n               />\r\n               {isOutOfStock && (\r\n                 <div className=\"absolute bottom-2 left-1/2 -translate-x-1/2 w-full flex justify-center pointer-events-none\">\r\n                   <span className=\"bg-white bg-opacity-80 px-2 py-0.5 rounded text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\r\n"
                },
                {
                    "date": 1747294612445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,12 @@\n \r\n import { motion, AnimatePresence } from \"framer-motion\";\r\n import Link from \"next/link\";\r\n import { useWishlist } from '../context/WishlistContext';\r\n+import { useLanguage } from '../context/LanguageContext';\r\n import { Product } from '../types/product';\r\n import Image from \"next/image\";\r\n-import { useRef, useState } from \"react\";\r\n+import { useRef, useState, useEffect } from \"react\";\r\n \r\n interface ProductCardProps {\r\n   product: Product;\r\n   currentImageIndex?: number;\r\n@@ -19,12 +20,32 @@\n export default function ProductCard({\r\n   product,\r\n }: ProductCardProps) {\r\n   const { toggleWishlist, isInWishlist } = useWishlist();\r\n+  const { t, language } = useLanguage();\r\n   const isLiked = isInWishlist(product._id);\r\n   const [imageIndex, setImageIndex] = useState(0);\r\n+  const [exchangeRate, setExchangeRate] = useState(26000); // Default fallback rate\r\n   const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n \r\n+  useEffect(() => {\r\n+    const fetchExchangeRate = async () => {\r\n+      try {\r\n+        const response = await fetch('https://open.er-api.com/v6/latest/USD');\r\n+        const data = await response.json();\r\n+        if (data.rates && data.rates.VND) {\r\n+          setExchangeRate(data.rates.VND);\r\n+        }\r\n+      } catch (error) {\r\n+        console.error('Error fetching exchange rate:', error);\r\n+      }\r\n+    };\r\n+\r\n+    fetchExchangeRate();\r\n+    const interval = setInterval(fetchExchangeRate, 3600000);\r\n+    return () => clearInterval(interval);\r\n+  }, []);\r\n+\r\n   // Check if all sizes are out of stock\r\n   const isOutOfStock = product.quantityM <= 0 && product.quantityL <= 0 && product.quantityXL <= 0;\r\n \r\n   // Ensure we have valid images\r\n@@ -49,8 +70,18 @@\n     e.stopPropagation();\r\n     await toggleWishlist(product);\r\n   };\r\n \r\n+  // Format price based on language\r\n+  const formatPrice = (price: number) => {\r\n+    if (language === 'vi') {\r\n+      return `${price.toLocaleString('vi-VN')} VND`;\r\n+    } else {\r\n+      const usdPrice = (price / exchangeRate).toFixed(2);\r\n+      return `$${usdPrice}`;\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"relative group\">\r\n       <Link href={isOutOfStock ? '#' : `/${product.slug}`} className={`block ${isOutOfStock ? 'cursor-not-allowed' : ''}`}>\r\n         <motion.div\r\n@@ -74,9 +105,9 @@\n               />\r\n               {isOutOfStock && (\r\n                 <div className=\"absolute bottom-2 left-1/2 -translate-x-1/2 w-full flex justify-center pointer-events-none\">\r\n                   <span className=\"bg-white bg-opacity-80 px-2 py-0.5 rounded text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\r\n-                    Sold Out\r\n+                    {t('product.soldOut')}\r\n                   </span>\r\n                 </div>\r\n               )}\r\n             </div>\r\n@@ -85,12 +116,12 @@\n             <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n               {product.name}\r\n             </h2>\r\n             <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n-              {product.price.toLocaleString('vi-VN')} VND\r\n+              {formatPrice(product.price)}\r\n             </p>\r\n             <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n-              Shop This\r\n+              {t('product.shopThis')}\r\n               <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n             </span>\r\n           </div>\r\n         </motion.div>\r\n@@ -98,9 +129,9 @@\n       \r\n       <button\r\n         onClick={handleWishlistClick}\r\n         className=\"absolute top-2 right-2 z-20 bg-white bg-opacity-70 rounded-full p-1.5 hover:bg-opacity-100 transition-all duration-300\"\r\n-        aria-label={isLiked ? \"Remove from wishlist\" : \"Add to wishlist\"}\r\n+        aria-label={isLiked ? t('product.removeFromWishlist') : t('product.addToWishlist')}\r\n       >\r\n         <AnimatePresence mode=\"wait\">\r\n           <motion.svg\r\n             key={isLiked ? 'filled' : 'empty'}\r\n"
                },
                {
                    "date": 1748845766884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,11 @@\n     return () => clearInterval(interval);\r\n   }, []);\r\n \r\n   // Check if all sizes are out of stock\r\n-  const isOutOfStock = product.quantityM <= 0 && product.quantityL <= 0 && product.quantityXL <= 0;\r\n+  const isOutOfStock = product.category === \"CAP\" \r\n+    ? product.quantityHat <= 0\r\n+    : product.quantityM <= 0 && product.quantityL <= 0 && product.quantityXL <= 0;\r\n \r\n   // Ensure we have valid images\r\n   const defaultImage = \"/images/placeholder.jpg\"; // Add a placeholder image to your public folder\r\n   const images = product.images && product.images.length > 0 ? product.images : [defaultImage];\r\n"
                },
                {
                    "date": 1749558073519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,8 +104,14 @@\n                 className={`object-contain object-center ${isOutOfStock ? 'opacity-70' : ''}`}\r\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n                 {...(currentImageIndex === 0 ? { priority: true } : { loading: \"lazy\" })}\r\n               />\r\n+              {/* Badge giảm giá */}\r\n+              {product.discountPercent && product.discountPercent > 0 && (\r\n+                <div className=\"absolute top-2 left-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded z-10 shadow\">\r\n+                  -{product.discountPercent}%\r\n+                </div>\r\n+              )}\r\n               {isOutOfStock && (\r\n                 <div className=\"absolute bottom-2 left-1/2 -translate-x-1/2 w-full flex justify-center pointer-events-none\">\r\n                   <span className=\"bg-white bg-opacity-80 px-2 py-0.5 rounded text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\r\n                     {t('product.soldOut')}\r\n"
                },
                {
                    "date": 1749558106443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,11 +123,23 @@\n           <div className=\"p-4 flex flex-col items-center text-center\">\r\n             <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n               {product.name}\r\n             </h2>\r\n-            <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n-              {formatPrice(product.price)}\r\n-            </p>\r\n+            {/* Giá sản phẩm */}\r\n+            {product.discountPercent && product.discountPercent > 0 ? (\r\n+              <div className=\"flex flex-col items-center\">\r\n+                <span className=\"text-gray-400 line-through text-xs sm:text-sm\">\r\n+                  {formatPrice(product.price)}\r\n+                </span>\r\n+                <span className=\"text-red-600 font-bold text-sm sm:text-base\">\r\n+                  {formatPrice(Math.round(product.price * (1 - product.discountPercent / 100)))}\r\n+                </span>\r\n+              </div>\r\n+            ) : (\r\n+              <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n+                {formatPrice(product.price)}\r\n+              </p>\r\n+            )}\r\n             <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n               {t('product.shopThis')}\r\n               <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n             </span>\r\n"
                },
                {
                    "date": 1749610855186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,179 +1,179 @@\n-'use client';\r\n-\r\n-import { motion, AnimatePresence } from \"framer-motion\";\r\n-import Link from \"next/link\";\r\n-import { useWishlist } from '../context/WishlistContext';\r\n-import { useLanguage } from '../context/LanguageContext';\r\n-import { Product } from '../types/product';\r\n-import Image from \"next/image\";\r\n-import { useRef, useState, useEffect } from \"react\";\r\n-\r\n-interface ProductCardProps {\r\n-  product: Product;\r\n-  currentImageIndex?: number;\r\n-  // handlePrevImage: (e: React.MouseEvent, productId: string) => void;\r\n-  // handleNextImage: (e: React.MouseEvent, productId: string) => void;\r\n-  // onHover: (productId: string) => void;\r\n-  // onLeave: () => void;\r\n-}\r\n-\r\n-export default function ProductCard({\r\n-  product,\r\n-}: ProductCardProps) {\r\n-  const { toggleWishlist, isInWishlist } = useWishlist();\r\n-  const { t, language } = useLanguage();\r\n-  const isLiked = isInWishlist(product._id);\r\n-  const [imageIndex, setImageIndex] = useState(0);\r\n-  const [exchangeRate, setExchangeRate] = useState(26000); // Default fallback rate\r\n-  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchExchangeRate = async () => {\r\n-      try {\r\n-        const response = await fetch('https://open.er-api.com/v6/latest/USD');\r\n-        const data = await response.json();\r\n-        if (data.rates && data.rates.VND) {\r\n-          setExchangeRate(data.rates.VND);\r\n-        }\r\n-      } catch (error) {\r\n-        console.error('Error fetching exchange rate:', error);\r\n-      }\r\n-    };\r\n-\r\n-    fetchExchangeRate();\r\n-    const interval = setInterval(fetchExchangeRate, 3600000);\r\n-    return () => clearInterval(interval);\r\n-  }, []);\r\n-\r\n-  // Check if all sizes are out of stock\r\n-  const isOutOfStock = product.category === \"CAP\" \r\n-    ? product.quantityHat <= 0\r\n-    : product.quantityM <= 0 && product.quantityL <= 0 && product.quantityXL <= 0;\r\n-\r\n-  // Ensure we have valid images\r\n-  const defaultImage = \"/images/placeholder.jpg\"; // Add a placeholder image to your public folder\r\n-  const images = product.images && product.images.length > 0 ? product.images : [defaultImage];\r\n-  const currentImageIndex = imageIndex < images.length ? imageIndex : 0;\r\n-\r\n-  const handleMouseEnter = () => {\r\n-    if (images.length <= 1) return;\r\n-    intervalRef.current = setInterval(() => {\r\n-      setImageIndex(prev => (prev + 1) % images.length);\r\n-    }, 1000);\r\n-  };\r\n-\r\n-  const handleMouseLeave = () => {\r\n-    if (intervalRef.current) clearInterval(intervalRef.current);\r\n-    setImageIndex(0);\r\n-  };\r\n-\r\n-  const handleWishlistClick = async (e: React.MouseEvent) => {\r\n-    e.preventDefault();\r\n-    e.stopPropagation();\r\n-    await toggleWishlist(product);\r\n-  };\r\n-\r\n-  // Format price based on language\r\n-  const formatPrice = (price: number) => {\r\n-    if (language === 'vi') {\r\n-      return `${price.toLocaleString('vi-VN')} VND`;\r\n-    } else {\r\n-      const usdPrice = (price / exchangeRate).toFixed(2);\r\n-      return `$${usdPrice}`;\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"relative group\">\r\n-      <Link href={isOutOfStock ? '#' : `/${product.slug}`} className={`block ${isOutOfStock ? 'cursor-not-allowed' : ''}`}>\r\n-        <motion.div\r\n-          className={`relative ${isOutOfStock ? 'opacity-50' : ''}`}\r\n-          onMouseEnter={handleMouseEnter}\r\n-          onMouseLeave={handleMouseLeave}\r\n-          initial={{ opacity: 0, y: 20 }}\r\n-          animate={{ opacity: 1, y: 0 }}\r\n-          transition={{ duration: 0.4, delay: Number(product._id) * 0.1 }}\r\n-        >\r\n-          <div className=\"w-full overflow-hidden rounded-md\">\r\n-            <div className=\"relative h-[250px] sm:h-[350px]\">\r\n-              <Image\r\n-                src={images[currentImageIndex]}\r\n-                alt={product.name || \"Product Image\"}\r\n-                fill\r\n-                quality={100}\r\n-                className={`object-contain object-center ${isOutOfStock ? 'opacity-70' : ''}`}\r\n-                sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n-                {...(currentImageIndex === 0 ? { priority: true } : { loading: \"lazy\" })}\r\n-              />\r\n-              {/* Badge giảm giá */}\r\n-              {product.discountPercent && product.discountPercent > 0 && (\r\n-                <div className=\"absolute top-2 left-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded z-10 shadow\">\r\n-                  -{product.discountPercent}%\r\n-                </div>\r\n-              )}\r\n-              {isOutOfStock && (\r\n-                <div className=\"absolute bottom-2 left-1/2 -translate-x-1/2 w-full flex justify-center pointer-events-none\">\r\n-                  <span className=\"bg-white bg-opacity-80 px-2 py-0.5 rounded text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\r\n-                    {t('product.soldOut')}\r\n-                  </span>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-          <div className=\"p-4 flex flex-col items-center text-center\">\r\n-            <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n-              {product.name}\r\n-            </h2>\r\n-            {/* Giá sản phẩm */}\r\n-            {product.discountPercent && product.discountPercent > 0 ? (\r\n-              <div className=\"flex flex-col items-center\">\r\n-                <span className=\"text-gray-400 line-through text-xs sm:text-sm\">\r\n-                  {formatPrice(product.price)}\r\n-                </span>\r\n-                <span className=\"text-red-600 font-bold text-sm sm:text-base\">\r\n-                  {formatPrice(Math.round(product.price * (1 - product.discountPercent / 100)))}\r\n-                </span>\r\n-              </div>\r\n-            ) : (\r\n-              <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n-                {formatPrice(product.price)}\r\n-              </p>\r\n-            )}\r\n-            <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n-              {t('product.shopThis')}\r\n-              <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n-            </span>\r\n-          </div>\r\n-        </motion.div>\r\n-      </Link>\r\n-      \r\n-      <button\r\n-        onClick={handleWishlistClick}\r\n-        className=\"absolute top-2 right-2 z-20 bg-white bg-opacity-70 rounded-full p-1.5 hover:bg-opacity-100 transition-all duration-300\"\r\n-        aria-label={isLiked ? t('product.removeFromWishlist') : t('product.addToWishlist')}\r\n-      >\r\n-        <AnimatePresence mode=\"wait\">\r\n-          <motion.svg\r\n-            key={isLiked ? 'filled' : 'empty'}\r\n-            initial={{ scale: 0.8 }}\r\n-            animate={{ scale: 1 }}\r\n-            exit={{ scale: 0.8 }}\r\n-            transition={{ duration: 0.2 }}\r\n-            xmlns=\"http://www.w3.org/2000/svg\"\r\n-            className=\"h-4 w-4 sm:h-5 sm:w-5\"\r\n-            viewBox=\"0 0 24 24\"\r\n-            fill={isLiked ? \"black\" : \"none\"}\r\n-            stroke=\"black\"\r\n-            strokeWidth={1.5}\r\n-          >\r\n-            <path\r\n-              strokeLinecap=\"round\"\r\n-              strokeLinejoin=\"round\"\r\n-              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n-            />\r\n-          </motion.svg>\r\n-        </AnimatePresence>\r\n-      </button>\r\n-    </div>\r\n-  );\r\n+'use client';\n+\n+import { motion, AnimatePresence } from \"framer-motion\";\n+import Link from \"next/link\";\n+import { useWishlist } from '../context/WishlistContext';\n+import { useLanguage } from '../context/LanguageContext';\n+import { Product } from '../types/product';\n+import Image from \"next/image\";\n+import { useRef, useState, useEffect } from \"react\";\n+\n+interface ProductCardProps {\n+  product: Product;\n+  currentImageIndex?: number;\n+  // handlePrevImage: (e: React.MouseEvent, productId: string) => void;\n+  // handleNextImage: (e: React.MouseEvent, productId: string) => void;\n+  // onHover: (productId: string) => void;\n+  // onLeave: () => void;\n+}\n+\n+export default function ProductCard({\n+  product,\n+}: ProductCardProps) {\n+  const { toggleWishlist, isInWishlist } = useWishlist();\n+  const { t, language } = useLanguage();\n+  const isLiked = isInWishlist(product._id);\n+  const [imageIndex, setImageIndex] = useState(0);\n+  const [exchangeRate, setExchangeRate] = useState(26000); // Default fallback rate\n+  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n+\n+  useEffect(() => {\n+    const fetchExchangeRate = async () => {\n+      try {\n+        const response = await fetch('https://open.er-api.com/v6/latest/USD');\n+        const data = await response.json();\n+        if (data.rates && data.rates.VND) {\n+          setExchangeRate(data.rates.VND);\n+        }\n+      } catch (error) {\n+        console.error('Error fetching exchange rate:', error);\n+      }\n+    };\n+\n+    fetchExchangeRate();\n+    const interval = setInterval(fetchExchangeRate, 3600000);\n+    return () => clearInterval(interval);\n+  }, []);\n+\n+  // Check if all sizes are out of stock\n+  const isOutOfStock = product.category === \"CAP\" \n+    ? product.quantityHat <= 0\n+    : product.quantityM <= 0 && product.quantityL <= 0 && product.quantityXL <= 0;\n+\n+  // Ensure we have valid images\n+  const defaultImage = \"/images/placeholder.jpg\"; // Add a placeholder image to your public folder\n+  const images = product.images && product.images.length > 0 ? product.images : [defaultImage];\n+  const currentImageIndex = imageIndex < images.length ? imageIndex : 0;\n+\n+  const handleMouseEnter = () => {\n+    if (images.length <= 1) return;\n+    intervalRef.current = setInterval(() => {\n+      setImageIndex(prev => (prev + 1) % images.length);\n+    }, 1000);\n+  };\n+\n+  const handleMouseLeave = () => {\n+    if (intervalRef.current) clearInterval(intervalRef.current);\n+    setImageIndex(0);\n+  };\n+\n+  const handleWishlistClick = async (e: React.MouseEvent) => {\n+    e.preventDefault();\n+    e.stopPropagation();\n+    await toggleWishlist(product);\n+  };\n+\n+  // Format price based on language\n+  const formatPrice = (price: number) => {\n+    if (language === 'vi') {\n+      return `${price.toLocaleString('vi-VN')} VND`;\n+    } else {\n+      const usdPrice = (price / exchangeRate).toFixed(2);\n+      return `$${usdPrice}`;\n+    }\n+  };\n+\n+  return (\n+    <div className=\"relative group\">\n+      <Link href={isOutOfStock ? '#' : `/${product.slug}`} className={`block ${isOutOfStock ? 'cursor-not-allowed' : ''}`}>\n+        <motion.div\n+          className={`relative ${isOutOfStock ? 'opacity-50' : ''}`}\n+          onMouseEnter={handleMouseEnter}\n+          onMouseLeave={handleMouseLeave}\n+          initial={{ opacity: 0, y: 20 }}\n+          animate={{ opacity: 1, y: 0 }}\n+          transition={{ duration: 0.4, delay: Number(product._id) * 0.1 }}\n+        >\n+          <div className=\"w-full overflow-hidden rounded-md\">\n+            <div className=\"relative h-[250px] sm:h-[350px]\">\n+              <Image\n+                src={images[currentImageIndex]}\n+                alt={product.name || \"Product Image\"}\n+                fill\n+                quality={100}\n+                className={`object-contain object-center ${isOutOfStock ? 'opacity-70' : ''}`}\n+                sizes=\"(max-width: 768px) 50vw, 25vw\"\n+                {...(currentImageIndex === 0 ? { priority: true } : { loading: \"lazy\" })}\n+              />\n+              {/* Badge giảm giá */}\n+              {product.discountPercent && product.discountPercent > 0 && (\n+                <div className=\"absolute top-2 left-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded z-10 shadow\">\n+                  -{product.discountPercent}%\n+                </div>\n+              )}\n+              {isOutOfStock && (\n+                <div className=\"absolute bottom-2 left-1/2 -translate-x-1/2 w-full flex justify-center pointer-events-none\">\n+                  <span className=\"bg-white bg-opacity-80 px-2 py-0.5 rounded text-red-600 text-[10px] sm:text-[11px] md:text-[12px] font-bold uppercase tracking-wider\">\n+                    {t('product.soldOut')}\n+                  </span>\n+                </div>\n+              )}\n+            </div>\n+          </div>\n+          <div className=\"p-4 flex flex-col items-center text-center\">\n+            <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\n+              {product.name}\n+            </h2>\n+            {/* Giá sản phẩm */}\n+            {product.discountPercent && product.discountPercent > 0 ? (\n+              <div className=\"flex flex-col items-center\">\n+                <span className=\"text-gray-400 line-through text-xs sm:text-sm\">\n+                  {formatPrice(product.price)}\n+                </span>\n+                <span className=\"text-red-600 font-bold text-sm sm:text-base\">\n+                  {formatPrice(Math.round(product.price * (1 - product.discountPercent / 100)))}\n+                </span>\n+              </div>\n+            ) : (\n+            <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\n+              {formatPrice(product.price)}\n+            </p>\n+            )}\n+            <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\n+              {t('product.shopThis')}\n+              <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\n+            </span>\n+          </div>\n+        </motion.div>\n+      </Link>\n+      \n+      <button\n+        onClick={handleWishlistClick}\n+        className=\"absolute top-2 right-2 z-20 bg-white bg-opacity-70 rounded-full p-1.5 hover:bg-opacity-100 transition-all duration-300\"\n+        aria-label={isLiked ? t('product.removeFromWishlist') : t('product.addToWishlist')}\n+      >\n+        <AnimatePresence mode=\"wait\">\n+          <motion.svg\n+            key={isLiked ? 'filled' : 'empty'}\n+            initial={{ scale: 0.8 }}\n+            animate={{ scale: 1 }}\n+            exit={{ scale: 0.8 }}\n+            transition={{ duration: 0.2 }}\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+            className=\"h-4 w-4 sm:h-5 sm:w-5\"\n+            viewBox=\"0 0 24 24\"\n+            fill={isLiked ? \"black\" : \"none\"}\n+            stroke=\"black\"\n+            strokeWidth={1.5}\n+          >\n+            <path\n+              strokeLinecap=\"round\"\n+              strokeLinejoin=\"round\"\n+              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n+            />\n+          </motion.svg>\n+        </AnimatePresence>\n+      </button>\n+    </div>\n+  );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1749707836184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,10 @@\n   const [imageIndex, setImageIndex] = useState(0);\n   const [exchangeRate, setExchangeRate] = useState(26000); // Default fallback rate\n   const intervalRef = useRef<NodeJS.Timeout | null>(null);\n \n+  console.log(`Product: ${product.name}, Discount: ${product.discountPercent}, Type: ${typeof product.discountPercent}`);\n+\n   useEffect(() => {\n     const fetchExchangeRate = async () => {\n       try {\n         const response = await fetch('https://open.er-api.com/v6/latest/USD');\n"
                },
                {
                    "date": 1749708053648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,8 @@\n   const [imageIndex, setImageIndex] = useState(0);\n   const [exchangeRate, setExchangeRate] = useState(26000); // Default fallback rate\n   const intervalRef = useRef<NodeJS.Timeout | null>(null);\n \n-  console.log(`Product: ${product.name}, Discount: ${product.discountPercent}, Type: ${typeof product.discountPercent}`);\n-\n   useEffect(() => {\n     const fetchExchangeRate = async () => {\n       try {\n         const response = await fetch('https://open.er-api.com/v6/latest/USD');\n@@ -107,9 +105,9 @@\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\n                 {...(currentImageIndex === 0 ? { priority: true } : { loading: \"lazy\" })}\n               />\n               {/* Badge giảm giá */}\n-              {product.discountPercent && product.discountPercent > 0 && (\n+              {product.discountPercent > 0 && (\n                 <div className=\"absolute top-2 left-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded z-10 shadow\">\n                   -{product.discountPercent}%\n                 </div>\n               )}\n"
                },
                {
                    "date": 1749708059836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n                 sizes=\"(max-width: 768px) 50vw, 25vw\"\n                 {...(currentImageIndex === 0 ? { priority: true } : { loading: \"lazy\" })}\n               />\n               {/* Badge giảm giá */}\n-              {product.discountPercent > 0 && (\n+              {product.discountPercent !== undefined && product.discountPercent > 0 && (\n                 <div className=\"absolute top-2 left-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded z-10 shadow\">\n                   -{product.discountPercent}%\n                 </div>\n               )}\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use client';\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport Link from \"next/link\";\r\nimport { useWishlist } from '../context/WishlistContext';\r\nimport { Product } from '../types/product';\r\nimport Image from \"next/image\";\r\nimport { useRef, useState } from \"react\";\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n  currentImageIndex?: number;\r\n  // handlePrevImage: (e: React.MouseEvent, productId: string) => void;\r\n  // handleNextImage: (e: React.MouseEvent, productId: string) => void;\r\n  // onHover: (productId: string) => void;\r\n  // onLeave: () => void;\r\n}\r\n\r\nexport default function ProductCard({\r\n  product,\r\n}: ProductCardProps) {\r\n  const { toggleWishlist, isInWishlist } = useWishlist();\r\n  const isLiked = isInWishlist(product._id);\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Ensure we have valid images\r\n  const defaultImage = \"/images/placeholder.jpg\"; // Add a placeholder image to your public folder\r\n  const images = product.images && product.images.length > 0 ? product.images : [defaultImage];\r\n  const currentImageIndex = imageIndex < images.length ? imageIndex : 0;\r\n\r\n  const handleMouseEnter = () => {\r\n    if (images.length <= 1) return;\r\n    intervalRef.current = setInterval(() => {\r\n      setImageIndex(prev => (prev + 1) % images.length);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (intervalRef.current) clearInterval(intervalRef.current);\r\n    setImageIndex(0);\r\n  };\r\n\r\n  return (\r\n    <Link href={`/products/${product._id}`} className=\"block\">\r\n      <motion.div\r\n        className=\"relative group\"\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.4, delay: Number(product._id) * 0.1 }}\r\n      >\r\n        <div className=\"w-full overflow-hidden rounded-md\">\r\n          <div className=\"relative h-[250px] sm:h-[350px]\">\r\n            <Image\r\n              src={images[currentImageIndex]}\r\n              alt={product.name || \"Product Image\"}\r\n              fill\r\n              quality={100}\r\n              className=\"object-contain object-center\"\r\n              sizes=\"(max-width: 768px) 50vw, 25vw\"\r\n              priority={currentImageIndex === 0}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"p-4 flex flex-col items-center text-center\">\r\n          <h2 className=\"text-[11px] sm:text-[12px] md:text-[13px] font-bold text-black uppercase tracking-wide\">\r\n            {product.name}\r\n          </h2>\r\n          <p className=\"text-[11px] sm:text-[12px] md:text-sm text-gray-600 mt-3 sm:mt-4 font-medium\">\r\n            {product.price.toLocaleString('vi-VN')} VND\r\n          </p>\r\n          <span className=\"relative text-[9px] sm:text-[10px] md:text-[11px] font-bold uppercase text-black tracking-widest mt-1 sm:mt-2 inline-block group\">\r\n            Shop This\r\n            <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-black transition-all duration-300 group-hover:w-full\" />\r\n          </span>\r\n        </div>\r\n        <div className=\"absolute top-1 right-1 sm:top-2 sm:right-2\">\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              toggleWishlist(product._id);\r\n            }}\r\n            className=\"text-black hover:text-gray-500 transition duration-300 bg-white bg-opacity-70 rounded-full p-0.5 sm:p-1\"\r\n          >\r\n            <AnimatePresence>\r\n              <motion.svg\r\n                key={isLiked ? 'filled' : 'empty'}\r\n                initial={{ scale: 0.8 }}\r\n                animate={{ scale: 1 }}\r\n                exit={{ scale: 0.8 }}\r\n                transition={{ duration: 0.2 }}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-3 w-3 sm:h-4 sm:w-4\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill={isLiked ? \"currentColor\" : \"none\"}\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={1.5}\r\n                  d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\r\n                />\r\n              </motion.svg>\r\n            </AnimatePresence>\r\n          </button>\r\n        </div>\r\n      </motion.div>\r\n    </Link>\r\n  );\r\n} "
        }
    ]
}
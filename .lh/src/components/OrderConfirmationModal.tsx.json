{
    "sourceFile": "src/components/OrderConfirmationModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1747805664719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747805679635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,71 +1,1 @@\n-import React from 'react';\r\n-\r\n-interface OrderItem {\r\n-  id: string;\r\n-  name: string;\r\n-  price: string | number;\r\n-  quantity: number;\r\n-}\r\n-\r\n-interface OrderDetails {\r\n-  orderCode: string;\r\n-  fullName: string;\r\n-  email: string;\r\n-  phone: string;\r\n-  additionalPhone: string | null;\r\n-  apartment: string | null;\r\n-  ward: string;\r\n-  district: string;\r\n-  province: string;\r\n-  items: OrderItem[];\r\n-  subtotal: number;\r\n-  shippingFee: string;\r\n-  promoCode: string | null;\r\n-  promoAmount: number;\r\n-  total: number;\r\n-  paymentMethod: string;\r\n-  status: string;\r\n-  paymentStatus: string;\r\n-  shippingStatus: string;\r\n-}\r\n-\r\n-interface OrderConfirmationModalProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-  orderDetails: OrderDetails | null;\r\n-}\r\n-\r\n-const OrderConfirmationModal: React.FC<OrderConfirmationModalProps> = ({ isOpen, onClose, orderDetails }) => {\r\n-  if (!isOpen || !orderDetails) return null;\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n-      <div className=\"bg-white p-6 rounded-lg max-w-md w-full\">\r\n-        <h2 className=\"text-xl font-bold mb-4\">Xác nhận đơn hàng</h2>\r\n-        <div className=\"space-y-2\">\r\n-          <p><strong>Mã đơn hàng:</strong> {orderDetails.orderCode}</p>\r\n-          <p><strong>Họ tên:</strong> {orderDetails.fullName}</p>\r\n-          <p><strong>Số điện thoại:</strong> {orderDetails.phone}</p>\r\n-          <p><strong>Địa chỉ:</strong> {orderDetails.apartment}, {orderDetails.ward}, {orderDetails.district}, {orderDetails.province}</p>\r\n-          <p><strong>Tổng tiền:</strong> AU${orderDetails.total}</p>\r\n-        </div>\r\n-        <div className=\"mt-6 flex justify-end space-x-4\">\r\n-          <button\r\n-            onClick={onClose}\r\n-            className=\"px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-100\"\r\n-          >\r\n-            Hủy\r\n-          </button>\r\n-          <button\r\n-            onClick={onClose}\r\n-            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n-          >\r\n-            Xác nhận\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default OrderConfirmationModal; \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747807950423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,240 @@\n- \n\\ No newline at end of file\n+import { useOrders } from '../context/OrderContext';\r\n+import { useCart } from '../context/CartContext';\r\n+import { motion } from \"framer-motion\";\r\n+import { useRouter } from 'next/navigation';\r\n+import { useState } from 'react';\r\n+\r\n+interface OrderItem {\r\n+  id: string;\r\n+  name: string;\r\n+  price: number;\r\n+  quantity: number;\r\n+  size: string;\r\n+  image: string;\r\n+}\r\n+\r\n+interface OrderDetails {\r\n+  orderCode: string;\r\n+  fullName: string;\r\n+  email: string;\r\n+  phone: string;\r\n+  additionalPhone?: string;\r\n+  address: string;\r\n+  apartment?: string;\r\n+  ward: string;\r\n+  district: string;\r\n+  province: string;\r\n+  items: OrderItem[];\r\n+  subtotal: number;\r\n+  shippingFee: number;\r\n+  promoCode?: string;\r\n+  promoAmount?: number;\r\n+  total: number;\r\n+  paymentMethod: string;\r\n+}\r\n+\r\n+interface OrderConfirmationModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  orderDetails: OrderDetails | null;\r\n+}\r\n+\r\n+export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }: OrderConfirmationModalProps) {\r\n+  const { addOrder } = useOrders();\r\n+  const { clearCart } = useCart();\r\n+  const router = useRouter();\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+\r\n+  if (!isOpen || !orderDetails) return null;\r\n+\r\n+  const handleContinueShopping = async () => {\r\n+    try {\r\n+      setIsSubmitting(true);\r\n+      \r\n+      // Chuẩn bị dữ liệu đơn hàng\r\n+      const orderData = {\r\n+        ...orderDetails,\r\n+        status: 'pending',\r\n+        paymentStatus: 'pending',\r\n+        shippingStatus: 'pending',\r\n+        createdAt: new Date().toISOString(),\r\n+        updatedAt: new Date().toISOString()\r\n+      };\r\n+\r\n+      // Gửi đơn hàng lên server\r\n+      const response = await fetch('/api/orders', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(orderData),\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n+      }\r\n+\r\n+      // Thêm đơn hàng vào context và xóa giỏ hàng\r\n+      await addOrder(data.order);\r\n+      clearCart();\r\n+      onClose();\r\n+      router.push(`/order-success/${orderDetails.orderCode}`);\r\n+    } catch (error) {\r\n+      console.error('Error creating order:', error);\r\n+      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n+      <motion.div\r\n+        initial={{ opacity: 0, y: 20 }}\r\n+        animate={{ opacity: 1, y: 0 }}\r\n+        className=\"bg-white/80 w-[95vw] max-w-[350px] md:max-w-4xl relative\"\r\n+      >\r\n+        <button\r\n+          onClick={onClose}\r\n+          className=\"absolute top-2 right-2 text-black\"\r\n+        >\r\n+          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n+            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n+            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n+          </svg>\r\n+        </button>\r\n+\r\n+        <div className=\"py-3 px-2 md:py-8 md:px-6\">\r\n+          <h2 style={{ \r\n+            fontSize: \"1em\", \r\n+            color: \"#000000\", \r\n+            textTransform: \"uppercase\", \r\n+            letterSpacing: \"0.1em\", \r\n+            marginBottom: \"12px\",\r\n+            fontWeight: \"bold\",\r\n+            textAlign: \"center\"\r\n+          }}>\r\n+            XÁC NHẬN ĐƠN HÀNG\r\n+          </h2>\r\n+\r\n+          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8\">\r\n+            {/* Left side - Scrollable Product List */}\r\n+            <div className=\"w-full md:w-1/2\">\r\n+              <div style={{ \r\n+                maxHeight: \"180px\", \r\n+                overflowY: \"auto\",\r\n+                padding: \"8px\",\r\n+                backgroundColor: \"#f8f8f8\",\r\n+                borderRadius: \"4px\"\r\n+              }}>\r\n+                {orderDetails.items.map((item, index) => (\r\n+                  <div key={index} style={{ \r\n+                    display: \"flex\", \r\n+                    alignItems: \"center\", \r\n+                    marginBottom: \"8px\",\r\n+                    padding: \"8px\",\r\n+                    backgroundColor: \"#ffffff\",\r\n+                    borderRadius: \"4px\",\r\n+                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\r\n+                  }}>\r\n+                    <img \r\n+                      src={item.image} \r\n+                      alt={item.name} \r\n+                      style={{\r\n+                        width: \"50px\",\r\n+                        height: \"50px\",\r\n+                        objectFit: \"cover\",\r\n+                        marginRight: \"8px\"\r\n+                      }}\r\n+                    />\r\n+                    <div style={{ textAlign: \"left\", flex: 1 }}>\r\n+                      <p style={{ \r\n+                        fontSize: \"0.9em\", \r\n+                        fontWeight: \"bold\",\r\n+                        marginBottom: \"2px\" \r\n+                      }}>{item.name}</p>\r\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\r\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\r\n+                      <p style={{ \r\n+                        fontSize: \"0.8em\",\r\n+                        fontWeight: \"bold\"\r\n+                      }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n+                    </div>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+            </div>\r\n+\r\n+            {/* Right side - Fixed Order Information */}\r\n+            <div className=\"w-full md:w-1/2 mt-2 md:mt-0\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\r\n+              <div style={{ marginBottom: \"8px\" }}>\r\n+                <h3 style={{ \r\n+                  fontSize: \"0.9em\", \r\n+                  fontWeight: \"bold\", \r\n+                  marginBottom: \"8px\",\r\n+                  color: \"#000000\"\r\n+                }}>Thông tin đơn hàng</h3>\r\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Họ tên: {orderDetails.fullName}</p>\r\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Email: {orderDetails.email}</p>\r\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n+                {orderDetails.additionalPhone && (\r\n+                  <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n+                )}\r\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\r\n+                  Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n+                </p>\r\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\r\n+                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n+                }</p>\r\n+                <p style={{ \r\n+                  marginBottom: \"4px\",\r\n+                  fontSize: \"0.9em\",\r\n+                  fontWeight: \"bold\",\r\n+                  color: \"#000000\"\r\n+                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n+              </div>\r\n+\r\n+              {orderDetails.paymentMethod === 'bank' && (\r\n+                <div style={{\r\n+                  backgroundColor: \"#ffffff\",\r\n+                  padding: \"8px\",\r\n+                  marginBottom: \"8px\",\r\n+                  borderRadius: \"4px\",\r\n+                  border: \"1px solid #e0e0e0\"\r\n+                }}>\r\n+                  <p style={{ fontSize: \"0.75em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n+                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n+                  </p>\r\n+                </div>\r\n+              )}\r\n+\r\n+              <button\r\n+                onClick={handleContinueShopping}\r\n+                disabled={isSubmitting}\r\n+                style={{\r\n+                  width: \"100%\",\r\n+                  padding: \"10px\",\r\n+                  fontSize: \"0.85em\",\r\n+                  color: \"#ffffff\",\r\n+                  backgroundColor: isSubmitting ? \"#666666\" : \"#000000\",\r\n+                  border: \"none\",\r\n+                  cursor: isSubmitting ? \"not-allowed\" : \"pointer\",\r\n+                  textTransform: \"uppercase\",\r\n+                  letterSpacing: \"0.1em\",\r\n+                  fontWeight: \"600\",\r\n+                  borderRadius: \"4px\",\r\n+                  marginTop: \"6px\"\r\n+                }}\r\n+              >\r\n+                {isSubmitting ? \"Đang xử lý...\" : \"Xác nhận\"}\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </motion.div>\r\n+    </div>\r\n+  );\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747808035716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,240 +1,1 @@\n-import { useOrders } from '../context/OrderContext';\r\n-import { useCart } from '../context/CartContext';\r\n-import { motion } from \"framer-motion\";\r\n-import { useRouter } from 'next/navigation';\r\n-import { useState } from 'react';\r\n-\r\n-interface OrderItem {\r\n-  id: string;\r\n-  name: string;\r\n-  price: number;\r\n-  quantity: number;\r\n-  size: string;\r\n-  image: string;\r\n-}\r\n-\r\n-interface OrderDetails {\r\n-  orderCode: string;\r\n-  fullName: string;\r\n-  email: string;\r\n-  phone: string;\r\n-  additionalPhone?: string;\r\n-  address: string;\r\n-  apartment?: string;\r\n-  ward: string;\r\n-  district: string;\r\n-  province: string;\r\n-  items: OrderItem[];\r\n-  subtotal: number;\r\n-  shippingFee: number;\r\n-  promoCode?: string;\r\n-  promoAmount?: number;\r\n-  total: number;\r\n-  paymentMethod: string;\r\n-}\r\n-\r\n-interface OrderConfirmationModalProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-  orderDetails: OrderDetails | null;\r\n-}\r\n-\r\n-export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }: OrderConfirmationModalProps) {\r\n-  const { addOrder } = useOrders();\r\n-  const { clearCart } = useCart();\r\n-  const router = useRouter();\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-\r\n-  if (!isOpen || !orderDetails) return null;\r\n-\r\n-  const handleContinueShopping = async () => {\r\n-    try {\r\n-      setIsSubmitting(true);\r\n-      \r\n-      // Chuẩn bị dữ liệu đơn hàng\r\n-      const orderData = {\r\n-        ...orderDetails,\r\n-        status: 'pending',\r\n-        paymentStatus: 'pending',\r\n-        shippingStatus: 'pending',\r\n-        createdAt: new Date().toISOString(),\r\n-        updatedAt: new Date().toISOString()\r\n-      };\r\n-\r\n-      // Gửi đơn hàng lên server\r\n-      const response = await fetch('/api/orders', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify(orderData),\r\n-      });\r\n-\r\n-      const data = await response.json();\r\n-\r\n-      if (!response.ok) {\r\n-        throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n-      }\r\n-\r\n-      // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-      await addOrder(data.order);\r\n-      clearCart();\r\n-      onClose();\r\n-      router.push(`/order-success/${orderDetails.orderCode}`);\r\n-    } catch (error) {\r\n-      console.error('Error creating order:', error);\r\n-      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-      <motion.div\r\n-        initial={{ opacity: 0, y: 20 }}\r\n-        animate={{ opacity: 1, y: 0 }}\r\n-        className=\"bg-white/80 w-[95vw] max-w-[350px] md:max-w-4xl relative\"\r\n-      >\r\n-        <button\r\n-          onClick={onClose}\r\n-          className=\"absolute top-2 right-2 text-black\"\r\n-        >\r\n-          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n-            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-          </svg>\r\n-        </button>\r\n-\r\n-        <div className=\"py-3 px-2 md:py-8 md:px-6\">\r\n-          <h2 style={{ \r\n-            fontSize: \"1em\", \r\n-            color: \"#000000\", \r\n-            textTransform: \"uppercase\", \r\n-            letterSpacing: \"0.1em\", \r\n-            marginBottom: \"12px\",\r\n-            fontWeight: \"bold\",\r\n-            textAlign: \"center\"\r\n-          }}>\r\n-            XÁC NHẬN ĐƠN HÀNG\r\n-          </h2>\r\n-\r\n-          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8\">\r\n-            {/* Left side - Scrollable Product List */}\r\n-            <div className=\"w-full md:w-1/2\">\r\n-              <div style={{ \r\n-                maxHeight: \"180px\", \r\n-                overflowY: \"auto\",\r\n-                padding: \"8px\",\r\n-                backgroundColor: \"#f8f8f8\",\r\n-                borderRadius: \"4px\"\r\n-              }}>\r\n-                {orderDetails.items.map((item, index) => (\r\n-                  <div key={index} style={{ \r\n-                    display: \"flex\", \r\n-                    alignItems: \"center\", \r\n-                    marginBottom: \"8px\",\r\n-                    padding: \"8px\",\r\n-                    backgroundColor: \"#ffffff\",\r\n-                    borderRadius: \"4px\",\r\n-                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\r\n-                  }}>\r\n-                    <img \r\n-                      src={item.image} \r\n-                      alt={item.name} \r\n-                      style={{\r\n-                        width: \"50px\",\r\n-                        height: \"50px\",\r\n-                        objectFit: \"cover\",\r\n-                        marginRight: \"8px\"\r\n-                      }}\r\n-                    />\r\n-                    <div style={{ textAlign: \"left\", flex: 1 }}>\r\n-                      <p style={{ \r\n-                        fontSize: \"0.9em\", \r\n-                        fontWeight: \"bold\",\r\n-                        marginBottom: \"2px\" \r\n-                      }}>{item.name}</p>\r\n-                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\r\n-                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\r\n-                      <p style={{ \r\n-                        fontSize: \"0.8em\",\r\n-                        fontWeight: \"bold\"\r\n-                      }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n-                    </div>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-            </div>\r\n-\r\n-            {/* Right side - Fixed Order Information */}\r\n-            <div className=\"w-full md:w-1/2 mt-2 md:mt-0\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\r\n-              <div style={{ marginBottom: \"8px\" }}>\r\n-                <h3 style={{ \r\n-                  fontSize: \"0.9em\", \r\n-                  fontWeight: \"bold\", \r\n-                  marginBottom: \"8px\",\r\n-                  color: \"#000000\"\r\n-                }}>Thông tin đơn hàng</h3>\r\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Email: {orderDetails.email}</p>\r\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n-                {orderDetails.additionalPhone && (\r\n-                  <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n-                )}\r\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\r\n-                  Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n-                </p>\r\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\r\n-                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-                }</p>\r\n-                <p style={{ \r\n-                  marginBottom: \"4px\",\r\n-                  fontSize: \"0.9em\",\r\n-                  fontWeight: \"bold\",\r\n-                  color: \"#000000\"\r\n-                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n-              </div>\r\n-\r\n-              {orderDetails.paymentMethod === 'bank' && (\r\n-                <div style={{\r\n-                  backgroundColor: \"#ffffff\",\r\n-                  padding: \"8px\",\r\n-                  marginBottom: \"8px\",\r\n-                  borderRadius: \"4px\",\r\n-                  border: \"1px solid #e0e0e0\"\r\n-                }}>\r\n-                  <p style={{ fontSize: \"0.75em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n-                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n-                  </p>\r\n-                </div>\r\n-              )}\r\n-\r\n-              <button\r\n-                onClick={handleContinueShopping}\r\n-                disabled={isSubmitting}\r\n-                style={{\r\n-                  width: \"100%\",\r\n-                  padding: \"10px\",\r\n-                  fontSize: \"0.85em\",\r\n-                  color: \"#ffffff\",\r\n-                  backgroundColor: isSubmitting ? \"#666666\" : \"#000000\",\r\n-                  border: \"none\",\r\n-                  cursor: isSubmitting ? \"not-allowed\" : \"pointer\",\r\n-                  textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\",\r\n-                  fontWeight: \"600\",\r\n-                  borderRadius: \"4px\",\r\n-                  marginTop: \"6px\"\r\n-                }}\r\n-              >\r\n-                {isSubmitting ? \"Đang xử lý...\" : \"Xác nhận\"}\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </motion.div>\r\n-    </div>\r\n-  );\r\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1747805664719,
            "name": "Commit-0",
            "content": "import React from 'react';\r\n\r\ninterface OrderItem {\r\n  id: string;\r\n  name: string;\r\n  price: string | number;\r\n  quantity: number;\r\n}\r\n\r\ninterface OrderDetails {\r\n  orderCode: string;\r\n  fullName: string;\r\n  email: string;\r\n  phone: string;\r\n  additionalPhone: string | null;\r\n  apartment: string | null;\r\n  ward: string;\r\n  district: string;\r\n  province: string;\r\n  items: OrderItem[];\r\n  subtotal: number;\r\n  shippingFee: string;\r\n  promoCode: string | null;\r\n  promoAmount: number;\r\n  total: number;\r\n  paymentMethod: string;\r\n  status: string;\r\n  paymentStatus: string;\r\n  shippingStatus: string;\r\n}\r\n\r\ninterface OrderConfirmationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  orderDetails: OrderDetails | null;\r\n}\r\n\r\nconst OrderConfirmationModal: React.FC<OrderConfirmationModalProps> = ({ isOpen, onClose, orderDetails }) => {\r\n  if (!isOpen || !orderDetails) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg max-w-md w-full\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Xác nhận đơn hàng</h2>\r\n        <div className=\"space-y-2\">\r\n          <p><strong>Mã đơn hàng:</strong> {orderDetails.orderCode}</p>\r\n          <p><strong>Họ tên:</strong> {orderDetails.fullName}</p>\r\n          <p><strong>Số điện thoại:</strong> {orderDetails.phone}</p>\r\n          <p><strong>Địa chỉ:</strong> {orderDetails.apartment}, {orderDetails.ward}, {orderDetails.district}, {orderDetails.province}</p>\r\n          <p><strong>Tổng tiền:</strong> AU${orderDetails.total}</p>\r\n        </div>\r\n        <div className=\"mt-6 flex justify-end space-x-4\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-100\"\r\n          >\r\n            Hủy\r\n          </button>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n          >\r\n            Xác nhận\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderConfirmationModal; "
        }
    ]
}
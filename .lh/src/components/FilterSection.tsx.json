{
    "sourceFile": "src/components/FilterSection.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1746893166321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747299978840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,19 +2,26 @@\n import { RefObject } from \"react\";\r\n \r\n interface FilterSectionProps {\r\n   isFilterOpen: boolean;\r\n-  filterRef: RefObject<HTMLDivElement | null>;\r\n+  filterRef: React.RefObject<HTMLDivElement>;\r\n   selectedColors: string[];\r\n   selectedSizes: string[];\r\n   handleColorChange: (color: string) => void;\r\n   handleSizeChange: (size: string) => void;\r\n   handleCloseFilter: () => void;\r\n   handleApplyFilter: () => void;\r\n   colors: string[];\r\n   sizes: string[];\r\n-  capitalizeFirstLetter: (string: string) => string;\r\n+  capitalizeFirstLetter: (str: string) => string;\r\n   groupedColors: string[];\r\n+  title: string;\r\n+  colorLabel: string;\r\n+  sizeLabel: string;\r\n+  applyLabel: string;\r\n+  resetLabel: string;\r\n+  allColorsLabel: string;\r\n+  allSizesLabel: string;\r\n }\r\n \r\n export default function FilterSection({\r\n   isFilterOpen,\r\n@@ -28,146 +35,122 @@\n   colors,\r\n   sizes,\r\n   capitalizeFirstLetter,\r\n   groupedColors,\r\n+  title,\r\n+  colorLabel,\r\n+  sizeLabel,\r\n+  applyLabel,\r\n+  resetLabel,\r\n+  allColorsLabel,\r\n+  allSizesLabel\r\n }: FilterSectionProps) {\r\n   return (\r\n-    isFilterOpen && (\r\n-      <motion.div\r\n-        ref={filterRef}\r\n-        initial={{ opacity: 0, y: -10 }}\r\n-        animate={{ opacity: 1, y: 0 }}\r\n-        exit={{ opacity: 0, y: -10 }}\r\n-        transition={{ duration: 0.3 }}\r\n-        className=\"fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white border border-gray-200 shadow-2xl p-10 z-50 rounded-lg max-w-4xl w-full\"\r\n-      >\r\n-        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-10\">\r\n-          <div className=\"w-full\">\r\n-            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">Colour</h3>\r\n-            <div className=\"grid grid-cols-2 gap-y-5 gap-x-12\">\r\n-              <label className=\"flex items-center space-x-2 cursor-pointer group\">\r\n-                <div className=\"relative flex items-center justify-center\">\r\n-                  <input\r\n-                    type=\"checkbox\"\r\n-                    checked={selectedColors.length === 0}\r\n-                    onChange={() => handleColorChange(\"all\")}\r\n-                    className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n-                  />\r\n-                  {selectedColors.length === 0 && (\r\n-                    <svg\r\n-                      xmlns=\"http://www.w3.org/2000/svg\"\r\n-                      className=\"h-3 w-3 text-white absolute\"\r\n-                      fill=\"none\"\r\n-                      viewBox=\"0 0 24 24\"\r\n-                      stroke=\"currentColor\"\r\n-                    >\r\n-                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n-                    </svg>\r\n-                  )}\r\n-                </div>\r\n-                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">All</span>\r\n-              </label>\r\n-              {colors.map((color) => (\r\n-                <label key={color} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n-                  <div className=\"relative flex items-center justify-center\">\r\n-                    <input\r\n-                      type=\"checkbox\"\r\n-                      checked={selectedColors.includes(color)}\r\n-                      onChange={() => handleColorChange(color)}\r\n-                      className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n-                    />\r\n-                    {selectedColors.includes(color) && (\r\n-                      <svg\r\n-                        xmlns=\"http://www.w3.org/2000/svg\"\r\n-                        className=\"h-3 w-3 text-white absolute\"\r\n-                        fill=\"none\"\r\n-                        viewBox=\"0 0 24 24\"\r\n-                        stroke=\"currentColor\"\r\n-                      >\r\n-                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n-                      </svg>\r\n-                    )}\r\n-                  </div>\r\n-                  <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">\r\n-                    {capitalizeFirstLetter(color)}\r\n-                  </span>\r\n-                </label>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div className=\"w-full\">\r\n-            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">Size</h3>\r\n-            <div className=\"grid grid-cols-2 gap-y-5 gap-x-12\">\r\n-              <label className=\"flex items-center space-x-2 cursor-pointer group\">\r\n-                <div className=\"relative flex items-center justify-center\">\r\n-                  <input\r\n-                    type=\"checkbox\"\r\n-                    checked={selectedSizes.length === 0}\r\n-                    onChange={() => handleSizeChange(\"all\")}\r\n-                    className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n-                  />\r\n-                  {selectedSizes.length === 0 && (\r\n-                    <svg\r\n-                      xmlns=\"http://www.w3.org/2000/svg\"\r\n-                      className=\"h-3 w-3 text-white absolute\"\r\n-                      fill=\"none\"\r\n-                      viewBox=\"0 0 24 24\"\r\n-                      stroke=\"currentColor\"\r\n-                    >\r\n-                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n-                    </svg>\r\n-                  )}\r\n-                </div>\r\n-                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">All</span>\r\n-              </label>\r\n-              {sizes.map((size) => (\r\n-                <label key={size} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n-                  <div className=\"relative flex items-center justify-center\">\r\n-                    <input\r\n-                      type=\"checkbox\"\r\n-                      checked={selectedSizes.includes(size)}\r\n-                      onChange={() => handleSizeChange(size)}\r\n-                      className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n-                    />\r\n-                    {selectedSizes.includes(size) && (\r\n-                      <svg\r\n-                        xmlns=\"http://www.w3.org/2000/svg\"\r\n-                        className=\"h-3 w-3 text-white absolute\"\r\n-                        fill=\"none\"\r\n-                        viewBox=\"0 0 24 24\"\r\n-                        stroke=\"currentColor\"\r\n-                      >\r\n-                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n-                      </svg>\r\n-                    )}\r\n-                  </div>\r\n-                  <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">\r\n-                    {size.toUpperCase()}\r\n-                  </span>\r\n-                </label>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n+    <div\r\n+      ref={filterRef}\r\n+      className={`fixed inset-0 bg-white z-50 transform transition-transform duration-300 ease-in-out ${\r\n+        isFilterOpen ? \"translate-x-0\" : \"translate-x-full\"\r\n+      }`}\r\n+    >\r\n+      <div className=\"p-4\">\r\n+        <div className=\"flex justify-between items-center mb-4\">\r\n+          <h2 className=\"text-lg font-bold\">{title}</h2>\r\n+          <button\r\n+            onClick={handleCloseFilter}\r\n+            className=\"text-gray-500 hover:text-gray-700\"\r\n+          >\r\n+            <svg\r\n+              xmlns=\"http://www.w3.org/2000/svg\"\r\n+              className=\"h-6 w-6\"\r\n+              fill=\"none\"\r\n+              viewBox=\"0 0 24 24\"\r\n+              stroke=\"currentColor\"\r\n+            >\r\n+              <path\r\n+                strokeLinecap=\"round\"\r\n+                strokeLinejoin=\"round\"\r\n+                strokeWidth={2}\r\n+                d=\"M6 18L18 6M6 6l12 12\"\r\n+              />\r\n+            </svg>\r\n+          </button>\r\n         </div>\r\n \r\n-        <div className=\"mt-8 text-center\">\r\n-          <p className=\"text-xs text-gray-600 text-center mb-4\">You can select several options at once.</p>\r\n-          <div className=\"flex justify-center space-x-4\">\r\n+        <div className=\"mb-6\">\r\n+          <h3 className=\"text-sm font-bold mb-2\">{colorLabel}</h3>\r\n+          <div className=\"flex flex-wrap gap-2\">\r\n             <button\r\n-              onClick={handleApplyFilter}\r\n-              className=\"bg-black text-white text-xs uppercase tracking-wider px-8 py-2 hover:bg-gray-800 transition duration-300\"\r\n+              onClick={() => handleColorChange(\"all\")}\r\n+              className={`px-3 py-1 text-xs border ${\r\n+                selectedColors.length === 0\r\n+                  ? \"bg-black text-white\"\r\n+                  : \"bg-white text-black\"\r\n+              }`}\r\n             >\r\n-              APPLY\r\n+              {allColorsLabel}\r\n             </button>\r\n+            {groupedColors.map((color) => (\r\n+              <button\r\n+                key={color}\r\n+                onClick={() => handleColorChange(color)}\r\n+                className={`px-3 py-1 text-xs border ${\r\n+                  selectedColors.includes(color)\r\n+                    ? \"bg-black text-white\"\r\n+                    : \"bg-white text-black\"\r\n+                }`}\r\n+              >\r\n+                {capitalizeFirstLetter(color)}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div className=\"mb-6\">\r\n+          <h3 className=\"text-sm font-bold mb-2\">{sizeLabel}</h3>\r\n+          <div className=\"flex flex-wrap gap-2\">\r\n             <button\r\n-              onClick={handleCloseFilter}\r\n-              className=\"border border-black text-black text-xs uppercase tracking-wider px-8 py-2 hover:bg-gray-100 transition duration-300\"\r\n+              onClick={() => handleSizeChange(\"all\")}\r\n+              className={`px-3 py-1 text-xs border ${\r\n+                selectedSizes.length === 0\r\n+                  ? \"bg-black text-white\"\r\n+                  : \"bg-white text-black\"\r\n+              }`}\r\n             >\r\n-              CLOSE\r\n+              {allSizesLabel}\r\n             </button>\r\n+            {sizes.map((size) => (\r\n+              <button\r\n+                key={size}\r\n+                onClick={() => handleSizeChange(size)}\r\n+                className={`px-3 py-1 text-xs border ${\r\n+                  selectedSizes.includes(size)\r\n+                    ? \"bg-black text-white\"\r\n+                    : \"bg-white text-black\"\r\n+                }`}\r\n+              >\r\n+                {size}\r\n+              </button>\r\n+            ))}\r\n           </div>\r\n         </div>\r\n-      </motion.div>\r\n-    )\r\n+\r\n+        <div className=\"flex justify-between\">\r\n+          <button\r\n+            onClick={() => {\r\n+              handleColorChange(\"all\");\r\n+              handleSizeChange(\"all\");\r\n+            }}\r\n+            className=\"px-4 py-2 text-sm border border-black\"\r\n+          >\r\n+            {resetLabel}\r\n+          </button>\r\n+          <button\r\n+            onClick={handleApplyFilter}\r\n+            className=\"px-4 py-2 text-sm bg-black text-white\"\r\n+          >\r\n+            {applyLabel}\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747300092891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,26 +2,19 @@\n import { RefObject } from \"react\";\r\n \r\n interface FilterSectionProps {\r\n   isFilterOpen: boolean;\r\n-  filterRef: React.RefObject<HTMLDivElement>;\r\n+  filterRef: RefObject<HTMLDivElement | null>;\r\n   selectedColors: string[];\r\n   selectedSizes: string[];\r\n   handleColorChange: (color: string) => void;\r\n   handleSizeChange: (size: string) => void;\r\n   handleCloseFilter: () => void;\r\n   handleApplyFilter: () => void;\r\n   colors: string[];\r\n   sizes: string[];\r\n-  capitalizeFirstLetter: (str: string) => string;\r\n+  capitalizeFirstLetter: (string: string) => string;\r\n   groupedColors: string[];\r\n-  title: string;\r\n-  colorLabel: string;\r\n-  sizeLabel: string;\r\n-  applyLabel: string;\r\n-  resetLabel: string;\r\n-  allColorsLabel: string;\r\n-  allSizesLabel: string;\r\n }\r\n \r\n export default function FilterSection({\r\n   isFilterOpen,\r\n@@ -35,122 +28,146 @@\n   colors,\r\n   sizes,\r\n   capitalizeFirstLetter,\r\n   groupedColors,\r\n-  title,\r\n-  colorLabel,\r\n-  sizeLabel,\r\n-  applyLabel,\r\n-  resetLabel,\r\n-  allColorsLabel,\r\n-  allSizesLabel\r\n }: FilterSectionProps) {\r\n   return (\r\n-    <div\r\n-      ref={filterRef}\r\n-      className={`fixed inset-0 bg-white z-50 transform transition-transform duration-300 ease-in-out ${\r\n-        isFilterOpen ? \"translate-x-0\" : \"translate-x-full\"\r\n-      }`}\r\n-    >\r\n-      <div className=\"p-4\">\r\n-        <div className=\"flex justify-between items-center mb-4\">\r\n-          <h2 className=\"text-lg font-bold\">{title}</h2>\r\n-          <button\r\n-            onClick={handleCloseFilter}\r\n-            className=\"text-gray-500 hover:text-gray-700\"\r\n-          >\r\n-            <svg\r\n-              xmlns=\"http://www.w3.org/2000/svg\"\r\n-              className=\"h-6 w-6\"\r\n-              fill=\"none\"\r\n-              viewBox=\"0 0 24 24\"\r\n-              stroke=\"currentColor\"\r\n-            >\r\n-              <path\r\n-                strokeLinecap=\"round\"\r\n-                strokeLinejoin=\"round\"\r\n-                strokeWidth={2}\r\n-                d=\"M6 18L18 6M6 6l12 12\"\r\n-              />\r\n-            </svg>\r\n-          </button>\r\n+    isFilterOpen && (\r\n+      <motion.div\r\n+        ref={filterRef}\r\n+        initial={{ opacity: 0, y: -10 }}\r\n+        animate={{ opacity: 1, y: 0 }}\r\n+        exit={{ opacity: 0, y: -10 }}\r\n+        transition={{ duration: 0.3 }}\r\n+        className=\"fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white border border-gray-200 shadow-2xl p-10 z-50 rounded-lg max-w-4xl w-full\"\r\n+      >\r\n+        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-10\">\r\n+          <div className=\"w-full\">\r\n+            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">Colour</h3>\r\n+            <div className=\"grid grid-cols-2 gap-y-5 gap-x-12\">\r\n+              <label className=\"flex items-center space-x-2 cursor-pointer group\">\r\n+                <div className=\"relative flex items-center justify-center\">\r\n+                  <input\r\n+                    type=\"checkbox\"\r\n+                    checked={selectedColors.length === 0}\r\n+                    onChange={() => handleColorChange(\"all\")}\r\n+                    className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n+                  />\r\n+                  {selectedColors.length === 0 && (\r\n+                    <svg\r\n+                      xmlns=\"http://www.w3.org/2000/svg\"\r\n+                      className=\"h-3 w-3 text-white absolute\"\r\n+                      fill=\"none\"\r\n+                      viewBox=\"0 0 24 24\"\r\n+                      stroke=\"currentColor\"\r\n+                    >\r\n+                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n+                    </svg>\r\n+                  )}\r\n+                </div>\r\n+                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">All</span>\r\n+              </label>\r\n+              {colors.map((color) => (\r\n+                <label key={color} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n+                  <div className=\"relative flex items-center justify-center\">\r\n+                    <input\r\n+                      type=\"checkbox\"\r\n+                      checked={selectedColors.includes(color)}\r\n+                      onChange={() => handleColorChange(color)}\r\n+                      className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n+                    />\r\n+                    {selectedColors.includes(color) && (\r\n+                      <svg\r\n+                        xmlns=\"http://www.w3.org/2000/svg\"\r\n+                        className=\"h-3 w-3 text-white absolute\"\r\n+                        fill=\"none\"\r\n+                        viewBox=\"0 0 24 24\"\r\n+                        stroke=\"currentColor\"\r\n+                      >\r\n+                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n+                      </svg>\r\n+                    )}\r\n+                  </div>\r\n+                  <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">\r\n+                    {capitalizeFirstLetter(color)}\r\n+                  </span>\r\n+                </label>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"w-full\">\r\n+            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">Size</h3>\r\n+            <div className=\"grid grid-cols-2 gap-y-5 gap-x-12\">\r\n+              <label className=\"flex items-center space-x-2 cursor-pointer group\">\r\n+                <div className=\"relative flex items-center justify-center\">\r\n+                  <input\r\n+                    type=\"checkbox\"\r\n+                    checked={selectedSizes.length === 0}\r\n+                    onChange={() => handleSizeChange(\"all\")}\r\n+                    className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n+                  />\r\n+                  {selectedSizes.length === 0 && (\r\n+                    <svg\r\n+                      xmlns=\"http://www.w3.org/2000/svg\"\r\n+                      className=\"h-3 w-3 text-white absolute\"\r\n+                      fill=\"none\"\r\n+                      viewBox=\"0 0 24 24\"\r\n+                      stroke=\"currentColor\"\r\n+                    >\r\n+                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n+                    </svg>\r\n+                  )}\r\n+                </div>\r\n+                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">All</span>\r\n+              </label>\r\n+              {sizes.map((size) => (\r\n+                <label key={size} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n+                  <div className=\"relative flex items-center justify-center\">\r\n+                    <input\r\n+                      type=\"checkbox\"\r\n+                      checked={selectedSizes.includes(size)}\r\n+                      onChange={() => handleSizeChange(size)}\r\n+                      className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n+                    />\r\n+                    {selectedSizes.includes(size) && (\r\n+                      <svg\r\n+                        xmlns=\"http://www.w3.org/2000/svg\"\r\n+                        className=\"h-3 w-3 text-white absolute\"\r\n+                        fill=\"none\"\r\n+                        viewBox=\"0 0 24 24\"\r\n+                        stroke=\"currentColor\"\r\n+                      >\r\n+                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n+                      </svg>\r\n+                    )}\r\n+                  </div>\r\n+                  <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">\r\n+                    {size.toUpperCase()}\r\n+                  </span>\r\n+                </label>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n         </div>\r\n \r\n-        <div className=\"mb-6\">\r\n-          <h3 className=\"text-sm font-bold mb-2\">{colorLabel}</h3>\r\n-          <div className=\"flex flex-wrap gap-2\">\r\n+        <div className=\"mt-8 text-center\">\r\n+          <p className=\"text-xs text-gray-600 text-center mb-4\">You can select several options at once.</p>\r\n+          <div className=\"flex justify-center space-x-4\">\r\n             <button\r\n-              onClick={() => handleColorChange(\"all\")}\r\n-              className={`px-3 py-1 text-xs border ${\r\n-                selectedColors.length === 0\r\n-                  ? \"bg-black text-white\"\r\n-                  : \"bg-white text-black\"\r\n-              }`}\r\n+              onClick={handleApplyFilter}\r\n+              className=\"bg-black text-white text-xs uppercase tracking-wider px-8 py-2 hover:bg-gray-800 transition duration-300\"\r\n             >\r\n-              {allColorsLabel}\r\n+              APPLY\r\n             </button>\r\n-            {groupedColors.map((color) => (\r\n-              <button\r\n-                key={color}\r\n-                onClick={() => handleColorChange(color)}\r\n-                className={`px-3 py-1 text-xs border ${\r\n-                  selectedColors.includes(color)\r\n-                    ? \"bg-black text-white\"\r\n-                    : \"bg-white text-black\"\r\n-                }`}\r\n-              >\r\n-                {capitalizeFirstLetter(color)}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <div className=\"mb-6\">\r\n-          <h3 className=\"text-sm font-bold mb-2\">{sizeLabel}</h3>\r\n-          <div className=\"flex flex-wrap gap-2\">\r\n             <button\r\n-              onClick={() => handleSizeChange(\"all\")}\r\n-              className={`px-3 py-1 text-xs border ${\r\n-                selectedSizes.length === 0\r\n-                  ? \"bg-black text-white\"\r\n-                  : \"bg-white text-black\"\r\n-              }`}\r\n+              onClick={handleCloseFilter}\r\n+              className=\"border border-black text-black text-xs uppercase tracking-wider px-8 py-2 hover:bg-gray-100 transition duration-300\"\r\n             >\r\n-              {allSizesLabel}\r\n+              CLOSE\r\n             </button>\r\n-            {sizes.map((size) => (\r\n-              <button\r\n-                key={size}\r\n-                onClick={() => handleSizeChange(size)}\r\n-                className={`px-3 py-1 text-xs border ${\r\n-                  selectedSizes.includes(size)\r\n-                    ? \"bg-black text-white\"\r\n-                    : \"bg-white text-black\"\r\n-                }`}\r\n-              >\r\n-                {size}\r\n-              </button>\r\n-            ))}\r\n           </div>\r\n         </div>\r\n-\r\n-        <div className=\"flex justify-between\">\r\n-          <button\r\n-            onClick={() => {\r\n-              handleColorChange(\"all\");\r\n-              handleSizeChange(\"all\");\r\n-            }}\r\n-            className=\"px-4 py-2 text-sm border border-black\"\r\n-          >\r\n-            {resetLabel}\r\n-          </button>\r\n-          <button\r\n-            onClick={handleApplyFilter}\r\n-            className=\"px-4 py-2 text-sm bg-black text-white\"\r\n-          >\r\n-            {applyLabel}\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n+      </motion.div>\r\n+    )\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747300639374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,19 +2,26 @@\n import { RefObject } from \"react\";\r\n \r\n interface FilterSectionProps {\r\n   isFilterOpen: boolean;\r\n-  filterRef: RefObject<HTMLDivElement | null>;\r\n+  filterRef: React.RefObject<HTMLDivElement>;\r\n   selectedColors: string[];\r\n   selectedSizes: string[];\r\n   handleColorChange: (color: string) => void;\r\n   handleSizeChange: (size: string) => void;\r\n   handleCloseFilter: () => void;\r\n   handleApplyFilter: () => void;\r\n   colors: string[];\r\n   sizes: string[];\r\n-  capitalizeFirstLetter: (string: string) => string;\r\n+  capitalizeFirstLetter: (str: string) => string;\r\n   groupedColors: string[];\r\n+  title: string;\r\n+  colorLabel: string;\r\n+  sizeLabel: string;\r\n+  applyLabel: string;\r\n+  resetLabel: string;\r\n+  allColorsLabel: string;\r\n+  allSizesLabel: string;\r\n }\r\n \r\n export default function FilterSection({\r\n   isFilterOpen,\r\n@@ -28,8 +35,15 @@\n   colors,\r\n   sizes,\r\n   capitalizeFirstLetter,\r\n   groupedColors,\r\n+  title,\r\n+  colorLabel,\r\n+  sizeLabel,\r\n+  applyLabel,\r\n+  resetLabel,\r\n+  allColorsLabel,\r\n+  allSizesLabel,\r\n }: FilterSectionProps) {\r\n   return (\r\n     isFilterOpen && (\r\n       <motion.div\r\n"
                },
                {
                    "date": 1747302877288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,16 @@\n import { motion } from \"framer-motion\";\r\n import { RefObject } from \"react\";\r\n \r\n+interface ColorLabel {\r\n+  value: string;\r\n+  label: string;\r\n+}\r\n+interface SizeLabel {\r\n+  value: string;\r\n+  label: string;\r\n+}\r\n+\r\n interface FilterSectionProps {\r\n   isFilterOpen: boolean;\r\n   filterRef: React.RefObject<HTMLDivElement>;\r\n   selectedColors: string[];\r\n@@ -20,8 +29,12 @@\n   applyLabel: string;\r\n   resetLabel: string;\r\n   allColorsLabel: string;\r\n   allSizesLabel: string;\r\n+  colorLabels: ColorLabel[];\r\n+  sizeLabels: SizeLabel[];\r\n+  selectHint: string;\r\n+  closeLabel: string;\r\n }\r\n \r\n export default function FilterSection({\r\n   isFilterOpen,\r\n@@ -42,8 +55,12 @@\n   applyLabel,\r\n   resetLabel,\r\n   allColorsLabel,\r\n   allSizesLabel,\r\n+  colorLabels,\r\n+  sizeLabels,\r\n+  selectHint,\r\n+  closeLabel,\r\n }: FilterSectionProps) {\r\n   return (\r\n     isFilterOpen && (\r\n       <motion.div\r\n@@ -55,9 +72,9 @@\n         className=\"fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white border border-gray-200 shadow-2xl p-10 z-50 rounded-lg max-w-4xl w-full\"\r\n       >\r\n         <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-10\">\r\n           <div className=\"w-full\">\r\n-            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">Colour</h3>\r\n+            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">{colorLabel}</h3>\r\n             <div className=\"grid grid-cols-2 gap-y-5 gap-x-12\">\r\n               <label className=\"flex items-center space-x-2 cursor-pointer group\">\r\n                 <div className=\"relative flex items-center justify-center\">\r\n                   <input\r\n@@ -77,20 +94,20 @@\n                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                     </svg>\r\n                   )}\r\n                 </div>\r\n-                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">All</span>\r\n+                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">{allColorsLabel}</span>\r\n               </label>\r\n-              {colors.map((color) => (\r\n-                <label key={color} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n+              {colorLabels.map((color) => (\r\n+                <label key={color.value} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n                   <div className=\"relative flex items-center justify-center\">\r\n                     <input\r\n                       type=\"checkbox\"\r\n-                      checked={selectedColors.includes(color)}\r\n-                      onChange={() => handleColorChange(color)}\r\n+                      checked={selectedColors.includes(color.value)}\r\n+                      onChange={() => handleColorChange(color.value)}\r\n                       className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n                     />\r\n-                    {selectedColors.includes(color) && (\r\n+                    {selectedColors.includes(color.value) && (\r\n                       <svg\r\n                         xmlns=\"http://www.w3.org/2000/svg\"\r\n                         className=\"h-3 w-3 text-white absolute\"\r\n                         fill=\"none\"\r\n@@ -101,17 +118,17 @@\n                       </svg>\r\n                     )}\r\n                   </div>\r\n                   <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">\r\n-                    {capitalizeFirstLetter(color)}\r\n+                    {color.label}\r\n                   </span>\r\n                 </label>\r\n               ))}\r\n             </div>\r\n           </div>\r\n \r\n           <div className=\"w-full\">\r\n-            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">Size</h3>\r\n+            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">{sizeLabel}</h3>\r\n             <div className=\"grid grid-cols-2 gap-y-5 gap-x-12\">\r\n               <label className=\"flex items-center space-x-2 cursor-pointer group\">\r\n                 <div className=\"relative flex items-center justify-center\">\r\n                   <input\r\n@@ -131,20 +148,20 @@\n                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                     </svg>\r\n                   )}\r\n                 </div>\r\n-                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">All</span>\r\n+                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">{allSizesLabel}</span>\r\n               </label>\r\n-              {sizes.map((size) => (\r\n-                <label key={size} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n+              {sizeLabels.map((size) => (\r\n+                <label key={size.value} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n                   <div className=\"relative flex items-center justify-center\">\r\n                     <input\r\n                       type=\"checkbox\"\r\n-                      checked={selectedSizes.includes(size)}\r\n-                      onChange={() => handleSizeChange(size)}\r\n+                      checked={selectedSizes.includes(size.value)}\r\n+                      onChange={() => handleSizeChange(size.value)}\r\n                       className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n                     />\r\n-                    {selectedSizes.includes(size) && (\r\n+                    {selectedSizes.includes(size.value) && (\r\n                       <svg\r\n                         xmlns=\"http://www.w3.org/2000/svg\"\r\n                         className=\"h-3 w-3 text-white absolute\"\r\n                         fill=\"none\"\r\n@@ -155,30 +172,30 @@\n                       </svg>\r\n                     )}\r\n                   </div>\r\n                   <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">\r\n-                    {size.toUpperCase()}\r\n+                    {size.label}\r\n                   </span>\r\n                 </label>\r\n               ))}\r\n             </div>\r\n           </div>\r\n         </div>\r\n \r\n         <div className=\"mt-8 text-center\">\r\n-          <p className=\"text-xs text-gray-600 text-center mb-4\">You can select several options at once.</p>\r\n+          <p className=\"text-xs text-gray-600 text-center mb-4\">{selectHint}</p>\r\n           <div className=\"flex justify-center space-x-4\">\r\n             <button\r\n               onClick={handleApplyFilter}\r\n               className=\"bg-black text-white text-xs uppercase tracking-wider px-8 py-2 hover:bg-gray-800 transition duration-300\"\r\n             >\r\n-              APPLY\r\n+              {applyLabel}\r\n             </button>\r\n             <button\r\n               onClick={handleCloseFilter}\r\n               className=\"border border-black text-black text-xs uppercase tracking-wider px-8 py-2 hover:bg-gray-100 transition duration-300\"\r\n             >\r\n-              CLOSE\r\n+              {closeLabel}\r\n             </button>\r\n           </div>\r\n         </div>\r\n       </motion.div>\r\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { motion } from \"framer-motion\";\r\nimport { RefObject } from \"react\";\r\n\r\ninterface FilterSectionProps {\r\n  isFilterOpen: boolean;\r\n  filterRef: RefObject<HTMLDivElement | null>;\r\n  selectedColors: string[];\r\n  selectedSizes: string[];\r\n  handleColorChange: (color: string) => void;\r\n  handleSizeChange: (size: string) => void;\r\n  handleCloseFilter: () => void;\r\n  handleApplyFilter: () => void;\r\n  colors: string[];\r\n  sizes: string[];\r\n  capitalizeFirstLetter: (string: string) => string;\r\n  groupedColors: string[];\r\n}\r\n\r\nexport default function FilterSection({\r\n  isFilterOpen,\r\n  filterRef,\r\n  selectedColors,\r\n  selectedSizes,\r\n  handleColorChange,\r\n  handleSizeChange,\r\n  handleCloseFilter,\r\n  handleApplyFilter,\r\n  colors,\r\n  sizes,\r\n  capitalizeFirstLetter,\r\n  groupedColors,\r\n}: FilterSectionProps) {\r\n  return (\r\n    isFilterOpen && (\r\n      <motion.div\r\n        ref={filterRef}\r\n        initial={{ opacity: 0, y: -10 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -10 }}\r\n        transition={{ duration: 0.3 }}\r\n        className=\"fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white border border-gray-200 shadow-2xl p-10 z-50 rounded-lg max-w-4xl w-full\"\r\n      >\r\n        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-10\">\r\n          <div className=\"w-full\">\r\n            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">Colour</h3>\r\n            <div className=\"grid grid-cols-2 gap-y-5 gap-x-12\">\r\n              <label className=\"flex items-center space-x-2 cursor-pointer group\">\r\n                <div className=\"relative flex items-center justify-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedColors.length === 0}\r\n                    onChange={() => handleColorChange(\"all\")}\r\n                    className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n                  />\r\n                  {selectedColors.length === 0 && (\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-3 w-3 text-white absolute\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">All</span>\r\n              </label>\r\n              {colors.map((color) => (\r\n                <label key={color} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n                  <div className=\"relative flex items-center justify-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedColors.includes(color)}\r\n                      onChange={() => handleColorChange(color)}\r\n                      className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n                    />\r\n                    {selectedColors.includes(color) && (\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-3 w-3 text-white absolute\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                  <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">\r\n                    {capitalizeFirstLetter(color)}\r\n                  </span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"w-full\">\r\n            <h3 className=\"text-base uppercase tracking-wider mb-5 border-b pb-2 text-black\">Size</h3>\r\n            <div className=\"grid grid-cols-2 gap-y-5 gap-x-12\">\r\n              <label className=\"flex items-center space-x-2 cursor-pointer group\">\r\n                <div className=\"relative flex items-center justify-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedSizes.length === 0}\r\n                    onChange={() => handleSizeChange(\"all\")}\r\n                    className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n                  />\r\n                  {selectedSizes.length === 0 && (\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-3 w-3 text-white absolute\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">All</span>\r\n              </label>\r\n              {sizes.map((size) => (\r\n                <label key={size} className=\"flex items-center space-x-2 cursor-pointer group\">\r\n                  <div className=\"relative flex items-center justify-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedSizes.includes(size)}\r\n                      onChange={() => handleSizeChange(size)}\r\n                      className=\"appearance-none h-4 w-4 border border-gray-300 rounded checked:bg-black checked:border-black focus:outline-none transition cursor-pointer\"\r\n                    />\r\n                    {selectedSizes.includes(size) && (\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-3 w-3 text-white absolute\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                  <span className=\"text-[11px] font-normal tracking-wider text-black group-hover:text-gray-700\">\r\n                    {size.toUpperCase()}\r\n                  </span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-8 text-center\">\r\n          <p className=\"text-xs text-gray-600 text-center mb-4\">You can select several options at once.</p>\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <button\r\n              onClick={handleApplyFilter}\r\n              className=\"bg-black text-white text-xs uppercase tracking-wider px-8 py-2 hover:bg-gray-800 transition duration-300\"\r\n            >\r\n              APPLY\r\n            </button>\r\n            <button\r\n              onClick={handleCloseFilter}\r\n              className=\"border border-black text-black text-xs uppercase tracking-wider px-8 py-2 hover:bg-gray-100 transition duration-300\"\r\n            >\r\n              CLOSE\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    )\r\n  );\r\n}"
        }
    ]
}
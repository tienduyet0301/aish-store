{
    "sourceFile": "src/components/AnnouncementBanner.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746893166191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748657845596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,12 +35,18 @@\n       const data = await response.json();\r\n       console.log(\"API Response:\", data);\r\n       \r\n       if (data.ok) {\r\n-        console.log(\"Setting announcement:\", data.announcement);\r\n-        console.log(\"Setting isActive:\", data.isAnnouncementActive);\r\n-        setAnnouncement(data.announcement);\r\n-        setIsActive(data.isAnnouncementActive);\r\n+        const announcementNotif = data.notifications.find((notif: any) => notif.type === 'announcement');\r\n+        if (announcementNotif) {\r\n+          console.log(\"Setting announcement:\", announcementNotif.content);\r\n+          console.log(\"Setting isActive:\", announcementNotif.isActive);\r\n+          setAnnouncement(announcementNotif.content || '');\r\n+          setIsActive(announcementNotif.isActive || false);\r\n+        } else {\r\n+          setAnnouncement('');\r\n+          setIsActive(false);\r\n+        }\r\n       }\r\n     } catch (error) {\r\n       console.error(\"Error fetching announcement:\", error);\r\n     }\r\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { usePathname } from \"next/navigation\";\r\n\r\nexport default function AnnouncementBanner() {\r\n  const [announcement, setAnnouncement] = useState(\"\");\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isTransparent, setIsTransparent] = useState(true);\r\n  const pathname = usePathname();\r\n\r\n  useEffect(() => {\r\n    console.log(\"Component mounted\");\r\n    fetchAnnouncement();\r\n    const interval = setInterval(fetchAnnouncement, 30000);\r\n\r\n    const handleScroll = () => {\r\n      const scrollPosition = window.scrollY;\r\n      setIsTransparent(scrollPosition < 10);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    handleScroll(); // Kiểm tra vị trí ban đầu\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const fetchAnnouncement = async () => {\r\n    try {\r\n      console.log(\"Fetching announcement...\");\r\n      const response = await fetch(\"/api/admin/notifications\");\r\n      const data = await response.json();\r\n      console.log(\"API Response:\", data);\r\n      \r\n      if (data.ok) {\r\n        console.log(\"Setting announcement:\", data.announcement);\r\n        console.log(\"Setting isActive:\", data.isAnnouncementActive);\r\n        setAnnouncement(data.announcement);\r\n        setIsActive(data.isAnnouncementActive);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching announcement:\", error);\r\n    }\r\n  };\r\n\r\n  console.log(\"Render state:\", { announcement, isActive });\r\n\r\n  // Chỉ hiển thị ở trang chủ (pathname === '/')\r\n  if (!isActive || !announcement || pathname !== '/') {\r\n    console.log(\"Not showing banner:\", { isActive, announcement, pathname });\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`w-full fixed top-[60px] z-40 overflow-hidden transition-colors duration-300 ${isTransparent ? 'bg-transparent' : 'bg-white'}`}>\r\n      <div className=\"flex whitespace-nowrap\">\r\n        <motion.div\r\n          animate={{\r\n            x: [0, -1000],\r\n          }}\r\n          transition={{\r\n            x: {\r\n              repeat: Infinity,\r\n              repeatType: \"loop\",\r\n              duration: 12,\r\n              ease: \"linear\",\r\n            },\r\n          }}\r\n          className=\"py-2 text-sm font-medium text-black\"\r\n        >\r\n          {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement}\r\n        </motion.div>\r\n        <motion.div\r\n          animate={{\r\n            x: [0, -1000],\r\n          }}\r\n          transition={{\r\n            x: {\r\n              repeat: Infinity,\r\n              repeatType: \"loop\",\r\n              duration: 12,\r\n              ease: \"linear\",\r\n            },\r\n          }}\r\n          className=\"py-2 text-sm font-medium text-black\"\r\n        >\r\n          {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {announcement}\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
{
    "sourceFile": "src/components/SortSection.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893166651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { motion } from \"framer-motion\";\r\nimport { RefObject } from \"react\";\r\n\r\ninterface SortOption {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SortSectionProps {\r\n  isSortOpen: boolean;\r\n  sortRef: RefObject<HTMLDivElement | null>;\r\n  selectedSort: string;\r\n  handleSortChange: (value: string) => void;\r\n  handleCloseSort: () => void;\r\n  handleApplySort: () => void;\r\n  sortOptions: SortOption[];\r\n  hoveredButton?: string | null;\r\n  activeButton?: string;\r\n  onMouseEnter?: () => void;\r\n  onMouseLeave?: () => void;\r\n}\r\n\r\nexport default function SortSection({\r\n  isSortOpen,\r\n  sortRef,\r\n  selectedSort,\r\n  handleSortChange,\r\n  handleCloseSort,\r\n  handleApplySort,\r\n  sortOptions = [],\r\n  hoveredButton,\r\n  activeButton,\r\n  onMouseEnter,\r\n  onMouseLeave,\r\n}: SortSectionProps) {\r\n  const getSortOptionText = () => {\r\n    if (!sortOptions || sortOptions.length === 0) return \"\";\r\n    const found = sortOptions.find((opt) => opt.value === selectedSort);\r\n    return found ? found.label : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"inline-block\" ref={sortRef}>\r\n      <button\r\n        onClick={handleApplySort}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        className=\"text-[10px] sm:text-[10px] font-bold uppercase tracking-wider text-black hover:text-gray-600 flex items-center relative py-1\"\r\n      >\r\n        <span className=\"px-1\">Sort by: {getSortOptionText()}</span>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-2 w-2 sm:h-3 sm:w-3 ml-1\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n        </svg>\r\n        <div className=\"absolute bottom-[-2px] left-0 right-0 h-[1px] overflow-hidden\">\r\n          <motion.div\r\n            className=\"absolute inset-0 bg-black\"\r\n            initial={{ width: \"100%\", left: 0 }}\r\n            animate={{ width: \"100%\", left: 0 }}\r\n            transition={{ duration: 0 }}\r\n          />\r\n        </div>\r\n      </button>\r\n\r\n      {isSortOpen && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          exit={{ opacity: 0, y: -10 }}\r\n          transition={{ duration: 0.3 }}\r\n          className=\"absolute right-0 mt-1 bg-white border border-gray-200 shadow-md z-10 min-w-[200px]\"\r\n        >\r\n          <ul className=\"py-2\">\r\n            {sortOptions.map((option) => (\r\n              <li key={option.value}>\r\n                <button\r\n                  onClick={() => {\r\n                    handleSortChange(option.value);\r\n                    handleCloseSort();\r\n                  }}\r\n                  className={`w-full text-left px-4 py-2 text-sm font-medium ${\r\n                    selectedSort === option.value ? \"bg-black text-white\" : \"text-black hover:bg-gray-100\"\r\n                  }`}\r\n                >\r\n                  {option.label}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n}"
        }
    ]
}
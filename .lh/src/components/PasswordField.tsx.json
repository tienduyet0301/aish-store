{
    "sourceFile": "src/components/PasswordField.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1747642521945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748661362840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,8 @@\n           onBlur={onBlur}\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n             ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n-          placeholder=\"Enter your password\"\r\n           autoComplete=\"new-password\"\r\n           title=\"Password\"\r\n         />\r\n         <button\r\n"
                },
                {
                    "date": 1749612773088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n           scale: value ? 0.75 : 1,\r\n           translateY: value ? \"0\" : \"-50%\",\r\n         }}\r\n         animate={{\r\n+          \r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n           left: isFocused || value ? \"4px\" : \"12px\",\r\n           scale: isFocused || value ? 0.75 : 1,\r\n           translateY: isFocused || value ? \"0\" : \"-50%\",\r\n"
                },
                {
                    "date": 1749612797583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,27 @@\n \"use client\";\r\n \r\n-import { useState } from \"react\";\r\n+import { useState, useEffect, useCallback } from \"react\";\r\n import { motion } from \"framer-motion\";\r\n import { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n+import { AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n \r\n+interface PasswordValidation {\r\n+  hasMinLength: boolean;\r\n+  hasUpperCase: boolean;\r\n+  hasLowerCase: boolean;\r\n+  hasNumber: boolean;\r\n+  hasSpecialChar: boolean;\r\n+}\r\n+\r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n   isFocused: boolean;\r\n   onFocus: () => void;\r\n   onBlur: () => void;\r\n   hasError: boolean;\r\n+  passwordValidation: PasswordValidation;\r\n }\r\n \r\n export function PasswordField({\r\n   value,\r\n@@ -19,11 +29,18 @@\n   isFocused,\r\n   onFocus,\r\n   onBlur,\r\n   hasError,\r\n+  passwordValidation,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n \r\n+  const handleBlur = useCallback(() => {\r\n+    setIsPasswordTouched(true);\r\n+    onBlur();\r\n+  }, [onBlur]);\r\n+\r\n   return (\r\n     <>\r\n       <motion.label\r\n         className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${hasError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n@@ -52,9 +69,9 @@\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n           onFocus={onFocus}\r\n-          onBlur={onBlur}\r\n+          onBlur={handleBlur}\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n             ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n@@ -73,7 +90,28 @@\n             <FiEye className=\"w-4 h-4 md:w-5 md:h-5\" />\r\n           )}\r\n         </button>\r\n       </div>\r\n+\r\n+      <div className=\"mt-1 space-y-1 pl-1\">\r\n+        {[\r\n+          { key: \"hasMinLength\", text: \"Please enter at least 8 characters\" },\r\n+          { key: \"hasUpperCase\", text: \"Please enter at least one uppercase letter\" },\r\n+          { key: \"hasLowerCase\", text: \"Please enter at least one lowercase letter\" },\r\n+          { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n+          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\\\":{}|<>) \" },\r\n+        ].map((req) => (\r\n+          <div key={req.key} className=\"flex items-center gap-2\">\r\n+            {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n+              <AiOutlineCheck className=\"text-green-500 min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4\" />\r\n+            ) : (\r\n+              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4`} />\r\n+            )}\r\n+            <p className={`text-[7px] md:text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n+              {req.text}\r\n+            </p>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n     </>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1749612830756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,17 @@\n \"use client\";\r\n \r\n-import { useState, useEffect, useCallback } from \"react\";\r\n+import { useState } from \"react\";\r\n import { motion } from \"framer-motion\";\r\n import { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n-import { AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n \r\n-interface PasswordValidation {\r\n-  hasMinLength: boolean;\r\n-  hasUpperCase: boolean;\r\n-  hasLowerCase: boolean;\r\n-  hasNumber: boolean;\r\n-  hasSpecialChar: boolean;\r\n-}\r\n-\r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n   isFocused: boolean;\r\n   onFocus: () => void;\r\n   onBlur: () => void;\r\n   hasError: boolean;\r\n-  passwordValidation: PasswordValidation;\r\n }\r\n \r\n export function PasswordField({\r\n   value,\r\n@@ -29,18 +19,11 @@\n   isFocused,\r\n   onFocus,\r\n   onBlur,\r\n   hasError,\r\n-  passwordValidation,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n-  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n \r\n-  const handleBlur = useCallback(() => {\r\n-    setIsPasswordTouched(true);\r\n-    onBlur();\r\n-  }, [onBlur]);\r\n-\r\n   return (\r\n     <>\r\n       <motion.label\r\n         className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${hasError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n@@ -69,9 +52,9 @@\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n           onFocus={onFocus}\r\n-          onBlur={handleBlur}\r\n+          onBlur={onBlur}\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n             ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n@@ -90,28 +73,7 @@\n             <FiEye className=\"w-4 h-4 md:w-5 md:h-5\" />\r\n           )}\r\n         </button>\r\n       </div>\r\n-\r\n-      <div className=\"mt-1 space-y-1 pl-1\">\r\n-        {[\r\n-          { key: \"hasMinLength\", text: \"Please enter at least 8 characters\" },\r\n-          { key: \"hasUpperCase\", text: \"Please enter at least one uppercase letter\" },\r\n-          { key: \"hasLowerCase\", text: \"Please enter at least one lowercase letter\" },\r\n-          { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n-          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\\\":{}|<>) \" },\r\n-        ].map((req) => (\r\n-          <div key={req.key} className=\"flex items-center gap-2\">\r\n-            {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n-              <AiOutlineCheck className=\"text-green-500 min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4\" />\r\n-            ) : (\r\n-              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4`} />\r\n-            )}\r\n-            <p className={`text-[7px] md:text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n-              {req.text}\r\n-            </p>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n     </>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1749613013984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n \"use client\";\r\n \r\n-import { useState } from \"react\";\r\n+import { useState, useEffect } from \"react\";\r\n import { motion } from \"framer-motion\";\r\n import { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n+import { AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n \r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n@@ -12,8 +13,20 @@\n   onBlur: () => void;\r\n   hasError: boolean;\r\n }\r\n \r\n+interface PasswordValidation {\r\n+  hasLength: boolean;\r\n+  hasNumber: boolean;\r\n+  hasSpecialChar: boolean;\r\n+}\r\n+\r\n+const validatePassword = (password: string): PasswordValidation => ({\r\n+  hasLength: password.length >= 8,\r\n+  hasNumber: /\\d/.test(password),\r\n+  hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\r\n+});\r\n+\r\n export function PasswordField({\r\n   value,\r\n   onChange,\r\n   isFocused,\r\n@@ -21,21 +34,34 @@\n   onBlur,\r\n   hasError,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n+  const [passwordValidation, setPasswordValidation] = useState<PasswordValidation>(validatePassword(value));\r\n \r\n+  useEffect(() => {\r\n+    setPasswordValidation(validatePassword(value));\r\n+  }, [value]);\r\n+\r\n+  const handlePasswordBlur = () => {\r\n+    setIsPasswordTouched(true);\r\n+    onBlur();\r\n+  };\r\n+\r\n+  const isValid = Object.values(passwordValidation).every(Boolean);\r\n+  const showError = hasError || (isPasswordTouched && !isValid);\r\n+\r\n   return (\r\n-    <>\r\n+    <div className=\"relative w-full mt-2\">\r\n       <motion.label\r\n-        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${hasError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n         initial={{ \r\n           top: value ? \"5px\" : \"50%\", \r\n           left: value ? \"4px\" : \"12px\",\r\n           scale: value ? 0.75 : 1,\r\n           translateY: value ? \"0\" : \"-50%\",\r\n         }}\r\n         animate={{\r\n-          \r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n           left: isFocused || value ? \"4px\" : \"12px\",\r\n           scale: isFocused || value ? 0.75 : 1,\r\n           translateY: isFocused || value ? \"0\" : \"-50%\",\r\n@@ -52,11 +78,12 @@\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n           onFocus={onFocus}\r\n-          onBlur={onBlur}\r\n+          onBlur={handlePasswordBlur}\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n-            ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n+              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n           title=\"Password\"\r\n         />\r\n@@ -73,7 +100,27 @@\n             <FiEye className=\"w-4 h-4 md:w-5 md:h-5\" />\r\n           )}\r\n         </button>\r\n       </div>\r\n-    </>\r\n+      \r\n+      {/* Password Requirements */}\r\n+      <div className=\"mt-1 space-y-1 pl-1\">\r\n+        {[\r\n+          { key: \"hasLength\", text: \"Please enter at least 8 characters\" },\r\n+          { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n+          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n+        ].map((req) => (\r\n+          <div key={req.key} className=\"flex items-center gap-2\">\r\n+            {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n+              <AiOutlineCheck className=\"text-green-500 min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4\" />\r\n+            ) : (\r\n+              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4`} />\r\n+            )}\r\n+            <p className={`text-[7px] md:text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n+              {req.text}\r\n+            </p>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1749613153437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n \"use client\";\r\n \r\n-import { useState, useEffect } from \"react\";\r\n+import { useState } from \"react\";\r\n import { motion } from \"framer-motion\";\r\n import { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n-import { AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n \r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n@@ -13,20 +12,8 @@\n   onBlur: () => void;\r\n   hasError: boolean;\r\n }\r\n \r\n-interface PasswordValidation {\r\n-  hasLength: boolean;\r\n-  hasNumber: boolean;\r\n-  hasSpecialChar: boolean;\r\n-}\r\n-\r\n-const validatePassword = (password: string): PasswordValidation => ({\r\n-  hasLength: password.length >= 8,\r\n-  hasNumber: /\\d/.test(password),\r\n-  hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\r\n-});\r\n-\r\n export function PasswordField({\r\n   value,\r\n   onChange,\r\n   isFocused,\r\n@@ -34,34 +21,21 @@\n   onBlur,\r\n   hasError,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n-  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n-  const [passwordValidation, setPasswordValidation] = useState<PasswordValidation>(validatePassword(value));\r\n \r\n-  useEffect(() => {\r\n-    setPasswordValidation(validatePassword(value));\r\n-  }, [value]);\r\n-\r\n-  const handlePasswordBlur = () => {\r\n-    setIsPasswordTouched(true);\r\n-    onBlur();\r\n-  };\r\n-\r\n-  const isValid = Object.values(passwordValidation).every(Boolean);\r\n-  const showError = hasError || (isPasswordTouched && !isValid);\r\n-\r\n   return (\r\n-    <div className=\"relative w-full mt-2\">\r\n+    <>\r\n       <motion.label\r\n-        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${hasError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n         initial={{ \r\n           top: value ? \"5px\" : \"50%\", \r\n           left: value ? \"4px\" : \"12px\",\r\n           scale: value ? 0.75 : 1,\r\n           translateY: value ? \"0\" : \"-50%\",\r\n         }}\r\n         animate={{\r\n+          \r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n           left: isFocused || value ? \"4px\" : \"12px\",\r\n           scale: isFocused || value ? 0.75 : 1,\r\n           translateY: isFocused || value ? \"0\" : \"-50%\",\r\n@@ -78,12 +52,11 @@\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n           onFocus={onFocus}\r\n-          onBlur={handlePasswordBlur}\r\n+          onBlur={onBlur}\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n-            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n-              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+            ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n           title=\"Password\"\r\n         />\r\n@@ -100,27 +73,7 @@\n             <FiEye className=\"w-4 h-4 md:w-5 md:h-5\" />\r\n           )}\r\n         </button>\r\n       </div>\r\n-      \r\n-      {/* Password Requirements */}\r\n-      <div className=\"mt-1 space-y-1 pl-1\">\r\n-        {[\r\n-          { key: \"hasLength\", text: \"Please enter at least 8 characters\" },\r\n-          { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n-          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n-        ].map((req) => (\r\n-          <div key={req.key} className=\"flex items-center gap-2\">\r\n-            {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n-              <AiOutlineCheck className=\"text-green-500 min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4\" />\r\n-            ) : (\r\n-              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4`} />\r\n-            )}\r\n-            <p className={`text-[7px] md:text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n-              {req.text}\r\n-            </p>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-    </div>\r\n+    </>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1749613177234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n \"use client\";\r\n \r\n-import { useState } from \"react\";\r\n+import { useState, useEffect } from \"react\";\r\n import { motion } from \"framer-motion\";\r\n import { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n+import { AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n \r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n@@ -12,8 +13,20 @@\n   onBlur: () => void;\r\n   hasError: boolean;\r\n }\r\n \r\n+interface PasswordValidation {\r\n+  hasLength: boolean;\r\n+  hasNumber: boolean;\r\n+  hasSpecialChar: boolean;\r\n+}\r\n+\r\n+const validatePassword = (password: string): PasswordValidation => ({\r\n+  hasLength: password.length >= 8,\r\n+  hasNumber: /\\d/.test(password),\r\n+  hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\r\n+});\r\n+\r\n export function PasswordField({\r\n   value,\r\n   onChange,\r\n   isFocused,\r\n@@ -21,21 +34,34 @@\n   onBlur,\r\n   hasError,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n+  const [passwordValidation, setPasswordValidation] = useState<PasswordValidation>(validatePassword(value));\r\n \r\n+  useEffect(() => {\r\n+    setPasswordValidation(validatePassword(value));\r\n+  }, [value]);\r\n+\r\n+  const handlePasswordBlur = () => {\r\n+    setIsPasswordTouched(true);\r\n+    onBlur();\r\n+  };\r\n+\r\n+  const isValid = Object.values(passwordValidation).every(Boolean);\r\n+  const showError = hasError || (isPasswordTouched && !isValid);\r\n+\r\n   return (\r\n-    <>\r\n+    <div className=\"relative w-full mt-2\">\r\n       <motion.label\r\n-        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${hasError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n         initial={{ \r\n           top: value ? \"5px\" : \"50%\", \r\n           left: value ? \"4px\" : \"12px\",\r\n           scale: value ? 0.75 : 1,\r\n           translateY: value ? \"0\" : \"-50%\",\r\n         }}\r\n         animate={{\r\n-          \r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n           left: isFocused || value ? \"4px\" : \"12px\",\r\n           scale: isFocused || value ? 0.75 : 1,\r\n           translateY: isFocused || value ? \"0\" : \"-50%\",\r\n@@ -52,11 +78,12 @@\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n           onFocus={onFocus}\r\n-          onBlur={onBlur}\r\n+          onBlur={handlePasswordBlur}\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n-            ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n+              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n           title=\"Password\"\r\n         />\r\n@@ -73,7 +100,27 @@\n             <FiEye className=\"w-4 h-4 md:w-5 md:h-5\" />\r\n           )}\r\n         </button>\r\n       </div>\r\n-    </>\r\n+      \r\n+      {/* Password Requirements */}\r\n\\ No newline at end of file\n+      <div className=\"mt-1 space-y-1 pl-1\">\r\n+        {[\r\n+          { key: \"hasLength\", text: \"Please enter at least 8 characters\" },\r\n+          { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n+          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n+        ].map((req) => (\r\n+          <div key={req.key} className=\"flex items-center gap-2\">\r\n+            {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n+              <AiOutlineCheck className=\"text-green-500 min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4\" />\r\n+            ) : (\r\n+              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4`} />\r\n+            )}\r\n+            <p className={`text-[7px] md:text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n+              {req.text}\r\n+            </p>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n   );\r\n-} \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749613271023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,12 @@\n     <div className=\"relative w-full mt-2\">\r\n       <motion.label\r\n         className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n         initial={{ \r\n-          top: value ? \"5px\" : \"50%\", \r\n-          left: value ? \"4px\" : \"12px\",\r\n-          scale: value ? 0.75 : 1,\r\n-          translateY: value ? \"0\" : \"-50%\",\r\n+          top: \"50%\", \r\n+          left: \"12px\",\r\n+          scale: 1,\r\n+          translateY: \"-50%\",\r\n         }}\r\n         animate={{\r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n           left: isFocused || value ? \"4px\" : \"12px\",\r\n"
                },
                {
                    "date": 1749613388099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,12 @@\n     <div className=\"relative w-full mt-2\">\r\n       <motion.label\r\n         className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n         initial={{ \r\n-          top: \"50%\", \r\n-          left: \"12px\",\r\n-          scale: 1,\r\n-          translateY: \"-50%\",\r\n+          top: value ? \"5px\" : \"50%\", \r\n+          left: value ? \"4px\" : \"12px\",\r\n+          scale: value ? 0.75 : 1,\r\n+          translateY: value ? \"0\" : \"-50%\",\r\n         }}\r\n         animate={{\r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n           left: isFocused || value ? \"4px\" : \"12px\",\r\n"
                },
                {
                    "date": 1749613594974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,12 @@\n     <div className=\"relative w-full mt-2\">\r\n       <motion.label\r\n         className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n         initial={{ \r\n-          top: value ? \"5px\" : \"50%\", \r\n-          left: value ? \"4px\" : \"12px\",\r\n-          scale: value ? 0.75 : 1,\r\n-          translateY: value ? \"0\" : \"-50%\",\r\n+          top: \"50%\", \r\n+          left: \"16px\",\r\n+          scale: 1,\r\n+          translateY: \"-50%\",\r\n         }}\r\n         animate={{\r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n           left: isFocused || value ? \"4px\" : \"12px\",\r\n"
                },
                {
                    "date": 1749613609857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,17 +53,17 @@\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n       <motion.label\r\n         className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-        initial={{ \r\n-          top: \"50%\", \r\n+        initial={{\r\n+          top: \"50%\",\r\n           left: \"16px\",\r\n           scale: 1,\r\n           translateY: \"-50%\",\r\n         }}\r\n         animate={{\r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n-          left: isFocused || value ? \"4px\" : \"12px\",\r\n+          left: isFocused || value ? \"4px\" : \"16px\",\r\n           scale: isFocused || value ? 0.75 : 1,\r\n           translateY: isFocused || value ? \"0\" : \"-50%\",\r\n         }}\r\n         transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n"
                },
                {
                    "date": 1749613624229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,17 +53,17 @@\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n       <motion.label\r\n         className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-        initial={{\r\n-          top: \"50%\",\r\n-          left: \"16px\",\r\n-          scale: 1,\r\n-          translateY: \"-50%\",\r\n+        initial={{ \r\n+          top: value ? \"5px\" : \"50%\", \r\n+          left: value ? \"4px\" : \"12px\",\r\n+          scale: value ? 0.75 : 1,\r\n+          translateY: value ? \"0\" : \"-50%\",\r\n         }}\r\n         animate={{\r\n           top: isFocused || value ? \"5px\" : \"50%\",\r\n-          left: isFocused || value ? \"4px\" : \"16px\",\r\n+          left: isFocused || value ? \"4px\" : \"12px\",\r\n           scale: isFocused || value ? 0.75 : 1,\r\n           translateY: isFocused || value ? \"0\" : \"-50%\",\r\n         }}\r\n         transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n"
                },
                {
                    "date": 1749613664545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,28 +51,28 @@\n   const showError = hasError || (isPasswordTouched && !isValid);\r\n \r\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n-      <motion.label\r\n-        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-        initial={{ \r\n-          top: value ? \"5px\" : \"50%\", \r\n-          left: value ? \"4px\" : \"12px\",\r\n-          scale: value ? 0.75 : 1,\r\n-          translateY: value ? \"0\" : \"-50%\",\r\n-        }}\r\n-        animate={{\r\n-          top: isFocused || value ? \"5px\" : \"50%\",\r\n-          left: isFocused || value ? \"4px\" : \"12px\",\r\n-          scale: isFocused || value ? 0.75 : 1,\r\n-          translateY: isFocused || value ? \"0\" : \"-50%\",\r\n-        }}\r\n-        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-        htmlFor=\"password\"\r\n-      >\r\n-        PASSWORD*\r\n-      </motion.label>\r\n       <div className=\"relative\">\r\n+        <motion.label\r\n+          className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+          initial={{\r\n+            top: \"50%\",\r\n+            left: \"16px\",\r\n+            scale: 1,\r\n+            translateY: \"-50%\",\r\n+          }}\r\n+          animate={{\r\n+            top: isFocused || value ? \"5px\" : \"50%\",\r\n+            left: isFocused || value ? \"4px\" : \"16px\",\r\n+            scale: isFocused || value ? 0.75 : 1,\r\n+            translateY: isFocused || value ? \"0\" : \"-50%\",\r\n+          }}\r\n+          transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+          htmlFor=\"password\"\r\n+        >\r\n+          PASSWORD*\r\n+        </motion.label>\r\n         <input\r\n           type={isPasswordVisible ? \"text\" : \"password\"}\r\n           id=\"password\"\r\n           name=\"password\"\r\n"
                },
                {
                    "date": 1749613676971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,15 +56,15 @@\n         <motion.label\r\n           className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n           initial={{\r\n             top: \"50%\",\r\n-            left: \"16px\",\r\n+            left: \"12px\",\r\n             scale: 1,\r\n             translateY: \"-50%\",\r\n           }}\r\n           animate={{\r\n             top: isFocused || value ? \"5px\" : \"50%\",\r\n-            left: isFocused || value ? \"4px\" : \"16px\",\r\n+            left: isFocused || value ? \"4px\" : \"12px\",\r\n             scale: isFocused || value ? 0.75 : 1,\r\n             translateY: isFocused || value ? \"0\" : \"-50%\",\r\n           }}\r\n           transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n"
                },
                {
                    "date": 1749613696985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,28 +51,28 @@\n   const showError = hasError || (isPasswordTouched && !isValid);\r\n \r\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n+      <motion.label\r\n+        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+        initial={{ \r\n+          top: value ? \"5px\" : \"50%\", \r\n+          left: value ? \"4px\" : \"12px\",\r\n+          scale: value ? 0.75 : 1,\r\n+          translateY: value ? \"0\" : \"-50%\",\r\n+        }}\r\n+        animate={{\r\n+          top: isFocused || value ? \"5px\" : \"50%\",\r\n+          left: isFocused || value ? \"4px\" : \"12px\",\r\n+          scale: isFocused || value ? 0.75 : 1,\r\n+          translateY: isFocused || value ? \"0\" : \"-50%\",\r\n+        }}\r\n+        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+        htmlFor=\"password\"\r\n+      >\r\n+        PASSWORD*\r\n+      </motion.label>\r\n       <div className=\"relative\">\r\n-        <motion.label\r\n-          className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-          initial={{\r\n-            top: \"50%\",\r\n-            left: \"12px\",\r\n-            scale: 1,\r\n-            translateY: \"-50%\",\r\n-          }}\r\n-          animate={{\r\n-            top: isFocused || value ? \"5px\" : \"50%\",\r\n-            left: isFocused || value ? \"4px\" : \"12px\",\r\n-            scale: isFocused || value ? 0.75 : 1,\r\n-            translateY: isFocused || value ? \"0\" : \"-50%\",\r\n-          }}\r\n-          transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-          htmlFor=\"password\"\r\n-        >\r\n-          PASSWORD*\r\n-        </motion.label>\r\n         <input\r\n           type={isPasswordVisible ? \"text\" : \"password\"}\r\n           id=\"password\"\r\n           name=\"password\"\r\n"
                },
                {
                    "date": 1749613931675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,8 @@\n \r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n-  isFocused: boolean;\r\n-  onFocus: () => void;\r\n   onBlur: () => void;\r\n   hasError: boolean;\r\n }\r\n \r\n@@ -28,10 +26,8 @@\n \r\n export function PasswordField({\r\n   value,\r\n   onChange,\r\n-  isFocused,\r\n-  onFocus,\r\n   onBlur,\r\n   hasError,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n@@ -51,39 +47,20 @@\n   const showError = hasError || (isPasswordTouched && !isValid);\r\n \r\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n-      <motion.label\r\n-        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-        initial={{ \r\n-          top: value ? \"5px\" : \"50%\", \r\n-          left: value ? \"4px\" : \"12px\",\r\n-          scale: value ? 0.75 : 1,\r\n-          translateY: value ? \"0\" : \"-50%\",\r\n-        }}\r\n-        animate={{\r\n-          top: isFocused || value ? \"5px\" : \"50%\",\r\n-          left: isFocused || value ? \"4px\" : \"12px\",\r\n-          scale: isFocused || value ? 0.75 : 1,\r\n-          translateY: isFocused || value ? \"0\" : \"-50%\",\r\n-        }}\r\n-        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-        htmlFor=\"password\"\r\n-      >\r\n-        PASSWORD*\r\n-      </motion.label>\r\n       <div className=\"relative\">\r\n         <input\r\n           type={isPasswordVisible ? \"text\" : \"password\"}\r\n           id=\"password\"\r\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n-          onFocus={onFocus}\r\n+          onFocus={() => {}}\r\n           onBlur={handlePasswordBlur}\r\n+          placeholder=\"PASSWORD*\"\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n-            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n-              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+            ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n           title=\"Password\"\r\n         />\r\n"
                },
                {
                    "date": 1749613989974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,10 @@\n \r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n+  isFocused: boolean;\r\n+  onFocus: () => void;\r\n   onBlur: () => void;\r\n   hasError: boolean;\r\n }\r\n \r\n@@ -26,8 +28,10 @@\n \r\n export function PasswordField({\r\n   value,\r\n   onChange,\r\n+  isFocused,\r\n+  onFocus,\r\n   onBlur,\r\n   hasError,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n@@ -47,20 +51,39 @@\n   const showError = hasError || (isPasswordTouched && !isValid);\r\n \r\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n+      <motion.label\r\n+        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+        initial={{ \r\n+          top: value ? \"5px\" : \"50%\", \r\n+          left: value ? \"4px\" : \"12px\",\r\n+          scale: value ? 0.75 : 1,\r\n+          translateY: value ? \"0\" : \"-50%\",\r\n+        }}\r\n+        animate={{\r\n+          top: isFocused || value ? \"5px\" : \"50%\",\r\n+          left: isFocused || value ? \"4px\" : \"12px\",\r\n+          scale: isFocused || value ? 0.75 : 1,\r\n+          translateY: isFocused || value ? \"0\" : \"-50%\",\r\n+        }}\r\n+        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+        htmlFor=\"password\"\r\n+      >\r\n+        PASSWORD*\r\n+      </motion.label>\r\n       <div className=\"relative\">\r\n         <input\r\n           type={isPasswordVisible ? \"text\" : \"password\"}\r\n           id=\"password\"\r\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n-          onFocus={() => {}}\r\n+          onFocus={onFocus}\r\n           onBlur={handlePasswordBlur}\r\n-          placeholder=\"PASSWORD*\"\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n-            ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n+              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n           title=\"Password\"\r\n         />\r\n"
                },
                {
                    "date": 1749614132637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,10 @@\n           value={value}\r\n           onChange={onChange}\r\n           onFocus={onFocus}\r\n           onBlur={handlePasswordBlur}\r\n-          className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n+          placeholder=\"PASSWORD*\"\r\n+          className={`w-full px-4 py-4 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n             ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n               showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n"
                },
                {
                    "date": 1749614141143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,10 +81,9 @@\n           onFocus={onFocus}\r\n           onBlur={handlePasswordBlur}\r\n           placeholder=\"PASSWORD*\"\r\n           className={`w-full px-4 py-4 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n-            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n-              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+            ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n           title=\"Password\"\r\n         />\r\n"
                },
                {
                    "date": 1749614203047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,15 @@\n \"use client\";\r\n \r\n import { useState, useEffect } from \"react\";\r\n-import { motion } from \"framer-motion\";\r\n import { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n import { AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n \r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n-  isFocused: boolean;\r\n-  onFocus: () => void;\r\n-  onBlur: () => void;\r\n   hasError: boolean;\r\n+  onBlur: () => void; // Keeping onBlur for touched state\r\n }\r\n \r\n interface PasswordValidation {\r\n   hasLength: boolean;\r\n@@ -28,12 +25,10 @@\n \r\n export function PasswordField({\r\n   value,\r\n   onChange,\r\n-  isFocused,\r\n-  onFocus,\r\n+  hasError,\r\n   onBlur,\r\n-  hasError,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n   const [passwordValidation, setPasswordValidation] = useState<PasswordValidation>(validatePassword(value));\r\n@@ -51,35 +46,16 @@\n   const showError = hasError || (isPasswordTouched && !isValid);\r\n \r\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n-      <motion.label\r\n-        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-        initial={{ \r\n-          top: value ? \"5px\" : \"50%\", \r\n-          left: value ? \"4px\" : \"12px\",\r\n-          scale: value ? 0.75 : 1,\r\n-          translateY: value ? \"0\" : \"-50%\",\r\n-        }}\r\n-        animate={{\r\n-          top: isFocused || value ? \"5px\" : \"50%\",\r\n-          left: isFocused || value ? \"4px\" : \"12px\",\r\n-          scale: isFocused || value ? 0.75 : 1,\r\n-          translateY: isFocused || value ? \"0\" : \"-50%\",\r\n-        }}\r\n-        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-        htmlFor=\"password\"\r\n-      >\r\n-        PASSWORD*\r\n-      </motion.label>\r\n       <div className=\"relative\">\r\n         <input\r\n           type={isPasswordVisible ? \"text\" : \"password\"}\r\n           id=\"password\"\r\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n-          onFocus={onFocus}\r\n+          onFocus={() => {}} // No action needed for placeholder\r\n           onBlur={handlePasswordBlur}\r\n           placeholder=\"PASSWORD*\"\r\n           className={`w-full px-4 py-4 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n             ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n@@ -106,9 +82,9 @@\n       <div className=\"mt-1 space-y-1 pl-1\">\r\n         {[\r\n           { key: \"hasLength\", text: \"Please enter at least 8 characters\" },\r\n           { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n-          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n+          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>]\" },\r\n         ].map((req) => (\r\n           <div key={req.key} className=\"flex items-center gap-2\">\r\n             {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n               <AiOutlineCheck className=\"text-green-500 min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4\" />\r\n"
                },
                {
                    "date": 1749614248287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,18 @@\n \"use client\";\r\n \r\n import { useState, useEffect } from \"react\";\r\n+import { motion } from \"framer-motion\";\r\n import { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n import { AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n \r\n interface PasswordFieldProps {\r\n   value: string;\r\n   onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n+  isFocused: boolean;\r\n+  onFocus: () => void;\r\n+  onBlur: () => void;\r\n   hasError: boolean;\r\n-  onBlur: () => void; // Keeping onBlur for touched state\r\n }\r\n \r\n interface PasswordValidation {\r\n   hasLength: boolean;\r\n@@ -25,10 +28,12 @@\n \r\n export function PasswordField({\r\n   value,\r\n   onChange,\r\n+  isFocused,\r\n+  onFocus,\r\n+  onBlur,\r\n   hasError,\r\n-  onBlur,\r\n }: PasswordFieldProps) {\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n   const [passwordValidation, setPasswordValidation] = useState<PasswordValidation>(validatePassword(value));\r\n@@ -46,20 +51,39 @@\n   const showError = hasError || (isPasswordTouched && !isValid);\r\n \r\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n+      <motion.label\r\n+        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+        initial={{ \r\n+          top: value ? \"5px\" : \"50%\", \r\n+          left: value ? \"4px\" : \"12px\",\r\n+          scale: value ? 0.75 : 1,\r\n+          translateY: value ? \"0\" : \"-50%\",\r\n+        }}\r\n+        animate={{\r\n+          top: isFocused || value ? \"5px\" : \"50%\",\r\n+          left: isFocused || value ? \"4px\" : \"12px\",\r\n+          scale: isFocused || value ? 0.75 : 1,\r\n+          translateY: isFocused || value ? \"0\" : \"-50%\",\r\n+        }}\r\n+        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+        htmlFor=\"password\"\r\n+      >\r\n+        PASSWORD*\r\n+      </motion.label>\r\n       <div className=\"relative\">\r\n         <input\r\n           type={isPasswordVisible ? \"text\" : \"password\"}\r\n           id=\"password\"\r\n           name=\"password\"\r\n           value={value}\r\n           onChange={onChange}\r\n-          onFocus={() => {}} // No action needed for placeholder\r\n+          onFocus={onFocus}\r\n           onBlur={handlePasswordBlur}\r\n-          placeholder=\"PASSWORD*\"\r\n-          className={`w-full px-4 py-4 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n-            ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+          className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n+            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n+              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           aria-label=\"Password\"\r\n           autoComplete=\"new-password\"\r\n           title=\"Password\"\r\n         />\r\n@@ -82,9 +106,9 @@\n       <div className=\"mt-1 space-y-1 pl-1\">\r\n         {[\r\n           { key: \"hasLength\", text: \"Please enter at least 8 characters\" },\r\n           { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n-          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>]\" },\r\n+          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n         ].map((req) => (\r\n           <div key={req.key} className=\"flex items-center gap-2\">\r\n             {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n               <AiOutlineCheck className=\"text-green-500 min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4\" />\r\n"
                },
                {
                    "date": 1749614277847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,28 +51,28 @@\n   const showError = hasError || (isPasswordTouched && !isValid);\r\n \r\n   return (\r\n     <div className=\"relative w-full mt-2\">\r\n-      <motion.label\r\n-        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-        initial={{ \r\n-          top: value ? \"5px\" : \"50%\", \r\n-          left: value ? \"4px\" : \"12px\",\r\n-          scale: value ? 0.75 : 1,\r\n-          translateY: value ? \"0\" : \"-50%\",\r\n-        }}\r\n-        animate={{\r\n-          top: isFocused || value ? \"5px\" : \"50%\",\r\n-          left: isFocused || value ? \"4px\" : \"12px\",\r\n-          scale: isFocused || value ? 0.75 : 1,\r\n-          translateY: isFocused || value ? \"0\" : \"-50%\",\r\n-        }}\r\n-        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-        htmlFor=\"password\"\r\n-      >\r\n-        PASSWORD*\r\n-      </motion.label>\r\n       <div className=\"relative\">\r\n+        <motion.label\r\n+          className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+          initial={{ \r\n+            top: value ? \"5px\" : \"50%\", \r\n+            left: value ? \"4px\" : \"12px\",\r\n+            scale: value ? 0.75 : 1,\r\n+            translateY: value ? \"0\" : \"-50%\",\r\n+          }}\r\n+          animate={{\r\n+            top: isFocused || value ? \"5px\" : \"50%\",\r\n+            left: isFocused || value ? \"4px\" : \"12px\",\r\n+            scale: isFocused || value ? 0.75 : 1,\r\n+            translateY: isFocused || value ? \"0\" : \"-50%\",\r\n+          }}\r\n+          transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+          htmlFor=\"password\"\r\n+        >\r\n+          PASSWORD*\r\n+        </motion.label>\r\n         <input\r\n           type={isPasswordVisible ? \"text\" : \"password\"}\r\n           id=\"password\"\r\n           name=\"password\"\r\n"
                }
            ],
            "date": 1747642521945,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n\r\ninterface PasswordFieldProps {\r\n  value: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  isFocused: boolean;\r\n  onFocus: () => void;\r\n  onBlur: () => void;\r\n  hasError: boolean;\r\n}\r\n\r\nexport function PasswordField({\r\n  value,\r\n  onChange,\r\n  isFocused,\r\n  onFocus,\r\n  onBlur,\r\n  hasError,\r\n}: PasswordFieldProps) {\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <motion.label\r\n        className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${hasError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n        initial={{ \r\n          top: value ? \"5px\" : \"50%\", \r\n          left: value ? \"4px\" : \"12px\",\r\n          scale: value ? 0.75 : 1,\r\n          translateY: value ? \"0\" : \"-50%\",\r\n        }}\r\n        animate={{\r\n          top: isFocused || value ? \"5px\" : \"50%\",\r\n          left: isFocused || value ? \"4px\" : \"12px\",\r\n          scale: isFocused || value ? 0.75 : 1,\r\n          translateY: isFocused || value ? \"0\" : \"-50%\",\r\n        }}\r\n        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n        htmlFor=\"password\"\r\n      >\r\n        PASSWORD*\r\n      </motion.label>\r\n      <div className=\"relative\">\r\n        <input\r\n          type={isPasswordVisible ? \"text\" : \"password\"}\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={value}\r\n          onChange={onChange}\r\n          onFocus={onFocus}\r\n          onBlur={onBlur}\r\n          className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n            ${hasError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n          aria-label=\"Password\"\r\n          placeholder=\"Enter your password\"\r\n          autoComplete=\"new-password\"\r\n          title=\"Password\"\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n          className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\"\r\n          aria-label={isPasswordVisible ? \"Hide password\" : \"Show password\"}\r\n          title={isPasswordVisible ? \"Hide password\" : \"Show password\"}\r\n        >\r\n          {isPasswordVisible ? (\r\n            <FiEyeOff className=\"w-4 h-4 md:w-5 md:h-5\" />\r\n          ) : (\r\n            <FiEye className=\"w-4 h-4 md:w-5 md:h-5\" />\r\n          )}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n} "
        }
    ]
}
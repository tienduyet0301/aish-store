{
    "sourceFile": "src/components/OrderConfirmationModal.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 62,
            "patches": [
                {
                    "date": 1746893166499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747059632031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,14 @@\n                     fontSize: \"0.9em\", \r\n                     fontWeight: \"bold\",\r\n                     marginBottom: \"4px\" \r\n                   }}>{item.name}</p>\r\n-                  <p style={{ fontSize: \"0.8em\" }}>Size: {item.variation}</p>\r\n+                  <p style={{ fontSize: \"0.8em\" }}>Size: {item.size}</p>\r\n                   <p style={{ fontSize: \"0.8em\" }}>Số lượng: {item.quantity}</p>\r\n-                  <p style={{ fontSize: \"0.8em\" }}>Giá: {item.price}</p>\r\n+                  <p style={{ \r\n+                    fontSize: \"0.8em\",\r\n+                    fontWeight: \"bold\"\r\n+                  }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n                 </div>\r\n               </div>\r\n             ))}\r\n           </div>\r\n@@ -103,9 +106,9 @@\n             <p style={{ \r\n               marginBottom: \"8px\",\r\n               fontSize: \"1em\",\r\n               fontWeight: \"bold\"\r\n-            }}>Tổng tiền: {orderDetails.total}</p>\r\n+            }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n           </div>\r\n \r\n           {orderDetails.paymentMethod === 'bank' && (\r\n             <div style={{\r\n"
                },
                {
                    "date": 1747063239291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,12 @@\n import { useOrders } from '../context/OrderContext';\r\n+import { useCart } from '../context/CartContext';\r\n import { motion } from \"framer-motion\";\r\n import { useRouter } from 'next/navigation';\r\n \r\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n   const { addOrder } = useOrders();\r\n+  const { clearCart } = useCart();\r\n   const router = useRouter();\r\n \r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n@@ -15,8 +17,9 @@\n         orderDate: Date.now(),\r\n         status: 'processing'\r\n       };\r\n       addOrder(orderWithDate);\r\n+      clearCart(); // Xóa giỏ hàng sau khi đặt hàng thành công\r\n     }\r\n     onClose();\r\n     // Chuyển hướng đến trang xác nhận đơn hàng thành công\r\n     router.push(`/order-success/${orderDetails.orderCode}`);\r\n"
                },
                {
                    "date": 1747063517235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,21 +9,28 @@\n   const router = useRouter();\r\n \r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n-  const handleContinueShopping = () => {\r\n-    if (orderDetails) {\r\n-      const orderWithDate = {\r\n-        ...orderDetails,\r\n-        orderDate: Date.now(),\r\n-        status: 'processing'\r\n-      };\r\n-      addOrder(orderWithDate);\r\n-      clearCart(); // Xóa giỏ hàng sau khi đặt hàng thành công\r\n+  const handleContinueShopping = async () => {\r\n+    try {\r\n+      if (orderDetails) {\r\n+        const orderWithDate = {\r\n+          ...orderDetails,\r\n+          orderDate: Date.now(),\r\n+          status: 'pending',\r\n+          createdAt: new Date().toISOString(),\r\n+          updatedAt: new Date().toISOString()\r\n+        };\r\n+        \r\n+        await addOrder(orderWithDate);\r\n+        clearCart();\r\n+        onClose();\r\n+        router.push(`/order-success/${orderDetails.orderCode}`);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error('Error placing order:', error);\r\n+      alert('Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại.');\r\n     }\r\n-    onClose();\r\n-    // Chuyển hướng đến trang xác nhận đơn hàng thành công\r\n-    router.push(`/order-success/${orderDetails.orderCode}`);\r\n   };\r\n \r\n   return (\r\n     <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n"
                },
                {
                    "date": 1747064156440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,55 @@\n+\"use client\";\r\n+import { useState } from 'react';\r\n+import { useRouter } from 'next/navigation';\r\n import { useOrders } from '../context/OrderContext';\r\n import { useCart } from '../context/CartContext';\r\n import { motion } from \"framer-motion\";\r\n-import { useRouter } from 'next/navigation';\r\n \r\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n+  const router = useRouter();\r\n   const { addOrder } = useOrders();\r\n   const { clearCart } = useCart();\r\n-  const router = useRouter();\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n \r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n-  const handleContinueShopping = async () => {\r\n+  const handleConfirmOrder = async () => {\r\n     try {\r\n-      if (orderDetails) {\r\n-        const orderWithDate = {\r\n-          ...orderDetails,\r\n-          orderDate: Date.now(),\r\n-          status: 'pending',\r\n-          createdAt: new Date().toISOString(),\r\n-          updatedAt: new Date().toISOString()\r\n-        };\r\n-        \r\n-        await addOrder(orderWithDate);\r\n-        clearCart();\r\n-        onClose();\r\n-        router.push(`/order-success/${orderDetails.orderCode}`);\r\n+      setIsSubmitting(true);\r\n+      // Gửi đơn hàng lên server\r\n+      const response = await fetch('/api/orders', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(orderDetails),\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n       }\r\n+\r\n+      // Thêm đơn hàng vào context và xóa giỏ hàng\r\n+      await addOrder(data.order);\r\n+      clearCart();\r\n+      \r\n+      // Chuyển hướng đến trang xác nhận đơn hàng\r\n+      router.push(`/order-success/${orderDetails.orderCode}`);\r\n     } catch (error) {\r\n-      console.error('Error placing order:', error);\r\n-      alert('Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại.');\r\n+      console.error('Error creating order:', error);\r\n+      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n     }\r\n   };\r\n \r\n+  const handleCancel = () => {\r\n+    onClose();\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n       <motion.div\r\n         initial={{ opacity: 0, y: 20 }}\r\n@@ -134,24 +151,24 @@\n           )}\r\n         </div>\r\n \r\n         <div className=\"border-t border-gray-200\">\r\n-          <button\r\n-            onClick={handleContinueShopping}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.7em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\"\r\n-            }}\r\n-          >\r\n-            Xác nhận\r\n-          </button>\r\n+          <div className=\"flex justify-end gap-4\">\r\n+            <button\r\n+              onClick={handleCancel}\r\n+              className=\"px-4 py-2 border border-gray-300 rounded hover:bg-gray-100\"\r\n+              disabled={isSubmitting}\r\n+            >\r\n+              Hủy\r\n+            </button>\r\n+            <button\r\n+              onClick={handleConfirmOrder}\r\n+              className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 disabled:bg-gray-400\"\r\n+              disabled={isSubmitting}\r\n+            >\r\n+              {isSubmitting ? 'Đang xử lý...' : 'Xác nhận'}\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       </motion.div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1747064324803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,55 +1,38 @@\n-\"use client\";\r\n-import { useState } from 'react';\r\n-import { useRouter } from 'next/navigation';\r\n import { useOrders } from '../context/OrderContext';\r\n import { useCart } from '../context/CartContext';\r\n import { motion } from \"framer-motion\";\r\n+import { useRouter } from 'next/navigation';\r\n \r\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n-  const router = useRouter();\r\n   const { addOrder } = useOrders();\r\n   const { clearCart } = useCart();\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const router = useRouter();\r\n \r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n-  const handleConfirmOrder = async () => {\r\n+  const handleContinueShopping = async () => {\r\n     try {\r\n-      setIsSubmitting(true);\r\n-      // Gửi đơn hàng lên server\r\n-      const response = await fetch('/api/orders', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify(orderDetails),\r\n-      });\r\n-\r\n-      const data = await response.json();\r\n-\r\n-      if (!response.ok) {\r\n-        throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n+      if (orderDetails) {\r\n+        const orderWithDate = {\r\n+          ...orderDetails,\r\n+          orderDate: Date.now(),\r\n+          status: 'pending',\r\n+          createdAt: new Date().toISOString(),\r\n+          updatedAt: new Date().toISOString()\r\n+        };\r\n+        \r\n+        await addOrder(orderWithDate);\r\n+        clearCart();\r\n+        onClose();\r\n+        router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n-\r\n-      // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-      await addOrder(data.order);\r\n-      clearCart();\r\n-      \r\n-      // Chuyển hướng đến trang xác nhận đơn hàng\r\n-      router.push(`/order-success/${orderDetails.orderCode}`);\r\n     } catch (error) {\r\n-      console.error('Error creating order:', error);\r\n-      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n+      console.error('Error placing order:', error);\r\n+      alert('Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại.');\r\n     }\r\n   };\r\n \r\n-  const handleCancel = () => {\r\n-    onClose();\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n       <motion.div\r\n         initial={{ opacity: 0, y: 20 }}\r\n@@ -151,24 +134,24 @@\n           )}\r\n         </div>\r\n \r\n         <div className=\"border-t border-gray-200\">\r\n-          <div className=\"flex justify-end gap-4\">\r\n-            <button\r\n-              onClick={handleCancel}\r\n-              className=\"px-4 py-2 border border-gray-300 rounded hover:bg-gray-100\"\r\n-              disabled={isSubmitting}\r\n-            >\r\n-              Hủy\r\n-            </button>\r\n-            <button\r\n-              onClick={handleConfirmOrder}\r\n-              className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 disabled:bg-gray-400\"\r\n-              disabled={isSubmitting}\r\n-            >\r\n-              {isSubmitting ? 'Đang xử lý...' : 'Xác nhận'}\r\n-            </button>\r\n-          </div>\r\n+          <button\r\n+            onClick={handleContinueShopping}\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"12px\",\r\n+              fontSize: \"0.7em\",\r\n+              color: \"#ffffff\",\r\n+              backgroundColor: \"#000000\",\r\n+              border: \"none\",\r\n+              cursor: \"pointer\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\"\r\n+            }}\r\n+          >\r\n+            Xác nhận\r\n+          </button>\r\n         </div>\r\n       </motion.div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1747064590720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+\"use client\";\r\n+import { useState } from 'react';\r\n import { useOrders } from '../context/OrderContext';\r\n import { useCart } from '../context/CartContext';\r\n import { motion } from \"framer-motion\";\r\n import { useRouter } from 'next/navigation';\r\n@@ -6,30 +8,42 @@\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n   const { addOrder } = useOrders();\r\n   const { clearCart } = useCart();\r\n   const router = useRouter();\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n \r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n-  const handleContinueShopping = async () => {\r\n+  const handleConfirmOrder = async () => {\r\n     try {\r\n-      if (orderDetails) {\r\n-        const orderWithDate = {\r\n-          ...orderDetails,\r\n-          orderDate: Date.now(),\r\n-          status: 'pending',\r\n-          createdAt: new Date().toISOString(),\r\n-          updatedAt: new Date().toISOString()\r\n-        };\r\n-        \r\n-        await addOrder(orderWithDate);\r\n-        clearCart();\r\n-        onClose();\r\n-        router.push(`/order-success/${orderDetails.orderCode}`);\r\n+      setIsSubmitting(true);\r\n+      \r\n+      // Gửi đơn hàng lên server\r\n+      const response = await fetch('/api/orders', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(orderDetails),\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n       }\r\n+\r\n+      // Thêm đơn hàng vào context và xóa giỏ hàng\r\n+      await addOrder(data.order);\r\n+      clearCart();\r\n+      \r\n+      // Chuyển hướng đến trang xác nhận đơn hàng\r\n+      router.push(`/order-success/${orderDetails.orderCode}`);\r\n     } catch (error) {\r\n-      console.error('Error placing order:', error);\r\n-      alert('Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại.');\r\n+      console.error('Error creating order:', error);\r\n+      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n     }\r\n   };\r\n \r\n   return (\r\n@@ -134,24 +148,24 @@\n           )}\r\n         </div>\r\n \r\n         <div className=\"border-t border-gray-200\">\r\n-          <button\r\n-            onClick={handleContinueShopping}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.7em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\"\r\n-            }}\r\n-          >\r\n-            Xác nhận\r\n-          </button>\r\n+          <div className=\"flex justify-end gap-4 p-4\">\r\n+            <button\r\n+              onClick={onClose}\r\n+              className=\"px-4 py-2 border border-gray-300 rounded hover:bg-gray-100\"\r\n+              disabled={isSubmitting}\r\n+            >\r\n+              Hủy\r\n+            </button>\r\n+            <button\r\n+              onClick={handleConfirmOrder}\r\n+              className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 disabled:bg-gray-400\"\r\n+              disabled={isSubmitting}\r\n+            >\r\n+              {isSubmitting ? 'Đang xử lý...' : 'Xác nhận'}\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       </motion.div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1747064646943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-\"use client\";\r\n-import { useState } from 'react';\r\n import { useOrders } from '../context/OrderContext';\r\n import { useCart } from '../context/CartContext';\r\n import { motion } from \"framer-motion\";\r\n import { useRouter } from 'next/navigation';\r\n@@ -8,42 +6,30 @@\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n   const { addOrder } = useOrders();\r\n   const { clearCart } = useCart();\r\n   const router = useRouter();\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n \r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n-  const handleConfirmOrder = async () => {\r\n+  const handleContinueShopping = async () => {\r\n     try {\r\n-      setIsSubmitting(true);\r\n-      \r\n-      // Gửi đơn hàng lên server\r\n-      const response = await fetch('/api/orders', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify(orderDetails),\r\n-      });\r\n-\r\n-      const data = await response.json();\r\n-\r\n-      if (!response.ok) {\r\n-        throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n+      if (orderDetails) {\r\n+        const orderWithDate = {\r\n+          ...orderDetails,\r\n+          orderDate: Date.now(),\r\n+          status: 'pending',\r\n+          createdAt: new Date().toISOString(),\r\n+          updatedAt: new Date().toISOString()\r\n+        };\r\n+        \r\n+        await addOrder(orderWithDate);\r\n+        clearCart();\r\n+        onClose();\r\n+        router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n-\r\n-      // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-      await addOrder(data.order);\r\n-      clearCart();\r\n-      \r\n-      // Chuyển hướng đến trang xác nhận đơn hàng\r\n-      router.push(`/order-success/${orderDetails.orderCode}`);\r\n     } catch (error) {\r\n-      console.error('Error creating order:', error);\r\n-      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n+      console.error('Error placing order:', error);\r\n+      alert('Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại.');\r\n     }\r\n   };\r\n \r\n   return (\r\n@@ -148,24 +134,24 @@\n           )}\r\n         </div>\r\n \r\n         <div className=\"border-t border-gray-200\">\r\n-          <div className=\"flex justify-end gap-4 p-4\">\r\n-            <button\r\n-              onClick={onClose}\r\n-              className=\"px-4 py-2 border border-gray-300 rounded hover:bg-gray-100\"\r\n-              disabled={isSubmitting}\r\n-            >\r\n-              Hủy\r\n-            </button>\r\n-            <button\r\n-              onClick={handleConfirmOrder}\r\n-              className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 disabled:bg-gray-400\"\r\n-              disabled={isSubmitting}\r\n-            >\r\n-              {isSubmitting ? 'Đang xử lý...' : 'Xác nhận'}\r\n-            </button>\r\n-          </div>\r\n+          <button\r\n+            onClick={handleContinueShopping}\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"12px\",\r\n+              fontSize: \"0.7em\",\r\n+              color: \"#ffffff\",\r\n+              backgroundColor: \"#000000\",\r\n+              border: \"none\",\r\n+              cursor: \"pointer\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\"\r\n+            }}\r\n+          >\r\n+            Xác nhận\r\n+          </button>\r\n         </div>\r\n       </motion.div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1747064720116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,24 +12,32 @@\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n-        const orderWithDate = {\r\n-          ...orderDetails,\r\n-          orderDate: Date.now(),\r\n-          status: 'pending',\r\n-          createdAt: new Date().toISOString(),\r\n-          updatedAt: new Date().toISOString()\r\n-        };\r\n-        \r\n-        await addOrder(orderWithDate);\r\n+        // Gửi đơn hàng lên server\r\n+        const response = await fetch('/api/orders', {\r\n+          method: 'POST',\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+          },\r\n+          body: JSON.stringify(orderDetails),\r\n+        });\r\n+\r\n+        const data = await response.json();\r\n+\r\n+        if (!response.ok) {\r\n+          throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n+        }\r\n+\r\n+        // Thêm đơn hàng vào context và xóa giỏ hàng\r\n+        await addOrder(data.order);\r\n         clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n     } catch (error) {\r\n-      console.error('Error placing order:', error);\r\n-      alert('Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại.');\r\n+      console.error('Error creating order:', error);\r\n+      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\r\n     }\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1747066711872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,27 @@\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n+        // Chuẩn bị dữ liệu đơn hàng\r\n+        const orderData = {\r\n+          ...orderDetails,\r\n+          items: orderDetails.items.map(item => ({\r\n+            name: item.name,\r\n+            size: item.size,\r\n+            price: item.price,\r\n+            quantity: item.quantity,\r\n+            image: item.image\r\n+          }))\r\n+        };\r\n+\r\n         // Gửi đơn hàng lên server\r\n         const response = await fetch('/api/orders', {\r\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify(orderDetails),\r\n+          body: JSON.stringify(orderData),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -28,9 +40,9 @@\n           throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n         }\r\n \r\n         // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-        await addOrder(data.order);\r\n+        await addOrder(orderData);\r\n         clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n@@ -40,127 +52,36 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n+    <motion.div\r\n+      initial={{ opacity: 0 }}\r\n+      animate={{ opacity: 1 }}\r\n+      exit={{ opacity: 0 }}\r\n+      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+    >\r\n       <motion.div\r\n-        initial={{ opacity: 0, y: 20 }}\r\n-        animate={{ opacity: 1, y: 0 }}\r\n-        className=\"bg-white/80 w-11/12 max-w-md relative\"\r\n+        initial={{ scale: 0.9, opacity: 0 }}\r\n+        animate={{ scale: 1, opacity: 1 }}\r\n+        exit={{ scale: 0.9, opacity: 0 }}\r\n+        className=\"bg-white p-8 rounded-lg max-w-md w-full mx-4\"\r\n       >\r\n-        <button\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-black\"\r\n-        >\r\n-          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n-            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-          </svg>\r\n-        </button>\r\n-\r\n-        <div className=\"text-center py-8 px-6\">\r\n-          <h2 style={{ \r\n-            fontSize: \"1.2em\", \r\n-            color: \"#000000\", \r\n-            textTransform: \"uppercase\", \r\n-            letterSpacing: \"0.1em\", \r\n-            marginBottom: \"20px\",\r\n-            fontWeight: \"bold\"\r\n-          }}>\r\n-            XÁC NHẬN ĐƠN HÀNG\r\n-          </h2>\r\n-\r\n-          {/* Thông tin sản phẩm */}\r\n-          <div style={{ marginBottom: \"20px\" }}>\r\n-            {orderDetails.items.map((item, index) => (\r\n-              <div key={index} style={{ \r\n-                display: \"flex\", \r\n-                alignItems: \"center\", \r\n-                marginBottom: \"15px\",\r\n-                padding: \"10px\",\r\n-                backgroundColor: \"#f8f8f8\",\r\n-                borderRadius: \"4px\"\r\n-              }}>\r\n-                <img \r\n-                  src={item.image} \r\n-                  alt={item.name} \r\n-                  style={{\r\n-                    width: \"80px\",\r\n-                    height: \"80px\",\r\n-                    objectFit: \"cover\",\r\n-                    marginRight: \"15px\"\r\n-                  }}\r\n-                />\r\n-                <div style={{ textAlign: \"left\" }}>\r\n-                  <p style={{ \r\n-                    fontSize: \"0.9em\", \r\n-                    fontWeight: \"bold\",\r\n-                    marginBottom: \"4px\" \r\n-                  }}>{item.name}</p>\r\n-                  <p style={{ fontSize: \"0.8em\" }}>Size: {item.size}</p>\r\n-                  <p style={{ fontSize: \"0.8em\" }}>Số lượng: {item.quantity}</p>\r\n-                  <p style={{ \r\n-                    fontSize: \"0.8em\",\r\n-                    fontWeight: \"bold\"\r\n-                  }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n-                </div>\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-\r\n-          <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n-            <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n-            {orderDetails.additionalPhone && (\r\n-              <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n-            )}\r\n-            <p style={{ marginBottom: \"8px\" }}>\r\n-              Địa chỉ: {orderDetails.address}, {orderDetails.ward}, {orderDetails.district}, {orderDetails.province}\r\n-            </p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n-              orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-            }</p>\r\n-            <p style={{ \r\n-              marginBottom: \"8px\",\r\n-              fontSize: \"1em\",\r\n-              fontWeight: \"bold\"\r\n-            }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n-          </div>\r\n-\r\n-          {orderDetails.paymentMethod === 'bank' && (\r\n-            <div style={{\r\n-              backgroundColor: \"#f8f8f8\",\r\n-              padding: \"15px\",\r\n-              marginBottom: \"20px\",\r\n-              borderRadius: \"4px\"\r\n-            }}>\r\n-              <p style={{ fontSize: \"0.9em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n-                Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n-              </p>\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-\r\n-        <div className=\"border-t border-gray-200\">\r\n+        <h2 className=\"text-xl font-semibold mb-4\">Xác nhận đơn hàng</h2>\r\n+        <p className=\"mb-6\">Bạn có chắc chắn muốn đặt hàng với thông tin đã cung cấp?</p>\r\n+        <div className=\"flex justify-end space-x-4\">\r\n           <button\r\n+            onClick={onClose}\r\n+            className=\"px-4 py-2 border border-gray-300 rounded hover:bg-gray-100\"\r\n+          >\r\n+            Hủy\r\n+          </button>\r\n+          <button\r\n             onClick={handleContinueShopping}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.7em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\"\r\n-            }}\r\n+            className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800\"\r\n           >\r\n             Xác nhận\r\n           </button>\r\n         </div>\r\n       </motion.div>\r\n-    </div>\r\n+    </motion.div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747066757231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,27 +12,15 @@\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n-        // Chuẩn bị dữ liệu đơn hàng\r\n-        const orderData = {\r\n-          ...orderDetails,\r\n-          items: orderDetails.items.map(item => ({\r\n-            name: item.name,\r\n-            size: item.size,\r\n-            price: item.price,\r\n-            quantity: item.quantity,\r\n-            image: item.image\r\n-          }))\r\n-        };\r\n-\r\n         // Gửi đơn hàng lên server\r\n         const response = await fetch('/api/orders', {\r\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify(orderData),\r\n+          body: JSON.stringify(orderDetails),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -40,9 +28,9 @@\n           throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n         }\r\n \r\n         // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-        await addOrder(orderData);\r\n+        await addOrder(data.order);\r\n         clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n@@ -52,36 +40,127 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <motion.div\r\n-      initial={{ opacity: 0 }}\r\n-      animate={{ opacity: 1 }}\r\n-      exit={{ opacity: 0 }}\r\n-      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-    >\r\n+    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n       <motion.div\r\n-        initial={{ scale: 0.9, opacity: 0 }}\r\n-        animate={{ scale: 1, opacity: 1 }}\r\n-        exit={{ scale: 0.9, opacity: 0 }}\r\n-        className=\"bg-white p-8 rounded-lg max-w-md w-full mx-4\"\r\n+        initial={{ opacity: 0, y: 20 }}\r\n+        animate={{ opacity: 1, y: 0 }}\r\n+        className=\"bg-white/80 w-11/12 max-w-md relative\"\r\n       >\r\n-        <h2 className=\"text-xl font-semibold mb-4\">Xác nhận đơn hàng</h2>\r\n-        <p className=\"mb-6\">Bạn có chắc chắn muốn đặt hàng với thông tin đã cung cấp?</p>\r\n-        <div className=\"flex justify-end space-x-4\">\r\n+        <button\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-black\"\r\n+        >\r\n+          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n+            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n+            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n+          </svg>\r\n+        </button>\r\n+\r\n+        <div className=\"text-center py-8 px-6\">\r\n+          <h2 style={{ \r\n+            fontSize: \"1.2em\", \r\n+            color: \"#000000\", \r\n+            textTransform: \"uppercase\", \r\n+            letterSpacing: \"0.1em\", \r\n+            marginBottom: \"20px\",\r\n+            fontWeight: \"bold\"\r\n+          }}>\r\n+            XÁC NHẬN ĐƠN HÀNG\r\n+          </h2>\r\n+\r\n+          {/* Thông tin sản phẩm */}\r\n+          <div style={{ marginBottom: \"20px\" }}>\r\n+            {orderDetails.items.map((item, index) => (\r\n+              <div key={index} style={{ \r\n+                display: \"flex\", \r\n+                alignItems: \"center\", \r\n+                marginBottom: \"15px\",\r\n+                padding: \"10px\",\r\n+                backgroundColor: \"#f8f8f8\",\r\n+                borderRadius: \"4px\"\r\n+              }}>\r\n+                <img \r\n+                  src={item.image} \r\n+                  alt={item.name} \r\n+                  style={{\r\n+                    width: \"80px\",\r\n+                    height: \"80px\",\r\n+                    objectFit: \"cover\",\r\n+                    marginRight: \"15px\"\r\n+                  }}\r\n+                />\r\n+                <div style={{ textAlign: \"left\" }}>\r\n+                  <p style={{ \r\n+                    fontSize: \"0.9em\", \r\n+                    fontWeight: \"bold\",\r\n+                    marginBottom: \"4px\" \r\n+                  }}>{item.name}</p>\r\n+                  <p style={{ fontSize: \"0.8em\" }}>Size: {item.size}</p>\r\n+                  <p style={{ fontSize: \"0.8em\" }}>Số lượng: {item.quantity}</p>\r\n+                  <p style={{ \r\n+                    fontSize: \"0.8em\",\r\n+                    fontWeight: \"bold\"\r\n+                  }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n+                </div>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+\r\n+          <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n+            <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n+            {orderDetails.additionalPhone && (\r\n+              <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n+            )}\r\n+            <p style={{ marginBottom: \"8px\" }}>\r\n+              Địa chỉ: {orderDetails.address}, {orderDetails.ward}, {orderDetails.district}, {orderDetails.province}\r\n+            </p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n+              orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n+            }</p>\r\n+            <p style={{ \r\n+              marginBottom: \"8px\",\r\n+              fontSize: \"1em\",\r\n+              fontWeight: \"bold\"\r\n+            }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n+          </div>\r\n+\r\n+          {orderDetails.paymentMethod === 'bank' && (\r\n+            <div style={{\r\n+              backgroundColor: \"#f8f8f8\",\r\n+              padding: \"15px\",\r\n+              marginBottom: \"20px\",\r\n+              borderRadius: \"4px\"\r\n+            }}>\r\n+              <p style={{ fontSize: \"0.9em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n+                Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n+              </p>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+\r\n+        <div className=\"border-t border-gray-200\">\r\n           <button\r\n-            onClick={onClose}\r\n-            className=\"px-4 py-2 border border-gray-300 rounded hover:bg-gray-100\"\r\n-          >\r\n-            Hủy\r\n-          </button>\r\n-          <button\r\n             onClick={handleContinueShopping}\r\n-            className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800\"\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"12px\",\r\n+              fontSize: \"0.7em\",\r\n+              color: \"#ffffff\",\r\n+              backgroundColor: \"#000000\",\r\n+              border: \"none\",\r\n+              cursor: \"pointer\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\"\r\n+            }}\r\n           >\r\n             Xác nhận\r\n           </button>\r\n         </div>\r\n       </motion.div>\r\n-    </motion.div>\r\n+    </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747066808818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,27 @@\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n+        // Chuẩn bị dữ liệu đơn hàng\r\n+        const orderData = {\r\n+          ...orderDetails,\r\n+          items: orderDetails.items.map(item => ({\r\n+            name: item.name,\r\n+            size: item.size,\r\n+            price: item.price,\r\n+            quantity: item.quantity,\r\n+            image: item.image\r\n+          }))\r\n+        };\r\n+\r\n         // Gửi đơn hàng lên server\r\n         const response = await fetch('/api/orders', {\r\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify(orderDetails),\r\n+          body: JSON.stringify(orderData),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -28,9 +40,9 @@\n           throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n         }\r\n \r\n         // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-        await addOrder(data.order);\r\n+        await addOrder(orderData);\r\n         clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n"
                },
                {
                    "date": 1747066855102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,27 +12,15 @@\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n-        // Chuẩn bị dữ liệu đơn hàng\r\n-        const orderData = {\r\n-          ...orderDetails,\r\n-          items: orderDetails.items.map(item => ({\r\n-            name: item.name,\r\n-            size: item.size,\r\n-            price: item.price,\r\n-            quantity: item.quantity,\r\n-            image: item.image\r\n-          }))\r\n-        };\r\n-\r\n         // Gửi đơn hàng lên server\r\n         const response = await fetch('/api/orders', {\r\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify(orderData),\r\n+          body: JSON.stringify(orderDetails),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -40,9 +28,9 @@\n           throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n         }\r\n \r\n         // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-        await addOrder(orderData);\r\n+        await addOrder(data.order);\r\n         clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n"
                },
                {
                    "date": 1747067089441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,41 @@\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n+        // Chuẩn bị dữ liệu đơn hàng\r\n+        const orderData = {\r\n+          ...orderDetails,\r\n+          items: orderDetails.items.map(item => {\r\n+            // Đảm bảo giá tiền là số\r\n+            const price = typeof item.price === 'string' \r\n+              ? parseFloat(item.price.replace(/[^0-9.-]+/g, '')) \r\n+              : item.price;\r\n+            \r\n+            return {\r\n+              name: item.name,\r\n+              size: item.size,\r\n+              price: price,\r\n+              quantity: item.quantity,\r\n+              image: item.image\r\n+            };\r\n+          }),\r\n+          // Tính lại tổng tiền\r\n+          total: orderDetails.items.reduce((sum, item) => {\r\n+            const price = typeof item.price === 'string' \r\n+              ? parseFloat(item.price.replace(/[^0-9.-]+/g, '')) \r\n+              : item.price;\r\n+            return sum + (price * item.quantity);\r\n+          }, 0)\r\n+        };\r\n+\r\n         // Gửi đơn hàng lên server\r\n         const response = await fetch('/api/orders', {\r\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify(orderDetails),\r\n+          body: JSON.stringify(orderData),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -28,9 +54,9 @@\n           throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n         }\r\n \r\n         // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-        await addOrder(data.order);\r\n+        await addOrder(orderData);\r\n         clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n"
                },
                {
                    "date": 1747067138671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,41 +12,15 @@\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n-        // Chuẩn bị dữ liệu đơn hàng\r\n-        const orderData = {\r\n-          ...orderDetails,\r\n-          items: orderDetails.items.map(item => {\r\n-            // Đảm bảo giá tiền là số\r\n-            const price = typeof item.price === 'string' \r\n-              ? parseFloat(item.price.replace(/[^0-9.-]+/g, '')) \r\n-              : item.price;\r\n-            \r\n-            return {\r\n-              name: item.name,\r\n-              size: item.size,\r\n-              price: price,\r\n-              quantity: item.quantity,\r\n-              image: item.image\r\n-            };\r\n-          }),\r\n-          // Tính lại tổng tiền\r\n-          total: orderDetails.items.reduce((sum, item) => {\r\n-            const price = typeof item.price === 'string' \r\n-              ? parseFloat(item.price.replace(/[^0-9.-]+/g, '')) \r\n-              : item.price;\r\n-            return sum + (price * item.quantity);\r\n-          }, 0)\r\n-        };\r\n-\r\n         // Gửi đơn hàng lên server\r\n         const response = await fetch('/api/orders', {\r\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify(orderData),\r\n+          body: JSON.stringify(orderDetails),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -54,9 +28,9 @@\n           throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n         }\r\n \r\n         // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-        await addOrder(orderData);\r\n+        await addOrder(data.order);\r\n         clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n"
                },
                {
                    "date": 1747067741426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,24 @@\n import { useOrders } from '../context/OrderContext';\r\n import { useCart } from '../context/CartContext';\r\n import { motion } from \"framer-motion\";\r\n import { useRouter } from 'next/navigation';\r\n+import { useState, useEffect } from 'react';\r\n \r\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n   const { addOrder } = useOrders();\r\n   const { clearCart } = useCart();\r\n   const router = useRouter();\r\n+  const [userEmail, setUserEmail] = useState(\"\");\r\n \r\n+  useEffect(() => {\r\n+    // Lấy email từ localStorage hoặc session\r\n+    const email = localStorage.getItem('userEmail') || sessionStorage.getItem('userEmail');\r\n+    if (email) {\r\n+      setUserEmail(email);\r\n+    }\r\n+  }, []);\r\n+\r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n@@ -18,9 +28,12 @@\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify(orderDetails),\r\n+          body: JSON.stringify({\r\n+            ...orderDetails,\r\n+            email: userEmail // Sử dụng email từ người dùng đã đăng nhập\r\n+          }),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -109,9 +122,9 @@\n \r\n           <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n             <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n             <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Email: {userEmail}</p>\r\n             <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n"
                },
                {
                    "date": 1747067907660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,14 @@\n import { useOrders } from '../context/OrderContext';\r\n import { useCart } from '../context/CartContext';\r\n import { motion } from \"framer-motion\";\r\n import { useRouter } from 'next/navigation';\r\n-import { useState, useEffect } from 'react';\r\n \r\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n   const { addOrder } = useOrders();\r\n   const { clearCart } = useCart();\r\n   const router = useRouter();\r\n-  const [userEmail, setUserEmail] = useState(\"\");\r\n \r\n-  useEffect(() => {\r\n-    // Lấy email từ localStorage hoặc session\r\n-    const email = localStorage.getItem('userEmail') || sessionStorage.getItem('userEmail');\r\n-    if (email) {\r\n-      setUserEmail(email);\r\n-    }\r\n-  }, []);\r\n-\r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n@@ -28,12 +18,9 @@\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify({\r\n-            ...orderDetails,\r\n-            email: userEmail // Sử dụng email từ người dùng đã đăng nhập\r\n-          }),\r\n+          body: JSON.stringify(orderDetails),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -122,9 +109,9 @@\n \r\n           <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n             <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n             <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Email: {userEmail}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email || \"\"}</p>\r\n             <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n"
                },
                {
                    "date": 1747067937787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,24 @@\n import { useOrders } from '../context/OrderContext';\r\n import { useCart } from '../context/CartContext';\r\n import { motion } from \"framer-motion\";\r\n import { useRouter } from 'next/navigation';\r\n+import { useState, useEffect } from 'react';\r\n \r\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n   const { addOrder } = useOrders();\r\n   const { clearCart } = useCart();\r\n   const router = useRouter();\r\n+  const [userEmail, setUserEmail] = useState(\"\");\r\n \r\n+  useEffect(() => {\r\n+    // Lấy email từ localStorage hoặc session\r\n+    const email = localStorage.getItem('userEmail') || sessionStorage.getItem('userEmail');\r\n+    if (email) {\r\n+      setUserEmail(email);\r\n+    }\r\n+  }, []);\r\n+\r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n@@ -18,9 +28,12 @@\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify(orderDetails),\r\n+          body: JSON.stringify({\r\n+            ...orderDetails,\r\n+            email: userEmail // Sử dụng email từ người dùng đã đăng nhập\r\n+          }),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -109,9 +122,9 @@\n \r\n           <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n             <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n             <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email || \"\"}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Email: {userEmail}</p>\r\n             <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n"
                },
                {
                    "date": 1747103970924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,18 +7,9 @@\n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n   const { addOrder } = useOrders();\r\n   const { clearCart } = useCart();\r\n   const router = useRouter();\r\n-  const [userEmail, setUserEmail] = useState(\"\");\r\n \r\n-  useEffect(() => {\r\n-    // Lấy email từ localStorage hoặc session\r\n-    const email = localStorage.getItem('userEmail') || sessionStorage.getItem('userEmail');\r\n-    if (email) {\r\n-      setUserEmail(email);\r\n-    }\r\n-  }, []);\r\n-\r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n   const handleContinueShopping = async () => {\r\n     try {\r\n@@ -28,12 +19,9 @@\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n-          body: JSON.stringify({\r\n-            ...orderDetails,\r\n-            email: userEmail // Sử dụng email từ người dùng đã đăng nhập\r\n-          }),\r\n+          body: JSON.stringify(orderDetails),\r\n         });\r\n \r\n         const data = await response.json();\r\n \r\n@@ -122,9 +110,9 @@\n \r\n           <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n             <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n             <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Email: {userEmail}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n             <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n"
                },
                {
                    "date": 1747104057529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,11 +115,8 @@\n             <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n-            <p style={{ marginBottom: \"8px\" }}>\r\n-              Địa chỉ: {orderDetails.address}, {orderDetails.ward}, {orderDetails.district}, {orderDetails.province}\r\n-            </p>\r\n             <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n               orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n             }</p>\r\n             <p style={{ \r\n"
                },
                {
                    "date": 1747104082587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,11 @@\n             <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n+            <p style={{ marginBottom: \"8px\" }}>\r\n+              Địa chỉ: {orderDetails.address}, {orderDetails.ward}, {orderDetails.district}, {orderDetails.province}\r\n+            </p>\r\n             <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n               orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n             }</p>\r\n             <p style={{ \r\n"
                },
                {
                    "date": 1747104251831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n             <p style={{ marginBottom: \"8px\" }}>\r\n-              Địa chỉ: {orderDetails.address}, {orderDetails.ward}, {orderDetails.district}, {orderDetails.province}\r\n+              Địa chỉ: {orderDetails.apartment ? `${orderDetails.apartment}, ` : ''}{orderDetails.ward}, {orderDetails.district}, {orderDetails.province}\r\n             </p>\r\n             <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n               orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n             }</p>\r\n"
                },
                {
                    "date": 1747104450082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,14 @@\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n             <p style={{ marginBottom: \"8px\" }}>\r\n-              Địa chỉ: {orderDetails.apartment ? `${orderDetails.apartment}, ` : ''}{orderDetails.ward}, {orderDetails.district}, {orderDetails.province}\r\n+              Địa chỉ: {[\r\n+                orderDetails.apartment,\r\n+                orderDetails.ward,\r\n+                orderDetails.district,\r\n+                orderDetails.province\r\n+              ].filter(Boolean).join(\", \")}\r\n             </p>\r\n             <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n               orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n             }</p>\r\n"
                },
                {
                    "date": 1747108063474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n             <p style={{ marginBottom: \"8px\" }}>\r\n               Địa chỉ: {[\r\n-                orderDetails.apartment,\r\n+                orderDetails.address,\r\n                 orderDetails.ward,\r\n                 orderDetails.district,\r\n                 orderDetails.province\r\n               ].filter(Boolean).join(\", \")}\r\n"
                },
                {
                    "date": 1747108226418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,14 +116,9 @@\n             {orderDetails.additionalPhone && (\r\n               <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n             )}\r\n             <p style={{ marginBottom: \"8px\" }}>\r\n-              Địa chỉ: {[\r\n-                orderDetails.address,\r\n-                orderDetails.ward,\r\n-                orderDetails.district,\r\n-                orderDetails.province\r\n-              ].filter(Boolean).join(\", \")}\r\n+              Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n             </p>\r\n             <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n               orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n             }</p>\r\n"
                },
                {
                    "date": 1747109224361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,11 @@\n   const router = useRouter();\r\n \r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n+  // Log kiểm tra orderDetails\r\n+  console.log('OrderConfirmationModal orderDetails:', orderDetails);\r\n+\r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n         // Gửi đơn hàng lên server\r\n"
                },
                {
                    "date": 1747109289488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,8 @@\n   const router = useRouter();\r\n \r\n   if (!isOpen || !orderDetails) return null;\r\n \r\n-  // Log kiểm tra orderDetails\r\n-  console.log('OrderConfirmationModal orderDetails:', orderDetails);\r\n-\r\n   const handleContinueShopping = async () => {\r\n     try {\r\n       if (orderDetails) {\r\n         // Gửi đơn hàng lên server\r\n"
                },
                {
                    "date": 1747213198517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,17 +69,46 @@\n           }}>\r\n             XÁC NHẬN ĐƠN HÀNG\r\n           </h2>\r\n \r\n-          {/* Thông tin sản phẩm */}\r\n+          {/* Fixed Order Information */}\r\n           <div style={{ marginBottom: \"20px\" }}>\r\n+            <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n+            {orderDetails.additionalPhone && (\r\n+              <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n+            )}\r\n+            <p style={{ marginBottom: \"8px\" }}>\r\n+              Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n+            </p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n+              orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n+            }</p>\r\n+            <p style={{ \r\n+              marginBottom: \"8px\",\r\n+              fontSize: \"1em\",\r\n+              fontWeight: \"bold\"\r\n+            }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n+          </div>\r\n+\r\n+          {/* Scrollable Product List */}\r\n+          <div style={{ \r\n+            maxHeight: \"300px\", \r\n+            overflowY: \"auto\",\r\n+            marginBottom: \"20px\",\r\n+            padding: \"10px\",\r\n+            backgroundColor: \"#f8f8f8\",\r\n+            borderRadius: \"4px\"\r\n+          }}>\r\n             {orderDetails.items.map((item, index) => (\r\n               <div key={index} style={{ \r\n                 display: \"flex\", \r\n                 alignItems: \"center\", \r\n                 marginBottom: \"15px\",\r\n                 padding: \"10px\",\r\n-                backgroundColor: \"#f8f8f8\",\r\n+                backgroundColor: \"#ffffff\",\r\n                 borderRadius: \"4px\"\r\n               }}>\r\n                 <img \r\n                   src={item.image} \r\n@@ -107,29 +136,8 @@\n               </div>\r\n             ))}\r\n           </div>\r\n \r\n-          <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n-            <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n-            {orderDetails.additionalPhone && (\r\n-              <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n-            )}\r\n-            <p style={{ marginBottom: \"8px\" }}>\r\n-              Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n-            </p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n-              orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-            }</p>\r\n-            <p style={{ \r\n-              marginBottom: \"8px\",\r\n-              fontSize: \"1em\",\r\n-              fontWeight: \"bold\"\r\n-            }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n-          </div>\r\n-\r\n           {orderDetails.paymentMethod === 'bank' && (\r\n             <div style={{\r\n               backgroundColor: \"#f8f8f8\",\r\n               padding: \"15px\",\r\n@@ -140,11 +148,10 @@\n                 Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n               </p>\r\n             </div>\r\n           )}\r\n-        </div>\r\n \r\n-        <div className=\"border-t border-gray-200\">\r\n+          {/* Fixed Confirm Button */}\r\n           <button\r\n             onClick={handleContinueShopping}\r\n             style={{\r\n               width: \"100%\",\r\n"
                },
                {
                    "date": 1747213296232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,46 +69,17 @@\n           }}>\r\n             XÁC NHẬN ĐƠN HÀNG\r\n           </h2>\r\n \r\n-          {/* Fixed Order Information */}\r\n+          {/* Thông tin sản phẩm */}\r\n           <div style={{ marginBottom: \"20px\" }}>\r\n-            <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n-            {orderDetails.additionalPhone && (\r\n-              <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n-            )}\r\n-            <p style={{ marginBottom: \"8px\" }}>\r\n-              Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n-            </p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n-              orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-            }</p>\r\n-            <p style={{ \r\n-              marginBottom: \"8px\",\r\n-              fontSize: \"1em\",\r\n-              fontWeight: \"bold\"\r\n-            }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n-          </div>\r\n-\r\n-          {/* Scrollable Product List */}\r\n-          <div style={{ \r\n-            maxHeight: \"300px\", \r\n-            overflowY: \"auto\",\r\n-            marginBottom: \"20px\",\r\n-            padding: \"10px\",\r\n-            backgroundColor: \"#f8f8f8\",\r\n-            borderRadius: \"4px\"\r\n-          }}>\r\n             {orderDetails.items.map((item, index) => (\r\n               <div key={index} style={{ \r\n                 display: \"flex\", \r\n                 alignItems: \"center\", \r\n                 marginBottom: \"15px\",\r\n                 padding: \"10px\",\r\n-                backgroundColor: \"#ffffff\",\r\n+                backgroundColor: \"#f8f8f8\",\r\n                 borderRadius: \"4px\"\r\n               }}>\r\n                 <img \r\n                   src={item.image} \r\n@@ -136,8 +107,29 @@\n               </div>\r\n             ))}\r\n           </div>\r\n \r\n+          <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n+            <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n+            {orderDetails.additionalPhone && (\r\n+              <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n+            )}\r\n+            <p style={{ marginBottom: \"8px\" }}>\r\n+              Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n+            </p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n+              orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n+            }</p>\r\n+            <p style={{ \r\n+              marginBottom: \"8px\",\r\n+              fontSize: \"1em\",\r\n+              fontWeight: \"bold\"\r\n+            }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n+          </div>\r\n+\r\n           {orderDetails.paymentMethod === 'bank' && (\r\n             <div style={{\r\n               backgroundColor: \"#f8f8f8\",\r\n               padding: \"15px\",\r\n@@ -148,10 +140,11 @@\n                 Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n               </p>\r\n             </div>\r\n           )}\r\n+        </div>\r\n \r\n-          {/* Fixed Confirm Button */}\r\n+        <div className=\"border-t border-gray-200\">\r\n           <button\r\n             onClick={handleContinueShopping}\r\n             style={{\r\n               width: \"100%\",\r\n"
                },
                {
                    "date": 1747213316758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n       <motion.div\r\n         initial={{ opacity: 0, y: 20 }}\r\n         animate={{ opacity: 1, y: 0 }}\r\n-        className=\"bg-white/80 w-11/12 max-w-md relative\"\r\n+        className=\"bg-white/80 w-11/12 max-w-4xl relative\"\r\n       >\r\n         <button\r\n           onClick={onClose}\r\n           className=\"absolute top-4 right-4 text-black\"\r\n@@ -57,111 +57,134 @@\n             <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n           </svg>\r\n         </button>\r\n \r\n-        <div className=\"text-center py-8 px-6\">\r\n+        <div className=\"py-8 px-6\">\r\n           <h2 style={{ \r\n             fontSize: \"1.2em\", \r\n             color: \"#000000\", \r\n             textTransform: \"uppercase\", \r\n             letterSpacing: \"0.1em\", \r\n             marginBottom: \"20px\",\r\n-            fontWeight: \"bold\"\r\n+            fontWeight: \"bold\",\r\n+            textAlign: \"center\"\r\n           }}>\r\n             XÁC NHẬN ĐƠN HÀNG\r\n           </h2>\r\n \r\n-          {/* Thông tin sản phẩm */}\r\n-          <div style={{ marginBottom: \"20px\" }}>\r\n-            {orderDetails.items.map((item, index) => (\r\n-              <div key={index} style={{ \r\n-                display: \"flex\", \r\n-                alignItems: \"center\", \r\n-                marginBottom: \"15px\",\r\n-                padding: \"10px\",\r\n+          <div style={{ display: \"flex\", gap: \"30px\" }}>\r\n+            {/* Left side - Scrollable Product List */}\r\n+            <div style={{ flex: \"1\" }}>\r\n+              <div style={{ \r\n+                maxHeight: \"500px\", \r\n+                overflowY: \"auto\",\r\n+                padding: \"15px\",\r\n                 backgroundColor: \"#f8f8f8\",\r\n                 borderRadius: \"4px\"\r\n               }}>\r\n-                <img \r\n-                  src={item.image} \r\n-                  alt={item.name} \r\n-                  style={{\r\n-                    width: \"80px\",\r\n-                    height: \"80px\",\r\n-                    objectFit: \"cover\",\r\n-                    marginRight: \"15px\"\r\n-                  }}\r\n-                />\r\n-                <div style={{ textAlign: \"left\" }}>\r\n-                  <p style={{ \r\n-                    fontSize: \"0.9em\", \r\n-                    fontWeight: \"bold\",\r\n-                    marginBottom: \"4px\" \r\n-                  }}>{item.name}</p>\r\n-                  <p style={{ fontSize: \"0.8em\" }}>Size: {item.size}</p>\r\n-                  <p style={{ fontSize: \"0.8em\" }}>Số lượng: {item.quantity}</p>\r\n-                  <p style={{ \r\n-                    fontSize: \"0.8em\",\r\n-                    fontWeight: \"bold\"\r\n-                  }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n-                </div>\r\n+                {orderDetails.items.map((item, index) => (\r\n+                  <div key={index} style={{ \r\n+                    display: \"flex\", \r\n+                    alignItems: \"center\", \r\n+                    marginBottom: \"15px\",\r\n+                    padding: \"15px\",\r\n+                    backgroundColor: \"#ffffff\",\r\n+                    borderRadius: \"4px\",\r\n+                    boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\r\n+                  }}>\r\n+                    <img \r\n+                      src={item.image} \r\n+                      alt={item.name} \r\n+                      style={{\r\n+                        width: \"100px\",\r\n+                        height: \"100px\",\r\n+                        objectFit: \"cover\",\r\n+                        marginRight: \"15px\"\r\n+                      }}\r\n+                    />\r\n+                    <div style={{ textAlign: \"left\", flex: 1 }}>\r\n+                      <p style={{ \r\n+                        fontSize: \"1em\", \r\n+                        fontWeight: \"bold\",\r\n+                        marginBottom: \"6px\" \r\n+                      }}>{item.name}</p>\r\n+                      <p style={{ fontSize: \"0.9em\", marginBottom: \"4px\" }}>Size: {item.size}</p>\r\n+                      <p style={{ fontSize: \"0.9em\", marginBottom: \"4px\" }}>Số lượng: {item.quantity}</p>\r\n+                      <p style={{ \r\n+                        fontSize: \"0.9em\",\r\n+                        fontWeight: \"bold\"\r\n+                      }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n+                    </div>\r\n+                  </div>\r\n+                ))}\r\n               </div>\r\n-            ))}\r\n-          </div>\r\n+            </div>\r\n \r\n-          <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n-            <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n-            {orderDetails.additionalPhone && (\r\n-              <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n-            )}\r\n-            <p style={{ marginBottom: \"8px\" }}>\r\n-              Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n-            </p>\r\n-            <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n-              orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-            }</p>\r\n-            <p style={{ \r\n-              marginBottom: \"8px\",\r\n-              fontSize: \"1em\",\r\n-              fontWeight: \"bold\"\r\n-            }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n-          </div>\r\n+            {/* Right side - Fixed Order Information */}\r\n+            <div style={{ flex: \"1\", padding: \"20px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\r\n+              <div style={{ marginBottom: \"20px\" }}>\r\n+                <h3 style={{ \r\n+                  fontSize: \"1.1em\", \r\n+                  fontWeight: \"bold\", \r\n+                  marginBottom: \"15px\",\r\n+                  color: \"#000000\"\r\n+                }}>Thông tin đơn hàng</h3>\r\n+                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n+                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Họ tên: {orderDetails.fullName}</p>\r\n+                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Email: {orderDetails.email}</p>\r\n+                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n+                {orderDetails.additionalPhone && (\r\n+                  <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n+                )}\r\n+                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>\r\n+                  Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n+                </p>\r\n+                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Phương thức thanh toán: {\r\n+                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n+                }</p>\r\n+                <p style={{ \r\n+                  marginBottom: \"10px\",\r\n+                  fontSize: \"1.1em\",\r\n+                  fontWeight: \"bold\",\r\n+                  color: \"#000000\"\r\n+                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n+              </div>\r\n \r\n-          {orderDetails.paymentMethod === 'bank' && (\r\n-            <div style={{\r\n-              backgroundColor: \"#f8f8f8\",\r\n-              padding: \"15px\",\r\n-              marginBottom: \"20px\",\r\n-              borderRadius: \"4px\"\r\n-            }}>\r\n-              <p style={{ fontSize: \"0.9em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n-                Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n-              </p>\r\n+              {orderDetails.paymentMethod === 'bank' && (\r\n+                <div style={{\r\n+                  backgroundColor: \"#ffffff\",\r\n+                  padding: \"15px\",\r\n+                  marginBottom: \"20px\",\r\n+                  borderRadius: \"4px\",\r\n+                  border: \"1px solid #e0e0e0\"\r\n+                }}>\r\n+                  <p style={{ fontSize: \"0.9em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n+                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n+                  </p>\r\n+                </div>\r\n+              )}\r\n+\r\n+              <button\r\n+                onClick={handleContinueShopping}\r\n+                style={{\r\n+                  width: \"100%\",\r\n+                  padding: \"15px\",\r\n+                  fontSize: \"0.8em\",\r\n+                  color: \"#ffffff\",\r\n+                  backgroundColor: \"#000000\",\r\n+                  border: \"none\",\r\n+                  cursor: \"pointer\",\r\n+                  textTransform: \"uppercase\",\r\n+                  letterSpacing: \"0.1em\",\r\n+                  fontWeight: \"600\",\r\n+                  transition: \"background-color 0.3s ease\"\r\n+                }}\r\n+              >\r\n+                Xác nhận\r\n+              </button>\r\n             </div>\r\n-          )}\r\n+          </div>\r\n         </div>\r\n-\r\n-        <div className=\"border-t border-gray-200\">\r\n-          <button\r\n-            onClick={handleContinueShopping}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.7em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\"\r\n-            }}\r\n-          >\r\n-            Xác nhận\r\n-          </button>\r\n-        </div>\r\n       </motion.div>\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747363662063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,8 @@\n         }\r\n \r\n         // Thêm đơn hàng vào context và xóa giỏ hàng\r\n         await addOrder(data.order);\r\n-        clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n     } catch (error) {\r\n"
                },
                {
                    "date": 1747392909762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n         }\r\n \r\n         // Thêm đơn hàng vào context và xóa giỏ hàng\r\n         await addOrder(data.order);\r\n+        clearCart();\r\n         onClose();\r\n         router.push(`/order-success/${orderDetails.orderCode}`);\r\n       }\r\n     } catch (error) {\r\n@@ -44,9 +45,9 @@\n     <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n       <motion.div\r\n         initial={{ opacity: 0, y: 20 }}\r\n         animate={{ opacity: 1, y: 0 }}\r\n-        className=\"bg-white/80 w-11/12 max-w-4xl relative\"\r\n+        className=\"bg-white/80 w-[95vw] max-w-[400px] md:max-w-4xl relative\"\r\n       >\r\n         <button\r\n           onClick={onClose}\r\n           className=\"absolute top-4 right-4 text-black\"\r\n@@ -56,61 +57,61 @@\n             <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n           </svg>\r\n         </button>\r\n \r\n-        <div className=\"py-8 px-6\">\r\n+        <div className=\"py-4 px-2 md:py-8 md:px-6\">\r\n           <h2 style={{ \r\n-            fontSize: \"1.2em\", \r\n+            fontSize: \"1.1em\", \r\n             color: \"#000000\", \r\n             textTransform: \"uppercase\", \r\n             letterSpacing: \"0.1em\", \r\n-            marginBottom: \"20px\",\r\n+            marginBottom: \"16px\",\r\n             fontWeight: \"bold\",\r\n             textAlign: \"center\"\r\n           }}>\r\n             XÁC NHẬN ĐƠN HÀNG\r\n           </h2>\r\n \r\n-          <div style={{ display: \"flex\", gap: \"30px\" }}>\r\n+          <div className=\"flex flex-col md:flex-row gap-3 md:gap-8\">\r\n             {/* Left side - Scrollable Product List */}\r\n-            <div style={{ flex: \"1\" }}>\r\n+            <div className=\"w-full md:w-1/2\">\r\n               <div style={{ \r\n-                maxHeight: \"500px\", \r\n+                maxHeight: \"220px\", \r\n                 overflowY: \"auto\",\r\n-                padding: \"15px\",\r\n+                padding: \"10px\",\r\n                 backgroundColor: \"#f8f8f8\",\r\n                 borderRadius: \"4px\"\r\n               }}>\r\n                 {orderDetails.items.map((item, index) => (\r\n                   <div key={index} style={{ \r\n                     display: \"flex\", \r\n                     alignItems: \"center\", \r\n-                    marginBottom: \"15px\",\r\n-                    padding: \"15px\",\r\n+                    marginBottom: \"10px\",\r\n+                    padding: \"10px\",\r\n                     backgroundColor: \"#ffffff\",\r\n                     borderRadius: \"4px\",\r\n-                    boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\r\n+                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\r\n                   }}>\r\n                     <img \r\n                       src={item.image} \r\n                       alt={item.name} \r\n                       style={{\r\n-                        width: \"100px\",\r\n-                        height: \"100px\",\r\n+                        width: \"60px\",\r\n+                        height: \"60px\",\r\n                         objectFit: \"cover\",\r\n-                        marginRight: \"15px\"\r\n+                        marginRight: \"10px\"\r\n                       }}\r\n                     />\r\n                     <div style={{ textAlign: \"left\", flex: 1 }}>\r\n                       <p style={{ \r\n-                        fontSize: \"1em\", \r\n+                        fontSize: \"0.95em\", \r\n                         fontWeight: \"bold\",\r\n-                        marginBottom: \"6px\" \r\n+                        marginBottom: \"4px\" \r\n                       }}>{item.name}</p>\r\n-                      <p style={{ fontSize: \"0.9em\", marginBottom: \"4px\" }}>Size: {item.size}</p>\r\n-                      <p style={{ fontSize: \"0.9em\", marginBottom: \"4px\" }}>Số lượng: {item.quantity}</p>\r\n+                      <p style={{ fontSize: \"0.85em\", marginBottom: \"2px\" }}>Size: {item.size}</p>\r\n+                      <p style={{ fontSize: \"0.85em\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\r\n                       <p style={{ \r\n-                        fontSize: \"0.9em\",\r\n+                        fontSize: \"0.85em\",\r\n                         fontWeight: \"bold\"\r\n                       }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n                     </div>\r\n                   </div>\r\n@@ -118,46 +119,46 @@\n               </div>\r\n             </div>\r\n \r\n             {/* Right side - Fixed Order Information */}\r\n-            <div style={{ flex: \"1\", padding: \"20px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\r\n-              <div style={{ marginBottom: \"20px\" }}>\r\n+            <div className=\"w-full md:w-1/2 mt-3 md:mt-0\" style={{ padding: \"10px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\r\n+              <div style={{ marginBottom: \"12px\" }}>\r\n                 <h3 style={{ \r\n-                  fontSize: \"1.1em\", \r\n+                  fontSize: \"1em\", \r\n                   fontWeight: \"bold\", \r\n-                  marginBottom: \"15px\",\r\n+                  marginBottom: \"10px\",\r\n                   color: \"#000000\"\r\n                 }}>Thông tin đơn hàng</h3>\r\n-                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n-                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Email: {orderDetails.email}</p>\r\n-                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Họ tên: {orderDetails.fullName}</p>\r\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Email: {orderDetails.email}</p>\r\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n                 {orderDetails.additionalPhone && (\r\n-                  <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n+                  <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n                 )}\r\n-                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>\r\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>\r\n                   Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n                 </p>\r\n-                <p style={{ marginBottom: \"10px\", fontSize: \"0.95em\" }}>Phương thức thanh toán: {\r\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Phương thức thanh toán: {\r\n                   orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n                 }</p>\r\n                 <p style={{ \r\n-                  marginBottom: \"10px\",\r\n-                  fontSize: \"1.1em\",\r\n+                  marginBottom: \"6px\",\r\n+                  fontSize: \"1em\",\r\n                   fontWeight: \"bold\",\r\n                   color: \"#000000\"\r\n                 }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n               </div>\r\n \r\n               {orderDetails.paymentMethod === 'bank' && (\r\n                 <div style={{\r\n                   backgroundColor: \"#ffffff\",\r\n-                  padding: \"15px\",\r\n-                  marginBottom: \"20px\",\r\n+                  padding: \"10px\",\r\n+                  marginBottom: \"12px\",\r\n                   borderRadius: \"4px\",\r\n                   border: \"1px solid #e0e0e0\"\r\n                 }}>\r\n-                  <p style={{ fontSize: \"0.9em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n+                  <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n                     Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n                   </p>\r\n                 </div>\r\n               )}\r\n@@ -165,18 +166,19 @@\n               <button\r\n                 onClick={handleContinueShopping}\r\n                 style={{\r\n                   width: \"100%\",\r\n-                  padding: \"15px\",\r\n-                  fontSize: \"0.8em\",\r\n+                  padding: \"14px\",\r\n+                  fontSize: \"0.9em\",\r\n                   color: \"#ffffff\",\r\n                   backgroundColor: \"#000000\",\r\n                   border: \"none\",\r\n                   cursor: \"pointer\",\r\n                   textTransform: \"uppercase\",\r\n                   letterSpacing: \"0.1em\",\r\n                   fontWeight: \"600\",\r\n-                  transition: \"background-color 0.3s ease\"\r\n+                  borderRadius: \"4px\",\r\n+                  marginTop: \"8px\"\r\n                 }}\r\n               >\r\n                 Xác nhận\r\n               </button>\r\n"
                },
                {
                    "date": 1747393107102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,191 +1,191 @@\n-import { useOrders } from '../context/OrderContext';\r\n-import { useCart } from '../context/CartContext';\r\n-import { motion } from \"framer-motion\";\r\n-import { useRouter } from 'next/navigation';\r\n-import { useState, useEffect } from 'react';\r\n-\r\n-export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n-  const { addOrder } = useOrders();\r\n-  const { clearCart } = useCart();\r\n-  const router = useRouter();\r\n-\r\n-  if (!isOpen || !orderDetails) return null;\r\n-\r\n-  const handleContinueShopping = async () => {\r\n-    try {\r\n-      if (orderDetails) {\r\n-        // Gửi đơn hàng lên server\r\n-        const response = await fetch('/api/orders', {\r\n-          method: 'POST',\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-          },\r\n-          body: JSON.stringify(orderDetails),\r\n-        });\r\n-\r\n-        const data = await response.json();\r\n-\r\n-        if (!response.ok) {\r\n-          throw new Error(data.message || 'Không thể tạo đơn hàng');\r\n-        }\r\n-\r\n-        // Thêm đơn hàng vào context và xóa giỏ hàng\r\n-        await addOrder(data.order);\r\n-        clearCart();\r\n-        onClose();\r\n-        router.push(`/order-success/${orderDetails.orderCode}`);\r\n-      }\r\n-    } catch (error) {\r\n-      console.error('Error creating order:', error);\r\n-      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-      <motion.div\r\n-        initial={{ opacity: 0, y: 20 }}\r\n-        animate={{ opacity: 1, y: 0 }}\r\n-        className=\"bg-white/80 w-[95vw] max-w-[400px] md:max-w-4xl relative\"\r\n-      >\r\n-        <button\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-black\"\r\n-        >\r\n-          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n-            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-          </svg>\r\n-        </button>\r\n-\r\n-        <div className=\"py-4 px-2 md:py-8 md:px-6\">\r\n-          <h2 style={{ \r\n-            fontSize: \"1.1em\", \r\n-            color: \"#000000\", \r\n-            textTransform: \"uppercase\", \r\n-            letterSpacing: \"0.1em\", \r\n-            marginBottom: \"16px\",\r\n-            fontWeight: \"bold\",\r\n-            textAlign: \"center\"\r\n-          }}>\r\n-            XÁC NHẬN ĐƠN HÀNG\r\n-          </h2>\r\n-\r\n-          <div className=\"flex flex-col md:flex-row gap-3 md:gap-8\">\r\n-            {/* Left side - Scrollable Product List */}\r\n-            <div className=\"w-full md:w-1/2\">\r\n-              <div style={{ \r\n-                maxHeight: \"220px\", \r\n-                overflowY: \"auto\",\r\n-                padding: \"10px\",\r\n-                backgroundColor: \"#f8f8f8\",\r\n-                borderRadius: \"4px\"\r\n-              }}>\r\n-                {orderDetails.items.map((item, index) => (\r\n-                  <div key={index} style={{ \r\n-                    display: \"flex\", \r\n-                    alignItems: \"center\", \r\n-                    marginBottom: \"10px\",\r\n-                    padding: \"10px\",\r\n-                    backgroundColor: \"#ffffff\",\r\n-                    borderRadius: \"4px\",\r\n-                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\r\n-                  }}>\r\n-                    <img \r\n-                      src={item.image} \r\n-                      alt={item.name} \r\n-                      style={{\r\n-                        width: \"60px\",\r\n-                        height: \"60px\",\r\n-                        objectFit: \"cover\",\r\n-                        marginRight: \"10px\"\r\n-                      }}\r\n-                    />\r\n-                    <div style={{ textAlign: \"left\", flex: 1 }}>\r\n-                      <p style={{ \r\n-                        fontSize: \"0.95em\", \r\n-                        fontWeight: \"bold\",\r\n-                        marginBottom: \"4px\" \r\n-                      }}>{item.name}</p>\r\n-                      <p style={{ fontSize: \"0.85em\", marginBottom: \"2px\" }}>Size: {item.size}</p>\r\n-                      <p style={{ fontSize: \"0.85em\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\r\n-                      <p style={{ \r\n-                        fontSize: \"0.85em\",\r\n-                        fontWeight: \"bold\"\r\n-                      }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n-                    </div>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-            </div>\r\n-\r\n-            {/* Right side - Fixed Order Information */}\r\n-            <div className=\"w-full md:w-1/2 mt-3 md:mt-0\" style={{ padding: \"10px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\r\n-              <div style={{ marginBottom: \"12px\" }}>\r\n-                <h3 style={{ \r\n-                  fontSize: \"1em\", \r\n-                  fontWeight: \"bold\", \r\n-                  marginBottom: \"10px\",\r\n-                  color: \"#000000\"\r\n-                }}>Thông tin đơn hàng</h3>\r\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Họ tên: {orderDetails.fullName}</p>\r\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Email: {orderDetails.email}</p>\r\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n-                {orderDetails.additionalPhone && (\r\n-                  <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n-                )}\r\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>\r\n-                  Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\r\n-                </p>\r\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Phương thức thanh toán: {\r\n-                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-                }</p>\r\n-                <p style={{ \r\n-                  marginBottom: \"6px\",\r\n-                  fontSize: \"1em\",\r\n-                  fontWeight: \"bold\",\r\n-                  color: \"#000000\"\r\n-                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\r\n-              </div>\r\n-\r\n-              {orderDetails.paymentMethod === 'bank' && (\r\n-                <div style={{\r\n-                  backgroundColor: \"#ffffff\",\r\n-                  padding: \"10px\",\r\n-                  marginBottom: \"12px\",\r\n-                  borderRadius: \"4px\",\r\n-                  border: \"1px solid #e0e0e0\"\r\n-                }}>\r\n-                  <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n-                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n-                  </p>\r\n-                </div>\r\n-              )}\r\n-\r\n-              <button\r\n-                onClick={handleContinueShopping}\r\n-                style={{\r\n-                  width: \"100%\",\r\n-                  padding: \"14px\",\r\n-                  fontSize: \"0.9em\",\r\n-                  color: \"#ffffff\",\r\n-                  backgroundColor: \"#000000\",\r\n-                  border: \"none\",\r\n-                  cursor: \"pointer\",\r\n-                  textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\",\r\n-                  fontWeight: \"600\",\r\n-                  borderRadius: \"4px\",\r\n-                  marginTop: \"8px\"\r\n-                }}\r\n-              >\r\n-                Xác nhận\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </motion.div>\r\n-    </div>\r\n-  );\r\n+import { useOrders } from '../context/OrderContext';\n+import { useCart } from '../context/CartContext';\n+import { motion } from \"framer-motion\";\n+import { useRouter } from 'next/navigation';\n+import { useState, useEffect } from 'react';\n+\n+export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\n+  const { addOrder } = useOrders();\n+  const { clearCart } = useCart();\n+  const router = useRouter();\n+\n+  if (!isOpen || !orderDetails) return null;\n+\n+  const handleContinueShopping = async () => {\n+    try {\n+      if (orderDetails) {\n+        // Gửi đơn hàng lên server\n+        const response = await fetch('/api/orders', {\n+          method: 'POST',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          body: JSON.stringify(orderDetails),\n+        });\n+\n+        const data = await response.json();\n+\n+        if (!response.ok) {\n+          throw new Error(data.message || 'Không thể tạo đơn hàng');\n+        }\n+\n+        // Thêm đơn hàng vào context và xóa giỏ hàng\n+        await addOrder(data.order);\n+        clearCart();\n+        onClose();\n+        router.push(`/order-success/${orderDetails.orderCode}`);\n+      }\n+    } catch (error) {\n+      console.error('Error creating order:', error);\n+      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\n+    }\n+  };\n+\n+  return (\n+    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\n+      <motion.div\n+        initial={{ opacity: 0, y: 20 }}\n+        animate={{ opacity: 1, y: 0 }}\n+        className=\"bg-white/80 w-[95vw] max-w-[400px] md:max-w-4xl relative\"\n+      >\n+        <button\n+          onClick={onClose}\n+          className=\"absolute top-4 right-4 text-black\"\n+        >\n+          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n+            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n+          </svg>\n+        </button>\n+\n+        <div className=\"py-4 px-2 md:py-8 md:px-6\">\n+          <h2 style={{ \n+            fontSize: \"1.1em\", \n+            color: \"#000000\", \n+            textTransform: \"uppercase\", \n+            letterSpacing: \"0.1em\", \n+            marginBottom: \"16px\",\n+            fontWeight: \"bold\",\n+            textAlign: \"center\"\n+          }}>\n+            XÁC NHẬN ĐƠN HÀNG\n+          </h2>\n+\n+          <div className=\"flex flex-col md:flex-row gap-3 md:gap-8\">\n+            {/* Left side - Scrollable Product List */}\n+            <div className=\"w-full md:w-1/2\">\n+              <div style={{ \n+                maxHeight: \"220px\", \n+                overflowY: \"auto\",\n+                padding: \"10px\",\n+                backgroundColor: \"#f8f8f8\",\n+                borderRadius: \"4px\"\n+              }}>\n+                {orderDetails.items.map((item, index) => (\n+                  <div key={index} style={{ \n+                    display: \"flex\", \n+                    alignItems: \"center\", \n+                    marginBottom: \"10px\",\n+                    padding: \"10px\",\n+                    backgroundColor: \"#ffffff\",\n+                    borderRadius: \"4px\",\n+                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n+                  }}>\n+                    <img \n+                      src={item.image} \n+                      alt={item.name} \n+                      style={{\n+                        width: \"60px\",\n+                        height: \"60px\",\n+                        objectFit: \"cover\",\n+                        marginRight: \"10px\"\n+                      }}\n+                    />\n+                    <div style={{ textAlign: \"left\", flex: 1 }}>\n+                      <p style={{ \n+                        fontSize: \"0.95em\", \n+                        fontWeight: \"bold\",\n+                        marginBottom: \"4px\" \n+                      }}>{item.name}</p>\n+                      <p style={{ fontSize: \"0.85em\", marginBottom: \"2px\" }}>Size: {item.size}</p>\n+                      <p style={{ fontSize: \"0.85em\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\n+                      <p style={{ \n+                        fontSize: \"0.85em\",\n+                        fontWeight: \"bold\"\n+                      }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\n+                    </div>\n+                  </div>\n+                ))}\n+              </div>\n+            </div>\n+\n+            {/* Right side - Fixed Order Information */}\n+            <div className=\"w-full md:w-1/2 mt-3 md:mt-0\" style={{ padding: \"10px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n+              <div style={{ marginBottom: \"12px\" }}>\n+                <h3 style={{ \n+                  fontSize: \"1em\", \n+                  fontWeight: \"bold\", \n+                  marginBottom: \"10px\",\n+                  color: \"#000000\"\n+                }}>Thông tin đơn hàng</h3>\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Họ tên: {orderDetails.fullName}</p>\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Email: {orderDetails.email}</p>\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Số điện thoại: {orderDetails.phone}</p>\n+                {orderDetails.additionalPhone && (\n+                  <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\n+                )}\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>\n+                  Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n+                </p>\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Phương thức thanh toán: {\n+                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n+                }</p>\n+                <p style={{ \n+                  marginBottom: \"6px\",\n+                  fontSize: \"1em\",\n+                  fontWeight: \"bold\",\n+                  color: \"#000000\"\n+                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\n+              </div>\n+\n+              {orderDetails.paymentMethod === 'bank' && (\n+                <div style={{\n+                  backgroundColor: \"#ffffff\",\n+                  padding: \"10px\",\n+                  marginBottom: \"12px\",\n+                  borderRadius: \"4px\",\n+                  border: \"1px solid #e0e0e0\"\n+                }}>\n+                  <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\n+                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\n+                  </p>\n+                </div>\n+              )}\n+\n+              <button\n+                onClick={handleContinueShopping}\n+                style={{\n+                  width: \"100%\",\n+                  padding: \"14px\",\n+                  fontSize: \"0.9em\",\n+                  color: \"#ffffff\",\n+                  backgroundColor: \"#000000\",\n+                  border: \"none\",\n+                  cursor: \"pointer\",\n+                  textTransform: \"uppercase\",\n+                  letterSpacing: \"0.1em\",\n+                  fontWeight: \"600\",\n+                  borderRadius: \"4px\",\n+                  marginTop: \"8px\"\n+                }}\n+              >\n+                Xác nhận\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      </motion.div>\n+    </div>\n+  );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747393148492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,73 +45,73 @@\n     <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\n       <motion.div\n         initial={{ opacity: 0, y: 20 }}\n         animate={{ opacity: 1, y: 0 }}\n-        className=\"bg-white/80 w-[95vw] max-w-[400px] md:max-w-4xl relative\"\n+        className=\"bg-white/80 w-[95vw] max-w-[350px] md:max-w-4xl relative\"\n       >\n         <button\n           onClick={onClose}\n-          className=\"absolute top-4 right-4 text-black\"\n+          className=\"absolute top-2 right-2 text-black\"\n         >\n-          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n             <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n             <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n           </svg>\n         </button>\n \n-        <div className=\"py-4 px-2 md:py-8 md:px-6\">\n+        <div className=\"py-3 px-2 md:py-8 md:px-6\">\n           <h2 style={{ \n-            fontSize: \"1.1em\", \n+            fontSize: \"1em\", \n             color: \"#000000\", \n             textTransform: \"uppercase\", \n             letterSpacing: \"0.1em\", \n-            marginBottom: \"16px\",\n+            marginBottom: \"12px\",\n             fontWeight: \"bold\",\n             textAlign: \"center\"\n           }}>\n             XÁC NHẬN ĐƠN HÀNG\n           </h2>\n \n-          <div className=\"flex flex-col md:flex-row gap-3 md:gap-8\">\n+          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8\">\n             {/* Left side - Scrollable Product List */}\n             <div className=\"w-full md:w-1/2\">\n               <div style={{ \n-                maxHeight: \"220px\", \n+                maxHeight: \"180px\", \n                 overflowY: \"auto\",\n-                padding: \"10px\",\n+                padding: \"8px\",\n                 backgroundColor: \"#f8f8f8\",\n                 borderRadius: \"4px\"\n               }}>\n                 {orderDetails.items.map((item, index) => (\n                   <div key={index} style={{ \n                     display: \"flex\", \n                     alignItems: \"center\", \n-                    marginBottom: \"10px\",\n-                    padding: \"10px\",\n+                    marginBottom: \"8px\",\n+                    padding: \"8px\",\n                     backgroundColor: \"#ffffff\",\n                     borderRadius: \"4px\",\n                     boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n                   }}>\n                     <img \n                       src={item.image} \n                       alt={item.name} \n                       style={{\n-                        width: \"60px\",\n-                        height: \"60px\",\n+                        width: \"50px\",\n+                        height: \"50px\",\n                         objectFit: \"cover\",\n-                        marginRight: \"10px\"\n+                        marginRight: \"8px\"\n                       }}\n                     />\n                     <div style={{ textAlign: \"left\", flex: 1 }}>\n                       <p style={{ \n-                        fontSize: \"0.95em\", \n+                        fontSize: \"0.9em\", \n                         fontWeight: \"bold\",\n-                        marginBottom: \"4px\" \n+                        marginBottom: \"2px\" \n                       }}>{item.name}</p>\n-                      <p style={{ fontSize: \"0.85em\", marginBottom: \"2px\" }}>Size: {item.size}</p>\n-                      <p style={{ fontSize: \"0.85em\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\n                       <p style={{ \n-                        fontSize: \"0.85em\",\n+                        fontSize: \"0.8em\",\n                         fontWeight: \"bold\"\n                       }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\n                     </div>\n                   </div>\n@@ -119,46 +119,46 @@\n               </div>\n             </div>\n \n             {/* Right side - Fixed Order Information */}\n-            <div className=\"w-full md:w-1/2 mt-3 md:mt-0\" style={{ padding: \"10px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n-              <div style={{ marginBottom: \"12px\" }}>\n+            <div className=\"w-full md:w-1/2 mt-2 md:mt-0\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n+              <div style={{ marginBottom: \"8px\" }}>\n                 <h3 style={{ \n-                  fontSize: \"1em\", \n+                  fontSize: \"0.9em\", \n                   fontWeight: \"bold\", \n-                  marginBottom: \"10px\",\n+                  marginBottom: \"8px\",\n                   color: \"#000000\"\n                 }}>Thông tin đơn hàng</h3>\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Họ tên: {orderDetails.fullName}</p>\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Email: {orderDetails.email}</p>\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Số điện thoại: {orderDetails.phone}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Họ tên: {orderDetails.fullName}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Email: {orderDetails.email}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại: {orderDetails.phone}</p>\n                 {orderDetails.additionalPhone && (\n-                  <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\n+                  <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\n                 )}\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\n                   Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n                 </p>\n-                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Phương thức thanh toán: {\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\n                   orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n                 }</p>\n                 <p style={{ \n-                  marginBottom: \"6px\",\n-                  fontSize: \"1em\",\n+                  marginBottom: \"4px\",\n+                  fontSize: \"0.9em\",\n                   fontWeight: \"bold\",\n                   color: \"#000000\"\n                 }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\n               </div>\n \n               {orderDetails.paymentMethod === 'bank' && (\n                 <div style={{\n                   backgroundColor: \"#ffffff\",\n-                  padding: \"10px\",\n-                  marginBottom: \"12px\",\n+                  padding: \"8px\",\n+                  marginBottom: \"8px\",\n                   borderRadius: \"4px\",\n                   border: \"1px solid #e0e0e0\"\n                 }}>\n-                  <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\n+                  <p style={{ fontSize: \"0.75em\", color: \"#000000\", fontStyle: \"italic\" }}>\n                     Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\n                   </p>\n                 </div>\n               )}\n@@ -166,19 +166,19 @@\n               <button\n                 onClick={handleContinueShopping}\n                 style={{\n                   width: \"100%\",\n-                  padding: \"14px\",\n-                  fontSize: \"0.9em\",\n+                  padding: \"10px\",\n+                  fontSize: \"0.85em\",\n                   color: \"#ffffff\",\n                   backgroundColor: \"#000000\",\n                   border: \"none\",\n                   cursor: \"pointer\",\n                   textTransform: \"uppercase\",\n                   letterSpacing: \"0.1em\",\n                   fontWeight: \"600\",\n                   borderRadius: \"4px\",\n-                  marginTop: \"8px\"\n+                  marginTop: \"6px\"\n                 }}\n               >\n                 Xác nhận\n               </button>\n"
                },
                {
                    "date": 1747393202390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,191 @@\n+import { useOrders } from '../context/OrderContext';\n+import { useCart } from '../context/CartContext';\n+import { motion } from \"framer-motion\";\n+import { useRouter } from 'next/navigation';\n+import { useState, useEffect } from 'react';\n+\n+export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\n+  const { addOrder } = useOrders();\n+  const { clearCart } = useCart();\n+  const router = useRouter();\n+\n+  if (!isOpen || !orderDetails) return null;\n+\n+  const handleContinueShopping = async () => {\n+    try {\n+      if (orderDetails) {\n+        // Gửi đơn hàng lên server\n+        const response = await fetch('/api/orders', {\n+          method: 'POST',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          body: JSON.stringify(orderDetails),\n+        });\n+\n+        const data = await response.json();\n+\n+        if (!response.ok) {\n+          throw new Error(data.message || 'Không thể tạo đơn hàng');\n+        }\n+\n+        // Thêm đơn hàng vào context và xóa giỏ hàng\n+        await addOrder(data.order);\n+        clearCart();\n+        onClose();\n+        router.push(`/order-success/${orderDetails.orderCode}`);\n+      }\n+    } catch (error) {\n+      console.error('Error creating order:', error);\n+      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\n+    }\n+  };\n+\n+  return (\n+    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\n+      <motion.div\n+        initial={{ opacity: 0, y: 20 }}\n+        animate={{ opacity: 1, y: 0 }}\n+        className=\"bg-white/80 w-[95vw] max-w-[350px] md:max-w-4xl relative\"\n+      >\n+        <button\n+          onClick={onClose}\n+          className=\"absolute top-2 right-2 text-black\"\n+        >\n+          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n+            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n+          </svg>\n+        </button>\n+\n+        <div className=\"py-3 px-2 md:py-8 md:px-6\">\n+          <h2 style={{ \n+            fontSize: \"1em\", \n+            color: \"#000000\", \n+            textTransform: \"uppercase\", \n+            letterSpacing: \"0.1em\", \n+            marginBottom: \"12px\",\n+            fontWeight: \"bold\",\n+            textAlign: \"center\"\n+          }}>\n+            XÁC NHẬN ĐƠN HÀNG\n+          </h2>\n+\n+          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8\">\n+            {/* Left side - Scrollable Product List */}\n+            <div className=\"w-full md:w-1/2\">\n+              <div style={{ \n+                maxHeight: \"180px\", \n+                overflowY: \"auto\",\n+                padding: \"8px\",\n+                backgroundColor: \"#f8f8f8\",\n+                borderRadius: \"4px\"\n+              }}>\n+                {orderDetails.items.map((item, index) => (\n+                  <div key={index} style={{ \n+                    display: \"flex\", \n+                    alignItems: \"center\", \n+                    marginBottom: \"8px\",\n+                    padding: \"8px\",\n+                    backgroundColor: \"#ffffff\",\n+                    borderRadius: \"4px\",\n+                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n+                  }}>\n+                    <img \n+                      src={item.image} \n+                      alt={item.name} \n+                      style={{\n+                        width: \"50px\",\n+                        height: \"50px\",\n+                        objectFit: \"cover\",\n+                        marginRight: \"8px\"\n+                      }}\n+                    />\n+                    <div style={{ textAlign: \"left\", flex: 1 }}>\n+                      <p style={{ \n+                        fontSize: \"0.9em\", \n+                        fontWeight: \"bold\",\n+                        marginBottom: \"2px\" \n+                      }}>{item.name}</p>\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\n+                      <p style={{ \n+                        fontSize: \"0.8em\",\n+                        fontWeight: \"bold\"\n+                      }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\n+                    </div>\n+                  </div>\n+                ))}\n+              </div>\n+            </div>\n+\n+            {/* Right side - Fixed Order Information */}\n+            <div className=\"w-full md:w-1/2 mt-2 md:mt-0\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n+              <div style={{ marginBottom: \"8px\" }}>\n+                <h3 style={{ \n+                  fontSize: \"0.9em\", \n+                  fontWeight: \"bold\", \n+                  marginBottom: \"8px\",\n+                  color: \"#000000\"\n+                }}>Thông tin đơn hàng</h3>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Họ tên: {orderDetails.fullName}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Email: {orderDetails.email}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại: {orderDetails.phone}</p>\n+                {orderDetails.additionalPhone && (\n+                  <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\n+                )}\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\n+                  Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n+                </p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\n+                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n+                }</p>\n+                <p style={{ \n+                  marginBottom: \"4px\",\n+                  fontSize: \"0.9em\",\n+                  fontWeight: \"bold\",\n+                  color: \"#000000\"\n+                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\n+              </div>\n+\n+              {orderDetails.paymentMethod === 'bank' && (\n+                <div style={{\n+                  backgroundColor: \"#ffffff\",\n+                  padding: \"8px\",\n+                  marginBottom: \"8px\",\n+                  borderRadius: \"4px\",\n+                  border: \"1px solid #e0e0e0\"\n+                }}>\n+                  <p style={{ fontSize: \"0.75em\", color: \"#000000\", fontStyle: \"italic\" }}>\n+                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\n+                  </p>\n+                </div>\n+              )}\n+\n+              <button\n+                onClick={handleContinueShopping}\n+                style={{\n+                  width: \"100%\",\n+                  padding: \"10px\",\n+                  fontSize: \"0.85em\",\n+                  color: \"#ffffff\",\n+                  backgroundColor: \"#000000\",\n+                  border: \"none\",\n+                  cursor: \"pointer\",\n+                  textTransform: \"uppercase\",\n+                  letterSpacing: \"0.1em\",\n+                  fontWeight: \"600\",\n+                  borderRadius: \"4px\",\n+                  marginTop: \"6px\"\n+                }}\n+              >\n+                Xác nhận\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      </motion.div>\n+    </div>\n+  );\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747808092946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,21 @@\n import { useOrders } from '../context/OrderContext';\n import { useCart } from '../context/CartContext';\n import { motion } from \"framer-motion\";\n import { useRouter } from 'next/navigation';\n-import { useState, useEffect } from 'react';\n+import { useState } from 'react';\n \n export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\n   const { addOrder } = useOrders();\n   const { clearCart } = useCart();\n   const router = useRouter();\n+  const [isSubmitting, setIsSubmitting] = useState(false);\n \n   if (!isOpen || !orderDetails) return null;\n \n   const handleContinueShopping = async () => {\n     try {\n+      setIsSubmitting(true);\n       if (orderDetails) {\n         // Gửi đơn hàng lên server\n         const response = await fetch('/api/orders', {\n           method: 'POST',\n@@ -37,8 +39,10 @@\n       }\n     } catch (error) {\n       console.error('Error creating order:', error);\n       alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\n+    } finally {\n+      setIsSubmitting(false);\n     }\n   };\n \n   return (\n@@ -164,219 +168,29 @@\n               )}\n \n               <button\n                 onClick={handleContinueShopping}\n+                disabled={isSubmitting}\n                 style={{\n                   width: \"100%\",\n                   padding: \"10px\",\n                   fontSize: \"0.85em\",\n                   color: \"#ffffff\",\n-                  backgroundColor: \"#000000\",\n+                  backgroundColor: isSubmitting ? \"#666666\" : \"#000000\",\n                   border: \"none\",\n-                  cursor: \"pointer\",\n+                  cursor: isSubmitting ? \"not-allowed\" : \"pointer\",\n                   textTransform: \"uppercase\",\n                   letterSpacing: \"0.1em\",\n                   fontWeight: \"600\",\n                   borderRadius: \"4px\",\n                   marginTop: \"6px\"\n                 }}\n               >\n-                Xác nhận\n+                {isSubmitting ? \"Đang xử lý...\" : \"Xác nhận\"}\n               </button>\n             </div>\n           </div>\n         </div>\n       </motion.div>\n     </div>\n   );\n-} \n-import { useOrders } from '../context/OrderContext';\n-import { useCart } from '../context/CartContext';\n-import { motion } from \"framer-motion\";\n-import { useRouter } from 'next/navigation';\n-import { useState, useEffect } from 'react';\n-\n-export default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\n-  const { addOrder } = useOrders();\n-  const { clearCart } = useCart();\n-  const router = useRouter();\n-\n-  if (!isOpen || !orderDetails) return null;\n-\n-  const handleContinueShopping = async () => {\n-    try {\n-      if (orderDetails) {\n-        // Gửi đơn hàng lên server\n-        const response = await fetch('/api/orders', {\n-          method: 'POST',\n-          headers: {\n-            'Content-Type': 'application/json',\n-          },\n-          body: JSON.stringify(orderDetails),\n-        });\n-\n-        const data = await response.json();\n-\n-        if (!response.ok) {\n-          throw new Error(data.message || 'Không thể tạo đơn hàng');\n-        }\n-\n-        // Thêm đơn hàng vào context và xóa giỏ hàng\n-        await addOrder(data.order);\n-        clearCart();\n-        onClose();\n-        router.push(`/order-success/${orderDetails.orderCode}`);\n-      }\n-    } catch (error) {\n-      console.error('Error creating order:', error);\n-      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\n-    }\n-  };\n-\n-  return (\n-    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\n-      <motion.div\n-        initial={{ opacity: 0, y: 20 }}\n-        animate={{ opacity: 1, y: 0 }}\n-        className=\"bg-white/80 w-[95vw] max-w-[350px] md:max-w-4xl relative\"\n-      >\n-        <button\n-          onClick={onClose}\n-          className=\"absolute top-2 right-2 text-black\"\n-        >\n-          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n-            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n-            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n-          </svg>\n-        </button>\n-\n-        <div className=\"py-3 px-2 md:py-8 md:px-6\">\n-          <h2 style={{ \n-            fontSize: \"1em\", \n-            color: \"#000000\", \n-            textTransform: \"uppercase\", \n-            letterSpacing: \"0.1em\", \n-            marginBottom: \"12px\",\n-            fontWeight: \"bold\",\n-            textAlign: \"center\"\n-          }}>\n-            XÁC NHẬN ĐƠN HÀNG\n-          </h2>\n-\n-          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8\">\n-            {/* Left side - Scrollable Product List */}\n-            <div className=\"w-full md:w-1/2\">\n-              <div style={{ \n-                maxHeight: \"180px\", \n-                overflowY: \"auto\",\n-                padding: \"8px\",\n-                backgroundColor: \"#f8f8f8\",\n-                borderRadius: \"4px\"\n-              }}>\n-                {orderDetails.items.map((item, index) => (\n-                  <div key={index} style={{ \n-                    display: \"flex\", \n-                    alignItems: \"center\", \n-                    marginBottom: \"8px\",\n-                    padding: \"8px\",\n-                    backgroundColor: \"#ffffff\",\n-                    borderRadius: \"4px\",\n-                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n-                  }}>\n-                    <img \n-                      src={item.image} \n-                      alt={item.name} \n-                      style={{\n-                        width: \"50px\",\n-                        height: \"50px\",\n-                        objectFit: \"cover\",\n-                        marginRight: \"8px\"\n-                      }}\n-                    />\n-                    <div style={{ textAlign: \"left\", flex: 1 }}>\n-                      <p style={{ \n-                        fontSize: \"0.9em\", \n-                        fontWeight: \"bold\",\n-                        marginBottom: \"2px\" \n-                      }}>{item.name}</p>\n-                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\n-                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\n-                      <p style={{ \n-                        fontSize: \"0.8em\",\n-                        fontWeight: \"bold\"\n-                      }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\n-                    </div>\n-                  </div>\n-                ))}\n-              </div>\n-            </div>\n-\n-            {/* Right side - Fixed Order Information */}\n-            <div className=\"w-full md:w-1/2 mt-2 md:mt-0\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n-              <div style={{ marginBottom: \"8px\" }}>\n-                <h3 style={{ \n-                  fontSize: \"0.9em\", \n-                  fontWeight: \"bold\", \n-                  marginBottom: \"8px\",\n-                  color: \"#000000\"\n-                }}>Thông tin đơn hàng</h3>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Họ tên: {orderDetails.fullName}</p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Email: {orderDetails.email}</p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại: {orderDetails.phone}</p>\n-                {orderDetails.additionalPhone && (\n-                  <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\n-                )}\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\n-                  Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n-                </p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\n-                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n-                }</p>\n-                <p style={{ \n-                  marginBottom: \"4px\",\n-                  fontSize: \"0.9em\",\n-                  fontWeight: \"bold\",\n-                  color: \"#000000\"\n-                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\n-              </div>\n-\n-              {orderDetails.paymentMethod === 'bank' && (\n-                <div style={{\n-                  backgroundColor: \"#ffffff\",\n-                  padding: \"8px\",\n-                  marginBottom: \"8px\",\n-                  borderRadius: \"4px\",\n-                  border: \"1px solid #e0e0e0\"\n-                }}>\n-                  <p style={{ fontSize: \"0.75em\", color: \"#000000\", fontStyle: \"italic\" }}>\n-                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\n-                  </p>\n-                </div>\n-              )}\n-\n-              <button\n-                onClick={handleContinueShopping}\n-                style={{\n-                  width: \"100%\",\n-                  padding: \"10px\",\n-                  fontSize: \"0.85em\",\n-                  color: \"#ffffff\",\n-                  backgroundColor: \"#000000\",\n-                  border: \"none\",\n-                  cursor: \"pointer\",\n-                  textTransform: \"uppercase\",\n-                  letterSpacing: \"0.1em\",\n-                  fontWeight: \"600\",\n-                  borderRadius: \"4px\",\n-                  marginTop: \"6px\"\n-                }}\n-              >\n-                Xác nhận\n-              </button>\n-            </div>\n-          </div>\n-        </div>\n-      </motion.div>\n-    </div>\n-  );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747808384522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n                       <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\n                       <p style={{ \n                         fontSize: \"0.8em\",\n                         fontWeight: \"bold\"\n-                      }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\n+                      }}>Giá: {(item.price || 0).toLocaleString('vi-VN')} VND</p>\n                     </div>\n                   </div>\n                 ))}\n               </div>\n@@ -149,9 +149,9 @@\n                   marginBottom: \"4px\",\n                   fontSize: \"0.9em\",\n                   fontWeight: \"bold\",\n                   color: \"#000000\"\n-                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\n+                }}>Tổng tiền: {(orderDetails.total || 0).toLocaleString('vi-VN')} VND</p>\n               </div>\n \n               {orderDetails.paymentMethod === 'bank' && (\n                 <div style={{\n"
                },
                {
                    "date": 1747808953897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,12 @@\n   const [isSubmitting, setIsSubmitting] = useState(false);\n \n   if (!isOpen || !orderDetails) return null;\n \n+  // Debug log\n+  console.log('Order Details:', orderDetails);\n+  console.log('Items:', orderDetails.items);\n+\n   const handleContinueShopping = async () => {\n     try {\n       setIsSubmitting(true);\n       if (orderDetails) {\n@@ -84,43 +88,53 @@\n                 padding: \"8px\",\n                 backgroundColor: \"#f8f8f8\",\n                 borderRadius: \"4px\"\n               }}>\n-                {orderDetails.items.map((item, index) => (\n-                  <div key={index} style={{ \n-                    display: \"flex\", \n-                    alignItems: \"center\", \n-                    marginBottom: \"8px\",\n+                {Array.isArray(orderDetails.items) && orderDetails.items.length > 0 ? (\n+                  orderDetails.items.map((item, index) => (\n+                    <div key={index} style={{ \n+                      display: \"flex\", \n+                      alignItems: \"center\", \n+                      marginBottom: \"8px\",\n+                      padding: \"8px\",\n+                      backgroundColor: \"#ffffff\",\n+                      borderRadius: \"4px\",\n+                      boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n+                    }}>\n+                      <img \n+                        src={item.image || '/placeholder.png'} \n+                        alt={item.name || 'Product'} \n+                        style={{\n+                          width: \"50px\",\n+                          height: \"50px\",\n+                          objectFit: \"cover\",\n+                          marginRight: \"8px\"\n+                        }}\n+                      />\n+                      <div style={{ textAlign: \"left\", flex: 1 }}>\n+                        <p style={{ \n+                          fontSize: \"0.9em\", \n+                          fontWeight: \"bold\",\n+                          marginBottom: \"2px\" \n+                        }}>{item.name || 'Unnamed Product'}</p>\n+                        <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size || 'N/A'}</p>\n+                        <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity || 0}</p>\n+                        <p style={{ \n+                          fontSize: \"0.8em\",\n+                          fontWeight: \"bold\"\n+                        }}>Giá: {(item.price || 0).toLocaleString('vi-VN')} VND</p>\n+                      </div>\n+                    </div>\n+                  ))\n+                ) : (\n+                  <div style={{ \n                     padding: \"8px\",\n-                    backgroundColor: \"#ffffff\",\n-                    borderRadius: \"4px\",\n-                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n+                    textAlign: \"center\",\n+                    color: \"#666\"\n                   }}>\n-                    <img \n-                      src={item.image} \n-                      alt={item.name} \n-                      style={{\n-                        width: \"50px\",\n-                        height: \"50px\",\n-                        objectFit: \"cover\",\n-                        marginRight: \"8px\"\n-                      }}\n-                    />\n-                    <div style={{ textAlign: \"left\", flex: 1 }}>\n-                      <p style={{ \n-                        fontSize: \"0.9em\", \n-                        fontWeight: \"bold\",\n-                        marginBottom: \"2px\" \n-                      }}>{item.name}</p>\n-                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\n-                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\n-                      <p style={{ \n-                        fontSize: \"0.8em\",\n-                        fontWeight: \"bold\"\n-                      }}>Giá: {(item.price || 0).toLocaleString('vi-VN')} VND</p>\n-                    </div>\n+                    Không có sản phẩm nào\n                   </div>\n-                ))}\n+                )}\n               </div>\n             </div>\n \n             {/* Right side - Fixed Order Information */}\n"
                },
                {
                    "date": 1747809268894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,8 @@\n   const [isSubmitting, setIsSubmitting] = useState(false);\n \n   if (!isOpen || !orderDetails) return null;\n \n-  // Debug log\n-  console.log('Order Details:', orderDetails);\n-  console.log('Items:', orderDetails.items);\n-\n   const handleContinueShopping = async () => {\n     try {\n       setIsSubmitting(true);\n       if (orderDetails) {\n@@ -88,53 +84,43 @@\n                 padding: \"8px\",\n                 backgroundColor: \"#f8f8f8\",\n                 borderRadius: \"4px\"\n               }}>\n-                {Array.isArray(orderDetails.items) && orderDetails.items.length > 0 ? (\n-                  orderDetails.items.map((item, index) => (\n-                    <div key={index} style={{ \n-                      display: \"flex\", \n-                      alignItems: \"center\", \n-                      marginBottom: \"8px\",\n-                      padding: \"8px\",\n-                      backgroundColor: \"#ffffff\",\n-                      borderRadius: \"4px\",\n-                      boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n-                    }}>\n-                      <img \n-                        src={item.image || '/placeholder.png'} \n-                        alt={item.name || 'Product'} \n-                        style={{\n-                          width: \"50px\",\n-                          height: \"50px\",\n-                          objectFit: \"cover\",\n-                          marginRight: \"8px\"\n-                        }}\n-                      />\n-                      <div style={{ textAlign: \"left\", flex: 1 }}>\n-                        <p style={{ \n-                          fontSize: \"0.9em\", \n-                          fontWeight: \"bold\",\n-                          marginBottom: \"2px\" \n-                        }}>{item.name || 'Unnamed Product'}</p>\n-                        <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size || 'N/A'}</p>\n-                        <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity || 0}</p>\n-                        <p style={{ \n-                          fontSize: \"0.8em\",\n-                          fontWeight: \"bold\"\n-                        }}>Giá: {(item.price || 0).toLocaleString('vi-VN')} VND</p>\n-                      </div>\n-                    </div>\n-                  ))\n-                ) : (\n-                  <div style={{ \n+                {orderDetails.items.map((item, index) => (\n+                  <div key={index} style={{ \n+                    display: \"flex\", \n+                    alignItems: \"center\", \n+                    marginBottom: \"8px\",\n                     padding: \"8px\",\n-                    textAlign: \"center\",\n-                    color: \"#666\"\n+                    backgroundColor: \"#ffffff\",\n+                    borderRadius: \"4px\",\n+                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n                   }}>\n-                    Không có sản phẩm nào\n+                    <img \n+                      src={item.image} \n+                      alt={item.name} \n+                      style={{\n+                        width: \"50px\",\n+                        height: \"50px\",\n+                        objectFit: \"cover\",\n+                        marginRight: \"8px\"\n+                      }}\n+                    />\n+                    <div style={{ textAlign: \"left\", flex: 1 }}>\n+                      <p style={{ \n+                        fontSize: \"0.9em\", \n+                        fontWeight: \"bold\",\n+                        marginBottom: \"2px\" \n+                      }}>{item.name}</p>\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\n+                      <p style={{ \n+                        fontSize: \"0.8em\",\n+                        fontWeight: \"bold\"\n+                      }}>Giá: {(item.price || 0).toLocaleString('vi-VN')} VND</p>\n+                    </div>\n                   </div>\n-                )}\n+                ))}\n               </div>\n             </div>\n \n             {/* Right side - Fixed Order Information */}\n"
                },
                {
                    "date": 1747885185446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,10 @@\n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n         onClose();\n+        \n+        // Chuyển hướng đến trang xác nhận đơn hàng thành công\n         router.push(`/order-success/${orderDetails.orderCode}`);\n       }\n     } catch (error) {\n       console.error('Error creating order:', error);\n"
                },
                {
                    "date": 1747887405508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n                 {orderDetails.additionalPhone && (\n                   <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\n                 )}\n                 <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\n-                  Địa chỉ: {[orderDetails.address, orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n+                  Địa chỉ: {[orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n                 </p>\n                 <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\n                   orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n                 }</p>\n"
                },
                {
                    "date": 1747906186078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,14 @@\n \n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n+        \n+        // Lưu email vào localStorage trước khi chuyển hướng\n+        if (orderDetails.email) {\n+          localStorage.setItem('orderEmail', orderDetails.email);\n+        }\n+        \n         onClose();\n         \n         // Chuyển hướng đến trang xác nhận đơn hàng thành công\n         router.push(`/order-success/${orderDetails.orderCode}`);\n"
                },
                {
                    "date": 1747906413470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,8 @@\n \n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n-        \n-        // Lưu email vào localStorage trước khi chuyển hướng\n-        if (orderDetails.email) {\n-          localStorage.setItem('orderEmail', orderDetails.email);\n-        }\n-        \n         onClose();\n         \n         // Chuyển hướng đến trang xác nhận đơn hàng thành công\n         router.push(`/order-success/${orderDetails.orderCode}`);\n"
                },
                {
                    "date": 1747906808772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,14 @@\n \n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n+        \n+        // Lưu email vào localStorage trước khi chuyển hướng\n+        if (orderDetails.email) {\n+          localStorage.setItem('orderEmail', orderDetails.email);\n+        }\n+        \n         onClose();\n         \n         // Chuyển hướng đến trang xác nhận đơn hàng thành công\n         router.push(`/order-success/${orderDetails.orderCode}`);\n"
                },
                {
                    "date": 1747906986253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,28 @@\n   const handleContinueShopping = async () => {\n     try {\n       setIsSubmitting(true);\n       if (orderDetails) {\n+        // Chuẩn bị dữ liệu đơn hàng\n+        const orderData = {\n+          ...orderDetails,\n+          items: orderDetails.items.map(item => ({\n+            name: item.name,\n+            size: item.size,\n+            price: item.price,\n+            quantity: item.quantity,\n+            image: item.image\n+          })),\n+          total: orderDetails.total || orderDetails.items.reduce((sum, item) => sum + (item.price * item.quantity), 0)\n+        };\n+\n         // Gửi đơn hàng lên server\n         const response = await fetch('/api/orders', {\n           method: 'POST',\n           headers: {\n             'Content-Type': 'application/json',\n           },\n-          body: JSON.stringify(orderDetails),\n+          body: JSON.stringify(orderData),\n         });\n \n         const data = await response.json();\n \n"
                },
                {
                    "date": 1747907222046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,17 @@\n             price: item.price,\n             quantity: item.quantity,\n             image: item.image\n           })),\n-          total: orderDetails.total || orderDetails.items.reduce((sum, item) => sum + (item.price * item.quantity), 0)\n+          total: orderDetails.total || orderDetails.items.reduce((sum, item) => sum + (item.price * item.quantity), 0),\n+          email: orderDetails.email,\n+          fullName: orderDetails.fullName,\n+          phone: orderDetails.phone,\n+          address: orderDetails.address,\n+          ward: orderDetails.ward,\n+          district: orderDetails.district,\n+          province: orderDetails.province,\n+          paymentMethod: orderDetails.paymentMethod || 'cod'\n         };\n \n         // Gửi đơn hàng lên server\n         const response = await fetch('/api/orders', {\n"
                },
                {
                    "date": 1747907519467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,10 @@\n   const handleContinueShopping = async () => {\n     try {\n       setIsSubmitting(true);\n       if (orderDetails) {\n+        console.log('Original order details:', orderDetails);\n+\n         // Chuẩn bị dữ liệu đơn hàng\n         const orderData = {\n           ...orderDetails,\n           items: orderDetails.items.map(item => ({\n@@ -36,8 +38,10 @@\n           province: orderDetails.province,\n           paymentMethod: orderDetails.paymentMethod || 'cod'\n         };\n \n+        console.log('Prepared order data:', orderData);\n+\n         // Gửi đơn hàng lên server\n         const response = await fetch('/api/orders', {\n           method: 'POST',\n           headers: {\n@@ -46,8 +50,9 @@\n           body: JSON.stringify(orderData),\n         });\n \n         const data = await response.json();\n+        console.log('Server response:', data);\n \n         if (!response.ok) {\n           throw new Error(data.message || 'Không thể tạo đơn hàng');\n         }\n@@ -57,14 +62,16 @@\n         clearCart();\n         \n         // Lưu email vào localStorage trước khi chuyển hướng\n         if (orderDetails.email) {\n+          console.log('Saving email to localStorage:', orderDetails.email);\n           localStorage.setItem('orderEmail', orderDetails.email);\n         }\n         \n         onClose();\n         \n         // Chuyển hướng đến trang xác nhận đơn hàng thành công\n+        console.log('Redirecting to order success page:', orderDetails.orderCode);\n         router.push(`/order-success/${orderDetails.orderCode}`);\n       }\n     } catch (error) {\n       console.error('Error creating order:', error);\n"
                },
                {
                    "date": 1747907766886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n         console.log('Original order details:', orderDetails);\n \n         // Chuẩn bị dữ liệu đơn hàng\n         const orderData = {\n-          ...orderDetails,\n           items: orderDetails.items.map(item => ({\n             name: item.name,\n             size: item.size,\n             price: item.price,\n@@ -56,8 +55,12 @@\n         if (!response.ok) {\n           throw new Error(data.message || 'Không thể tạo đơn hàng');\n         }\n \n+        if (!data.ok || !data.order) {\n+          throw new Error('Invalid server response');\n+        }\n+\n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n         \n@@ -69,10 +72,10 @@\n         \n         onClose();\n         \n         // Chuyển hướng đến trang xác nhận đơn hàng thành công\n-        console.log('Redirecting to order success page:', orderDetails.orderCode);\n-        router.push(`/order-success/${orderDetails.orderCode}`);\n+        console.log('Redirecting to order success page:', data.order.orderCode);\n+        router.push(`/order-success/${data.order.orderCode}`);\n       }\n     } catch (error) {\n       console.error('Error creating order:', error);\n       alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\n"
                },
                {
                    "date": 1747908850093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,66 +20,62 @@\n \n         // Chuẩn bị dữ liệu đơn hàng\n         const orderData = {\n           items: orderDetails.items.map(item => ({\n+            id: item.id,\n             name: item.name,\n+            price: item.price,\n+            image: item.image,\n             size: item.size,\n-            price: item.price,\n             quantity: item.quantity,\n-            image: item.image\n+            color: item.color\n           })),\n-          total: orderDetails.total || orderDetails.items.reduce((sum, item) => sum + (item.price * item.quantity), 0),\n+          total: orderDetails.total || orderDetails.items.reduce((sum, item) => sum + item.price * item.quantity, 0),\n           email: orderDetails.email,\n           fullName: orderDetails.fullName,\n           phone: orderDetails.phone,\n           address: orderDetails.address,\n           ward: orderDetails.ward,\n           district: orderDetails.district,\n           province: orderDetails.province,\n-          paymentMethod: orderDetails.paymentMethod || 'cod'\n+          paymentMethod: orderDetails.paymentMethod\n         };\n \n-        console.log('Prepared order data:', orderData);\n+        console.log('Sending order data:', JSON.stringify(orderData, null, 2));\n \n         // Gửi đơn hàng lên server\n         const response = await fetch('/api/orders', {\n           method: 'POST',\n-          headers: {\n-            'Content-Type': 'application/json',\n-          },\n-          body: JSON.stringify(orderData),\n+          headers: { 'Content-Type': 'application/json' },\n+          body: JSON.stringify(orderData)\n         });\n \n         const data = await response.json();\n         console.log('Server response:', data);\n \n-        if (!response.ok) {\n-          throw new Error(data.message || 'Không thể tạo đơn hàng');\n+        if (!data.ok) {\n+          throw new Error(data.message || 'Failed to create order');\n         }\n \n-        if (!data.ok || !data.order) {\n-          throw new Error('Invalid server response');\n-        }\n-\n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n         \n-        // Lưu email vào localStorage trước khi chuyển hướng\n+        // Lưu email vào localStorage\n         if (orderDetails.email) {\n           console.log('Saving email to localStorage:', orderDetails.email);\n           localStorage.setItem('orderEmail', orderDetails.email);\n         }\n         \n         onClose();\n         \n-        // Chuyển hướng đến trang xác nhận đơn hàng thành công\n+        // Chuyển hướng đến trang order success\n         console.log('Redirecting to order success page:', data.order.orderCode);\n         router.push(`/order-success/${data.order.orderCode}`);\n       }\n     } catch (error) {\n       console.error('Error creating order:', error);\n-      alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');\n+      alert(error.message || 'Failed to create order. Please try again.');\n     } finally {\n       setIsSubmitting(false);\n     }\n   };\n"
                },
                {
                    "date": 1748318782597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n         // Chuẩn bị dữ liệu đơn hàng\n         const orderData = {\n           items: orderDetails.items.map(item => ({\n-            id: item.id,\n+            productId: item.id,\n             name: item.name,\n             price: item.price,\n             image: item.image,\n             size: item.size,\n"
                },
                {
                    "date": 1748319139279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n         // Chuẩn bị dữ liệu đơn hàng\n         const orderData = {\n           items: orderDetails.items.map(item => ({\n-            productId: item.id,\n+            id: item.id,\n             name: item.name,\n             price: item.price,\n             image: item.image,\n             size: item.size,\n"
                },
                {
                    "date": 1748319811323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n         // Chuẩn bị dữ liệu đơn hàng\n         const orderData = {\n           items: orderDetails.items.map(item => ({\n-            id: item.id,\n+            productId: item.id,\n             name: item.name,\n             price: item.price,\n             image: item.image,\n             size: item.size,\n"
                },
                {
                    "date": 1748489257209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,12 +59,15 @@\n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n         \n-        // Lưu email vào localStorage\n+        // Lưu email vào localStorage trước khi chuyển hướng\n         if (orderDetails.email) {\n           console.log('Saving email to localStorage:', orderDetails.email);\n           localStorage.setItem('orderEmail', orderDetails.email);\n+          \n+          // Đợi một chút để đảm bảo email đã được lưu\n+          await new Promise(resolve => setTimeout(resolve, 100));\n         }\n         \n         onClose();\n         \n@@ -80,152 +83,38 @@\n     }\n   };\n \n   return (\n-    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\n+    <motion.div\n+      initial={{ opacity: 0 }}\n+      animate={{ opacity: 1 }}\n+      exit={{ opacity: 0 }}\n+      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n+    >\n       <motion.div\n-        initial={{ opacity: 0, y: 20 }}\n-        animate={{ opacity: 1, y: 0 }}\n-        className=\"bg-white/80 w-[95vw] max-w-[350px] md:max-w-4xl relative\"\n+        initial={{ scale: 0.9, opacity: 0 }}\n+        animate={{ scale: 1, opacity: 1 }}\n+        exit={{ scale: 0.9, opacity: 0 }}\n+        className=\"bg-white p-6 rounded-lg shadow-xl max-w-md w-full mx-4\"\n       >\n-        <button\n-          onClick={onClose}\n-          className=\"absolute top-2 right-2 text-black\"\n-        >\n-          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n-            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n-            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n-          </svg>\n-        </button>\n-\n-        <div className=\"py-3 px-2 md:py-8 md:px-6\">\n-          <h2 style={{ \n-            fontSize: \"1em\", \n-            color: \"#000000\", \n-            textTransform: \"uppercase\", \n-            letterSpacing: \"0.1em\", \n-            marginBottom: \"12px\",\n-            fontWeight: \"bold\",\n-            textAlign: \"center\"\n-          }}>\n-            XÁC NHẬN ĐƠN HÀNG\n-          </h2>\n-\n-          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8\">\n-            {/* Left side - Scrollable Product List */}\n-            <div className=\"w-full md:w-1/2\">\n-              <div style={{ \n-                maxHeight: \"180px\", \n-                overflowY: \"auto\",\n-                padding: \"8px\",\n-                backgroundColor: \"#f8f8f8\",\n-                borderRadius: \"4px\"\n-              }}>\n-                {orderDetails.items.map((item, index) => (\n-                  <div key={index} style={{ \n-                    display: \"flex\", \n-                    alignItems: \"center\", \n-                    marginBottom: \"8px\",\n-                    padding: \"8px\",\n-                    backgroundColor: \"#ffffff\",\n-                    borderRadius: \"4px\",\n-                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n-                  }}>\n-                    <img \n-                      src={item.image} \n-                      alt={item.name} \n-                      style={{\n-                        width: \"50px\",\n-                        height: \"50px\",\n-                        objectFit: \"cover\",\n-                        marginRight: \"8px\"\n-                      }}\n-                    />\n-                    <div style={{ textAlign: \"left\", flex: 1 }}>\n-                      <p style={{ \n-                        fontSize: \"0.9em\", \n-                        fontWeight: \"bold\",\n-                        marginBottom: \"2px\" \n-                      }}>{item.name}</p>\n-                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\n-                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\n-                      <p style={{ \n-                        fontSize: \"0.8em\",\n-                        fontWeight: \"bold\"\n-                      }}>Giá: {(item.price || 0).toLocaleString('vi-VN')} VND</p>\n-                    </div>\n-                  </div>\n-                ))}\n-              </div>\n-            </div>\n-\n-            {/* Right side - Fixed Order Information */}\n-            <div className=\"w-full md:w-1/2 mt-2 md:mt-0\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n-              <div style={{ marginBottom: \"8px\" }}>\n-                <h3 style={{ \n-                  fontSize: \"0.9em\", \n-                  fontWeight: \"bold\", \n-                  marginBottom: \"8px\",\n-                  color: \"#000000\"\n-                }}>Thông tin đơn hàng</h3>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Họ tên: {orderDetails.fullName}</p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Email: {orderDetails.email}</p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại: {orderDetails.phone}</p>\n-                {orderDetails.additionalPhone && (\n-                  <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\n-                )}\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\n-                  Địa chỉ: {[orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n-                </p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\n-                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n-                }</p>\n-                <p style={{ \n-                  marginBottom: \"4px\",\n-                  fontSize: \"0.9em\",\n-                  fontWeight: \"bold\",\n-                  color: \"#000000\"\n-                }}>Tổng tiền: {(orderDetails.total || 0).toLocaleString('vi-VN')} VND</p>\n-              </div>\n-\n-              {orderDetails.paymentMethod === 'bank' && (\n-                <div style={{\n-                  backgroundColor: \"#ffffff\",\n-                  padding: \"8px\",\n-                  marginBottom: \"8px\",\n-                  borderRadius: \"4px\",\n-                  border: \"1px solid #e0e0e0\"\n-                }}>\n-                  <p style={{ fontSize: \"0.75em\", color: \"#000000\", fontStyle: \"italic\" }}>\n-                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\n-                  </p>\n-                </div>\n-              )}\n-\n-              <button\n-                onClick={handleContinueShopping}\n-                disabled={isSubmitting}\n-                style={{\n-                  width: \"100%\",\n-                  padding: \"10px\",\n-                  fontSize: \"0.85em\",\n-                  color: \"#ffffff\",\n-                  backgroundColor: isSubmitting ? \"#666666\" : \"#000000\",\n-                  border: \"none\",\n-                  cursor: isSubmitting ? \"not-allowed\" : \"pointer\",\n-                  textTransform: \"uppercase\",\n-                  letterSpacing: \"0.1em\",\n-                  fontWeight: \"600\",\n-                  borderRadius: \"4px\",\n-                  marginTop: \"6px\"\n-                }}\n-              >\n-                {isSubmitting ? \"Đang xử lý...\" : \"Xác nhận\"}\n-              </button>\n-            </div>\n-          </div>\n+        <h2 className=\"text-xl font-semibold mb-4\">Xác nhận đơn hàng</h2>\n+        <p className=\"mb-4\">Bạn có chắc chắn muốn đặt đơn hàng này?</p>\n+        <div className=\"flex justify-end space-x-4\">\n+          <button\n+            onClick={onClose}\n+            className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n+            disabled={isSubmitting}\n+          >\n+            Hủy\n+          </button>\n+          <button\n+            onClick={handleContinueShopping}\n+            className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 disabled:opacity-50\"\n+            disabled={isSubmitting}\n+          >\n+            {isSubmitting ? 'Đang xử lý...' : 'Xác nhận'}\n+          </button>\n         </div>\n       </motion.div>\n-    </div>\n+    </motion.div>\n   );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1748489289377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,15 +59,12 @@\n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n         \n-        // Lưu email vào localStorage trước khi chuyển hướng\n+        // Lưu email vào localStorage\n         if (orderDetails.email) {\n           console.log('Saving email to localStorage:', orderDetails.email);\n           localStorage.setItem('orderEmail', orderDetails.email);\n-          \n-          // Đợi một chút để đảm bảo email đã được lưu\n-          await new Promise(resolve => setTimeout(resolve, 100));\n         }\n         \n         onClose();\n         \n@@ -83,38 +80,152 @@\n     }\n   };\n \n   return (\n-    <motion.div\n-      initial={{ opacity: 0 }}\n-      animate={{ opacity: 1 }}\n-      exit={{ opacity: 0 }}\n-      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n-    >\n+    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\n       <motion.div\n-        initial={{ scale: 0.9, opacity: 0 }}\n-        animate={{ scale: 1, opacity: 1 }}\n-        exit={{ scale: 0.9, opacity: 0 }}\n-        className=\"bg-white p-6 rounded-lg shadow-xl max-w-md w-full mx-4\"\n+        initial={{ opacity: 0, y: 20 }}\n+        animate={{ opacity: 1, y: 0 }}\n+        className=\"bg-white/80 w-[95vw] max-w-[350px] md:max-w-4xl relative\"\n       >\n-        <h2 className=\"text-xl font-semibold mb-4\">Xác nhận đơn hàng</h2>\n-        <p className=\"mb-4\">Bạn có chắc chắn muốn đặt đơn hàng này?</p>\n-        <div className=\"flex justify-end space-x-4\">\n-          <button\n-            onClick={onClose}\n-            className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n-            disabled={isSubmitting}\n-          >\n-            Hủy\n-          </button>\n-          <button\n-            onClick={handleContinueShopping}\n-            className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 disabled:opacity-50\"\n-            disabled={isSubmitting}\n-          >\n-            {isSubmitting ? 'Đang xử lý...' : 'Xác nhận'}\n-          </button>\n+        <button\n+          onClick={onClose}\n+          className=\"absolute top-2 right-2 text-black\"\n+        >\n+          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n+            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n+          </svg>\n+        </button>\n+\n+        <div className=\"py-3 px-2 md:py-8 md:px-6\">\n+          <h2 style={{ \n+            fontSize: \"1em\", \n+            color: \"#000000\", \n+            textTransform: \"uppercase\", \n+            letterSpacing: \"0.1em\", \n+            marginBottom: \"12px\",\n+            fontWeight: \"bold\",\n+            textAlign: \"center\"\n+          }}>\n+            XÁC NHẬN ĐƠN HÀNG\n+          </h2>\n+\n+          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8\">\n+            {/* Left side - Scrollable Product List */}\n+            <div className=\"w-full md:w-1/2\">\n+              <div style={{ \n+                maxHeight: \"180px\", \n+                overflowY: \"auto\",\n+                padding: \"8px\",\n+                backgroundColor: \"#f8f8f8\",\n+                borderRadius: \"4px\"\n+              }}>\n+                {orderDetails.items.map((item, index) => (\n+                  <div key={index} style={{ \n+                    display: \"flex\", \n+                    alignItems: \"center\", \n+                    marginBottom: \"8px\",\n+                    padding: \"8px\",\n+                    backgroundColor: \"#ffffff\",\n+                    borderRadius: \"4px\",\n+                    boxShadow: \"0 1px 3px rgba(0,0,0,0.07)\"\n+                  }}>\n+                    <img \n+                      src={item.image} \n+                      alt={item.name} \n+                      style={{\n+                        width: \"50px\",\n+                        height: \"50px\",\n+                        objectFit: \"cover\",\n+                        marginRight: \"8px\"\n+                      }}\n+                    />\n+                    <div style={{ textAlign: \"left\", flex: 1 }}>\n+                      <p style={{ \n+                        fontSize: \"0.9em\", \n+                        fontWeight: \"bold\",\n+                        marginBottom: \"2px\" \n+                      }}>{item.name}</p>\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Size: {item.size}</p>\n+                      <p style={{ fontSize: \"0.8em\", marginBottom: \"1px\" }}>Số lượng: {item.quantity}</p>\n+                      <p style={{ \n+                        fontSize: \"0.8em\",\n+                        fontWeight: \"bold\"\n+                      }}>Giá: {(item.price || 0).toLocaleString('vi-VN')} VND</p>\n+                    </div>\n+                  </div>\n+                ))}\n+              </div>\n+            </div>\n+\n+            {/* Right side - Fixed Order Information */}\n+            <div className=\"w-full md:w-1/2 mt-2 md:mt-0\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n+              <div style={{ marginBottom: \"8px\" }}>\n+                <h3 style={{ \n+                  fontSize: \"0.9em\", \n+                  fontWeight: \"bold\", \n+                  marginBottom: \"8px\",\n+                  color: \"#000000\"\n+                }}>Thông tin đơn hàng</h3>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Họ tên: {orderDetails.fullName}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Email: {orderDetails.email}</p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại: {orderDetails.phone}</p>\n+                {orderDetails.additionalPhone && (\n+                  <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\n+                )}\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\n+                  Địa chỉ: {[orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n+                </p>\n+                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\n+                  orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n+                }</p>\n+                <p style={{ \n+                  marginBottom: \"4px\",\n+                  fontSize: \"0.9em\",\n+                  fontWeight: \"bold\",\n+                  color: \"#000000\"\n+                }}>Tổng tiền: {(orderDetails.total || 0).toLocaleString('vi-VN')} VND</p>\n+              </div>\n+\n+              {orderDetails.paymentMethod === 'bank' && (\n+                <div style={{\n+                  backgroundColor: \"#ffffff\",\n+                  padding: \"8px\",\n+                  marginBottom: \"8px\",\n+                  borderRadius: \"4px\",\n+                  border: \"1px solid #e0e0e0\"\n+                }}>\n+                  <p style={{ fontSize: \"0.75em\", color: \"#000000\", fontStyle: \"italic\" }}>\n+                    Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\n+                  </p>\n+                </div>\n+              )}\n+\n+              <button\n+                onClick={handleContinueShopping}\n+                disabled={isSubmitting}\n+                style={{\n+                  width: \"100%\",\n+                  padding: \"10px\",\n+                  fontSize: \"0.85em\",\n+                  color: \"#ffffff\",\n+                  backgroundColor: isSubmitting ? \"#666666\" : \"#000000\",\n+                  border: \"none\",\n+                  cursor: isSubmitting ? \"not-allowed\" : \"pointer\",\n+                  textTransform: \"uppercase\",\n+                  letterSpacing: \"0.1em\",\n+                  fontWeight: \"600\",\n+                  borderRadius: \"4px\",\n+                  marginTop: \"6px\"\n+                }}\n+              >\n+                {isSubmitting ? \"Đang xử lý...\" : \"Xác nhận\"}\n+              </button>\n+            </div>\n+          </div>\n         </div>\n       </motion.div>\n-    </motion.div>\n+    </div>\n   );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1748489334016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,14 @@\n       setIsSubmitting(true);\n       if (orderDetails) {\n         console.log('Original order details:', orderDetails);\n \n+        // Lưu email vào localStorage trước khi gửi đơn hàng\n+        if (orderDetails.email) {\n+          console.log('Saving email to localStorage:', orderDetails.email);\n+          localStorage.setItem('orderEmail', orderDetails.email);\n+        }\n+\n         // Chuẩn bị dữ liệu đơn hàng\n         const orderData = {\n           items: orderDetails.items.map(item => ({\n             productId: item.id,\n@@ -59,16 +65,13 @@\n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n         \n-        // Lưu email vào localStorage\n-        if (orderDetails.email) {\n-          console.log('Saving email to localStorage:', orderDetails.email);\n-          localStorage.setItem('orderEmail', orderDetails.email);\n-        }\n-        \n         onClose();\n         \n+        // Đợi một chút để đảm bảo email đã được lưu\n+        await new Promise(resolve => setTimeout(resolve, 100));\n+        \n         // Chuyển hướng đến trang order success\n         console.log('Redirecting to order success page:', data.order.orderCode);\n         router.push(`/order-success/${data.order.orderCode}`);\n       }\n"
                },
                {
                    "date": 1748616023023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,17 +179,22 @@\n                 )}\n                 <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>\n                   Địa chỉ: {[orderDetails.apartment, orderDetails.ward, orderDetails.district, orderDetails.province].filter(Boolean).join(\", \")}\n                 </p>\n-                <p style={{ marginBottom: \"4px\", fontSize: \"0.8em\" }}>Phương thức thanh toán: {\n+                <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>Phương thức thanh toán: {\n                   orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n                 }</p>\n+                {orderDetails.promoCode && (\n+                  <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>\n+                    Mã giảm giá: <b>{orderDetails.promoCode}</b> (-{orderDetails.promoAmount?.toLocaleString('vi-VN')} VND)\n+                  </p>\n+                )}\n                 <p style={{ \n-                  marginBottom: \"4px\",\n-                  fontSize: \"0.9em\",\n+                  marginBottom: \"6px\",\n+                  fontSize: \"1em\",\n                   fontWeight: \"bold\",\n                   color: \"#000000\"\n-                }}>Tổng tiền: {(orderDetails.total || 0).toLocaleString('vi-VN')} VND</p>\n+                }}>Tổng tiền: {orderDetails.total.toLocaleString('vi-VN')} VND</p>\n               </div>\n \n               {orderDetails.paymentMethod === 'bank' && (\n                 <div style={{\n"
                },
                {
                    "date": 1748616333800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,17 +34,20 @@\n             size: item.size,\n             quantity: item.quantity,\n             color: item.color\n           })),\n-          total: orderDetails.total || orderDetails.items.reduce((sum, item) => sum + item.price * item.quantity, 0),\n+          total: orderDetails.total,\n+          subtotal: orderDetails.subtotal,\n           email: orderDetails.email,\n           fullName: orderDetails.fullName,\n           phone: orderDetails.phone,\n           address: orderDetails.address,\n           ward: orderDetails.ward,\n           district: orderDetails.district,\n           province: orderDetails.province,\n-          paymentMethod: orderDetails.paymentMethod\n+          paymentMethod: orderDetails.paymentMethod,\n+          promoCode: orderDetails.promoCode,\n+          promoAmount: orderDetails.promoAmount\n         };\n \n         console.log('Sending order data:', JSON.stringify(orderData, null, 2));\n \n"
                },
                {
                    "date": 1748620559595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n                   orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n                 }</p>\n                 {orderDetails.promoCode && (\n                   <p style={{ marginBottom: \"6px\", fontSize: \"0.9em\" }}>\n-                    Mã giảm giá: <b>{orderDetails.promoCode}</b> (-{orderDetails.promoAmount?.toLocaleString('vi-VN')} VND)\n+                    Mã giảm giá: <b>{orderDetails.promoCode.code}</b> (-{orderDetails.promoAmount?.toLocaleString('vi-VN')} VND)\n                   </p>\n                 )}\n                 <p style={{ \n                   marginBottom: \"6px\",\n"
                },
                {
                    "date": 1748620737678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,12 @@\n         // Thêm đơn hàng vào context và xóa giỏ hàng\n         await addOrder(data.order);\n         clearCart();\n         \n+        // Xóa thông tin mã giảm giá khỏi localStorage sau khi đặt hàng thành công\n+        localStorage.removeItem('appliedPromoCode');\n+        localStorage.removeItem('promoAmount');\n+\n         onClose();\n         \n         // Đợi một chút để đảm bảo email đã được lưu\n         await new Promise(resolve => setTimeout(resolve, 100));\n"
                },
                {
                    "date": 1748625424130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n           ward: orderDetails.ward,\n           district: orderDetails.district,\n           province: orderDetails.province,\n           paymentMethod: orderDetails.paymentMethod,\n-          promoCode: orderDetails.promoCode,\n+          promoCode: orderDetails.promoCode ? orderDetails.promoCode : null,\n           promoAmount: orderDetails.promoAmount\n         };\n \n         console.log('Sending order data:', JSON.stringify(orderData, null, 2));\n"
                },
                {
                    "date": 1748628105028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,14 @@\n           ward: orderDetails.ward,\n           district: orderDetails.district,\n           province: orderDetails.province,\n           paymentMethod: orderDetails.paymentMethod,\n-          promoCode: orderDetails.promoCode ? orderDetails.promoCode : null,\n+          promoCode: orderDetails.promoCode ? {\n+            code: orderDetails.promoCode.code,\n+            type: orderDetails.promoCode.type,\n+            value: orderDetails.promoCode.value,\n+            maxAmount: orderDetails.promoCode.maxAmount || null\n+          } : null,\n           promoAmount: orderDetails.promoAmount\n         };\n \n         console.log('Sending order data:', JSON.stringify(orderData, null, 2));\n"
                },
                {
                    "date": 1748628347223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,14 +44,9 @@\n           ward: orderDetails.ward,\n           district: orderDetails.district,\n           province: orderDetails.province,\n           paymentMethod: orderDetails.paymentMethod,\n-          promoCode: orderDetails.promoCode ? {\n-            code: orderDetails.promoCode.code,\n-            type: orderDetails.promoCode.type,\n-            value: orderDetails.promoCode.value,\n-            maxAmount: orderDetails.promoCode.maxAmount || null\n-          } : null,\n+          promoCode: orderDetails.promoCode ? orderDetails.promoCode : null,\n           promoAmount: orderDetails.promoAmount\n         };\n \n         console.log('Sending order data:', JSON.stringify(orderData, null, 2));\n"
                },
                {
                    "date": 1748660972626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,13 +119,13 @@\n           }}>\n             XÁC NHẬN ĐƠN HÀNG\n           </h2>\n \n-          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8\">\n+          <div className=\"flex flex-col md:flex-row gap-2 md:gap-8 h-full\">\n             {/* Left side - Scrollable Product List */}\n-            <div className=\"w-full md:w-1/2\">\n+            <div className=\"w-full md:w-1/2 h-full flex flex-col\">\n               <div style={{ \n-                maxHeight: \"180px\", \n+                flex: 1,\n                 overflowY: \"auto\",\n                 padding: \"8px\",\n                 backgroundColor: \"#f8f8f8\",\n                 borderRadius: \"4px\"\n@@ -168,9 +168,9 @@\n               </div>\n             </div>\n \n             {/* Right side - Fixed Order Information */}\n-            <div className=\"w-full md:w-1/2 mt-2 md:mt-0\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n+            <div className=\"w-full md:w-1/2 mt-2 md:mt-0 h-full flex flex-col\" style={{ padding: \"8px\", backgroundColor: \"#f8f8f8\", borderRadius: \"4px\" }}>\n               <div style={{ marginBottom: \"8px\" }}>\n                 <h3 style={{ \n                   fontSize: \"0.9em\", \n                   fontWeight: \"bold\", \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "import { useOrders } from '../context/OrderContext';\r\nimport { motion } from \"framer-motion\";\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function OrderConfirmationModal({ isOpen, onClose, orderDetails }) {\r\n  const { addOrder } = useOrders();\r\n  const router = useRouter();\r\n\r\n  if (!isOpen || !orderDetails) return null;\r\n\r\n  const handleContinueShopping = () => {\r\n    if (orderDetails) {\r\n      const orderWithDate = {\r\n        ...orderDetails,\r\n        orderDate: Date.now(),\r\n        status: 'processing'\r\n      };\r\n      addOrder(orderWithDate);\r\n    }\r\n    onClose();\r\n    // Chuyển hướng đến trang xác nhận đơn hàng thành công\r\n    router.push(`/order-success/${orderDetails.orderCode}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className=\"bg-white/80 w-11/12 max-w-md relative\"\r\n      >\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-black\"\r\n        >\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n            <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n        </button>\r\n\r\n        <div className=\"text-center py-8 px-6\">\r\n          <h2 style={{ \r\n            fontSize: \"1.2em\", \r\n            color: \"#000000\", \r\n            textTransform: \"uppercase\", \r\n            letterSpacing: \"0.1em\", \r\n            marginBottom: \"20px\",\r\n            fontWeight: \"bold\"\r\n          }}>\r\n            XÁC NHẬN ĐƠN HÀNG\r\n          </h2>\r\n\r\n          {/* Thông tin sản phẩm */}\r\n          <div style={{ marginBottom: \"20px\" }}>\r\n            {orderDetails.items.map((item, index) => (\r\n              <div key={index} style={{ \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                marginBottom: \"15px\",\r\n                padding: \"10px\",\r\n                backgroundColor: \"#f8f8f8\",\r\n                borderRadius: \"4px\"\r\n              }}>\r\n                <img \r\n                  src={item.image} \r\n                  alt={item.name} \r\n                  style={{\r\n                    width: \"80px\",\r\n                    height: \"80px\",\r\n                    objectFit: \"cover\",\r\n                    marginRight: \"15px\"\r\n                  }}\r\n                />\r\n                <div style={{ textAlign: \"left\" }}>\r\n                  <p style={{ \r\n                    fontSize: \"0.9em\", \r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"4px\" \r\n                  }}>{item.name}</p>\r\n                  <p style={{ fontSize: \"0.8em\" }}>Size: {item.variation}</p>\r\n                  <p style={{ fontSize: \"0.8em\" }}>Số lượng: {item.quantity}</p>\r\n                  <p style={{ fontSize: \"0.8em\" }}>Giá: {item.price}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n            <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {orderDetails.orderCode}</p>\r\n            <p style={{ marginBottom: \"8px\" }}>Họ tên: {orderDetails.fullName}</p>\r\n            <p style={{ marginBottom: \"8px\" }}>Email: {orderDetails.email}</p>\r\n            <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {orderDetails.phone}</p>\r\n            {orderDetails.additionalPhone && (\r\n              <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {orderDetails.additionalPhone}</p>\r\n            )}\r\n            <p style={{ marginBottom: \"8px\" }}>\r\n              Địa chỉ: {orderDetails.address}, {orderDetails.ward}, {orderDetails.district}, {orderDetails.province}\r\n            </p>\r\n            <p style={{ marginBottom: \"8px\" }}>Phương thức thanh toán: {\r\n              orderDetails.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n            }</p>\r\n            <p style={{ \r\n              marginBottom: \"8px\",\r\n              fontSize: \"1em\",\r\n              fontWeight: \"bold\"\r\n            }}>Tổng tiền: {orderDetails.total}</p>\r\n          </div>\r\n\r\n          {orderDetails.paymentMethod === 'bank' && (\r\n            <div style={{\r\n              backgroundColor: \"#f8f8f8\",\r\n              padding: \"15px\",\r\n              marginBottom: \"20px\",\r\n              borderRadius: \"4px\"\r\n            }}>\r\n              <p style={{ fontSize: \"0.9em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n                Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"border-t border-gray-200\">\r\n          <button\r\n            onClick={handleContinueShopping}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"12px\",\r\n              fontSize: \"0.7em\",\r\n              color: \"#ffffff\",\r\n              backgroundColor: \"#000000\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              textTransform: \"uppercase\",\r\n              letterSpacing: \"0.1em\"\r\n            }}\r\n          >\r\n            Xác nhận\r\n          </button>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
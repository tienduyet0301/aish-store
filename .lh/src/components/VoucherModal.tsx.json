{
    "sourceFile": "src/components/VoucherModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1750474518839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750474540907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,99 +1,1 @@\n-\"use client\";\r\n-import { useState, useEffect } from 'react';\r\n-import { motion } from 'framer-motion';\r\n-\r\n-interface PromoCode {\r\n-  _id: string;\r\n-  code: string;\r\n-  type: 'fixed' | 'percentage';\r\n-  value: number;\r\n-  description?: string; // Thêm trường description\r\n-}\r\n-\r\n-interface VoucherModalProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-  onApplyVoucher: (code: string) => void;\r\n-}\r\n-\r\n-export default function VoucherModal({ isOpen, onClose, onApplyVoucher }: VoucherModalProps) {\r\n-  const [vouchers, setVouchers] = useState<PromoCode[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    if (isOpen) {\r\n-      const fetchVouchers = async () => {\r\n-        setLoading(true);\r\n-        try {\r\n-          const response = await fetch('/api/vouchers');\r\n-          const data = await response.json();\r\n-          if (data.ok) {\r\n-            // Giả lập description nếu không có\r\n-            const vouchersWithDesc = data.promoCodes.map((voucher: PromoCode) => ({\r\n-              ...voucher,\r\n-              description: voucher.description || `Giảm ${voucher.value.toLocaleString('vi-VN')}${voucher.type === 'percentage' ? '%' : ' VND'}`\r\n-            }));\r\n-            setVouchers(vouchersWithDesc);\r\n-          }\r\n-        } catch (error) {\r\n-          console.error(\"Failed to fetch vouchers\", error);\r\n-        } finally {\r\n-          setLoading(false);\r\n-        }\r\n-      };\r\n-      fetchVouchers();\r\n-    }\r\n-  }, [isOpen]);\r\n-\r\n-  if (!isOpen) return null;\r\n-\r\n-  const handleApply = (code: string) => {\r\n-    onApplyVoucher(code);\r\n-    onClose();\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n-      <motion.div\r\n-        initial={{ y: \"100vh\" }}\r\n-        animate={{ y: 0 }}\r\n-        exit={{ y: \"100vh\" }}\r\n-        transition={{ type: \"spring\", stiffness: 120, damping: 20 }}\r\n-        className=\"bg-white rounded-t-lg shadow-xl w-full max-w-md h-3/4 flex flex-col\"\r\n-      >\r\n-        <div className=\"p-4 border-b flex justify-between items-center sticky top-0 bg-white\">\r\n-          <h2 className=\"text-lg font-semibold\">Voucher của Aish</h2>\r\n-          <button onClick={onClose} className=\"text-2xl\">&times;</button>\r\n-        </div>\r\n-        <div className=\"p-4 overflow-y-auto flex-grow\">\r\n-          {loading ? (\r\n-            <p>Đang tải vouchers...</p>\r\n-          ) : vouchers.length > 0 ? (\r\n-            vouchers.map((voucher) => (\r\n-              <div key={voucher._id} className=\"flex items-center justify-between p-3 mb-3 border rounded-lg\">\r\n-                <div className=\"flex items-center\">\r\n-                  <div className=\"p-2 bg-gray-100 rounded-full mr-4\">\r\n-                    {/* Logo or icon here */}\r\n-                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7\" /></svg>\r\n-                  </div>\r\n-                  <div>\r\n-                    <p className=\"font-bold text-gray-800\">{voucher.code}</p>\r\n-                    <p className=\"text-sm text-gray-600\">{voucher.description}</p>\r\n-                  </div>\r\n-                </div>\r\n-                <button\r\n-                  onClick={() => handleApply(voucher.code)}\r\n-                  className=\"bg-black text-white px-4 py-2 rounded-md hover:bg-gray-800 transition\"\r\n-                >\r\n-                  Áp dụng\r\n-                </button>\r\n-              </div>\r\n-            ))\r\n-          ) : (\r\n-            <p>Không có voucher nào.</p>\r\n-          )}\r\n-        </div>\r\n-      </motion.div>\r\n-    </div>\r\n-  );\r\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1750474628748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,100 @@\n- \n\\ No newline at end of file\n+\"use client\";\r\n+import { useState, useEffect } from 'react';\r\n+import { motion } from 'framer-motion';\r\n+\r\n+interface PromoCode {\r\n+  _id: string;\r\n+  code: string;\r\n+  type: 'fixed' | 'percentage';\r\n+  value: number;\r\n+  description?: string;\r\n+}\r\n+\r\n+interface VoucherModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  onApplyVoucher: (code: string) => void;\r\n+}\r\n+\r\n+export default function VoucherModal({ isOpen, onClose, onApplyVoucher }: VoucherModalProps) {\r\n+  const [vouchers, setVouchers] = useState<PromoCode[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    if (isOpen) {\r\n+      const fetchVouchers = async () => {\r\n+        setLoading(true);\r\n+        try {\r\n+          const response = await fetch('/api/vouchers');\r\n+          const data = await response.json();\r\n+          if (data.ok) {\r\n+            const vouchersWithDesc = data.promoCodes.map((voucher: PromoCode) => ({\r\n+              ...voucher,\r\n+              description: voucher.description || `Giảm ${voucher.value.toLocaleString('vi-VN')}${voucher.type === 'percentage' ? '%' : ' VND'}`\r\n+            }));\r\n+            setVouchers(vouchersWithDesc);\r\n+          }\r\n+        } catch (error) {\r\n+          console.error(\"Failed to fetch vouchers\", error);\r\n+        } finally {\r\n+          setLoading(false);\r\n+        }\r\n+      };\r\n+      fetchVouchers();\r\n+    }\r\n+  }, [isOpen]);\r\n+\r\n+  if (!isOpen) return null;\r\n+\r\n+  const handleApply = (code: string) => {\r\n+    onApplyVoucher(code);\r\n+    onClose();\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n+      <motion.div\r\n+        initial={{ opacity: 0, scale: 0.9 }}\r\n+        animate={{ opacity: 1, scale: 1 }}\r\n+        exit={{ opacity: 0, scale: 0.9 }}\r\n+        transition={{ duration: 0.2 }}\r\n+        className=\"bg-white rounded-lg shadow-xl w-full max-w-md h-auto max-h-[80vh] flex flex-col\"\r\n+      >\r\n+        <div className=\"p-4 border-b flex justify-between items-center sticky top-0 bg-white z-10\">\r\n+          <button onClick={onClose} className=\"text-xl\">\r\n+            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\r\n+          </button>\r\n+          <h2 className=\"text-lg font-semibold\">Voucher của Aish</h2>\r\n+          <div className=\"w-6\"></div>\r\n+        </div>\r\n+        <div className=\"p-4 overflow-y-auto flex-grow\">\r\n+          {loading ? (\r\n+            <p className=\"text-center\">Đang tải vouchers...</p>\r\n+          ) : vouchers.length > 0 ? (\r\n+            vouchers.map((voucher) => (\r\n+              <div key={voucher._id} className=\"flex items-center justify-between p-3 mb-3 border border-dashed rounded-lg bg-gray-50\">\r\n+                <div className=\"flex items-center\">\r\n+                  <div className=\"w-16 h-16 bg-black text-white flex items-center justify-center rounded-lg mr-4 text-xs font-bold\">\r\n+                    AISH\r\n+                  </div>\r\n+                  <div>\r\n+                    <p className=\"font-bold text-gray-800\">{voucher.code}</p>\r\n+                    <p className=\"text-sm text-gray-600\">{voucher.description}</p>\r\n+                  </div>\r\n+                </div>\r\n+                <button\r\n+                  onClick={() => handleApply(voucher.code)}\r\n+                  className=\"bg-black text-white px-3 py-1 rounded-md text-sm hover:bg-gray-800 transition\"\r\n+                >\r\n+                  Sao chép\r\n+                </button>\r\n+              </div>\r\n+            ))\r\n+          ) : (\r\n+            <p className=\"text-center\">Không có voucher nào.</p>\r\n+          )}\r\n+        </div>\r\n+      </motion.div>\r\n+    </div>\r\n+  );\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1750474902972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,15 +51,15 @@\n     onClose();\r\n   };\r\n \r\n   return (\r\n-    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n+    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-end z-50\">\r\n       <motion.div\r\n-        initial={{ opacity: 0, scale: 0.9 }}\r\n-        animate={{ opacity: 1, scale: 1 }}\r\n-        exit={{ opacity: 0, scale: 0.9 }}\r\n-        transition={{ duration: 0.2 }}\r\n-        className=\"bg-white rounded-lg shadow-xl w-full max-w-md h-auto max-h-[80vh] flex flex-col\"\r\n+        initial={{ x: \"100%\" }}\r\n+        animate={{ x: 0 }}\r\n+        exit={{ x: \"100%\" }}\r\n+        transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\r\n+        className=\"bg-white shadow-xl w-full max-w-sm md:max-w-md lg:max-w-lg h-full flex flex-col\"\r\n       >\r\n         <div className=\"p-4 border-b flex justify-between items-center sticky top-0 bg-white z-10\">\r\n           <button onClick={onClose} className=\"text-xl\">\r\n             <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\r\n@@ -71,11 +71,11 @@\n           {loading ? (\r\n             <p className=\"text-center\">Đang tải vouchers...</p>\r\n           ) : vouchers.length > 0 ? (\r\n             vouchers.map((voucher) => (\r\n-              <div key={voucher._id} className=\"flex items-center justify-between p-3 mb-3 border border-dashed rounded-lg bg-gray-50\">\r\n+              <div key={voucher._id} className=\"flex items-center justify-between p-3 mb-3 border-l-4 border-black bg-gray-50 rounded-r-lg\">\r\n                 <div className=\"flex items-center\">\r\n-                  <div className=\"w-16 h-16 bg-black text-white flex items-center justify-center rounded-lg mr-4 text-xs font-bold\">\r\n+                  <div className=\"w-16 h-16 bg-black text-white flex items-center justify-center mr-4 text-xs font-bold transform -translate-x-3\">\r\n                     AISH\r\n                   </div>\r\n                   <div>\r\n                     <p className=\"font-bold text-gray-800\">{voucher.code}</p>\r\n"
                },
                {
                    "date": 1750475255985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,15 +51,19 @@\n     onClose();\r\n   };\r\n \r\n   return (\r\n-    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-end z-50\">\r\n+    <div \r\n+      className=\"fixed inset-0 bg-black/30 flex justify-end z-50\"\r\n+      onClick={onClose}\r\n+    >\r\n       <motion.div\r\n         initial={{ x: \"100%\" }}\r\n         animate={{ x: 0 }}\r\n         exit={{ x: \"100%\" }}\r\n         transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\r\n         className=\"bg-white shadow-xl w-full max-w-sm md:max-w-md lg:max-w-lg h-full flex flex-col\"\r\n+        onClick={(e) => e.stopPropagation()}\r\n       >\r\n         <div className=\"p-4 border-b flex justify-between items-center sticky top-0 bg-white z-10\">\r\n           <button onClick={onClose} className=\"text-xl\">\r\n             <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\r\n@@ -83,11 +87,11 @@\n                   </div>\r\n                 </div>\r\n                 <button\r\n                   onClick={() => handleApply(voucher.code)}\r\n-                  className=\"bg-black text-white px-3 py-1 rounded-md text-sm hover:bg-gray-800 transition\"\r\n+                  className=\"bg-black text-white px-4 py-2 text-sm hover:bg-gray-800 transition\"\r\n                 >\r\n-                  Sao chép\r\n+                  Áp dụng\r\n                 </button>\r\n               </div>\r\n             ))\r\n           ) : (\r\n"
                }
            ],
            "date": 1750474518838,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface PromoCode {\r\n  _id: string;\r\n  code: string;\r\n  type: 'fixed' | 'percentage';\r\n  value: number;\r\n  description?: string; // Thêm trường description\r\n}\r\n\r\ninterface VoucherModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onApplyVoucher: (code: string) => void;\r\n}\r\n\r\nexport default function VoucherModal({ isOpen, onClose, onApplyVoucher }: VoucherModalProps) {\r\n  const [vouchers, setVouchers] = useState<PromoCode[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const fetchVouchers = async () => {\r\n        setLoading(true);\r\n        try {\r\n          const response = await fetch('/api/vouchers');\r\n          const data = await response.json();\r\n          if (data.ok) {\r\n            // Giả lập description nếu không có\r\n            const vouchersWithDesc = data.promoCodes.map((voucher: PromoCode) => ({\r\n              ...voucher,\r\n              description: voucher.description || `Giảm ${voucher.value.toLocaleString('vi-VN')}${voucher.type === 'percentage' ? '%' : ' VND'}`\r\n            }));\r\n            setVouchers(vouchersWithDesc);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Failed to fetch vouchers\", error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchVouchers();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleApply = (code: string) => {\r\n    onApplyVoucher(code);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n      <motion.div\r\n        initial={{ y: \"100vh\" }}\r\n        animate={{ y: 0 }}\r\n        exit={{ y: \"100vh\" }}\r\n        transition={{ type: \"spring\", stiffness: 120, damping: 20 }}\r\n        className=\"bg-white rounded-t-lg shadow-xl w-full max-w-md h-3/4 flex flex-col\"\r\n      >\r\n        <div className=\"p-4 border-b flex justify-between items-center sticky top-0 bg-white\">\r\n          <h2 className=\"text-lg font-semibold\">Voucher của Aish</h2>\r\n          <button onClick={onClose} className=\"text-2xl\">&times;</button>\r\n        </div>\r\n        <div className=\"p-4 overflow-y-auto flex-grow\">\r\n          {loading ? (\r\n            <p>Đang tải vouchers...</p>\r\n          ) : vouchers.length > 0 ? (\r\n            vouchers.map((voucher) => (\r\n              <div key={voucher._id} className=\"flex items-center justify-between p-3 mb-3 border rounded-lg\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"p-2 bg-gray-100 rounded-full mr-4\">\r\n                    {/* Logo or icon here */}\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7\" /></svg>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"font-bold text-gray-800\">{voucher.code}</p>\r\n                    <p className=\"text-sm text-gray-600\">{voucher.description}</p>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  onClick={() => handleApply(voucher.code)}\r\n                  className=\"bg-black text-white px-4 py-2 rounded-md hover:bg-gray-800 transition\"\r\n                >\r\n                  Áp dụng\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Không có voucher nào.</p>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
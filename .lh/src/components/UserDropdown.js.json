{
    "sourceFile": "src/components/UserDropdown.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1746893166717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747046079499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n \"use client\";\r\n import { motion } from \"framer-motion\";\r\n import { useRef, useEffect } from \"react\";\r\n import { useWishlist } from '../context/WishlistContext';\r\n+import { signOut } from \"next-auth/react\";\r\n \r\n export default function UserDropdown({ isUserOpen, setIsUserOpen, isLoggedIn, navigateWithLoader }) {\r\n   const userRef = useRef(null);\r\n   const { wishlist } = useWishlist();\r\n@@ -32,9 +33,10 @@\n           path: \"/settings\" \r\n         },\r\n         { \r\n           label: \"Đăng xuất\", \r\n-          path: \"/logout\" \r\n+          path: \"/logout\",\r\n+          isLogout: true\r\n         },\r\n       ]\r\n     : [\r\n         { \r\n@@ -68,10 +70,14 @@\n         {menuItems.map((item, index) => (\r\n           <div\r\n             key={index}\r\n             className=\"py-2 sm:py-3 text-sm sm:text-base font-bold text-gray-800 hover:text-black cursor-pointer\" // Chữ nhỏ hơn ở mobile\r\n-            onClick={() => {\r\n-              navigateWithLoader(item.path);\r\n+            onClick={async () => {\r\n+              if (item.isLogout) {\r\n+                await signOut({ callbackUrl: '/' });\r\n+              } else {\r\n+                navigateWithLoader(item.path);\r\n+              }\r\n               setIsUserOpen(false);\r\n             }}\r\n           >\r\n             {item.label}\r\n"
                },
                {
                    "date": 1747057269660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,89 +1,95 @@\n \"use client\";\r\n-import { motion } from \"framer-motion\";\r\n-import { useRef, useEffect } from \"react\";\r\n-import { useWishlist } from '../context/WishlistContext';\r\n-import { signOut } from \"next-auth/react\";\r\n+import { useState, useRef, useEffect } from \"react\";\r\n+import { useRouter } from \"next/navigation\";\r\n+import { signOut, useSession } from \"next-auth/react\";\r\n+import { FaUser, FaShoppingBag, FaHeart, FaSignOutAlt } from \"react-icons/fa\";\r\n \r\n-export default function UserDropdown({ isUserOpen, setIsUserOpen, isLoggedIn, navigateWithLoader }) {\r\n-  const userRef = useRef(null);\r\n-  const { wishlist } = useWishlist();\r\n+export default function UserDropdown() {\r\n+  const [isOpen, setIsOpen] = useState(false);\r\n+  const dropdownRef = useRef(null);\r\n+  const router = useRouter();\r\n+  const { data: session } = useSession();\r\n \r\n   useEffect(() => {\r\n-    const handleClickOutside = (event) => {\r\n-      if (userRef.current && !userRef.current.contains(event.target)) {\r\n-        setIsUserOpen(false);\r\n+    function handleClickOutside(event) {\r\n+      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n+        setIsOpen(false);\r\n       }\r\n-    };\r\n+    }\r\n+\r\n     document.addEventListener(\"mousedown\", handleClickOutside);\r\n     return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, [setIsUserOpen]);\r\n+  }, []);\r\n \r\n-  const menuItems = isLoggedIn\r\n-    ? [\r\n-        {\r\n-          label: 'Đơn hàng của tôi',\r\n-          path: '/my-orders',\r\n-        },\r\n-        {\r\n-          label: `Sản phẩm đã lưu (${wishlist.length})`,\r\n-          path: '/saved-items',\r\n-        },\r\n-        { \r\n-          label: \"Account Settings\",\r\n-          path: \"/settings\" \r\n-        },\r\n-        { \r\n-          label: \"Đăng xuất\", \r\n-          path: \"/logout\",\r\n-          isLogout: true\r\n-        },\r\n-      ]\r\n-    : [\r\n-        { \r\n-          label: \"Đăng nhập\", \r\n-          path: \"/login\" \r\n-        },\r\n-        { \r\n-          label: \"Đơn hàng của tôi\", \r\n-          path: \"/my-orders\" \r\n-        },\r\n-        { \r\n-          label: \"Sản phẩm đã lưu\", \r\n-          path: \"/saved-items\" \r\n-        },\r\n-        { \r\n-          label: \"Tài khoản\", \r\n-          path: \"/settings\" \r\n-        },\r\n-      ];\r\n+  const handleSignOut = async () => {\r\n+    await signOut({ redirect: false });\r\n+    router.push(\"/\");\r\n+  };\r\n \r\n+  const menuItems = [\r\n+    {\r\n+      label: \"My Profile\",\r\n+      icon: <FaUser className=\"w-4 h-4\" />,\r\n+      onClick: () => router.push(\"/profile\"),\r\n+    },\r\n+    {\r\n+      label: \"My Orders\",\r\n+      icon: <FaShoppingBag className=\"w-4 h-4\" />,\r\n+      onClick: () => router.push(\"/orders\"),\r\n+    },\r\n+    {\r\n+      label: \"Wishlist\",\r\n+      icon: <FaHeart className=\"w-4 h-4\" />,\r\n+      onClick: () => router.push(\"/wishlist\"),\r\n+    },\r\n+    {\r\n+      label: \"Sign Out\",\r\n+      icon: <FaSignOutAlt className=\"w-4 h-4\" />,\r\n+      onClick: handleSignOut,\r\n+    },\r\n+  ];\r\n+\r\n   return (\r\n-    <motion.div\r\n-      ref={userRef}\r\n-      initial={{ opacity: 0, y: -10 }}\r\n-      animate={{ opacity: 1, y: 0 }}\r\n-      exit={{ opacity: 0, y: -10 }}\r\n-      transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n-      className=\"absolute top-[55px] right-4 sm:right-10 w-fit bg-white shadow-md flex flex-col z-50\" // Giảm padding ở mobile\r\n-    >\r\n-      <div className=\"px-3 sm:px-4 py-2 sm:py-3\"> {/* Giảm padding */}\r\n-        {menuItems.map((item, index) => (\r\n-          <div\r\n-            key={index}\r\n-            className=\"py-2 sm:py-3 text-sm sm:text-base font-bold text-gray-800 hover:text-black cursor-pointer\" // Chữ nhỏ hơn ở mobile\r\n-            onClick={async () => {\r\n-              if (item.isLogout) {\r\n-                await signOut({ callbackUrl: '/' });\r\n-              } else {\r\n-                navigateWithLoader(item.path);\r\n-              }\r\n-              setIsUserOpen(false);\r\n-            }}\r\n-          >\r\n-            {item.label}\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-    </motion.div>\r\n+    <div className=\"relative\" ref={dropdownRef}>\r\n+      <button\r\n+        onClick={() => setIsOpen(!isOpen)}\r\n+        className=\"flex items-center space-x-2 text-black hover:text-gray-600 transition-colors\"\r\n+      >\r\n+        <span className=\"text-sm font-medium\">\r\n+          {session?.user?.name || session?.user?.email || \"Account\"}\r\n+        </span>\r\n+        <svg\r\n+          className={`w-4 h-4 transition-transform ${isOpen ? \"rotate-180\" : \"\"}`}\r\n+          fill=\"none\"\r\n+          stroke=\"currentColor\"\r\n+          viewBox=\"0 0 24 24\"\r\n+        >\r\n+          <path\r\n+            strokeLinecap=\"round\"\r\n+            strokeLinejoin=\"round\"\r\n+            strokeWidth={2}\r\n+            d=\"M19 9l-7 7-7-7\"\r\n+          />\r\n+        </svg>\r\n+      </button>\r\n+\r\n+      {isOpen && (\r\n+        <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 border border-gray-100\">\r\n+          {menuItems.map((item, index) => (\r\n+            <button\r\n+              key={index}\r\n+              onClick={() => {\r\n+                item.onClick();\r\n+                setIsOpen(false);\r\n+              }}\r\n+              className=\"w-full px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-100 flex items-center space-x-2\"\r\n+            >\r\n+              {item.icon}\r\n+              <span>{item.label}</span>\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747057422352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+\"use client\";\r\n+import { motion } from \"framer-motion\";\r\n+import { useRef, useEffect } from \"react\";\r\n+import { useWishlist } from '../context/WishlistContext';\r\n+import { signOut } from \"next-auth/react\";\r\n+\r\n+export default function UserDropdown({ isUserOpen, setIsUserOpen, isLoggedIn, navigateWithLoader }) {\r\n+  const userRef = useRef(null);\r\n+  const { wishlist } = useWishlist();\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (event) => {\r\n+      if (userRef.current && !userRef.current.contains(event.target)) {\r\n+        setIsUserOpen(false);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, [setIsUserOpen]);\r\n+\r\n+  const menuItems = isLoggedIn\r\n+    ? [\r\n+        {\r\n+          label: 'Đơn hàng của tôi',\r\n+          path: '/my-orders',\r\n+        },\r\n+        {\r\n+          label: `Sản phẩm đã lưu (${wishlist.length})`,\r\n+          path: '/saved-items',\r\n+        },\r\n+        { \r\n+          label: \"Account Settings\",\r\n+          path: \"/settings\" \r\n+        },\r\n+        { \r\n+          label: \"Đăng xuất\", \r\n+          path: \"/logout\",\r\n+          isLogout: true\r\n+        },\r\n+      ]\r\n+    : [\r\n+        { \r\n+          label: \"Đăng nhập\", \r\n+          path: \"/login\" \r\n+        },\r\n+        { \r\n+          label: \"Đơn hàng của tôi\", \r\n+          path: \"/my-orders\" \r\n+        },\r\n+        { \r\n+          label: \"Sản phẩm đã lưu\", \r\n+          path: \"/saved-items\" \r\n+        },\r\n+        { \r\n+          label: \"Tài khoản\", \r\n+          path: \"/settings\" \r\n+        },\r\n+      ];\r\n+\r\n+  return (\r\n+    <motion.div\r\n+      ref={userRef}\r\n+      initial={{ opacity: 0, y: -10 }}\r\n+      animate={{ opacity: 1, y: 0 }}\r\n+      exit={{ opacity: 0, y: -10 }}\r\n+      transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n+      className=\"absolute top-[55px] right-4 sm:right-10 w-fit bg-white shadow-md flex flex-col z-50\" // Giảm padding ở mobile\r\n+    >\r\n+      <div className=\"px-3 sm:px-4 py-2 sm:py-3\"> {/* Giảm padding */}\r\n+        {menuItems.map((item, index) => (\r\n+          <div\r\n+            key={index}\r\n+            className=\"py-2 sm:py-3 text-sm sm:text-base font-bold text-gray-800 hover:text-black cursor-pointer\" // Chữ nhỏ hơn ở mobile\r\n+            onClick={async () => {\r\n+              if (item.isLogout) {\r\n+                await signOut({ callbackUrl: '/' });\r\n+              } else {\r\n+                navigateWithLoader(item.path);\r\n+              }\r\n+              setIsUserOpen(false);\r\n+            }}\r\n+          >\r\n+            {item.label}\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+    </motion.div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747058055029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,10 @@\n             key={index}\r\n             className=\"py-2 sm:py-3 text-sm sm:text-base font-bold text-gray-800 hover:text-black cursor-pointer\" // Chữ nhỏ hơn ở mobile\r\n             onClick={async () => {\r\n               if (item.isLogout) {\r\n-                await signOut({ callbackUrl: '/' });\r\n+                await signOut({ redirect: false });\r\n+                navigateWithLoader('/');\r\n               } else {\r\n                 navigateWithLoader(item.path);\r\n               }\r\n               setIsUserOpen(false);\r\n@@ -85,100 +86,5 @@\n         ))}\r\n       </div>\r\n     </motion.div>\r\n   );\r\n-}\n-\"use client\";\r\n-import { useState, useRef, useEffect } from \"react\";\r\n-import { useRouter } from \"next/navigation\";\r\n-import { signOut, useSession } from \"next-auth/react\";\r\n-import { FaUser, FaShoppingBag, FaHeart, FaSignOutAlt } from \"react-icons/fa\";\r\n-\r\n-export default function UserDropdown() {\r\n-  const [isOpen, setIsOpen] = useState(false);\r\n-  const dropdownRef = useRef(null);\r\n-  const router = useRouter();\r\n-  const { data: session } = useSession();\r\n-\r\n-  useEffect(() => {\r\n-    function handleClickOutside(event) {\r\n-      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n-        setIsOpen(false);\r\n-      }\r\n-    }\r\n-\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  const handleSignOut = async () => {\r\n-    await signOut({ redirect: false });\r\n-    router.push(\"/\");\r\n-  };\r\n-\r\n-  const menuItems = [\r\n-    {\r\n-      label: \"My Profile\",\r\n-      icon: <FaUser className=\"w-4 h-4\" />,\r\n-      onClick: () => router.push(\"/profile\"),\r\n-    },\r\n-    {\r\n-      label: \"My Orders\",\r\n-      icon: <FaShoppingBag className=\"w-4 h-4\" />,\r\n-      onClick: () => router.push(\"/orders\"),\r\n-    },\r\n-    {\r\n-      label: \"Wishlist\",\r\n-      icon: <FaHeart className=\"w-4 h-4\" />,\r\n-      onClick: () => router.push(\"/wishlist\"),\r\n-    },\r\n-    {\r\n-      label: \"Sign Out\",\r\n-      icon: <FaSignOutAlt className=\"w-4 h-4\" />,\r\n-      onClick: handleSignOut,\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"relative\" ref={dropdownRef}>\r\n-      <button\r\n-        onClick={() => setIsOpen(!isOpen)}\r\n-        className=\"flex items-center space-x-2 text-black hover:text-gray-600 transition-colors\"\r\n-      >\r\n-        <span className=\"text-sm font-medium\">\r\n-          {session?.user?.name || session?.user?.email || \"Account\"}\r\n-        </span>\r\n-        <svg\r\n-          className={`w-4 h-4 transition-transform ${isOpen ? \"rotate-180\" : \"\"}`}\r\n-          fill=\"none\"\r\n-          stroke=\"currentColor\"\r\n-          viewBox=\"0 0 24 24\"\r\n-        >\r\n-          <path\r\n-            strokeLinecap=\"round\"\r\n-            strokeLinejoin=\"round\"\r\n-            strokeWidth={2}\r\n-            d=\"M19 9l-7 7-7-7\"\r\n-          />\r\n-        </svg>\r\n-      </button>\r\n-\r\n-      {isOpen && (\r\n-        <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 border border-gray-100\">\r\n-          {menuItems.map((item, index) => (\r\n-            <button\r\n-              key={index}\r\n-              onClick={() => {\r\n-                item.onClick();\r\n-                setIsOpen(false);\r\n-              }}\r\n-              className=\"w-full px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-100 flex items-center space-x-2\"\r\n-            >\r\n-              {item.icon}\r\n-              <span>{item.label}</span>\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747058306038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n \"use client\";\r\n import { motion } from \"framer-motion\";\r\n import { useRef, useEffect } from \"react\";\r\n import { useWishlist } from '../context/WishlistContext';\r\n-import { signOut } from \"next-auth/react\";\r\n+import { signOut, useSession } from \"next-auth/react\";\r\n \r\n export default function UserDropdown({ isUserOpen, setIsUserOpen, isLoggedIn, navigateWithLoader }) {\r\n   const userRef = useRef(null);\r\n   const { wishlist } = useWishlist();\r\n+  const { data: session } = useSession();\r\n \r\n   useEffect(() => {\r\n     const handleClickOutside = (event) => {\r\n       if (userRef.current && !userRef.current.contains(event.target)) {\r\n@@ -17,69 +18,63 @@\n     document.addEventListener(\"mousedown\", handleClickOutside);\r\n     return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n   }, [setIsUserOpen]);\r\n \r\n-  const menuItems = isLoggedIn\r\n-    ? [\r\n-        {\r\n-          label: 'Đơn hàng của tôi',\r\n-          path: '/my-orders',\r\n-        },\r\n-        {\r\n-          label: `Sản phẩm đã lưu (${wishlist.length})`,\r\n-          path: '/saved-items',\r\n-        },\r\n-        { \r\n-          label: \"Account Settings\",\r\n-          path: \"/settings\" \r\n-        },\r\n-        { \r\n-          label: \"Đăng xuất\", \r\n-          path: \"/logout\",\r\n-          isLogout: true\r\n-        },\r\n-      ]\r\n-    : [\r\n-        { \r\n-          label: \"Đăng nhập\", \r\n-          path: \"/login\" \r\n-        },\r\n-        { \r\n-          label: \"Đơn hàng của tôi\", \r\n-          path: \"/my-orders\" \r\n-        },\r\n-        { \r\n-          label: \"Sản phẩm đã lưu\", \r\n-          path: \"/saved-items\" \r\n-        },\r\n-        { \r\n-          label: \"Tài khoản\", \r\n-          path: \"/settings\" \r\n-        },\r\n-      ];\r\n+  const handleNavigation = (path) => {\r\n+    // Các route yêu cầu đăng nhập\r\n+    const protectedRoutes = ['/my-orders', '/settings'];\r\n+    \r\n+    if (protectedRoutes.includes(path) && !session) {\r\n+      // Nếu chưa đăng nhập và cố truy cập route được bảo vệ\r\n+      navigateWithLoader('/login');\r\n+    } else {\r\n+      // Nếu đã đăng nhập hoặc route không yêu cầu đăng nhập\r\n+      navigateWithLoader(path);\r\n+    }\r\n+    setIsUserOpen(false);\r\n+  };\r\n \r\n+  const menuItems = [\r\n+    {\r\n+      label: 'Đơn hàng của tôi',\r\n+      path: '/my-orders',\r\n+    },\r\n+    {\r\n+      label: `Sản phẩm đã lưu (${wishlist.length})`,\r\n+      path: '/saved-items',\r\n+    },\r\n+    { \r\n+      label: \"Account Settings\",\r\n+      path: \"/settings\" \r\n+    },\r\n+    { \r\n+      label: session ? \"Đăng xuất\" : \"Đăng nhập\",\r\n+      path: session ? \"/logout\" : \"/login\",\r\n+      isLogout: session ? true : false\r\n+    },\r\n+  ];\r\n+\r\n   return (\r\n     <motion.div\r\n       ref={userRef}\r\n       initial={{ opacity: 0, y: -10 }}\r\n       animate={{ opacity: 1, y: 0 }}\r\n       exit={{ opacity: 0, y: -10 }}\r\n       transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n-      className=\"absolute top-[55px] right-4 sm:right-10 w-fit bg-white shadow-md flex flex-col z-50\" // Giảm padding ở mobile\r\n+      className=\"absolute top-[55px] right-4 sm:right-10 w-fit bg-white shadow-md flex flex-col z-50\"\r\n     >\r\n-      <div className=\"px-3 sm:px-4 py-2 sm:py-3\"> {/* Giảm padding */}\r\n+      <div className=\"px-3 sm:px-4 py-2 sm:py-3\">\r\n         {menuItems.map((item, index) => (\r\n           <div\r\n             key={index}\r\n-            className=\"py-2 sm:py-3 text-sm sm:text-base font-bold text-gray-800 hover:text-black cursor-pointer\" // Chữ nhỏ hơn ở mobile\r\n+            className=\"py-2 sm:py-3 text-sm sm:text-base font-bold text-gray-800 hover:text-black cursor-pointer\"\r\n             onClick={async () => {\r\n               if (item.isLogout) {\r\n                 await signOut({ redirect: false });\r\n                 navigateWithLoader('/');\r\n               } else {\r\n-                navigateWithLoader(item.path);\r\n+                handleNavigation(item.path);\r\n               }\r\n-              setIsUserOpen(false);\r\n             }}\r\n           >\r\n             {item.label}\r\n           </div>\r\n"
                },
                {
                    "date": 1747112318258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,15 @@\n import { motion } from \"framer-motion\";\r\n import { useRef, useEffect } from \"react\";\r\n import { useWishlist } from '../context/WishlistContext';\r\n import { signOut, useSession } from \"next-auth/react\";\r\n+import { useOrders } from '../context/OrderContext';\r\n \r\n export default function UserDropdown({ isUserOpen, setIsUserOpen, isLoggedIn, navigateWithLoader }) {\r\n   const userRef = useRef(null);\r\n   const { wishlist } = useWishlist();\r\n   const { data: session } = useSession();\r\n+  const { resetOrders } = useOrders();\r\n \r\n   useEffect(() => {\r\n     const handleClickOutside = (event) => {\r\n       if (userRef.current && !userRef.current.contains(event.target)) {\r\n@@ -68,8 +70,9 @@\n             key={index}\r\n             className=\"py-2 sm:py-3 text-sm sm:text-base font-bold text-gray-800 hover:text-black cursor-pointer\"\r\n             onClick={async () => {\r\n               if (item.isLogout) {\r\n+                resetOrders();\r\n                 await signOut({ redirect: false });\r\n                 navigateWithLoader('/');\r\n               } else {\r\n                 handleNavigation(item.path);\r\n"
                },
                {
                    "date": 1747112635080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n export default function UserDropdown({ isUserOpen, setIsUserOpen, isLoggedIn, navigateWithLoader }) {\r\n   const userRef = useRef(null);\r\n   const { wishlist } = useWishlist();\r\n   const { data: session } = useSession();\r\n-  const { resetOrders } = useOrders();\r\n+  const { resetOrders, orders } = useOrders();\r\n \r\n   useEffect(() => {\r\n     const handleClickOutside = (event) => {\r\n       if (userRef.current && !userRef.current.contains(event.target)) {\r\n@@ -36,9 +36,9 @@\n   };\r\n \r\n   const menuItems = [\r\n     {\r\n-      label: 'Đơn hàng của tôi',\r\n+      label: `Đơn hàng của tôi${Array.isArray(orders) && orders.length > 0 ? ` (${orders.length})` : ''}`,\r\n       path: '/my-orders',\r\n     },\r\n     {\r\n       label: `Sản phẩm đã lưu (${wishlist.length})`,\r\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useRef, useEffect } from \"react\";\r\nimport { useWishlist } from '../context/WishlistContext';\r\n\r\nexport default function UserDropdown({ isUserOpen, setIsUserOpen, isLoggedIn, navigateWithLoader }) {\r\n  const userRef = useRef(null);\r\n  const { wishlist } = useWishlist();\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (userRef.current && !userRef.current.contains(event.target)) {\r\n        setIsUserOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, [setIsUserOpen]);\r\n\r\n  const menuItems = isLoggedIn\r\n    ? [\r\n        {\r\n          label: 'Đơn hàng của tôi',\r\n          path: '/my-orders',\r\n        },\r\n        {\r\n          label: `Sản phẩm đã lưu (${wishlist.length})`,\r\n          path: '/saved-items',\r\n        },\r\n        { \r\n          label: \"Account Settings\",\r\n          path: \"/settings\" \r\n        },\r\n        { \r\n          label: \"Đăng xuất\", \r\n          path: \"/logout\" \r\n        },\r\n      ]\r\n    : [\r\n        { \r\n          label: \"Đăng nhập\", \r\n          path: \"/login\" \r\n        },\r\n        { \r\n          label: \"Đơn hàng của tôi\", \r\n          path: \"/my-orders\" \r\n        },\r\n        { \r\n          label: \"Sản phẩm đã lưu\", \r\n          path: \"/saved-items\" \r\n        },\r\n        { \r\n          label: \"Tài khoản\", \r\n          path: \"/settings\" \r\n        },\r\n      ];\r\n\r\n  return (\r\n    <motion.div\r\n      ref={userRef}\r\n      initial={{ opacity: 0, y: -10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -10 }}\r\n      transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n      className=\"absolute top-[55px] right-4 sm:right-10 w-fit bg-white shadow-md flex flex-col z-50\" // Giảm padding ở mobile\r\n    >\r\n      <div className=\"px-3 sm:px-4 py-2 sm:py-3\"> {/* Giảm padding */}\r\n        {menuItems.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"py-2 sm:py-3 text-sm sm:text-base font-bold text-gray-800 hover:text-black cursor-pointer\" // Chữ nhỏ hơn ở mobile\r\n            onClick={() => {\r\n              navigateWithLoader(item.path);\r\n              setIsUserOpen(false);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}"
        }
    ]
}
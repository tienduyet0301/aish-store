{
    "sourceFile": "src/app/admin/customers/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1746957613037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746958226323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,10 @@\n   const [users, setUsers] = useState<User[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n   useEffect(() => {\r\n-    if (status === \"unauthenticated\") {\r\n-      router.push(\"/login\");\r\n-    } else if (session?.user?.email === process.env.NEXT_PUBLIC_ADMIN_EMAIL) {\r\n-      fetchUsers();\r\n-    }\r\n-  }, [session, status]);\r\n+    fetchUsers();\r\n+  }, []);\r\n \r\n   const fetchUsers = async () => {\r\n     try {\r\n       const response = await fetch(\"/api/admin/users\");\r\n"
                },
                {
                    "date": 1746958738258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,8 @@\n   const router = useRouter();\r\n   const [users, setUsers] = useState<User[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n-  useEffect(() => {\r\n-    fetchUsers();\r\n-  }, []);\r\n-\r\n   const fetchUsers = async () => {\r\n     try {\r\n       const response = await fetch(\"/api/admin/users\");\r\n       if (response.ok) {\r\n@@ -35,8 +31,15 @@\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n+  useEffect(() => {\r\n+    fetchUsers();\r\n+    // Tự động refresh mỗi 30 giây\r\n+    const interval = setInterval(fetchUsers, 30000);\r\n+    return () => clearInterval(interval);\r\n+  }, []);\r\n+\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1746958880915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,27 +43,27 @@\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-6\">Danh sách khách hàng</h1>\r\n+    <div className=\"mt-20 p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-6 text-black\">Danh sách khách hàng</h1>\r\n       <div className=\"overflow-x-auto\">\r\n         <table className=\"min-w-full bg-white border border-gray-300\">\r\n           <thead>\r\n             <tr className=\"bg-gray-100\">\r\n-              <th className=\"px-6 py-3 border-b text-left\">Tên</th>\r\n-              <th className=\"px-6 py-3 border-b text-left\">Email</th>\r\n-              <th className=\"px-6 py-3 border-b text-left\">Phương thức đăng nhập</th>\r\n-              <th className=\"px-6 py-3 border-b text-left\">Ngày tạo</th>\r\n+              <th className=\"px-6 py-3 border-b text-left text-black\">Tên</th>\r\n+              <th className=\"px-6 py-3 border-b text-left text-black\">Email</th>\r\n+              <th className=\"px-6 py-3 border-b text-left text-black\">Phương thức đăng nhập</th>\r\n+              <th className=\"px-6 py-3 border-b text-left text-black\">Ngày tạo</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n             {users.map((user) => (\r\n               <tr key={user._id} className=\"hover:bg-gray-50\">\r\n-                <td className=\"px-6 py-4 border-b\">{user.name}</td>\r\n-                <td className=\"px-6 py-4 border-b\">{user.email}</td>\r\n-                <td className=\"px-6 py-4 border-b\">{user.provider}</td>\r\n-                <td className=\"px-6 py-4 border-b\">\r\n+                <td className=\"px-6 py-4 border-b text-black\">{user.name}</td>\r\n+                <td className=\"px-6 py-4 border-b text-black\">{user.email}</td>\r\n+                <td className=\"px-6 py-4 border-b text-black\">{user.provider}</td>\r\n+                <td className=\"px-6 py-4 border-b text-black\">\r\n                   {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n                 </td>\r\n               </tr>\r\n             ))}\r\n"
                },
                {
                    "date": 1746958999104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,12 @@\n   const { data: session, status } = useSession();\r\n   const router = useRouter();\r\n   const [users, setUsers] = useState<User[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n+  const [newPassword, setNewPassword] = useState(\"\");\r\n+  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n+  const [message, setMessage] = useState(\"\");\r\n \r\n   const fetchUsers = async () => {\r\n     try {\r\n       const response = await fetch(\"/api/admin/users\");\r\n@@ -38,23 +42,56 @@\n     const interval = setInterval(fetchUsers, 30000);\r\n     return () => clearInterval(interval);\r\n   }, []);\r\n \r\n+  const handleChangePassword = async () => {\r\n+    if (!selectedUser || !newPassword) return;\r\n+\r\n+    try {\r\n+      const response = await fetch(\"/api/admin/users/change-password\", {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify({\r\n+          userId: selectedUser._id,\r\n+          newPassword,\r\n+        }),\r\n+      });\r\n+\r\n+      if (response.ok) {\r\n+        setMessage(\"Mật khẩu đã được cập nhật thành công\");\r\n+        setShowPasswordModal(false);\r\n+        setNewPassword(\"\");\r\n+      } else {\r\n+        setMessage(\"Có lỗi xảy ra khi cập nhật mật khẩu\");\r\n+      }\r\n+    } catch (error) {\r\n+      setMessage(\"Có lỗi xảy ra khi cập nhật mật khẩu\");\r\n+    }\r\n+  };\r\n+\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   return (\r\n     <div className=\"mt-20 p-6\">\r\n       <h1 className=\"text-2xl font-bold mb-6 text-black\">Danh sách khách hàng</h1>\r\n+      {message && (\r\n+        <div className=\"mb-4 p-4 bg-green-100 text-green-700 rounded\">\r\n+          {message}\r\n+        </div>\r\n+      )}\r\n       <div className=\"overflow-x-auto\">\r\n         <table className=\"min-w-full bg-white border border-gray-300\">\r\n           <thead>\r\n             <tr className=\"bg-gray-100\">\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Tên</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Email</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Phương thức đăng nhập</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Ngày tạo</th>\r\n+              <th className=\"px-6 py-3 border-b text-left text-black\">Thao tác</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n             {users.map((user) => (\r\n@@ -64,12 +101,56 @@\n                 <td className=\"px-6 py-4 border-b text-black\">{user.provider}</td>\r\n                 <td className=\"px-6 py-4 border-b text-black\">\r\n                   {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n                 </td>\r\n+                <td className=\"px-6 py-4 border-b text-black\">\r\n+                  <button\r\n+                    onClick={() => {\r\n+                      setSelectedUser(user);\r\n+                      setShowPasswordModal(true);\r\n+                    }}\r\n+                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n+                  >\r\n+                    Đổi mật khẩu\r\n+                  </button>\r\n+                </td>\r\n               </tr>\r\n             ))}\r\n           </tbody>\r\n         </table>\r\n       </div>\r\n+\r\n+      {/* Modal thay đổi mật khẩu */}\r\n+      {showPasswordModal && selectedUser && (\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n+          <div className=\"bg-white p-6 rounded-lg w-96\">\r\n+            <h2 className=\"text-xl font-bold mb-4\">Đổi mật khẩu cho {selectedUser.name}</h2>\r\n+            <input\r\n+              type=\"password\"\r\n+              value={newPassword}\r\n+              onChange={(e) => setNewPassword(e.target.value)}\r\n+              placeholder=\"Nhập mật khẩu mới\"\r\n+              className=\"w-full p-2 border rounded mb-4\"\r\n+            />\r\n+            <div className=\"flex justify-end gap-2\">\r\n+              <button\r\n+                onClick={() => {\r\n+                  setShowPasswordModal(false);\r\n+                  setNewPassword(\"\");\r\n+                }}\r\n+                className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\"\r\n+              >\r\n+                Hủy\r\n+              </button>\r\n+              <button\r\n+                onClick={handleChangePassword}\r\n+                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n+              >\r\n+                Lưu\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1746959158095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,10 @@\n   const { data: session, status } = useSession();\r\n   const router = useRouter();\r\n   const [users, setUsers] = useState<User[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n+  const [editingUser, setEditingUser] = useState<string | null>(null);\r\n   const [newPassword, setNewPassword] = useState(\"\");\r\n-  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n   const [message, setMessage] = useState(\"\");\r\n \r\n   const fetchUsers = async () => {\r\n     try {\r\n@@ -37,31 +36,30 @@\n   };\r\n \r\n   useEffect(() => {\r\n     fetchUsers();\r\n-    // Tự động refresh mỗi 30 giây\r\n     const interval = setInterval(fetchUsers, 30000);\r\n     return () => clearInterval(interval);\r\n   }, []);\r\n \r\n-  const handleChangePassword = async () => {\r\n-    if (!selectedUser || !newPassword) return;\r\n+  const handleChangePassword = async (userId: string) => {\r\n+    if (!newPassword) return;\r\n \r\n     try {\r\n       const response = await fetch(\"/api/admin/users/change-password\", {\r\n         method: \"POST\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify({\r\n-          userId: selectedUser._id,\r\n+          userId,\r\n           newPassword,\r\n         }),\r\n       });\r\n \r\n       if (response.ok) {\r\n         setMessage(\"Mật khẩu đã được cập nhật thành công\");\r\n-        setShowPasswordModal(false);\r\n+        setEditingUser(null);\r\n         setNewPassword(\"\");\r\n       } else {\r\n         setMessage(\"Có lỗi xảy ra khi cập nhật mật khẩu\");\r\n       }\r\n@@ -85,72 +83,65 @@\n       <div className=\"overflow-x-auto\">\r\n         <table className=\"min-w-full bg-white border border-gray-300\">\r\n           <thead>\r\n             <tr className=\"bg-gray-100\">\r\n+              <th className=\"px-6 py-3 border-b text-left text-black\">STT</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Tên</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Email</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Phương thức đăng nhập</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Ngày tạo</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Thao tác</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n-            {users.map((user) => (\r\n+            {users.map((user, index) => (\r\n               <tr key={user._id} className=\"hover:bg-gray-50\">\r\n+                <td className=\"px-6 py-4 border-b text-black\">{index + 1}</td>\r\n                 <td className=\"px-6 py-4 border-b text-black\">{user.name}</td>\r\n                 <td className=\"px-6 py-4 border-b text-black\">{user.email}</td>\r\n                 <td className=\"px-6 py-4 border-b text-black\">{user.provider}</td>\r\n                 <td className=\"px-6 py-4 border-b text-black\">\r\n                   {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n                 </td>\r\n                 <td className=\"px-6 py-4 border-b text-black\">\r\n-                  <button\r\n-                    onClick={() => {\r\n-                      setSelectedUser(user);\r\n-                      setShowPasswordModal(true);\r\n-                    }}\r\n-                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n-                  >\r\n-                    Đổi mật khẩu\r\n-                  </button>\r\n+                  {editingUser === user._id ? (\r\n+                    <div className=\"flex items-center gap-2\">\r\n+                      <input\r\n+                        type=\"password\"\r\n+                        value={newPassword}\r\n+                        onChange={(e) => setNewPassword(e.target.value)}\r\n+                        placeholder=\"Nhập mật khẩu mới\"\r\n+                        className=\"p-2 border rounded\"\r\n+                      />\r\n+                      <button\r\n+                        onClick={() => handleChangePassword(user._id)}\r\n+                        className=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600\"\r\n+                      >\r\n+                        Lưu\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => {\r\n+                          setEditingUser(null);\r\n+                          setNewPassword(\"\");\r\n+                        }}\r\n+                        className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n+                      >\r\n+                        Hủy\r\n+                      </button>\r\n+                    </div>\r\n+                  ) : (\r\n+                    <button\r\n+                      onClick={() => setEditingUser(user._id)}\r\n+                      className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n+                    >\r\n+                      Đổi mật khẩu\r\n+                    </button>\r\n+                  )}\r\n                 </td>\r\n               </tr>\r\n             ))}\r\n           </tbody>\r\n         </table>\r\n       </div>\r\n-\r\n-      {/* Modal thay đổi mật khẩu */}\r\n-      {showPasswordModal && selectedUser && (\r\n-        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n-          <div className=\"bg-white p-6 rounded-lg w-96\">\r\n-            <h2 className=\"text-xl font-bold mb-4\">Đổi mật khẩu cho {selectedUser.name}</h2>\r\n-            <input\r\n-              type=\"password\"\r\n-              value={newPassword}\r\n-              onChange={(e) => setNewPassword(e.target.value)}\r\n-              placeholder=\"Nhập mật khẩu mới\"\r\n-              className=\"w-full p-2 border rounded mb-4\"\r\n-            />\r\n-            <div className=\"flex justify-end gap-2\">\r\n-              <button\r\n-                onClick={() => {\r\n-                  setShowPasswordModal(false);\r\n-                  setNewPassword(\"\");\r\n-                }}\r\n-                className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\"\r\n-              >\r\n-                Hủy\r\n-              </button>\r\n-              <button\r\n-                onClick={handleChangePassword}\r\n-                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n-              >\r\n-                Lưu\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1746959234318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n   const [loading, setLoading] = useState(true);\r\n   const [editingUser, setEditingUser] = useState<string | null>(null);\r\n   const [newPassword, setNewPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n+  const [deletingUser, setDeletingUser] = useState<string | null>(null);\r\n \r\n   const fetchUsers = async () => {\r\n     try {\r\n       const response = await fetch(\"/api/admin/users\");\r\n@@ -67,8 +68,30 @@\n       setMessage(\"Có lỗi xảy ra khi cập nhật mật khẩu\");\r\n     }\r\n   };\r\n \r\n+  const handleDeleteUser = async (userId: string) => {\r\n+    try {\r\n+      const response = await fetch(\"/api/admin/users/delete\", {\r\n+        method: \"DELETE\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify({ userId }),\r\n+      });\r\n+\r\n+      if (response.ok) {\r\n+        setMessage(\"Tài khoản đã được xóa thành công\");\r\n+        setDeletingUser(null);\r\n+        fetchUsers(); // Refresh danh sách\r\n+      } else {\r\n+        setMessage(\"Có lỗi xảy ra khi xóa tài khoản\");\r\n+      }\r\n+    } catch (error) {\r\n+      setMessage(\"Có lỗi xảy ra khi xóa tài khoản\");\r\n+    }\r\n+  };\r\n+\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n@@ -102,41 +125,69 @@\n                 <td className=\"px-6 py-4 border-b text-black\">\r\n                   {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n                 </td>\r\n                 <td className=\"px-6 py-4 border-b text-black\">\r\n-                  {editingUser === user._id ? (\r\n-                    <div className=\"flex items-center gap-2\">\r\n-                      <input\r\n-                        type=\"password\"\r\n-                        value={newPassword}\r\n-                        onChange={(e) => setNewPassword(e.target.value)}\r\n-                        placeholder=\"Nhập mật khẩu mới\"\r\n-                        className=\"p-2 border rounded\"\r\n-                      />\r\n-                      <button\r\n-                        onClick={() => handleChangePassword(user._id)}\r\n-                        className=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600\"\r\n-                      >\r\n-                        Lưu\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => {\r\n-                          setEditingUser(null);\r\n-                          setNewPassword(\"\");\r\n-                        }}\r\n-                        className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n-                      >\r\n-                        Hủy\r\n-                      </button>\r\n-                    </div>\r\n-                  ) : (\r\n-                    <button\r\n-                      onClick={() => setEditingUser(user._id)}\r\n-                      className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n-                    >\r\n-                      Đổi mật khẩu\r\n-                    </button>\r\n-                  )}\r\n+                  <div className=\"flex items-center gap-2\">\r\n+                    {editingUser === user._id ? (\r\n+                      <div className=\"flex items-center gap-2\">\r\n+                        <input\r\n+                          type=\"password\"\r\n+                          value={newPassword}\r\n+                          onChange={(e) => setNewPassword(e.target.value)}\r\n+                          placeholder=\"Nhập mật khẩu mới\"\r\n+                          className=\"p-2 border rounded\"\r\n+                        />\r\n+                        <button\r\n+                          onClick={() => handleChangePassword(user._id)}\r\n+                          className=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600\"\r\n+                        >\r\n+                          Lưu\r\n+                        </button>\r\n+                        <button\r\n+                          onClick={() => {\r\n+                            setEditingUser(null);\r\n+                            setNewPassword(\"\");\r\n+                          }}\r\n+                          className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n+                        >\r\n+                          Hủy\r\n+                        </button>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <>\r\n+                        <button\r\n+                          onClick={() => setEditingUser(user._id)}\r\n+                          className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\r\n+                        >\r\n+                          Đổi mật khẩu\r\n+                        </button>\r\n+                        {deletingUser === user._id ? (\r\n+                          <div className=\"flex items-center gap-2\">\r\n+                            <span className=\"text-red-500\">Xác nhận xóa?</span>\r\n+                            <button\r\n+                              onClick={() => handleDeleteUser(user._id)}\r\n+                              className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n+                            >\r\n+                              Xóa\r\n+                            </button>\r\n+                            <button\r\n+                              onClick={() => setDeletingUser(null)}\r\n+                              className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n+                            >\r\n+                              Hủy\r\n+                            </button>\r\n+                          </div>\r\n+                        ) : (\r\n+                          <button\r\n+                            onClick={() => setDeletingUser(user._id)}\r\n+                            className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n+                          >\r\n+                            Xóa\r\n+                          </button>\r\n+                        )}\r\n+                      </>\r\n+                    )}\r\n+                  </div>\r\n                 </td>\r\n               </tr>\r\n             ))}\r\n           </tbody>\r\n"
                },
                {
                    "date": 1747119502884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,14 @@\n import { useRouter } from \"next/navigation\";\r\n \r\n interface User {\r\n   _id: string;\r\n-  name: string;\r\n+  name?: string;\r\n+  firstName?: string;\r\n+  lastName?: string;\r\n+  birthDay?: string;\r\n+  birthMonth?: string;\r\n+  birthYear?: string;\r\n   email: string;\r\n   provider: string;\r\n   createdAt: string;\r\n }\r\n@@ -21,8 +26,16 @@\n   const [newPassword, setNewPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n   const [deletingUser, setDeletingUser] = useState<string | null>(null);\r\n \r\n+  useEffect(() => {\r\n+    if (status === \"unauthenticated\") {\r\n+      router.push(\"/login\");\r\n+    } else if (session?.user?.email === process.env.NEXT_PUBLIC_ADMIN_EMAIL) {\r\n+      fetchUsers();\r\n+    }\r\n+  }, [session, status]);\r\n+\r\n   const fetchUsers = async () => {\r\n     try {\r\n       const response = await fetch(\"/api/admin/users\");\r\n       if (response.ok) {\r\n@@ -35,14 +48,8 @@\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n-  useEffect(() => {\r\n-    fetchUsers();\r\n-    const interval = setInterval(fetchUsers, 30000);\r\n-    return () => clearInterval(interval);\r\n-  }, []);\r\n-\r\n   const handleChangePassword = async (userId: string) => {\r\n     if (!newPassword) return;\r\n \r\n     try {\r\n@@ -109,88 +116,94 @@\n             <tr className=\"bg-gray-100\">\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">STT</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Tên</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Email</th>\r\n+              <th className=\"px-6 py-3 border-b text-left text-black\">Ngày sinh</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Phương thức đăng nhập</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Ngày tạo</th>\r\n               <th className=\"px-6 py-3 border-b text-left text-black\">Thao tác</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n-            {users.map((user, index) => (\r\n-              <tr key={user._id} className=\"hover:bg-gray-50\">\r\n-                <td className=\"px-6 py-4 border-b text-black\">{index + 1}</td>\r\n-                <td className=\"px-6 py-4 border-b text-black\">{user.name}</td>\r\n-                <td className=\"px-6 py-4 border-b text-black\">{user.email}</td>\r\n-                <td className=\"px-6 py-4 border-b text-black\">{user.provider}</td>\r\n-                <td className=\"px-6 py-4 border-b text-black\">\r\n-                  {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n-                </td>\r\n-                <td className=\"px-6 py-4 border-b text-black\">\r\n-                  <div className=\"flex items-center gap-2\">\r\n-                    {editingUser === user._id ? (\r\n-                      <div className=\"flex items-center gap-2\">\r\n-                        <input\r\n-                          type=\"password\"\r\n-                          value={newPassword}\r\n-                          onChange={(e) => setNewPassword(e.target.value)}\r\n-                          placeholder=\"Nhập mật khẩu mới\"\r\n-                          className=\"p-2 border rounded\"\r\n-                        />\r\n-                        <button\r\n-                          onClick={() => handleChangePassword(user._id)}\r\n-                          className=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600\"\r\n-                        >\r\n-                          Lưu\r\n-                        </button>\r\n-                        <button\r\n-                          onClick={() => {\r\n-                            setEditingUser(null);\r\n-                            setNewPassword(\"\");\r\n-                          }}\r\n-                          className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n-                        >\r\n-                          Hủy\r\n-                        </button>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <>\r\n-                        <button\r\n-                          onClick={() => setEditingUser(user._id)}\r\n-                          className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\r\n-                        >\r\n-                          Đổi mật khẩu\r\n-                        </button>\r\n-                        {deletingUser === user._id ? (\r\n-                          <div className=\"flex items-center gap-2\">\r\n-                            <span className=\"text-red-500\">Xác nhận xóa?</span>\r\n+            {users.map((user, index) => {\r\n+              const displayName = user.firstName || user.lastName ? `${user.firstName || ''} ${user.lastName || ''}`.trim() : user.name || '';\r\n+              const displayBirth = user.birthDay && user.birthMonth && user.birthYear ? `${user.birthDay}/${user.birthMonth}/${user.birthYear}` : '';\r\n+              return (\r\n+                <tr key={user._id} className=\"hover:bg-gray-50\">\r\n+                  <td className=\"px-6 py-4 border-b text-black\">{index + 1}</td>\r\n+                  <td className=\"px-6 py-4 border-b text-black\">{displayName}</td>\r\n+                  <td className=\"px-6 py-4 border-b text-black\">{user.email}</td>\r\n+                  <td className=\"px-6 py-4 border-b text-black\">{displayBirth}</td>\r\n+                  <td className=\"px-6 py-4 border-b text-black\">{user.provider}</td>\r\n+                  <td className=\"px-6 py-4 border-b text-black\">\r\n+                    {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n+                  </td>\r\n+                  <td className=\"px-6 py-4 border-b text-black\">\r\n+                    <div className=\"flex items-center gap-2\">\r\n+                      {editingUser === user._id ? (\r\n+                        <div className=\"flex items-center gap-2\">\r\n+                          <input\r\n+                            type=\"password\"\r\n+                            value={newPassword}\r\n+                            onChange={(e) => setNewPassword(e.target.value)}\r\n+                            placeholder=\"Nhập mật khẩu mới\"\r\n+                            className=\"p-2 border rounded\"\r\n+                          />\r\n+                          <button\r\n+                            onClick={() => handleChangePassword(user._id)}\r\n+                            className=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600\"\r\n+                          >\r\n+                            Lưu\r\n+                          </button>\r\n+                          <button\r\n+                            onClick={() => {\r\n+                              setEditingUser(null);\r\n+                              setNewPassword(\"\");\r\n+                            }}\r\n+                            className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n+                          >\r\n+                            Hủy\r\n+                          </button>\r\n+                        </div>\r\n+                      ) : (\r\n+                        <>\r\n+                          <button\r\n+                            onClick={() => setEditingUser(user._id)}\r\n+                            className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\r\n+                          >\r\n+                            Đổi mật khẩu\r\n+                          </button>\r\n+                          {deletingUser === user._id ? (\r\n+                            <div className=\"flex items-center gap-2\">\r\n+                              <span className=\"text-red-500\">Xác nhận xóa?</span>\r\n+                              <button\r\n+                                onClick={() => handleDeleteUser(user._id)}\r\n+                                className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n+                              >\r\n+                                Xóa\r\n+                              </button>\r\n+                              <button\r\n+                                onClick={() => setDeletingUser(null)}\r\n+                                className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n+                              >\r\n+                                Hủy\r\n+                              </button>\r\n+                            </div>\r\n+                          ) : (\r\n                             <button\r\n-                              onClick={() => handleDeleteUser(user._id)}\r\n+                              onClick={() => setDeletingUser(user._id)}\r\n                               className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n                             >\r\n                               Xóa\r\n                             </button>\r\n-                            <button\r\n-                              onClick={() => setDeletingUser(null)}\r\n-                              className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n-                            >\r\n-                              Hủy\r\n-                            </button>\r\n-                          </div>\r\n-                        ) : (\r\n-                          <button\r\n-                            onClick={() => setDeletingUser(user._id)}\r\n-                            className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n-                          >\r\n-                            Xóa\r\n-                          </button>\r\n-                        )}\r\n-                      </>\r\n-                    )}\r\n-                  </div>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n+                          )}\r\n+                        </>\r\n+                      )}\r\n+                    </div>\r\n+                  </td>\r\n+                </tr>\r\n+              );\r\n+            })}\r\n           </tbody>\r\n         </table>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1747119770997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,16 +26,8 @@\n   const [newPassword, setNewPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n   const [deletingUser, setDeletingUser] = useState<string | null>(null);\r\n \r\n-  useEffect(() => {\r\n-    if (status === \"unauthenticated\") {\r\n-      router.push(\"/login\");\r\n-    } else if (session?.user?.email === process.env.NEXT_PUBLIC_ADMIN_EMAIL) {\r\n-      fetchUsers();\r\n-    }\r\n-  }, [session, status]);\r\n-\r\n   const fetchUsers = async () => {\r\n     try {\r\n       const response = await fetch(\"/api/admin/users\");\r\n       if (response.ok) {\r\n@@ -48,8 +40,16 @@\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n+  useEffect(() => {\r\n+    if (status === \"unauthenticated\") {\r\n+      router.push(\"/login\");\r\n+    } else if (status === \"authenticated\" && session?.user?.email === process.env.NEXT_PUBLIC_ADMIN_EMAIL) {\r\n+      fetchUsers();\r\n+    }\r\n+  }, [session, status]);\r\n+\r\n   const handleChangePassword = async (userId: string) => {\r\n     if (!newPassword) return;\r\n \r\n     try {\r\n"
                },
                {
                    "date": 1747119983007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,13 +41,30 @@\n     }\r\n   };\r\n \r\n   useEffect(() => {\r\n-    if (status === \"unauthenticated\") {\r\n-      router.push(\"/login\");\r\n-    } else if (status === \"authenticated\" && session?.user?.email === process.env.NEXT_PUBLIC_ADMIN_EMAIL) {\r\n-      fetchUsers();\r\n-    }\r\n+    const checkAdminAccess = async () => {\r\n+      if (status === \"unauthenticated\") {\r\n+        router.push(\"/login\");\r\n+        return;\r\n+      }\r\n+\r\n+      if (status === \"authenticated\") {\r\n+        try {\r\n+          const response = await fetch(\"/api/admin/check-access\");\r\n+          if (response.ok) {\r\n+            fetchUsers();\r\n+          } else {\r\n+            router.push(\"/\"); // Redirect to home if not admin\r\n+          }\r\n+        } catch (error) {\r\n+          console.error(\"Error checking admin access:\", error);\r\n+          router.push(\"/\");\r\n+        }\r\n+      }\r\n+    };\r\n+\r\n+    checkAdminAccess();\r\n   }, [session, status]);\r\n \r\n   const handleChangePassword = async (userId: string) => {\r\n     if (!newPassword) return;\r\n"
                },
                {
                    "date": 1747120284214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \r\n   useEffect(() => {\r\n     const checkAdminAccess = async () => {\r\n       if (status === \"unauthenticated\") {\r\n-        router.push(\"/login\");\r\n+        router.push(\"/admin/login\");\r\n         return;\r\n       }\r\n \r\n       if (status === \"authenticated\") {\r\n@@ -53,13 +53,13 @@\n           const response = await fetch(\"/api/admin/check-access\");\r\n           if (response.ok) {\r\n             fetchUsers();\r\n           } else {\r\n-            router.push(\"/\"); // Redirect to home if not admin\r\n+            router.push(\"/admin/login\"); // Redirect to admin login if not admin\r\n           }\r\n         } catch (error) {\r\n           console.error(\"Error checking admin access:\", error);\r\n-          router.push(\"/\");\r\n+          router.push(\"/admin/login\");\r\n         }\r\n       }\r\n     };\r\n \r\n"
                },
                {
                    "date": 1747122268966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,13 +53,13 @@\n           const response = await fetch(\"/api/admin/check-access\");\r\n           if (response.ok) {\r\n             fetchUsers();\r\n           } else {\r\n-            router.push(\"/admin/login\"); // Redirect to admin login if not admin\r\n+            router.push(\"/admin/dashboard\"); // Redirect to dashboard if not authorized\r\n           }\r\n         } catch (error) {\r\n           console.error(\"Error checking admin access:\", error);\r\n-          router.push(\"/admin/login\");\r\n+          router.push(\"/admin/dashboard\"); // Redirect to dashboard on error\r\n         }\r\n       }\r\n     };\r\n \r\n"
                },
                {
                    "date": 1747122370756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,30 +41,20 @@\n     }\r\n   };\r\n \r\n   useEffect(() => {\r\n-    const checkAdminAccess = async () => {\r\n+    const checkAccess = async () => {\r\n       if (status === \"unauthenticated\") {\r\n         router.push(\"/admin/login\");\r\n         return;\r\n       }\r\n \r\n       if (status === \"authenticated\") {\r\n-        try {\r\n-          const response = await fetch(\"/api/admin/check-access\");\r\n-          if (response.ok) {\r\n-            fetchUsers();\r\n-          } else {\r\n-            router.push(\"/admin/dashboard\"); // Redirect to dashboard if not authorized\r\n-          }\r\n-        } catch (error) {\r\n-          console.error(\"Error checking admin access:\", error);\r\n-          router.push(\"/admin/dashboard\"); // Redirect to dashboard on error\r\n-        }\r\n+        fetchUsers();\r\n       }\r\n     };\r\n \r\n-    checkAdminAccess();\r\n+    checkAccess();\r\n   }, [session, status]);\r\n \r\n   const handleChangePassword = async (userId: string) => {\r\n     if (!newPassword) return;\r\n"
                },
                {
                    "date": 1747122479660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,114 +105,129 @@\n     }\r\n   };\r\n \r\n   if (loading) {\r\n-    return <div>Loading...</div>;\r\n+    return (\r\n+      <div className=\"min-h-screen bg-white flex items-center justify-center\">\r\n+        <div className=\"text-black\">Loading...</div>\r\n+      </div>\r\n+    );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"mt-20 p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-6 text-black\">Danh sách khách hàng</h1>\r\n-      {message && (\r\n-        <div className=\"mb-4 p-4 bg-green-100 text-green-700 rounded\">\r\n-          {message}\r\n+    <div className=\"min-h-screen bg-white\">\r\n+      <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\r\n+        <div className=\"text-center py-16\">\r\n+          <div className=\"inline-block\">\r\n+            <h1 className=\"text-2xl font-bold text-black\">CUSTOMERS</h1>\r\n+            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n+          </div>\r\n         </div>\r\n-      )}\r\n-      <div className=\"overflow-x-auto\">\r\n-        <table className=\"min-w-full bg-white border border-gray-300\">\r\n-          <thead>\r\n-            <tr className=\"bg-gray-100\">\r\n-              <th className=\"px-6 py-3 border-b text-left text-black\">STT</th>\r\n-              <th className=\"px-6 py-3 border-b text-left text-black\">Tên</th>\r\n-              <th className=\"px-6 py-3 border-b text-left text-black\">Email</th>\r\n-              <th className=\"px-6 py-3 border-b text-left text-black\">Ngày sinh</th>\r\n-              <th className=\"px-6 py-3 border-b text-left text-black\">Phương thức đăng nhập</th>\r\n-              <th className=\"px-6 py-3 border-b text-left text-black\">Ngày tạo</th>\r\n-              <th className=\"px-6 py-3 border-b text-left text-black\">Thao tác</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {users.map((user, index) => {\r\n-              const displayName = user.firstName || user.lastName ? `${user.firstName || ''} ${user.lastName || ''}`.trim() : user.name || '';\r\n-              const displayBirth = user.birthDay && user.birthMonth && user.birthYear ? `${user.birthDay}/${user.birthMonth}/${user.birthYear}` : '';\r\n-              return (\r\n-                <tr key={user._id} className=\"hover:bg-gray-50\">\r\n-                  <td className=\"px-6 py-4 border-b text-black\">{index + 1}</td>\r\n-                  <td className=\"px-6 py-4 border-b text-black\">{displayName}</td>\r\n-                  <td className=\"px-6 py-4 border-b text-black\">{user.email}</td>\r\n-                  <td className=\"px-6 py-4 border-b text-black\">{displayBirth}</td>\r\n-                  <td className=\"px-6 py-4 border-b text-black\">{user.provider}</td>\r\n-                  <td className=\"px-6 py-4 border-b text-black\">\r\n-                    {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n-                  </td>\r\n-                  <td className=\"px-6 py-4 border-b text-black\">\r\n-                    <div className=\"flex items-center gap-2\">\r\n-                      {editingUser === user._id ? (\r\n+\r\n+        {message && (\r\n+          <div className=\"mb-8 p-4 bg-green-50 border border-green-200 text-green-700 rounded text-sm\">\r\n+            {message}\r\n+          </div>\r\n+        )}\r\n+\r\n+        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100\">\r\n+          <div className=\"overflow-x-auto\">\r\n+            <table className=\"min-w-full\">\r\n+              <thead>\r\n+                <tr className=\"bg-gray-50 border-b border-gray-100\">\r\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">STT</th>\r\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tên</th>\r\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ngày sinh</th>\r\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Phương thức đăng nhập</th>\r\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ngày tạo</th>\r\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Thao tác</th>\r\n+                </tr>\r\n+              </thead>\r\n+              <tbody className=\"divide-y divide-gray-100\">\r\n+                {users.map((user, index) => {\r\n+                  const displayName = user.firstName || user.lastName ? `${user.firstName || ''} ${user.lastName || ''}`.trim() : user.name || '';\r\n+                  const displayBirth = user.birthDay && user.birthMonth && user.birthYear ? `${user.birthDay}/${user.birthMonth}/${user.birthYear}` : '';\r\n+                  return (\r\n+                    <tr key={user._id} className=\"hover:bg-gray-50\">\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{index + 1}</td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{displayName}</td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{user.email}</td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{displayBirth}</td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{user.provider}</td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n+                        {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n+                      </td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                         <div className=\"flex items-center gap-2\">\r\n-                          <input\r\n-                            type=\"password\"\r\n-                            value={newPassword}\r\n-                            onChange={(e) => setNewPassword(e.target.value)}\r\n-                            placeholder=\"Nhập mật khẩu mới\"\r\n-                            className=\"p-2 border rounded\"\r\n-                          />\r\n-                          <button\r\n-                            onClick={() => handleChangePassword(user._id)}\r\n-                            className=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600\"\r\n-                          >\r\n-                            Lưu\r\n-                          </button>\r\n-                          <button\r\n-                            onClick={() => {\r\n-                              setEditingUser(null);\r\n-                              setNewPassword(\"\");\r\n-                            }}\r\n-                            className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n-                          >\r\n-                            Hủy\r\n-                          </button>\r\n-                        </div>\r\n-                      ) : (\r\n-                        <>\r\n-                          <button\r\n-                            onClick={() => setEditingUser(user._id)}\r\n-                            className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\r\n-                          >\r\n-                            Đổi mật khẩu\r\n-                          </button>\r\n-                          {deletingUser === user._id ? (\r\n+                          {editingUser === user._id ? (\r\n                             <div className=\"flex items-center gap-2\">\r\n-                              <span className=\"text-red-500\">Xác nhận xóa?</span>\r\n+                              <input\r\n+                                type=\"password\"\r\n+                                value={newPassword}\r\n+                                onChange={(e) => setNewPassword(e.target.value)}\r\n+                                placeholder=\"Nhập mật khẩu mới\"\r\n+                                className=\"p-2 border border-gray-200 rounded text-sm focus:outline-none focus:ring-1 focus:ring-black\"\r\n+                              />\r\n                               <button\r\n-                                onClick={() => handleDeleteUser(user._id)}\r\n-                                className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n+                                onClick={() => handleChangePassword(user._id)}\r\n+                                className=\"px-3 py-1 bg-black text-white text-xs uppercase hover:bg-gray-800 transition-colors\"\r\n                               >\r\n-                                Xóa\r\n+                                Lưu\r\n                               </button>\r\n                               <button\r\n-                                onClick={() => setDeletingUser(null)}\r\n-                                className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n+                                onClick={() => {\r\n+                                  setEditingUser(null);\r\n+                                  setNewPassword(\"\");\r\n+                                }}\r\n+                                className=\"px-3 py-1 bg-gray-100 text-gray-700 text-xs uppercase hover:bg-gray-200 transition-colors\"\r\n                               >\r\n                                 Hủy\r\n                               </button>\r\n                             </div>\r\n                           ) : (\r\n-                            <button\r\n-                              onClick={() => setDeletingUser(user._id)}\r\n-                              className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n-                            >\r\n-                              Xóa\r\n-                            </button>\r\n+                            <>\r\n+                              <button\r\n+                                onClick={() => setEditingUser(user._id)}\r\n+                                className=\"px-3 py-1 bg-black text-white text-xs uppercase hover:bg-gray-800 transition-colors\"\r\n+                              >\r\n+                                Đổi mật khẩu\r\n+                              </button>\r\n+                              {deletingUser === user._id ? (\r\n+                                <div className=\"flex items-center gap-2\">\r\n+                                  <span className=\"text-red-500 text-xs\">Xác nhận xóa?</span>\r\n+                                  <button\r\n+                                    onClick={() => handleDeleteUser(user._id)}\r\n+                                    className=\"px-3 py-1 bg-red-500 text-white text-xs uppercase hover:bg-red-600 transition-colors\"\r\n+                                  >\r\n+                                    Xóa\r\n+                                  </button>\r\n+                                  <button\r\n+                                    onClick={() => setDeletingUser(null)}\r\n+                                    className=\"px-3 py-1 bg-gray-100 text-gray-700 text-xs uppercase hover:bg-gray-200 transition-colors\"\r\n+                                  >\r\n+                                    Hủy\r\n+                                  </button>\r\n+                                </div>\r\n+                              ) : (\r\n+                                <button\r\n+                                  onClick={() => setDeletingUser(user._id)}\r\n+                                  className=\"px-3 py-1 bg-red-500 text-white text-xs uppercase hover:bg-red-600 transition-colors\"\r\n+                                >\r\n+                                  Xóa\r\n+                                </button>\r\n+                              )}\r\n+                            </>\r\n                           )}\r\n-                        </>\r\n-                      )}\r\n-                    </div>\r\n-                  </td>\r\n-                </tr>\r\n-              );\r\n-            })}\r\n-          </tbody>\r\n-        </table>\r\n+                        </div>\r\n+                      </td>\r\n+                    </tr>\r\n+                  );\r\n+                })}\r\n+              </tbody>\r\n+            </table>\r\n+          </div>\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747126151588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,233 +1,233 @@\n-\"use client\";\r\n-\r\n-import { useEffect, useState } from \"react\";\r\n-import { useSession } from \"next-auth/react\";\r\n-import { useRouter } from \"next/navigation\";\r\n-\r\n-interface User {\r\n-  _id: string;\r\n-  name?: string;\r\n-  firstName?: string;\r\n-  lastName?: string;\r\n-  birthDay?: string;\r\n-  birthMonth?: string;\r\n-  birthYear?: string;\r\n-  email: string;\r\n-  provider: string;\r\n-  createdAt: string;\r\n-}\r\n-\r\n-export default function CustomersPage() {\r\n-  const { data: session, status } = useSession();\r\n-  const router = useRouter();\r\n-  const [users, setUsers] = useState<User[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [editingUser, setEditingUser] = useState<string | null>(null);\r\n-  const [newPassword, setNewPassword] = useState(\"\");\r\n-  const [message, setMessage] = useState(\"\");\r\n-  const [deletingUser, setDeletingUser] = useState<string | null>(null);\r\n-\r\n-  const fetchUsers = async () => {\r\n-    try {\r\n-      const response = await fetch(\"/api/admin/users\");\r\n-      if (response.ok) {\r\n-        const data = await response.json();\r\n-        setUsers(data);\r\n-      }\r\n-    } catch (error) {\r\n-      console.error(\"Error fetching users:\", error);\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const checkAccess = async () => {\r\n-      if (status === \"unauthenticated\") {\r\n-        router.push(\"/admin/login\");\r\n-        return;\r\n-      }\r\n-\r\n-      if (status === \"authenticated\") {\r\n-        fetchUsers();\r\n-      }\r\n-    };\r\n-\r\n-    checkAccess();\r\n-  }, [session, status]);\r\n-\r\n-  const handleChangePassword = async (userId: string) => {\r\n-    if (!newPassword) return;\r\n-\r\n-    try {\r\n-      const response = await fetch(\"/api/admin/users/change-password\", {\r\n-        method: \"POST\",\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-        },\r\n-        body: JSON.stringify({\r\n-          userId,\r\n-          newPassword,\r\n-        }),\r\n-      });\r\n-\r\n-      if (response.ok) {\r\n-        setMessage(\"Mật khẩu đã được cập nhật thành công\");\r\n-        setEditingUser(null);\r\n-        setNewPassword(\"\");\r\n-      } else {\r\n-        setMessage(\"Có lỗi xảy ra khi cập nhật mật khẩu\");\r\n-      }\r\n-    } catch (error) {\r\n-      setMessage(\"Có lỗi xảy ra khi cập nhật mật khẩu\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleDeleteUser = async (userId: string) => {\r\n-    try {\r\n-      const response = await fetch(\"/api/admin/users/delete\", {\r\n-        method: \"DELETE\",\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-        },\r\n-        body: JSON.stringify({ userId }),\r\n-      });\r\n-\r\n-      if (response.ok) {\r\n-        setMessage(\"Tài khoản đã được xóa thành công\");\r\n-        setDeletingUser(null);\r\n-        fetchUsers(); // Refresh danh sách\r\n-      } else {\r\n-        setMessage(\"Có lỗi xảy ra khi xóa tài khoản\");\r\n-      }\r\n-    } catch (error) {\r\n-      setMessage(\"Có lỗi xảy ra khi xóa tài khoản\");\r\n-    }\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"min-h-screen bg-white flex items-center justify-center\">\r\n-        <div className=\"text-black\">Loading...</div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-white\">\r\n-      <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\r\n-        <div className=\"text-center py-16\">\r\n-          <div className=\"inline-block\">\r\n-            <h1 className=\"text-2xl font-bold text-black\">CUSTOMERS</h1>\r\n-            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {message && (\r\n-          <div className=\"mb-8 p-4 bg-green-50 border border-green-200 text-green-700 rounded text-sm\">\r\n-            {message}\r\n-          </div>\r\n-        )}\r\n-\r\n-        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100\">\r\n-          <div className=\"overflow-x-auto\">\r\n-            <table className=\"min-w-full\">\r\n-              <thead>\r\n-                <tr className=\"bg-gray-50 border-b border-gray-100\">\r\n-                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">STT</th>\r\n-                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tên</th>\r\n-                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n-                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ngày sinh</th>\r\n-                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Phương thức đăng nhập</th>\r\n-                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ngày tạo</th>\r\n-                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Thao tác</th>\r\n-                </tr>\r\n-              </thead>\r\n-              <tbody className=\"divide-y divide-gray-100\">\r\n-                {users.map((user, index) => {\r\n-                  const displayName = user.firstName || user.lastName ? `${user.firstName || ''} ${user.lastName || ''}`.trim() : user.name || '';\r\n-                  const displayBirth = user.birthDay && user.birthMonth && user.birthYear ? `${user.birthDay}/${user.birthMonth}/${user.birthYear}` : '';\r\n-                  return (\r\n-                    <tr key={user._id} className=\"hover:bg-gray-50\">\r\n-                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{index + 1}</td>\r\n-                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{displayName}</td>\r\n-                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{user.email}</td>\r\n-                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{displayBirth}</td>\r\n-                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{user.provider}</td>\r\n-                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n-                        {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n-                      </td>\r\n-                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n-                        <div className=\"flex items-center gap-2\">\r\n-                          {editingUser === user._id ? (\r\n-                            <div className=\"flex items-center gap-2\">\r\n-                              <input\r\n-                                type=\"password\"\r\n-                                value={newPassword}\r\n-                                onChange={(e) => setNewPassword(e.target.value)}\r\n-                                placeholder=\"Nhập mật khẩu mới\"\r\n-                                className=\"p-2 border border-gray-200 rounded text-sm focus:outline-none focus:ring-1 focus:ring-black\"\r\n-                              />\r\n-                              <button\r\n-                                onClick={() => handleChangePassword(user._id)}\r\n-                                className=\"px-3 py-1 bg-black text-white text-xs uppercase hover:bg-gray-800 transition-colors\"\r\n-                              >\r\n-                                Lưu\r\n-                              </button>\r\n-                              <button\r\n-                                onClick={() => {\r\n-                                  setEditingUser(null);\r\n-                                  setNewPassword(\"\");\r\n-                                }}\r\n-                                className=\"px-3 py-1 bg-gray-100 text-gray-700 text-xs uppercase hover:bg-gray-200 transition-colors\"\r\n-                              >\r\n-                                Hủy\r\n-                              </button>\r\n-                            </div>\r\n-                          ) : (\r\n-                            <>\r\n-                              <button\r\n-                                onClick={() => setEditingUser(user._id)}\r\n-                                className=\"px-3 py-1 bg-black text-white text-xs uppercase hover:bg-gray-800 transition-colors\"\r\n-                              >\r\n-                                Đổi mật khẩu\r\n-                              </button>\r\n-                              {deletingUser === user._id ? (\r\n-                                <div className=\"flex items-center gap-2\">\r\n-                                  <span className=\"text-red-500 text-xs\">Xác nhận xóa?</span>\r\n-                                  <button\r\n-                                    onClick={() => handleDeleteUser(user._id)}\r\n-                                    className=\"px-3 py-1 bg-red-500 text-white text-xs uppercase hover:bg-red-600 transition-colors\"\r\n-                                  >\r\n-                                    Xóa\r\n-                                  </button>\r\n-                                  <button\r\n-                                    onClick={() => setDeletingUser(null)}\r\n-                                    className=\"px-3 py-1 bg-gray-100 text-gray-700 text-xs uppercase hover:bg-gray-200 transition-colors\"\r\n-                                  >\r\n-                                    Hủy\r\n-                                  </button>\r\n-                                </div>\r\n-                              ) : (\r\n-                                <button\r\n-                                  onClick={() => setDeletingUser(user._id)}\r\n-                                  className=\"px-3 py-1 bg-red-500 text-white text-xs uppercase hover:bg-red-600 transition-colors\"\r\n-                                >\r\n-                                  Xóa\r\n-                                </button>\r\n-                              )}\r\n-                            </>\r\n-                          )}\r\n-                        </div>\r\n-                      </td>\r\n-                    </tr>\r\n-                  );\r\n-                })}\r\n-              </tbody>\r\n-            </table>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n+\"use client\";\n+\n+import { useEffect, useState } from \"react\";\n+import { useSession } from \"next-auth/react\";\n+import { useRouter } from \"next/navigation\";\n+\n+interface User {\n+  _id: string;\n+  name?: string;\n+  firstName?: string;\n+  lastName?: string;\n+  birthDay?: string;\n+  birthMonth?: string;\n+  birthYear?: string;\n+  email: string;\n+  provider: string;\n+  createdAt: string;\n+}\n+\n+export default function CustomersPage() {\n+  const { data: session, status } = useSession();\n+  const router = useRouter();\n+  const [users, setUsers] = useState<User[]>([]);\n+  const [loading, setLoading] = useState(true);\n+  const [editingUser, setEditingUser] = useState<string | null>(null);\n+  const [newPassword, setNewPassword] = useState(\"\");\n+  const [message, setMessage] = useState(\"\");\n+  const [deletingUser, setDeletingUser] = useState<string | null>(null);\n+\n+  const fetchUsers = async () => {\n+    try {\n+      const response = await fetch(\"/api/admin/users\");\n+      if (response.ok) {\n+        const data = await response.json();\n+        setUsers(data);\n+      }\n+    } catch (error) {\n+      console.error(\"Error fetching users:\", error);\n+    } finally {\n+      setLoading(false);\n+    }\n+  };\n+\n+  useEffect(() => {\n+    const checkAccess = async () => {\n+      if (status === \"unauthenticated\") {\n+        router.push(\"/admin/login\");\n+        return;\n+      }\n+\n+      if (status === \"authenticated\") {\n+        fetchUsers();\n+      }\n+    };\n+\n+    checkAccess();\n+  }, [session, status]);\n+\n+  const handleChangePassword = async (userId: string) => {\n+    if (!newPassword) return;\n+\n+    try {\n+      const response = await fetch(\"/api/admin/users/change-password\", {\n+        method: \"POST\",\n+        headers: {\n+          \"Content-Type\": \"application/json\",\n+        },\n+        body: JSON.stringify({\n+          userId,\n+          newPassword,\n+        }),\n+      });\n+\n+      if (response.ok) {\n+        setMessage(\"Mật khẩu đã được cập nhật thành công\");\n+        setEditingUser(null);\n+        setNewPassword(\"\");\n+      } else {\n+        setMessage(\"Có lỗi xảy ra khi cập nhật mật khẩu\");\n+      }\n+    } catch (error) {\n+      setMessage(\"Có lỗi xảy ra khi cập nhật mật khẩu\");\n+    }\n+  };\n+\n+  const handleDeleteUser = async (userId: string) => {\n+    try {\n+      const response = await fetch(\"/api/admin/users/delete\", {\n+        method: \"DELETE\",\n+        headers: {\n+          \"Content-Type\": \"application/json\",\n+        },\n+        body: JSON.stringify({ userId }),\n+      });\n+\n+      if (response.ok) {\n+        setMessage(\"Tài khoản đã được xóa thành công\");\n+        setDeletingUser(null);\n+        fetchUsers(); // Refresh danh sách\n+      } else {\n+        setMessage(\"Có lỗi xảy ra khi xóa tài khoản\");\n+      }\n+    } catch (error) {\n+      setMessage(\"Có lỗi xảy ra khi xóa tài khoản\");\n+    }\n+  };\n+\n+  if (loading) {\n+    return (\n+      <div className=\"min-h-screen bg-white flex items-center justify-center\">\n+        <div className=\"text-black\">Loading...</div>\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div className=\"min-h-screen bg-white\">\n+      <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\n+        <div className=\"text-center py-16\">\n+          <div className=\"inline-block\">\n+            <h1 className=\"text-2xl font-bold text-black\">CUSTOMERS</h1>\n+            <div className=\"h-[1px] bg-black mt-2\"></div>\n+          </div>\n+        </div>\n+\n+        {message && (\n+          <div className=\"mb-8 p-4 bg-green-50 border border-green-200 text-green-700 rounded text-sm\">\n+            {message}\n+          </div>\n+        )}\n+\n+        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100\">\n+          <div className=\"overflow-x-auto\">\n+            <table className=\"min-w-full\">\n+              <thead>\n+                <tr className=\"bg-gray-50 border-b border-gray-100\">\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">STT</th>\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tên</th>\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ngày sinh</th>\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Phương thức đăng nhập</th>\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ngày tạo</th>\n+                  <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Thao tác</th>\n+                </tr>\n+              </thead>\n+              <tbody className=\"divide-y divide-gray-100\">\n+                {users.map((user, index) => {\n+                  const displayName = user.firstName || user.lastName ? `${user.firstName || ''} ${user.lastName || ''}`.trim() : user.name || '';\n+                  const displayBirth = user.birthDay && user.birthMonth && user.birthYear ? `${user.birthDay}/${user.birthMonth}/${user.birthYear}` : '';\n+                  return (\n+                    <tr key={user._id} className=\"hover:bg-gray-50\">\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{index + 1}</td>\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{displayName}</td>\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{user.email}</td>\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{displayBirth}</td>\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{user.provider}</td>\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n+                        {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\n+                      </td>\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n+                        <div className=\"flex items-center gap-2\">\n+                          {editingUser === user._id ? (\n+                            <div className=\"flex items-center gap-2\">\n+                              <input\n+                                type=\"password\"\n+                                value={newPassword}\n+                                onChange={(e) => setNewPassword(e.target.value)}\n+                                placeholder=\"Nhập mật khẩu mới\"\n+                                className=\"p-2 border border-gray-200 rounded text-sm focus:outline-none focus:ring-1 focus:ring-black\"\n+                              />\n+                              <button\n+                                onClick={() => handleChangePassword(user._id)}\n+                                className=\"px-3 py-1 bg-black text-white text-xs uppercase hover:bg-gray-800 transition-colors\"\n+                              >\n+                                Lưu\n+                              </button>\n+                              <button\n+                                onClick={() => {\n+                                  setEditingUser(null);\n+                                  setNewPassword(\"\");\n+                                }}\n+                                className=\"px-3 py-1 bg-gray-100 text-gray-700 text-xs uppercase hover:bg-gray-200 transition-colors\"\n+                              >\n+                                Hủy\n+                              </button>\n+                            </div>\n+                          ) : (\n+                            <>\n+                              <button\n+                                onClick={() => setEditingUser(user._id)}\n+                                className=\"px-3 py-1 bg-black text-white text-xs uppercase hover:bg-gray-800 transition-colors\"\n+                              >\n+                                Đổi mật khẩu\n+                              </button>\n+                              {deletingUser === user._id ? (\n+                                <div className=\"flex items-center gap-2\">\n+                                  <span className=\"text-red-500 text-xs\">Xác nhận xóa?</span>\n+                                  <button\n+                                    onClick={() => handleDeleteUser(user._id)}\n+                                    className=\"px-3 py-1 bg-red-500 text-white text-xs uppercase hover:bg-red-600 transition-colors\"\n+                                  >\n+                                    Xóa\n+                                  </button>\n+                                  <button\n+                                    onClick={() => setDeletingUser(null)}\n+                                    className=\"px-3 py-1 bg-gray-100 text-gray-700 text-xs uppercase hover:bg-gray-200 transition-colors\"\n+                                  >\n+                                    Hủy\n+                                  </button>\n+                                </div>\n+                              ) : (\n+                                <button\n+                                  onClick={() => setDeletingUser(user._id)}\n+                                  className=\"px-3 py-1 bg-red-500 text-white text-xs uppercase hover:bg-red-600 transition-colors\"\n+                                >\n+                                  Xóa\n+                                </button>\n+                              )}\n+                            </>\n+                          )}\n+                        </div>\n+                      </td>\n+                    </tr>\n+                  );\n+                })}\n+              </tbody>\n+            </table>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1748657297315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,22 +84,22 @@\n   };\n \n   const handleDeleteUser = async (userId: string) => {\n     try {\n-      const response = await fetch(\"/api/admin/users/delete\", {\n+      const response = await fetch(`/api/admin/customers/${userId}`, {\n         method: \"DELETE\",\n         headers: {\n           \"Content-Type\": \"application/json\",\n-        },\n-        body: JSON.stringify({ userId }),\n+        }\n       });\n \n       if (response.ok) {\n         setMessage(\"Tài khoản đã được xóa thành công\");\n         setDeletingUser(null);\n         fetchUsers(); // Refresh danh sách\n       } else {\n-        setMessage(\"Có lỗi xảy ra khi xóa tài khoản\");\n+        const data = await response.json();\n+        setMessage(data.message || \"Có lỗi xảy ra khi xóa tài khoản\");\n       }\n     } catch (error) {\n       setMessage(\"Có lỗi xảy ra khi xóa tài khoản\");\n     }\n"
                },
                {
                    "date": 1748657510118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   const [deletingUser, setDeletingUser] = useState<string | null>(null);\n \n   const fetchUsers = async () => {\n     try {\n-      const response = await fetch(\"/api/admin/users\");\n+      const response = await fetch(\"/api/admin/customers\");\n       if (response.ok) {\n         const data = await response.json();\n         setUsers(data);\n       }\n"
                },
                {
                    "date": 1748657676770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,11 +92,11 @@\n         }\n       });\n \n       if (response.ok) {\n+        setUsers(prevUsers => prevUsers.filter(user => user._id !== userId));\n         setMessage(\"Tài khoản đã được xóa thành công\");\n         setDeletingUser(null);\n-        fetchUsers(); // Refresh danh sách\n       } else {\n         const data = await response.json();\n         setMessage(data.message || \"Có lỗi xảy ra khi xóa tài khoản\");\n       }\n"
                },
                {
                    "date": 1751008124989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   const [deletingUser, setDeletingUser] = useState<string | null>(null);\n \n   const fetchUsers = async () => {\n     try {\n-      const response = await fetch(\"/api/admin/customers\");\n+      const response = await fetch(\"/api/admin/customers\", { cache: \"no-store\" });\n       if (response.ok) {\n         const data = await response.json();\n         setUsers(data);\n       }\n"
                }
            ],
            "date": 1746957613037,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface User {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  provider: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport default function CustomersPage() {\r\n  const { data: session, status } = useSession();\r\n  const router = useRouter();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (status === \"unauthenticated\") {\r\n      router.push(\"/login\");\r\n    } else if (session?.user?.email === process.env.NEXT_PUBLIC_ADMIN_EMAIL) {\r\n      fetchUsers();\r\n    }\r\n  }, [session, status]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/admin/users\");\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Danh sách khách hàng</h1>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full bg-white border border-gray-300\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"px-6 py-3 border-b text-left\">Tên</th>\r\n              <th className=\"px-6 py-3 border-b text-left\">Email</th>\r\n              <th className=\"px-6 py-3 border-b text-left\">Phương thức đăng nhập</th>\r\n              <th className=\"px-6 py-3 border-b text-left\">Ngày tạo</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 border-b\">{user.name}</td>\r\n                <td className=\"px-6 py-4 border-b\">{user.email}</td>\r\n                <td className=\"px-6 py-4 border-b\">{user.provider}</td>\r\n                <td className=\"px-6 py-4 border-b\">\r\n                  {new Date(user.createdAt).toLocaleDateString(\"vi-VN\")}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
{
    "sourceFile": "src/app/admin/notifications/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1746893158757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748618828143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,18 +4,31 @@\n \r\n interface PromoCode {\r\n   id: string;\r\n   code: string;\r\n-  amount: number;\r\n+  amount?: number; // amount có thể không tồn tại nếu type là percentage\r\n   isActive: boolean;\r\n+  type: 'fixed' | 'percentage'; // Thêm loại giảm giá\r\n+  value: number; // Số tiền hoặc phần trăm\r\n+  maxAmount?: number; // Giới hạn tối đa cho percentage\r\n+  isLoginRequired?: boolean; // Yêu cầu đăng nhập\r\n+  perUserLimit?: number; // Giới hạn sử dụng mỗi người dùng\r\n+  usedByUsers?: string[]; // Danh sách người dùng đã dùng\r\n+  expiryDate?: string; // Ngày hết hạn\r\n+  usedCount?: number; // Tổng số lần đã dùng\r\n }\r\n \r\n export default function NotificationsAdmin() {\r\n   const [announcement, setAnnouncement] = useState(\"\");\r\n   const [isAnnouncementActive, setIsAnnouncementActive] = useState(false);\r\n   const [promoCodes, setPromoCodes] = useState<PromoCode[]>([]);\r\n   const [newPromoCode, setNewPromoCode] = useState(\"\");\r\n-  const [newPromoAmount, setNewPromoAmount] = useState(\"\");\r\n+  const [newPromoType, setNewPromoType] = useState<'fixed' | 'percentage'>('fixed'); // State cho loại giảm giá\r\n+  const [newPromoValue, setNewPromoValue] = useState(\"\"); // State cho giá trị (tiền hoặc %) - dùng string để dễ nhập liệu\r\n+  const [newPromoMaxAmount, setNewPromoMaxAmount] = useState(\"\"); // State cho giới hạn tối đa\r\n+  const [newPromoIsLoginRequired, setNewPromoIsLoginRequired] = useState(false); // State yêu cầu đăng nhập\r\n+  const [newPromoPerUserLimit, setNewPromoPerUserLimit] = useState(\"\"); // State giới hạn mỗi người dùng\r\n+  const [newPromoExpiryDate, setNewPromoExpiryDate] = useState(\"\"); // State ngày hết hạn\r\n   const [message, setMessage] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n     fetchNotifications();\r\n@@ -25,14 +38,40 @@\n     try {\r\n       const response = await fetch(\"/api/admin/notifications\");\r\n       const data = await response.json();\r\n       if (data.ok) {\r\n-        setAnnouncement(data.announcement);\r\n-        setIsAnnouncementActive(data.isAnnouncementActive);\r\n-        setPromoCodes(data.promoCodes || []);\r\n+        // Filter out announcement and only set promo codes\r\n+        const fetchedPromoCodes = data.notifications.filter((notif: any) => notif.type === 'promo');\r\n+        const announcementNotif = data.notifications.find((notif: any) => notif.type === 'announcement');\r\n+\r\n+        if(announcementNotif) {\r\n+           setAnnouncement(announcementNotif.content);\r\n+           setIsAnnouncementActive(announcementNotif.isActive);\r\n+        }\r\n+\r\n+        // Map data to match PromoCode interface\r\n+        const formattedPromoCodes: PromoCode[] = fetchedPromoCodes.map((code: any) => ({\r\n+          id: code._id.toString(),\r\n+          code: code.code,\r\n+          type: code.type || 'fixed', // Default to fixed if type is missing\r\n+          value: code.value !== undefined ? code.value : code.amount, // Use value if available, fallback to amount\r\n+          amount: code.amount, // Keep amount for backward compatibility if needed\r\n+          maxAmount: code.maxAmount,\r\n+          isActive: code.isActive,\r\n+          isLoginRequired: code.isLoginRequired || false,\r\n+          perUserLimit: code.perUserLimit || 0,\r\n+          usedByUsers: code.usedByUsers || [],\r\n+          expiryDate: code.expiryDate,\r\n+          usedCount: code.usedCount || 0,\r\n+        }));\r\n+        setPromoCodes(formattedPromoCodes);\r\n+\r\n+      } else {\r\n+         setMessage(data.message || \"Failed to fetch notifications\");\r\n       }\r\n     } catch (error) {\r\n       console.error(\"Error fetching notifications:\", error);\r\n+      setMessage(\"Có lỗi xảy ra khi lấy dữ liệu thông báo và mã giảm giá\");\r\n     }\r\n   };\r\n \r\n   const handleAnnouncementSubmit = async (e: React.FormEvent) => {\r\n@@ -62,24 +101,39 @@\n   };\r\n \r\n   const handleAddPromoCode = async (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n-    console.log(\"Adding promo code:\", { newPromoCode, newPromoAmount });\r\n+    console.log(\"Adding promo code:\", { newPromoCode, newPromoType, newPromoValue, newPromoMaxAmount, newPromoIsLoginRequired, newPromoPerUserLimit, newPromoExpiryDate });\r\n \r\n-    if (!newPromoCode || !newPromoAmount) {\r\n-      setMessage(\"Vui lòng nhập đầy đủ thông tin mã giảm giá\");\r\n+    if (!newPromoCode.trim() || !newPromoValue.trim()) {\r\n+      setMessage(\"Vui lòng nhập đầy đủ mã và giá trị giảm giá\");\r\n       return;\r\n     }\r\n \r\n-    // Chuyển đổi chuỗi số tiền thành số\r\n-    const amount = parseInt(newPromoAmount.replace(/[^0-9]/g, ''));\r\n-    console.log(\"Parsed amount:\", amount);\r\n+    const promoValueNumeric = parseFloat(newPromoValue.replace(/[^0-9.-]+/g, ''));\r\n \r\n-    if (isNaN(amount) || amount <= 0) {\r\n-      setMessage(\"Số tiền giảm giá không hợp lệ\");\r\n-      return;\r\n+    if (isNaN(promoValueNumeric) || promoValueNumeric <= 0) {\r\n+        setMessage(newPromoType === 'fixed' ? \"Số tiền giảm giá không hợp lệ\" : \"Phần trăm giảm giá không hợp lệ\");\r\n+        return;\r\n     }\r\n \r\n+    let promoMaxAmountNumeric: number | undefined = undefined;\r\n+    if (newPromoType === 'percentage' && newPromoMaxAmount.trim()) {\r\n+        promoMaxAmountNumeric = parseFloat(newPromoMaxAmount.replace(/[^0-9.-]+/g, ''));\r\n+        if (isNaN(promoMaxAmountNumeric) || promoMaxAmountNumeric < 0) {\r\n+            setMessage(\"Giới hạn tối đa không hợp lệ\");\r\n+            return;\r\n+        }\r\n+    }\r\n+\r\n+    const promoPerUserLimitNumeric = parseInt(newPromoPerUserLimit.trim());\r\n+    if (newPromoPerUserLimit.trim() && (isNaN(promoPerUserLimitNumeric) || promoPerUserLimitNumeric < 0)) {\r\n+         setMessage(\"Giới hạn sử dụng mỗi người dùng không hợp lệ\");\r\n+         return;\r\n+    }\r\n+\r\n+    const promoExpiryDateValue = newPromoExpiryDate ? new Date(newPromoExpiryDate).toISOString() : undefined; // Lưu ISO string\r\n+\r\n     try {\r\n       const response = await fetch(\"/api/admin/notifications\", {\r\n         method: \"POST\",\r\n         headers: {\r\n@@ -87,10 +141,18 @@\n         },\r\n         body: JSON.stringify({\r\n           type: \"promo\",\r\n           action: \"add\",\r\n-          code: newPromoCode.trim(),\r\n-          amount: Number(amount), // Đảm bảo gửi số\r\n+          code: newPromoCode.trim().toUpperCase(), // Lưu mã code viết hoa\r\n+          promoType: newPromoType, // Gửi loại giảm giá\r\n+          promoValue: promoValueNumeric, // Gửi giá trị số\r\n+          promoMaxAmount: promoMaxAmountNumeric, // Gửi giới hạn tối đa\r\n+          isLoginRequired: newPromoIsLoginRequired, // Gửi yêu cầu đăng nhập\r\n+          perUserLimit: promoPerUserLimitNumeric || 0, // Gửi giới hạn mỗi người dùng (0 nếu trống/không hợp lệ)\r\n+          expiryDate: promoExpiryDateValue, // Gửi ngày hết hạn\r\n+          isActive: true, // Mặc định kích hoạt khi tạo mới\r\n+          usedByUsers: [], // Khởi tạo mảng rỗng\r\n+          usedCount: 0, // Khởi tạo số lần dùng là 0\r\n         }),\r\n       });\r\n \r\n       const data = await response.json();\r\n@@ -98,9 +160,14 @@\n \r\n       if (data.ok) {\r\n         setMessage(\"Mã giảm giá đã được thêm!\");\r\n         setNewPromoCode(\"\");\r\n-        setNewPromoAmount(\"\");\r\n+        setNewPromoType('fixed');\r\n+        setNewPromoValue(\"\");\r\n+        setNewPromoMaxAmount(\"\");\r\n+        setNewPromoIsLoginRequired(false);\r\n+        setNewPromoPerUserLimit(\"\");\r\n+        setNewPromoExpiryDate(\"\");\r\n         fetchNotifications();\r\n         setTimeout(() => setMessage(\"\"), 3000);\r\n       } else {\r\n         setMessage(data.error || \"Có lỗi xảy ra khi thêm mã giảm giá\");\r\n@@ -229,26 +296,92 @@\n             <div className=\"p-6\">\r\n               <form onSubmit={handleAddPromoCode} className=\"mb-6\">\r\n                 <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                   <div>\r\n+                    <label className=\"block text-sm font-medium text-black mb-1\">Mã giảm giá</label>\r\n                     <input\r\n                       type=\"text\"\r\n                       value={newPromoCode}\r\n                       onChange={(e) => setNewPromoCode(e.target.value)}\r\n                       className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n-                      placeholder=\"Nhập mã giảm giá...\"\r\n+                      placeholder=\"VD: NEWCODE20\"\r\n+                      required\r\n                     />\r\n                   </div>\r\n                   <div>\r\n+                    <label className=\"block text-sm font-medium text-black mb-1\">Loại giảm giá</label>\r\n+                    <select\r\n+                      value={newPromoType}\r\n+                      onChange={(e) => setNewPromoType(e.target.value as 'fixed' | 'percentage')}\r\n+                      className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n+                    >\r\n+                      <option value=\"fixed\">Giảm theo số tiền cố định</option>\r\n+                      <option value=\"percentage\">Giảm theo phần trăm (%)</option>\r\n+                    </select>\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n+                  <div>\r\n+                    <label className=\"block text-sm font-medium text-black mb-1\">Giá trị giảm giá ({newPromoType === 'fixed' ? 'VND' : '%'})</label>\r\n                     <input\r\n                       type=\"text\"\r\n-                      value={newPromoAmount}\r\n-                      onChange={(e) => setNewPromoAmount(e.target.value)}\r\n+                      value={newPromoValue}\r\n+                      onChange={(e) => setNewPromoValue(e.target.value)}\r\n                       className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n-                      placeholder=\"Nhập số tiền giảm (VD: 100.000đ)\"\r\n+                      placeholder={newPromoType === 'fixed' ? \"VD: 50000\" : \"VD: 20\"}\r\n+                      required\r\n                     />\r\n                   </div>\r\n+                  {newPromoType === 'percentage' && (\r\n+                    <div>\r\n+                       <label className=\"block text-sm font-medium text-black mb-1\">Giới hạn tối đa (VND, tùy chọn)</label>\r\n+                       <input\r\n+                         type=\"text\"\r\n+                         value={newPromoMaxAmount}\r\n+                         onChange={(e) => setNewPromoMaxAmount(e.target.value)}\r\n+                         className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n+                         placeholder=\"VD: 100000\"\r\n+                       />\r\n+                    </div>\r\n+                  )}\r\n                 </div>\r\n+\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n+                   <div>\r\n+                      <label className=\"block text-sm font-medium text-black mb-1\">Ngày hết hạn (tùy chọn)</label>\r\n+                      <input\r\n+                        type=\"date\"\r\n+                        value={newPromoExpiryDate}\r\n+                        onChange={(e) => setNewPromoExpiryDate(e.target.value)}\r\n+                        className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n+                      />\r\n+                   </div>\r\n+                    <div>\r\n+                       <label className=\"block text-sm font-medium text-black mb-1\">Giới hạn sử dụng mỗi người dùng (tùy chọn, 0 = không giới hạn)</label>\r\n+                       <input\r\n+                         type=\"number\"\r\n+                         value={newPromoPerUserLimit}\r\n+                         onChange={(e) => setNewPromoPerUserLimit(e.target.value)}\r\n+                         className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n+                         placeholder=\"VD: 1\"\r\n+                         min=\"0\"\r\n+                       />\r\n+                    </div>\r\n+                </div>\r\n+\r\n+                <div className=\"mb-4\">\r\n+                   <label className=\"flex items-center text-sm font-medium text-black\">\r\n+                     <input\r\n+                       type=\"checkbox\"\r\n+                       checked={newPromoIsLoginRequired}\r\n+                       onChange={(e) => setNewPromoIsLoginRequired(e.target.checked)}\r\n+                       className=\"form-checkbox h-4 w-4 text-black\"\r\n+                     />\r\n+                     <span className=\"ml-2\">Yêu cầu đăng nhập để sử dụng</span>\r\n+                   </label>\r\n+                </div>\r\n+\r\n                 <button\r\n                   type=\"submit\"\r\n                   className=\"bg-black text-white px-4 py-2 text-sm hover:bg-gray-800\"\r\n                 >\r\n@@ -260,18 +393,30 @@\n                 <table className=\"min-w-full\">\r\n                   <thead>\r\n                     <tr className=\"border-b border-gray-200\">\r\n                       <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Mã giảm giá</th>\r\n-                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Số tiền giảm</th>\r\n+                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Loại</th>\r\n+                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Giá trị</th>\r\n+                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Tối đa</th>\r\n+                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Yêu cầu ĐN</th>\r\n+                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Giới hạn mỗi users</th>\r\n+                       <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Đã dùng</th>\r\n+                       <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Hết hạn</th>\r\n                       <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Trạng thái</th>\r\n                       <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Thao tác</th>\r\n                     </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                     {promoCodes.map((promo) => (\r\n                       <tr key={promo.id} className=\"border-b border-gray-100\">\r\n                         <td className=\"py-2 px-4 text-sm text-black\">{promo.code}</td>\r\n-                        <td className=\"py-2 px-4 text-sm text-black\">{promo.amount.toLocaleString()}đ</td>\r\n+                        <td className=\"py-2 px-4 text-sm text-black\">{promo.type === 'fixed' ? 'Tiền' : '%'}</td>\r\n+                        <td className=\"py-2 px-4 text-sm text-black\">{promo.value}{promo.type === 'fixed' ? '₫' : '%'}</td>\r\n+                        <td className=\"py-2 px-4 text-sm text-black\">{promo.maxAmount !== undefined && promo.maxAmount !== null ? promo.maxAmount.toLocaleString() + '₫' : '---'}</td>\r\n+                        <td className=\"py-2 px-4 text-sm text-black\">{promo.isLoginRequired ? 'Có' : 'Không'}</td>\r\n+                        <td className=\"py-2 px-4 text-sm text-black\">{promo.perUserLimit > 0 ? promo.perUserLimit : 'Không giới hạn'}</td>\r\n+                         <td className=\"py-2 px-4 text-sm text-black\">{promo.usedCount !== undefined ? promo.usedCount : 'N/A'}</td>\r\n+                         <td className=\"py-2 px-4 text-sm text-black\">{promo.expiryDate ? new Date(promo.expiryDate).toLocaleDateString() : '---'}</td>\r\n                         <td className=\"py-2 px-4\">\r\n                           <label className=\"flex items-center\">\r\n                             <input\r\n                               type=\"checkbox\"\r\n"
                },
                {
                    "date": 1748618838049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -412,9 +412,9 @@\n                         <td className=\"py-2 px-4 text-sm text-black\">{promo.type === 'fixed' ? 'Tiền' : '%'}</td>\r\n                         <td className=\"py-2 px-4 text-sm text-black\">{promo.value}{promo.type === 'fixed' ? '₫' : '%'}</td>\r\n                         <td className=\"py-2 px-4 text-sm text-black\">{promo.maxAmount !== undefined && promo.maxAmount !== null ? promo.maxAmount.toLocaleString() + '₫' : '---'}</td>\r\n                         <td className=\"py-2 px-4 text-sm text-black\">{promo.isLoginRequired ? 'Có' : 'Không'}</td>\r\n-                        <td className=\"py-2 px-4 text-sm text-black\">{promo.perUserLimit > 0 ? promo.perUserLimit : 'Không giới hạn'}</td>\r\n+                        <td className=\"py-2 px-4 text-sm text-black\">{promo.perUserLimit !== undefined && promo.perUserLimit > 0 ? promo.perUserLimit : 'Không giới hạn'}</td>\r\n                          <td className=\"py-2 px-4 text-sm text-black\">{promo.usedCount !== undefined ? promo.usedCount : 'N/A'}</td>\r\n                          <td className=\"py-2 px-4 text-sm text-black\">{promo.expiryDate ? new Date(promo.expiryDate).toLocaleDateString() : '---'}</td>\r\n                         <td className=\"py-2 px-4\">\r\n                           <label className=\"flex items-center\">\r\n"
                },
                {
                    "date": 1748657832887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,18 +42,22 @@\n         // Filter out announcement and only set promo codes\r\n         const fetchedPromoCodes = data.notifications.filter((notif: any) => notif.type === 'promo');\r\n         const announcementNotif = data.notifications.find((notif: any) => notif.type === 'announcement');\r\n \r\n-        if(announcementNotif) {\r\n-           setAnnouncement(announcementNotif.content);\r\n-           setIsAnnouncementActive(announcementNotif.isActive);\r\n+        if (announcementNotif) {\r\n+          setAnnouncement(announcementNotif.content || '');\r\n+          setIsAnnouncementActive(announcementNotif.isActive || false);\r\n+        } else {\r\n+          // Reset state if no announcement exists\r\n+          setAnnouncement('');\r\n+          setIsAnnouncementActive(false);\r\n         }\r\n \r\n         // Map data to match PromoCode interface\r\n         const formattedPromoCodes: PromoCode[] = fetchedPromoCodes.map((code: any) => ({\r\n           id: code._id.toString(),\r\n           code: code.code,\r\n-          type: code.type || 'fixed', // Default to fixed if type is missing\r\n+          type: code.promoType || 'fixed', // Use promoType instead of type\r\n           value: code.value !== undefined ? code.value : code.amount, // Use value if available, fallback to amount\r\n           amount: code.amount, // Keep amount for backward compatibility if needed\r\n           maxAmount: code.maxAmount,\r\n           isActive: code.isActive,\r\n@@ -63,11 +67,10 @@\n           expiryDate: code.expiryDate,\r\n           usedCount: code.usedCount || 0,\r\n         }));\r\n         setPromoCodes(formattedPromoCodes);\r\n-\r\n       } else {\r\n-         setMessage(data.message || \"Failed to fetch notifications\");\r\n+        setMessage(data.message || \"Failed to fetch notifications\");\r\n       }\r\n     } catch (error) {\r\n       console.error(\"Error fetching notifications:\", error);\r\n       setMessage(\"Có lỗi xảy ra khi lấy dữ liệu thông báo và mã giảm giá\");\r\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface PromoCode {\r\n  id: string;\r\n  code: string;\r\n  amount: number;\r\n  isActive: boolean;\r\n}\r\n\r\nexport default function NotificationsAdmin() {\r\n  const [announcement, setAnnouncement] = useState(\"\");\r\n  const [isAnnouncementActive, setIsAnnouncementActive] = useState(false);\r\n  const [promoCodes, setPromoCodes] = useState<PromoCode[]>([]);\r\n  const [newPromoCode, setNewPromoCode] = useState(\"\");\r\n  const [newPromoAmount, setNewPromoAmount] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/admin/notifications\");\r\n      const data = await response.json();\r\n      if (data.ok) {\r\n        setAnnouncement(data.announcement);\r\n        setIsAnnouncementActive(data.isAnnouncementActive);\r\n        setPromoCodes(data.promoCodes || []);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching notifications:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAnnouncementSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"/api/admin/notifications\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          type: \"announcement\",\r\n          content: announcement,\r\n          isActive: isAnnouncementActive,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.ok) {\r\n        setMessage(\"Thông báo đã được cập nhật!\");\r\n        setTimeout(() => setMessage(\"\"), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating announcement:\", error);\r\n      setMessage(\"Có lỗi xảy ra khi cập nhật thông báo\");\r\n    }\r\n  };\r\n\r\n  const handleAddPromoCode = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"Adding promo code:\", { newPromoCode, newPromoAmount });\r\n\r\n    if (!newPromoCode || !newPromoAmount) {\r\n      setMessage(\"Vui lòng nhập đầy đủ thông tin mã giảm giá\");\r\n      return;\r\n    }\r\n\r\n    // Chuyển đổi chuỗi số tiền thành số\r\n    const amount = parseInt(newPromoAmount.replace(/[^0-9]/g, ''));\r\n    console.log(\"Parsed amount:\", amount);\r\n\r\n    if (isNaN(amount) || amount <= 0) {\r\n      setMessage(\"Số tiền giảm giá không hợp lệ\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/admin/notifications\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          type: \"promo\",\r\n          action: \"add\",\r\n          code: newPromoCode.trim(),\r\n          amount: Number(amount), // Đảm bảo gửi số\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"API Response:\", data);\r\n\r\n      if (data.ok) {\r\n        setMessage(\"Mã giảm giá đã được thêm!\");\r\n        setNewPromoCode(\"\");\r\n        setNewPromoAmount(\"\");\r\n        fetchNotifications();\r\n        setTimeout(() => setMessage(\"\"), 3000);\r\n      } else {\r\n        setMessage(data.error || \"Có lỗi xảy ra khi thêm mã giảm giá\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding promo code:\", error);\r\n      setMessage(\"Có lỗi xảy ra khi thêm mã giảm giá\");\r\n    }\r\n  };\r\n\r\n  const handleTogglePromoCode = async (id: string, isActive: boolean) => {\r\n    try {\r\n      const response = await fetch(\"/api/admin/notifications\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          type: \"promo\",\r\n          action: \"toggle\",\r\n          id,\r\n          isActive,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.ok) {\r\n        setMessage(\"Trạng thái mã giảm giá đã được cập nhật!\");\r\n        fetchNotifications();\r\n        setTimeout(() => setMessage(\"\"), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error toggling promo code:\", error);\r\n      setMessage(\"Có lỗi xảy ra khi cập nhật trạng thái mã giảm giá\");\r\n    }\r\n  };\r\n\r\n  const handleDeletePromoCode = async (id: string) => {\r\n    if (!confirm(\"Bạn có chắc chắn muốn xóa mã giảm giá này?\")) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/admin/notifications\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          type: \"promo\",\r\n          action: \"delete\",\r\n          id,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.ok) {\r\n        setMessage(\"Mã giảm giá đã được xóa!\");\r\n        fetchNotifications();\r\n        setTimeout(() => setMessage(\"\"), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting promo code:\", error);\r\n      setMessage(\"Có lỗi xảy ra khi xóa mã giảm giá\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <div className=\"w-full\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <h1 className=\"text-2xl font-bold text-black py-12 px-8 uppercase tracking-wide\">Quản lý thông báo và mã giảm giá</h1>\r\n        </div>\r\n\r\n        {message && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className=\"bg-green-50 border-b border-green-200 text-green-700 px-8 py-2 text-sm\"\r\n          >\r\n            {message}\r\n          </motion.div>\r\n        )}\r\n\r\n        <div className=\"p-8\">\r\n          <div className=\"border border-gray-200 mb-6\">\r\n            <div className=\"border-b border-gray-200 px-6 py-4\">\r\n              <h2 className=\"text-lg font-bold text-black\">Thông báo chạy ngang</h2>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <form onSubmit={handleAnnouncementSubmit}>\r\n                <div className=\"mb-4\">\r\n                  <textarea\r\n                    value={announcement}\r\n                    onChange={(e) => setAnnouncement(e.target.value)}\r\n                    className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n                    rows={3}\r\n                    placeholder=\"Nhập nội dung thông báo...\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                  <label className=\"flex items-center text-sm\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isAnnouncementActive}\r\n                      onChange={(e) => setIsAnnouncementActive(e.target.checked)}\r\n                      className=\"form-checkbox h-4 w-4 text-black\"\r\n                    />\r\n                    <span className=\"ml-2 text-black\">Hiển thị thông báo</span>\r\n                  </label>\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-black text-white px-4 py-2 text-sm hover:bg-gray-800\"\r\n                >\r\n                  Cập nhật thông báo\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"border border-gray-200\">\r\n            <div className=\"border-b border-gray-200 px-6 py-4\">\r\n              <h2 className=\"text-lg font-bold text-black\">Mã giảm giá</h2>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <form onSubmit={handleAddPromoCode} className=\"mb-6\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newPromoCode}\r\n                      onChange={(e) => setNewPromoCode(e.target.value)}\r\n                      className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n                      placeholder=\"Nhập mã giảm giá...\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newPromoAmount}\r\n                      onChange={(e) => setNewPromoAmount(e.target.value)}\r\n                      className=\"w-full border border-gray-200 px-3 py-2 text-sm text-black focus:outline-none focus:border-gray-400\"\r\n                      placeholder=\"Nhập số tiền giảm (VD: 100.000đ)\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-black text-white px-4 py-2 text-sm hover:bg-gray-800\"\r\n                >\r\n                  Thêm mã giảm giá\r\n                </button>\r\n              </form>\r\n\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full\">\r\n                  <thead>\r\n                    <tr className=\"border-b border-gray-200\">\r\n                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Mã giảm giá</th>\r\n                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Số tiền giảm</th>\r\n                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Trạng thái</th>\r\n                      <th className=\"py-2 px-4 text-left text-sm font-bold text-black\">Thao tác</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {promoCodes.map((promo) => (\r\n                      <tr key={promo.id} className=\"border-b border-gray-100\">\r\n                        <td className=\"py-2 px-4 text-sm text-black\">{promo.code}</td>\r\n                        <td className=\"py-2 px-4 text-sm text-black\">{promo.amount.toLocaleString()}đ</td>\r\n                        <td className=\"py-2 px-4\">\r\n                          <label className=\"flex items-center\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={promo.isActive}\r\n                              onChange={(e) => handleTogglePromoCode(promo.id, e.target.checked)}\r\n                              className=\"form-checkbox h-4 w-4 text-black\"\r\n                            />\r\n                            <span className=\"ml-2 text-sm text-black\">\r\n                              {promo.isActive ? \"Đang kích hoạt\" : \"Đã tắt\"}\r\n                            </span>\r\n                          </label>\r\n                        </td>\r\n                        <td className=\"py-2 px-4\">\r\n                          <button\r\n                            onClick={() => handleDeletePromoCode(promo.id)}\r\n                            className=\"text-sm text-red-600 hover:text-red-800\"\r\n                          >\r\n                            Xóa\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
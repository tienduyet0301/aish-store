{
    "sourceFile": "src/app/admin/banners/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1746893158489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747383021582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n-  const handleFileUpload = async (e, bannerId = null) => {\r\n+  const handleFileUpload = async (e, bannerId = null, isMobile = false) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n     setUploading(true);\r\n@@ -80,9 +80,9 @@\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n             _id: bannerId,\r\n-            imageUrl: imageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n@@ -97,9 +97,9 @@\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n-            imageUrl: imageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n@@ -211,19 +211,32 @@\n                 title=\"Upload Requirements\"\r\n               >\r\n                 <FiInfo size={20} />\r\n               </button>\r\n-              <label className=\"bg-black text-white px-4 py-2 rounded-md cursor-pointer hover:bg-gray-800 transition-colors flex items-center gap-2\">\r\n-                <FiPlus className=\"inline\" />\r\n-                {uploading ? \"Uploading...\" : \"Add Banner\"}\r\n-                <input\r\n-                  type=\"file\"\r\n-                  className=\"hidden\"\r\n-                  accept=\"image/jpeg,image/png,image/webp\"\r\n-                  onChange={(e) => handleFileUpload(e)}\r\n-                  disabled={uploading}\r\n-                />\r\n-              </label>\r\n+              <div className=\"flex gap-2\">\r\n+                <label className=\"bg-black text-white px-4 py-2 rounded-md cursor-pointer hover:bg-gray-800 transition-colors flex items-center gap-2\">\r\n+                  <FiPlus className=\"inline\" />\r\n+                  {uploading ? \"Uploading...\" : \"Add Desktop Banner\"}\r\n+                  <input\r\n+                    type=\"file\"\r\n+                    className=\"hidden\"\r\n+                    accept=\"image/jpeg,image/png,image/webp\"\r\n+                    onChange={(e) => handleFileUpload(e, null, false)}\r\n+                    disabled={uploading}\r\n+                  />\r\n+                </label>\r\n+                <label className=\"bg-gray-600 text-white px-4 py-2 rounded-md cursor-pointer hover:bg-gray-700 transition-colors flex items-center gap-2\">\r\n+                  <FiPlus className=\"inline\" />\r\n+                  {uploading ? \"Uploading...\" : \"Add Mobile Banner\"}\r\n+                  <input\r\n+                    type=\"file\"\r\n+                    className=\"hidden\"\r\n+                    accept=\"image/jpeg,image/png,image/webp\"\r\n+                    onChange={(e) => handleFileUpload(e, null, true)}\r\n+                    disabled={uploading}\r\n+                  />\r\n+                </label>\r\n+              </div>\r\n             </div>\r\n           </div>\r\n \r\n           {showRequirements && (\r\n@@ -231,9 +244,10 @@\n               <h2 className=\"text-lg font-semibold mb-2 text-gray-900\">Upload Requirements:</h2>\r\n               <ul className=\"list-disc list-inside space-y-1 text-gray-600\">\r\n                 <li>Supported formats: JPEG, PNG, WebP</li>\r\n                 <li>Maximum file size: 5MB</li>\r\n-                <li>Recommended dimensions: 1920x1080 pixels</li>\r\n+                <li>Desktop banner: Recommended dimensions 1920x1080 pixels</li>\r\n+                <li>Mobile banner: Recommended dimensions 1080x1920 pixels</li>\r\n                 <li>For best results, use high-quality images</li>\r\n               </ul>\r\n             </div>\r\n           )}\r\n@@ -245,8 +259,13 @@\n               key={banner._id}\r\n               className=\"border border-gray-200 rounded-lg overflow-hidden group relative\"\r\n             >\r\n               <div className=\"w-full aspect-video min-h-[120px] bg-gray-100 overflow-hidden rounded-lg\">\r\n+                <div className=\"absolute top-2 left-2 z-10\">\r\n+                  <span className=\"bg-black text-white text-xs px-2 py-1 rounded\">\r\n+                    {banner.mobileImageUrl ? \"Mobile\" : \"Desktop\"}\r\n+                  </span>\r\n+                </div>\r\n                 <a href={banner.imageUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                   <img\r\n                     src={banner.imageUrl}\r\n                     alt={banner.title || `Banner ${index + 1}`}\r\n"
                },
                {
                    "date": 1747383392907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,32 +211,19 @@\n                 title=\"Upload Requirements\"\r\n               >\r\n                 <FiInfo size={20} />\r\n               </button>\r\n-              <div className=\"flex gap-2\">\r\n-                <label className=\"bg-black text-white px-4 py-2 rounded-md cursor-pointer hover:bg-gray-800 transition-colors flex items-center gap-2\">\r\n-                  <FiPlus className=\"inline\" />\r\n-                  {uploading ? \"Uploading...\" : \"Add Desktop Banner\"}\r\n-                  <input\r\n-                    type=\"file\"\r\n-                    className=\"hidden\"\r\n-                    accept=\"image/jpeg,image/png,image/webp\"\r\n-                    onChange={(e) => handleFileUpload(e, null, false)}\r\n-                    disabled={uploading}\r\n-                  />\r\n-                </label>\r\n-                <label className=\"bg-gray-600 text-white px-4 py-2 rounded-md cursor-pointer hover:bg-gray-700 transition-colors flex items-center gap-2\">\r\n-                  <FiPlus className=\"inline\" />\r\n-                  {uploading ? \"Uploading...\" : \"Add Mobile Banner\"}\r\n-                  <input\r\n-                    type=\"file\"\r\n-                    className=\"hidden\"\r\n-                    accept=\"image/jpeg,image/png,image/webp\"\r\n-                    onChange={(e) => handleFileUpload(e, null, true)}\r\n-                    disabled={uploading}\r\n-                  />\r\n-                </label>\r\n-              </div>\r\n+              <label className=\"bg-black text-white px-4 py-2 rounded-md cursor-pointer hover:bg-gray-800 transition-colors flex items-center gap-2\">\r\n+                <FiPlus className=\"inline\" />\r\n+                {uploading ? \"Uploading...\" : \"Add Banner\"}\r\n+                <input\r\n+                  type=\"file\"\r\n+                  className=\"hidden\"\r\n+                  accept=\"image/jpeg,image/png,image/webp\"\r\n+                  onChange={(e) => handleFileUpload(e, null, false)}\r\n+                  disabled={uploading}\r\n+                />\r\n+              </label>\r\n             </div>\r\n           </div>\r\n \r\n           {showRequirements && (\r\n"
                },
                {
                    "date": 1747383492918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,12 +42,22 @@\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n-  const handleFileUpload = async (e, bannerId = null, isMobile = false) => {\r\n+  const handleFileUpload = async (e, bannerId = null) => {\r\n     const file = e.target.files[0];\r\n     if (!file) return;\r\n \r\n+    // Kiểm tra kích thước ảnh\r\n+    const isMobile = await new Promise((resolve) => {\r\n+      const img = new Image();\r\n+      img.onload = () => {\r\n+        // Nếu chiều cao > chiều rộng thì là ảnh dọc (mobile)\r\n+        resolve(img.height > img.width);\r\n+      };\r\n+      img.src = URL.createObjectURL(file);\r\n+    });\r\n+\r\n     setUploading(true);\r\n     const formData = new FormData();\r\n     formData.append(\"files\", file);\r\n \r\n@@ -218,9 +228,9 @@\n                 <input\r\n                   type=\"file\"\r\n                   className=\"hidden\"\r\n                   accept=\"image/jpeg,image/png,image/webp\"\r\n-                  onChange={(e) => handleFileUpload(e, null, false)}\r\n+                  onChange={(e) => handleFileUpload(e, null)}\r\n                   disabled={uploading}\r\n                 />\r\n               </label>\r\n             </div>\r\n"
                },
                {
                    "date": 1747383811674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,14 +48,18 @@\n     if (!file) return;\r\n \r\n     // Kiểm tra kích thước ảnh\r\n     const isMobile = await new Promise((resolve) => {\r\n-      const img = new Image();\r\n-      img.onload = () => {\r\n-        // Nếu chiều cao > chiều rộng thì là ảnh dọc (mobile)\r\n-        resolve(img.height > img.width);\r\n+      const reader = new FileReader();\r\n+      reader.onload = (e) => {\r\n+        const img = new window.Image();\r\n+        img.onload = () => {\r\n+          // Nếu chiều cao > chiều rộng thì là ảnh dọc (mobile)\r\n+          resolve(img.height > img.width);\r\n+        };\r\n+        img.src = e.target.result;\r\n       };\r\n-      img.src = URL.createObjectURL(file);\r\n+      reader.readAsDataURL(file);\r\n     });\r\n \r\n     setUploading(true);\r\n     const formData = new FormData();\r\n"
                },
                {
                    "date": 1747383875369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,11 @@\n \r\n       const imageUrl = uploadData.urls[0];\r\n       console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n \r\n+      // Đảm bảo URL bắt đầu bằng /uploads/\r\n+      const formattedImageUrl = imageUrl.startsWith('/uploads/') ? imageUrl : `/uploads/${imageUrl}`;\r\n+\r\n       if (bannerId) {\r\n         // Update existing banner\r\n         const bannerResponse = await fetch(\"/api/banners\", {\r\n           method: \"PUT\",\r\n@@ -94,9 +97,9 @@\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n             _id: bannerId,\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n@@ -111,9 +114,9 @@\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n"
                },
                {
                    "date": 1747383951611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,14 +82,18 @@\n       if (!uploadData.success || !uploadData.urls || uploadData.urls.length === 0) {\r\n         throw new Error(\"No URL returned from upload\");\r\n       }\r\n \r\n-      const imageUrl = uploadData.urls[0];\r\n-      console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n+      // Lấy URL từ response và đảm bảo định dạng đúng\r\n+      let imageUrl = uploadData.urls[0];\r\n+      // Loại bỏ domain nếu có\r\n+      imageUrl = imageUrl.replace(/^https?:\\/\\/[^\\/]+/, '');\r\n+      // Đảm bảo bắt đầu bằng /uploads/\r\n+      if (!imageUrl.startsWith('/uploads/')) {\r\n+        imageUrl = `/uploads/${imageUrl.replace(/^\\/+/, '')}`;\r\n+      }\r\n+      console.log(\"Formatted image URL:\", imageUrl);\r\n \r\n-      // Đảm bảo URL bắt đầu bằng /uploads/\r\n-      const formattedImageUrl = imageUrl.startsWith('/uploads/') ? imageUrl : `/uploads/${imageUrl}`;\r\n-\r\n       if (bannerId) {\r\n         // Update existing banner\r\n         const bannerResponse = await fetch(\"/api/banners\", {\r\n           method: \"PUT\",\r\n@@ -97,9 +101,9 @@\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n             _id: bannerId,\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n@@ -114,9 +118,9 @@\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n"
                },
                {
                    "date": 1747384074922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,18 +82,14 @@\n       if (!uploadData.success || !uploadData.urls || uploadData.urls.length === 0) {\r\n         throw new Error(\"No URL returned from upload\");\r\n       }\r\n \r\n-      // Lấy URL từ response và đảm bảo định dạng đúng\r\n-      let imageUrl = uploadData.urls[0];\r\n-      // Loại bỏ domain nếu có\r\n-      imageUrl = imageUrl.replace(/^https?:\\/\\/[^\\/]+/, '');\r\n-      // Đảm bảo bắt đầu bằng /uploads/\r\n-      if (!imageUrl.startsWith('/uploads/')) {\r\n-        imageUrl = `/uploads/${imageUrl.replace(/^\\/+/, '')}`;\r\n-      }\r\n-      console.log(\"Formatted image URL:\", imageUrl);\r\n+      const imageUrl = uploadData.urls[0];\r\n+      console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n \r\n+      // Đảm bảo URL bắt đầu bằng /uploads/\r\n+      const formattedImageUrl = imageUrl.startsWith('/uploads/') ? imageUrl : `/uploads/${imageUrl}`;\r\n+\r\n       if (bannerId) {\r\n         // Update existing banner\r\n         const bannerResponse = await fetch(\"/api/banners\", {\r\n           method: \"PUT\",\r\n@@ -101,9 +97,9 @@\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n             _id: bannerId,\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n@@ -118,9 +114,9 @@\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n"
                },
                {
                    "date": 1747384167817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,13 +82,20 @@\n       if (!uploadData.success || !uploadData.urls || uploadData.urls.length === 0) {\r\n         throw new Error(\"No URL returned from upload\");\r\n       }\r\n \r\n-      const imageUrl = uploadData.urls[0];\r\n-      console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n+      // Lấy URL từ response và đảm bảo định dạng đúng\r\n+      let imageUrl = uploadData.urls[0];\r\n+      console.log(\"Original URL from upload:\", imageUrl);\r\n \r\n-      // Đảm bảo URL bắt đầu bằng /uploads/\r\n-      const formattedImageUrl = imageUrl.startsWith('/uploads/') ? imageUrl : `/uploads/${imageUrl}`;\r\n+      // Nếu URL không bắt đầu bằng /uploads/, thêm vào\r\n+      if (!imageUrl.startsWith('/uploads/')) {\r\n+        // Loại bỏ domain và các dấu / thừa\r\n+        imageUrl = imageUrl.replace(/^https?:\\/\\/[^\\/]+/, '');\r\n+        imageUrl = imageUrl.replace(/^\\/+/, '');\r\n+        imageUrl = `/uploads/${imageUrl}`;\r\n+      }\r\n+      console.log(\"Final formatted URL:\", imageUrl);\r\n \r\n       if (bannerId) {\r\n         // Update existing banner\r\n         const bannerResponse = await fetch(\"/api/banners\", {\r\n@@ -97,9 +104,9 @@\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n             _id: bannerId,\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n@@ -114,9 +121,9 @@\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n"
                },
                {
                    "date": 1747384225738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,20 +82,13 @@\n       if (!uploadData.success || !uploadData.urls || uploadData.urls.length === 0) {\r\n         throw new Error(\"No URL returned from upload\");\r\n       }\r\n \r\n-      // Lấy URL từ response và đảm bảo định dạng đúng\r\n-      let imageUrl = uploadData.urls[0];\r\n-      console.log(\"Original URL from upload:\", imageUrl);\r\n+      const imageUrl = uploadData.urls[0];\r\n+      console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n \r\n-      // Nếu URL không bắt đầu bằng /uploads/, thêm vào\r\n-      if (!imageUrl.startsWith('/uploads/')) {\r\n-        // Loại bỏ domain và các dấu / thừa\r\n-        imageUrl = imageUrl.replace(/^https?:\\/\\/[^\\/]+/, '');\r\n-        imageUrl = imageUrl.replace(/^\\/+/, '');\r\n-        imageUrl = `/uploads/${imageUrl}`;\r\n-      }\r\n-      console.log(\"Final formatted URL:\", imageUrl);\r\n+      // Đảm bảo URL bắt đầu bằng /uploads/\r\n+      const formattedImageUrl = imageUrl.startsWith('/uploads/') ? imageUrl : `/uploads/${imageUrl}`;\r\n \r\n       if (bannerId) {\r\n         // Update existing banner\r\n         const bannerResponse = await fetch(\"/api/banners\", {\r\n@@ -104,9 +97,9 @@\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n             _id: bannerId,\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n@@ -121,9 +114,9 @@\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: imageUrl,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n"
                },
                {
                    "date": 1747384272759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,26 +82,39 @@\n       if (!uploadData.success || !uploadData.urls || uploadData.urls.length === 0) {\r\n         throw new Error(\"No URL returned from upload\");\r\n       }\r\n \r\n-      const imageUrl = uploadData.urls[0];\r\n-      console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n+      // Lấy URL từ response và đảm bảo định dạng đúng\r\n+      let imageUrl = uploadData.urls[0];\r\n+      console.log(\"Original URL from upload:\", imageUrl);\r\n \r\n-      // Đảm bảo URL bắt đầu bằng /uploads/\r\n-      const formattedImageUrl = imageUrl.startsWith('/uploads/') ? imageUrl : `/uploads/${imageUrl}`;\r\n+      // Format URL cho đúng định dạng\r\n+      if (!imageUrl.startsWith('/uploads/')) {\r\n+        imageUrl = `/uploads/${imageUrl.replace(/^\\/+/, '')}`;\r\n+      }\r\n+      console.log(\"Final formatted URL:\", imageUrl);\r\n \r\n+      // Tạo object data cho banner\r\n+      const bannerData = {\r\n+        title: file.name,\r\n+      };\r\n+\r\n+      // Thêm URL vào đúng trường dựa vào kích thước ảnh\r\n+      if (isMobile) {\r\n+        bannerData.mobileImageUrl = imageUrl;\r\n+      } else {\r\n+        bannerData.imageUrl = imageUrl;\r\n+      }\r\n+\r\n       if (bannerId) {\r\n         // Update existing banner\r\n+        bannerData._id = bannerId;\r\n         const bannerResponse = await fetch(\"/api/banners\", {\r\n           method: \"PUT\",\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n-          body: JSON.stringify({\r\n-            _id: bannerId,\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n-            title: file.name,\r\n-          }),\r\n+          body: JSON.stringify(bannerData),\r\n         });\r\n \r\n         if (!bannerResponse.ok) {\r\n           const data = await bannerResponse.json();\r\n@@ -113,12 +126,9 @@\n           method: \"POST\",\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n-          body: JSON.stringify({\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n-            title: file.name,\r\n-          }),\r\n+          body: JSON.stringify(bannerData),\r\n         });\r\n \r\n         if (!bannerResponse.ok) {\r\n           const data = await bannerResponse.json();\r\n"
                },
                {
                    "date": 1747384299191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,39 +82,26 @@\n       if (!uploadData.success || !uploadData.urls || uploadData.urls.length === 0) {\r\n         throw new Error(\"No URL returned from upload\");\r\n       }\r\n \r\n-      // Lấy URL từ response và đảm bảo định dạng đúng\r\n-      let imageUrl = uploadData.urls[0];\r\n-      console.log(\"Original URL from upload:\", imageUrl);\r\n+      const imageUrl = uploadData.urls[0];\r\n+      console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n \r\n-      // Format URL cho đúng định dạng\r\n-      if (!imageUrl.startsWith('/uploads/')) {\r\n-        imageUrl = `/uploads/${imageUrl.replace(/^\\/+/, '')}`;\r\n-      }\r\n-      console.log(\"Final formatted URL:\", imageUrl);\r\n+      // Đảm bảo URL bắt đầu bằng /uploads/\r\n+      const formattedImageUrl = imageUrl.startsWith('/uploads/') ? imageUrl : `/uploads/${imageUrl}`;\r\n \r\n-      // Tạo object data cho banner\r\n-      const bannerData = {\r\n-        title: file.name,\r\n-      };\r\n-\r\n-      // Thêm URL vào đúng trường dựa vào kích thước ảnh\r\n-      if (isMobile) {\r\n-        bannerData.mobileImageUrl = imageUrl;\r\n-      } else {\r\n-        bannerData.imageUrl = imageUrl;\r\n-      }\r\n-\r\n       if (bannerId) {\r\n         // Update existing banner\r\n-        bannerData._id = bannerId;\r\n         const bannerResponse = await fetch(\"/api/banners\", {\r\n           method: \"PUT\",\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n-          body: JSON.stringify(bannerData),\r\n+          body: JSON.stringify({\r\n+            _id: bannerId,\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n+            title: file.name,\r\n+          }),\r\n         });\r\n \r\n         if (!bannerResponse.ok) {\r\n           const data = await bannerResponse.json();\r\n@@ -126,9 +113,12 @@\n           method: \"POST\",\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n-          body: JSON.stringify(bannerData),\r\n+          body: JSON.stringify({\r\n+            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n+            title: file.name,\r\n+          }),\r\n         });\r\n \r\n         if (!bannerResponse.ok) {\r\n           const data = await bannerResponse.json();\r\n"
                },
                {
                    "date": 1747384320986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,11 +85,8 @@\n \r\n       const imageUrl = uploadData.urls[0];\r\n       console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n \r\n-      // Đảm bảo URL bắt đầu bằng /uploads/\r\n-      const formattedImageUrl = imageUrl.startsWith('/uploads/') ? imageUrl : `/uploads/${imageUrl}`;\r\n-\r\n       if (bannerId) {\r\n         // Update existing banner\r\n         const bannerResponse = await fetch(\"/api/banners\", {\r\n           method: \"PUT\",\r\n@@ -97,9 +94,9 @@\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n             _id: bannerId,\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n+            imageUrl: imageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n@@ -114,9 +111,9 @@\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           },\r\n           body: JSON.stringify({\r\n-            [isMobile ? 'mobileImageUrl' : 'imageUrl']: formattedImageUrl,\r\n+            imageUrl: imageUrl,\r\n             title: file.name,\r\n           }),\r\n         });\r\n \r\n"
                },
                {
                    "date": 1747384489548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,22 @@\n         banner.imageUrl && \r\n         typeof banner.imageUrl === 'string' && \r\n         banner.imageUrl.trim() !== ''\r\n       );\r\n-      setBanners(validBanners);\r\n+\r\n+      // Phân loại banner dựa vào kích thước ảnh\r\n+      const processedBanners = await Promise.all(validBanners.map(async (banner) => {\r\n+        const isMobile = await new Promise((resolve) => {\r\n+          const img = new window.Image();\r\n+          img.onload = () => {\r\n+            resolve(img.height > img.width);\r\n+          };\r\n+          img.src = banner.imageUrl;\r\n+        });\r\n+        return { ...banner, isMobile };\r\n+      }));\r\n+\r\n+      setBanners(processedBanners);\r\n     } catch (error) {\r\n       console.error(\"Error fetching banners:\", error);\r\n       setBanners([]);\r\n       alert(\"Không thể tải danh sách banner. Vui lòng thử lại sau.\");\r\n@@ -261,10 +274,10 @@\n               className=\"border border-gray-200 rounded-lg overflow-hidden group relative\"\r\n             >\r\n               <div className=\"w-full aspect-video min-h-[120px] bg-gray-100 overflow-hidden rounded-lg\">\r\n                 <div className=\"absolute top-2 left-2 z-10\">\r\n-                  <span className=\"bg-black text-white text-xs px-2 py-1 rounded\">\r\n-                    {banner.mobileImageUrl ? \"Mobile\" : \"Desktop\"}\r\n+                  <span className={`${banner.isMobile ? 'bg-gray-600' : 'bg-black'} text-white text-xs px-2 py-1 rounded`}>\r\n+                    {banner.isMobile ? \"Mobile\" : \"Desktop\"}\r\n                   </span>\r\n                 </div>\r\n                 <a href={banner.imageUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                   <img\r\n"
                },
                {
                    "date": 1747384631090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,62 +266,126 @@\n             </div>\r\n           )}\r\n         </div>\r\n \r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-          {banners.map((banner, index) => (\r\n-            <div\r\n-              key={banner._id}\r\n-              className=\"border border-gray-200 rounded-lg overflow-hidden group relative\"\r\n-            >\r\n-              <div className=\"w-full aspect-video min-h-[120px] bg-gray-100 overflow-hidden rounded-lg\">\r\n-                <div className=\"absolute top-2 left-2 z-10\">\r\n-                  <span className={`${banner.isMobile ? 'bg-gray-600' : 'bg-black'} text-white text-xs px-2 py-1 rounded`}>\r\n-                    {banner.isMobile ? \"Mobile\" : \"Desktop\"}\r\n+        {/* Desktop Banners */}\r\n+        <div className=\"mb-8\">\r\n+          <h2 className=\"text-xl font-semibold mb-4\">Desktop Banners</h2>\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+            {banners.filter(banner => !banner.isMobile).map((banner, index) => (\r\n+              <div\r\n+                key={banner._id}\r\n+                className=\"border border-gray-200 rounded-lg overflow-hidden group relative\"\r\n+              >\r\n+                <div className=\"w-full aspect-video min-h-[120px] bg-gray-100 overflow-hidden rounded-lg\">\r\n+                  <div className=\"absolute top-2 left-2 z-10\">\r\n+                    <span className=\"bg-black text-white text-xs px-2 py-1 rounded\">\r\n+                      Desktop\r\n+                    </span>\r\n+                  </div>\r\n+                  <a href={banner.imageUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n+                    <img\r\n+                      src={banner.imageUrl}\r\n+                      alt={banner.title || `Banner ${index + 1}`}\r\n+                      className=\"w-full h-full object-cover\"\r\n+                      style={{ display: 'block' }}\r\n+                      onError={(e) => {\r\n+                        e.currentTarget.src = '/images/placeholder.jpg';\r\n+                      }}\r\n+                    />\r\n+                  </a>\r\n+                  <div className=\"absolute top-2 right-2 flex gap-2 z-10\">\r\n+                    <button\r\n+                      onClick={() => handleEdit(banner)}\r\n+                      className=\"bg-white text-gray-700 p-1 rounded-full shadow hover:bg-blue-100 border border-gray-200 flex items-center justify-center\"\r\n+                      title=\"Edit Banner\"\r\n+                    >\r\n+                      <FiEdit2 size={16} />\r\n+                    </button>\r\n+                    <input\r\n+                      type=\"file\"\r\n+                      accept=\"image/jpeg,image/png,image/webp\"\r\n+                      style={{ display: 'none' }}\r\n+                      ref={el => fileInputRefs.current[banner._id] = el}\r\n+                      onChange={e => handleEditFileChange(e, banner._id)}\r\n+                    />\r\n+                    <button\r\n+                      onClick={() => handleDelete(banner._id)}\r\n+                      className=\"bg-white text-gray-700 p-1 rounded-full shadow hover:bg-red-100 border border-gray-200 flex items-center justify-center\"\r\n+                      title=\"Delete Banner\"\r\n+                    >\r\n+                      <FiTrash2 size={16} />\r\n+                    </button>\r\n+                  </div>\r\n+                </div>\r\n+                <div className=\"p-4 border-t border-gray-200\">\r\n+                  <span className=\"text-sm text-gray-600 truncate block\">\r\n+                    {banner.title || `Banner ${index + 1}`}\r\n                   </span>\r\n                 </div>\r\n-                <a href={banner.imageUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n-                  <img\r\n-                    src={banner.imageUrl}\r\n-                    alt={banner.title || `Banner ${index + 1}`}\r\n-                    className=\"w-full h-full object-cover\"\r\n-                    style={{ display: 'block' }}\r\n-                    onError={(e) => {\r\n-                      e.currentTarget.src = '/images/placeholder.jpg';\r\n-                    }}\r\n-                  />\r\n-                </a>\r\n-                <div className=\"absolute top-2 right-2 flex gap-2 z-10\">\r\n-                  <button\r\n-                    onClick={() => handleEdit(banner)}\r\n-                    className=\"bg-white text-gray-700 p-1 rounded-full shadow hover:bg-blue-100 border border-gray-200 flex items-center justify-center\"\r\n-                    title=\"Edit Banner\"\r\n-                  >\r\n-                    <FiEdit2 size={16} />\r\n-                  </button>\r\n-                  <input\r\n-                    type=\"file\"\r\n-                    accept=\"image/jpeg,image/png,image/webp\"\r\n-                    style={{ display: 'none' }}\r\n-                    ref={el => fileInputRefs.current[banner._id] = el}\r\n-                    onChange={e => handleEditFileChange(e, banner._id)}\r\n-                  />\r\n-                  <button\r\n-                    onClick={() => handleDelete(banner._id)}\r\n-                    className=\"bg-white text-gray-700 p-1 rounded-full shadow hover:bg-red-100 border border-gray-200 flex items-center justify-center\"\r\n-                    title=\"Delete Banner\"\r\n-                  >\r\n-                    <FiTrash2 size={16} />\r\n-                  </button>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Mobile Banners */}\r\n+        <div>\r\n+          <h2 className=\"text-xl font-semibold mb-4\">Mobile Banners</h2>\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+            {banners.filter(banner => banner.isMobile).map((banner, index) => (\r\n+              <div\r\n+                key={banner._id}\r\n+                className=\"border border-gray-200 rounded-lg overflow-hidden group relative\"\r\n+              >\r\n+                <div className=\"w-full aspect-[9/16] min-h-[120px] bg-gray-100 overflow-hidden rounded-lg\">\r\n+                  <div className=\"absolute top-2 left-2 z-10\">\r\n+                    <span className=\"bg-gray-600 text-white text-xs px-2 py-1 rounded\">\r\n+                      Mobile\r\n+                    </span>\r\n+                  </div>\r\n+                  <a href={banner.imageUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n+                    <img\r\n+                      src={banner.imageUrl}\r\n+                      alt={banner.title || `Banner ${index + 1}`}\r\n+                      className=\"w-full h-full object-cover\"\r\n+                      style={{ display: 'block' }}\r\n+                      onError={(e) => {\r\n+                        e.currentTarget.src = '/images/placeholder.jpg';\r\n+                      }}\r\n+                    />\r\n+                  </a>\r\n+                  <div className=\"absolute top-2 right-2 flex gap-2 z-10\">\r\n+                    <button\r\n+                      onClick={() => handleEdit(banner)}\r\n+                      className=\"bg-white text-gray-700 p-1 rounded-full shadow hover:bg-blue-100 border border-gray-200 flex items-center justify-center\"\r\n+                      title=\"Edit Banner\"\r\n+                    >\r\n+                      <FiEdit2 size={16} />\r\n+                    </button>\r\n+                    <input\r\n+                      type=\"file\"\r\n+                      accept=\"image/jpeg,image/png,image/webp\"\r\n+                      style={{ display: 'none' }}\r\n+                      ref={el => fileInputRefs.current[banner._id] = el}\r\n+                      onChange={e => handleEditFileChange(e, banner._id)}\r\n+                    />\r\n+                    <button\r\n+                      onClick={() => handleDelete(banner._id)}\r\n+                      className=\"bg-white text-gray-700 p-1 rounded-full shadow hover:bg-red-100 border border-gray-200 flex items-center justify-center\"\r\n+                      title=\"Delete Banner\"\r\n+                    >\r\n+                      <FiTrash2 size={16} />\r\n+                    </button>\r\n+                  </div>\r\n                 </div>\r\n+                <div className=\"p-4 border-t border-gray-200\">\r\n+                  <span className=\"text-sm text-gray-600 truncate block\">\r\n+                    {banner.title || `Banner ${index + 1}`}\r\n+                  </span>\r\n+                </div>\r\n               </div>\r\n-              <div className=\"p-4 border-t border-gray-200\">\r\n-                <span className=\"text-sm text-gray-600 truncate block\">\r\n-                  {banner.title || `Banner ${index + 1}`}\r\n-                </span>\r\n-              </div>\r\n-            </div>\r\n-          ))}\r\n+            ))}\r\n+          </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\nimport { FiPlus, FiTrash2, FiEdit2, FiInfo } from \"react-icons/fi\";\r\n\r\nconst defaultImage = \"/images/image1.jpg\";\r\n\r\nexport default function BannerManagement() {\r\n  const [banners, setBanners] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [showRequirements, setShowRequirements] = useState(false);\r\n  const [editingBannerId, setEditingBannerId] = useState(null);\r\n  const fileInputRefs = useRef({});\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    fetchBanners();\r\n  }, []);\r\n\r\n  const fetchBanners = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/banners\");\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Fetched banners:\", data);\r\n      const validBanners = data.filter(banner => \r\n        banner && \r\n        banner.imageUrl && \r\n        typeof banner.imageUrl === 'string' && \r\n        banner.imageUrl.trim() !== ''\r\n      );\r\n      setBanners(validBanners);\r\n    } catch (error) {\r\n      console.error(\"Error fetching banners:\", error);\r\n      setBanners([]);\r\n      alert(\"Không thể tải danh sách banner. Vui lòng thử lại sau.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (e, bannerId = null) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"files\", file);\r\n\r\n    try {\r\n      console.log(\"Uploading file:\", file.name);\r\n      const uploadResponse = await fetch(\"/api/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const uploadData = await uploadResponse.json();\r\n      console.log(\"Upload response:\", uploadData);\r\n\r\n      if (!uploadResponse.ok) {\r\n        throw new Error(uploadData.error || `Upload failed: ${uploadResponse.statusText}`);\r\n      }\r\n\r\n      if (!uploadData.success || !uploadData.urls || uploadData.urls.length === 0) {\r\n        throw new Error(\"No URL returned from upload\");\r\n      }\r\n\r\n      const imageUrl = uploadData.urls[0];\r\n      console.log(\"Creating/Updating banner with URL:\", imageUrl);\r\n\r\n      if (bannerId) {\r\n        // Update existing banner\r\n        const bannerResponse = await fetch(\"/api/banners\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            _id: bannerId,\r\n            imageUrl: imageUrl,\r\n            title: file.name,\r\n          }),\r\n        });\r\n\r\n        if (!bannerResponse.ok) {\r\n          const data = await bannerResponse.json();\r\n          throw new Error(data.error || `Banner update failed: ${bannerResponse.statusText}`);\r\n        }\r\n      } else {\r\n        // Create new banner\r\n        const bannerResponse = await fetch(\"/api/banners\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            imageUrl: imageUrl,\r\n            title: file.name,\r\n          }),\r\n        });\r\n\r\n        if (!bannerResponse.ok) {\r\n          const data = await bannerResponse.json();\r\n          throw new Error(data.error || `Banner creation failed: ${bannerResponse.statusText}`);\r\n        }\r\n      }\r\n\r\n      await fetchBanners();\r\n    } catch (error) {\r\n      console.error(\"Error in handleFileUpload:\", error);\r\n      alert(`Failed to upload banner: ${error.message}`);\r\n    } finally {\r\n      setUploading(false);\r\n      // Reset file input\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!confirm(\"Are you sure you want to delete this banner?\")) return;\r\n\r\n    try {\r\n      console.log(\"Deleting banner:\", id);\r\n      const response = await fetch(\"/api/banners\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ _id: id }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || `Delete failed: ${response.statusText}`);\r\n      }\r\n\r\n      await fetchBanners();\r\n    } catch (error) {\r\n      console.error(\"Error deleting banner:\", error);\r\n      alert(`Failed to delete banner: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (banner) => {\r\n    setEditingBannerId(banner._id);\r\n    // Tự động click input file khi bấm sửa\r\n    setTimeout(() => {\r\n      if (fileInputRefs.current[banner._id]) {\r\n        fileInputRefs.current[banner._id].click();\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  const handleEditFileChange = (e, bannerId) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    handleFileUpload({ target: { files: [file], value: '' } }, bannerId);\r\n    setEditingBannerId(null);\r\n  };\r\n\r\n  const handleMoveUp = (index) => {\r\n    if (index === 0) return;\r\n    const newBanners = [...banners];\r\n    [newBanners[index - 1], newBanners[index]] = [newBanners[index], newBanners[index - 1]];\r\n    setBanners(newBanners);\r\n    // TODO: Gọi API cập nhật thứ tự nếu cần\r\n  };\r\n\r\n  const handleMoveDown = (index) => {\r\n    if (index === banners.length - 1) return;\r\n    const newBanners = [...banners];\r\n    [newBanners[index], newBanners[index + 1]] = [newBanners[index + 1], newBanners[index]];\r\n    setBanners(newBanners);\r\n    // TODO: Gọi API cập nhật thứ tự nếu cần\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-white pt-20\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"animate-pulse\">\r\n            <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-6\"></div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {[1, 2, 3].map((i) => (\r\n                <div key={i} className=\"border border-gray-200 rounded-lg p-4\">\r\n                  <div className=\"aspect-video bg-gray-200 rounded mb-4\"></div>\r\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white pt-20\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"border border-gray-200 rounded-lg p-6 mb-6\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Banner Management</h1>\r\n            <div className=\"flex items-center gap-4\">\r\n              <button\r\n                onClick={() => setShowRequirements(!showRequirements)}\r\n                className=\"text-gray-600 hover:text-gray-900 p-2 rounded-full hover:bg-gray-100\"\r\n                title=\"Upload Requirements\"\r\n              >\r\n                <FiInfo size={20} />\r\n              </button>\r\n              <label className=\"bg-black text-white px-4 py-2 rounded-md cursor-pointer hover:bg-gray-800 transition-colors flex items-center gap-2\">\r\n                <FiPlus className=\"inline\" />\r\n                {uploading ? \"Uploading...\" : \"Add Banner\"}\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"hidden\"\r\n                  accept=\"image/jpeg,image/png,image/webp\"\r\n                  onChange={(e) => handleFileUpload(e)}\r\n                  disabled={uploading}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          {showRequirements && (\r\n            <div className=\"mb-6 p-4 bg-gray-50 rounded-lg border border-gray-200\">\r\n              <h2 className=\"text-lg font-semibold mb-2 text-gray-900\">Upload Requirements:</h2>\r\n              <ul className=\"list-disc list-inside space-y-1 text-gray-600\">\r\n                <li>Supported formats: JPEG, PNG, WebP</li>\r\n                <li>Maximum file size: 5MB</li>\r\n                <li>Recommended dimensions: 1920x1080 pixels</li>\r\n                <li>For best results, use high-quality images</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {banners.map((banner, index) => (\r\n            <div\r\n              key={banner._id}\r\n              className=\"border border-gray-200 rounded-lg overflow-hidden group relative\"\r\n            >\r\n              <div className=\"w-full aspect-video min-h-[120px] bg-gray-100 overflow-hidden rounded-lg\">\r\n                <a href={banner.imageUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <img\r\n                    src={banner.imageUrl}\r\n                    alt={banner.title || `Banner ${index + 1}`}\r\n                    className=\"w-full h-full object-cover\"\r\n                    style={{ display: 'block' }}\r\n                    onError={(e) => {\r\n                      e.currentTarget.src = '/images/placeholder.jpg';\r\n                    }}\r\n                  />\r\n                </a>\r\n                <div className=\"absolute top-2 right-2 flex gap-2 z-10\">\r\n                  <button\r\n                    onClick={() => handleEdit(banner)}\r\n                    className=\"bg-white text-gray-700 p-1 rounded-full shadow hover:bg-blue-100 border border-gray-200 flex items-center justify-center\"\r\n                    title=\"Edit Banner\"\r\n                  >\r\n                    <FiEdit2 size={16} />\r\n                  </button>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/jpeg,image/png,image/webp\"\r\n                    style={{ display: 'none' }}\r\n                    ref={el => fileInputRefs.current[banner._id] = el}\r\n                    onChange={e => handleEditFileChange(e, banner._id)}\r\n                  />\r\n                  <button\r\n                    onClick={() => handleDelete(banner._id)}\r\n                    className=\"bg-white text-gray-700 p-1 rounded-full shadow hover:bg-red-100 border border-gray-200 flex items-center justify-center\"\r\n                    title=\"Delete Banner\"\r\n                  >\r\n                    <FiTrash2 size={16} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-4 border-t border-gray-200\">\r\n                <span className=\"text-sm text-gray-600 truncate block\">\r\n                  {banner.title || `Banner ${index + 1}`}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
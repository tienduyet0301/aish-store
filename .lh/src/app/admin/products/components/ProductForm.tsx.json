{
    "sourceFile": "src/app/admin/products/components/ProductForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1746893158977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747723439943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,10 +93,65 @@\n   };\r\n \r\n   const handleSubmit = async (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n-    await onSubmit(newProduct);\r\n-    resetForm();\r\n+    \r\n+    try {\r\n+      // Upload images first\r\n+      const formData = new FormData();\r\n+      newProduct.images.forEach((image) => {\r\n+        formData.append(\"files\", image);\r\n+      });\r\n+\r\n+      const uploadResponse = await fetch(\"/api/upload\", {\r\n+        method: \"POST\",\r\n+        body: formData,\r\n+      });\r\n+\r\n+      if (!uploadResponse.ok) {\r\n+        throw new Error(\"Failed to upload images\");\r\n+      }\r\n+\r\n+      const uploadData = await uploadResponse.json();\r\n+      if (!uploadData.success || !uploadData.urls) {\r\n+        throw new Error(\"Invalid upload response\");\r\n+      }\r\n+\r\n+      // Upload size guide image if exists\r\n+      let sizeGuideImageUrl = \"\";\r\n+      if (newProduct.sizeGuideImage) {\r\n+        const sizeGuideFormData = new FormData();\r\n+        sizeGuideFormData.append(\"files\", newProduct.sizeGuideImage);\r\n+        \r\n+        const sizeGuideResponse = await fetch(\"/api/upload\", {\r\n+          method: \"POST\",\r\n+          body: sizeGuideFormData,\r\n+        });\r\n+\r\n+        if (!sizeGuideResponse.ok) {\r\n+          throw new Error(\"Failed to upload size guide image\");\r\n+        }\r\n+\r\n+        const sizeGuideData = await sizeGuideResponse.json();\r\n+        if (!sizeGuideData.success || !sizeGuideData.urls || sizeGuideData.urls.length === 0) {\r\n+          throw new Error(\"Invalid size guide image upload response\");\r\n+        }\r\n+        sizeGuideImageUrl = sizeGuideData.urls[0];\r\n+      }\r\n+\r\n+      // Create product with Cloudinary URLs\r\n+      const productData = {\r\n+        ...newProduct,\r\n+        images: uploadData.urls,\r\n+        sizeGuideImage: sizeGuideImageUrl,\r\n+      };\r\n+\r\n+      await onSubmit(productData);\r\n+      resetForm();\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting product:\", error);\r\n+      toast.error(error instanceof Error ? error.message : \"Failed to submit product\");\r\n+    }\r\n   };\r\n \r\n   const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n     const category = e.target.value;\r\n"
                },
                {
                    "date": 1747723814692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   productCode: string;\r\n   details: string;\r\n   category: string;\r\n   collection: string;\r\n-  sizeGuideImage: File | null;\r\n+  sizeGuideImage: File | string | null;\r\n   colors: string[];\r\n }\r\n \r\n const initialFormState: ProductForm = {\r\n@@ -117,9 +117,9 @@\n       }\r\n \r\n       // Upload size guide image if exists\r\n       let sizeGuideImageUrl = \"\";\r\n-      if (newProduct.sizeGuideImage) {\r\n+      if (newProduct.sizeGuideImage instanceof File) {\r\n         const sizeGuideFormData = new FormData();\r\n         sizeGuideFormData.append(\"files\", newProduct.sizeGuideImage);\r\n         \r\n         const sizeGuideResponse = await fetch(\"/api/upload\", {\r\n"
                },
                {
                    "date": 1747723826659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,26 +3,26 @@\n import { useState, useRef } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n import Image from \"next/image\";\r\n \r\n-interface ProductForm {\r\n+interface ProductFormData {\r\n   name: string;\r\n   price: string;\r\n   description: string;\r\n-  images: File[];\r\n+  images: string[];\r\n   quantityM: string;\r\n   quantityL: string;\r\n   quantityXL: string;\r\n   quantityHat: string;\r\n   productCode: string;\r\n   details: string;\r\n   category: string;\r\n   collection: string;\r\n-  sizeGuideImage: File | string | null;\r\n+  sizeGuideImage: string;\r\n   colors: string[];\r\n }\r\n \r\n-const initialFormState: ProductForm = {\r\n+const initialFormState: ProductFormData = {\r\n   name: \"\",\r\n   price: \"\",\r\n   description: \"\",\r\n   images: [],\r\n@@ -33,19 +33,19 @@\n   productCode: \"\",\r\n   details: \"\",\r\n   category: \"\",\r\n   collection: \"\",\r\n-  sizeGuideImage: null,\r\n+  sizeGuideImage: \"\",\r\n   colors: [],\r\n };\r\n \r\n interface ProductFormProps {\r\n-  onSubmit: (productData: ProductForm) => void;\r\n+  onSubmit: (productData: ProductFormData) => void;\r\n   isAdding: boolean;\r\n }\r\n \r\n export const ProductForm = ({ onSubmit, isAdding }: ProductFormProps) => {\r\n-  const [newProduct, setNewProduct] = useState<ProductForm>(initialFormState);\r\n+  const [newProduct, setNewProduct] = useState<ProductFormData>(initialFormState);\r\n   const [previewUrls, setPreviewUrls] = useState<string[]>([]);\r\n   const [sizeGuideImagePreview, setSizeGuideImagePreview] = useState<string>(\"\");\r\n   const fileInputRef = useRef<HTMLInputElement>(null);\r\n \r\n@@ -76,15 +76,15 @@\n     \r\n     // Create new preview URLs\r\n     const urls = files.map(file => URL.createObjectURL(file));\r\n     setPreviewUrls(urls);\r\n-    setNewProduct(prev => ({ ...prev, images: files }));\r\n+    setNewProduct(prev => ({ ...prev, images: files.map(file => URL.createObjectURL(file)) }));\r\n   };\r\n \r\n   const handleSizeGuideImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     const file = e.target.files?.[0];\r\n     if (file) {\r\n-      setNewProduct(prev => ({ ...prev, sizeGuideImage: file }));\r\n+      setNewProduct(prev => ({ ...prev, sizeGuideImage: URL.createObjectURL(file) }));\r\n       const reader = new FileReader();\r\n       reader.onloadend = () => {\r\n         setSizeGuideImagePreview(reader.result as string);\r\n       };\r\n@@ -138,9 +138,9 @@\n         sizeGuideImageUrl = sizeGuideData.urls[0];\r\n       }\r\n \r\n       // Create product with Cloudinary URLs\r\n-      const productData = {\r\n+      const productData: ProductFormData = {\r\n         ...newProduct,\r\n         images: uploadData.urls,\r\n         sizeGuideImage: sizeGuideImageUrl,\r\n       };\r\n"
                },
                {
                    "date": 1747723846796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,14 @@\n   sizeGuideImage: string;\r\n   colors: string[];\r\n }\r\n \r\n-const initialFormState: ProductFormData = {\r\n+interface ProductFormState extends Omit<ProductFormData, 'images' | 'sizeGuideImage'> {\r\n+  images: File[];\r\n+  sizeGuideImage: File | null;\r\n+}\r\n+\r\n+const initialFormState: ProductFormState = {\r\n   name: \"\",\r\n   price: \"\",\r\n   description: \"\",\r\n   images: [],\r\n@@ -33,9 +38,9 @@\n   productCode: \"\",\r\n   details: \"\",\r\n   category: \"\",\r\n   collection: \"\",\r\n-  sizeGuideImage: \"\",\r\n+  sizeGuideImage: null,\r\n   colors: [],\r\n };\r\n \r\n interface ProductFormProps {\r\n@@ -43,9 +48,9 @@\n   isAdding: boolean;\r\n }\r\n \r\n export const ProductForm = ({ onSubmit, isAdding }: ProductFormProps) => {\r\n-  const [newProduct, setNewProduct] = useState<ProductFormData>(initialFormState);\r\n+  const [newProduct, setNewProduct] = useState<ProductFormState>(initialFormState);\r\n   const [previewUrls, setPreviewUrls] = useState<string[]>([]);\r\n   const [sizeGuideImagePreview, setSizeGuideImagePreview] = useState<string>(\"\");\r\n   const fileInputRef = useRef<HTMLInputElement>(null);\r\n \r\n@@ -76,15 +81,15 @@\n     \r\n     // Create new preview URLs\r\n     const urls = files.map(file => URL.createObjectURL(file));\r\n     setPreviewUrls(urls);\r\n-    setNewProduct(prev => ({ ...prev, images: files.map(file => URL.createObjectURL(file)) }));\r\n+    setNewProduct(prev => ({ ...prev, images: files }));\r\n   };\r\n \r\n   const handleSizeGuideImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     const file = e.target.files?.[0];\r\n     if (file) {\r\n-      setNewProduct(prev => ({ ...prev, sizeGuideImage: URL.createObjectURL(file) }));\r\n+      setNewProduct(prev => ({ ...prev, sizeGuideImage: file }));\r\n       const reader = new FileReader();\r\n       reader.onloadend = () => {\r\n         setSizeGuideImagePreview(reader.result as string);\r\n       };\r\n@@ -117,9 +122,9 @@\n       }\r\n \r\n       // Upload size guide image if exists\r\n       let sizeGuideImageUrl = \"\";\r\n-      if (newProduct.sizeGuideImage instanceof File) {\r\n+      if (newProduct.sizeGuideImage) {\r\n         const sizeGuideFormData = new FormData();\r\n         sizeGuideFormData.append(\"files\", newProduct.sizeGuideImage);\r\n         \r\n         const sizeGuideResponse = await fetch(\"/api/upload\", {\r\n"
                },
                {
                    "date": 1749611875700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,8 +220,9 @@\n               <option value=\"SHIRT\">SHIRT</option>\r\n               <option value=\"POLO\">POLO</option>\r\n               <option value=\"SWEATER\">SWEATER</option>\r\n               <option value=\"HOODIE\">HOODIE</option>\r\n+              <option value=\"JACKET\">JACKET</option>\r\n             </optgroup>\r\n             <optgroup label=\"BOTTOMS\">\r\n               <option value=\"PANTS\">PANTS</option>\r\n               <option value=\"SHORT\">SHORT</option>\r\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\r\n\r\nimport { useState, useRef } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport Image from \"next/image\";\r\n\r\ninterface ProductForm {\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n  images: File[];\r\n  quantityM: string;\r\n  quantityL: string;\r\n  quantityXL: string;\r\n  quantityHat: string;\r\n  productCode: string;\r\n  details: string;\r\n  category: string;\r\n  collection: string;\r\n  sizeGuideImage: File | null;\r\n  colors: string[];\r\n}\r\n\r\nconst initialFormState: ProductForm = {\r\n  name: \"\",\r\n  price: \"\",\r\n  description: \"\",\r\n  images: [],\r\n  quantityM: \"\",\r\n  quantityL: \"\",\r\n  quantityXL: \"\",\r\n  quantityHat: \"\",\r\n  productCode: \"\",\r\n  details: \"\",\r\n  category: \"\",\r\n  collection: \"\",\r\n  sizeGuideImage: null,\r\n  colors: [],\r\n};\r\n\r\ninterface ProductFormProps {\r\n  onSubmit: (productData: ProductForm) => void;\r\n  isAdding: boolean;\r\n}\r\n\r\nexport const ProductForm = ({ onSubmit, isAdding }: ProductFormProps) => {\r\n  const [newProduct, setNewProduct] = useState<ProductForm>(initialFormState);\r\n  const [previewUrls, setPreviewUrls] = useState<string[]>([]);\r\n  const [sizeGuideImagePreview, setSizeGuideImagePreview] = useState<string>(\"\");\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const resetForm = () => {\r\n    // Clear old preview URLs\r\n    previewUrls.forEach(url => URL.revokeObjectURL(url));\r\n    \r\n    // Reset all states\r\n    setNewProduct(initialFormState);\r\n    setPreviewUrls([]);\r\n    setSizeGuideImagePreview(\"\");\r\n    \r\n    // Reset file input\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = Array.from(e.target.files || []);\r\n    if (files.length > 5) {\r\n      toast.error(\"You can only upload up to 5 images\");\r\n      return;\r\n    }\r\n\r\n    // Clear old preview URLs\r\n    previewUrls.forEach(url => URL.revokeObjectURL(url));\r\n    \r\n    // Create new preview URLs\r\n    const urls = files.map(file => URL.createObjectURL(file));\r\n    setPreviewUrls(urls);\r\n    setNewProduct(prev => ({ ...prev, images: files }));\r\n  };\r\n\r\n  const handleSizeGuideImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setNewProduct(prev => ({ ...prev, sizeGuideImage: file }));\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSizeGuideImagePreview(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    await onSubmit(newProduct);\r\n    resetForm();\r\n  };\r\n\r\n  const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const category = e.target.value;\r\n    setNewProduct(prev => ({\r\n      ...prev,\r\n      category,\r\n      // Reset quantities when category changes\r\n      quantityM: category === \"CAP\" ? \"\" : prev.quantityM,\r\n      quantityL: category === \"CAP\" ? \"\" : prev.quantityL,\r\n      quantityXL: category === \"CAP\" ? \"\" : prev.quantityXL,\r\n      quantityHat: category === \"CAP\" ? prev.quantityHat : \"\",\r\n    }));\r\n  };\r\n\r\n  const isClothing = newProduct.category && newProduct.category !== \"CAP\";\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Tên sản phẩm\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={newProduct.name}\r\n            onChange={(e) =>\r\n              setNewProduct({ ...newProduct, name: e.target.value })\r\n            }\r\n            className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Giá\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={newProduct.price}\r\n            onChange={(e) =>\r\n              setNewProduct({ ...newProduct, price: e.target.value })\r\n            }\r\n            className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Phân loại\r\n          </label>\r\n          <select\r\n            value={newProduct.category}\r\n            onChange={handleCategoryChange}\r\n            className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n            required\r\n          >\r\n            <option value=\"\">Chọn phân loại</option>\r\n            <optgroup label=\"TOPS\">\r\n              <option value=\"TSHIRT\">TSHIRT</option>\r\n              <option value=\"SHIRT\">SHIRT</option>\r\n              <option value=\"POLO\">POLO</option>\r\n              <option value=\"SWEATER\">SWEATER</option>\r\n              <option value=\"HOODIE\">HOODIE</option>\r\n            </optgroup>\r\n            <optgroup label=\"BOTTOMS\">\r\n              <option value=\"PANTS\">PANTS</option>\r\n              <option value=\"SHORT\">SHORT</option>\r\n              <option value=\"SKIRT\">SKIRT</option>\r\n            </optgroup>\r\n            <optgroup label=\"ACCESSORIES\">\r\n              <option value=\"CAP\">CAP</option>\r\n              <option value=\"KEYCHAIN\">KEYCHAIN</option>\r\n              <option value=\"TOWEL\">TOWEL</option>\r\n            </optgroup>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <div className=\"md:col-span-4\">\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Màu sắc\r\n          </label>\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            {[\"black\", \"white\", \"blue\", \"grey\"].map((color) => (\r\n              <label key={color} className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={newProduct.colors?.includes(color) || false}\r\n                  onChange={(e) => {\r\n                    const newColors = e.target.checked\r\n                      ? [...(newProduct.colors || []), color]\r\n                      : (newProduct.colors || []).filter((c) => c !== color);\r\n                    setNewProduct({ ...newProduct, colors: newColors });\r\n                  }}\r\n                  className=\"rounded border-gray-300 text-black focus:ring-black\"\r\n                />\r\n                <span className=\"text-sm font-medium text-gray-700 capitalize\">{color}</span>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        {isClothing ? (\r\n          <>\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n                Số lượng size M\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={newProduct.quantityM}\r\n                onChange={(e) =>\r\n                  setNewProduct({ ...newProduct, quantityM: e.target.value })\r\n                }\r\n                className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n                Số lượng size L\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={newProduct.quantityL}\r\n                onChange={(e) =>\r\n                  setNewProduct({ ...newProduct, quantityL: e.target.value })\r\n                }\r\n                className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n                Số lượng size XL\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={newProduct.quantityXL}\r\n                onChange={(e) =>\r\n                  setNewProduct({ ...newProduct, quantityXL: e.target.value })\r\n                }\r\n                className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n            <div className=\"opacity-0\">\r\n              {/* Placeholder để giữ layout */}\r\n            </div>\r\n          </>\r\n        ) : newProduct.category === \"CAP\" ? (\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n              Số lượng nón\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={newProduct.quantityHat}\r\n              onChange={(e) =>\r\n                setNewProduct({ ...newProduct, quantityHat: e.target.value })\r\n              }\r\n              className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n              required\r\n              min=\"0\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Bộ sưu tập\r\n          </label>\r\n          <select\r\n            value={newProduct.collection}\r\n            onChange={(e) =>\r\n              setNewProduct({ ...newProduct, collection: e.target.value })\r\n            }\r\n            className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n            required\r\n          >\r\n            <option value=\"\">Chọn bộ sưu tập</option>\r\n            <option value=\"ACCEPT THE PROBLEM\">ACCEPT THE PROBLEM</option>\r\n            <option value=\"BACK TO SUMMER\">BACK TO SUMMER</option>\r\n            <option value=\"CHILL, CALM DOWN\">CHILL, CALM DOWN</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Mã sản phẩm\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={newProduct.productCode}\r\n            onChange={(e) =>\r\n              setNewProduct({ ...newProduct, productCode: e.target.value })\r\n            }\r\n            className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Mô tả\r\n          </label>\r\n          <textarea\r\n            value={newProduct.description}\r\n            onChange={(e) =>\r\n              setNewProduct({ ...newProduct, description: e.target.value })\r\n            }\r\n            className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n            rows={4}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Chi tiết sản phẩm\r\n          </label>\r\n          <textarea\r\n            value={newProduct.details}\r\n            onChange={(e) =>\r\n              setNewProduct({ ...newProduct, details: e.target.value })\r\n            }\r\n            className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n            rows={4}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Hình ảnh (tối đa 5 ảnh)\r\n          </label>\r\n          <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\r\n            <div className=\"space-y-1 text-center\">\r\n              <svg\r\n                className=\"mx-auto h-12 w-12 text-gray-400\"\r\n                stroke=\"currentColor\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 48 48\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <path\r\n                  d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\r\n                  strokeWidth={2}\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              <div className=\"flex text-sm text-gray-600\">\r\n                <label\r\n                  htmlFor=\"file-upload\"\r\n                  className=\"relative cursor-pointer bg-white rounded-md font-medium text-black hover:text-gray-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-black\"\r\n                >\r\n                  <span>Upload a file</span>\r\n                  <input\r\n                    id=\"file-upload\"\r\n                    name=\"file-upload\"\r\n                    type=\"file\"\r\n                    multiple\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageChange}\r\n                    ref={fileInputRef}\r\n                    className=\"sr-only\"\r\n                    required\r\n                  />\r\n                </label>\r\n                <p className=\"pl-1\">or drag and drop</p>\r\n              </div>\r\n              <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\r\n            </div>\r\n          </div>\r\n          <p className=\"mt-1 text-sm text-gray-500\">\r\n            {newProduct.images.length} file(s) selected\r\n          </p>\r\n          {previewUrls.length > 0 && (\r\n            <div className=\"grid grid-cols-5 gap-4 mt-2\">\r\n              {previewUrls.map((url, index) => (\r\n                <div key={index} className=\"relative aspect-square\">\r\n                  <img\r\n                    src={url}\r\n                    alt={`Preview ${index + 1}`}\r\n                    className=\"w-full h-full object-cover rounded\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4 uppercase\">\r\n            Ảnh hướng dẫn size\r\n          </label>\r\n          <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\r\n            <div className=\"space-y-1 text-center w-full\">\r\n              <svg\r\n                className=\"mx-auto h-12 w-12 text-gray-400\"\r\n                stroke=\"currentColor\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 48 48\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <path\r\n                  d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\r\n                  strokeWidth={2}\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              <div className=\"flex text-sm text-gray-600 justify-center\">\r\n                <label\r\n                  htmlFor=\"size-guide-upload\"\r\n                  className=\"relative cursor-pointer bg-white rounded-md font-medium text-black hover:text-gray-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-black\"\r\n                >\r\n                  <span>Upload a file</span>\r\n                  <input\r\n                    id=\"size-guide-upload\"\r\n                    name=\"size-guide-upload\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleSizeGuideImageChange}\r\n                    className=\"sr-only\"\r\n                  />\r\n                </label>\r\n                <p className=\"pl-1\">or drag and drop</p>\r\n              </div>\r\n              <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\r\n            </div>\r\n          </div>\r\n          {sizeGuideImagePreview && (\r\n            <div className=\"relative w-32 h-32 mt-2 mx-auto\">\r\n              <Image\r\n                src={sizeGuideImagePreview}\r\n                alt=\"Size Guide Preview\"\r\n                fill\r\n                className=\"object-cover rounded\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isAdding}\r\n          className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n        >\r\n          {isAdding ? \"Đang thêm...\" : \"Thêm sản phẩm\"}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}; "
        }
    ]
}
{
    "sourceFile": "src/app/admin/products/components/EditModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746893158867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\r\n\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Dialog } from \"@headlessui/react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport Image from \"next/image\";\r\n\r\ninterface Product {\r\n  _id: string;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  images: string[];\r\n  quantityM: number;\r\n  quantityL: number;\r\n  quantityXL: number;\r\n  quantityHat: number;\r\n  productCode: string;\r\n  details: string;\r\n  category: string;\r\n  collection: string;\r\n  createdAt: string;\r\n  sizeGuideImage?: string;\r\n  colors: string[];\r\n}\r\n\r\ninterface EditModalProps {\r\n  product: Product | null;\r\n  onClose: () => void;\r\n  onSave: (product: Product) => void;\r\n  isEditing: boolean;\r\n}\r\n\r\nexport const EditModal = ({ product, onClose, onSave, isEditing }: EditModalProps) => {\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n  const fileInputRefs = useRef<{ [key: string]: HTMLInputElement | null }>({});\r\n  const [uploadingImages, setUploadingImages] = useState<{ [key: string]: boolean }>({});\r\n  const [sizeGuideImage, setSizeGuideImage] = useState<File | null>(null);\r\n  const [sizeGuideImagePreview, setSizeGuideImagePreview] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (product) {\r\n      setSelectedProduct(product);\r\n      setSizeGuideImagePreview(product.sizeGuideImage || \"\");\r\n    }\r\n  }, [product]);\r\n\r\n  const handleImageUpload = async (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    const fieldName = `imageUrl${index}`;\r\n    setUploadingImages(prev => ({ ...prev, [fieldName]: true }));\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      const response = await fetch(\"/api/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.ok) {\r\n        if (selectedProduct) {\r\n          const newImages = [...selectedProduct.images];\r\n          newImages[index] = data.imageId;\r\n          setSelectedProduct({\r\n            ...selectedProduct,\r\n            images: newImages,\r\n          });\r\n        }\r\n      } else {\r\n        toast.error(data.error || \"Failed to upload image\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading image:\", error);\r\n      toast.error(\"Failed to upload image\");\r\n    } finally {\r\n      setUploadingImages(prev => ({ ...prev, [fieldName]: false }));\r\n    }\r\n  };\r\n\r\n  const handleSizeGuideImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setSizeGuideImage(file);\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSizeGuideImagePreview(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedProduct) return;\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"name\", selectedProduct.name);\r\n      formData.append(\"description\", selectedProduct.description);\r\n      formData.append(\"details\", selectedProduct.details);\r\n      formData.append(\"price\", selectedProduct.price.toString());\r\n      formData.append(\"category\", selectedProduct.category);\r\n      formData.append(\"quantityM\", selectedProduct.quantityM.toString());\r\n      formData.append(\"quantityL\", selectedProduct.quantityL.toString());\r\n      formData.append(\"quantityXL\", selectedProduct.quantityXL.toString());\r\n      formData.append(\"quantityHat\", selectedProduct.quantityHat.toString());\r\n\r\n      if (sizeGuideImage) {\r\n        formData.append(\"sizeGuideImage\", sizeGuideImage);\r\n      }\r\n\r\n      await onSave(selectedProduct);\r\n      toast.success(\"Cập nhật sản phẩm thành công\");\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error saving product:\", error);\r\n      toast.error(\"Không thể cập nhật sản phẩm\");\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedProduct(null);\r\n    onClose();\r\n  };\r\n\r\n  if (!selectedProduct) return null;\r\n\r\n  return (\r\n    <Dialog\r\n      open={!!selectedProduct}\r\n      onClose={handleClose}\r\n      className=\"relative z-50\"\r\n    >\r\n      <div className=\"fixed inset-0 bg-black/30\" aria-hidden=\"true\" />\r\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n        <Dialog.Panel className=\"mx-auto w-full max-w-4xl rounded bg-white p-6 max-h-[90vh] overflow-y-auto\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <Dialog.Title className=\"text-2xl font-bold text-black\">\r\n              Chỉnh sửa sản phẩm\r\n            </Dialog.Title>\r\n            <button\r\n              onClick={handleClose}\r\n              className=\"text-gray-500 hover:text-gray-700\"\r\n            >\r\n              <svg\r\n                className=\"h-6 w-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {/* Preview Images */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Ảnh sản phẩm\r\n              </label>\r\n              <div className=\"grid grid-cols-5 gap-4\">\r\n                {selectedProduct.images.map((imageUrl, index) => (\r\n                  <div key={index} className=\"relative aspect-square\">\r\n                    <img\r\n                      src={imageUrl}\r\n                      alt={`Product ${index + 1}`}\r\n                      className=\"w-full h-full object-cover rounded\"\r\n                    />\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      ref={(el) => {\r\n                        if (el) {\r\n                          fileInputRefs.current[`editImageUrl${index}`] = el;\r\n                        }\r\n                      }}\r\n                      onChange={(e) => handleImageUpload(e, index)}\r\n                      className=\"hidden\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => fileInputRefs.current[`editImageUrl${index}`]?.click()}\r\n                      disabled={uploadingImages[`editImageUrl${index}`]}\r\n                      className=\"absolute inset-0 flex items-center justify-center bg-black/50 opacity-0 hover:opacity-100 transition-opacity text-white text-sm font-medium\"\r\n                    >\r\n                      {uploadingImages[`editImageUrl${index}`] ? (\r\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white\"></div>\r\n                      ) : (\r\n                        \"Thay đổi\"\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div className=\"space-y-6\">\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Tên sản phẩm\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={selectedProduct.name}\r\n                    onChange={(e) => {\r\n                      setSelectedProduct({\r\n                        ...selectedProduct,\r\n                        name: e.target.value,\r\n                      });\r\n                    }}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Màu sắc\r\n                  </label>\r\n                  <div className=\"flex flex-wrap gap-4\">\r\n                    {[\"black\", \"white\", \"blue\", \"grey\"].map((color) => (\r\n                      <label key={color} className=\"flex items-center space-x-2\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={selectedProduct.colors?.includes(color) || false}\r\n                          onChange={(e) => {\r\n                            const newColors = e.target.checked\r\n                              ? [...(selectedProduct.colors || []), color]\r\n                              : (selectedProduct.colors || []).filter((c) => c !== color);\r\n                            setSelectedProduct({\r\n                              ...selectedProduct,\r\n                              colors: newColors,\r\n                            });\r\n                          }}\r\n                          className=\"rounded border-gray-300 text-black focus:ring-black\"\r\n                        />\r\n                        <span className=\"text-sm font-medium text-gray-700 capitalize\">{color}</span>\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Giá\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={selectedProduct.price}\r\n                    onChange={(e) => {\r\n                      setSelectedProduct({\r\n                        ...selectedProduct,\r\n                        price: Number(e.target.value),\r\n                      });\r\n                    }}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Phân loại\r\n                  </label>\r\n                  <select\r\n                    value={selectedProduct.category}\r\n                    onChange={(e) => {\r\n                      setSelectedProduct({\r\n                        ...selectedProduct,\r\n                        category: e.target.value,\r\n                      });\r\n                    }}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                    required\r\n                  >\r\n                    <option value=\"TSHIRT\">TSHIRT</option>\r\n                    <option value=\"SHIRT\">SHIRT</option>\r\n                    <option value=\"POLO\">POLO</option>\r\n                    <option value=\"SWEATER\">SWEATER</option>\r\n                    <option value=\"HOODIE\">HOODIE</option>\r\n                    <option value=\"PANTS\">PANTS</option>\r\n                    <option value=\"SHORT\">SHORT</option>\r\n                    <option value=\"SKIRT\">SKIRT</option>\r\n                    <option value=\"CAP\">CAP</option>\r\n                    <option value=\"KEYCHAIN\">KEYCHAIN</option>\r\n                    <option value=\"TOWEL\">TOWEL</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Bộ sưu tập\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={selectedProduct.collection}\r\n                    onChange={(e) => {\r\n                      setSelectedProduct({\r\n                        ...selectedProduct,\r\n                        collection: e.target.value,\r\n                      });\r\n                    }}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Mã sản phẩm\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={selectedProduct.productCode}\r\n                    onChange={(e) => {\r\n                      setSelectedProduct({\r\n                        ...selectedProduct,\r\n                        productCode: e.target.value,\r\n                      });\r\n                    }}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-6\">\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Mô tả\r\n                  </label>\r\n                  <textarea\r\n                    value={selectedProduct.description}\r\n                    onChange={(e) => {\r\n                      setSelectedProduct({\r\n                        ...selectedProduct,\r\n                        description: e.target.value,\r\n                      });\r\n                    }}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                    rows={4}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Chi tiết sản phẩm\r\n                  </label>\r\n                  <textarea\r\n                    value={selectedProduct.details}\r\n                    onChange={(e) => {\r\n                      setSelectedProduct({\r\n                        ...selectedProduct,\r\n                        details: e.target.value,\r\n                      });\r\n                    }}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                    rows={4}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {selectedProduct.category !== \"CAP\" ? (\r\n                  <div className=\"grid grid-cols-3 gap-4\">\r\n                    <div>\r\n                      <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                        Số lượng size M\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={selectedProduct.quantityM}\r\n                        onChange={(e) => {\r\n                          setSelectedProduct({\r\n                            ...selectedProduct,\r\n                            quantityM: Number(e.target.value),\r\n                          });\r\n                        }}\r\n                        className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                        required\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                        Số lượng size L\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={selectedProduct.quantityL}\r\n                        onChange={(e) => {\r\n                          setSelectedProduct({\r\n                            ...selectedProduct,\r\n                            quantityL: Number(e.target.value),\r\n                          });\r\n                        }}\r\n                        className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                        required\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                        Số lượng size XL\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={selectedProduct.quantityXL}\r\n                        onChange={(e) => {\r\n                          setSelectedProduct({\r\n                            ...selectedProduct,\r\n                            quantityXL: Number(e.target.value),\r\n                          });\r\n                        }}\r\n                        className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                        required\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                      Số lượng\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={selectedProduct.quantityHat}\r\n                      onChange={(e) => {\r\n                        setSelectedProduct({\r\n                          ...selectedProduct,\r\n                          quantityHat: Number(e.target.value),\r\n                        });\r\n                      }}\r\n                      className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-black focus:ring-black text-base text-black py-3 px-4\"\r\n                      required\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                <div>\r\n                  <label className=\"block text-base font-medium text-gray-700 mb-2\">\r\n                    Ảnh hướng dẫn size\r\n                  </label>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={handleSizeGuideImageChange}\r\n                      className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-black file:text-white hover:file:bg-gray-800\"\r\n                    />\r\n                    {sizeGuideImagePreview && (\r\n                      <div className=\"relative w-20 h-20\">\r\n                        <Image\r\n                          src={sizeGuideImagePreview}\r\n                          alt=\"Size Guide Preview\"\r\n                          fill\r\n                          className=\"object-cover rounded\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-4 mt-6\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\r\n              >\r\n                Hủy\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isEditing}\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-black rounded-md hover:bg-gray-800 disabled:opacity-50\"\r\n              >\r\n                {isEditing ? \"Đang lưu...\" : \"Lưu\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Dialog.Panel>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}; "
        }
    ]
}
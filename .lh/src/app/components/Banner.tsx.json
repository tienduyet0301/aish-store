{
    "sourceFile": "src/app/components/Banner.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1746893162816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747381944070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     return null;\r\n   }\r\n \r\n   return (\r\n-    <div className=\"relative w-full h-[400px] overflow-hidden\">\r\n+    <div className=\"relative w-full h-[300px] md:h-[400px] overflow-hidden\">\r\n       {banners.map((banner, index) => (\r\n         <div\r\n           key={banner._id}\r\n           className={`absolute inset-0 transition-opacity duration-500 ${\r\n@@ -74,27 +74,27 @@\n             alt={banner.title || \"Banner\"}\r\n             fill\r\n             className=\"object-cover\"\r\n             quality={100}\r\n-            sizes=\"100vw\"\r\n+            sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 100vw, 100vw\"\r\n             priority={index === 0}\r\n             loading={index === 0 ? \"eager\" : \"lazy\"}\r\n           />\r\n           {(banner.title || banner.description) && (\r\n             <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n-              <div className=\"text-center text-white p-4\">\r\n+              <div className=\"text-center text-white p-4 max-w-[90%] md:max-w-[80%]\">\r\n                 {banner.title && (\r\n-                  <h2 className=\"text-3xl font-bold mb-2\">{banner.title}</h2>\r\n+                  <h2 className=\"text-xl md:text-3xl font-bold mb-2\">{banner.title}</h2>\r\n                 )}\r\n                 {banner.description && (\r\n-                  <p className=\"text-lg\">{banner.description}</p>\r\n+                  <p className=\"text-sm md:text-lg\">{banner.description}</p>\r\n                 )}\r\n                 {banner.link && (\r\n                   <a\r\n                     href={banner.link}\r\n                     target=\"_blank\"\r\n                     rel=\"noopener noreferrer\"\r\n-                    className=\"inline-block mt-4 px-6 py-2 bg-white text-black rounded-md hover:bg-gray-100 transition-colors\"\r\n+                    className=\"inline-block mt-4 px-4 md:px-6 py-2 bg-white text-black rounded-md hover:bg-gray-100 transition-colors text-sm md:text-base\"\r\n                   >\r\n                     Learn More\r\n                   </a>\r\n                 )}\r\n@@ -108,9 +108,9 @@\n         {banners.map((_, index) => (\r\n           <button\r\n             key={index}\r\n             onClick={() => setCurrentIndex(index)}\r\n-            className={`w-3 h-3 rounded-full transition-colors ${\r\n+            className={`w-2 h-2 md:w-3 md:h-3 rounded-full transition-colors ${\r\n               index === currentIndex ? \"bg-white\" : \"bg-white/50\"\r\n             }`}\r\n             aria-label={`Go to slide ${index + 1}`}\r\n           />\r\n"
                },
                {
                    "date": 1747382305233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,14 @@\n             quality={100}\r\n             sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 100vw, 100vw\"\r\n             priority={index === 0}\r\n             loading={index === 0 ? \"eager\" : \"lazy\"}\r\n+            style={{\r\n+              objectPosition: 'center center',\r\n+              '@media (max-width: 768px)': {\r\n+                objectPosition: 'center 30%'\r\n+              }\r\n+            }}\r\n           />\r\n           {(banner.title || banner.description) && (\r\n             <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n               <div className=\"text-center text-white p-4 max-w-[90%] md:max-w-[80%]\">\r\n"
                },
                {
                    "date": 1747382316243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,19 +72,13 @@\n           <Image\r\n             src={banner.imageUrl}\r\n             alt={banner.title || \"Banner\"}\r\n             fill\r\n-            className=\"object-cover\"\r\n+            className=\"object-cover object-center md:object-center\"\r\n             quality={100}\r\n             sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 100vw, 100vw\"\r\n             priority={index === 0}\r\n             loading={index === 0 ? \"eager\" : \"lazy\"}\r\n-            style={{\r\n-              objectPosition: 'center center',\r\n-              '@media (max-width: 768px)': {\r\n-                objectPosition: 'center 30%'\r\n-              }\r\n-            }}\r\n           />\r\n           {(banner.title || banner.description) && (\r\n             <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n               <div className=\"text-center text-white p-4 max-w-[90%] md:max-w-[80%]\">\r\n"
                },
                {
                    "date": 1747382324746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,13 +72,16 @@\n           <Image\r\n             src={banner.imageUrl}\r\n             alt={banner.title || \"Banner\"}\r\n             fill\r\n-            className=\"object-cover object-center md:object-center\"\r\n+            className=\"object-cover\"\r\n             quality={100}\r\n             sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 100vw, 100vw\"\r\n             priority={index === 0}\r\n             loading={index === 0 ? \"eager\" : \"lazy\"}\r\n+            style={{\r\n+              objectPosition: 'center 30%'\r\n+            }}\r\n           />\r\n           {(banner.title || banner.description) && (\r\n             <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n               <div className=\"text-center text-white p-4 max-w-[90%] md:max-w-[80%]\">\r\n"
                },
                {
                    "date": 1747382535522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,8 @@\n             quality={100}\r\n             sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 100vw, 100vw\"\r\n             priority={index === 0}\r\n             loading={index === 0 ? \"eager\" : \"lazy\"}\r\n-            style={{\r\n-              objectPosition: 'center 30%'\r\n-            }}\r\n           />\r\n           {(banner.title || banner.description) && (\r\n             <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n               <div className=\"text-center text-white p-4 max-w-[90%] md:max-w-[80%]\">\r\n"
                },
                {
                    "date": 1747382569777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \r\n interface Banner {\r\n   _id: string;\r\n   imageUrl: string;\r\n+  mobileImageUrl?: string;\r\n   title: string;\r\n   description: string;\r\n   link: string;\r\n   order: number;\r\n@@ -15,8 +16,9 @@\n const Banner = () => {\r\n   const [banners, setBanners] = useState<Banner[]>([]);\r\n   const [currentIndex, setCurrentIndex] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(true);\r\n+  const [isMobile, setIsMobile] = useState(false);\r\n \r\n   const fetchBanners = useCallback(async () => {\r\n     try {\r\n       const response = await fetch(\"/api/banners\");\r\n@@ -47,8 +49,19 @@\n \r\n     return () => clearInterval(interval);\r\n   }, [banners.length]);\r\n \r\n+  useEffect(() => {\r\n+    const checkMobile = () => {\r\n+      setIsMobile(window.innerWidth < 768);\r\n+    };\r\n+    \r\n+    checkMobile();\r\n+    window.addEventListener('resize', checkMobile);\r\n+    \r\n+    return () => window.removeEventListener('resize', checkMobile);\r\n+  }, []);\r\n+\r\n   if (isLoading) {\r\n     return (\r\n       <div className=\"w-full h-[400px] bg-gray-100 animate-pulse flex items-center justify-center\">\r\n         <div className=\"text-gray-400\">Loading...</div>\r\n@@ -69,9 +82,9 @@\n             index === currentIndex ? \"opacity-100\" : \"opacity-0\"\r\n           }`}\r\n         >\r\n           <Image\r\n-            src={banner.imageUrl}\r\n+            src={isMobile && banner.mobileImageUrl ? banner.mobileImageUrl : banner.imageUrl}\r\n             alt={banner.title || \"Banner\"}\r\n             fill\r\n             className=\"object-cover\"\r\n             quality={100}\r\n"
                },
                {
                    "date": 1747382714291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,136 +1,136 @@\n-\"use client\";\r\n-import React, { useState, useEffect, useCallback } from \"react\";\r\n-import Image from \"next/image\";\r\n-\r\n-interface Banner {\r\n-  _id: string;\r\n-  imageUrl: string;\r\n-  mobileImageUrl?: string;\r\n-  title: string;\r\n-  description: string;\r\n-  link: string;\r\n-  order: number;\r\n-  isActive: boolean;\r\n-}\r\n-\r\n-const Banner = () => {\r\n-  const [banners, setBanners] = useState<Banner[]>([]);\r\n-  const [currentIndex, setCurrentIndex] = useState(0);\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n-  const [isMobile, setIsMobile] = useState(false);\r\n-\r\n-  const fetchBanners = useCallback(async () => {\r\n-    try {\r\n-      const response = await fetch(\"/api/banners\");\r\n-      if (!response.ok) {\r\n-        throw new Error(\"Failed to fetch banners\");\r\n-      }\r\n-      const data = await response.json();\r\n-      // Chỉ lấy các banner đang active\r\n-      const activeBanners = data.filter((banner: Banner) => banner.isActive);\r\n-      setBanners(activeBanners);\r\n-    } catch (error) {\r\n-      console.error(\"Error fetching banners:\", error);\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    fetchBanners();\r\n-  }, [fetchBanners]);\r\n-\r\n-  useEffect(() => {\r\n-    if (banners.length <= 1) return;\r\n-\r\n-    const interval = setInterval(() => {\r\n-      setCurrentIndex((prevIndex) => (prevIndex + 1) % banners.length);\r\n-    }, 5000); // Change slide every 5 seconds\r\n-\r\n-    return () => clearInterval(interval);\r\n-  }, [banners.length]);\r\n-\r\n-  useEffect(() => {\r\n-    const checkMobile = () => {\r\n-      setIsMobile(window.innerWidth < 768);\r\n-    };\r\n-    \r\n-    checkMobile();\r\n-    window.addEventListener('resize', checkMobile);\r\n-    \r\n-    return () => window.removeEventListener('resize', checkMobile);\r\n-  }, []);\r\n-\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full h-[400px] bg-gray-100 animate-pulse flex items-center justify-center\">\r\n-        <div className=\"text-gray-400\">Loading...</div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (banners.length === 0) {\r\n-    return null;\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"relative w-full h-[300px] md:h-[400px] overflow-hidden\">\r\n-      {banners.map((banner, index) => (\r\n-        <div\r\n-          key={banner._id}\r\n-          className={`absolute inset-0 transition-opacity duration-500 ${\r\n-            index === currentIndex ? \"opacity-100\" : \"opacity-0\"\r\n-          }`}\r\n-        >\r\n-          <Image\r\n-            src={isMobile && banner.mobileImageUrl ? banner.mobileImageUrl : banner.imageUrl}\r\n-            alt={banner.title || \"Banner\"}\r\n-            fill\r\n-            className=\"object-cover\"\r\n-            quality={100}\r\n-            sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 100vw, 100vw\"\r\n-            priority={index === 0}\r\n-            loading={index === 0 ? \"eager\" : \"lazy\"}\r\n-          />\r\n-          {(banner.title || banner.description) && (\r\n-            <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n-              <div className=\"text-center text-white p-4 max-w-[90%] md:max-w-[80%]\">\r\n-                {banner.title && (\r\n-                  <h2 className=\"text-xl md:text-3xl font-bold mb-2\">{banner.title}</h2>\r\n-                )}\r\n-                {banner.description && (\r\n-                  <p className=\"text-sm md:text-lg\">{banner.description}</p>\r\n-                )}\r\n-                {banner.link && (\r\n-                  <a\r\n-                    href={banner.link}\r\n-                    target=\"_blank\"\r\n-                    rel=\"noopener noreferrer\"\r\n-                    className=\"inline-block mt-4 px-4 md:px-6 py-2 bg-white text-black rounded-md hover:bg-gray-100 transition-colors text-sm md:text-base\"\r\n-                  >\r\n-                    Learn More\r\n-                  </a>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      ))}\r\n-      \r\n-      <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2\">\r\n-        {banners.map((_, index) => (\r\n-          <button\r\n-            key={index}\r\n-            onClick={() => setCurrentIndex(index)}\r\n-            className={`w-2 h-2 md:w-3 md:h-3 rounded-full transition-colors ${\r\n-              index === currentIndex ? \"bg-white\" : \"bg-white/50\"\r\n-            }`}\r\n-            aria-label={`Go to slide ${index + 1}`}\r\n-          />\r\n-        ))}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n+\"use client\";\n+import React, { useState, useEffect, useCallback } from \"react\";\n+import Image from \"next/image\";\n+\n+interface Banner {\n+  _id: string;\n+  imageUrl: string;\n+  mobileImageUrl?: string;\n+  title: string;\n+  description: string;\n+  link: string;\n+  order: number;\n+  isActive: boolean;\n+}\n+\n+const Banner = () => {\n+  const [banners, setBanners] = useState<Banner[]>([]);\n+  const [currentIndex, setCurrentIndex] = useState(0);\n+  const [isLoading, setIsLoading] = useState(true);\n+  const [isMobile, setIsMobile] = useState(false);\n+\n+  const fetchBanners = useCallback(async () => {\n+    try {\n+      const response = await fetch(\"/api/banners\");\n+      if (!response.ok) {\n+        throw new Error(\"Failed to fetch banners\");\n+      }\n+      const data = await response.json();\n+      // Chỉ lấy các banner đang active\n+      const activeBanners = data.filter((banner: Banner) => banner.isActive);\n+      setBanners(activeBanners);\n+    } catch (error) {\n+      console.error(\"Error fetching banners:\", error);\n+    } finally {\n+      setIsLoading(false);\n+    }\n+  }, []);\n+\n+  useEffect(() => {\n+    fetchBanners();\n+  }, [fetchBanners]);\n+\n+  useEffect(() => {\n+    if (banners.length <= 1) return;\n+\n+    const interval = setInterval(() => {\n+      setCurrentIndex((prevIndex) => (prevIndex + 1) % banners.length);\n+    }, 5000); // Change slide every 5 seconds\n+\n+    return () => clearInterval(interval);\n+  }, [banners.length]);\n+\n+  useEffect(() => {\n+    const checkMobile = () => {\n+      setIsMobile(window.innerWidth < 768);\n+    };\n+    \n+    checkMobile();\n+    window.addEventListener('resize', checkMobile);\n+    \n+    return () => window.removeEventListener('resize', checkMobile);\n+  }, []);\n+\n+  if (isLoading) {\n+    return (\n+      <div className=\"w-full h-[400px] bg-gray-100 animate-pulse flex items-center justify-center\">\n+        <div className=\"text-gray-400\">Loading...</div>\n+      </div>\n+    );\n+  }\n+\n+  if (banners.length === 0) {\n+    return null;\n+  }\n+\n+  return (\n+    <div className=\"relative w-full h-[300px] md:h-[400px] overflow-hidden\">\n+      {banners.map((banner, index) => (\n+        <div\n+          key={banner._id}\n+          className={`absolute inset-0 transition-opacity duration-500 ${\n+            index === currentIndex ? \"opacity-100\" : \"opacity-0\"\n+          }`}\n+        >\n+          <Image\n+            src={isMobile && banner.mobileImageUrl ? banner.mobileImageUrl : banner.imageUrl}\n+            alt={banner.title || \"Banner\"}\n+            fill\n+            className=\"object-cover\"\n+            quality={100}\n+            sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 100vw, 100vw\"\n+            priority={index === 0}\n+            loading={index === 0 ? \"eager\" : \"lazy\"}\n+          />\n+          {(banner.title || banner.description) && (\n+            <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\n+              <div className=\"text-center text-white p-4 max-w-[90%] md:max-w-[80%]\">\n+                {banner.title && (\n+                  <h2 className=\"text-xl md:text-3xl font-bold mb-2\">{banner.title}</h2>\n+                )}\n+                {banner.description && (\n+                  <p className=\"text-sm md:text-lg\">{banner.description}</p>\n+                )}\n+                {banner.link && (\n+                  <a\n+                    href={banner.link}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                    className=\"inline-block mt-4 px-4 md:px-6 py-2 bg-white text-black rounded-md hover:bg-gray-100 transition-colors text-sm md:text-base\"\n+                  >\n+                    Learn More\n+                  </a>\n+                )}\n+              </div>\n+            </div>\n+          )}\n+        </div>\n+      ))}\n+      \n+      <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2\">\n+        {banners.map((_, index) => (\n+          <button\n+            key={index}\n+            onClick={() => setCurrentIndex(index)}\n+            className={`w-2 h-2 md:w-3 md:h-3 rounded-full transition-colors ${\n+              index === currentIndex ? \"bg-white\" : \"bg-white/50\"\n+            }`}\n+            aria-label={`Go to slide ${index + 1}`}\n+          />\n+        ))}\n+      </div>\n+    </div>\n+  );\n+};\n+\n export default Banner; \n\\ No newline at end of file\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport Image from \"next/image\";\r\n\r\ninterface Banner {\r\n  _id: string;\r\n  imageUrl: string;\r\n  title: string;\r\n  description: string;\r\n  link: string;\r\n  order: number;\r\n  isActive: boolean;\r\n}\r\n\r\nconst Banner = () => {\r\n  const [banners, setBanners] = useState<Banner[]>([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchBanners = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\"/api/banners\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch banners\");\r\n      }\r\n      const data = await response.json();\r\n      // Chỉ lấy các banner đang active\r\n      const activeBanners = data.filter((banner: Banner) => banner.isActive);\r\n      setBanners(activeBanners);\r\n    } catch (error) {\r\n      console.error(\"Error fetching banners:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchBanners();\r\n  }, [fetchBanners]);\r\n\r\n  useEffect(() => {\r\n    if (banners.length <= 1) return;\r\n\r\n    const interval = setInterval(() => {\r\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % banners.length);\r\n    }, 5000); // Change slide every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [banners.length]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"w-full h-[400px] bg-gray-100 animate-pulse flex items-center justify-center\">\r\n        <div className=\"text-gray-400\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (banners.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative w-full h-[400px] overflow-hidden\">\r\n      {banners.map((banner, index) => (\r\n        <div\r\n          key={banner._id}\r\n          className={`absolute inset-0 transition-opacity duration-500 ${\r\n            index === currentIndex ? \"opacity-100\" : \"opacity-0\"\r\n          }`}\r\n        >\r\n          <Image\r\n            src={banner.imageUrl}\r\n            alt={banner.title || \"Banner\"}\r\n            fill\r\n            className=\"object-cover\"\r\n            quality={100}\r\n            sizes=\"100vw\"\r\n            priority={index === 0}\r\n            loading={index === 0 ? \"eager\" : \"lazy\"}\r\n          />\r\n          {(banner.title || banner.description) && (\r\n            <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n              <div className=\"text-center text-white p-4\">\r\n                {banner.title && (\r\n                  <h2 className=\"text-3xl font-bold mb-2\">{banner.title}</h2>\r\n                )}\r\n                {banner.description && (\r\n                  <p className=\"text-lg\">{banner.description}</p>\r\n                )}\r\n                {banner.link && (\r\n                  <a\r\n                    href={banner.link}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"inline-block mt-4 px-6 py-2 bg-white text-black rounded-md hover:bg-gray-100 transition-colors\"\r\n                  >\r\n                    Learn More\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n      \r\n      <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2\">\r\n        {banners.map((_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => setCurrentIndex(index)}\r\n            className={`w-3 h-3 rounded-full transition-colors ${\r\n              index === currentIndex ? \"bg-white\" : \"bg-white/50\"\r\n            }`}\r\n            aria-label={`Go to slide ${index + 1}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner; "
        }
    ]
}
{
    "sourceFile": "src/app/components/admin/BannerForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1747382750752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747382765652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,19 +10,72 @@\n     order: 0,\r\n     isActive: true,\r\n   });\r\n \r\n-  const handleSubmit = (event: React.FormEvent) => {\r\n+  const handleSubmit = async (event: React.FormEvent) => {\r\n     event.preventDefault();\r\n-    // Handle form submission\r\n+    try {\r\n+      const response = await fetch(\"/api/banners\", {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify(formData),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(\"Failed to create banner\");\r\n+      }\r\n+\r\n+      // Reset form\r\n+      setFormData({\r\n+        imageUrl: \"\",\r\n+        mobileImageUrl: \"\",\r\n+        title: \"\",\r\n+        description: \"\",\r\n+        link: \"\",\r\n+        order: 0,\r\n+        isActive: true,\r\n+      });\r\n+\r\n+      // Refresh banner list\r\n+      onSuccess?.();\r\n+    } catch (error) {\r\n+      console.error(\"Error creating banner:\", error);\r\n+      alert(\"Failed to create banner\");\r\n+    }\r\n   };\r\n \r\n   const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n     // Handle image change\r\n   };\r\n \r\n-  const handleMobileImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n-    // Handle mobile image change\r\n+  const handleMobileImageChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const file = event.target.files?.[0];\r\n+    if (!file) return;\r\n+\r\n+    try {\r\n+      const formData = new FormData();\r\n+      formData.append(\"file\", file);\r\n+\r\n+      const response = await fetch(\"/api/upload\", {\r\n+        method: \"POST\",\r\n+        body: formData,\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(\"Upload failed\");\r\n+      }\r\n+\r\n+      const data = await response.json();\r\n+      setFormData((prev) => ({\r\n+        ...prev,\r\n+        mobileImageUrl: data.url,\r\n+      }));\r\n+    } catch (error) {\r\n+      console.error(\"Error uploading mobile image:\", error);\r\n+      alert(\"Failed to upload mobile image\");\r\n+    }\r\n   };\r\n \r\n   return (\r\n     <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n"
                },
                {
                    "date": 1747382771595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,11 @@\n import React, { useState } from 'react';\r\n \r\n-const BannerForm: React.FC = () => {\r\n+interface BannerFormProps {\r\n+  onSuccess?: () => void;\r\n+}\r\n+\r\n+const BannerForm: React.FC<BannerFormProps> = ({ onSuccess }) => {\r\n   const [formData, setFormData] = useState({\r\n     imageUrl: \"\",\r\n     mobileImageUrl: \"\",\r\n     title: \"\",\r\n"
                }
            ],
            "date": 1747382750752,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\n\r\nconst BannerForm: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    imageUrl: \"\",\r\n    mobileImageUrl: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    link: \"\",\r\n    order: 0,\r\n    isActive: true,\r\n  });\r\n\r\n  const handleSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    // Handle form submission\r\n  };\r\n\r\n  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    // Handle image change\r\n  };\r\n\r\n  const handleMobileImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    // Handle mobile image change\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n          Banner Image (Desktop)\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        />\r\n        {formData.imageUrl && (\r\n          <div className=\"mt-2\">\r\n            <img\r\n              src={formData.imageUrl}\r\n              alt=\"Preview\"\r\n              className=\"h-32 object-cover rounded\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n          Banner Image (Mobile)\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleMobileImageChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        />\r\n        {formData.mobileImageUrl && (\r\n          <div className=\"mt-2\">\r\n            <img\r\n              src={formData.mobileImageUrl}\r\n              alt=\"Mobile Preview\"\r\n              className=\"h-32 object-cover rounded\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* ... rest of the form fields ... */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BannerForm; "
        }
    ]
}
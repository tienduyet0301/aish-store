{
    "sourceFile": "src/app/products/[id]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1746893163166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747123701800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   const [showHelpPanel, setShowHelpPanel] = useState(false);\n   const [showSizeOptions, setShowSizeOptions] = useState(false);\n   const [showSizeGuide, setShowSizeGuide] = useState(false);\n   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n+  const [isAddingToCart, setIsAddingToCart] = useState(false);\n \n   useEffect(() => {\n     const fetchProduct = async () => {\n       try {\n@@ -58,9 +59,9 @@\n       </div>\n     );\n   }\n \n-  const handleAddToCart = () => {\n+  const handleAddToCart = async () => {\n     if (!product) return;\n \n     if (!selectedSize) {\n       toast.error(\"Vui lòng chọn size\");\n@@ -79,25 +80,32 @@\n       const quantity = product[`quantity${size}` as keyof Product] as number;\n       stockInfo[size] = quantity;\n     });\n \n-    // Thêm sản phẩm vào giỏ hàng với thông tin stock đầy đủ\n-    addToCart({\n-      id: product._id,\n-      name: product.name,\n-      price: product.price,\n-      image: product.images[0],\n-      size: selectedSize,\n-      color: product.colors[0] || 'Default',\n-      quantity: quantity,\n-      cartItemId: Date.now(),\n-      stock: stockInfo,\n-      availableSizes: product.sizes || [],\n-      // Thêm thông tin stock cho size hiện tại\n-      currentStock: sizeQuantity\n-    });\n+    setIsAddingToCart(true);\n+    try {\n+      await addToCart({\n+        id: product._id,\n+        name: product.name,\n+        price: product.price,\n+        image: product.images[0],\n+        size: selectedSize,\n+        color: product.colors[0] || 'Default',\n+        quantity: quantity,\n+        cartItemId: Date.now(),\n+        stock: stockInfo,\n+        availableSizes: product.sizes || [],\n+        // Thêm thông tin stock cho size hiện tại\n+        currentStock: sizeQuantity\n+      });\n \n-    toast.success(\"Đã thêm vào giỏ hàng\");\n+      toast.success(\"Đã thêm vào giỏ hàng\");\n+    } catch (error) {\n+      console.error(\"Error adding to cart:\", error);\n+      toast.error(\"Failed to add to cart\");\n+    } finally {\n+      setIsAddingToCart(false);\n+    }\n   };\n \n   const handleQuantityChange = (value: number) => {\n     if (!product || !selectedSize) return;\n@@ -199,55 +207,24 @@\n               {(product.price).toLocaleString('vi-VN')} VND\n             </div>\n \n             {isClothing ? (\n-              <div className=\"mb-4\">\n-                <div className=\"relative\">\n-                  <button\n-                    onClick={() => setShowSizeOptions(!showSizeOptions)}\n-                    className=\"w-64 px-4 py-3 border-2 border-black rounded-md text-left flex justify-between items-center select-none transform-none\"\n-                    style={{ userSelect: 'none', transform: 'none' }}\n-                  >\n-                    <span className=\"text-black font-medium\">\n-                      {selectedSize ? `${selectedSize} - Còn ${product[`quantity${selectedSize}` as keyof Product]} sản phẩm` : \"Select a size\"}\n-                    </span>\n-                    <svg \n-                      className=\"w-4 h-4\" \n-                      fill=\"none\" \n-                      stroke=\"currentColor\" \n-                      viewBox=\"0 0 24 24\"\n+              <div className=\"mb-6\">\n+                <h3 className=\"text-sm font-semibold text-black mb-3\">SIZE</h3>\n+                <div className=\"grid grid-cols-4 gap-2\">\n+                  {['XS', 'S', 'M', 'L', 'XL', 'XXL'].map((size) => (\n+                    <button\n+                      key={size}\n+                      onClick={() => setSelectedSize(size)}\n+                      className={`py-2 text-sm font-medium border ${\n+                        selectedSize === size\n+                          ? 'border-black bg-black text-white'\n+                          : 'border-gray-200 text-gray-600 hover:border-black'\n+                      }`}\n                     >\n-                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-                    </svg>\n-                  </button>\n-                  \n-                  {showSizeOptions && (\n-                    <div className=\"absolute z-10 w-64 mt-1 bg-white border-2 border-black rounded-md shadow-lg\">\n-                      {availableSizes.map((size) => {\n-                        const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\n-                        return (\n-                          <button\n-                            key={size}\n-                            onClick={() => {\n-                              setSelectedSize(size);\n-                              setShowSizeOptions(false);\n-                            }}\n-                            disabled={sizeQuantity === 0}\n-                            className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\n-                              sizeQuantity === 0 \n-                                ? \"text-gray-400 cursor-not-allowed\" \n-                                : size === selectedSize \n-                                  ? \"text-black font-bold bg-gray-100\" \n-                                  : \"text-black font-medium hover:bg-gray-50\"\n-                            }`}\n-                            style={{ transform: 'none' }}\n-                          >\n-                            {size} - Còn {sizeQuantity} sản phẩm\n-                          </button>\n-                        );\n-                      })}\n-                    </div>\n-                  )}\n+                      {size}\n+                    </button>\n+                  ))}\n                 </div>\n               </div>\n             ) : product.category === \"CAP\" ? (\n               <div className=\"mb-4\">\n@@ -256,27 +233,28 @@\n                 </p>\n               </div>\n             ) : null}\n \n-            <div className=\"mb-4\">\n-              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n+            {/* Quantity Selection */}\n+            <div className=\"mb-6\">\n+              <h3 className=\"text-sm font-semibold text-black mb-3\">QUANTITY</h3>\n               <div className=\"flex items-center gap-2\">\n                 <button\n-                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n-                  className=\"w-8 h-8 border-2 border-black rounded flex items-center justify-center text-black\"\n+                  onClick={() => setQuantity(Math.max(1, quantity - 1))}\n+                  className=\"w-8 h-8 flex items-center justify-center border border-gray-200 text-gray-600 hover:border-black\"\n                 >\n                   -\n                 </button>\n                 <input\n                   type=\"number\"\n                   min=\"1\"\n                   value={quantity}\n-                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n-                  className=\"w-12 text-center border-2 border-black rounded py-1 text-black\"\n+                  onChange={(e) => setQuantity(Math.max(1, parseInt(e.target.value) || 1))}\n+                  className=\"w-12 h-8 text-center border border-gray-200 text-sm focus:outline-none focus:border-black\"\n                 />\n                 <button\n-                  onClick={() => handleQuantityChange(quantity + 1)}\n-                  className=\"w-8 h-8 border-2 border-black rounded flex items-center justify-center text-black\"\n+                  onClick={() => setQuantity(quantity + 1)}\n+                  className=\"w-8 h-8 flex items-center justify-center border border-gray-200 text-gray-600 hover:border-black\"\n                 >\n                   +\n                 </button>\n               </div>\n@@ -290,14 +268,19 @@\n               <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\n               <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n             </div>\n \n+            {/* Add to Cart Button */}\n             <button\n-              className=\"w-full bg-black text-white py-3 font-bold uppercase rounded hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n-              disabled={Boolean(isClothing && !selectedSize)}\n+              disabled={!selectedSize || isAddingToCart}\n+              className={`w-full py-3 text-sm font-medium uppercase ${\n+                !selectedSize || isAddingToCart\n+                  ? 'bg-gray-200 text-gray-500 cursor-not-allowed'\n+                  : 'bg-black text-white hover:bg-gray-900'\n+              }`}\n             >\n-              Thêm vào giỏ hàng\n+              {isAddingToCart ? 'Adding...' : 'Add to Cart'}\n             </button>\n \n             {isClothing && (\n               <button\n"
                },
                {
                    "date": 1747123760197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n   const [showHelpPanel, setShowHelpPanel] = useState(false);\n   const [showSizeOptions, setShowSizeOptions] = useState(false);\n   const [showSizeGuide, setShowSizeGuide] = useState(false);\n   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n-  const [isAddingToCart, setIsAddingToCart] = useState(false);\n \n   useEffect(() => {\n     const fetchProduct = async () => {\n       try {\n@@ -59,9 +58,9 @@\n       </div>\n     );\n   }\n \n-  const handleAddToCart = async () => {\n+  const handleAddToCart = () => {\n     if (!product) return;\n \n     if (!selectedSize) {\n       toast.error(\"Vui lòng chọn size\");\n@@ -80,32 +79,25 @@\n       const quantity = product[`quantity${size}` as keyof Product] as number;\n       stockInfo[size] = quantity;\n     });\n \n-    setIsAddingToCart(true);\n-    try {\n-      await addToCart({\n-        id: product._id,\n-        name: product.name,\n-        price: product.price,\n-        image: product.images[0],\n-        size: selectedSize,\n-        color: product.colors[0] || 'Default',\n-        quantity: quantity,\n-        cartItemId: Date.now(),\n-        stock: stockInfo,\n-        availableSizes: product.sizes || [],\n-        // Thêm thông tin stock cho size hiện tại\n-        currentStock: sizeQuantity\n-      });\n+    // Thêm sản phẩm vào giỏ hàng với thông tin stock đầy đủ\n+    addToCart({\n+      id: product._id,\n+      name: product.name,\n+      price: product.price,\n+      image: product.images[0],\n+      size: selectedSize,\n+      color: product.colors[0] || 'Default',\n+      quantity: quantity,\n+      cartItemId: Date.now(),\n+      stock: stockInfo,\n+      availableSizes: product.sizes || [],\n+      // Thêm thông tin stock cho size hiện tại\n+      currentStock: sizeQuantity\n+    });\n \n-      toast.success(\"Đã thêm vào giỏ hàng\");\n-    } catch (error) {\n-      console.error(\"Error adding to cart:\", error);\n-      toast.error(\"Failed to add to cart\");\n-    } finally {\n-      setIsAddingToCart(false);\n-    }\n+    toast.success(\"Đã thêm vào giỏ hàng\");\n   };\n \n   const handleQuantityChange = (value: number) => {\n     if (!product || !selectedSize) return;\n@@ -207,24 +199,55 @@\n               {(product.price).toLocaleString('vi-VN')} VND\n             </div>\n \n             {isClothing ? (\n-              <div className=\"mb-6\">\n-                <h3 className=\"text-sm font-semibold text-black mb-3\">SIZE</h3>\n-                <div className=\"grid grid-cols-4 gap-2\">\n-                  {['XS', 'S', 'M', 'L', 'XL', 'XXL'].map((size) => (\n-                    <button\n-                      key={size}\n-                      onClick={() => setSelectedSize(size)}\n-                      className={`py-2 text-sm font-medium border ${\n-                        selectedSize === size\n-                          ? 'border-black bg-black text-white'\n-                          : 'border-gray-200 text-gray-600 hover:border-black'\n-                      }`}\n+              <div className=\"mb-4\">\n+                <div className=\"relative\">\n+                  <button\n+                    onClick={() => setShowSizeOptions(!showSizeOptions)}\n+                    className=\"w-64 px-4 py-3 border-2 border-black rounded-md text-left flex justify-between items-center select-none transform-none\"\n+                    style={{ userSelect: 'none', transform: 'none' }}\n+                  >\n+                    <span className=\"text-black font-medium\">\n+                      {selectedSize ? `${selectedSize} - Còn ${product[`quantity${selectedSize}` as keyof Product]} sản phẩm` : \"Select a size\"}\n+                    </span>\n+                    <svg \n+                      className=\"w-4 h-4\" \n+                      fill=\"none\" \n+                      stroke=\"currentColor\" \n+                      viewBox=\"0 0 24 24\"\n                     >\n-                      {size}\n-                    </button>\n-                  ))}\n+                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n+                    </svg>\n+                  </button>\n+                  \n+                  {showSizeOptions && (\n+                    <div className=\"absolute z-10 w-64 mt-1 bg-white border-2 border-black rounded-md shadow-lg\">\n+                      {availableSizes.map((size) => {\n+                        const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\n+                        return (\n+                          <button\n+                            key={size}\n+                            onClick={() => {\n+                              setSelectedSize(size);\n+                              setShowSizeOptions(false);\n+                            }}\n+                            disabled={sizeQuantity === 0}\n+                            className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\n+                              sizeQuantity === 0 \n+                                ? \"text-gray-400 cursor-not-allowed\" \n+                                : size === selectedSize \n+                                  ? \"text-black font-bold bg-gray-100\" \n+                                  : \"text-black font-medium hover:bg-gray-50\"\n+                            }`}\n+                            style={{ transform: 'none' }}\n+                          >\n+                            {size} - Còn {sizeQuantity} sản phẩm\n+                          </button>\n+                        );\n+                      })}\n+                    </div>\n+                  )}\n                 </div>\n               </div>\n             ) : product.category === \"CAP\" ? (\n               <div className=\"mb-4\">\n@@ -233,28 +256,27 @@\n                 </p>\n               </div>\n             ) : null}\n \n-            {/* Quantity Selection */}\n-            <div className=\"mb-6\">\n-              <h3 className=\"text-sm font-semibold text-black mb-3\">QUANTITY</h3>\n+            <div className=\"mb-4\">\n+              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n               <div className=\"flex items-center gap-2\">\n                 <button\n-                  onClick={() => setQuantity(Math.max(1, quantity - 1))}\n-                  className=\"w-8 h-8 flex items-center justify-center border border-gray-200 text-gray-600 hover:border-black\"\n+                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n+                  className=\"w-8 h-8 border-2 border-black rounded flex items-center justify-center text-black\"\n                 >\n                   -\n                 </button>\n                 <input\n                   type=\"number\"\n                   min=\"1\"\n                   value={quantity}\n-                  onChange={(e) => setQuantity(Math.max(1, parseInt(e.target.value) || 1))}\n-                  className=\"w-12 h-8 text-center border border-gray-200 text-sm focus:outline-none focus:border-black\"\n+                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n+                  className=\"w-12 text-center border-2 border-black rounded py-1 text-black\"\n                 />\n                 <button\n-                  onClick={() => setQuantity(quantity + 1)}\n-                  className=\"w-8 h-8 flex items-center justify-center border border-gray-200 text-gray-600 hover:border-black\"\n+                  onClick={() => handleQuantityChange(quantity + 1)}\n+                  className=\"w-8 h-8 border-2 border-black rounded flex items-center justify-center text-black\"\n                 >\n                   +\n                 </button>\n               </div>\n@@ -268,19 +290,14 @@\n               <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\n               <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n             </div>\n \n-            {/* Add to Cart Button */}\n             <button\n+              className=\"w-full bg-black text-white py-3 font-bold uppercase rounded hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n-              disabled={!selectedSize || isAddingToCart}\n-              className={`w-full py-3 text-sm font-medium uppercase ${\n-                !selectedSize || isAddingToCart\n-                  ? 'bg-gray-200 text-gray-500 cursor-not-allowed'\n-                  : 'bg-black text-white hover:bg-gray-900'\n-              }`}\n+              disabled={Boolean(isClothing && !selectedSize)}\n             >\n-              {isAddingToCart ? 'Adding...' : 'Add to Cart'}\n+              Thêm vào giỏ hàng\n             </button>\n \n             {isClothing && (\n               <button\n"
                },
                {
                    "date": 1747123820688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,13 +199,13 @@\n               {(product.price).toLocaleString('vi-VN')} VND\n             </div>\n \n             {isClothing ? (\n-              <div className=\"mb-4\">\n+              <div className=\"mb-6\">\n                 <div className=\"relative\">\n                   <button\n                     onClick={() => setShowSizeOptions(!showSizeOptions)}\n-                    className=\"w-64 px-4 py-3 border-2 border-black rounded-md text-left flex justify-between items-center select-none transform-none\"\n+                    className=\"w-full px-4 py-3 border border-gray-200 text-left flex justify-between items-center select-none transform-none hover:border-black\"\n                     style={{ userSelect: 'none', transform: 'none' }}\n                   >\n                     <span className=\"text-black font-medium\">\n                       {selectedSize ? `${selectedSize} - Còn ${product[`quantity${selectedSize}` as keyof Product]} sản phẩm` : \"Select a size\"}\n@@ -220,9 +220,9 @@\n                     </svg>\n                   </button>\n                   \n                   {showSizeOptions && (\n-                    <div className=\"absolute z-10 w-64 mt-1 bg-white border-2 border-black rounded-md shadow-lg\">\n+                    <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-200 shadow-lg\">\n                       {availableSizes.map((size) => {\n                         const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\n                         return (\n                           <button\n@@ -249,34 +249,34 @@\n                   )}\n                 </div>\n               </div>\n             ) : product.category === \"CAP\" ? (\n-              <div className=\"mb-4\">\n+              <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n                   Còn {product.quantityHat} sản phẩm\n                 </p>\n               </div>\n             ) : null}\n \n-            <div className=\"mb-4\">\n+            <div className=\"mb-6\">\n               <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n               <div className=\"flex items-center gap-2\">\n                 <button\n                   onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n-                  className=\"w-8 h-8 border-2 border-black rounded flex items-center justify-center text-black\"\n+                  className=\"w-8 h-8 border border-gray-200 flex items-center justify-center text-black hover:border-black\"\n                 >\n                   -\n                 </button>\n                 <input\n                   type=\"number\"\n                   min=\"1\"\n                   value={quantity}\n                   onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n-                  className=\"w-12 text-center border-2 border-black rounded py-1 text-black\"\n+                  className=\"w-12 h-8 text-center border border-gray-200 text-black focus:outline-none focus:border-black\"\n                 />\n                 <button\n                   onClick={() => handleQuantityChange(quantity + 1)}\n-                  className=\"w-8 h-8 border-2 border-black rounded flex items-center justify-center text-black\"\n+                  className=\"w-8 h-8 border border-gray-200 flex items-center justify-center text-black hover:border-black\"\n                 >\n                   +\n                 </button>\n               </div>\n@@ -291,9 +291,9 @@\n               <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n-              className=\"w-full bg-black text-white py-3 font-bold uppercase rounded hover:bg-gray-900 transition mb-2\"\n+              className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n               disabled={Boolean(isClothing && !selectedSize)}\n             >\n               Thêm vào giỏ hàng\n"
                },
                {
                    "date": 1747123940528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,17 +126,17 @@\n \n   return (\n     <div className=\"min-h-screen bg-white flex flex-col\">\n       {/* Breadcrumb */}\n-      <div className=\"px-4 py-2 text-sm text-gray-600\">\n+      <div className=\"px-4 py-4 text-sm text-gray-600 mt-16\">\n         <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">Home</Link>\n         <span className=\"mx-2\">/</span>\n         <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{product.category}</Link>\n         <span className=\"mx-2\">/</span>\n         <span className=\"text-black font-semibold uppercase\">{product.name}</span>\n       </div>\n \n-      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-12 px-4 gap-8 flex-1\">\n+      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n         {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n         <div className=\"flex-1 flex flex-col items-center\">\n           <div className=\"relative w-full flex justify-center items-center mb-8\" style={{height: '450px'}}>\n             <Image\n"
                },
                {
                    "date": 1747124034909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,18 +125,9 @@\n   const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\n \n   return (\n     <div className=\"min-h-screen bg-white flex flex-col\">\n-      {/* Breadcrumb */}\n-      <div className=\"px-4 py-4 text-sm text-gray-600 mt-16\">\n-        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">Home</Link>\n-        <span className=\"mx-2\">/</span>\n-        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{product.category}</Link>\n-        <span className=\"mx-2\">/</span>\n-        <span className=\"text-black font-semibold uppercase\">{product.name}</span>\n-      </div>\n-\n-      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n+      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1 mt-16\">\n         {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n         <div className=\"flex-1 flex flex-col items-center\">\n           <div className=\"relative w-full flex justify-center items-center mb-8\" style={{height: '450px'}}>\n             <Image\n"
                },
                {
                    "date": 1747124104606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,20 @@\n   const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\n \n   return (\n     <div className=\"min-h-screen bg-white flex flex-col\">\n-      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1 mt-16\">\n+      {/* Breadcrumb */}\n+      <div className=\"px-4 py-4 text-sm text-gray-600 mt-16\">\n+        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">Home</Link>\n+        <span className=\"mx-2\">/</span>\n+        <Link href=\"/products\" className=\"hover:text-black font-semibold uppercase\">Products</Link>\n+        <span className=\"mx-2\">/</span>\n+        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{product.category}</Link>\n+        <span className=\"mx-2\">/</span>\n+        <span className=\"text-black font-semibold uppercase\">{product.name}</span>\n+      </div>\n+\n+      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n         {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n         <div className=\"flex-1 flex flex-col items-center\">\n           <div className=\"relative w-full flex justify-center items-center mb-8\" style={{height: '450px'}}>\n             <Image\n"
                },
                {
                    "date": 1747124161301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,16 +126,16 @@\n \n   return (\n     <div className=\"min-h-screen bg-white flex flex-col\">\n       {/* Breadcrumb */}\n-      <div className=\"px-4 py-4 text-sm text-gray-600 mt-16\">\n-        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">Home</Link>\n+      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\n+        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase underline\">Home</Link>\n         <span className=\"mx-2\">/</span>\n-        <Link href=\"/products\" className=\"hover:text-black font-semibold uppercase\">Products</Link>\n+        <Link href=\"/products\" className=\"hover:text-black font-semibold uppercase underline\">Products</Link>\n         <span className=\"mx-2\">/</span>\n-        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{product.category}</Link>\n+        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.category}</Link>\n         <span className=\"mx-2\">/</span>\n-        <span className=\"text-black font-semibold uppercase\">{product.name}</span>\n+        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\n       </div>\n \n       <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n         {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n@@ -317,15 +317,15 @@\n \n       {/* Navigation và các thông tin phụ */}\n       <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\n         <div className=\"text-black\">\n-          <Link href=\"/\" className=\"hover:underline font-semibold uppercase\">Home</Link>\n+          <Link href=\"/\" className=\"hover:underline font-semibold uppercase underline\">Home</Link>\n           {\" / \"}\n-          <Link href=\"/products\" className=\"hover:underline font-semibold uppercase\">Products</Link>\n+          <Link href=\"/products\" className=\"hover:underline font-semibold uppercase underline\">Products</Link>\n           {\" / \"}\n-          <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:underline font-semibold uppercase\">{product.category}</Link>\n+          <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.category}</Link>\n           {\" / \"}\n-          <span className=\"font-semibold uppercase\">{product.name}</span>\n+          <span className=\"font-semibold uppercase underline\">{product.name}</span>\n         </div>\n         <div>\n           <button \n             onClick={() => setShowHelpPanel(true)}\n"
                },
                {
                    "date": 1747124398294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,10 +131,12 @@\n         <Link href=\"/\" className=\"hover:text-black font-semibold uppercase underline\">Home</Link>\n         <span className=\"mx-2\">/</span>\n         <Link href=\"/products\" className=\"hover:text-black font-semibold uppercase underline\">Products</Link>\n         <span className=\"mx-2\">/</span>\n-        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.category}</Link>\n+        <Link href={`/products/${product.mainCategory?.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.mainCategory}</Link>\n         <span className=\"mx-2\">/</span>\n+        <Link href={`/products/${product.mainCategory?.toLowerCase()}/${product.subCategory?.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.subCategory}</Link>\n+        <span className=\"mx-2\">/</span>\n         <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\n       </div>\n \n       <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n@@ -321,10 +323,12 @@\n           <Link href=\"/\" className=\"hover:underline font-semibold uppercase underline\">Home</Link>\n           {\" / \"}\n           <Link href=\"/products\" className=\"hover:underline font-semibold uppercase underline\">Products</Link>\n           {\" / \"}\n-          <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.category}</Link>\n+          <Link href={`/products/${product.mainCategory?.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.mainCategory}</Link>\n           {\" / \"}\n+          <Link href={`/products/${product.mainCategory?.toLowerCase()}/${product.subCategory?.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.subCategory}</Link>\n+          {\" / \"}\n           <span className=\"font-semibold uppercase underline\">{product.name}</span>\n         </div>\n         <div>\n           <button \n"
                },
                {
                    "date": 1747124464030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,11 +131,11 @@\n         <Link href=\"/\" className=\"hover:text-black font-semibold uppercase underline\">Home</Link>\n         <span className=\"mx-2\">/</span>\n         <Link href=\"/products\" className=\"hover:text-black font-semibold uppercase underline\">Products</Link>\n         <span className=\"mx-2\">/</span>\n-        <Link href={`/products/${product.mainCategory?.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.mainCategory}</Link>\n+        <Link href={`/products/${product.category.split('/')[0]?.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.category.split('/')[0]}</Link>\n         <span className=\"mx-2\">/</span>\n-        <Link href={`/products/${product.mainCategory?.toLowerCase()}/${product.subCategory?.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.subCategory}</Link>\n+        <Link href={`/products/${product.category.split('/')[0]?.toLowerCase()}/${product.category.split('/')[1]?.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.category.split('/')[1]}</Link>\n         <span className=\"mx-2\">/</span>\n         <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\n       </div>\n \n@@ -323,11 +323,11 @@\n           <Link href=\"/\" className=\"hover:underline font-semibold uppercase underline\">Home</Link>\n           {\" / \"}\n           <Link href=\"/products\" className=\"hover:underline font-semibold uppercase underline\">Products</Link>\n           {\" / \"}\n-          <Link href={`/products/${product.mainCategory?.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.mainCategory}</Link>\n+          <Link href={`/products/${product.category.split('/')[0]?.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.category.split('/')[0]}</Link>\n           {\" / \"}\n-          <Link href={`/products/${product.mainCategory?.toLowerCase()}/${product.subCategory?.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.subCategory}</Link>\n+          <Link href={`/products/${product.category.split('/')[0]?.toLowerCase()}/${product.category.split('/')[1]?.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.category.split('/')[1]}</Link>\n           {\" / \"}\n           <span className=\"font-semibold uppercase underline\">{product.name}</span>\n         </div>\n         <div>\n"
                },
                {
                    "date": 1747124514302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,18 +126,16 @@\n \n   return (\n     <div className=\"min-h-screen bg-white flex flex-col\">\n       {/* Breadcrumb */}\n-      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\n-        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase underline\">Home</Link>\n+      <div className=\"px-4 py-4 text-sm text-gray-600 mt-16\">\n+        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">Home</Link>\n         <span className=\"mx-2\">/</span>\n-        <Link href=\"/products\" className=\"hover:text-black font-semibold uppercase underline\">Products</Link>\n+        <Link href=\"/products\" className=\"hover:text-black font-semibold uppercase\">Products</Link>\n         <span className=\"mx-2\">/</span>\n-        <Link href={`/products/${product.category.split('/')[0]?.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.category.split('/')[0]}</Link>\n+        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{product.category}</Link>\n         <span className=\"mx-2\">/</span>\n-        <Link href={`/products/${product.category.split('/')[0]?.toLowerCase()}/${product.category.split('/')[1]?.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase underline\">{product.category.split('/')[1]}</Link>\n-        <span className=\"mx-2\">/</span>\n-        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\n+        <span className=\"text-black font-semibold uppercase\">{product.name}</span>\n       </div>\n \n       <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n         {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n@@ -319,17 +317,15 @@\n \n       {/* Navigation và các thông tin phụ */}\n       <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\n         <div className=\"text-black\">\n-          <Link href=\"/\" className=\"hover:underline font-semibold uppercase underline\">Home</Link>\n+          <Link href=\"/\" className=\"hover:underline font-semibold uppercase\">Home</Link>\n           {\" / \"}\n-          <Link href=\"/products\" className=\"hover:underline font-semibold uppercase underline\">Products</Link>\n+          <Link href=\"/products\" className=\"hover:underline font-semibold uppercase\">Products</Link>\n           {\" / \"}\n-          <Link href={`/products/${product.category.split('/')[0]?.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.category.split('/')[0]}</Link>\n+          <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:underline font-semibold uppercase\">{product.category}</Link>\n           {\" / \"}\n-          <Link href={`/products/${product.category.split('/')[0]?.toLowerCase()}/${product.category.split('/')[1]?.toLowerCase()}`} className=\"hover:underline font-semibold uppercase underline\">{product.category.split('/')[1]}</Link>\n-          {\" / \"}\n-          <span className=\"font-semibold uppercase underline\">{product.name}</span>\n+          <span className=\"font-semibold uppercase\">{product.name}</span>\n         </div>\n         <div>\n           <button \n             onClick={() => setShowHelpPanel(true)}\n"
                },
                {
                    "date": 1747124836392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,16 +126,12 @@\n \n   return (\n     <div className=\"min-h-screen bg-white flex flex-col\">\n       {/* Breadcrumb */}\n-      <div className=\"px-4 py-4 text-sm text-gray-600 mt-16\">\n-        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">Home</Link>\n+      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\n+        <span className=\"font-semibold uppercase underline\">{product.category}</span>\n         <span className=\"mx-2\">/</span>\n-        <Link href=\"/products\" className=\"hover:text-black font-semibold uppercase\">Products</Link>\n-        <span className=\"mx-2\">/</span>\n-        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{product.category}</Link>\n-        <span className=\"mx-2\">/</span>\n-        <span className=\"text-black font-semibold uppercase\">{product.name}</span>\n+        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\n       </div>\n \n       <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n         {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n@@ -317,15 +313,11 @@\n \n       {/* Navigation và các thông tin phụ */}\n       <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\n         <div className=\"text-black\">\n-          <Link href=\"/\" className=\"hover:underline font-semibold uppercase\">Home</Link>\n+          <span className=\"font-semibold uppercase underline\">{product.category}</span>\n           {\" / \"}\n-          <Link href=\"/products\" className=\"hover:underline font-semibold uppercase\">Products</Link>\n-          {\" / \"}\n-          <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:underline font-semibold uppercase\">{product.category}</Link>\n-          {\" / \"}\n-          <span className=\"font-semibold uppercase\">{product.name}</span>\n+          <span className=\"font-semibold uppercase underline\">{product.name}</span>\n         </div>\n         <div>\n           <button \n             onClick={() => setShowHelpPanel(true)}\n"
                },
                {
                    "date": 1747125126871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n \n       <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n         {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n         <div className=\"flex-1 flex flex-col items-center\">\n-          <div className=\"relative w-full flex justify-center items-center mb-8\" style={{height: '450px'}}>\n+          <div className=\"relative w-full flex justify-center items-center mt-6 mb-6\" style={{height: '450px'}}>\n             <Image\n               src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n               alt={product.name}\n               width={450}\n"
                },
                {
                    "date": 1747125465226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n                 </button>\n               </>\n             )}\n           </div>\n-          <div className=\"flex gap-4 w-full justify-center mt-4\">\n+          <div className=\"flex gap-4 w-full justify-center mt-8\">\n             {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\n               <div \n                 key={index} \n                 className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n"
                },
                {
                    "date": 1747125529215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n                 </button>\n               </>\n             )}\n           </div>\n-          <div className=\"flex gap-4 w-full justify-center mt-8\">\n+          <div className=\"flex gap-4 w-full justify-center mt-10\">\n             {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\n               <div \n                 key={index} \n                 className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n"
                },
                {
                    "date": 1747125650158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n                 </button>\n               </>\n             )}\n           </div>\n-          <div className=\"flex gap-4 w-full justify-center mt-10\">\n+          <div className=\"flex gap-4 w-full justify-center mt-8\">\n             {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\n               <div \n                 key={index} \n                 className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n"
                },
                {
                    "date": 1747125668935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n                 </button>\n               </>\n             )}\n           </div>\n-          <div className=\"flex gap-4 w-full justify-center mt-8\">\n+          <div className=\"flex gap-4 w-full justify-center mt-10\">\n             {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\n               <div \n                 key={index} \n                 className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n"
                },
                {
                    "date": 1747125678462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n               <div className=\"mb-6\">\n                 <div className=\"relative\">\n                   <button\n                     onClick={() => setShowSizeOptions(!showSizeOptions)}\n-                    className=\"w-full px-4 py-3 border border-gray-200 text-left flex justify-between items-center select-none transform-none hover:border-black\"\n+                    className=\"w-full px-4 py-3 border border-black text-left flex justify-between items-center select-none transform-none\"\n                     style={{ userSelect: 'none', transform: 'none' }}\n                   >\n                     <span className=\"text-black font-medium\">\n                       {selectedSize ? `${selectedSize} - Còn ${product[`quantity${selectedSize}` as keyof Product]} sản phẩm` : \"Select a size\"}\n@@ -218,9 +218,9 @@\n                     </svg>\n                   </button>\n                   \n                   {showSizeOptions && (\n-                    <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-200 shadow-lg\">\n+                    <div className=\"absolute z-10 w-full mt-1 bg-white border border-black shadow-lg\">\n                       {availableSizes.map((size) => {\n                         const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\n                         return (\n                           <button\n@@ -234,9 +234,9 @@\n                               sizeQuantity === 0 \n                                 ? \"text-gray-400 cursor-not-allowed\" \n                                 : size === selectedSize \n                                   ? \"text-black font-bold bg-gray-100\" \n-                                  : \"text-black font-medium hover:bg-gray-50\"\n+                                  : \"text-black font-medium\"\n                             }`}\n                             style={{ transform: 'none' }}\n                           >\n                             {size} - Còn {sizeQuantity} sản phẩm\n@@ -259,22 +259,22 @@\n               <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n               <div className=\"flex items-center gap-2\">\n                 <button\n                   onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n-                  className=\"w-8 h-8 border border-gray-200 flex items-center justify-center text-black hover:border-black\"\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n                 >\n                   -\n                 </button>\n                 <input\n                   type=\"number\"\n                   min=\"1\"\n                   value={quantity}\n                   onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n-                  className=\"w-12 h-8 text-center border border-gray-200 text-black focus:outline-none focus:border-black\"\n+                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\n                 />\n                 <button\n                   onClick={() => handleQuantityChange(quantity + 1)}\n-                  className=\"w-8 h-8 border border-gray-200 flex items-center justify-center text-black hover:border-black\"\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n                 >\n                   +\n                 </button>\n               </div>\n"
                },
                {
                    "date": 1747126204254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,17 +333,17 @@\n         <div \n           className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" \n           onClick={() => setShowFullImage(false)}\n         >\n-          <div className=\"relative w-full h-full overflow-auto flex justify-center items-center\">\n+          <div className=\"relative w-full h-full overflow-auto flex justify-center items-start py-8\">\n             <Image\n               src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n               alt={product.name}\n               width={1000}\n               height={1000}\n               quality={100}\n-              className=\"object-contain w-full h-full\"\n-              style={{ maxWidth: \"100%\", height: \"auto\" }}\n+              className=\"object-contain w-auto h-auto\"\n+              style={{ maxWidth: \"90%\", maxHeight: \"90vh\" }}\n             />\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1747126223494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,17 +333,17 @@\n         <div \n           className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" \n           onClick={() => setShowFullImage(false)}\n         >\n-          <div className=\"relative w-full h-full overflow-auto flex justify-center items-start py-8\">\n+          <div className=\"relative w-full h-full overflow-auto flex justify-center items-center\">\n             <Image\n               src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n               alt={product.name}\n               width={1000}\n               height={1000}\n               quality={100}\n-              className=\"object-contain w-auto h-auto\"\n-              style={{ maxWidth: \"90%\", maxHeight: \"90vh\" }}\n+              className=\"object-contain w-full h-full\"\n+              style={{ maxWidth: \"100%\", height: \"auto\" }}\n             />\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1747126247304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,20 +330,20 @@\n \n       {/* Full Image Modal */}\n       {showFullImage && (\n         <div \n-          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" \n+          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-start justify-center z-50 overflow-y-auto\" \n           onClick={() => setShowFullImage(false)}\n         >\n-          <div className=\"relative w-full h-full overflow-auto flex justify-center items-center\">\n+          <div className=\"relative w-full min-h-screen flex justify-center items-center py-8\">\n             <Image\n               src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n               alt={product.name}\n               width={1000}\n               height={1000}\n               quality={100}\n-              className=\"object-contain w-full h-full\"\n-              style={{ maxWidth: \"100%\", height: \"auto\" }}\n+              className=\"object-contain w-auto h-auto\"\n+              style={{ maxWidth: \"100%\", maxHeight: \"90vh\" }}\n             />\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1747126279615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,20 +330,20 @@\n \n       {/* Full Image Modal */}\n       {showFullImage && (\n         <div \n-          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-start justify-center z-50 overflow-y-auto\" \n+          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" \n           onClick={() => setShowFullImage(false)}\n         >\n-          <div className=\"relative w-full min-h-screen flex justify-center items-center py-8\">\n+          <div className=\"relative w-full h-full overflow-auto flex justify-center items-center\">\n             <Image\n               src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n               alt={product.name}\n               width={1000}\n               height={1000}\n               quality={100}\n-              className=\"object-contain w-auto h-auto\"\n-              style={{ maxWidth: \"100%\", maxHeight: \"90vh\" }}\n+              className=\"object-contain w-full h-full\"\n+              style={{ maxWidth: \"100%\", height: \"auto\" }}\n             />\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1747126365545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,20 +330,20 @@\n \n       {/* Full Image Modal */}\n       {showFullImage && (\n         <div \n-          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" \n+          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \n           onClick={() => setShowFullImage(false)}\n         >\n-          <div className=\"relative w-full h-full overflow-auto flex justify-center items-center\">\n+          <div className=\"min-h-screen w-full flex justify-center items-start pt-8 pb-8\">\n             <Image\n               src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n               alt={product.name}\n               width={1000}\n               height={1000}\n               quality={100}\n-              className=\"object-contain w-full h-full\"\n-              style={{ maxWidth: \"100%\", height: \"auto\" }}\n+              className=\"object-contain w-auto h-auto\"\n+              style={{ maxWidth: \"100%\", maxHeight: \"90vh\" }}\n             />\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1747126391453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,20 +330,20 @@\n \n       {/* Full Image Modal */}\n       {showFullImage && (\n         <div \n-          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \n+          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" \n           onClick={() => setShowFullImage(false)}\n         >\n-          <div className=\"min-h-screen w-full flex justify-center items-start pt-8 pb-8\">\n+          <div className=\"relative w-full h-full overflow-auto flex justify-center items-center\">\n             <Image\n               src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n               alt={product.name}\n               width={1000}\n               height={1000}\n               quality={100}\n-              className=\"object-contain w-auto h-auto\"\n-              style={{ maxWidth: \"100%\", maxHeight: \"90vh\" }}\n+              className=\"object-contain w-full h-full\"\n+              style={{ maxWidth: \"100%\", height: \"auto\" }}\n             />\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1747126423223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,20 +330,20 @@\n \n       {/* Full Image Modal */}\n       {showFullImage && (\n         <div \n-          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" \n+          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \n           onClick={() => setShowFullImage(false)}\n         >\n-          <div className=\"relative w-full h-full overflow-auto flex justify-center items-center\">\n+          <div className=\"min-h-screen w-full flex justify-center items-start\">\n             <Image\n               src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n               alt={product.name}\n-              width={1000}\n-              height={1000}\n+              width={2000}\n+              height={2000}\n               quality={100}\n-              className=\"object-contain w-full h-full\"\n-              style={{ maxWidth: \"100%\", height: \"auto\" }}\n+              className=\"object-contain w-full\"\n+              style={{ height: \"auto\" }}\n             />\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1747126483048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,9 +361,9 @@\n             className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\n             onClick={e => e.stopPropagation()}\n           >\n             <div className=\"flex justify-between items-center mb-4\">\n-              <h2 className=\"text-xl font-bold text-left\">Hướng dẫn chọn size</h2>\n+              <h2 className=\"text-xl font-bold text-left uppercase\">Hướng dẫn chọn size</h2>\n               <button \n                 onClick={() => setShowSizeGuide(false)}\n                 className=\"text-gray-500 hover:text-black\"\n               >\n"
                },
                {
                    "date": 1747126521297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,9 +361,9 @@\n             className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\n             onClick={e => e.stopPropagation()}\n           >\n             <div className=\"flex justify-between items-center mb-4\">\n-              <h2 className=\"text-xl font-bold text-left uppercase\">Hướng dẫn chọn size</h2>\n+              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\n               <button \n                 onClick={() => setShowSizeGuide(false)}\n                 className=\"text-gray-500 hover:text-black\"\n               >\n"
                },
                {
                    "date": 1747127359333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import Link from \"next/link\";\n import HelpPanel from \"@/components/HelpPanel\";\n \n export default function ProductDetailPage() {\n-  const { id } = useParams();\n+  const { id: slug } = useParams();\n   const pathname = usePathname();\n   const [product, setProduct] = useState<Product | null>(null);\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n   const [quantity, setQuantity] = useState<number>(1);\n@@ -26,9 +26,9 @@\n \n   useEffect(() => {\n     const fetchProduct = async () => {\n       try {\n-        const response = await fetch(`/api/products/${id}`);\n+        const response = await fetch(`/api/products/by-slug/${slug}`);\n         const data = await response.json();\n         if (data.ok) {\n           setProduct(data.product);\n         }\n@@ -40,9 +40,9 @@\n       }\n     };\n \n     fetchProduct();\n-  }, [id]);\n+  }, [slug]);\n \n   if (isLoading) {\n     return (\n       <div className=\"min-h-screen flex items-center justify-center\">\n"
                },
                {
                    "date": 1747278132331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,389 +1,7 @@\n-\"use client\";\n-\n-import { useState, useEffect } from \"react\";\n-import { useParams, usePathname } from \"next/navigation\";\n-import { motion } from \"framer-motion\";\n-import { toast } from \"react-hot-toast\";\n-import { useCart } from \"@/context/CartContext\";\n-import { Product } from \"@/types/product\";\n-import Image from \"next/image\";\n-import Link from \"next/link\";\n-import HelpPanel from \"@/components/HelpPanel\";\n-\n-export default function ProductDetailPage() {\n-  const { id: slug } = useParams();\n-  const pathname = usePathname();\n-  const [product, setProduct] = useState<Product | null>(null);\n-  const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n-  const [quantity, setQuantity] = useState<number>(1);\n-  const [isLoading, setIsLoading] = useState(true);\n-  const { addToCart } = useCart();\n-  const [showFullImage, setShowFullImage] = useState(false);\n-  const [showHelpPanel, setShowHelpPanel] = useState(false);\n-  const [showSizeOptions, setShowSizeOptions] = useState(false);\n-  const [showSizeGuide, setShowSizeGuide] = useState(false);\n-  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n-\n-  useEffect(() => {\n-    const fetchProduct = async () => {\n-      try {\n-        const response = await fetch(`/api/products/by-slug/${slug}`);\n-        const data = await response.json();\n-        if (data.ok) {\n-          setProduct(data.product);\n-        }\n-      } catch (error) {\n-        console.error(\"Error fetching product:\", error);\n-        toast.error(\"Failed to load product\");\n-      } finally {\n-        setIsLoading(false);\n-      }\n-    };\n-\n-    fetchProduct();\n-  }, [slug]);\n-\n-  if (isLoading) {\n-    return (\n-      <div className=\"min-h-screen flex items-center justify-center\">\n-        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900\"></div>\n-      </div>\n-    );\n-  }\n-\n-  if (!product) {\n-    return (\n-      <div className=\"min-h-screen flex items-center justify-center\">\n-        <p className=\"text-xl\">Product not found</p>\n-      </div>\n-    );\n-  }\n-\n-  const handleAddToCart = () => {\n-    if (!product) return;\n-\n-    if (!selectedSize) {\n-      toast.error(\"Vui lòng chọn size\");\n-      return;\n-    }\n-\n-    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n-    if (quantity > sizeQuantity) {\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n-      return;\n-    }\n-\n-    // Tạo object chứa thông tin stock cho tất cả các size\n-    const stockInfo: { [key: string]: number } = {};\n-    product.sizes?.forEach(size => {\n-      const quantity = product[`quantity${size}` as keyof Product] as number;\n-      stockInfo[size] = quantity;\n-    });\n-\n-    // Thêm sản phẩm vào giỏ hàng với thông tin stock đầy đủ\n-    addToCart({\n-      id: product._id,\n-      name: product.name,\n-      price: product.price,\n-      image: product.images[0],\n-      size: selectedSize,\n-      color: product.colors[0] || 'Default',\n-      quantity: quantity,\n-      cartItemId: Date.now(),\n-      stock: stockInfo,\n-      availableSizes: product.sizes || [],\n-      // Thêm thông tin stock cho size hiện tại\n-      currentStock: sizeQuantity\n-    });\n-\n-    toast.success(\"Đã thêm vào giỏ hàng\");\n-  };\n-\n-  const handleQuantityChange = (value: number) => {\n-    if (!product || !selectedSize) return;\n-    \n-    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n-    if (value > sizeQuantity) {\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n-      return;\n-    }\n-    \n-    setQuantity(value);\n-  };\n-\n-  const handlePrevImage = () => {\n-    if (!product || !product.images) return;\n-    setCurrentImageIndex((currentImageIndex - 1 + product.images.length) % product.images.length);\n-  };\n-\n-  const handleNextImage = () => {\n-    if (!product || !product.images) return;\n-    setCurrentImageIndex((currentImageIndex + 1) % product.images.length);\n-  };\n-\n-  const isClothing = product.category && product.category !== \"CAP\";\n-  const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\n-\n-  return (\n-    <div className=\"min-h-screen bg-white flex flex-col\">\n-      {/* Breadcrumb */}\n-      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\n-        <span className=\"font-semibold uppercase underline\">{product.category}</span>\n-        <span className=\"mx-2\">/</span>\n-        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\n-      </div>\n-\n-      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n-        {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n-        <div className=\"flex-1 flex flex-col items-center\">\n-          <div className=\"relative w-full flex justify-center items-center mt-6 mb-6\" style={{height: '450px'}}>\n-            <Image\n-              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n-              alt={product.name}\n-              width={450}\n-              height={450}\n-              quality={100}\n-              className=\"object-contain object-center w-full h-full\"\n-              style={{ maxWidth: \"90%\", height: \"auto\" }}\n-              onClick={() => setShowFullImage(true)}\n-            />\n-            {product.images.length > 1 && (\n-              <>\n-                <button\n-                  onClick={handlePrevImage}\n-                  className=\"absolute left-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\n-                >\n-                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 19l-7-7 7-7\" />\n-                  </svg>\n-                </button>\n-                <button\n-                  onClick={handleNextImage}\n-                  className=\"absolute right-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\n-                >\n-                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 5l7 7-7 7\" />\n-                  </svg>\n-                </button>\n-              </>\n-            )}\n-          </div>\n-          <div className=\"flex gap-4 w-full justify-center mt-10\">\n-            {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\n-              <div \n-                key={index} \n-                className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n-                  currentImageIndex === index ? \"border-black scale-105\" : \"border-gray-200 hover:border-gray-400\"\n-                }`}\n-                onClick={() => setCurrentImageIndex(index)}\n-              >\n-                <Image\n-                  src={img}\n-                  alt={`${product.name} thumbnail ${index + 1}`}\n-                  width={96}\n-                  height={96}\n-                  className=\"object-cover\"\n-                />\n-              </div>\n-            ))}\n-          </div>\n-        </div>\n-\n-        {/* Bên phải: Thông tin sản phẩm */}\n-        <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n-          <div className=\"w-full max-w-xl\">\n-            <h1 className=\"text-2xl font-bold text-center md:text-left mb-2 uppercase text-black\">{product.name}</h1>\n-            <div className=\"text-xl font-semibold mb-4 text-black\">\n-              {(product.price).toLocaleString('vi-VN')} VND\n-            </div>\n-\n-            {isClothing ? (\n-              <div className=\"mb-6\">\n-                <div className=\"relative\">\n-                  <button\n-                    onClick={() => setShowSizeOptions(!showSizeOptions)}\n-                    className=\"w-full px-4 py-3 border border-black text-left flex justify-between items-center select-none transform-none\"\n-                    style={{ userSelect: 'none', transform: 'none' }}\n-                  >\n-                    <span className=\"text-black font-medium\">\n-                      {selectedSize ? `${selectedSize} - Còn ${product[`quantity${selectedSize}` as keyof Product]} sản phẩm` : \"Select a size\"}\n-                    </span>\n-                    <svg \n-                      className=\"w-4 h-4\" \n-                      fill=\"none\" \n-                      stroke=\"currentColor\" \n-                      viewBox=\"0 0 24 24\"\n-                    >\n-                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-                    </svg>\n-                  </button>\n-                  \n-                  {showSizeOptions && (\n-                    <div className=\"absolute z-10 w-full mt-1 bg-white border border-black shadow-lg\">\n-                      {availableSizes.map((size) => {\n-                        const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\n-                        return (\n-                          <button\n-                            key={size}\n-                            onClick={() => {\n-                              setSelectedSize(size);\n-                              setShowSizeOptions(false);\n-                            }}\n-                            disabled={sizeQuantity === 0}\n-                            className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\n-                              sizeQuantity === 0 \n-                                ? \"text-gray-400 cursor-not-allowed\" \n-                                : size === selectedSize \n-                                  ? \"text-black font-bold bg-gray-100\" \n-                                  : \"text-black font-medium\"\n-                            }`}\n-                            style={{ transform: 'none' }}\n-                          >\n-                            {size} - Còn {sizeQuantity} sản phẩm\n-                          </button>\n-                        );\n-                      })}\n-                    </div>\n-                  )}\n-                </div>\n-              </div>\n-            ) : product.category === \"CAP\" ? (\n-              <div className=\"mb-6\">\n-                <p className=\"text-sm text-black\">\n-                  Còn {product.quantityHat} sản phẩm\n-                </p>\n-              </div>\n-            ) : null}\n-\n-            <div className=\"mb-6\">\n-              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n-              <div className=\"flex items-center gap-2\">\n-                <button\n-                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n-                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n-                >\n-                  -\n-                </button>\n-                <input\n-                  type=\"number\"\n-                  min=\"1\"\n-                  value={quantity}\n-                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n-                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\n-                />\n-                <button\n-                  onClick={() => handleQuantityChange(quantity + 1)}\n-                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n-                >\n-                  +\n-                </button>\n-              </div>\n-            </div>\n-\n-            <div className=\"mb-4 text-base\">\n-              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n-            </div>\n-\n-            <div className=\"mb-4 text-xs\">\n-              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\n-              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n-            </div>\n-\n-            <button\n-              className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n-              onClick={handleAddToCart}\n-              disabled={Boolean(isClothing && !selectedSize)}\n-            >\n-              Thêm vào giỏ hàng\n-            </button>\n-\n-            {isClothing && (\n-              <button\n-                onClick={() => setShowSizeGuide(true)}\n-                className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\n-                style={{ transform: 'none' }}\n-              >\n-                <span className=\"group-hover:font-semibold\">Size guide</span>\n-                <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\n-              </button>\n-            )}\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Navigation và các thông tin phụ */}\n-      <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\n-        <div className=\"text-black\">\n-          <span className=\"font-semibold uppercase underline\">{product.category}</span>\n-          {\" / \"}\n-          <span className=\"font-semibold uppercase underline\">{product.name}</span>\n-        </div>\n-        <div>\n-          <button \n-            onClick={() => setShowHelpPanel(true)}\n-            className=\"hover:underline text-black font-semibold uppercase\"\n-          >\n-            Cần giúp đỡ?\n-          </button>\n-        </div>\n-      </div>\n-\n-      {/* Full Image Modal */}\n-      {showFullImage && (\n-        <div \n-          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \n-          onClick={() => setShowFullImage(false)}\n-        >\n-          <div className=\"min-h-screen w-full flex justify-center items-start\">\n-            <Image\n-              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n-              alt={product.name}\n-              width={2000}\n-              height={2000}\n-              quality={100}\n-              className=\"object-contain w-full\"\n-              style={{ height: \"auto\" }}\n-            />\n-          </div>\n-        </div>\n-      )}\n-\n-      {/* Help Panel */}\n-      <HelpPanel isOpen={showHelpPanel} onClose={() => setShowHelpPanel(false)} />\n-\n-      {/* Size Guide Modal */}\n-      {showSizeGuide && (\n-        <div \n-          className=\"fixed inset-0 bg-white/60 backdrop-blur-sm flex items-center justify-center z-50\" \n-          onClick={() => setShowSizeGuide(false)}\n-        >\n-          <div \n-            className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\n-            onClick={e => e.stopPropagation()}\n-          >\n-            <div className=\"flex justify-between items-center mb-4\">\n-              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\n-              <button \n-                onClick={() => setShowSizeGuide(false)}\n-                className=\"text-gray-500 hover:text-black\"\n-              >\n-                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n-                </svg>\n-              </button>\n-            </div>\n-            <div>\n-              <Image\n-                src={product.sizeGuideImage || \"/size-guide.jpg\"}\n-                alt=\"Size Guide\"\n-                width={600}\n-                height={400}\n-                className=\"w-full h-auto rounded-lg\"\n-              />\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-    </div>\n-  );\n+export async function generateMetadata({ params }: { params: { id: string } }) {\r\n+  const product = await getProduct(params.id);\r\n+  return {\r\n+    title: `${product.name} | AISH`,\r\n+    description: product.description,\r\n+  };\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747278599297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,16 @@\n+import { getProduct } from \"@/services/product\";\r\n+\r\n export async function generateMetadata({ params }: { params: { id: string } }) {\r\n   const product = await getProduct(params.id);\r\n   return {\r\n     title: `${product.name} | AISH`,\r\n-    description: product.description,\r\n   };\r\n+}\r\n+\r\n+export default function ProductPage({ params }: { params: { id: string } }) {\r\n+  return (\r\n+    <div>\r\n+      {/* Product detail content will go here */}\r\n+    </div>\r\n+  );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747323094191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,92 @@\n-import { getProduct } from \"@/services/product\";\r\n+import { useLanguage } from \"@/context/LanguageContext\";\r\n \r\n-export async function generateMetadata({ params }: { params: { id: string } }) {\r\n-  const product = await getProduct(params.id);\r\n-  return {\r\n-    title: `${product.name} | AISH`,\r\n+export default function ProductDetailPage() {\r\n+  const { t } = useLanguage();\r\n+\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900\"></div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!product) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <p className=\"text-xl\">{t('product.notFound')}</p>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  const handleAddToCart = () => {\r\n+    if (!product) return;\r\n+    if (!selectedSize) {\r\n+      toast.error(t('product.pleaseSelectSize'));\r\n+      return;\r\n+    }\r\n+    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n+    if (quantity > sizeQuantity) {\r\n+      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\r\n+      return;\r\n+    }\r\n+    // ... existing code ...\r\n+    toast.success(t('product.addedToCart'));\r\n   };\r\n-}\r\n \r\n-export default function ProductPage({ params }: { params: { id: string } }) {\r\n+  const handleQuantityChange = (value: number) => {\r\n+    if (!product || !selectedSize) return;\r\n+    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n+    if (value > sizeQuantity) {\r\n+      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\r\n+      return;\r\n+    }\r\n+    setQuantity(value);\r\n+  };\r\n+\r\n   return (\r\n-    <div>\r\n-      {/* Product detail content will go here */}\r\n+    <div className=\"min-h-screen bg-white flex flex-col\">\r\n+      {/* Breadcrumb */}\r\n+      <div className=\"px-4 py-4 text-sm text-gray-600 mt-16\">\r\n+        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">{t('navbar.home')}</Link>\r\n+        <span className=\"mx-2\">/</span>\r\n+        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{t(`navbar.${product.category.toLowerCase()}`)}</Link>\r\n+        <span className=\"mx-2\">/</span>\r\n+        <span className=\"text-black font-semibold uppercase\">{product.name}</span>\r\n+      </div>\r\n+      // ... existing code ...\r\n+      <span className=\"text-black font-medium\">\r\n+        {selectedSize ? `${selectedSize} - ${t('product.left', { count: product[`quantity${selectedSize}` as keyof Product] })}` : t('product.selectSize')}\r\n+      </span>\r\n+      // ... existing code ...\r\n+      {showSizeOptions && (\r\n+        <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-200 shadow-lg\">\r\n+          {availableSizes.map((size) => {\r\n+            const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n+            return (\r\n+              <button\r\n+                key={size}\r\n+                onClick={() => {\r\n+                  setSelectedSize(size);\r\n+                  setShowSizeOptions(false);\r\n+                }}\r\n+                disabled={sizeQuantity === 0}\r\n+                className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\r\n+                  sizeQuantity === 0 \r\n+                    ? \"text-gray-400 cursor-not-allowed\" \r\n+                    : size === selectedSize \r\n+                      ? \"text-black font-bold bg-gray-100\" \r\n+                      : \"text-black font-medium hover:bg-gray-50\"\r\n+                }`}\r\n+                style={{ transform: 'none' }}\r\n+              >\r\n+                {size} - {t('product.left', { count: sizeQuantity })}\r\n+              </button>\r\n+            );\r\n+          })}\r\n+        </div>\r\n+      )}\r\n+      // ... existing code ...\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747323133882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,92 +1,1 @@\n-import { useLanguage } from \"@/context/LanguageContext\";\r\n-\r\n-export default function ProductDetailPage() {\r\n-  const { t } = useLanguage();\r\n-\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900\"></div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!product) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <p className=\"text-xl\">{t('product.notFound')}</p>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  const handleAddToCart = () => {\r\n-    if (!product) return;\r\n-    if (!selectedSize) {\r\n-      toast.error(t('product.pleaseSelectSize'));\r\n-      return;\r\n-    }\r\n-    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n-    if (quantity > sizeQuantity) {\r\n-      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\r\n-      return;\r\n-    }\r\n-    // ... existing code ...\r\n-    toast.success(t('product.addedToCart'));\r\n-  };\r\n-\r\n-  const handleQuantityChange = (value: number) => {\r\n-    if (!product || !selectedSize) return;\r\n-    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n-    if (value > sizeQuantity) {\r\n-      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\r\n-      return;\r\n-    }\r\n-    setQuantity(value);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col\">\r\n-      {/* Breadcrumb */}\r\n-      <div className=\"px-4 py-4 text-sm text-gray-600 mt-16\">\r\n-        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">{t('navbar.home')}</Link>\r\n-        <span className=\"mx-2\">/</span>\r\n-        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{t(`navbar.${product.category.toLowerCase()}`)}</Link>\r\n-        <span className=\"mx-2\">/</span>\r\n-        <span className=\"text-black font-semibold uppercase\">{product.name}</span>\r\n-      </div>\r\n-      // ... existing code ...\r\n-      <span className=\"text-black font-medium\">\r\n-        {selectedSize ? `${selectedSize} - ${t('product.left', { count: product[`quantity${selectedSize}` as keyof Product] })}` : t('product.selectSize')}\r\n-      </span>\r\n-      // ... existing code ...\r\n-      {showSizeOptions && (\r\n-        <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-200 shadow-lg\">\r\n-          {availableSizes.map((size) => {\r\n-            const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n-            return (\r\n-              <button\r\n-                key={size}\r\n-                onClick={() => {\r\n-                  setSelectedSize(size);\r\n-                  setShowSizeOptions(false);\r\n-                }}\r\n-                disabled={sizeQuantity === 0}\r\n-                className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\r\n-                  sizeQuantity === 0 \r\n-                    ? \"text-gray-400 cursor-not-allowed\" \r\n-                    : size === selectedSize \r\n-                      ? \"text-black font-bold bg-gray-100\" \r\n-                      : \"text-black font-medium hover:bg-gray-50\"\r\n-                }`}\r\n-                style={{ transform: 'none' }}\r\n-              >\r\n-                {size} - {t('product.left', { count: sizeQuantity })}\r\n-              </button>\r\n-            );\r\n-          })}\r\n-        </div>\r\n-      )}\r\n-      // ... existing code ...\r\n-    </div>\r\n-  );\r\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useParams, usePathname } from \"next/navigation\";\nimport { motion } from \"framer-motion\";\nimport { toast } from \"react-hot-toast\";\nimport { useCart } from \"@/context/CartContext\";\nimport { Product } from \"@/types/product\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport HelpPanel from \"@/components/HelpPanel\";\n\nexport default function ProductDetailPage() {\n  const { id } = useParams();\n  const pathname = usePathname();\n  const [product, setProduct] = useState<Product | null>(null);\n  const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n  const [quantity, setQuantity] = useState<number>(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const { addToCart } = useCart();\n  const [showFullImage, setShowFullImage] = useState(false);\n  const [showHelpPanel, setShowHelpPanel] = useState(false);\n  const [showSizeOptions, setShowSizeOptions] = useState(false);\n  const [showSizeGuide, setShowSizeGuide] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await fetch(`/api/products/${id}`);\n        const data = await response.json();\n        if (data.ok) {\n          setProduct(data.product);\n        }\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n        toast.error(\"Failed to load product\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchProduct();\n  }, [id]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900\"></div>\n      </div>\n    );\n  }\n\n  if (!product) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <p className=\"text-xl\">Product not found</p>\n      </div>\n    );\n  }\n\n  const handleAddToCart = () => {\n    if (!product) return;\n\n    if (!selectedSize) {\n      toast.error(\"Vui lòng chọn size\");\n      return;\n    }\n\n    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n    if (quantity > sizeQuantity) {\n      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n      return;\n    }\n\n    // Tạo object chứa thông tin stock cho tất cả các size\n    const stockInfo: { [key: string]: number } = {};\n    product.sizes?.forEach(size => {\n      const quantity = product[`quantity${size}` as keyof Product] as number;\n      stockInfo[size] = quantity;\n    });\n\n    // Thêm sản phẩm vào giỏ hàng với thông tin stock đầy đủ\n    addToCart({\n      id: product._id,\n      name: product.name,\n      price: product.price,\n      image: product.images[0],\n      size: selectedSize,\n      color: product.colors[0] || 'Default',\n      quantity: quantity,\n      cartItemId: Date.now(),\n      stock: stockInfo,\n      availableSizes: product.sizes || [],\n      // Thêm thông tin stock cho size hiện tại\n      currentStock: sizeQuantity\n    });\n\n    toast.success(\"Đã thêm vào giỏ hàng\");\n  };\n\n  const handleQuantityChange = (value: number) => {\n    if (!product || !selectedSize) return;\n    \n    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n    if (value > sizeQuantity) {\n      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n      return;\n    }\n    \n    setQuantity(value);\n  };\n\n  const handlePrevImage = () => {\n    if (!product || !product.images) return;\n    setCurrentImageIndex((currentImageIndex - 1 + product.images.length) % product.images.length);\n  };\n\n  const handleNextImage = () => {\n    if (!product || !product.images) return;\n    setCurrentImageIndex((currentImageIndex + 1) % product.images.length);\n  };\n\n  const isClothing = product.category && product.category !== \"CAP\";\n  const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\n\n  return (\n    <div className=\"min-h-screen bg-white flex flex-col\">\n      {/* Breadcrumb */}\n      <div className=\"px-4 py-2 text-sm text-gray-600\">\n        <Link href=\"/\" className=\"hover:text-black font-semibold uppercase\">Home</Link>\n        <span className=\"mx-2\">/</span>\n        <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:text-black font-semibold uppercase\">{product.category}</Link>\n        <span className=\"mx-2\">/</span>\n        <span className=\"text-black font-semibold uppercase\">{product.name}</span>\n      </div>\n\n      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-12 px-4 gap-8 flex-1\">\n        {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n        <div className=\"flex-1 flex flex-col items-center\">\n          <div className=\"relative w-full flex justify-center items-center mb-8\" style={{height: '450px'}}>\n            <Image\n              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n              alt={product.name}\n              width={450}\n              height={450}\n              quality={100}\n              className=\"object-contain object-center w-full h-full\"\n              style={{ maxWidth: \"90%\", height: \"auto\" }}\n              onClick={() => setShowFullImage(true)}\n            />\n            {product.images.length > 1 && (\n              <>\n                <button\n                  onClick={handlePrevImage}\n                  className=\"absolute left-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 19l-7-7 7-7\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={handleNextImage}\n                  className=\"absolute right-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 5l7 7-7 7\" />\n                  </svg>\n                </button>\n              </>\n            )}\n          </div>\n          <div className=\"flex gap-4 w-full justify-center mt-4\">\n            {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\n              <div \n                key={index} \n                className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n                  currentImageIndex === index ? \"border-black scale-105\" : \"border-gray-200 hover:border-gray-400\"\n                }`}\n                onClick={() => setCurrentImageIndex(index)}\n              >\n                <Image\n                  src={img}\n                  alt={`${product.name} thumbnail ${index + 1}`}\n                  width={96}\n                  height={96}\n                  className=\"object-cover\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Bên phải: Thông tin sản phẩm */}\n        <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n          <div className=\"w-full max-w-xl\">\n            <h1 className=\"text-2xl font-bold text-center md:text-left mb-2 uppercase text-black\">{product.name}</h1>\n            <div className=\"text-xl font-semibold mb-4 text-black\">\n              {(product.price).toLocaleString('vi-VN')} VND\n            </div>\n\n            {isClothing ? (\n              <div className=\"mb-4\">\n                <div className=\"relative\">\n                  <button\n                    onClick={() => setShowSizeOptions(!showSizeOptions)}\n                    className=\"w-64 px-4 py-3 border-2 border-black rounded-md text-left flex justify-between items-center select-none transform-none\"\n                    style={{ userSelect: 'none', transform: 'none' }}\n                  >\n                    <span className=\"text-black font-medium\">\n                      {selectedSize ? `${selectedSize} - Còn ${product[`quantity${selectedSize}` as keyof Product]} sản phẩm` : \"Select a size\"}\n                    </span>\n                    <svg \n                      className=\"w-4 h-4\" \n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </button>\n                  \n                  {showSizeOptions && (\n                    <div className=\"absolute z-10 w-64 mt-1 bg-white border-2 border-black rounded-md shadow-lg\">\n                      {availableSizes.map((size) => {\n                        const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\n                        return (\n                          <button\n                            key={size}\n                            onClick={() => {\n                              setSelectedSize(size);\n                              setShowSizeOptions(false);\n                            }}\n                            disabled={sizeQuantity === 0}\n                            className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\n                              sizeQuantity === 0 \n                                ? \"text-gray-400 cursor-not-allowed\" \n                                : size === selectedSize \n                                  ? \"text-black font-bold bg-gray-100\" \n                                  : \"text-black font-medium hover:bg-gray-50\"\n                            }`}\n                            style={{ transform: 'none' }}\n                          >\n                            {size} - Còn {sizeQuantity} sản phẩm\n                          </button>\n                        );\n                      })}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ) : product.category === \"CAP\" ? (\n              <div className=\"mb-4\">\n                <p className=\"text-sm text-black\">\n                  Còn {product.quantityHat} sản phẩm\n                </p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n              <div className=\"flex items-center gap-2\">\n                <button\n                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n                  className=\"w-8 h-8 border-2 border-black rounded flex items-center justify-center text-black\"\n                >\n                  -\n                </button>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  value={quantity}\n                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n                  className=\"w-12 text-center border-2 border-black rounded py-1 text-black\"\n                />\n                <button\n                  onClick={() => handleQuantityChange(quantity + 1)}\n                  className=\"w-8 h-8 border-2 border-black rounded flex items-center justify-center text-black\"\n                >\n                  +\n                </button>\n              </div>\n            </div>\n\n            <div className=\"mb-4 text-base\">\n              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n            </div>\n\n            <div className=\"mb-4 text-xs\">\n              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\n              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n            </div>\n\n            <button\n              className=\"w-full bg-black text-white py-3 font-bold uppercase rounded hover:bg-gray-900 transition mb-2\"\n              onClick={handleAddToCart}\n              disabled={Boolean(isClothing && !selectedSize)}\n            >\n              Thêm vào giỏ hàng\n            </button>\n\n            {isClothing && (\n              <button\n                onClick={() => setShowSizeGuide(true)}\n                className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\n                style={{ transform: 'none' }}\n              >\n                <span className=\"group-hover:font-semibold\">Size guide</span>\n                <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation và các thông tin phụ */}\n      <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\n        <div className=\"text-black\">\n          <Link href=\"/\" className=\"hover:underline font-semibold uppercase\">Home</Link>\n          {\" / \"}\n          <Link href=\"/products\" className=\"hover:underline font-semibold uppercase\">Products</Link>\n          {\" / \"}\n          <Link href={`/products/${product.category.toLowerCase()}`} className=\"hover:underline font-semibold uppercase\">{product.category}</Link>\n          {\" / \"}\n          <span className=\"font-semibold uppercase\">{product.name}</span>\n        </div>\n        <div>\n          <button \n            onClick={() => setShowHelpPanel(true)}\n            className=\"hover:underline text-black font-semibold uppercase\"\n          >\n            Cần giúp đỡ?\n          </button>\n        </div>\n      </div>\n\n      {/* Full Image Modal */}\n      {showFullImage && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" \n          onClick={() => setShowFullImage(false)}\n        >\n          <div className=\"relative w-full h-full overflow-auto flex justify-center items-center\">\n            <Image\n              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n              alt={product.name}\n              width={1000}\n              height={1000}\n              quality={100}\n              className=\"object-contain w-full h-full\"\n              style={{ maxWidth: \"100%\", height: \"auto\" }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Help Panel */}\n      <HelpPanel isOpen={showHelpPanel} onClose={() => setShowHelpPanel(false)} />\n\n      {/* Size Guide Modal */}\n      {showSizeGuide && (\n        <div \n          className=\"fixed inset-0 bg-white/60 backdrop-blur-sm flex items-center justify-center z-50\" \n          onClick={() => setShowSizeGuide(false)}\n        >\n          <div \n            className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\n            onClick={e => e.stopPropagation()}\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-bold text-left\">Hướng dẫn chọn size</h2>\n              <button \n                onClick={() => setShowSizeGuide(false)}\n                className=\"text-gray-500 hover:text-black\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div>\n              <Image\n                src={product.sizeGuideImage || \"/size-guide.jpg\"}\n                alt=\"Size Guide\"\n                width={600}\n                height={400}\n                className=\"w-full h-auto rounded-lg\"\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "
        }
    ]
}
{
    "sourceFile": "src/app/register/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 48,
            "patches": [
                {
                    "date": 1746959655096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746959664363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,189 +1,1 @@\n-\"use client\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import { useRouter, useSearchParams } from \"next/navigation\";\r\n-import Link from \"next/link\";\r\n-\r\n-export default function RegisterPage() {\r\n-  const router = useRouter();\r\n-  const searchParams = useSearchParams();\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    confirmPassword: \"\",\r\n-    phone: \"\",\r\n-    address: \"\",\r\n-  });\r\n-  const [error, setError] = useState(\"\");\r\n-\r\n-  useEffect(() => {\r\n-    // Lấy email từ URL nếu có\r\n-    const email = searchParams.get(\"email\");\r\n-    if (email) {\r\n-      setFormData(prev => ({ ...prev, email }));\r\n-    }\r\n-  }, [searchParams]);\r\n-\r\n-  const handleSubmit = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError(\"\");\r\n-\r\n-    // Kiểm tra mật khẩu\r\n-    if (formData.password !== formData.confirmPassword) {\r\n-      setError(\"Mật khẩu xác nhận không khớp\");\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const response = await fetch(\"/api/auth/register\", {\r\n-        method: \"POST\",\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-        },\r\n-        body: JSON.stringify({\r\n-          name: formData.name,\r\n-          email: formData.email,\r\n-          password: formData.password,\r\n-          phone: formData.phone,\r\n-          address: formData.address,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await response.json();\r\n-\r\n-      if (response.ok) {\r\n-        // Đăng ký thành công, chuyển đến trang đăng nhập\r\n-        router.push(\"/login?registered=true\");\r\n-      } else {\r\n-        setError(data.error || \"Có lỗi xảy ra khi đăng ký\");\r\n-      }\r\n-    } catch (error) {\r\n-      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n-      <div className=\"max-w-md w-full space-y-8\">\r\n-        <div>\r\n-          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n-            Đăng ký tài khoản\r\n-          </h2>\r\n-        </div>\r\n-        {error && (\r\n-          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\r\n-            {error}\r\n-          </div>\r\n-        )}\r\n-        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n-          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n-            <div>\r\n-              <label htmlFor=\"name\" className=\"sr-only\">\r\n-                Họ tên\r\n-              </label>\r\n-              <input\r\n-                id=\"name\"\r\n-                name=\"name\"\r\n-                type=\"text\"\r\n-                required\r\n-                value={formData.name}\r\n-                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n-                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n-                placeholder=\"Họ tên\"\r\n-              />\r\n-            </div>\r\n-            <div>\r\n-              <label htmlFor=\"email\" className=\"sr-only\">\r\n-                Email\r\n-              </label>\r\n-              <input\r\n-                id=\"email\"\r\n-                name=\"email\"\r\n-                type=\"email\"\r\n-                required\r\n-                value={formData.email}\r\n-                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n-                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n-                placeholder=\"Email\"\r\n-              />\r\n-            </div>\r\n-            <div>\r\n-              <label htmlFor=\"password\" className=\"sr-only\">\r\n-                Mật khẩu\r\n-              </label>\r\n-              <input\r\n-                id=\"password\"\r\n-                name=\"password\"\r\n-                type=\"password\"\r\n-                required\r\n-                value={formData.password}\r\n-                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n-                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n-                placeholder=\"Mật khẩu\"\r\n-              />\r\n-            </div>\r\n-            <div>\r\n-              <label htmlFor=\"confirmPassword\" className=\"sr-only\">\r\n-                Xác nhận mật khẩu\r\n-              </label>\r\n-              <input\r\n-                id=\"confirmPassword\"\r\n-                name=\"confirmPassword\"\r\n-                type=\"password\"\r\n-                required\r\n-                value={formData.confirmPassword}\r\n-                onChange={(e) => setFormData({ ...formData, confirmPassword: e.target.value })}\r\n-                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n-                placeholder=\"Xác nhận mật khẩu\"\r\n-              />\r\n-            </div>\r\n-            <div>\r\n-              <label htmlFor=\"phone\" className=\"sr-only\">\r\n-                Số điện thoại\r\n-              </label>\r\n-              <input\r\n-                id=\"phone\"\r\n-                name=\"phone\"\r\n-                type=\"tel\"\r\n-                value={formData.phone}\r\n-                onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n-                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n-                placeholder=\"Số điện thoại\"\r\n-              />\r\n-            </div>\r\n-            <div>\r\n-              <label htmlFor=\"address\" className=\"sr-only\">\r\n-                Địa chỉ\r\n-              </label>\r\n-              <textarea\r\n-                id=\"address\"\r\n-                name=\"address\"\r\n-                value={formData.address}\r\n-                onChange={(e) => setFormData({ ...formData, address: e.target.value })}\r\n-                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n-                placeholder=\"Địa chỉ\"\r\n-                rows={3}\r\n-              />\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n-            >\r\n-              Đăng ký\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"text-sm text-center\">\r\n-            <Link href=\"/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n-              Đã có tài khoản? Đăng nhập\r\n-            </Link>\r\n-          </div>\r\n-        </form>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1746959861563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,479 @@\n- \n\\ No newline at end of file\n+\"use client\";\r\n+import { useState, useEffect, useRef, useCallback } from \"react\";\r\n+import { useRouter, useSearchParams } from \"next/navigation\";\r\n+import { FcGoogle } from \"react-icons/fc\";\r\n+import { FaApple } from \"react-icons/fa\";\r\n+import { FiEdit2 } from \"react-icons/fi\";\r\n+import { AiOutlineEye, AiOutlineEyeInvisible, AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n+import { motion } from \"framer-motion\";\r\n+\r\n+interface PasswordValidation {\r\n+  hasLength: boolean;\r\n+  hasNumber: boolean;\r\n+  hasSpecialChar: boolean;\r\n+}\r\n+\r\n+interface FormData {\r\n+  email: string;\r\n+  password: string;\r\n+  firstName: string;\r\n+  lastName: string;\r\n+  day: string;\r\n+  month: string;\r\n+  year: string;\r\n+  receiveUpdates: boolean;\r\n+}\r\n+\r\n+interface Touched {\r\n+  [key: string]: boolean;\r\n+}\r\n+\r\n+interface Errors {\r\n+  [key: string]: string;\r\n+}\r\n+\r\n+// Password validation logic\r\n+const validatePassword = (password: string): PasswordValidation => ({\r\n+  hasLength: password.length >= 8,\r\n+  hasNumber: /\\d/.test(password),\r\n+  hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\r\n+});\r\n+\r\n+// Email validation logic\r\n+const validateEmail = (email: string): boolean => {\r\n+  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n+  return emailRegex.test(email);\r\n+};\r\n+\r\n+interface PasswordFieldProps {\r\n+  value: string;\r\n+  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n+  isFocused: boolean;\r\n+  onFocus: () => void;\r\n+  onBlur: () => void;\r\n+  hasError: boolean;\r\n+}\r\n+\r\n+// Password Field Component\r\n+const PasswordField: React.FC<PasswordFieldProps> = ({ value, onChange, isFocused, onFocus, onBlur, hasError }) => {\r\n+  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n+  const [passwordValidation, setPasswordValidation] = useState<PasswordValidation>(validatePassword(value));\r\n+\r\n+  useEffect(() => {\r\n+    setPasswordValidation(validatePassword(value));\r\n+  }, [value]);\r\n+\r\n+  const handlePasswordBlur = useCallback(() => {\r\n+    setIsPasswordTouched(true);\r\n+    onBlur();\r\n+  }, [onBlur]);\r\n+\r\n+  const isValid = Object.values(passwordValidation).every(Boolean);\r\n+  const showError = hasError || (isPasswordTouched && !isValid);\r\n+\r\n+  return (\r\n+    <div className=\"relative w-full mt-2\">\r\n+      <div className=\"relative\">\r\n+        <motion.label\r\n+          className={`absolute text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+          initial={{ \r\n+            top: value ? \"5px\" : \"50%\", \r\n+            left: value ? \"4px\" : \"12px\",\r\n+            scale: value ? 0.75 : 1,\r\n+            translateY: value ? \"0\" : \"-50%\",\r\n+          }}\r\n+          animate={{\r\n+            top: isFocused || value ? \"5px\" : \"50%\",\r\n+            left: isFocused || value ? \"4px\" : \"12px\",\r\n+            scale: isFocused || value ? 0.75 : 1,\r\n+            translateY: isFocused || value ? \"0\" : \"-50%\",\r\n+          }}\r\n+          transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+        >\r\n+          PASSWORD*\r\n+        </motion.label>\r\n+        <input\r\n+          type={isPasswordVisible ? \"text\" : \"password\"}\r\n+          name=\"password\"\r\n+          value={value}\r\n+          onChange={onChange}\r\n+          onFocus={onFocus}\r\n+          onBlur={handlePasswordBlur}\r\n+          className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n+              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+        />\r\n+        <div\r\n+          className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n+          onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n+        >\r\n+          {isPasswordVisible ? (\r\n+            <AiOutlineEye className=\"text-gray-500\" />\r\n+          ) : (\r\n+            <AiOutlineEyeInvisible className=\"text-gray-500\" />\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+      \r\n+      {/* Password Requirements */}\r\n+      <div className=\"mt-1 space-y-1 pl-1\">\r\n+        {[\r\n+          { key: \"hasLength\", text: \"Please enter at least 8 characters\" },\r\n+          { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n+          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n+        ].map((req) => (\r\n+          <div key={req.key} className=\"flex items-center gap-2\">\r\n+            {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n+              <AiOutlineCheck className=\"text-green-500 min-w-[16px]\" />\r\n+            ) : (\r\n+              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[16px]`} />\r\n+            )}\r\n+            <p className={`text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n+              {req.text}\r\n+            </p>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+interface DateOfBirthSectionProps {\r\n+  formData: FormData;\r\n+  handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n+  errors: Errors;\r\n+  touched: Touched;\r\n+  setTouched: React.Dispatch<React.SetStateAction<Touched>>;\r\n+}\r\n+\r\n+// Date of Birth Section Component\r\n+const DateOfBirthSection: React.FC<DateOfBirthSectionProps> = ({ formData, handleInputChange, errors, touched, setTouched }) => {\r\n+  const handleDateInput = (e: React.ChangeEvent<HTMLInputElement>, type: string) => {\r\n+    const { value } = e.target;\r\n+    let newValue = value.replace(/\\D/g, \"\"); // Chỉ cho phép nhập số\r\n+\r\n+    // Giới hạn giá trị nhập\r\n+    if (type === \"month\" && Number(newValue) > 12) {\r\n+      newValue = \"12\";\r\n+    } else if (type === \"day\" && Number(newValue) > 31) {\r\n+      newValue = \"31\";\r\n+    } else if (type === \"year\" && Number(newValue) > 9999) {\r\n+      newValue = \"9999\";\r\n+    }\r\n+\r\n+    // Cập nhật giá trị\r\n+    e.target.value = newValue;\r\n+    handleInputChange(e);\r\n+  };\r\n+\r\n+  const isDateTouched = touched.day || touched.month || touched.year;\r\n+  const isDateValid = formData.day && formData.month && formData.year;\r\n+  const showError = isDateTouched && !isDateValid;\r\n+\r\n+  return (\r\n+    <>\r\n+      <label className=\"text-gray-500 text-xs font-semibold mt-2\">DATE OF BIRTH</label>\r\n+      <div className=\"flex gap-2\">\r\n+        {[\"month\", \"day\", \"year\"].map((type) => (\r\n+          <div key={type} className=\"w-1/3 flex flex-col relative\">\r\n+            <motion.label\r\n+              className={`absolute text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+              initial={{ \r\n+                top: \"50%\", \r\n+                left: \"12px\",\r\n+                scale: 1,\r\n+                translateY: \"-50%\",\r\n+              }}\r\n+              animate={{\r\n+                top: formData[type as keyof FormData] || touched[type] ? \"5px\" : \"50%\",\r\n+                left: formData[type as keyof FormData] || touched[type] ? \"4px\" : \"12px\",\r\n+                scale: formData[type as keyof FormData] || touched[type] ? 0.75 : 1,\r\n+                translateY: formData[type as keyof FormData] || touched[type] ? \"0\" : \"-35%\",\r\n+              }}\r\n+              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+            >\r\n+              {type.toUpperCase()}*\r\n+            </motion.label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name={type}\r\n+              placeholder={type === \"month\" ? \"MM\" : type === \"day\" ? \"DD\" : \"YYYY\"}\r\n+              value={formData[type as keyof FormData]}\r\n+              onChange={(e) => handleDateInput(e, type)}\r\n+              onFocus={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n+              onBlur={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n+              className={`w-full pl-3.5 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                ${showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+              maxLength={type === \"year\" ? 4 : 2}\r\n+            />\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+      {showError && (\r\n+        <p className=\"text-red-400 text-xs -mt-2.5 space-y-1 pl-1\">Please enter a valid date of birth</p>\r\n+      )}\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+// Main Register Page Component\r\n+const RegisterPage = () => {\r\n+  const router = useRouter();\r\n+  const searchParams = useSearchParams();\r\n+  const emailFromLogin = searchParams.get(\"email\") || \"\";\r\n+  const emailInputRef = useRef<HTMLInputElement>(null);\r\n+  const [isEmailEditable, setIsEmailEditable] = useState(false);\r\n+  const [isEditingIcon, setIsEditingIcon] = useState(false);\r\n+  const [isFocused, setIsFocused] = useState<{ [key: string]: boolean }>({});\r\n+  const [touched, setTouched] = useState<Touched>({});\r\n+  const [formData, setFormData] = useState<FormData>({\r\n+    email: emailFromLogin,\r\n+    password: \"\",\r\n+    firstName: \"\",\r\n+    lastName: \"\",\r\n+    day: \"\",\r\n+    month: \"\",\r\n+    year: \"\",\r\n+    receiveUpdates: false,\r\n+  });\r\n+  const [errors, setErrors] = useState<Errors>({});\r\n+\r\n+  useEffect(() => {\r\n+    if (emailFromLogin) {\r\n+      setFormData((prev) => ({ ...prev, email: emailFromLogin }));\r\n+    }\r\n+  }, [emailFromLogin]);\r\n+\r\n+  const handleFocus = useCallback((field: string) => {\r\n+    setIsFocused((prev) => ({ ...prev, [field]: true }));\r\n+  }, []);\r\n+\r\n+  const handleBlur = useCallback((field: string) => {\r\n+    setIsFocused((prev) => ({ ...prev, [field]: false }));\r\n+    setTouched((prev) => ({ ...prev, [field]: true }));\r\n+    const newErrors = validateForm(formData);\r\n+    setErrors(newErrors);\r\n+  }, [formData]);\r\n+\r\n+  const handleEditEmail = useCallback(() => {\r\n+    setIsEmailEditable(true);\r\n+    setIsEditingIcon(true);\r\n+    setTimeout(() => {\r\n+      emailInputRef.current?.focus();\r\n+      setIsEditingIcon(false);\r\n+    }, 500);\r\n+  }, []);\r\n+\r\n+  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const { name, value, type, checked } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: type === \"checkbox\" ? checked : value,\r\n+    }));\r\n+    if (touched[name]) {\r\n+      setErrors((prev) => ({ ...prev, [name]: undefined }));\r\n+    }\r\n+  }, [touched]);\r\n+\r\n+  const validateForm = (formData: FormData): Errors => {\r\n+    const errors: Errors = {};\r\n+    const passwordValid = validatePassword(formData.password);\r\n+\r\n+    if (!formData.email || !validateEmail(formData.email)) {\r\n+      errors.email = \"Please enter a valid email address\";\r\n+    }\r\n+    if (!formData.password || !Object.values(passwordValid).every(Boolean)) {\r\n+      errors.password = \"Please enter a valid password\";\r\n+    }\r\n+    if (!formData.firstName) {\r\n+      errors.firstName = \"Please enter your first name\";\r\n+    }\r\n+    if (!formData.lastName) {\r\n+      errors.lastName = \"Please enter your last name\";\r\n+    }\r\n+    if (!formData.day || !formData.month || !formData.year) {\r\n+      errors.date = \"Please enter your full date of birth\";\r\n+    }\r\n+    if (!formData.receiveUpdates) {\r\n+      errors.receiveUpdates = \"You must agree to receive updates\";\r\n+    }\r\n+\r\n+    return errors;\r\n+  };\r\n+\r\n+  const handleContinue = useCallback(() => {\r\n+    const newTouched = Object.keys(formData).reduce((acc, key) => {\r\n+      acc[key] = true;\r\n+      return acc;\r\n+    }, {} as Touched);\r\n+    setTouched(newTouched);\r\n+    const newErrors = validateForm(formData);\r\n+    setErrors(newErrors);\r\n+    if (Object.keys(newErrors).length === 0) router.push(\"/dashboard\");\r\n+  }, [formData, router]);\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n+      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n+        MY AISH ACCOUNT\r\n+      </h1>\r\n+      <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n+        <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n+          <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n+        </button>\r\n+        <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n+          <FaApple className=\"text-3xl mr-2\" /> CONTINUE WITH APPLE\r\n+        </button>\r\n+        <div className=\"flex items-center justify-center mt-3\">\r\n+          <span className=\"text-black font-semibold\">OR</span>\r\n+        </div>\r\n+        <div className=\"flex justify-center w-full\">\r\n+          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n+            CONTINUE WITH YOUR EMAIL ADDRESS\r\n+          </h2>\r\n+        </div>\r\n+        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n+          <p className=\"text-black text-2xs font-semibold\">\r\n+          SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n+          </p>\r\n+        </div>\r\n+\r\n+        {/* Email Field */}\r\n+        <div className=\"relative w-full mt-2\">\r\n+          <motion.label\r\n+            className={`absolute text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+            initial={{ \r\n+              top: formData.email ? \"5px\" : \"50%\", \r\n+              left: formData.email ? \"4px\" : \"12px\",\r\n+              scale: formData.email ? 0.75 : 1,\r\n+              translateY: formData.email ? \"0\" : \"-50%\",\r\n+            }}\r\n+            animate={{\r\n+              top: isFocused.email || formData.email ? \"5px\" : \"50%\",\r\n+              left: isFocused.email || formData.email ? \"4px\" : \"12px\",\r\n+              scale: isFocused.email || formData.email ? 0.75 : 1,\r\n+              translateY: isFocused.email || formData.email ? \"0\" : \"-50%\",\r\n+            }}\r\n+            transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+          >\r\n+            EMAIL*\r\n+          </motion.label>\r\n+          <div className=\"relative\">\r\n+            <input\r\n+              ref={emailInputRef}\r\n+              type=\"text\"\r\n+              name=\"email\"\r\n+              value={formData.email}\r\n+              onChange={handleInputChange}\r\n+              onFocus={() => handleFocus(\"email\")}\r\n+              onBlur={() => handleBlur(\"email\")}\r\n+              className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+              readOnly={!isEmailEditable}\r\n+            />\r\n+            <motion.div\r\n+              animate={{ rotate: isEditingIcon ? 20 : 0 }}\r\n+              transition={{ duration: 0.3, yoyo: 3 }}\r\n+              className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n+              onClick={handleEditEmail}\r\n+            >\r\n+              <FiEdit2 className=\"text-gray-500\" />\r\n+            </motion.div>\r\n+          </div>\r\n+          {errors.email && touched.email && (\r\n+            <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Password Field */}\r\n+        <PasswordField \r\n+          value={formData.password}\r\n+          onChange={handleInputChange}\r\n+          isFocused={isFocused.password}\r\n+          onFocus={() => handleFocus(\"password\")}\r\n+          onBlur={() => handleBlur(\"password\")}\r\n+          hasError={!!errors.password && touched.password}\r\n+        />\r\n+\r\n+        {/* First Name and Last Name Fields */}\r\n+        {\"firstName lastName\".split(\" \").map((field) => (\r\n+          <div key={field} className=\"relative w-full mt-2\">\r\n+            <motion.label\r\n+              className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+              initial={{ \r\n+                top: formData[field as keyof FormData] ? \"5px\" : \"50%\", \r\n+                left: formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n+                scale: formData[field as keyof FormData] ? 0.75 : 1,\r\n+                translateY: formData[field as keyof FormData] ? \"0\" : \"-50%\",\r\n+              }}\r\n+              animate={{\r\n+                top: isFocused[field] || formData[field as keyof FormData] ? \"5px\" : \"50%\",\r\n+                left: isFocused[field] || formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n+                scale: isFocused[field] || formData[field as keyof FormData] ? 0.75 : 1,\r\n+                translateY: isFocused[field] || formData[field as keyof FormData] ? \"0\" : \"-90%\",\r\n+              }}\r\n+              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+            >\r\n+              {field === \"firstName\" ? \"FIRST NAME*\" : \"LAST NAME*\"}\r\n+            </motion.label>\r\n+            <div className=\"relative\">\r\n+              <input\r\n+                type=\"text\"\r\n+                name={field}  \r\n+                value={formData[field as keyof FormData]}\r\n+                onChange={handleInputChange}\r\n+                onFocus={() => handleFocus(field)}\r\n+                onBlur={() => handleBlur(field)}\r\n+                className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                  ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+              />\r\n+            </div>\r\n+            {errors[field] && touched[field] && (\r\n+              <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n+            )}\r\n+          </div>\r\n+        ))}\r\n+\r\n+        {/* Date of Birth Section */}\r\n+        <DateOfBirthSection \r\n+          formData={formData} \r\n+          handleInputChange={handleInputChange} \r\n+          errors={errors} \r\n+          touched={touched} \r\n+          setTouched={setTouched}\r\n+        />\r\n+\r\n+        {/* Checkbox for Updates */}\r\n+        <div className=\"mt-2 w-full\">\r\n+          <label className=\"flex items-start space-x-2\">\r\n+            <input\r\n+              type=\"checkbox\"\r\n+              name=\"receiveUpdates\"\r\n+              checked={formData.receiveUpdates}\r\n+              onChange={handleInputChange}\r\n+              className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n+            />\r\n+            <span className=\"text-sm text-gray-700 flex-1\">\r\n+              I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+            </span>\r\n+          </label>\r\n+          {errors.receiveUpdates && touched.receiveUpdates && (\r\n+            <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Continue Button */}\r\n+        <button onClick={handleContinue} className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition\">\r\n+          CONTINUE\r\n+        </button>\r\n+        {/* Dòng JOIN MY AISH */}\r\n+        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n+          JOIN MY AISH\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default RegisterPage; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1746959874713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   [key: string]: boolean;\r\n }\r\n \r\n interface Errors {\r\n-  [key: string]: string;\r\n+  [key: string]: string | undefined;\r\n }\r\n \r\n // Password validation logic\r\n const validatePassword = (password: string): PasswordValidation => ({\r\n@@ -198,9 +198,9 @@\n             <input\r\n               type=\"text\"\r\n               name={type}\r\n               placeholder={type === \"month\" ? \"MM\" : type === \"day\" ? \"DD\" : \"YYYY\"}\r\n-              value={formData[type as keyof FormData]}\r\n+              value={formData[type as keyof FormData] || \"\"}\r\n               onChange={(e) => handleDateInput(e, type)}\r\n               onFocus={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n               onBlur={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n               className={`w-full pl-3.5 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n"
                },
                {
                    "date": 1746959884011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -420,9 +420,9 @@\n             <div className=\"relative\">\r\n               <input\r\n                 type=\"text\"\r\n                 name={field}  \r\n-                value={formData[field as keyof FormData]}\r\n+                value={formData[field as keyof FormData] || \"\"}\r\n                 onChange={handleInputChange}\r\n                 onFocus={() => handleFocus(field)}\r\n                 onBlur={() => handleBlur(field)}\r\n                 className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n"
                },
                {
                    "date": 1746959892956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -450,9 +450,15 @@\n             <input\r\n               type=\"checkbox\"\r\n               name=\"receiveUpdates\"\r\n               checked={formData.receiveUpdates}\r\n-              onChange={handleInputChange}\r\n+              onChange={(e) => {\r\n+                const { name, checked } = e.target;\r\n+                setFormData((prev) => ({\r\n+                  ...prev,\r\n+                  [name]: checked,\r\n+                }));\r\n+              }}\r\n               className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n             />\r\n             <span className=\"text-sm text-gray-700 flex-1\">\r\n               I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n"
                },
                {
                    "date": 1746959899563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,8 +275,16 @@\n       setErrors((prev) => ({ ...prev, [name]: undefined }));\r\n     }\r\n   }, [touched]);\r\n \r\n+  const handleCheckboxChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const { name, checked } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: checked,\r\n+    }));\r\n+  }, []);\r\n+\r\n   const validateForm = (formData: FormData): Errors => {\r\n     const errors: Errors = {};\r\n     const passwordValid = validatePassword(formData.password);\r\n \r\n@@ -450,15 +458,9 @@\n             <input\r\n               type=\"checkbox\"\r\n               name=\"receiveUpdates\"\r\n               checked={formData.receiveUpdates}\r\n-              onChange={(e) => {\r\n-                const { name, checked } = e.target;\r\n-                setFormData((prev) => ({\r\n-                  ...prev,\r\n-                  [name]: checked,\r\n-                }));\r\n-              }}\r\n+              onChange={handleCheckboxChange}\r\n               className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n             />\r\n             <span className=\"text-sm text-gray-700 flex-1\">\r\n               I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n"
                },
                {
                    "date": 1746959996342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,9 @@\n             <input\r\n               type=\"text\"\r\n               name={type}\r\n               placeholder={type === \"month\" ? \"MM\" : type === \"day\" ? \"DD\" : \"YYYY\"}\r\n-              value={formData[type as keyof FormData] || \"\"}\r\n+              value={(formData[type as keyof FormData] as string) || \"\"}\r\n               onChange={(e) => handleDateInput(e, type)}\r\n               onFocus={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n               onBlur={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n               className={`w-full pl-3.5 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n@@ -428,9 +428,9 @@\n             <div className=\"relative\">\r\n               <input\r\n                 type=\"text\"\r\n                 name={field}  \r\n-                value={formData[field as keyof FormData] || \"\"}\r\n+                value={(formData[field as keyof FormData] as string) || \"\"}\r\n                 onChange={handleInputChange}\r\n                 onFocus={() => handleFocus(field)}\r\n                 onBlur={() => handleBlur(field)}\r\n                 className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n"
                },
                {
                    "date": 1746960169422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,8 +237,11 @@\n     year: \"\",\r\n     receiveUpdates: false,\r\n   });\r\n   const [errors, setErrors] = useState<Errors>({});\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const [isExistingUser, setIsExistingUser] = useState(false);\r\n \r\n   useEffect(() => {\r\n     if (emailFromLogin) {\r\n       setFormData((prev) => ({ ...prev, email: emailFromLogin }));\r\n"
                },
                {
                    "date": 1746960176622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -323,8 +323,19 @@\n     setErrors(newErrors);\r\n     if (Object.keys(newErrors).length === 0) router.push(\"/dashboard\");\r\n   }, [formData, router]);\r\n \r\n+  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const newEmail = e.target.value;\r\n+    setFormData((prev) => ({ ...prev, email: newEmail }));\r\n+    setErrors((prev) => ({ ...prev, email: undefined }));\r\n+    setIsExistingUser(false);\r\n+\r\n+    if (validateEmail(newEmail)) {\r\n+      setIsExistingUser(true);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n@@ -375,9 +386,9 @@\n               ref={emailInputRef}\r\n               type=\"text\"\r\n               name=\"email\"\r\n               value={formData.email}\r\n-              onChange={handleInputChange}\r\n+              onChange={handleEmailChange}\r\n               onFocus={() => handleFocus(\"email\")}\r\n               onBlur={() => handleBlur(\"email\")}\r\n               className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n                 ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n@@ -397,16 +408,20 @@\n           )}\r\n         </div>\r\n \r\n         {/* Password Field */}\r\n-        <PasswordField \r\n-          value={formData.password}\r\n-          onChange={handleInputChange}\r\n-          isFocused={isFocused.password}\r\n-          onFocus={() => handleFocus(\"password\")}\r\n-          onBlur={() => handleBlur(\"password\")}\r\n-          hasError={!!errors.password && touched.password}\r\n-        />\r\n+        {isExistingUser && (\r\n+          <div className=\"relative w-full mt-4\">\r\n+            <PasswordField \r\n+              value={password}\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              isFocused={isFocused.password}\r\n+              onFocus={() => handleFocus(\"password\")}\r\n+              onBlur={() => handleBlur(\"password\")}\r\n+              hasError={!!errors.password && touched.password}\r\n+            />\r\n+          </div>\r\n+        )}\r\n \r\n         {/* First Name and Last Name Fields */}\r\n         {\"firstName lastName\".split(\" \").map((field) => (\r\n           <div key={field} className=\"relative w-full mt-2\">\r\n"
                },
                {
                    "date": 1746960187812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,10 +320,21 @@\n     }, {} as Touched);\r\n     setTouched(newTouched);\r\n     const newErrors = validateForm(formData);\r\n     setErrors(newErrors);\r\n-    if (Object.keys(newErrors).length === 0) router.push(\"/dashboard\");\r\n-  }, [formData, router]);\r\n+    if (Object.keys(newErrors).length === 0) {\r\n+      if (isExistingUser) {\r\n+        if (!password) {\r\n+          setErrors((prev) => ({ ...prev, password: \"Please enter your password\" }));\r\n+          return;\r\n+        }\r\n+        // TODO: Xử lý đăng nhập với email và password\r\n+        router.push(\"/dashboard\");\r\n+      } else {\r\n+        router.push(`/register?email=${formData.email}`);\r\n+      }\r\n+    }\r\n+  }, [formData, router, isExistingUser, password]);\r\n \r\n   const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     const newEmail = e.target.value;\r\n     setFormData((prev) => ({ ...prev, email: newEmail }));\r\n"
                },
                {
                    "date": 1746961626423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,516 +1,126 @@\n \"use client\";\r\n-import { useState, useEffect, useRef, useCallback } from \"react\";\r\n+import { useState, useEffect } from \"react\";\r\n import { useRouter, useSearchParams } from \"next/navigation\";\r\n-import { FcGoogle } from \"react-icons/fc\";\r\n-import { FaApple } from \"react-icons/fa\";\r\n-import { FiEdit2 } from \"react-icons/fi\";\r\n-import { AiOutlineEye, AiOutlineEyeInvisible, AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n-import { motion } from \"framer-motion\";\r\n \r\n-interface PasswordValidation {\r\n-  hasLength: boolean;\r\n-  hasNumber: boolean;\r\n-  hasSpecialChar: boolean;\r\n-}\r\n-\r\n-interface FormData {\r\n-  email: string;\r\n-  password: string;\r\n-  firstName: string;\r\n-  lastName: string;\r\n-  day: string;\r\n-  month: string;\r\n-  year: string;\r\n-  receiveUpdates: boolean;\r\n-}\r\n-\r\n-interface Touched {\r\n-  [key: string]: boolean;\r\n-}\r\n-\r\n-interface Errors {\r\n-  [key: string]: string | undefined;\r\n-}\r\n-\r\n-// Password validation logic\r\n-const validatePassword = (password: string): PasswordValidation => ({\r\n-  hasLength: password.length >= 8,\r\n-  hasNumber: /\\d/.test(password),\r\n-  hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\r\n-});\r\n-\r\n-// Email validation logic\r\n-const validateEmail = (email: string): boolean => {\r\n-  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n-  return emailRegex.test(email);\r\n-};\r\n-\r\n-interface PasswordFieldProps {\r\n-  value: string;\r\n-  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n-  isFocused: boolean;\r\n-  onFocus: () => void;\r\n-  onBlur: () => void;\r\n-  hasError: boolean;\r\n-}\r\n-\r\n-// Password Field Component\r\n-const PasswordField: React.FC<PasswordFieldProps> = ({ value, onChange, isFocused, onFocus, onBlur, hasError }) => {\r\n-  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n-  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n-  const [passwordValidation, setPasswordValidation] = useState<PasswordValidation>(validatePassword(value));\r\n-\r\n-  useEffect(() => {\r\n-    setPasswordValidation(validatePassword(value));\r\n-  }, [value]);\r\n-\r\n-  const handlePasswordBlur = useCallback(() => {\r\n-    setIsPasswordTouched(true);\r\n-    onBlur();\r\n-  }, [onBlur]);\r\n-\r\n-  const isValid = Object.values(passwordValidation).every(Boolean);\r\n-  const showError = hasError || (isPasswordTouched && !isValid);\r\n-\r\n-  return (\r\n-    <div className=\"relative w-full mt-2\">\r\n-      <div className=\"relative\">\r\n-        <motion.label\r\n-          className={`absolute text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-          initial={{ \r\n-            top: value ? \"5px\" : \"50%\", \r\n-            left: value ? \"4px\" : \"12px\",\r\n-            scale: value ? 0.75 : 1,\r\n-            translateY: value ? \"0\" : \"-50%\",\r\n-          }}\r\n-          animate={{\r\n-            top: isFocused || value ? \"5px\" : \"50%\",\r\n-            left: isFocused || value ? \"4px\" : \"12px\",\r\n-            scale: isFocused || value ? 0.75 : 1,\r\n-            translateY: isFocused || value ? \"0\" : \"-50%\",\r\n-          }}\r\n-          transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-        >\r\n-          PASSWORD*\r\n-        </motion.label>\r\n-        <input\r\n-          type={isPasswordVisible ? \"text\" : \"password\"}\r\n-          name=\"password\"\r\n-          value={value}\r\n-          onChange={onChange}\r\n-          onFocus={onFocus}\r\n-          onBlur={handlePasswordBlur}\r\n-          className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n-              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-        />\r\n-        <div\r\n-          className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n-          onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n-        >\r\n-          {isPasswordVisible ? (\r\n-            <AiOutlineEye className=\"text-gray-500\" />\r\n-          ) : (\r\n-            <AiOutlineEyeInvisible className=\"text-gray-500\" />\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-      \r\n-      {/* Password Requirements */}\r\n-      <div className=\"mt-1 space-y-1 pl-1\">\r\n-        {[\r\n-          { key: \"hasLength\", text: \"Please enter at least 8 characters\" },\r\n-          { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n-          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n-        ].map((req) => (\r\n-          <div key={req.key} className=\"flex items-center gap-2\">\r\n-            {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n-              <AiOutlineCheck className=\"text-green-500 min-w-[16px]\" />\r\n-            ) : (\r\n-              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[16px]`} />\r\n-            )}\r\n-            <p className={`text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n-              {req.text}\r\n-            </p>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-interface DateOfBirthSectionProps {\r\n-  formData: FormData;\r\n-  handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n-  errors: Errors;\r\n-  touched: Touched;\r\n-  setTouched: React.Dispatch<React.SetStateAction<Touched>>;\r\n-}\r\n-\r\n-// Date of Birth Section Component\r\n-const DateOfBirthSection: React.FC<DateOfBirthSectionProps> = ({ formData, handleInputChange, errors, touched, setTouched }) => {\r\n-  const handleDateInput = (e: React.ChangeEvent<HTMLInputElement>, type: string) => {\r\n-    const { value } = e.target;\r\n-    let newValue = value.replace(/\\D/g, \"\"); // Chỉ cho phép nhập số\r\n-\r\n-    // Giới hạn giá trị nhập\r\n-    if (type === \"month\" && Number(newValue) > 12) {\r\n-      newValue = \"12\";\r\n-    } else if (type === \"day\" && Number(newValue) > 31) {\r\n-      newValue = \"31\";\r\n-    } else if (type === \"year\" && Number(newValue) > 9999) {\r\n-      newValue = \"9999\";\r\n-    }\r\n-\r\n-    // Cập nhật giá trị\r\n-    e.target.value = newValue;\r\n-    handleInputChange(e);\r\n-  };\r\n-\r\n-  const isDateTouched = touched.day || touched.month || touched.year;\r\n-  const isDateValid = formData.day && formData.month && formData.year;\r\n-  const showError = isDateTouched && !isDateValid;\r\n-\r\n-  return (\r\n-    <>\r\n-      <label className=\"text-gray-500 text-xs font-semibold mt-2\">DATE OF BIRTH</label>\r\n-      <div className=\"flex gap-2\">\r\n-        {[\"month\", \"day\", \"year\"].map((type) => (\r\n-          <div key={type} className=\"w-1/3 flex flex-col relative\">\r\n-            <motion.label\r\n-              className={`absolute text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-              initial={{ \r\n-                top: \"50%\", \r\n-                left: \"12px\",\r\n-                scale: 1,\r\n-                translateY: \"-50%\",\r\n-              }}\r\n-              animate={{\r\n-                top: formData[type as keyof FormData] || touched[type] ? \"5px\" : \"50%\",\r\n-                left: formData[type as keyof FormData] || touched[type] ? \"4px\" : \"12px\",\r\n-                scale: formData[type as keyof FormData] || touched[type] ? 0.75 : 1,\r\n-                translateY: formData[type as keyof FormData] || touched[type] ? \"0\" : \"-35%\",\r\n-              }}\r\n-              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-            >\r\n-              {type.toUpperCase()}*\r\n-            </motion.label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name={type}\r\n-              placeholder={type === \"month\" ? \"MM\" : type === \"day\" ? \"DD\" : \"YYYY\"}\r\n-              value={(formData[type as keyof FormData] as string) || \"\"}\r\n-              onChange={(e) => handleDateInput(e, type)}\r\n-              onFocus={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n-              onBlur={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n-              className={`w-full pl-3.5 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-                ${showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-              maxLength={type === \"year\" ? 4 : 2}\r\n-            />\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-      {showError && (\r\n-        <p className=\"text-red-400 text-xs -mt-2.5 space-y-1 pl-1\">Please enter a valid date of birth</p>\r\n-      )}\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-// Main Register Page Component\r\n-const RegisterPage = () => {\r\n+export default function RegisterPage() {\r\n   const router = useRouter();\r\n   const searchParams = useSearchParams();\r\n-  const emailFromLogin = searchParams.get(\"email\") || \"\";\r\n-  const emailInputRef = useRef<HTMLInputElement>(null);\r\n-  const [isEmailEditable, setIsEmailEditable] = useState(false);\r\n-  const [isEditingIcon, setIsEditingIcon] = useState(false);\r\n-  const [isFocused, setIsFocused] = useState<{ [key: string]: boolean }>({});\r\n-  const [touched, setTouched] = useState<Touched>({});\r\n-  const [formData, setFormData] = useState<FormData>({\r\n-    email: emailFromLogin,\r\n+  const [form, setForm] = useState({\r\n+    email: \"\",\r\n+    name: \"\",\r\n     password: \"\",\r\n-    firstName: \"\",\r\n-    lastName: \"\",\r\n-    day: \"\",\r\n-    month: \"\",\r\n-    year: \"\",\r\n-    receiveUpdates: false,\r\n+    confirmPassword: \"\",\r\n+    phone: \"\",\r\n+    address: \"\",\r\n   });\r\n-  const [errors, setErrors] = useState<Errors>({});\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n-  const [isExistingUser, setIsExistingUser] = useState(false);\r\n+  const [error, setError] = useState(\"\");\r\n+  const [success, setSuccess] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    if (emailFromLogin) {\r\n-      setFormData((prev) => ({ ...prev, email: emailFromLogin }));\r\n-    }\r\n-  }, [emailFromLogin]);\r\n+    const email = searchParams.get(\"email\");\r\n+    if (email) setForm(f => ({ ...f, email }));\r\n+  }, [searchParams]);\r\n \r\n-  const handleFocus = useCallback((field: string) => {\r\n-    setIsFocused((prev) => ({ ...prev, [field]: true }));\r\n-  }, []);\r\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    setForm({ ...form, [e.target.name]: e.target.value });\r\n+  };\r\n \r\n-  const handleBlur = useCallback((field: string) => {\r\n-    setIsFocused((prev) => ({ ...prev, [field]: false }));\r\n-    setTouched((prev) => ({ ...prev, [field]: true }));\r\n-    const newErrors = validateForm(formData);\r\n-    setErrors(newErrors);\r\n-  }, [formData]);\r\n-\r\n-  const handleEditEmail = useCallback(() => {\r\n-    setIsEmailEditable(true);\r\n-    setIsEditingIcon(true);\r\n-    setTimeout(() => {\r\n-      emailInputRef.current?.focus();\r\n-      setIsEditingIcon(false);\r\n-    }, 500);\r\n-  }, []);\r\n-\r\n-  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    const { name, value, type, checked } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: type === \"checkbox\" ? checked : value,\r\n-    }));\r\n-    if (touched[name]) {\r\n-      setErrors((prev) => ({ ...prev, [name]: undefined }));\r\n+  const handleSubmit = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError(\"\");\r\n+    if (!form.email || !form.name || !form.password) {\r\n+      setError(\"Please fill all required fields\");\r\n+      return;\r\n     }\r\n-  }, [touched]);\r\n-\r\n-  const handleCheckboxChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    const { name, checked } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: checked,\r\n-    }));\r\n-  }, []);\r\n-\r\n-  const validateForm = (formData: FormData): Errors => {\r\n-    const errors: Errors = {};\r\n-    const passwordValid = validatePassword(formData.password);\r\n-\r\n-    if (!formData.email || !validateEmail(formData.email)) {\r\n-      errors.email = \"Please enter a valid email address\";\r\n+    if (form.password !== form.confirmPassword) {\r\n+      setError(\"Passwords do not match\");\r\n+      return;\r\n     }\r\n-    if (!formData.password || !Object.values(passwordValid).every(Boolean)) {\r\n-      errors.password = \"Please enter a valid password\";\r\n-    }\r\n-    if (!formData.firstName) {\r\n-      errors.firstName = \"Please enter your first name\";\r\n-    }\r\n-    if (!formData.lastName) {\r\n-      errors.lastName = \"Please enter your last name\";\r\n-    }\r\n-    if (!formData.day || !formData.month || !formData.year) {\r\n-      errors.date = \"Please enter your full date of birth\";\r\n-    }\r\n-    if (!formData.receiveUpdates) {\r\n-      errors.receiveUpdates = \"You must agree to receive updates\";\r\n-    }\r\n-\r\n-    return errors;\r\n-  };\r\n-\r\n-  const handleContinue = useCallback(() => {\r\n-    const newTouched = Object.keys(formData).reduce((acc, key) => {\r\n-      acc[key] = true;\r\n-      return acc;\r\n-    }, {} as Touched);\r\n-    setTouched(newTouched);\r\n-    const newErrors = validateForm(formData);\r\n-    setErrors(newErrors);\r\n-    if (Object.keys(newErrors).length === 0) {\r\n-      if (isExistingUser) {\r\n-        if (!password) {\r\n-          setErrors((prev) => ({ ...prev, password: \"Please enter your password\" }));\r\n-          return;\r\n-        }\r\n-        // TODO: Xử lý đăng nhập với email và password\r\n-        router.push(\"/dashboard\");\r\n+    try {\r\n+      const res = await fetch(\"/api/auth/register\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({\r\n+          email: form.email,\r\n+          password: form.password,\r\n+          name: form.name,\r\n+          phone: form.phone,\r\n+          address: form.address,\r\n+        }),\r\n+      });\r\n+      const data = await res.json();\r\n+      if (res.ok) {\r\n+        setSuccess(true);\r\n+        setTimeout(() => router.push(\"/login\"), 1500);\r\n       } else {\r\n-        router.push(`/register?email=${formData.email}`);\r\n+        setError(data.error || \"Registration failed\");\r\n       }\r\n+    } catch {\r\n+      setError(\"Registration failed\");\r\n     }\r\n-  }, [formData, router, isExistingUser, password]);\r\n-\r\n-  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    const newEmail = e.target.value;\r\n-    setFormData((prev) => ({ ...prev, email: newEmail }));\r\n-    setErrors((prev) => ({ ...prev, email: undefined }));\r\n-    setIsExistingUser(false);\r\n-\r\n-    if (validateEmail(newEmail)) {\r\n-      setIsExistingUser(true);\r\n-    }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n-      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n-        MY AISH ACCOUNT\r\n-      </h1>\r\n-      <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n-        <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n-          <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n-        </button>\r\n-        <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n-          <FaApple className=\"text-3xl mr-2\" /> CONTINUE WITH APPLE\r\n-        </button>\r\n-        <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">OR</span>\r\n-        </div>\r\n-        <div className=\"flex justify-center w-full\">\r\n-          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n-            CONTINUE WITH YOUR EMAIL ADDRESS\r\n-          </h2>\r\n-        </div>\r\n-        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n-          <p className=\"text-black text-2xs font-semibold\">\r\n-          SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n-          </p>\r\n-        </div>\r\n-\r\n-        {/* Email Field */}\r\n-        <div className=\"relative w-full mt-2\">\r\n-          <motion.label\r\n-            className={`absolute text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-            initial={{ \r\n-              top: formData.email ? \"5px\" : \"50%\", \r\n-              left: formData.email ? \"4px\" : \"12px\",\r\n-              scale: formData.email ? 0.75 : 1,\r\n-              translateY: formData.email ? \"0\" : \"-50%\",\r\n-            }}\r\n-            animate={{\r\n-              top: isFocused.email || formData.email ? \"5px\" : \"50%\",\r\n-              left: isFocused.email || formData.email ? \"4px\" : \"12px\",\r\n-              scale: isFocused.email || formData.email ? 0.75 : 1,\r\n-              translateY: isFocused.email || formData.email ? \"0\" : \"-50%\",\r\n-            }}\r\n-            transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-          >\r\n-            EMAIL*\r\n-          </motion.label>\r\n-          <div className=\"relative\">\r\n-            <input\r\n-              ref={emailInputRef}\r\n-              type=\"text\"\r\n-              name=\"email\"\r\n-              value={formData.email}\r\n-              onChange={handleEmailChange}\r\n-              onFocus={() => handleFocus(\"email\")}\r\n-              onBlur={() => handleBlur(\"email\")}\r\n-              className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-                ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-              readOnly={!isEmailEditable}\r\n-            />\r\n-            <motion.div\r\n-              animate={{ rotate: isEditingIcon ? 20 : 0 }}\r\n-              transition={{ duration: 0.3, yoyo: 3 }}\r\n-              className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n-              onClick={handleEditEmail}\r\n-            >\r\n-              <FiEdit2 className=\"text-gray-500\" />\r\n-            </motion.div>\r\n-          </div>\r\n-          {errors.email && touched.email && (\r\n-            <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Password Field */}\r\n-        {isExistingUser && (\r\n-          <div className=\"relative w-full mt-4\">\r\n-            <PasswordField \r\n-              value={password}\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              isFocused={isFocused.password}\r\n-              onFocus={() => handleFocus(\"password\")}\r\n-              onBlur={() => handleBlur(\"password\")}\r\n-              hasError={!!errors.password && touched.password}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* First Name and Last Name Fields */}\r\n-        {\"firstName lastName\".split(\" \").map((field) => (\r\n-          <div key={field} className=\"relative w-full mt-2\">\r\n-            <motion.label\r\n-              className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-              initial={{ \r\n-                top: formData[field as keyof FormData] ? \"5px\" : \"50%\", \r\n-                left: formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n-                scale: formData[field as keyof FormData] ? 0.75 : 1,\r\n-                translateY: formData[field as keyof FormData] ? \"0\" : \"-50%\",\r\n-              }}\r\n-              animate={{\r\n-                top: isFocused[field] || formData[field as keyof FormData] ? \"5px\" : \"50%\",\r\n-                left: isFocused[field] || formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n-                scale: isFocused[field] || formData[field as keyof FormData] ? 0.75 : 1,\r\n-                translateY: isFocused[field] || formData[field as keyof FormData] ? \"0\" : \"-90%\",\r\n-              }}\r\n-              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-            >\r\n-              {field === \"firstName\" ? \"FIRST NAME*\" : \"LAST NAME*\"}\r\n-            </motion.label>\r\n-            <div className=\"relative\">\r\n-              <input\r\n-                type=\"text\"\r\n-                name={field}  \r\n-                value={(formData[field as keyof FormData] as string) || \"\"}\r\n-                onChange={handleInputChange}\r\n-                onFocus={() => handleFocus(field)}\r\n-                onBlur={() => handleBlur(field)}\r\n-                className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-                  ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-              />\r\n-            </div>\r\n-            {errors[field] && touched[field] && (\r\n-              <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n-            )}\r\n-          </div>\r\n\\ No newline at end of file\n-        ))}\r\n-\r\n-        {/* Date of Birth Section */}\r\n-        <DateOfBirthSection \r\n-          formData={formData} \r\n-          handleInputChange={handleInputChange} \r\n-          errors={errors} \r\n-          touched={touched} \r\n-          setTouched={setTouched}\r\n+    <div className=\"min-h-screen flex flex-col items-center justify-center bg-white\">\r\n+      <h1 className=\"text-3xl font-bold mb-6\">Register</h1>\r\n+      <form onSubmit={handleSubmit} className=\"w-full max-w-md space-y-4 bg-gray-50 p-6 rounded shadow\">\r\n+        <input\r\n+          type=\"email\"\r\n+          name=\"email\"\r\n+          value={form.email}\r\n+          onChange={handleChange}\r\n+          placeholder=\"Email\"\r\n+          className=\"w-full p-2 border rounded\"\r\n+          required\r\n+          disabled={!!form.email}\r\n         />\r\n-\r\n-        {/* Checkbox for Updates */}\r\n-        <div className=\"mt-2 w-full\">\r\n-          <label className=\"flex items-start space-x-2\">\r\n-            <input\r\n-              type=\"checkbox\"\r\n-              name=\"receiveUpdates\"\r\n-              checked={formData.receiveUpdates}\r\n-              onChange={handleCheckboxChange}\r\n-              className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n-            />\r\n-            <span className=\"text-sm text-gray-700 flex-1\">\r\n-              I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n-            </span>\r\n-          </label>\r\n-          {errors.receiveUpdates && touched.receiveUpdates && (\r\n-            <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Continue Button */}\r\n-        <button onClick={handleContinue} className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition\">\r\n-          CONTINUE\r\n-        </button>\r\n-        {/* Dòng JOIN MY AISH */}\r\n-        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n-          JOIN MY AISH\r\n-        </div>\r\n-      </div>\r\n+        <input\r\n+          type=\"text\"\r\n+          name=\"name\"\r\n+          value={form.name}\r\n+          onChange={handleChange}\r\n+          placeholder=\"Full name\"\r\n+          className=\"w-full p-2 border rounded\"\r\n+          required\r\n+        />\r\n+        <input\r\n+          type=\"password\"\r\n+          name=\"password\"\r\n+          value={form.password}\r\n+          onChange={handleChange}\r\n+          placeholder=\"Password\"\r\n+          className=\"w-full p-2 border rounded\"\r\n+          required\r\n+        />\r\n+        <input\r\n+          type=\"password\"\r\n+          name=\"confirmPassword\"\r\n+          value={form.confirmPassword}\r\n+          onChange={handleChange}\r\n+          placeholder=\"Confirm password\"\r\n+          className=\"w-full p-2 border rounded\"\r\n+          required\r\n+        />\r\n+        <input\r\n+          type=\"text\"\r\n+          name=\"phone\"\r\n+          value={form.phone}\r\n+          onChange={handleChange}\r\n+          placeholder=\"Phone (optional)\"\r\n+          className=\"w-full p-2 border rounded\"\r\n+        />\r\n+        <input\r\n+          type=\"text\"\r\n+          name=\"address\"\r\n+          value={form.address}\r\n+          onChange={handleChange}\r\n+          placeholder=\"Address (optional)\"\r\n+          className=\"w-full p-2 border rounded\"\r\n+        />\r\n+        {error && <div className=\"text-red-500 text-sm\">{error}</div>}\r\n+        {success && <div className=\"text-green-600 text-sm\">Registration successful! Redirecting...</div>}\r\n+        <button type=\"submit\" className=\"w-full bg-black text-white py-2 rounded font-semibold\">Register</button>\r\n+      </form>\r\n     </div>\r\n   );\r\n-};\r\n-\r\n-export default RegisterPage; \n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1746961819593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,126 +1,516 @@\n \"use client\";\r\n-import { useState, useEffect } from \"react\";\r\n+import { useState, useEffect, useRef, useCallback } from \"react\";\r\n import { useRouter, useSearchParams } from \"next/navigation\";\r\n+import { FcGoogle } from \"react-icons/fc\";\r\n+import { FaApple } from \"react-icons/fa\";\r\n+import { FiEdit2 } from \"react-icons/fi\";\r\n+import { AiOutlineEye, AiOutlineEyeInvisible, AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n+import { motion } from \"framer-motion\";\r\n \r\n-export default function RegisterPage() {\r\n+interface PasswordValidation {\r\n+  hasLength: boolean;\r\n+  hasNumber: boolean;\r\n+  hasSpecialChar: boolean;\r\n+}\r\n+\r\n+interface FormData {\r\n+  email: string;\r\n+  password: string;\r\n+  firstName: string;\r\n+  lastName: string;\r\n+  day: string;\r\n+  month: string;\r\n+  year: string;\r\n+  receiveUpdates: boolean;\r\n+}\r\n+\r\n+interface Touched {\r\n+  [key: string]: boolean;\r\n+}\r\n+\r\n+interface Errors {\r\n+  [key: string]: string | undefined;\r\n+}\r\n+\r\n+// Password validation logic\r\n+const validatePassword = (password: string): PasswordValidation => ({\r\n+  hasLength: password.length >= 8,\r\n+  hasNumber: /\\d/.test(password),\r\n+  hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\r\n+});\r\n+\r\n+// Email validation logic\r\n+const validateEmail = (email: string): boolean => {\r\n+  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n+  return emailRegex.test(email);\r\n+};\r\n+\r\n+interface PasswordFieldProps {\r\n+  value: string;\r\n+  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n+  isFocused: boolean;\r\n+  onFocus: () => void;\r\n+  onBlur: () => void;\r\n+  hasError: boolean;\r\n+}\r\n+\r\n+// Password Field Component\r\n+const PasswordField: React.FC<PasswordFieldProps> = ({ value, onChange, isFocused, onFocus, onBlur, hasError }) => {\r\n+  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n+  const [passwordValidation, setPasswordValidation] = useState<PasswordValidation>(validatePassword(value));\r\n+\r\n+  useEffect(() => {\r\n+    setPasswordValidation(validatePassword(value));\r\n+  }, [value]);\r\n+\r\n+  const handlePasswordBlur = useCallback(() => {\r\n+    setIsPasswordTouched(true);\r\n+    onBlur();\r\n+  }, [onBlur]);\r\n+\r\n+  const isValid = Object.values(passwordValidation).every(Boolean);\r\n+  const showError = hasError || (isPasswordTouched && !isValid);\r\n+\r\n+  return (\r\n+    <div className=\"relative w-full mt-2\">\r\n+      <div className=\"relative\">\r\n+        <motion.label\r\n+          className={`absolute text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+          initial={{ \r\n+            top: value ? \"5px\" : \"50%\", \r\n+            left: value ? \"4px\" : \"12px\",\r\n+            scale: value ? 0.75 : 1,\r\n+            translateY: value ? \"0\" : \"-50%\",\r\n+          }}\r\n+          animate={{\r\n+            top: isFocused || value ? \"5px\" : \"50%\",\r\n+            left: isFocused || value ? \"4px\" : \"12px\",\r\n+            scale: isFocused || value ? 0.75 : 1,\r\n+            translateY: isFocused || value ? \"0\" : \"-50%\",\r\n+          }}\r\n+          transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+        >\r\n+          PASSWORD*\r\n+        </motion.label>\r\n+        <input\r\n+          type={isPasswordVisible ? \"text\" : \"password\"}\r\n+          name=\"password\"\r\n+          value={value}\r\n+          onChange={onChange}\r\n+          onFocus={onFocus}\r\n+          onBlur={handlePasswordBlur}\r\n+          className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+            ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n+              showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+        />\r\n+        <div\r\n+          className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n+          onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n+        >\r\n+          {isPasswordVisible ? (\r\n+            <AiOutlineEye className=\"text-gray-500\" />\r\n+          ) : (\r\n+            <AiOutlineEyeInvisible className=\"text-gray-500\" />\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+      \r\n+      {/* Password Requirements */}\r\n+      <div className=\"mt-1 space-y-1 pl-1\">\r\n+        {[\r\n+          { key: \"hasLength\", text: \"Please enter at least 8 characters\" },\r\n+          { key: \"hasNumber\", text: \"Please enter at least one number\" },\r\n+          { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n\\ No newline at end of file\n+        ].map((req) => (\r\n+          <div key={req.key} className=\"flex items-center gap-2\">\r\n+            {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n+              <AiOutlineCheck className=\"text-green-500 min-w-[16px]\" />\r\n+            ) : (\r\n+              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[16px]`} />\r\n+            )}\r\n+            <p className={`text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n+              {req.text}\r\n+            </p>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+interface DateOfBirthSectionProps {\r\n+  formData: FormData;\r\n+  handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n+  errors: Errors;\r\n+  touched: Touched;\r\n+  setTouched: React.Dispatch<React.SetStateAction<Touched>>;\r\n+}\r\n+\r\n+// Date of Birth Section Component\r\n+const DateOfBirthSection: React.FC<DateOfBirthSectionProps> = ({ formData, handleInputChange, errors, touched, setTouched }) => {\r\n+  const handleDateInput = (e: React.ChangeEvent<HTMLInputElement>, type: string) => {\r\n+    const { value } = e.target;\r\n+    let newValue = value.replace(/\\D/g, \"\"); // Chỉ cho phép nhập số\r\n+\r\n+    // Giới hạn giá trị nhập\r\n+    if (type === \"month\" && Number(newValue) > 12) {\r\n+      newValue = \"12\";\r\n+    } else if (type === \"day\" && Number(newValue) > 31) {\r\n+      newValue = \"31\";\r\n+    } else if (type === \"year\" && Number(newValue) > 9999) {\r\n+      newValue = \"9999\";\r\n+    }\r\n+\r\n+    // Cập nhật giá trị\r\n+    e.target.value = newValue;\r\n+    handleInputChange(e);\r\n+  };\r\n+\r\n+  const isDateTouched = touched.day || touched.month || touched.year;\r\n+  const isDateValid = formData.day && formData.month && formData.year;\r\n+  const showError = isDateTouched && !isDateValid;\r\n+\r\n+  return (\r\n+    <>\r\n+      <label className=\"text-gray-500 text-xs font-semibold mt-2\">DATE OF BIRTH</label>\r\n+      <div className=\"flex gap-2\">\r\n+        {[\"month\", \"day\", \"year\"].map((type) => (\r\n+          <div key={type} className=\"w-1/3 flex flex-col relative\">\r\n+            <motion.label\r\n+              className={`absolute text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+              initial={{ \r\n+                top: \"50%\", \r\n+                left: \"12px\",\r\n+                scale: 1,\r\n+                translateY: \"-50%\",\r\n+              }}\r\n+              animate={{\r\n+                top: formData[type as keyof FormData] || touched[type] ? \"5px\" : \"50%\",\r\n+                left: formData[type as keyof FormData] || touched[type] ? \"4px\" : \"12px\",\r\n+                scale: formData[type as keyof FormData] || touched[type] ? 0.75 : 1,\r\n+                translateY: formData[type as keyof FormData] || touched[type] ? \"0\" : \"-35%\",\r\n+              }}\r\n+              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+            >\r\n+              {type.toUpperCase()}*\r\n+            </motion.label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name={type}\r\n+              placeholder={type === \"month\" ? \"MM\" : type === \"day\" ? \"DD\" : \"YYYY\"}\r\n+              value={(formData[type as keyof FormData] as string) || \"\"}\r\n+              onChange={(e) => handleDateInput(e, type)}\r\n+              onFocus={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n+              onBlur={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n+              className={`w-full pl-3.5 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                ${showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+              maxLength={type === \"year\" ? 4 : 2}\r\n+            />\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+      {showError && (\r\n+        <p className=\"text-red-400 text-xs -mt-2.5 space-y-1 pl-1\">Please enter a valid date of birth</p>\r\n+      )}\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+// Main Register Page Component\r\n+const RegisterPage = () => {\r\n   const router = useRouter();\r\n   const searchParams = useSearchParams();\r\n-  const [form, setForm] = useState({\r\n-    email: \"\",\r\n-    name: \"\",\r\n+  const emailFromLogin = searchParams.get(\"email\") || \"\";\r\n+  const emailInputRef = useRef<HTMLInputElement>(null);\r\n+  const [isEmailEditable, setIsEmailEditable] = useState(false);\r\n+  const [isEditingIcon, setIsEditingIcon] = useState(false);\r\n+  const [isFocused, setIsFocused] = useState<{ [key: string]: boolean }>({});\r\n+  const [touched, setTouched] = useState<Touched>({});\r\n+  const [formData, setFormData] = useState<FormData>({\r\n+    email: emailFromLogin,\r\n     password: \"\",\r\n-    confirmPassword: \"\",\r\n-    phone: \"\",\r\n-    address: \"\",\r\n+    firstName: \"\",\r\n+    lastName: \"\",\r\n+    day: \"\",\r\n+    month: \"\",\r\n+    year: \"\",\r\n+    receiveUpdates: false,\r\n   });\r\n-  const [error, setError] = useState(\"\");\r\n-  const [success, setSuccess] = useState(false);\r\n+  const [errors, setErrors] = useState<Errors>({});\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const [isExistingUser, setIsExistingUser] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    const email = searchParams.get(\"email\");\r\n-    if (email) setForm(f => ({ ...f, email }));\r\n-  }, [searchParams]);\r\n+    if (emailFromLogin) {\r\n+      setFormData((prev) => ({ ...prev, email: emailFromLogin }));\r\n+    }\r\n+  }, [emailFromLogin]);\r\n \r\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    setForm({ ...form, [e.target.name]: e.target.value });\r\n-  };\r\n+  const handleFocus = useCallback((field: string) => {\r\n+    setIsFocused((prev) => ({ ...prev, [field]: true }));\r\n+  }, []);\r\n \r\n-  const handleSubmit = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError(\"\");\r\n-    if (!form.email || !form.name || !form.password) {\r\n-      setError(\"Please fill all required fields\");\r\n-      return;\r\n+  const handleBlur = useCallback((field: string) => {\r\n+    setIsFocused((prev) => ({ ...prev, [field]: false }));\r\n+    setTouched((prev) => ({ ...prev, [field]: true }));\r\n+    const newErrors = validateForm(formData);\r\n+    setErrors(newErrors);\r\n+  }, [formData]);\r\n+\r\n+  const handleEditEmail = useCallback(() => {\r\n+    setIsEmailEditable(true);\r\n+    setIsEditingIcon(true);\r\n+    setTimeout(() => {\r\n+      emailInputRef.current?.focus();\r\n+      setIsEditingIcon(false);\r\n+    }, 500);\r\n+  }, []);\r\n+\r\n+  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const { name, value, type, checked } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: type === \"checkbox\" ? checked : value,\r\n+    }));\r\n+    if (touched[name]) {\r\n+      setErrors((prev) => ({ ...prev, [name]: undefined }));\r\n     }\r\n-    if (form.password !== form.confirmPassword) {\r\n-      setError(\"Passwords do not match\");\r\n-      return;\r\n+  }, [touched]);\r\n+\r\n+  const handleCheckboxChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const { name, checked } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: checked,\r\n+    }));\r\n+  }, []);\r\n+\r\n+  const validateForm = (formData: FormData): Errors => {\r\n+    const errors: Errors = {};\r\n+    const passwordValid = validatePassword(formData.password);\r\n+\r\n+    if (!formData.email || !validateEmail(formData.email)) {\r\n+      errors.email = \"Please enter a valid email address\";\r\n     }\r\n-    try {\r\n-      const res = await fetch(\"/api/auth/register\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({\r\n-          email: form.email,\r\n-          password: form.password,\r\n-          name: form.name,\r\n-          phone: form.phone,\r\n-          address: form.address,\r\n-        }),\r\n-      });\r\n-      const data = await res.json();\r\n-      if (res.ok) {\r\n-        setSuccess(true);\r\n-        setTimeout(() => router.push(\"/login\"), 1500);\r\n+    if (!formData.password || !Object.values(passwordValid).every(Boolean)) {\r\n+      errors.password = \"Please enter a valid password\";\r\n+    }\r\n+    if (!formData.firstName) {\r\n+      errors.firstName = \"Please enter your first name\";\r\n+    }\r\n+    if (!formData.lastName) {\r\n+      errors.lastName = \"Please enter your last name\";\r\n+    }\r\n+    if (!formData.day || !formData.month || !formData.year) {\r\n+      errors.date = \"Please enter your full date of birth\";\r\n+    }\r\n+    if (!formData.receiveUpdates) {\r\n+      errors.receiveUpdates = \"You must agree to receive updates\";\r\n+    }\r\n+\r\n+    return errors;\r\n+  };\r\n+\r\n+  const handleContinue = useCallback(() => {\r\n+    const newTouched = Object.keys(formData).reduce((acc, key) => {\r\n+      acc[key] = true;\r\n+      return acc;\r\n+    }, {} as Touched);\r\n+    setTouched(newTouched);\r\n+    const newErrors = validateForm(formData);\r\n+    setErrors(newErrors);\r\n+    if (Object.keys(newErrors).length === 0) {\r\n+      if (isExistingUser) {\r\n+        if (!password) {\r\n+          setErrors((prev) => ({ ...prev, password: \"Please enter your password\" }));\r\n+          return;\r\n+        }\r\n+        // TODO: Xử lý đăng nhập với email và password\r\n+        router.push(\"/dashboard\");\r\n       } else {\r\n-        setError(data.error || \"Registration failed\");\r\n+        router.push(`/register?email=${formData.email}`);\r\n       }\r\n-    } catch {\r\n-      setError(\"Registration failed\");\r\n     }\r\n+  }, [formData, router, isExistingUser, password]);\r\n+\r\n+  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const newEmail = e.target.value;\r\n+    setFormData((prev) => ({ ...prev, email: newEmail }));\r\n+    setErrors((prev) => ({ ...prev, email: undefined }));\r\n+    setIsExistingUser(false);\r\n+\r\n+    if (validateEmail(newEmail)) {\r\n+      setIsExistingUser(true);\r\n+    }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen flex flex-col items-center justify-center bg-white\">\r\n-      <h1 className=\"text-3xl font-bold mb-6\">Register</h1>\r\n-      <form onSubmit={handleSubmit} className=\"w-full max-w-md space-y-4 bg-gray-50 p-6 rounded shadow\">\r\n-        <input\r\n-          type=\"email\"\r\n-          name=\"email\"\r\n-          value={form.email}\r\n-          onChange={handleChange}\r\n-          placeholder=\"Email\"\r\n-          className=\"w-full p-2 border rounded\"\r\n-          required\r\n-          disabled={!!form.email}\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n+      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n+        MY AISH ACCOUNT\r\n+      </h1>\r\n+      <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n+        <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n+          <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n+        </button>\r\n+        <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n+          <FaApple className=\"text-3xl mr-2\" /> CONTINUE WITH APPLE\r\n+        </button>\r\n+        <div className=\"flex items-center justify-center mt-3\">\r\n+          <span className=\"text-black font-semibold\">OR</span>\r\n+        </div>\r\n+        <div className=\"flex justify-center w-full\">\r\n+          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n+            CONTINUE WITH YOUR EMAIL ADDRESS\r\n+          </h2>\r\n+        </div>\r\n+        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n+          <p className=\"text-black text-2xs font-semibold\">\r\n+          SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n+          </p>\r\n+        </div>\r\n+\r\n+        {/* Email Field */}\r\n+        <div className=\"relative w-full mt-2\">\r\n+          <motion.label\r\n+            className={`absolute text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+            initial={{ \r\n+              top: formData.email ? \"5px\" : \"50%\", \r\n+              left: formData.email ? \"4px\" : \"12px\",\r\n+              scale: formData.email ? 0.75 : 1,\r\n+              translateY: formData.email ? \"0\" : \"-50%\",\r\n+            }}\r\n+            animate={{\r\n+              top: isFocused.email || formData.email ? \"5px\" : \"50%\",\r\n+              left: isFocused.email || formData.email ? \"4px\" : \"12px\",\r\n+              scale: isFocused.email || formData.email ? 0.75 : 1,\r\n+              translateY: isFocused.email || formData.email ? \"0\" : \"-50%\",\r\n+            }}\r\n+            transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+          >\r\n+            EMAIL*\r\n+          </motion.label>\r\n+          <div className=\"relative\">\r\n+            <input\r\n+              ref={emailInputRef}\r\n+              type=\"text\"\r\n+              name=\"email\"\r\n+              value={formData.email}\r\n+              onChange={handleEmailChange}\r\n+              onFocus={() => handleFocus(\"email\")}\r\n+              onBlur={() => handleBlur(\"email\")}\r\n+              className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+              readOnly={!isEmailEditable}\r\n+            />\r\n+            <motion.div\r\n+              animate={{ rotate: isEditingIcon ? 20 : 0 }}\r\n+              transition={{ duration: 0.3, yoyo: 3 }}\r\n+              className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n+              onClick={handleEditEmail}\r\n+            >\r\n+              <FiEdit2 className=\"text-gray-500\" />\r\n+            </motion.div>\r\n+          </div>\r\n+          {errors.email && touched.email && (\r\n+            <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Password Field */}\r\n+        {isExistingUser && (\r\n+          <div className=\"relative w-full mt-4\">\r\n+            <PasswordField \r\n+              value={password}\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              isFocused={isFocused.password}\r\n+              onFocus={() => handleFocus(\"password\")}\r\n+              onBlur={() => handleBlur(\"password\")}\r\n+              hasError={!!errors.password && touched.password}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* First Name and Last Name Fields */}\r\n+        {\"firstName lastName\".split(\" \").map((field) => (\r\n+          <div key={field} className=\"relative w-full mt-2\">\r\n+            <motion.label\r\n+              className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+              initial={{ \r\n+                top: formData[field as keyof FormData] ? \"5px\" : \"50%\", \r\n+                left: formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n+                scale: formData[field as keyof FormData] ? 0.75 : 1,\r\n+                translateY: formData[field as keyof FormData] ? \"0\" : \"-50%\",\r\n+              }}\r\n+              animate={{\r\n+                top: isFocused[field] || formData[field as keyof FormData] ? \"5px\" : \"50%\",\r\n+                left: isFocused[field] || formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n+                scale: isFocused[field] || formData[field as keyof FormData] ? 0.75 : 1,\r\n+                translateY: isFocused[field] || formData[field as keyof FormData] ? \"0\" : \"-90%\",\r\n+              }}\r\n+              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+            >\r\n+              {field === \"firstName\" ? \"FIRST NAME*\" : \"LAST NAME*\"}\r\n+            </motion.label>\r\n+            <div className=\"relative\">\r\n+              <input\r\n+                type=\"text\"\r\n+                name={field}  \r\n+                value={(formData[field as keyof FormData] as string) || \"\"}\r\n+                onChange={handleInputChange}\r\n+                onFocus={() => handleFocus(field)}\r\n+                onBlur={() => handleBlur(field)}\r\n+                className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                  ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+              />\r\n+            </div>\r\n+            {errors[field] && touched[field] && (\r\n+              <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n+            )}\r\n+          </div>\r\n+        ))}\r\n+\r\n+        {/* Date of Birth Section */}\r\n+        <DateOfBirthSection \r\n+          formData={formData} \r\n+          handleInputChange={handleInputChange} \r\n+          errors={errors} \r\n+          touched={touched} \r\n+          setTouched={setTouched}\r\n         />\r\n-        <input\r\n-          type=\"text\"\r\n-          name=\"name\"\r\n-          value={form.name}\r\n-          onChange={handleChange}\r\n-          placeholder=\"Full name\"\r\n-          className=\"w-full p-2 border rounded\"\r\n-          required\r\n-        />\r\n-        <input\r\n-          type=\"password\"\r\n-          name=\"password\"\r\n-          value={form.password}\r\n-          onChange={handleChange}\r\n-          placeholder=\"Password\"\r\n-          className=\"w-full p-2 border rounded\"\r\n-          required\r\n-        />\r\n-        <input\r\n-          type=\"password\"\r\n-          name=\"confirmPassword\"\r\n-          value={form.confirmPassword}\r\n-          onChange={handleChange}\r\n-          placeholder=\"Confirm password\"\r\n-          className=\"w-full p-2 border rounded\"\r\n-          required\r\n-        />\r\n-        <input\r\n-          type=\"text\"\r\n-          name=\"phone\"\r\n-          value={form.phone}\r\n-          onChange={handleChange}\r\n-          placeholder=\"Phone (optional)\"\r\n-          className=\"w-full p-2 border rounded\"\r\n-        />\r\n-        <input\r\n-          type=\"text\"\r\n-          name=\"address\"\r\n-          value={form.address}\r\n-          onChange={handleChange}\r\n-          placeholder=\"Address (optional)\"\r\n-          className=\"w-full p-2 border rounded\"\r\n-        />\r\n-        {error && <div className=\"text-red-500 text-sm\">{error}</div>}\r\n-        {success && <div className=\"text-green-600 text-sm\">Registration successful! Redirecting...</div>}\r\n-        <button type=\"submit\" className=\"w-full bg-black text-white py-2 rounded font-semibold\">Register</button>\r\n-      </form>\r\n+\r\n+        {/* Checkbox for Updates */}\r\n+        <div className=\"mt-2 w-full\">\r\n+          <label className=\"flex items-start space-x-2\">\r\n+            <input\r\n+              type=\"checkbox\"\r\n+              name=\"receiveUpdates\"\r\n+              checked={formData.receiveUpdates}\r\n+              onChange={handleCheckboxChange}\r\n+              className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n+            />\r\n+            <span className=\"text-sm text-gray-700 flex-1\">\r\n+              I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+            </span>\r\n+          </label>\r\n+          {errors.receiveUpdates && touched.receiveUpdates && (\r\n+            <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Continue Button */}\r\n+        <button onClick={handleContinue} className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition\">\r\n+          CONTINUE\r\n+        </button>\r\n+        {/* Dòng JOIN MY AISH */}\r\n+        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n+          JOIN MY AISH\r\n+        </div>\r\n+      </div>\r\n     </div>\r\n   );\r\n-} \n+};\r\n+\r\n+export default RegisterPage; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1746961908433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,29 +312,44 @@\n \r\n     return errors;\r\n   };\r\n \r\n-  const handleContinue = useCallback(() => {\r\n+  const handleContinue = async () => {\r\n     const newTouched = Object.keys(formData).reduce((acc, key) => {\r\n       acc[key] = true;\r\n       return acc;\r\n     }, {} as Touched);\r\n     setTouched(newTouched);\r\n     const newErrors = validateForm(formData);\r\n     setErrors(newErrors);\r\n     if (Object.keys(newErrors).length === 0) {\r\n-      if (isExistingUser) {\r\n-        if (!password) {\r\n-          setErrors((prev) => ({ ...prev, password: \"Please enter your password\" }));\r\n-          return;\r\n+      // Gửi dữ liệu về API đăng ký\r\n+      try {\r\n+        const res = await fetch(\"/api/auth/register\", {\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify({\r\n+            email: formData.email,\r\n+            password: formData.password,\r\n+            name: formData.firstName + ' ' + formData.lastName,\r\n+            day: formData.day,\r\n+            month: formData.month,\r\n+            year: formData.year,\r\n+            receiveUpdates: formData.receiveUpdates,\r\n+          }),\r\n+        });\r\n+        const data = await res.json();\r\n+        if (res.ok) {\r\n+          // Đăng ký thành công, chuyển về login\r\n+          router.push(\"/login?registered=1\");\r\n+        } else {\r\n+          setErrors({ ...newErrors, api: data.error || \"Registration failed\" });\r\n         }\r\n-        // TODO: Xử lý đăng nhập với email và password\r\n-        router.push(\"/dashboard\");\r\n-      } else {\r\n-        router.push(`/register?email=${formData.email}`);\r\n+      } catch {\r\n+        setErrors({ ...newErrors, api: \"Registration failed\" });\r\n       }\r\n     }\r\n-  }, [formData, router, isExistingUser, password]);\r\n+  };\r\n \r\n   const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     const newEmail = e.target.value;\r\n     setFormData((prev) => ({ ...prev, email: newEmail }));\r\n@@ -507,8 +522,13 @@\n         {/* Dòng JOIN MY AISH */}\r\n         <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n           JOIN MY AISH\r\n         </div>\r\n+\r\n+        {/* Hiển thị lỗi API nếu có */}\r\n+        {errors.api && (\r\n+          <p className=\"text-red-400 text-xs mt-1\">{errors.api}</p>\r\n+        )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1746962229459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n   day: string;\r\n   month: string;\r\n   year: string;\r\n   receiveUpdates: boolean;\r\n+  confirmPassword: string;\r\n }\r\n \r\n interface Touched {\r\n   [key: string]: boolean;\r\n@@ -235,8 +236,9 @@\n     day: \"\",\r\n     month: \"\",\r\n     year: \"\",\r\n     receiveUpdates: false,\r\n+    confirmPassword: \"\",\r\n   });\r\n   const [errors, setErrors] = useState<Errors>({});\r\n   const [password, setPassword] = useState(\"\");\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n@@ -308,8 +310,11 @@\n     }\r\n     if (!formData.receiveUpdates) {\r\n       errors.receiveUpdates = \"You must agree to receive updates\";\r\n     }\r\n+    if (formData.password !== formData.confirmPassword) {\r\n+      errors.confirmPassword = \"Passwords do not match\";\r\n+    }\r\n \r\n     return errors;\r\n   };\r\n \r\n@@ -514,8 +519,40 @@\n             <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n           )}\r\n         </div>\r\n \r\n+        {/* Password Confirmation Field */}\r\n+        <div className=\"relative w-full mt-4\">\r\n+          <motion.label\r\n+            className={`absolute text-sm bg-white px-1 z-10 ${errors.confirmPassword ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+            initial={{ \r\n+              top: formData.confirmPassword ? \"5px\" : \"50%\", \r\n+              left: formData.confirmPassword ? \"4px\" : \"12px\",\r\n+              scale: formData.confirmPassword ? 0.75 : 1,\r\n+              translateY: formData.confirmPassword ? \"0\" : \"-50%\",\r\n+            }}\r\n+            animate={{\r\n+              top: isFocused.confirmPassword || formData.confirmPassword ? \"5px\" : \"50%\",\r\n+              left: isFocused.confirmPassword || formData.confirmPassword ? \"4px\" : \"12px\",\r\n+              scale: isFocused.confirmPassword || formData.confirmPassword ? 0.75 : 1,\r\n+              translateY: isFocused.confirmPassword || formData.confirmPassword ? \"0\" : \"-50%\",\r\n+            }}\r\n+            transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+          >\r\n+            CONFIRM PASSWORD*\r\n+          </motion.label>\r\n+          <input\r\n+            type=\"password\"\r\n+            name=\"confirmPassword\"\r\n+            value={formData.confirmPassword}\r\n+            onChange={handleInputChange}\r\n+            placeholder=\"Confirm Password\"\r\n+            required\r\n+            className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+              ${errors.confirmPassword ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+          />\r\n+        </div>\r\n+\r\n         {/* Continue Button */}\r\n         <button onClick={handleContinue} className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition\">\r\n           CONTINUE\r\n         </button>\r\n"
                },
                {
                    "date": 1746962331006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -438,24 +438,10 @@\n             <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n           )}\r\n         </div>\r\n \r\n-        {/* Password Field */}\r\n-        {isExistingUser && (\r\n-          <div className=\"relative w-full mt-4\">\r\n-            <PasswordField \r\n-              value={password}\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              isFocused={isFocused.password}\r\n-              onFocus={() => handleFocus(\"password\")}\r\n-              onBlur={() => handleBlur(\"password\")}\r\n-              hasError={!!errors.password && touched.password}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-\r\n         {/* First Name and Last Name Fields */}\r\n-        {\"firstName lastName\".split(\" \").map((field) => (\r\n+        {\"firstName lastName\".split(\" \").map((field, idx) => (\r\n           <div key={field} className=\"relative w-full mt-2\">\r\n             <motion.label\r\n               className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n               initial={{ \r\n@@ -488,8 +474,21 @@\n             </div>\r\n             {errors[field] && touched[field] && (\r\n               <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n             )}\r\n+            {/* Thêm ô nhập mật khẩu ngay sau ô lastName */}\r\n+            {field === \"lastName\" && (\r\n+              <div className=\"relative w-full mt-4\">\r\n+                <PasswordField \r\n+                  value={formData.password}\r\n+                  onChange={handleInputChange}\r\n+                  isFocused={isFocused.password}\r\n+                  onFocus={() => handleFocus(\"password\")}\r\n+                  onBlur={() => handleBlur(\"password\")}\r\n+                  hasError={!!errors.password && touched.password}\r\n+                />\r\n+              </div>\r\n+            )}\r\n           </div>\r\n         ))}\r\n \r\n         {/* Date of Birth Section */}\r\n"
                },
                {
                    "date": 1746962417358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -439,9 +439,9 @@\n           )}\r\n         </div>\r\n \r\n         {/* First Name and Last Name Fields */}\r\n-        {\"firstName lastName\".split(\" \").map((field, idx) => (\r\n+        {\"firstName lastName\".split(\" \").map((field) => (\r\n           <div key={field} className=\"relative w-full mt-2\">\r\n             <motion.label\r\n               className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n               initial={{ \r\n@@ -474,23 +474,21 @@\n             </div>\r\n             {errors[field] && touched[field] && (\r\n               <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n             )}\r\n-            {/* Thêm ô nhập mật khẩu ngay sau ô lastName */}\r\n-            {field === \"lastName\" && (\r\n-              <div className=\"relative w-full mt-4\">\r\n-                <PasswordField \r\n-                  value={formData.password}\r\n-                  onChange={handleInputChange}\r\n-                  isFocused={isFocused.password}\r\n-                  onFocus={() => handleFocus(\"password\")}\r\n-                  onBlur={() => handleBlur(\"password\")}\r\n-                  hasError={!!errors.password && touched.password}\r\n-                />\r\n-              </div>\r\n-            )}\r\n           </div>\r\n         ))}\r\n+        {/* Password Field sau last name */}\r\n+        <div className=\"relative w-full mt-4\">\r\n+          <PasswordField \r\n+            value={formData.password}\r\n+            onChange={handleInputChange}\r\n+            isFocused={isFocused.password}\r\n+            onFocus={() => handleFocus(\"password\")}\r\n+            onBlur={() => handleBlur(\"password\")}\r\n+            hasError={!!errors.password && touched.password}\r\n+          />\r\n+        </div>\r\n \r\n         {/* Date of Birth Section */}\r\n         <DateOfBirthSection \r\n           formData={formData} \r\n"
                },
                {
                    "date": 1746962464762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -516,40 +516,8 @@\n             <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n           )}\r\n         </div>\r\n \r\n-        {/* Password Confirmation Field */}\r\n-        <div className=\"relative w-full mt-4\">\r\n-          <motion.label\r\n-            className={`absolute text-sm bg-white px-1 z-10 ${errors.confirmPassword ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-            initial={{ \r\n-              top: formData.confirmPassword ? \"5px\" : \"50%\", \r\n-              left: formData.confirmPassword ? \"4px\" : \"12px\",\r\n-              scale: formData.confirmPassword ? 0.75 : 1,\r\n-              translateY: formData.confirmPassword ? \"0\" : \"-50%\",\r\n-            }}\r\n-            animate={{\r\n-              top: isFocused.confirmPassword || formData.confirmPassword ? \"5px\" : \"50%\",\r\n-              left: isFocused.confirmPassword || formData.confirmPassword ? \"4px\" : \"12px\",\r\n-              scale: isFocused.confirmPassword || formData.confirmPassword ? 0.75 : 1,\r\n-              translateY: isFocused.confirmPassword || formData.confirmPassword ? \"0\" : \"-50%\",\r\n-            }}\r\n-            transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-          >\r\n-            CONFIRM PASSWORD*\r\n-          </motion.label>\r\n-          <input\r\n-            type=\"password\"\r\n-            name=\"confirmPassword\"\r\n-            value={formData.confirmPassword}\r\n-            onChange={handleInputChange}\r\n-            placeholder=\"Confirm Password\"\r\n-            required\r\n-            className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-              ${errors.confirmPassword ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-          />\r\n-        </div>\r\n-\r\n         {/* Continue Button */}\r\n         <button onClick={handleContinue} className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition\">\r\n           CONTINUE\r\n         </button>\r\n"
                },
                {
                    "date": 1746962650863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,8 +242,9 @@\n   const [errors, setErrors] = useState<Errors>({});\r\n   const [password, setPassword] = useState(\"\");\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const [isExistingUser, setIsExistingUser] = useState(false);\r\n+  const [success, setSuccess] = useState(false);\r\n \r\n   useEffect(() => {\r\n     if (emailFromLogin) {\r\n       setFormData((prev) => ({ ...prev, email: emailFromLogin }));\r\n@@ -326,9 +327,8 @@\n     setTouched(newTouched);\r\n     const newErrors = validateForm(formData);\r\n     setErrors(newErrors);\r\n     if (Object.keys(newErrors).length === 0) {\r\n-      // Gửi dữ liệu về API đăng ký\r\n       try {\r\n         const res = await fetch(\"/api/auth/register\", {\r\n           method: \"POST\",\r\n           headers: { \"Content-Type\": \"application/json\" },\r\n@@ -343,10 +343,10 @@\n           }),\r\n         });\r\n         const data = await res.json();\r\n         if (res.ok) {\r\n-          // Đăng ký thành công, chuyển về login\r\n-          router.push(\"/login?registered=1\");\r\n+          setSuccess(true);\r\n+          setTimeout(() => router.push(\"/login\"), 1500);\r\n         } else {\r\n           setErrors({ ...newErrors, api: data.error || \"Registration failed\" });\r\n         }\r\n       } catch {\r\n@@ -529,8 +529,14 @@\n         {/* Hiển thị lỗi API nếu có */}\r\n         {errors.api && (\r\n           <p className=\"text-red-400 text-xs mt-1\">{errors.api}</p>\r\n         )}\r\n+\r\n+        {success && (\r\n+          <div className=\"text-green-600 text-center font-semibold mb-2\">\r\n+            Đăng ký thành công! Đang chuyển sang trang đăng nhập...\r\n+          </div>\r\n+        )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1746962847974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,8 +371,13 @@\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n       <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n+        {success && (\r\n+          <div className=\"text-green-600 text-center font-semibold mb-2\">\r\n+            Đăng ký thành công! Đang chuyển sang trang đăng nhập...\r\n+          </div>\r\n+        )}\r\n         <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n           <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n         </button>\r\n         <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n@@ -529,14 +534,8 @@\n         {/* Hiển thị lỗi API nếu có */}\r\n         {errors.api && (\r\n           <p className=\"text-red-400 text-xs mt-1\">{errors.api}</p>\r\n         )}\r\n-\r\n-        {success && (\r\n-          <div className=\"text-green-600 text-center font-semibold mb-2\">\r\n-            Đăng ký thành công! Đang chuyển sang trang đăng nhập...\r\n-          </div>\r\n-        )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1746963022933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,9 +242,8 @@\n   const [errors, setErrors] = useState<Errors>({});\r\n   const [password, setPassword] = useState(\"\");\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const [isExistingUser, setIsExistingUser] = useState(false);\r\n-  const [success, setSuccess] = useState(false);\r\n \r\n   useEffect(() => {\r\n     if (emailFromLogin) {\r\n       setFormData((prev) => ({ ...prev, email: emailFromLogin }));\r\n@@ -343,10 +342,9 @@\n           }),\r\n         });\r\n         const data = await res.json();\r\n         if (res.ok) {\r\n-          setSuccess(true);\r\n-          setTimeout(() => router.push(\"/login\"), 1500);\r\n+          router.push(\"/login\");\r\n         } else {\r\n           setErrors({ ...newErrors, api: data.error || \"Registration failed\" });\r\n         }\r\n       } catch {\r\n@@ -371,13 +369,8 @@\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n       <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n-        {success && (\r\n-          <div className=\"text-green-600 text-center font-semibold mb-2\">\r\n-            Đăng ký thành công! Đang chuyển sang trang đăng nhập...\r\n-          </div>\r\n-        )}\r\n         <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n           <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n         </button>\r\n         <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n"
                },
                {
                    "date": 1747041570959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,8 +242,9 @@\n   const [errors, setErrors] = useState<Errors>({});\r\n   const [password, setPassword] = useState(\"\");\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const [isExistingUser, setIsExistingUser] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n \r\n   useEffect(() => {\r\n     if (emailFromLogin) {\r\n       setFormData((prev) => ({ ...prev, email: emailFromLogin }));\r\n@@ -325,9 +326,11 @@\n     }, {} as Touched);\r\n     setTouched(newTouched);\r\n     const newErrors = validateForm(formData);\r\n     setErrors(newErrors);\r\n+    \r\n     if (Object.keys(newErrors).length === 0) {\r\n+      setIsLoading(true);\r\n       try {\r\n         const res = await fetch(\"/api/auth/register\", {\r\n           method: \"POST\",\r\n           headers: { \"Content-Type\": \"application/json\" },\r\n@@ -346,10 +349,12 @@\n           router.push(\"/login\");\r\n         } else {\r\n           setErrors({ ...newErrors, api: data.error || \"Registration failed\" });\r\n         }\r\n-      } catch {\r\n-        setErrors({ ...newErrors, api: \"Registration failed\" });\r\n+      } catch (error) {\r\n+        setErrors({ ...newErrors, api: \"An error occurred during registration\" });\r\n+      } finally {\r\n+        setIsLoading(false);\r\n       }\r\n     }\r\n   };\r\n \r\n@@ -515,10 +520,14 @@\n           )}\r\n         </div>\r\n \r\n         {/* Continue Button */}\r\n-        <button onClick={handleContinue} className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition\">\r\n-          CONTINUE\r\n+        <button \r\n+          onClick={handleContinue} \r\n+          disabled={isLoading}\r\n+          className={`w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+        >\r\n+          {isLoading ? 'PROCESSING...' : 'CONTINUE'}\r\n         </button>\r\n         {/* Dòng JOIN MY AISH */}\r\n         <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n           JOIN MY AISH\r\n"
                },
                {
                    "date": 1747041754913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,19 +319,26 @@\n     return errors;\r\n   };\r\n \r\n   const handleContinue = async () => {\r\n+    console.log('Continue button clicked');\r\n+    console.log('Form data:', formData);\r\n+    \r\n     const newTouched = Object.keys(formData).reduce((acc, key) => {\r\n       acc[key] = true;\r\n       return acc;\r\n     }, {} as Touched);\r\n     setTouched(newTouched);\r\n+    \r\n     const newErrors = validateForm(formData);\r\n+    console.log('Validation errors:', newErrors);\r\n     setErrors(newErrors);\r\n     \r\n     if (Object.keys(newErrors).length === 0) {\r\n+      console.log('No validation errors, proceeding with registration');\r\n       setIsLoading(true);\r\n       try {\r\n+        console.log('Sending registration request...');\r\n         const res = await fetch(\"/api/auth/register\", {\r\n           method: \"POST\",\r\n           headers: { \"Content-Type\": \"application/json\" },\r\n           body: JSON.stringify({\r\n@@ -344,18 +351,25 @@\n             receiveUpdates: formData.receiveUpdates,\r\n           }),\r\n         });\r\n         const data = await res.json();\r\n+        console.log('Registration response:', data);\r\n+        \r\n         if (res.ok) {\r\n+          console.log('Registration successful, redirecting to login');\r\n           router.push(\"/login\");\r\n         } else {\r\n+          console.log('Registration failed:', data.error);\r\n           setErrors({ ...newErrors, api: data.error || \"Registration failed\" });\r\n         }\r\n       } catch (error) {\r\n+        console.error('Registration error:', error);\r\n         setErrors({ ...newErrors, api: \"An error occurred during registration\" });\r\n       } finally {\r\n         setIsLoading(false);\r\n       }\r\n+    } else {\r\n+      console.log('Validation failed, not proceeding with registration');\r\n     }\r\n   };\r\n \r\n   const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n@@ -521,9 +535,12 @@\n         </div>\r\n \r\n         {/* Continue Button */}\r\n         <button \r\n-          onClick={handleContinue} \r\n+          onClick={(e) => {\r\n+            e.preventDefault();\r\n+            handleContinue();\r\n+          }}\r\n           disabled={isLoading}\r\n           className={`w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n         >\r\n           {isLoading ? 'PROCESSING...' : 'CONTINUE'}\r\n"
                },
                {
                    "date": 1747041906835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,12 +388,20 @@\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n       <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n-        <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n+        <button \r\n+          className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+          aria-label=\"Continue with Google\"\r\n+          title=\"Continue with Google\"\r\n+        >\r\n           <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n         </button>\r\n-        <button className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\">\r\n+        <button \r\n+          className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+          aria-label=\"Continue with Apple\"\r\n+          title=\"Continue with Apple\"\r\n+        >\r\n           <FaApple className=\"text-3xl mr-2\" /> CONTINUE WITH APPLE\r\n         </button>\r\n         <div className=\"flex items-center justify-center mt-3\">\r\n           <span className=\"text-black font-semibold\">OR</span>\r\n@@ -540,8 +548,10 @@\n             e.preventDefault();\r\n             handleContinue();\r\n           }}\r\n           disabled={isLoading}\r\n+          aria-label={isLoading ? \"Processing registration\" : \"Continue with registration\"}\r\n+          title={isLoading ? \"Processing registration\" : \"Continue with registration\"}\r\n           className={`w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n         >\r\n           {isLoading ? 'PROCESSING...' : 'CONTINUE'}\r\n         </button>\r\n"
                },
                {
                    "date": 1747042397531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import { FaApple } from \"react-icons/fa\";\r\n import { FiEdit2 } from \"react-icons/fi\";\r\n import { AiOutlineEye, AiOutlineEyeInvisible, AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n import { motion } from \"framer-motion\";\r\n+import Head from 'next/head';\r\n \r\n interface PasswordValidation {\r\n   hasLength: boolean;\r\n   hasNumber: boolean;\r\n@@ -383,190 +384,241 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n-      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n-        MY AISH ACCOUNT\r\n-      </h1>\r\n-      <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n-        <button \r\n-          className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n-          aria-label=\"Continue with Google\"\r\n-          title=\"Continue with Google\"\r\n-        >\r\n-          <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n-        </button>\r\n-        <button \r\n-          className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n-          aria-label=\"Continue with Apple\"\r\n-          title=\"Continue with Apple\"\r\n-        >\r\n-          <FaApple className=\"text-3xl mr-2\" /> CONTINUE WITH APPLE\r\n-        </button>\r\n-        <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">OR</span>\r\n-        </div>\r\n-        <div className=\"flex justify-center w-full\">\r\n-          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n-            CONTINUE WITH YOUR EMAIL ADDRESS\r\n-          </h2>\r\n-        </div>\r\n-        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n-          <p className=\"text-black text-2xs font-semibold\">\r\n-          SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n-          </p>\r\n-        </div>\r\n-\r\n-        {/* Email Field */}\r\n-        <div className=\"relative w-full mt-2\">\r\n-          <motion.label\r\n-            className={`absolute text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-            initial={{ \r\n-              top: formData.email ? \"5px\" : \"50%\", \r\n-              left: formData.email ? \"4px\" : \"12px\",\r\n-              scale: formData.email ? 0.75 : 1,\r\n-              translateY: formData.email ? \"0\" : \"-50%\",\r\n-            }}\r\n-            animate={{\r\n-              top: isFocused.email || formData.email ? \"5px\" : \"50%\",\r\n-              left: isFocused.email || formData.email ? \"4px\" : \"12px\",\r\n-              scale: isFocused.email || formData.email ? 0.75 : 1,\r\n-              translateY: isFocused.email || formData.email ? \"0\" : \"-50%\",\r\n-            }}\r\n-            transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+    <>\r\n+      <Head>\r\n+        <title>Register | My AISH</title>\r\n+      </Head>\r\n+      <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n+        <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n+          MY AISH ACCOUNT\r\n+        </h1>\r\n+        <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n+          <button \r\n+            className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+            aria-label=\"Continue with Google\"\r\n+            title=\"Continue with Google\"\r\n+            type=\"button\"\r\n           >\r\n-            EMAIL*\r\n-          </motion.label>\r\n-          <div className=\"relative\">\r\n-            <input\r\n-              ref={emailInputRef}\r\n-              type=\"text\"\r\n-              name=\"email\"\r\n-              value={formData.email}\r\n-              onChange={handleEmailChange}\r\n-              onFocus={() => handleFocus(\"email\")}\r\n-              onBlur={() => handleBlur(\"email\")}\r\n-              className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-                ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-              readOnly={!isEmailEditable}\r\n-            />\r\n-            <motion.div\r\n-              animate={{ rotate: isEditingIcon ? 20 : 0 }}\r\n-              transition={{ duration: 0.3, yoyo: 3 }}\r\n-              className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n-              onClick={handleEditEmail}\r\n-            >\r\n-              <FiEdit2 className=\"text-gray-500\" />\r\n-            </motion.div>\r\n+            <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n+          </button>\r\n+          <button \r\n+            className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+            aria-label=\"Continue with Apple\"\r\n+            title=\"Continue with Apple\"\r\n+            type=\"button\"\r\n+          >\r\n+            <FaApple className=\"text-3xl mr-2\" /> CONTINUE WITH APPLE\r\n+          </button>\r\n+          <div className=\"flex items-center justify-center mt-3\">\r\n+            <span className=\"text-black font-semibold\">OR</span>\r\n           </div>\r\n-          {errors.email && touched.email && (\r\n-            <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n-          )}\r\n-        </div>\r\n+          <div className=\"flex justify-center w-full\">\r\n+            <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n+              CONTINUE WITH YOUR EMAIL ADDRESS\r\n+            </h2>\r\n+          </div>\r\n+          <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n+            <p className=\"text-black text-2xs font-semibold\">\r\n+            SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n+            </p>\r\n+          </div>\r\n \r\n-        {/* First Name and Last Name Fields */}\r\n-        {\"firstName lastName\".split(\" \").map((field) => (\r\n-          <div key={field} className=\"relative w-full mt-2\">\r\n+          {/* Email Field */}\r\n+          <div className=\"relative w-full mt-2\">\r\n+            <label htmlFor=\"email\" className=\"sr-only\">Email</label>\r\n             <motion.label\r\n-              className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+              className={`absolute text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n               initial={{ \r\n-                top: formData[field as keyof FormData] ? \"5px\" : \"50%\", \r\n-                left: formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n-                scale: formData[field as keyof FormData] ? 0.75 : 1,\r\n-                translateY: formData[field as keyof FormData] ? \"0\" : \"-50%\",\r\n+                top: formData.email ? \"5px\" : \"50%\", \r\n+                left: formData.email ? \"4px\" : \"12px\",\r\n+                scale: formData.email ? 0.75 : 1,\r\n+                translateY: formData.email ? \"0\" : \"-50%\",\r\n               }}\r\n               animate={{\r\n-                top: isFocused[field] || formData[field as keyof FormData] ? \"5px\" : \"50%\",\r\n-                left: isFocused[field] || formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n-                scale: isFocused[field] || formData[field as keyof FormData] ? 0.75 : 1,\r\n-                translateY: isFocused[field] || formData[field as keyof FormData] ? \"0\" : \"-90%\",\r\n+                top: isFocused.email || formData.email ? \"5px\" : \"50%\",\r\n+                left: isFocused.email || formData.email ? \"4px\" : \"12px\",\r\n+                scale: isFocused.email || formData.email ? 0.75 : 1,\r\n+                translateY: isFocused.email || formData.email ? \"0\" : \"-50%\",\r\n               }}\r\n               transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+              htmlFor=\"email\"\r\n             >\r\n-              {field === \"firstName\" ? \"FIRST NAME*\" : \"LAST NAME*\"}\r\n+              EMAIL*\r\n             </motion.label>\r\n             <div className=\"relative\">\r\n               <input\r\n+                ref={emailInputRef}\r\n                 type=\"text\"\r\n-                name={field}  \r\n-                value={(formData[field as keyof FormData] as string) || \"\"}\r\n-                onChange={handleInputChange}\r\n-                onFocus={() => handleFocus(field)}\r\n-                onBlur={() => handleBlur(field)}\r\n+                id=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleEmailChange}\r\n+                onFocus={() => handleFocus(\"email\")}\r\n+                onBlur={() => handleBlur(\"email\")}\r\n                 className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-                  ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                readOnly={!isEmailEditable}\r\n+                aria-label=\"Email\"\r\n+                placeholder=\"Enter your email\"\r\n+                autoComplete=\"email\"\r\n+                title=\"Email\"\r\n               />\r\n+              <motion.div\r\n+                animate={{ rotate: isEditingIcon ? 20 : 0 }}\r\n+                transition={{ duration: 0.3, yoyo: 3 }}\r\n+                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n+                onClick={handleEditEmail}\r\n+                aria-label=\"Edit email\"\r\n+                title=\"Edit email\"\r\n+                tabIndex={0}\r\n+                role=\"button\"\r\n+              >\r\n+                <FiEdit2 className=\"text-gray-500\" />\r\n+              </motion.div>\r\n             </div>\r\n-            {errors[field] && touched[field] && (\r\n-              <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n+            {errors.email && touched.email && (\r\n+              <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n             )}\r\n           </div>\r\n-        ))}\r\n-        {/* Password Field sau last name */}\r\n-        <div className=\"relative w-full mt-4\">\r\n-          <PasswordField \r\n-            value={formData.password}\r\n-            onChange={handleInputChange}\r\n-            isFocused={isFocused.password}\r\n-            onFocus={() => handleFocus(\"password\")}\r\n-            onBlur={() => handleBlur(\"password\")}\r\n-            hasError={!!errors.password && touched.password}\r\n-          />\r\n-        </div>\r\n \r\n-        {/* Date of Birth Section */}\r\n-        <DateOfBirthSection \r\n-          formData={formData} \r\n-          handleInputChange={handleInputChange} \r\n-          errors={errors} \r\n-          touched={touched} \r\n-          setTouched={setTouched}\r\n-        />\r\n+          {/* First Name and Last Name Fields */}\r\n+          {\"firstName lastName\".split(\" \").map((field) => (\r\n+            <div key={field} className=\"relative w-full mt-2\">\r\n+              <label htmlFor={field} className=\"sr-only\">{field === \"firstName\" ? \"First Name\" : \"Last Name\"}</label>\r\n+              <motion.label\r\n+                className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+                initial={{ \r\n+                  top: formData[field as keyof FormData] ? \"5px\" : \"50%\", \r\n+                  left: formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n+                  scale: formData[field as keyof FormData] ? 0.75 : 1,\r\n+                  translateY: formData[field as keyof FormData] ? \"0\" : \"-50%\",\r\n+                }}\r\n+                animate={{\r\n+                  top: isFocused[field] || formData[field as keyof FormData] ? \"5px\" : \"50%\",\r\n+                  left: isFocused[field] || formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n+                  scale: isFocused[field] || formData[field as keyof FormData] ? 0.75 : 1,\r\n+                  translateY: isFocused[field] || formData[field as keyof FormData] ? \"0\" : \"-90%\",\r\n+                }}\r\n+                transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+                htmlFor={field}\r\n+              >\r\n+                {field === \"firstName\" ? \"FIRST NAME*\" : \"LAST NAME*\"}\r\n+              </motion.label>\r\n+              <div className=\"relative\">\r\n+                <input\r\n+                  type=\"text\"\r\n+                  id={field}\r\n+                  name={field}  \r\n+                  value={(formData[field as keyof FormData] as string) || \"\"}\r\n+                  onChange={handleInputChange}\r\n+                  onFocus={() => handleFocus(field)}\r\n+                  onBlur={() => handleBlur(field)}\r\n+                  className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                    ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  aria-label={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n+                  placeholder={field === \"firstName\" ? \"Enter your first name\" : \"Enter your last name\"}\r\n+                  autoComplete={field === \"firstName\" ? \"given-name\" : \"family-name\"}\r\n+                  title={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n+                />\r\n+              </div>\r\n+              {errors[field] && touched[field] && (\r\n+                <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n+              )}\r\n+            </div>\r\n+          ))}\r\n+          {/* Password Field sau last name */}\r\n+          <div className=\"relative w-full mt-4\">\r\n+            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n+            <PasswordField \r\n+              value={formData.password}\r\n+              onChange={handleInputChange}\r\n+              isFocused={isFocused.password}\r\n+              onFocus={() => handleFocus(\"password\")}\r\n+              onBlur={() => handleBlur(\"password\")}\r\n+              hasError={!!errors.password && touched.password}\r\n+            />\r\n+          </div>\r\n \r\n-        {/* Checkbox for Updates */}\r\n-        <div className=\"mt-2 w-full\">\r\n-          <label className=\"flex items-start space-x-2\">\r\n+          {/* Confirm Password Field */}\r\n+          <div className=\"relative w-full mt-2\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"sr-only\">Confirm Password</label>\r\n             <input\r\n-              type=\"checkbox\"\r\n-              name=\"receiveUpdates\"\r\n-              checked={formData.receiveUpdates}\r\n-              onChange={handleCheckboxChange}\r\n-              className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n+              type=\"password\"\r\n+              id=\"confirmPassword\"\r\n+              name=\"confirmPassword\"\r\n+              value={formData.confirmPassword}\r\n+              onChange={handleInputChange}\r\n+              onFocus={() => handleFocus(\"confirmPassword\")}\r\n+              onBlur={() => handleBlur(\"confirmPassword\")}\r\n+              className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 ${errors.confirmPassword ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+              aria-label=\"Confirm Password\"\r\n+              placeholder=\"Confirm your password\"\r\n+              autoComplete=\"new-password\"\r\n+              title=\"Confirm Password\"\r\n             />\r\n-            <span className=\"text-sm text-gray-700 flex-1\">\r\n-              I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n-            </span>\r\n-          </label>\r\n-          {errors.receiveUpdates && touched.receiveUpdates && (\r\n-            <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n+            {errors.confirmPassword && touched.confirmPassword && (\r\n+              <p className=\"text-red-400 text-xs mt-1\">{errors.confirmPassword}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          {/* Date of Birth Section */}\r\n+          <DateOfBirthSection \r\n+            formData={formData} \r\n+            handleInputChange={handleInputChange} \r\n+            errors={errors} \r\n+            touched={touched} \r\n+            setTouched={setTouched}\r\n+          />\r\n+\r\n+          {/* Checkbox for Updates */}\r\n+          <div className=\"mt-2 w-full\">\r\n+            <label className=\"flex items-start space-x-2\">\r\n+              <input\r\n+                type=\"checkbox\"\r\n+                name=\"receiveUpdates\"\r\n+                checked={formData.receiveUpdates}\r\n+                onChange={handleCheckboxChange}\r\n+                className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n+                aria-label=\"Receive updates\"\r\n+                title=\"Receive updates\"\r\n+              />\r\n+              <span className=\"text-sm text-gray-700 flex-1\">\r\n+                I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+              </span>\r\n+            </label>\r\n+            {errors.receiveUpdates && touched.receiveUpdates && (\r\n+              <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          {/* Continue Button */}\r\n+          <button \r\n+            onClick={(e) => {\r\n+              e.preventDefault();\r\n+              handleContinue();\r\n+            }}\r\n+            disabled={isLoading}\r\n+            aria-label={isLoading ? \"Processing registration\" : \"Continue with registration\"}\r\n+            title={isLoading ? \"Processing registration\" : \"Continue with registration\"}\r\n+            className={`w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+            type=\"submit\"\r\n+          >\r\n+            {isLoading ? 'PROCESSING...' : 'CONTINUE'}\r\n+          </button>\r\n+          {/* Dòng JOIN MY AISH */}\r\n+          <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n+            JOIN MY AISH\r\n+          </div>\r\n+\r\n+          {/* Hiển thị lỗi API nếu có */}\r\n+          {errors.api && (\r\n+            <p className=\"text-red-400 text-xs mt-1\">{errors.api}</p>\r\n           )}\r\n         </div>\r\n-\r\n-        {/* Continue Button */}\r\n-        <button \r\n-          onClick={(e) => {\r\n-            e.preventDefault();\r\n-            handleContinue();\r\n-          }}\r\n-          disabled={isLoading}\r\n-          aria-label={isLoading ? \"Processing registration\" : \"Continue with registration\"}\r\n-          title={isLoading ? \"Processing registration\" : \"Continue with registration\"}\r\n-          className={`w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-        >\r\n-          {isLoading ? 'PROCESSING...' : 'CONTINUE'}\r\n-        </button>\r\n-        {/* Dòng JOIN MY AISH */}\r\n-        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n-          JOIN MY AISH\r\n-        </div>\r\n-\r\n-        {/* Hiển thị lỗi API nếu có */}\r\n-        {errors.api && (\r\n-          <p className=\"text-red-400 text-xs mt-1\">{errors.api}</p>\r\n-        )}\r\n       </div>\r\n-    </div>\r\n+    </>\r\n   );\r\n };\r\n \r\n export default RegisterPage; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747042546219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -516,9 +516,8 @@\n                   onBlur={() => handleBlur(field)}\r\n                   className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n                     ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n                   aria-label={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n-                  placeholder={field === \"firstName\" ? \"Enter your first name\" : \"Enter your last name\"}\r\n                   autoComplete={field === \"firstName\" ? \"given-name\" : \"family-name\"}\r\n                   title={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n                 />\r\n               </div>\r\n@@ -539,30 +538,8 @@\n               hasError={!!errors.password && touched.password}\r\n             />\r\n           </div>\r\n \r\n-          {/* Confirm Password Field */}\r\n-          <div className=\"relative w-full mt-2\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"sr-only\">Confirm Password</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              id=\"confirmPassword\"\r\n-              name=\"confirmPassword\"\r\n-              value={formData.confirmPassword}\r\n-              onChange={handleInputChange}\r\n-              onFocus={() => handleFocus(\"confirmPassword\")}\r\n-              onBlur={() => handleBlur(\"confirmPassword\")}\r\n-              className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 ${errors.confirmPassword ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-              aria-label=\"Confirm Password\"\r\n-              placeholder=\"Confirm your password\"\r\n-              autoComplete=\"new-password\"\r\n-              title=\"Confirm Password\"\r\n-            />\r\n-            {errors.confirmPassword && touched.confirmPassword && (\r\n-              <p className=\"text-red-400 text-xs mt-1\">{errors.confirmPassword}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n           {/* Date of Birth Section */}\r\n           <DateOfBirthSection \r\n             formData={formData} \r\n             handleInputChange={handleInputChange} \r\n"
                },
                {
                    "date": 1747042906505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,8 +104,11 @@\n           onBlur={handlePasswordBlur}\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n             ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n               showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+          placeholder=\"Password\"\r\n+          title=\"Password\"\r\n+          aria-label=\"Password\"\r\n         />\r\n         <div\r\n           className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n           onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n"
                },
                {
                    "date": 1747043046631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,8 @@\n           onBlur={handlePasswordBlur}\r\n           className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n             ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n               showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-          placeholder=\"Password\"\r\n           title=\"Password\"\r\n           aria-label=\"Password\"\r\n         />\r\n         <div\r\n"
                },
                {
                    "date": 1747043132323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n   day: string;\r\n   month: string;\r\n   year: string;\r\n   receiveUpdates: boolean;\r\n-  confirmPassword: string;\r\n }\r\n \r\n interface Touched {\r\n   [key: string]: boolean;\r\n@@ -239,9 +238,8 @@\n     day: \"\",\r\n     month: \"\",\r\n     year: \"\",\r\n     receiveUpdates: false,\r\n-    confirmPassword: \"\",\r\n   });\r\n   const [errors, setErrors] = useState<Errors>({});\r\n   const [password, setPassword] = useState(\"\");\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n@@ -314,11 +312,8 @@\n     }\r\n     if (!formData.receiveUpdates) {\r\n       errors.receiveUpdates = \"You must agree to receive updates\";\r\n     }\r\n-    if (formData.password !== formData.confirmPassword) {\r\n-      errors.confirmPassword = \"Passwords do not match\";\r\n-    }\r\n \r\n     return errors;\r\n   };\r\n \r\n"
                },
                {
                    "date": 1747278110331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -594,5 +594,10 @@\n     </>\r\n   );\r\n };\r\n \r\n-export default RegisterPage; \n\\ No newline at end of file\n+export default RegisterPage;\r\n+\r\n+export const metadata = {\r\n+  title: 'Đăng ký - AISH',\r\n+  description: 'Tạo tài khoản AISH để nhận thông tin về sản phẩm mới, ưu đãi đặc biệt và trải nghiệm mua sắm tốt nhất.',\r\n+}; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747278290240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -598,6 +598,5 @@\n export default RegisterPage;\r\n \r\n export const metadata = {\r\n   title: 'Đăng ký - AISH',\r\n-  description: 'Tạo tài khoản AISH để nhận thông tin về sản phẩm mới, ưu đãi đặc biệt và trải nghiệm mua sắm tốt nhất.',\r\n }; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747279419031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -594,9 +594,5 @@\n     </>\r\n   );\r\n };\r\n \r\n-export default RegisterPage;\r\n-\r\n-export const metadata = {\r\n-  title: 'Đăng ký - AISH',\r\n-}; \n\\ No newline at end of file\n+export default RegisterPage; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747288397232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n import { FiEdit2 } from \"react-icons/fi\";\r\n import { AiOutlineEye, AiOutlineEyeInvisible, AiOutlineCheck, AiOutlineClose } from \"react-icons/ai\";\r\n import { motion } from \"framer-motion\";\r\n import Head from 'next/head';\r\n+import { signIn } from \"next-auth/react\";\r\n+import Image from \"next/image\";\r\n \r\n interface PasswordValidation {\r\n   hasLength: boolean;\r\n   hasNumber: boolean;\r\n@@ -316,72 +318,65 @@\n \r\n     return errors;\r\n   };\r\n \r\n-  const handleContinue = async () => {\r\n-    console.log('Continue button clicked');\r\n-    console.log('Form data:', formData);\r\n-    \r\n-    const newTouched = Object.keys(formData).reduce((acc, key) => {\r\n-      acc[key] = true;\r\n-      return acc;\r\n-    }, {} as Touched);\r\n-    setTouched(newTouched);\r\n-    \r\n-    const newErrors = validateForm(formData);\r\n-    console.log('Validation errors:', newErrors);\r\n-    setErrors(newErrors);\r\n-    \r\n-    if (Object.keys(newErrors).length === 0) {\r\n-      console.log('No validation errors, proceeding with registration');\r\n-      setIsLoading(true);\r\n-      try {\r\n-        console.log('Sending registration request...');\r\n-        const res = await fetch(\"/api/auth/register\", {\r\n-          method: \"POST\",\r\n-          headers: { \"Content-Type\": \"application/json\" },\r\n-          body: JSON.stringify({\r\n-            email: formData.email,\r\n-            password: formData.password,\r\n-            name: formData.firstName + ' ' + formData.lastName,\r\n-            day: formData.day,\r\n-            month: formData.month,\r\n-            year: formData.year,\r\n-            receiveUpdates: formData.receiveUpdates,\r\n-          }),\r\n-        });\r\n-        const data = await res.json();\r\n-        console.log('Registration response:', data);\r\n-        \r\n-        if (res.ok) {\r\n-          console.log('Registration successful, redirecting to login');\r\n-          router.push(\"/login\");\r\n-        } else {\r\n-          console.log('Registration failed:', data.error);\r\n-          setErrors({ ...newErrors, api: data.error || \"Registration failed\" });\r\n-        }\r\n-      } catch (error) {\r\n-        console.error('Registration error:', error);\r\n-        setErrors({ ...newErrors, api: \"An error occurred during registration\" });\r\n-      } finally {\r\n-        setIsLoading(false);\r\n-      }\r\n-    } else {\r\n-      console.log('Validation failed, not proceeding with registration');\r\n+  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n+    e.preventDefault();\r\n+    setIsLoading(true);\r\n+    setErrors({});\r\n+\r\n+    if (formData.password !== formData.confirmPassword) {\r\n+      setErrors({ confirmPassword: \"Mật khẩu không khớp\" });\r\n+      setIsLoading(false);\r\n+      return;\r\n     }\r\n-  };\r\n \r\n-  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    const newEmail = e.target.value;\r\n-    setFormData((prev) => ({ ...prev, email: newEmail }));\r\n-    setErrors((prev) => ({ ...prev, email: undefined }));\r\n-    setIsExistingUser(false);\r\n+    try {\r\n+      const response = await fetch(\"/api/auth/register\", {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify({\r\n+          name: formData.firstName + ' ' + formData.lastName,\r\n+          email: formData.email,\r\n+          password: formData.password,\r\n+          day: formData.day,\r\n+          month: formData.month,\r\n+          year: formData.year,\r\n+          receiveUpdates: formData.receiveUpdates,\r\n+        }),\r\n+      });\r\n \r\n-    if (validateEmail(newEmail)) {\r\n-      setIsExistingUser(true);\r\n+      const data = await response.json();\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(data.message || \"Đăng ký thất bại\");\r\n+      }\r\n+\r\n+      // Đăng nhập tự động sau khi đăng ký thành công\r\n+      const result = await signIn(\"credentials\", {\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        redirect: false,\r\n+      });\r\n+\r\n+      if (result?.error) {\r\n+        throw new Error(\"Đăng nhập tự động thất bại\");\r\n+      }\r\n+\r\n+      router.push(\"/\");\r\n+    } catch (error) {\r\n+      setErrors({ api: error instanceof Error ? error.message : \"Có lỗi xảy ra\" });\r\n+    } finally {\r\n+      setIsLoading(false);\r\n     }\r\n   };\r\n \r\n+  const handleGoogleSignIn = () => {\r\n+    signIn(\"google\", { callbackUrl: \"/\" });\r\n+  };\r\n+\r\n   return (\r\n     <>\r\n       <Head>\r\n         <title>Register | My AISH</title>\r\n@@ -395,19 +390,19 @@\n             className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n             aria-label=\"Continue with Google\"\r\n             title=\"Continue with Google\"\r\n             type=\"button\"\r\n+            onClick={handleGoogleSignIn}\r\n           >\r\n-            <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n+            <Image\r\n+              src=\"/google.svg\"\r\n+              alt=\"Google\"\r\n+              width={20}\r\n+              height={20}\r\n+              className=\"mr-2\"\r\n+            />\r\n+            Đăng ký bằng Google\r\n           </button>\r\n-          <button \r\n-            className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n-            aria-label=\"Continue with Apple\"\r\n-            title=\"Continue with Apple\"\r\n-            type=\"button\"\r\n-          >\r\n-            <FaApple className=\"text-3xl mr-2\" /> CONTINUE WITH APPLE\r\n-          </button>\r\n           <div className=\"flex items-center justify-center mt-3\">\r\n             <span className=\"text-black font-semibold\">OR</span>\r\n           </div>\r\n           <div className=\"flex justify-center w-full\">\r\n@@ -449,9 +444,9 @@\n                 type=\"text\"\r\n                 id=\"email\"\r\n                 name=\"email\"\r\n                 value={formData.email}\r\n-                onChange={handleEmailChange}\r\n+                onChange={handleInputChange}\r\n                 onFocus={() => handleFocus(\"email\")}\r\n                 onBlur={() => handleBlur(\"email\")}\r\n                 className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n                   ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n@@ -566,21 +561,17 @@\n             )}\r\n           </div>\r\n \r\n           {/* Continue Button */}\r\n-          <button \r\n-            onClick={(e) => {\r\n-              e.preventDefault();\r\n-              handleContinue();\r\n-            }}\r\n-            disabled={isLoading}\r\n-            aria-label={isLoading ? \"Processing registration\" : \"Continue with registration\"}\r\n-            title={isLoading ? \"Processing registration\" : \"Continue with registration\"}\r\n-            className={`w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-2 hover:bg-gray-800 transition ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-            type=\"submit\"\r\n-          >\r\n-            {isLoading ? 'PROCESSING...' : 'CONTINUE'}\r\n-          </button>\r\n+          <div>\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isLoading}\r\n+              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n+            >\r\n+              {isLoading ? \"Đang đăng ký...\" : \"Đăng ký\"}\r\n+            </button>\r\n+          </div>\r\n           {/* Dòng JOIN MY AISH */}\r\n           <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n             JOIN MY AISH\r\n           </div>\r\n"
                },
                {
                    "date": 1747288471085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,22 +386,16 @@\n           MY AISH ACCOUNT\r\n         </h1>\r\n         <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n           <button \r\n-            className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+            className=\"flex items-center justify-center w-full border border-gray-300 text-gray-700 py-2 rounded-md text-sm font-medium hover:bg-gray-50 transition\"\r\n             aria-label=\"Continue with Google\"\r\n             title=\"Continue with Google\"\r\n             type=\"button\"\r\n             onClick={handleGoogleSignIn}\r\n           >\r\n-            <Image\r\n-              src=\"/google.svg\"\r\n-              alt=\"Google\"\r\n-              width={20}\r\n-              height={20}\r\n-              className=\"mr-2\"\r\n-            />\r\n-            Đăng ký bằng Google\r\n+            <FcGoogle className=\"text-2xl mr-2\" />\r\n+            CONTINUE WITH GOOGLE\r\n           </button>\r\n           <div className=\"flex items-center justify-center mt-3\">\r\n             <span className=\"text-black font-semibold\">OR</span>\r\n           </div>\r\n"
                },
                {
                    "date": 1747288518313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,16 +386,14 @@\n           MY AISH ACCOUNT\r\n         </h1>\r\n         <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n           <button \r\n-            className=\"flex items-center justify-center w-full border border-gray-300 text-gray-700 py-2 rounded-md text-sm font-medium hover:bg-gray-50 transition\"\r\n-            aria-label=\"Continue with Google\"\r\n-            title=\"Continue with Google\"\r\n-            type=\"button\"\r\n             onClick={handleGoogleSignIn}\r\n+            className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+            style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n           >\r\n-            <FcGoogle className=\"text-2xl mr-2\" />\r\n-            CONTINUE WITH GOOGLE\r\n+            <FcGoogle className=\"text-2xl mr-3\" />\r\n+            <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n           </button>\r\n           <div className=\"flex items-center justify-center mt-3\">\r\n             <span className=\"text-black font-semibold\">OR</span>\r\n           </div>\r\n"
                },
                {
                    "date": 1747288724560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -323,14 +323,8 @@\n     e.preventDefault();\r\n     setIsLoading(true);\r\n     setErrors({});\r\n \r\n-    if (formData.password !== formData.confirmPassword) {\r\n-      setErrors({ confirmPassword: \"Mật khẩu không khớp\" });\r\n-      setIsLoading(false);\r\n-      return;\r\n-    }\r\n-\r\n     try {\r\n       const response = await fetch(\"/api/auth/register\", {\r\n         method: \"POST\",\r\n         headers: {\r\n"
                },
                {
                    "date": 1747288861441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,11 +311,8 @@\n     }\r\n     if (!formData.day || !formData.month || !formData.year) {\r\n       errors.date = \"Please enter your full date of birth\";\r\n     }\r\n-    if (!formData.receiveUpdates) {\r\n-      errors.receiveUpdates = \"You must agree to receive updates\";\r\n-    }\r\n \r\n     return errors;\r\n   };\r\n \r\n@@ -323,8 +320,16 @@\n     e.preventDefault();\r\n     setIsLoading(true);\r\n     setErrors({});\r\n \r\n+    // Validate form\r\n+    const validationErrors = validateForm(formData);\r\n+    if (Object.keys(validationErrors).length > 0) {\r\n+      setErrors(validationErrors);\r\n+      setIsLoading(false);\r\n+      return;\r\n+    }\r\n+\r\n     try {\r\n       const response = await fetch(\"/api/auth/register\", {\r\n         method: \"POST\",\r\n         headers: {\r\n@@ -397,167 +402,171 @@\n             </h2>\r\n           </div>\r\n           <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n             <p className=\"text-black text-2xs font-semibold\">\r\n-            SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n+              SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n             </p>\r\n           </div>\r\n \r\n-          {/* Email Field */}\r\n-          <div className=\"relative w-full mt-2\">\r\n-            <label htmlFor=\"email\" className=\"sr-only\">Email</label>\r\n-            <motion.label\r\n-              className={`absolute text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n-              initial={{ \r\n-                top: formData.email ? \"5px\" : \"50%\", \r\n-                left: formData.email ? \"4px\" : \"12px\",\r\n-                scale: formData.email ? 0.75 : 1,\r\n-                translateY: formData.email ? \"0\" : \"-50%\",\r\n-              }}\r\n-              animate={{\r\n-                top: isFocused.email || formData.email ? \"5px\" : \"50%\",\r\n-                left: isFocused.email || formData.email ? \"4px\" : \"12px\",\r\n-                scale: isFocused.email || formData.email ? 0.75 : 1,\r\n-                translateY: isFocused.email || formData.email ? \"0\" : \"-50%\",\r\n-              }}\r\n-              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-              htmlFor=\"email\"\r\n-            >\r\n-              EMAIL*\r\n-            </motion.label>\r\n-            <div className=\"relative\">\r\n-              <input\r\n-                ref={emailInputRef}\r\n-                type=\"text\"\r\n-                id=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleInputChange}\r\n-                onFocus={() => handleFocus(\"email\")}\r\n-                onBlur={() => handleBlur(\"email\")}\r\n-                className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-                  ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-                readOnly={!isEmailEditable}\r\n-                aria-label=\"Email\"\r\n-                placeholder=\"Enter your email\"\r\n-                autoComplete=\"email\"\r\n-                title=\"Email\"\r\n-              />\r\n-              <motion.div\r\n-                animate={{ rotate: isEditingIcon ? 20 : 0 }}\r\n-                transition={{ duration: 0.3, yoyo: 3 }}\r\n-                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n-                onClick={handleEditEmail}\r\n-                aria-label=\"Edit email\"\r\n-                title=\"Edit email\"\r\n-                tabIndex={0}\r\n-                role=\"button\"\r\n-              >\r\n-                <FiEdit2 className=\"text-gray-500\" />\r\n-              </motion.div>\r\n-            </div>\r\n-            {errors.email && touched.email && (\r\n-              <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          {/* First Name and Last Name Fields */}\r\n-          {\"firstName lastName\".split(\" \").map((field) => (\r\n-            <div key={field} className=\"relative w-full mt-2\">\r\n-              <label htmlFor={field} className=\"sr-only\">{field === \"firstName\" ? \"First Name\" : \"Last Name\"}</label>\r\n+          <form onSubmit={handleSubmit} className=\"mt-8 space-y-6\">\r\n+            {/* Email Field */}\r\n+            <div className=\"relative w-full mt-2\">\r\n+              <label htmlFor=\"email\" className=\"sr-only\">Email</label>\r\n               <motion.label\r\n-                className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+                className={`absolute text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n                 initial={{ \r\n-                  top: formData[field as keyof FormData] ? \"5px\" : \"50%\", \r\n-                  left: formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n-                  scale: formData[field as keyof FormData] ? 0.75 : 1,\r\n-                  translateY: formData[field as keyof FormData] ? \"0\" : \"-50%\",\r\n+                  top: formData.email ? \"5px\" : \"50%\", \r\n+                  left: formData.email ? \"4px\" : \"12px\",\r\n+                  scale: formData.email ? 0.75 : 1,\r\n+                  translateY: formData.email ? \"0\" : \"-50%\",\r\n                 }}\r\n                 animate={{\r\n-                  top: isFocused[field] || formData[field as keyof FormData] ? \"5px\" : \"50%\",\r\n-                  left: isFocused[field] || formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n-                  scale: isFocused[field] || formData[field as keyof FormData] ? 0.75 : 1,\r\n-                  translateY: isFocused[field] || formData[field as keyof FormData] ? \"0\" : \"-90%\",\r\n+                  top: isFocused.email || formData.email ? \"5px\" : \"50%\",\r\n+                  left: isFocused.email || formData.email ? \"4px\" : \"12px\",\r\n+                  scale: isFocused.email || formData.email ? 0.75 : 1,\r\n+                  translateY: isFocused.email || formData.email ? \"0\" : \"-50%\",\r\n                 }}\r\n                 transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-                htmlFor={field}\r\n+                htmlFor=\"email\"\r\n               >\r\n-                {field === \"firstName\" ? \"FIRST NAME*\" : \"LAST NAME*\"}\r\n+                EMAIL*\r\n               </motion.label>\r\n               <div className=\"relative\">\r\n                 <input\r\n+                  ref={emailInputRef}\r\n                   type=\"text\"\r\n-                  id={field}\r\n-                  name={field}  \r\n-                  value={(formData[field as keyof FormData] as string) || \"\"}\r\n+                  id=\"email\"\r\n+                  name=\"email\"\r\n+                  value={formData.email}\r\n                   onChange={handleInputChange}\r\n-                  onFocus={() => handleFocus(field)}\r\n-                  onBlur={() => handleBlur(field)}\r\n+                  onFocus={() => handleFocus(\"email\")}\r\n+                  onBlur={() => handleBlur(\"email\")}\r\n                   className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n-                    ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n-                  aria-label={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n-                  autoComplete={field === \"firstName\" ? \"given-name\" : \"family-name\"}\r\n-                  title={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n+                    ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  readOnly={!isEmailEditable}\r\n+                  aria-label=\"Email\"\r\n+                  placeholder=\"Enter your email\"\r\n+                  autoComplete=\"email\"\r\n+                  title=\"Email\"\r\n                 />\r\n+                <motion.div\r\n+                  animate={{ rotate: isEditingIcon ? 20 : 0 }}\r\n+                  transition={{ duration: 0.3, yoyo: 3 }}\r\n+                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n+                  onClick={handleEditEmail}\r\n+                  aria-label=\"Edit email\"\r\n+                  title=\"Edit email\"\r\n+                  tabIndex={0}\r\n+                  role=\"button\"\r\n+                >\r\n+                  <FiEdit2 className=\"text-gray-500\" />\r\n+                </motion.div>\r\n               </div>\r\n-              {errors[field] && touched[field] && (\r\n-                <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n+              {errors.email && touched.email && (\r\n+                <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n               )}\r\n             </div>\r\n-          ))}\r\n-          {/* Password Field sau last name */}\r\n-          <div className=\"relative w-full mt-4\">\r\n-            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n-            <PasswordField \r\n-              value={formData.password}\r\n-              onChange={handleInputChange}\r\n-              isFocused={isFocused.password}\r\n-              onFocus={() => handleFocus(\"password\")}\r\n-              onBlur={() => handleBlur(\"password\")}\r\n-              hasError={!!errors.password && touched.password}\r\n-            />\r\n-          </div>\r\n \r\n-          {/* Date of Birth Section */}\r\n-          <DateOfBirthSection \r\n-            formData={formData} \r\n-            handleInputChange={handleInputChange} \r\n-            errors={errors} \r\n-            touched={touched} \r\n-            setTouched={setTouched}\r\n-          />\r\n+            {/* First Name and Last Name Fields */}\r\n+            {\"firstName lastName\".split(\" \").map((field) => (\r\n+              <div key={field} className=\"relative w-full mt-2\">\r\n+                <label htmlFor={field} className=\"sr-only\">{field === \"firstName\" ? \"First Name\" : \"Last Name\"}</label>\r\n+                <motion.label\r\n+                  className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+                  initial={{ \r\n+                    top: formData[field as keyof FormData] ? \"5px\" : \"50%\", \r\n+                    left: formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n+                    scale: formData[field as keyof FormData] ? 0.75 : 1,\r\n+                    translateY: formData[field as keyof FormData] ? \"0\" : \"-50%\",\r\n+                  }}\r\n+                  animate={{\r\n+                    top: isFocused[field] || formData[field as keyof FormData] ? \"5px\" : \"50%\",\r\n+                    left: isFocused[field] || formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n+                    scale: isFocused[field] || formData[field as keyof FormData] ? 0.75 : 1,\r\n+                    translateY: isFocused[field] || formData[field as keyof FormData] ? \"0\" : \"-90%\",\r\n+                  }}\r\n+                  transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+                  htmlFor={field}\r\n+                >\r\n+                  {field === \"firstName\" ? \"FIRST NAME*\" : \"LAST NAME*\"}\r\n+                </motion.label>\r\n+                <div className=\"relative\">\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    id={field}\r\n+                    name={field}  \r\n+                    value={(formData[field as keyof FormData] as string) || \"\"}\r\n+                    onChange={handleInputChange}\r\n+                    onFocus={() => handleFocus(field)}\r\n+                    onBlur={() => handleBlur(field)}\r\n+                    className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                      ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                    aria-label={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n+                    autoComplete={field === \"firstName\" ? \"given-name\" : \"family-name\"}\r\n+                    title={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n+                  />\r\n+                </div>\r\n+                {errors[field] && touched[field] && (\r\n+                  <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n+                )}\r\n+              </div>\r\n+            ))}\r\n \r\n-          {/* Checkbox for Updates */}\r\n-          <div className=\"mt-2 w-full\">\r\n-            <label className=\"flex items-start space-x-2\">\r\n-              <input\r\n-                type=\"checkbox\"\r\n-                name=\"receiveUpdates\"\r\n-                checked={formData.receiveUpdates}\r\n-                onChange={handleCheckboxChange}\r\n-                className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n-                aria-label=\"Receive updates\"\r\n-                title=\"Receive updates\"\r\n+            {/* Password Field */}\r\n+            <div className=\"relative w-full mt-4\">\r\n+              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n+              <PasswordField \r\n+                value={formData.password}\r\n+                onChange={handleInputChange}\r\n+                isFocused={isFocused.password}\r\n+                onFocus={() => handleFocus(\"password\")}\r\n+                onBlur={() => handleBlur(\"password\")}\r\n+                hasError={!!errors.password && touched.password}\r\n               />\r\n-              <span className=\"text-sm text-gray-700 flex-1\">\r\n-                I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n-              </span>\r\n-            </label>\r\n-            {errors.receiveUpdates && touched.receiveUpdates && (\r\n-              <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n-            )}\r\n-          </div>\r\n+            </div>\r\n \r\n-          {/* Continue Button */}\r\n-          <div>\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isLoading}\r\n-              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n-            >\r\n-              {isLoading ? \"Đang đăng ký...\" : \"Đăng ký\"}\r\n-            </button>\r\n-          </div>\r\n+            {/* Date of Birth Section */}\r\n+            <DateOfBirthSection \r\n+              formData={formData} \r\n+              handleInputChange={handleInputChange} \r\n+              errors={errors} \r\n+              touched={touched} \r\n+              setTouched={setTouched}\r\n+            />\r\n+\r\n+            {/* Checkbox for Updates */}\r\n+            <div className=\"mt-2 w-full\">\r\n+              <label className=\"flex items-start space-x-2\">\r\n+                <input\r\n+                  type=\"checkbox\"\r\n+                  name=\"receiveUpdates\"\r\n+                  checked={formData.receiveUpdates}\r\n+                  onChange={handleCheckboxChange}\r\n+                  className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n+                  aria-label=\"Receive updates\"\r\n+                  title=\"Receive updates\"\r\n+                />\r\n+                <span className=\"text-sm text-gray-700 flex-1\">\r\n+                  I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+                </span>\r\n+              </label>\r\n+              {errors.receiveUpdates && touched.receiveUpdates && (\r\n+                <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            {/* Continue Button */}\r\n+            <div>\r\n+              <button\r\n+                type=\"submit\"\r\n+                disabled={isLoading}\r\n+                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n+              >\r\n+                {isLoading ? \"Đang đăng ký...\" : \"Đăng ký\"}\r\n+              </button>\r\n+            </div>\r\n+          </form>\r\n+\r\n           {/* Dòng JOIN MY AISH */}\r\n           <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n             JOIN MY AISH\r\n           </div>\r\n"
                },
                {
                    "date": 1747289032004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -351,20 +351,10 @@\n       if (!response.ok) {\r\n         throw new Error(data.message || \"Đăng ký thất bại\");\r\n       }\r\n \r\n-      // Đăng nhập tự động sau khi đăng ký thành công\r\n-      const result = await signIn(\"credentials\", {\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        redirect: false,\r\n-      });\r\n-\r\n-      if (result?.error) {\r\n-        throw new Error(\"Đăng nhập tự động thất bại\");\r\n-      }\r\n-\r\n-      router.push(\"/\");\r\n+      // Chuyển hướng đến trang đăng nhập sau khi đăng ký thành công\r\n+      router.push(\"/login\");\r\n     } catch (error) {\r\n       setErrors({ api: error instanceof Error ? error.message : \"Có lỗi xảy ra\" });\r\n     } finally {\r\n       setIsLoading(false);\r\n"
                },
                {
                    "date": 1747289158032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,8 +311,11 @@\n     }\r\n     if (!formData.day || !formData.month || !formData.year) {\r\n       errors.date = \"Please enter your full date of birth\";\r\n     }\r\n+    if (!formData.receiveUpdates) {\r\n+      errors.receiveUpdates = \"You must agree to receive updates\";\r\n+    }\r\n \r\n     return errors;\r\n   };\r\n \r\n@@ -533,8 +536,9 @@\n                   onChange={handleCheckboxChange}\r\n                   className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n                   aria-label=\"Receive updates\"\r\n                   title=\"Receive updates\"\r\n+                  required\r\n                 />\r\n                 <span className=\"text-sm text-gray-700 flex-1\">\r\n                   I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </span>\r\n"
                },
                {
                    "date": 1747289214722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -552,11 +552,14 @@\n             <div>\r\n               <button\r\n                 type=\"submit\"\r\n                 disabled={isLoading}\r\n-                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n+                className=\"group relative w-[350px] flex justify-center py-4 border border-transparent text-base font-normal tracking-wide text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n+                style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               >\r\n-                {isLoading ? \"Đang đăng ký...\" : \"Đăng ký\"}\r\n+                <span className=\"text-base font-semibold tracking-widest\">\r\n+                  {isLoading ? \"Đang đăng ký...\" : \"Đăng ký\"}\r\n+                </span>\r\n               </button>\r\n             </div>\r\n           </form>\r\n \r\n"
                },
                {
                    "date": 1747289269377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n           value={value}\r\n           onChange={onChange}\r\n           onFocus={onFocus}\r\n           onBlur={handlePasswordBlur}\r\n-          className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+          className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n             ${isValid && isPasswordTouched ? \"border-green-500 focus:ring-green-500\" : \r\n               showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n           title=\"Password\"\r\n           aria-label=\"Password\"\r\n@@ -207,9 +207,9 @@\n               value={(formData[type as keyof FormData] as string) || \"\"}\r\n               onChange={(e) => handleDateInput(e, type)}\r\n               onFocus={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n               onBlur={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n-              className={`w-full pl-3.5 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+              className={`w-full pl-3.5 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n                 ${showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n               maxLength={type === \"year\" ? 4 : 2}\r\n             />\r\n           </div>\r\n@@ -432,9 +432,9 @@\n                   value={formData.email}\r\n                   onChange={handleInputChange}\r\n                   onFocus={() => handleFocus(\"email\")}\r\n                   onBlur={() => handleBlur(\"email\")}\r\n-                  className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                  className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n                     ${errors.email ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n                   readOnly={!isEmailEditable}\r\n                   aria-label=\"Email\"\r\n                   placeholder=\"Enter your email\"\r\n@@ -490,9 +490,9 @@\n                     value={(formData[field as keyof FormData] as string) || \"\"}\r\n                     onChange={handleInputChange}\r\n                     onFocus={() => handleFocus(field)}\r\n                     onBlur={() => handleBlur(field)}\r\n-                    className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-md focus:outline-none focus:ring-2 \r\n+                    className={`w-full px-4 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n                       ${errors[field] ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n                     aria-label={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n                     autoComplete={field === \"firstName\" ? \"given-name\" : \"family-name\"}\r\n                     title={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n"
                },
                {
                    "date": 1747407232632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,31 +372,31 @@\n     <>\r\n       <Head>\r\n         <title>Register | My AISH</title>\r\n       </Head>\r\n-      <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n-        <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n+      <div className=\"min-h-screen bg-white flex flex-col items-center pt-12 md:pt-20\">\r\n+        <h1 className=\"text-3xl md:text-5xl font-bold text-black text-center my-4 md:my-8 tracking-wide\">\r\n           MY AISH ACCOUNT\r\n         </h1>\r\n-        <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n+        <div className=\"w-full max-w-[280px] md:max-w-[350px] flex flex-col gap-4\">\r\n           <button \r\n             onClick={handleGoogleSignIn}\r\n-            className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+            className=\"flex items-center justify-center w-full md:w-[350px] border border-black text-black py-2.5 md:py-4 rounded-none text-xs md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n             style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n           >\r\n-            <FcGoogle className=\"text-2xl mr-3\" />\r\n-            <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+            <FcGoogle className=\"text-lg md:text-2xl mr-2 md:mr-3\" />\r\n+            <span className=\"text-xs md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n           </button>\r\n-          <div className=\"flex items-center justify-center mt-3\">\r\n-            <span className=\"text-black font-semibold\">OR</span>\r\n+          <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n+            <span className=\"text-black font-semibold text-sm md:text-base\">OR</span>\r\n           </div>\r\n           <div className=\"flex justify-center w-full\">\r\n-            <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n+            <h2 className=\"text-black text-base md:text-3xl font-semibold text-center md:whitespace-nowrap\">\r\n               CONTINUE WITH YOUR EMAIL ADDRESS\r\n             </h2>\r\n           </div>\r\n-          <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n-            <p className=\"text-black text-2xs font-semibold\">\r\n+          <div className=\"flex justify-center w-full text-center px-2 md:px-4 md:whitespace-nowrap\">\r\n+            <p className=\"text-black text-[8px] md:text-xs font-semibold\">\r\n               SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n             </p>\r\n           </div>\r\n \r\n@@ -404,9 +404,9 @@\n             {/* Email Field */}\r\n             <div className=\"relative w-full mt-2\">\r\n               <label htmlFor=\"email\" className=\"sr-only\">Email</label>\r\n               <motion.label\r\n-                className={`absolute text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+                className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${errors.email ? \"text-red-400\" : \"text-gray-500\"}`}\r\n                 initial={{ \r\n                   top: formData.email ? \"5px\" : \"50%\", \r\n                   left: formData.email ? \"4px\" : \"12px\",\r\n                   scale: formData.email ? 0.75 : 1,\r\n@@ -450,22 +450,22 @@\n                   title=\"Edit email\"\r\n                   tabIndex={0}\r\n                   role=\"button\"\r\n                 >\r\n-                  <FiEdit2 className=\"text-gray-500\" />\r\n+                  <FiEdit2 className=\"text-gray-500 w-4 h-4 md:w-5 md:h-5\" />\r\n                 </motion.div>\r\n               </div>\r\n               {errors.email && touched.email && (\r\n-                <p className=\"text-red-400 text-xs mt-1\">{errors.email}</p>\r\n+                <p className=\"text-red-400 text-[8px] md:text-xs mt-1\">{errors.email}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* First Name and Last Name Fields */}\r\n             {\"firstName lastName\".split(\" \").map((field) => (\r\n               <div key={field} className=\"relative w-full mt-2\">\r\n                 <label htmlFor={field} className=\"sr-only\">{field === \"firstName\" ? \"First Name\" : \"Last Name\"}</label>\r\n                 <motion.label\r\n-                  className={`absolute text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+                  className={`absolute text-xs md:text-sm bg-white px-1 z-10 ${errors[field] ? \"text-red-400\" : \"text-gray-500\"}`}\r\n                   initial={{ \r\n                     top: formData[field as keyof FormData] ? \"5px\" : \"50%\", \r\n                     left: formData[field as keyof FormData] ? \"4px\" : \"12px\",\r\n                     scale: formData[field as keyof FormData] ? 0.75 : 1,\r\n@@ -498,15 +498,15 @@\n                     title={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n                   />\r\n                 </div>\r\n                 {errors[field] && touched[field] && (\r\n-                  <p className=\"text-red-400 text-xs mt-1\">{errors[field]}</p>\r\n+                  <p className=\"text-red-400 text-[8px] md:text-xs mt-1\">{errors[field]}</p>\r\n                 )}\r\n               </div>\r\n             ))}\r\n \r\n             {/* Password Field */}\r\n-            <div className=\"relative w-full mt-4\">\r\n+            <div className=\"relative w-full mt-2\">\r\n               <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n               <PasswordField \r\n                 value={formData.password}\r\n                 onChange={handleInputChange}\r\n@@ -533,46 +533,46 @@\n                   type=\"checkbox\"\r\n                   name=\"receiveUpdates\"\r\n                   checked={formData.receiveUpdates}\r\n                   onChange={handleCheckboxChange}\r\n-                  className=\"form-checkbox h-4 w-8 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n+                  className=\"form-checkbox h-3 w-3 md:h-4 md:w-4 text-black border-gray-300 rounded focus:ring-black mt-1\"\r\n                   aria-label=\"Receive updates\"\r\n                   title=\"Receive updates\"\r\n                   required\r\n                 />\r\n-                <span className=\"text-sm text-gray-700 flex-1\">\r\n+                <span className=\"text-[8px] md:text-sm text-gray-700 flex-1\">\r\n                   I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </span>\r\n               </label>\r\n               {errors.receiveUpdates && touched.receiveUpdates && (\r\n-                <p className=\"text-red-400 text-xs mt-1\">{errors.receiveUpdates}</p>\r\n+                <p className=\"text-red-400 text-[8px] md:text-xs mt-1\">{errors.receiveUpdates}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* Continue Button */}\r\n             <div>\r\n               <button\r\n                 type=\"submit\"\r\n                 disabled={isLoading}\r\n-                className=\"group relative w-[350px] flex justify-center py-4 border border-transparent text-base font-normal tracking-wide text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n+                className=\"group relative w-full md:w-[350px] flex justify-center py-2.5 md:py-4 border border-transparent text-xs md:text-base font-normal tracking-wide text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               >\r\n-                <span className=\"text-base font-semibold tracking-widest\">\r\n+                <span className=\"text-xs md:text-base font-semibold tracking-widest\">\r\n                   {isLoading ? \"Đang đăng ký...\" : \"Đăng ký\"}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n-          </form>\r\n \r\n-          {/* Dòng JOIN MY AISH */}\r\n-          <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n-            JOIN MY AISH\r\n-          </div>\r\n+            {/* Dòng JOIN MY AISH */}\r\n+            <div className=\"mt-8 md:mt-15 mb-8 md:mb-12 text-black font-semibold text-xl md:text-2xl text-center\">\r\n+              JOIN MY AISH\r\n+            </div>\r\n \r\n-          {/* Hiển thị lỗi API nếu có */}\r\n-          {errors.api && (\r\n-            <p className=\"text-red-400 text-xs mt-1\">{errors.api}</p>\r\n-          )}\r\n+            {/* Hiển thị lỗi API nếu có */}\r\n+            {errors.api && (\r\n+              <p className=\"text-red-400 text-[8px] md:text-xs mt-1\">{errors.api}</p>\r\n+            )}\r\n+          </form>\r\n         </div>\r\n       </div>\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1747407445492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,13 +129,13 @@\n           { key: \"hasSpecialChar\", text: \"Please enter one special character (!@#$%^&*(),.?\\\":{}|<>)\" },\r\n         ].map((req) => (\r\n           <div key={req.key} className=\"flex items-center gap-2\">\r\n             {passwordValidation[req.key as keyof PasswordValidation] ? (\r\n-              <AiOutlineCheck className=\"text-green-500 min-w-[16px]\" />\r\n+              <AiOutlineCheck className=\"text-green-500 min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4\" />\r\n             ) : (\r\n-              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[16px]`} />\r\n+              <AiOutlineClose className={`${isPasswordTouched ? \"text-red-500\" : \"text-gray-400\"} min-w-[12px] w-3 h-3 md:min-w-[16px] md:w-4 md:h-4`} />\r\n             )}\r\n-            <p className={`text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n+            <p className={`text-[7px] md:text-xs ${passwordValidation[req.key as keyof PasswordValidation] ? \"text-green-500\" : isPasswordTouched ? \"text-red-500\" : \"text-gray-500\"}`}>\r\n               {req.text}\r\n             </p>\r\n           </div>\r\n         ))}\r\n@@ -215,9 +215,9 @@\n           </div>\r\n         ))}\r\n       </div>\r\n       {showError && (\r\n-        <p className=\"text-red-400 text-xs -mt-2.5 space-y-1 pl-1\">Please enter a valid date of birth</p>\r\n+        <p className=\"text-red-400 text-[7px] md:text-xs -mt-2.5 space-y-1 pl-1\">Please enter a valid date of birth</p>\r\n       )}\r\n     </>\r\n   );\r\n };\r\n@@ -389,14 +389,14 @@\n           <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n             <span className=\"text-black font-semibold text-sm md:text-base\">OR</span>\r\n           </div>\r\n           <div className=\"flex justify-center w-full\">\r\n-            <h2 className=\"text-black text-base md:text-3xl font-semibold text-center md:whitespace-nowrap\">\r\n+            <h2 className=\"text-black text-[10px] md:text-3xl font-semibold text-center md:whitespace-nowrap\">\r\n               CONTINUE WITH YOUR EMAIL ADDRESS\r\n             </h2>\r\n           </div>\r\n           <div className=\"flex justify-center w-full text-center px-2 md:px-4 md:whitespace-nowrap\">\r\n-            <p className=\"text-black text-[8px] md:text-xs font-semibold\">\r\n+            <p className=\"text-black text-[7px] md:text-xs font-semibold\">\r\n               SIGN IN WITH YOUR EMAIL AND PASSWORD OR CREATE A PROFILE IF YOU ARE NEW\r\n             </p>\r\n           </div>\r\n \r\n@@ -454,9 +454,9 @@\n                   <FiEdit2 className=\"text-gray-500 w-4 h-4 md:w-5 md:h-5\" />\r\n                 </motion.div>\r\n               </div>\r\n               {errors.email && touched.email && (\r\n-                <p className=\"text-red-400 text-[8px] md:text-xs mt-1\">{errors.email}</p>\r\n+                <p className=\"text-red-400 text-[7px] md:text-xs mt-1\">{errors.email}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* First Name and Last Name Fields */}\r\n@@ -498,9 +498,9 @@\n                     title={field === \"firstName\" ? \"First Name\" : \"Last Name\"}\r\n                   />\r\n                 </div>\r\n                 {errors[field] && touched[field] && (\r\n-                  <p className=\"text-red-400 text-[8px] md:text-xs mt-1\">{errors[field]}</p>\r\n+                  <p className=\"text-red-400 text-[7px] md:text-xs mt-1\">{errors[field]}</p>\r\n                 )}\r\n               </div>\r\n             ))}\r\n \r\n@@ -543,9 +543,9 @@\n                   I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </span>\r\n               </label>\r\n               {errors.receiveUpdates && touched.receiveUpdates && (\r\n-                <p className=\"text-red-400 text-[8px] md:text-xs mt-1\">{errors.receiveUpdates}</p>\r\n+                <p className=\"text-red-400 text-[7px] md:text-xs mt-1\">{errors.receiveUpdates}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* Continue Button */}\r\n@@ -568,9 +568,9 @@\n             </div>\r\n \r\n             {/* Hiển thị lỗi API nếu có */}\r\n             {errors.api && (\r\n-              <p className=\"text-red-400 text-[8px] md:text-xs mt-1\">{errors.api}</p>\r\n+              <p className=\"text-red-400 text-[7px] md:text-xs mt-1\">{errors.api}</p>\r\n             )}\r\n           </form>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1747407594331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,14 +177,14 @@\n   const showError = isDateTouched && !isDateValid;\r\n \r\n   return (\r\n     <>\r\n-      <label className=\"text-gray-500 text-xs font-semibold mt-2\">DATE OF BIRTH</label>\r\n+      <label className=\"text-gray-500 text-[7px] md:text-xs font-semibold mt-2\">DATE OF BIRTH</label>\r\n       <div className=\"flex gap-2\">\r\n         {[\"month\", \"day\", \"year\"].map((type) => (\r\n           <div key={type} className=\"w-1/3 flex flex-col relative\">\r\n             <motion.label\r\n-              className={`absolute text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+              className={`absolute text-[7px] md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n               initial={{ \r\n                 top: \"50%\", \r\n                 left: \"12px\",\r\n                 scale: 1,\r\n"
                },
                {
                    "date": 1747407646688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,14 +177,14 @@\n   const showError = isDateTouched && !isDateValid;\r\n \r\n   return (\r\n     <>\r\n-      <label className=\"text-gray-500 text-[7px] md:text-xs font-semibold mt-2\">DATE OF BIRTH</label>\r\n+      <label className=\"text-gray-500 text-xs font-semibold mt-2\">DATE OF BIRTH</label>\r\n       <div className=\"flex gap-2\">\r\n         {[\"month\", \"day\", \"year\"].map((type) => (\r\n           <div key={type} className=\"w-1/3 flex flex-col relative\">\r\n             <motion.label\r\n-              className={`absolute text-[7px] md:text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n+              className={`absolute text-sm bg-white px-1 z-10 ${showError ? \"text-red-400\" : \"text-gray-500\"}`}\r\n               initial={{ \r\n                 top: \"50%\", \r\n                 left: \"12px\",\r\n                 scale: 1,\r\n"
                },
                {
                    "date": 1747407700308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n               value={(formData[type as keyof FormData] as string) || \"\"}\r\n               onChange={(e) => handleDateInput(e, type)}\r\n               onFocus={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n               onBlur={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n-              className={`w-full pl-3.5 pt-6 pb-2 text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n+              className={`w-full pl-3.5 pt-6 pb-2 text-[10px] md:text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n                 ${showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n               maxLength={type === \"year\" ? 4 : 2}\r\n             />\r\n           </div>\r\n"
                },
                {
                    "date": 1747407739858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n               value={(formData[type as keyof FormData] as string) || \"\"}\r\n               onChange={(e) => handleDateInput(e, type)}\r\n               onFocus={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n               onBlur={() => setTouched((prev) => ({ ...prev, [type]: true }))}\r\n-              className={`w-full pl-3.5 pt-6 pb-2 text-[10px] md:text-sm text-black border rounded-none focus:outline-none focus:ring-2 \r\n+              className={`w-full pl-3.5 pt-6 pb-2 text-[10px] md:text-[11px] text-black border rounded-none focus:outline-none focus:ring-2 \r\n                 ${showError ? \"border-red-400 focus:ring-red-400\" : \"border-gray-300 focus:ring-black\"}`}\r\n               maxLength={type === \"year\" ? 4 : 2}\r\n             />\r\n           </div>\r\n"
                },
                {
                    "date": 1747407774958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -538,9 +538,9 @@\n                   aria-label=\"Receive updates\"\r\n                   title=\"Receive updates\"\r\n                   required\r\n                 />\r\n-                <span className=\"text-[8px] md:text-sm text-gray-700 flex-1\">\r\n+                <span className=\"text-[8px] md:text-[10px] text-gray-700 flex-1\">\r\n                   I would like to receive updates (including by email, SMS, MMS, social media, phone...) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </span>\r\n               </label>\r\n               {errors.receiveUpdates && touched.receiveUpdates && (\r\n"
                },
                {
                    "date": 1747407801773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -556,9 +556,9 @@\n                 className=\"group relative w-full md:w-[350px] flex justify-center py-2.5 md:py-4 border border-transparent text-xs md:text-base font-normal tracking-wide text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50\"\r\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               >\r\n                 <span className=\"text-xs md:text-base font-semibold tracking-widest\">\r\n-                  {isLoading ? \"Đang đăng ký...\" : \"Đăng ký\"}\r\n+                  {isLoading ? \"REGISTERING...\" : \"REGISTER\"}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n \r\n"
                }
            ],
            "date": 1746959655096,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter, useSearchParams } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\n\r\nexport default function RegisterPage() {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Lấy email từ URL nếu có\r\n    const email = searchParams.get(\"email\");\r\n    if (email) {\r\n      setFormData(prev => ({ ...prev, email }));\r\n    }\r\n  }, [searchParams]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    // Kiểm tra mật khẩu\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError(\"Mật khẩu xác nhận không khớp\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: formData.name,\r\n          email: formData.email,\r\n          password: formData.password,\r\n          phone: formData.phone,\r\n          address: formData.address,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Đăng ký thành công, chuyển đến trang đăng nhập\r\n        router.push(\"/login?registered=true\");\r\n      } else {\r\n        setError(data.error || \"Có lỗi xảy ra khi đăng ký\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Đăng ký tài khoản\r\n          </h2>\r\n        </div>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"sr-only\">\r\n                Họ tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                required\r\n                value={formData.name}\r\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Họ tên\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"sr-only\">\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required\r\n                value={formData.email}\r\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Mật khẩu\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                required\r\n                value={formData.password}\r\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Mật khẩu\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"sr-only\">\r\n                Xác nhận mật khẩu\r\n              </label>\r\n              <input\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                value={formData.confirmPassword}\r\n                onChange={(e) => setFormData({ ...formData, confirmPassword: e.target.value })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Xác nhận mật khẩu\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"phone\" className=\"sr-only\">\r\n                Số điện thoại\r\n              </label>\r\n              <input\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                value={formData.phone}\r\n                onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Số điện thoại\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"address\" className=\"sr-only\">\r\n                Địa chỉ\r\n              </label>\r\n              <textarea\r\n                id=\"address\"\r\n                name=\"address\"\r\n                value={formData.address}\r\n                onChange={(e) => setFormData({ ...formData, address: e.target.value })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Địa chỉ\"\r\n                rows={3}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n            >\r\n              Đăng ký\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"text-sm text-center\">\r\n            <Link href=\"/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n              Đã có tài khoản? Đăng nhập\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
{
    "sourceFile": "src/app/settings/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1746893165342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747118156667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n 'use client';\r\n \r\n import { useState, useEffect, useCallback } from 'react';\r\n import { motion } from 'framer-motion';\r\n+import { useSession } from 'next-auth/react';\r\n+import { toast } from 'react-hot-toast';\r\n \r\n // Thêm component Modal\r\n const DeactivateModal = ({ isOpen, onClose }) => {\r\n   const [reason, setReason] = useState('');\r\n@@ -157,51 +159,89 @@\n   );\r\n };\r\n \r\n export default function SettingsPage() {\r\n-  // Dữ liệu mặc định\r\n-  const defaultData = {\r\n-    firstName: 'D',\r\n-    lastName: 'LICHT',\r\n+  const { data: session } = useSession();\r\n+  const [initialData, setInitialData] = useState({\r\n+    firstName: '',\r\n+    lastName: '',\r\n     country: 'Việt Nam',\r\n-    birthDay: '03',\r\n-    birthMonth: '30',\r\n-    birthYear: '2001',\r\n-    email: 'dlicht03@gmail.com',\r\n-  };\r\n-\r\n-  // Khởi tạo state với dữ liệu mặc định\r\n-  const [initialData, setInitialData] = useState(defaultData);\r\n-  const [formData, setFormData] = useState(defaultData);\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [formData, setFormData] = useState(initialData);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [isChecked, setIsChecked] = useState(false);\r\n   const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n \r\n-  // Sử dụng useEffect để load dữ liệu từ localStorage sau khi component được mount\r\n+  // Load user data when component mounts\r\n   useEffect(() => {\r\n-    // Kiểm tra xem có đang ở môi trường browser không\r\n-    if (typeof window !== 'undefined') {\r\n-      const savedData = localStorage.getItem('userSettings');\r\n-      if (savedData) {\r\n-        const parsedData = JSON.parse(savedData);\r\n-        setInitialData(parsedData);\r\n-        setFormData(parsedData);\r\n+    const loadUserData = async () => {\r\n+      if (session?.user?.email) {\r\n+        try {\r\n+          const response = await fetch('/api/user/profile');\r\n+          if (response.ok) {\r\n+            const data = await response.json();\r\n+            const userData = {\r\n+              firstName: data.firstName || '',\r\n+              lastName: data.lastName || '',\r\n+              country: data.country || 'Việt Nam',\r\n+              birthDay: data.birthDay || '',\r\n+              birthMonth: data.birthMonth || '',\r\n+              birthYear: data.birthYear || '',\r\n+              email: data.email || '',\r\n+            };\r\n+            setInitialData(userData);\r\n+            setFormData(userData);\r\n+          }\r\n+        } catch (error) {\r\n+          console.error('Error loading user data:', error);\r\n+          toast.error('Failed to load user data');\r\n+        }\r\n       }\r\n-    }\r\n-  }, []);\r\n+    };\r\n \r\n-  // Sử dụng useCallback cho các hàm xử lý để tránh re-render không cần thiết\r\n+    loadUserData();\r\n+  }, [session]);\r\n+\r\n   const handleInputChange = useCallback((field, value) => {\r\n     setFormData(prev => ({\r\n       ...prev,\r\n       [field]: value\r\n     }));\r\n   }, []);\r\n \r\n-  const handleSubmit = useCallback((e) => {\r\n+  const handleSubmit = useCallback(async (e) => {\r\n     e.preventDefault();\r\n-  }, []);\r\n+    setIsLoading(true);\r\n \r\n+    try {\r\n+      const response = await fetch('/api/user/update', {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(formData),\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+\r\n+      if (response.ok) {\r\n+        setInitialData(formData);\r\n+        toast.success('Profile updated successfully');\r\n+      } else {\r\n+        toast.error(data.error || 'Failed to update profile');\r\n+      }\r\n+    } catch (error) {\r\n+      console.error('Error updating profile:', error);\r\n+      toast.error('Failed to update profile');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  }, [formData]);\r\n+\r\n   const handleSave = async (e) => {\r\n     e.preventDefault();\r\n     if (!isChecked) {\r\n       alert('Please accept the privacy settings before saving changes.');\r\n@@ -253,176 +293,105 @@\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen bg-white\">\r\n-      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n-        <div className=\"text-center py-16\">\r\n-          <div className=\"inline-block\">\r\n-            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n-            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}> {/* Thêm stopPropagation */}\r\n-          {/* Your Information Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n-            <div className=\"flex-1 space-y-12\">\r\n-              <div className=\"grid grid-cols-2 gap-8\">\r\n+      <div className=\"container mx-auto px-4 py-8 pt-32\">\r\n+        <div className=\"max-w-2xl mx-auto\">\r\n+          <h1 className=\"text-3xl font-bold mb-8 text-center\">SETTINGS</h1>\r\n+          \r\n+          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n+            {/* Personal Information Section */}\r\n+            <div className=\"space-y-4\">\r\n+              <h2 className=\"text-lg font-semibold\">Personal Information</h2>\r\n+              \r\n+              {/* Name Fields */}\r\n+              <div className=\"grid grid-cols-2 gap-4\">\r\n                 <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n-                  <input \r\n+                  <label className=\"block text-sm font-medium text-gray-700\">First Name</label>\r\n+                  <input\r\n                     type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                     value={formData.firstName}\r\n                     onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                   />\r\n                 </div>\r\n                 <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n-                  <input \r\n+                  <label className=\"block text-sm font-medium text-gray-700\">Last Name</label>\r\n+                  <input\r\n                     type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                     value={formData.lastName}\r\n                     onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                   />\r\n                 </div>\r\n               </div>\r\n \r\n+              {/* Email Field */}\r\n               <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n-                <input \r\n-                  type=\"text\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.country}\r\n-                  disabled\r\n-                />\r\n-              </div>\r\n-\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n-                <div className=\"grid grid-cols-3 gap-4\">\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"DD\"\r\n-                      min=\"1\"\r\n-                      max=\"31\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthDay}\r\n-                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n-                  </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"MM\"\r\n-                      min=\"1\"\r\n-                      max=\"12\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthMonth}\r\n-                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n-                  </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"YYYY\"\r\n-                      min=\"0\"\r\n-                      max=\"9999\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthYear}\r\n-                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Account Details Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n-            <div className=\"flex-1\">\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n-                <input \r\n+                <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n+                <input\r\n                   type=\"email\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                   value={formData.email}\r\n                   onChange={(e) => handleInputChange('email', e.target.value)}\r\n-                  onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                 />\r\n               </div>\r\n-            </div>\r\n-          </div>\r\n \r\n-          {/* Privacy Settings Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n-            <div className=\"flex-1 space-y-6\">\r\n-              <div className=\"flex items-start gap-4\">\r\n-                <input \r\n-                  type=\"checkbox\"\r\n-                  className=\"mt-1\"\r\n-                  checked={isChecked}\r\n-                  onChange={(e) => {\r\n-                    e.stopPropagation();\r\n-                    setIsChecked(e.target.checked);\r\n-                  }}\r\n-                />\r\n-                <p className=\"text-xs text-black\">\r\n-                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n-                </p>\r\n+              {/* Birth Date Fields */}\r\n+              <div>\r\n+                <label className=\"block text-sm font-medium text-gray-700\">Date of Birth</label>\r\n+                <div className=\"grid grid-cols-3 gap-4 mt-1\">\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Day\"\r\n+                    value={formData.birthDay}\r\n+                    onChange={(e) => handleInputChange('birthDay', e.target.value)}\r\n+                    className=\"block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n+                  />\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Month\"\r\n+                    value={formData.birthMonth}\r\n+                    onChange={(e) => handleInputChange('birthMonth', e.target.value)}\r\n+                    className=\"block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n+                  />\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    placeholder=\"Year\"\r\n+                    value={formData.birthYear}\r\n+                    onChange={(e) => handleInputChange('birthYear', e.target.value)}\r\n+                    className=\"block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n+                  />\r\n+                </div>\r\n               </div>\r\n-              <p className=\"text-xs text-black\">\r\n-                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n-              </p>\r\n             </div>\r\n-          </div>\r\n \r\n-          {/* Buttons */}\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div className=\"flex items-center gap-8\">\r\n-              <button \r\n-                type=\"button\"\r\n-                className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-                onClick={handleSave}\r\n-                disabled={!isChecked || isLoading}\r\n-              >\r\n-                {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n-              </button>\r\n-              <button \r\n-                type=\"button\"\r\n-                className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-                onClick={handleCancel}\r\n+            {/* Save Button */}\r\n+            <div className=\"flex justify-center\">\r\n+              <button\r\n+                type=\"submit\"\r\n                 disabled={isLoading}\r\n+                className=\"bg-black text-white px-8 py-3 text-sm uppercase hover:bg-gray-800 transition-colors\"\r\n               >\r\n-                CANCEL CHANGES\r\n+                {isLoading ? 'Saving...' : 'Save Changes'}\r\n               </button>\r\n             </div>\r\n-            <button \r\n-              type=\"button\"\r\n-              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+          </form>\r\n+\r\n+          {/* Deactivate Account Button */}\r\n+          <div className=\"mt-12 text-center\">\r\n+            <button\r\n               onClick={() => setIsDeactivateModalOpen(true)}\r\n+              className=\"text-red-600 text-sm hover:underline\"\r\n             >\r\n-              DEACTIVATE ACCOUNT\r\n+              Deactivate Account\r\n             </button>\r\n           </div>\r\n-        </form>\r\n+        </div>\r\n       </div>\r\n \r\n-      {/* Thêm Modal */}\r\n-      <DeactivateModal \r\n+      {/* Deactivate Modal */}\r\n+      <DeactivateModal\r\n         isOpen={isDeactivateModalOpen}\r\n         onClose={() => setIsDeactivateModalOpen(false)}\r\n       />\r\n     </div>\r\n"
                },
                {
                    "date": 1747118175612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n 'use client';\r\n \r\n import { useState, useEffect, useCallback } from 'react';\r\n import { motion } from 'framer-motion';\r\n-import { useSession } from 'next-auth/react';\r\n-import { toast } from 'react-hot-toast';\r\n \r\n // Thêm component Modal\r\n const DeactivateModal = ({ isOpen, onClose }) => {\r\n   const [reason, setReason] = useState('');\r\n@@ -159,89 +157,51 @@\n   );\r\n };\r\n \r\n export default function SettingsPage() {\r\n-  const { data: session } = useSession();\r\n-  const [initialData, setInitialData] = useState({\r\n-    firstName: '',\r\n-    lastName: '',\r\n+  // Dữ liệu mặc định\r\n+  const defaultData = {\r\n+    firstName: 'D',\r\n+    lastName: 'LICHT',\r\n     country: 'Việt Nam',\r\n-    birthDay: '',\r\n-    birthMonth: '',\r\n-    birthYear: '',\r\n-    email: '',\r\n-  });\r\n-  const [formData, setFormData] = useState(initialData);\r\n+    birthDay: '03',\r\n+    birthMonth: '30',\r\n+    birthYear: '2001',\r\n+    email: 'dlicht03@gmail.com',\r\n+  };\r\n+\r\n+  // Khởi tạo state với dữ liệu mặc định\r\n+  const [initialData, setInitialData] = useState(defaultData);\r\n+  const [formData, setFormData] = useState(defaultData);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [isChecked, setIsChecked] = useState(false);\r\n   const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n \r\n-  // Load user data when component mounts\r\n+  // Sử dụng useEffect để load dữ liệu từ localStorage sau khi component được mount\r\n   useEffect(() => {\r\n-    const loadUserData = async () => {\r\n-      if (session?.user?.email) {\r\n-        try {\r\n-          const response = await fetch('/api/user/profile');\r\n-          if (response.ok) {\r\n-            const data = await response.json();\r\n-            const userData = {\r\n-              firstName: data.firstName || '',\r\n-              lastName: data.lastName || '',\r\n-              country: data.country || 'Việt Nam',\r\n-              birthDay: data.birthDay || '',\r\n-              birthMonth: data.birthMonth || '',\r\n-              birthYear: data.birthYear || '',\r\n-              email: data.email || '',\r\n-            };\r\n-            setInitialData(userData);\r\n-            setFormData(userData);\r\n-          }\r\n-        } catch (error) {\r\n-          console.error('Error loading user data:', error);\r\n-          toast.error('Failed to load user data');\r\n-        }\r\n+    // Kiểm tra xem có đang ở môi trường browser không\r\n+    if (typeof window !== 'undefined') {\r\n+      const savedData = localStorage.getItem('userSettings');\r\n+      if (savedData) {\r\n+        const parsedData = JSON.parse(savedData);\r\n+        setInitialData(parsedData);\r\n+        setFormData(parsedData);\r\n       }\r\n-    };\r\n+    }\r\n+  }, []);\r\n \r\n-    loadUserData();\r\n-  }, [session]);\r\n-\r\n+  // Sử dụng useCallback cho các hàm xử lý để tránh re-render không cần thiết\r\n   const handleInputChange = useCallback((field, value) => {\r\n     setFormData(prev => ({\r\n       ...prev,\r\n       [field]: value\r\n     }));\r\n   }, []);\r\n \r\n-  const handleSubmit = useCallback(async (e) => {\r\n+  const handleSubmit = useCallback((e) => {\r\n     e.preventDefault();\r\n-    setIsLoading(true);\r\n+  }, []);\r\n \r\n-    try {\r\n-      const response = await fetch('/api/user/update', {\r\n-        method: 'PUT',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify(formData),\r\n-      });\r\n-\r\n-      const data = await response.json();\r\n-\r\n-      if (response.ok) {\r\n-        setInitialData(formData);\r\n-        toast.success('Profile updated successfully');\r\n-      } else {\r\n-        toast.error(data.error || 'Failed to update profile');\r\n-      }\r\n-    } catch (error) {\r\n-      console.error('Error updating profile:', error);\r\n-      toast.error('Failed to update profile');\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  }, [formData]);\r\n-\r\n   const handleSave = async (e) => {\r\n     e.preventDefault();\r\n     if (!isChecked) {\r\n       alert('Please accept the privacy settings before saving changes.');\r\n@@ -293,105 +253,176 @@\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen bg-white\">\r\n-      <div className=\"container mx-auto px-4 py-8 pt-32\">\r\n-        <div className=\"max-w-2xl mx-auto\">\r\n-          <h1 className=\"text-3xl font-bold mb-8 text-center\">SETTINGS</h1>\r\n-          \r\n-          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n-            {/* Personal Information Section */}\r\n-            <div className=\"space-y-4\">\r\n-              <h2 className=\"text-lg font-semibold\">Personal Information</h2>\r\n-              \r\n-              {/* Name Fields */}\r\n-              <div className=\"grid grid-cols-2 gap-4\">\r\n+      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n+        <div className=\"text-center py-16\">\r\n+          <div className=\"inline-block\">\r\n+            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n+            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}> {/* Thêm stopPropagation */}\r\n+          {/* Your Information Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n+            <div className=\"flex-1 space-y-12\">\r\n+              <div className=\"grid grid-cols-2 gap-8\">\r\n                 <div>\r\n-                  <label className=\"block text-sm font-medium text-gray-700\">First Name</label>\r\n-                  <input\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n+                  <input \r\n                     type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                     value={formData.firstName}\r\n                     onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n+                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                   />\r\n                 </div>\r\n                 <div>\r\n-                  <label className=\"block text-sm font-medium text-gray-700\">Last Name</label>\r\n-                  <input\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n+                  <input \r\n                     type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                     value={formData.lastName}\r\n                     onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n-                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n+                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                   />\r\n                 </div>\r\n               </div>\r\n \r\n-              {/* Email Field */}\r\n               <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n-                <input\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n+                <input \r\n+                  type=\"text\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.country}\r\n+                  disabled\r\n+                />\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n+                <div className=\"grid grid-cols-3 gap-4\">\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"DD\"\r\n+                      min=\"1\"\r\n+                      max=\"31\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthDay}\r\n+                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"MM\"\r\n+                      min=\"1\"\r\n+                      max=\"12\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthMonth}\r\n+                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"YYYY\"\r\n+                      min=\"0\"\r\n+                      max=\"9999\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthYear}\r\n+                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Account Details Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n+            <div className=\"flex-1\">\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n+                <input \r\n                   type=\"email\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                   value={formData.email}\r\n                   onChange={(e) => handleInputChange('email', e.target.value)}\r\n-                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n+                  onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                 />\r\n               </div>\r\n+            </div>\r\n+          </div>\r\n \r\n-              {/* Birth Date Fields */}\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700\">Date of Birth</label>\r\n-                <div className=\"grid grid-cols-3 gap-4 mt-1\">\r\n-                  <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Day\"\r\n-                    value={formData.birthDay}\r\n-                    onChange={(e) => handleInputChange('birthDay', e.target.value)}\r\n-                    className=\"block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n-                  />\r\n-                  <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Month\"\r\n-                    value={formData.birthMonth}\r\n-                    onChange={(e) => handleInputChange('birthMonth', e.target.value)}\r\n-                    className=\"block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n-                  />\r\n-                  <input\r\n-                    type=\"text\"\r\n-                    placeholder=\"Year\"\r\n-                    value={formData.birthYear}\r\n-                    onChange={(e) => handleInputChange('birthYear', e.target.value)}\r\n-                    className=\"block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n-                  />\r\n-                </div>\r\n+          {/* Privacy Settings Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n+            <div className=\"flex-1 space-y-6\">\r\n+              <div className=\"flex items-start gap-4\">\r\n+                <input \r\n+                  type=\"checkbox\"\r\n+                  className=\"mt-1\"\r\n+                  checked={isChecked}\r\n+                  onChange={(e) => {\r\n+                    e.stopPropagation();\r\n+                    setIsChecked(e.target.checked);\r\n+                  }}\r\n+                />\r\n+                <p className=\"text-xs text-black\">\r\n+                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+                </p>\r\n               </div>\r\n+              <p className=\"text-xs text-black\">\r\n+                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n+                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+              </p>\r\n             </div>\r\n+          </div>\r\n \r\n-            {/* Save Button */}\r\n-            <div className=\"flex justify-center\">\r\n-              <button\r\n-                type=\"submit\"\r\n+          {/* Buttons */}\r\n+          <div className=\"flex items-center justify-between\">\r\n+            <div className=\"flex items-center gap-8\">\r\n+              <button \r\n+                type=\"button\"\r\n+                className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                onClick={handleSave}\r\n+                disabled={!isChecked || isLoading}\r\n+              >\r\n+                {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+              </button>\r\n+              <button \r\n+                type=\"button\"\r\n+                className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+                onClick={handleCancel}\r\n                 disabled={isLoading}\r\n-                className=\"bg-black text-white px-8 py-3 text-sm uppercase hover:bg-gray-800 transition-colors\"\r\n               >\r\n-                {isLoading ? 'Saving...' : 'Save Changes'}\r\n+                CANCEL CHANGES\r\n               </button>\r\n             </div>\r\n-          </form>\r\n-\r\n-          {/* Deactivate Account Button */}\r\n-          <div className=\"mt-12 text-center\">\r\n-            <button\r\n+            <button \r\n+              type=\"button\"\r\n+              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n               onClick={() => setIsDeactivateModalOpen(true)}\r\n-              className=\"text-red-600 text-sm hover:underline\"\r\n             >\r\n-              Deactivate Account\r\n+              DEACTIVATE ACCOUNT\r\n             </button>\r\n           </div>\r\n-        </div>\r\n+        </form>\r\n       </div>\r\n \r\n-      {/* Deactivate Modal */}\r\n-      <DeactivateModal\r\n+      {/* Thêm Modal */}\r\n+      <DeactivateModal \r\n         isOpen={isDeactivateModalOpen}\r\n         onClose={() => setIsDeactivateModalOpen(false)}\r\n       />\r\n     </div>\r\n"
                },
                {
                    "date": 1747118244497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n 'use client';\r\n \r\n import { useState, useEffect, useCallback } from 'react';\r\n import { motion } from 'framer-motion';\r\n+import { useSession } from 'next-auth/react';\r\n+import toast from 'react-hot-toast';\r\n \r\n // Thêm component Modal\r\n const DeactivateModal = ({ isOpen, onClose }) => {\r\n   const [reason, setReason] = useState('');\r\n@@ -157,40 +159,53 @@\n   );\r\n };\r\n \r\n export default function SettingsPage() {\r\n-  // Dữ liệu mặc định\r\n-  const defaultData = {\r\n-    firstName: 'D',\r\n-    lastName: 'LICHT',\r\n+  const { data: session } = useSession();\r\n+  const [formData, setFormData] = useState({\r\n+    firstName: '',\r\n+    lastName: '',\r\n     country: 'Việt Nam',\r\n-    birthDay: '03',\r\n-    birthMonth: '30',\r\n-    birthYear: '2001',\r\n-    email: 'dlicht03@gmail.com',\r\n-  };\r\n-\r\n-  // Khởi tạo state với dữ liệu mặc định\r\n-  const [initialData, setInitialData] = useState(defaultData);\r\n-  const [formData, setFormData] = useState(defaultData);\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [isChecked, setIsChecked] = useState(false);\r\n   const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n \r\n-  // Sử dụng useEffect để load dữ liệu từ localStorage sau khi component được mount\r\n+  // Load user data when component mounts\r\n   useEffect(() => {\r\n-    // Kiểm tra xem có đang ở môi trường browser không\r\n-    if (typeof window !== 'undefined') {\r\n-      const savedData = localStorage.getItem('userSettings');\r\n-      if (savedData) {\r\n-        const parsedData = JSON.parse(savedData);\r\n-        setInitialData(parsedData);\r\n-        setFormData(parsedData);\r\n+    const fetchUserData = async () => {\r\n+      try {\r\n+        const response = await fetch('/api/user/profile');\r\n+        if (!response.ok) {\r\n+          throw new Error('Failed to fetch user data');\r\n+        }\r\n+        const data = await response.json();\r\n+        \r\n+        // Format the data to match our form structure\r\n+        setFormData({\r\n+          firstName: data.firstName || '',\r\n+          lastName: data.lastName || '',\r\n+          country: 'Việt Nam',\r\n+          birthDay: data.birthDay || '',\r\n+          birthMonth: data.birthMonth || '',\r\n+          birthYear: data.birthYear || '',\r\n+          email: data.email || '',\r\n+        });\r\n+      } catch (error) {\r\n+        console.error('Error fetching user data:', error);\r\n+        toast.error('Failed to load user data');\r\n       }\r\n+    };\r\n+\r\n+    if (session?.user) {\r\n+      fetchUserData();\r\n     }\r\n-  }, []);\r\n+  }, [session]);\r\n \r\n-  // Sử dụng useCallback cho các hàm xử lý để tránh re-render không cần thiết\r\n   const handleInputChange = useCallback((field, value) => {\r\n     setFormData(prev => ({\r\n       ...prev,\r\n       [field]: value\r\n@@ -203,38 +218,76 @@\n \r\n   const handleSave = async (e) => {\r\n     e.preventDefault();\r\n     if (!isChecked) {\r\n-      alert('Please accept the privacy settings before saving changes.');\r\n+      toast.error('Please accept the privacy settings before saving changes.');\r\n       return;\r\n     }\r\n \r\n     try {\r\n       setIsLoading(true);\r\n-      await new Promise(resolve => setTimeout(resolve, 1000));\r\n       \r\n-      // Kiểm tra trước khi sử dụng localStorage\r\n-      if (typeof window !== 'undefined') {\r\n-        localStorage.setItem('userSettings', JSON.stringify(formData));\r\n+      const response = await fetch('/api/user/update', {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          firstName: formData.firstName,\r\n+          lastName: formData.lastName,\r\n+          birthDay: formData.birthDay,\r\n+          birthMonth: formData.birthMonth,\r\n+          birthYear: formData.birthYear,\r\n+          email: formData.email,\r\n+        }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        const error = await response.json();\r\n+        throw new Error(error.message || 'Failed to update user information');\r\n       }\r\n-      \r\n-      setInitialData(formData);\r\n-      alert('Changes saved successfully!');\r\n-      window.location.reload();\r\n+\r\n+      toast.success('Changes saved successfully!');\r\n     } catch (error) {\r\n       console.error('Error saving changes:', error);\r\n-      alert('Failed to save changes. Please try again.');\r\n+      toast.error(error.message || 'Failed to save changes. Please try again.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n \r\n   const handleCancel = useCallback((e) => {\r\n     e.preventDefault();\r\n-    e.stopPropagation(); // Thêm stopPropagation\r\n-    setFormData(initialData);\r\n-  }, [initialData]);\r\n+    e.stopPropagation();\r\n+    // Reload user data from API\r\n+    const fetchUserData = async () => {\r\n+      try {\r\n+        const response = await fetch('/api/user/profile');\r\n+        if (!response.ok) {\r\n+          throw new Error('Failed to fetch user data');\r\n+        }\r\n+        const data = await response.json();\r\n+        \r\n+        setFormData({\r\n+          firstName: data.firstName || '',\r\n+          lastName: data.lastName || '',\r\n+          country: 'Việt Nam',\r\n+          birthDay: data.birthDay || '',\r\n+          birthMonth: data.birthMonth || '',\r\n+          birthYear: data.birthYear || '',\r\n+          email: data.email || '',\r\n+        });\r\n+      } catch (error) {\r\n+        console.error('Error fetching user data:', error);\r\n+        toast.error('Failed to load user data');\r\n+      }\r\n+    };\r\n \r\n+    if (session?.user) {\r\n+      fetchUserData();\r\n+    }\r\n+  }, [session]);\r\n+\r\n   const validateDay = (value) => {\r\n     const day = parseInt(value);\r\n     if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n     return value;\r\n"
                },
                {
                    "date": 1747118414214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,8 +160,17 @@\n };\r\n \r\n export default function SettingsPage() {\r\n   const { data: session } = useSession();\r\n+  const [initialData, setInitialData] = useState({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n   const [formData, setFormData] = useState({\r\n     firstName: '',\r\n     lastName: '',\r\n     country: 'Việt Nam',\r\n@@ -184,20 +193,24 @@\n         }\r\n         const data = await response.json();\r\n         \r\n         // Format the data to match our form structure\r\n-        setFormData({\r\n+        const formattedData = {\r\n           firstName: data.firstName || '',\r\n           lastName: data.lastName || '',\r\n           country: 'Việt Nam',\r\n           birthDay: data.birthDay || '',\r\n           birthMonth: data.birthMonth || '',\r\n           birthYear: data.birthYear || '',\r\n           email: data.email || '',\r\n-        });\r\n+        };\r\n+        \r\n+        // Set both initial and form data\r\n+        setInitialData(formattedData);\r\n+        setFormData(formattedData);\r\n       } catch (error) {\r\n         console.error('Error fetching user data:', error);\r\n-        toast.error('Failed to load user data');\r\n+        toast.error('Không thể tải dữ liệu người dùng');\r\n       }\r\n     };\r\n \r\n     if (session?.user) {\r\n@@ -218,9 +231,9 @@\n \r\n   const handleSave = async (e) => {\r\n     e.preventDefault();\r\n     if (!isChecked) {\r\n-      toast.error('Please accept the privacy settings before saving changes.');\r\n+      toast.error('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n       return;\r\n     }\r\n \r\n     try {\r\n@@ -242,52 +255,30 @@\n       });\r\n \r\n       if (!response.ok) {\r\n         const error = await response.json();\r\n-        throw new Error(error.message || 'Failed to update user information');\r\n+        throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n       }\r\n \r\n-      toast.success('Changes saved successfully!');\r\n+      // Cập nhật initialData sau khi lưu thành công\r\n+      setInitialData(formData);\r\n+      toast.success('Lưu thay đổi thành công!');\r\n     } catch (error) {\r\n       console.error('Error saving changes:', error);\r\n-      toast.error(error.message || 'Failed to save changes. Please try again.');\r\n+      toast.error(error.message || 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n \r\n   const handleCancel = useCallback((e) => {\r\n     e.preventDefault();\r\n     e.stopPropagation();\r\n-    // Reload user data from API\r\n-    const fetchUserData = async () => {\r\n-      try {\r\n-        const response = await fetch('/api/user/profile');\r\n-        if (!response.ok) {\r\n-          throw new Error('Failed to fetch user data');\r\n-        }\r\n-        const data = await response.json();\r\n-        \r\n-        setFormData({\r\n-          firstName: data.firstName || '',\r\n-          lastName: data.lastName || '',\r\n-          country: 'Việt Nam',\r\n-          birthDay: data.birthDay || '',\r\n-          birthMonth: data.birthMonth || '',\r\n-          birthYear: data.birthYear || '',\r\n-          email: data.email || '',\r\n-        });\r\n-      } catch (error) {\r\n-        console.error('Error fetching user data:', error);\r\n-        toast.error('Failed to load user data');\r\n-      }\r\n-    };\r\n+    // Khôi phục lại dữ liệu ban đầu\r\n+    setFormData(initialData);\r\n+    toast.success('Đã hủy thay đổi');\r\n+  }, [initialData]);\r\n \r\n-    if (session?.user) {\r\n-      fetchUserData();\r\n-    }\r\n-  }, [session]);\r\n-\r\n   const validateDay = (value) => {\r\n     const day = parseInt(value);\r\n     if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n     return value;\r\n"
                },
                {
                    "date": 1747118567503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,9 +159,9 @@\n   );\r\n };\r\n \r\n export default function SettingsPage() {\r\n-  const { data: session } = useSession();\r\n+  const { data: session, status } = useSession();\r\n   const [initialData, setInitialData] = useState({\r\n     firstName: '',\r\n     lastName: '',\r\n     country: 'Việt Nam',\r\n@@ -178,16 +178,17 @@\n     birthMonth: '',\r\n     birthYear: '',\r\n     email: '',\r\n   });\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(true);\r\n   const [isChecked, setIsChecked] = useState(false);\r\n   const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n \r\n   // Load user data when component mounts\r\n   useEffect(() => {\r\n     const fetchUserData = async () => {\r\n       try {\r\n+        setIsLoading(true);\r\n         const response = await fetch('/api/user/profile');\r\n         if (!response.ok) {\r\n           throw new Error('Failed to fetch user data');\r\n         }\r\n@@ -209,15 +210,18 @@\n         setFormData(formattedData);\r\n       } catch (error) {\r\n         console.error('Error fetching user data:', error);\r\n         toast.error('Không thể tải dữ liệu người dùng');\r\n+      } finally {\r\n+        setIsLoading(false);\r\n       }\r\n     };\r\n \r\n-    if (session?.user) {\r\n+    // Chỉ fetch data khi đã có session\r\n+    if (status === 'authenticated') {\r\n       fetchUserData();\r\n     }\r\n-  }, [session]);\r\n+  }, [status]); // Thay đổi dependency từ session thành status\r\n \r\n   const handleInputChange = useCallback((field, value) => {\r\n     setFormData(prev => ({\r\n       ...prev,\r\n@@ -305,164 +309,170 @@\n             <div className=\"h-[1px] bg-black mt-2\"></div>\r\n           </div>\r\n         </div>\r\n \r\n-        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}> {/* Thêm stopPropagation */}\r\n-          {/* Your Information Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n-            <div className=\"flex-1 space-y-12\">\r\n-              <div className=\"grid grid-cols-2 gap-8\">\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.firstName}\r\n-                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                  />\r\n-                </div>\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.lastName}\r\n-                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                  />\r\n-                </div>\r\n-              </div>\r\n-\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n-                <input \r\n-                  type=\"text\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.country}\r\n-                  disabled\r\n-                />\r\n-              </div>\r\n-\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n-                <div className=\"grid grid-cols-3 gap-4\">\r\n+        {isLoading ? (\r\n+          <div className=\"text-center py-8\">\r\n+            <p className=\"text-sm text-gray-600\">Đang tải thông tin...</p>\r\n+          </div>\r\n+        ) : (\r\n+          <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n+            {/* Your Information Section */}\r\n+            <div className=\"flex\">\r\n+              <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n+              <div className=\"flex-1 space-y-12\">\r\n+                <div className=\"grid grid-cols-2 gap-8\">\r\n                   <div>\r\n+                    <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n                     <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"DD\"\r\n-                      min=\"1\"\r\n-                      max=\"31\"\r\n+                      type=\"text\"\r\n                       className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthDay}\r\n-                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n+                      value={formData.firstName}\r\n+                      onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n                       onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                     />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n                   </div>\r\n                   <div>\r\n+                    <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n                     <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"MM\"\r\n-                      min=\"1\"\r\n-                      max=\"12\"\r\n+                      type=\"text\"\r\n                       className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthMonth}\r\n-                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n+                      value={formData.lastName}\r\n+                      onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n                       onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                     />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n                   </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"YYYY\"\r\n-                      min=\"0\"\r\n-                      max=\"9999\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthYear}\r\n-                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n+                </div>\r\n+\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.country}\r\n+                    disabled\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n+                  <div className=\"grid grid-cols-3 gap-4\">\r\n+                    <div>\r\n+                      <input \r\n+                        type=\"number\"\r\n+                        placeholder=\"DD\"\r\n+                        min=\"1\"\r\n+                        max=\"31\"\r\n+                        className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                        value={formData.birthDay}\r\n+                        onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n+                        onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                      />\r\n+                      <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n+                    </div>\r\n+                    <div>\r\n+                      <input \r\n+                        type=\"number\"\r\n+                        placeholder=\"MM\"\r\n+                        min=\"1\"\r\n+                        max=\"12\"\r\n+                        className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                        value={formData.birthMonth}\r\n+                        onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n+                        onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                      />\r\n+                      <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n+                    </div>\r\n+                    <div>\r\n+                      <input \r\n+                        type=\"number\"\r\n+                        placeholder=\"YYYY\"\r\n+                        min=\"0\"\r\n+                        max=\"9999\"\r\n+                        className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                        value={formData.birthYear}\r\n+                        onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n+                        onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                      />\r\n+                      <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n+                    </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-          </div>\r\n \r\n-          {/* Account Details Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n-            <div className=\"flex-1\">\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n-                <input \r\n-                  type=\"email\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.email}\r\n-                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n-                  onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                />\r\n+            {/* Account Details Section */}\r\n+            <div className=\"flex\">\r\n+              <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n+              <div className=\"flex-1\">\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n+                  <input \r\n+                    type=\"email\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.email}\r\n+                    onChange={(e) => handleInputChange('email', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                  />\r\n+                </div>\r\n               </div>\r\n             </div>\r\n-          </div>\r\n \r\n-          {/* Privacy Settings Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n-            <div className=\"flex-1 space-y-6\">\r\n-              <div className=\"flex items-start gap-4\">\r\n-                <input \r\n-                  type=\"checkbox\"\r\n-                  className=\"mt-1\"\r\n-                  checked={isChecked}\r\n-                  onChange={(e) => {\r\n-                    e.stopPropagation();\r\n-                    setIsChecked(e.target.checked);\r\n-                  }}\r\n-                />\r\n+            {/* Privacy Settings Section */}\r\n+            <div className=\"flex\">\r\n+              <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n+              <div className=\"flex-1 space-y-6\">\r\n+                <div className=\"flex items-start gap-4\">\r\n+                  <input \r\n+                    type=\"checkbox\"\r\n+                    className=\"mt-1\"\r\n+                    checked={isChecked}\r\n+                    onChange={(e) => {\r\n+                      e.stopPropagation();\r\n+                      setIsChecked(e.target.checked);\r\n+                    }}\r\n+                  />\r\n+                  <p className=\"text-xs text-black\">\r\n+                    I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+                  </p>\r\n+                </div>\r\n                 <p className=\"text-xs text-black\">\r\n-                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+                  Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n+                  <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n                 </p>\r\n               </div>\r\n-              <p className=\"text-xs text-black\">\r\n-                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n-              </p>\r\n             </div>\r\n-          </div>\r\n \r\n-          {/* Buttons */}\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div className=\"flex items-center gap-8\">\r\n+            {/* Buttons */}\r\n+            <div className=\"flex items-center justify-between\">\r\n+              <div className=\"flex items-center gap-8\">\r\n+                <button \r\n+                  type=\"button\"\r\n+                  className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                  onClick={handleSave}\r\n+                  disabled={!isChecked || isLoading}\r\n+                >\r\n+                  {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+                </button>\r\n+                <button \r\n+                  type=\"button\"\r\n+                  className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+                  onClick={handleCancel}\r\n+                  disabled={isLoading}\r\n+                >\r\n+                  CANCEL CHANGES\r\n+                </button>\r\n+              </div>\r\n               <button \r\n                 type=\"button\"\r\n-                className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-                onClick={handleSave}\r\n-                disabled={!isChecked || isLoading}\r\n-              >\r\n-                {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n-              </button>\r\n-              <button \r\n-                type=\"button\"\r\n                 className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-                onClick={handleCancel}\r\n-                disabled={isLoading}\r\n+                onClick={() => setIsDeactivateModalOpen(true)}\r\n               >\r\n-                CANCEL CHANGES\r\n+                DEACTIVATE ACCOUNT\r\n               </button>\r\n             </div>\r\n-            <button \r\n-              type=\"button\"\r\n-              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-              onClick={() => setIsDeactivateModalOpen(true)}\r\n-            >\r\n-              DEACTIVATE ACCOUNT\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n+          </form>\r\n+        )}\r\n       </div>\r\n \r\n       {/* Thêm Modal */}\r\n       <DeactivateModal \r\n"
                },
                {
                    "date": 1747118675617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,9 +159,9 @@\n   );\r\n };\r\n \r\n export default function SettingsPage() {\r\n-  const { data: session, status } = useSession();\r\n+  const { data: session } = useSession();\r\n   const [initialData, setInitialData] = useState({\r\n     firstName: '',\r\n     lastName: '',\r\n     country: 'Việt Nam',\r\n@@ -178,17 +178,16 @@\n     birthMonth: '',\r\n     birthYear: '',\r\n     email: '',\r\n   });\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n   const [isChecked, setIsChecked] = useState(false);\r\n   const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n \r\n   // Load user data when component mounts\r\n   useEffect(() => {\r\n     const fetchUserData = async () => {\r\n       try {\r\n-        setIsLoading(true);\r\n         const response = await fetch('/api/user/profile');\r\n         if (!response.ok) {\r\n           throw new Error('Failed to fetch user data');\r\n         }\r\n@@ -210,18 +209,15 @@\n         setFormData(formattedData);\r\n       } catch (error) {\r\n         console.error('Error fetching user data:', error);\r\n         toast.error('Không thể tải dữ liệu người dùng');\r\n-      } finally {\r\n-        setIsLoading(false);\r\n       }\r\n     };\r\n \r\n-    // Chỉ fetch data khi đã có session\r\n-    if (status === 'authenticated') {\r\n+    if (session?.user) {\r\n       fetchUserData();\r\n     }\r\n-  }, [status]); // Thay đổi dependency từ session thành status\r\n+  }, [session]);\r\n \r\n   const handleInputChange = useCallback((field, value) => {\r\n     setFormData(prev => ({\r\n       ...prev,\r\n@@ -309,170 +305,164 @@\n             <div className=\"h-[1px] bg-black mt-2\"></div>\r\n           </div>\r\n         </div>\r\n \r\n-        {isLoading ? (\r\n-          <div className=\"text-center py-8\">\r\n-            <p className=\"text-sm text-gray-600\">Đang tải thông tin...</p>\r\n-          </div>\r\n-        ) : (\r\n-          <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n-            {/* Your Information Section */}\r\n-            <div className=\"flex\">\r\n-              <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n-              <div className=\"flex-1 space-y-12\">\r\n-                <div className=\"grid grid-cols-2 gap-8\">\r\n+        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}> {/* Thêm stopPropagation */}\r\n+          {/* Your Information Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n+            <div className=\"flex-1 space-y-12\">\r\n+              <div className=\"grid grid-cols-2 gap-8\">\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.firstName}\r\n+                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                  />\r\n+                </div>\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.lastName}\r\n+                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                  />\r\n+                </div>\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n+                <input \r\n+                  type=\"text\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.country}\r\n+                  disabled\r\n+                />\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n+                <div className=\"grid grid-cols-3 gap-4\">\r\n                   <div>\r\n-                    <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n                     <input \r\n-                      type=\"text\"\r\n+                      type=\"number\"\r\n+                      placeholder=\"DD\"\r\n+                      min=\"1\"\r\n+                      max=\"31\"\r\n                       className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.firstName}\r\n-                      onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n+                      value={formData.birthDay}\r\n+                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n                       onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                     />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n                   </div>\r\n                   <div>\r\n-                    <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n                     <input \r\n-                      type=\"text\"\r\n+                      type=\"number\"\r\n+                      placeholder=\"MM\"\r\n+                      min=\"1\"\r\n+                      max=\"12\"\r\n                       className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.lastName}\r\n-                      onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n+                      value={formData.birthMonth}\r\n+                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n                       onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                     />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n                   </div>\r\n-                </div>\r\n-\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.country}\r\n-                    disabled\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n-                  <div className=\"grid grid-cols-3 gap-4\">\r\n-                    <div>\r\n-                      <input \r\n-                        type=\"number\"\r\n-                        placeholder=\"DD\"\r\n-                        min=\"1\"\r\n-                        max=\"31\"\r\n-                        className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                        value={formData.birthDay}\r\n-                        onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n-                        onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                      />\r\n-                      <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n-                    </div>\r\n-                    <div>\r\n-                      <input \r\n-                        type=\"number\"\r\n-                        placeholder=\"MM\"\r\n-                        min=\"1\"\r\n-                        max=\"12\"\r\n-                        className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                        value={formData.birthMonth}\r\n-                        onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n-                        onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                      />\r\n-                      <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n-                    </div>\r\n-                    <div>\r\n-                      <input \r\n-                        type=\"number\"\r\n-                        placeholder=\"YYYY\"\r\n-                        min=\"0\"\r\n-                        max=\"9999\"\r\n-                        className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                        value={formData.birthYear}\r\n-                        onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n-                        onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                      />\r\n-                      <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n-                    </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"YYYY\"\r\n+                      min=\"0\"\r\n+                      max=\"9999\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthYear}\r\n+                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n+          </div>\r\n \r\n-            {/* Account Details Section */}\r\n-            <div className=\"flex\">\r\n-              <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n-              <div className=\"flex-1\">\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n-                  <input \r\n-                    type=\"email\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.email}\r\n-                    onChange={(e) => handleInputChange('email', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n-                  />\r\n-                </div>\r\n+          {/* Account Details Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n+            <div className=\"flex-1\">\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n+                <input \r\n+                  type=\"email\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.email}\r\n+                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n+                  onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n+                />\r\n               </div>\r\n             </div>\r\n+          </div>\r\n \r\n-            {/* Privacy Settings Section */}\r\n-            <div className=\"flex\">\r\n-              <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n-              <div className=\"flex-1 space-y-6\">\r\n-                <div className=\"flex items-start gap-4\">\r\n-                  <input \r\n-                    type=\"checkbox\"\r\n-                    className=\"mt-1\"\r\n-                    checked={isChecked}\r\n-                    onChange={(e) => {\r\n-                      e.stopPropagation();\r\n-                      setIsChecked(e.target.checked);\r\n-                    }}\r\n-                  />\r\n-                  <p className=\"text-xs text-black\">\r\n-                    I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n-                  </p>\r\n-                </div>\r\n+          {/* Privacy Settings Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n+            <div className=\"flex-1 space-y-6\">\r\n+              <div className=\"flex items-start gap-4\">\r\n+                <input \r\n+                  type=\"checkbox\"\r\n+                  className=\"mt-1\"\r\n+                  checked={isChecked}\r\n+                  onChange={(e) => {\r\n+                    e.stopPropagation();\r\n+                    setIsChecked(e.target.checked);\r\n+                  }}\r\n+                />\r\n                 <p className=\"text-xs text-black\">\r\n-                  Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                  <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </p>\r\n               </div>\r\n+              <p className=\"text-xs text-black\">\r\n+                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n+                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+              </p>\r\n             </div>\r\n+          </div>\r\n \r\n-            {/* Buttons */}\r\n-            <div className=\"flex items-center justify-between\">\r\n-              <div className=\"flex items-center gap-8\">\r\n-                <button \r\n-                  type=\"button\"\r\n-                  className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-                  onClick={handleSave}\r\n-                  disabled={!isChecked || isLoading}\r\n-                >\r\n-                  {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n-                </button>\r\n-                <button \r\n-                  type=\"button\"\r\n-                  className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-                  onClick={handleCancel}\r\n-                  disabled={isLoading}\r\n-                >\r\n-                  CANCEL CHANGES\r\n-                </button>\r\n-              </div>\r\n+          {/* Buttons */}\r\n+          <div className=\"flex items-center justify-between\">\r\n+            <div className=\"flex items-center gap-8\">\r\n               <button \r\n                 type=\"button\"\r\n+                className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                onClick={handleSave}\r\n+                disabled={!isChecked || isLoading}\r\n+              >\r\n+                {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+              </button>\r\n+              <button \r\n+                type=\"button\"\r\n                 className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-                onClick={() => setIsDeactivateModalOpen(true)}\r\n+                onClick={handleCancel}\r\n+                disabled={isLoading}\r\n               >\r\n-                DEACTIVATE ACCOUNT\r\n+                CANCEL CHANGES\r\n               </button>\r\n             </div>\r\n-          </form>\r\n-        )}\r\n+            <button \r\n+              type=\"button\"\r\n+              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+              onClick={() => setIsDeactivateModalOpen(true)}\r\n+            >\r\n+              DEACTIVATE ACCOUNT\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n       </div>\r\n \r\n       {/* Thêm Modal */}\r\n       <DeactivateModal \r\n"
                },
                {
                    "date": 1747119036485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,10 +258,21 @@\n         const error = await response.json();\r\n         throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n       }\r\n \r\n-      // Cập nhật initialData sau khi lưu thành công\r\n-      setInitialData(formData);\r\n+      // Sau khi lưu thành công, gọi lại API để lấy dữ liệu mới nhất\r\n+      const fetchUserData = async () => {\r\n+        try {\r\n+          const response = await fetch('/api/user/profile');\r\n+          if (!response.ok) throw new Error('Không thể tải lại dữ liệu');\r\n+          const data = await response.json();\r\n+          setInitialData(data);\r\n+          setFormData(data);\r\n+        } catch (err) {\r\n+          toast.error('Không thể tải lại dữ liệu mới');\r\n+        }\r\n+      };\r\n+      await fetchUserData();\r\n       toast.success('Lưu thay đổi thành công!');\r\n     } catch (error) {\r\n       console.error('Error saving changes:', error);\r\n       toast.error(error.message || 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Thêm component Modal\r\nconst DeactivateModal = ({ isOpen, onClose }) => {\r\n  const [reason, setReason] = useState('');\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Điều chỉnh thứ tự các lý do\r\n  const reasons = [\r\n    { id: 'select', label: 'Select' },\r\n    { id: 'security', label: 'Security concerns' },\r\n    { id: 'personal', label: 'Personal reasons' },\r\n    { id: 'service', label: 'Service issue' },\r\n    { id: 'unsatisfied', label: 'Unsatisfied with a product' },\r\n    { id: 'no_content', label: 'No useful contents' },\r\n    { id: 'not_interested', label: 'Not interested in AISH anymore' },\r\n    { id: 'billing', label: 'Billing issue' },\r\n    { id: 'other', label: 'Other' },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* Lớp overlay - không cần background đậm vì nền đã tối */}\r\n      <div \r\n        className=\"fixed inset-0 z-40 bg-gray-900 bg-opacity-40\"\r\n        onClick={() => {\r\n          onClose();\r\n          setIsDropdownOpen(false);\r\n        }}\r\n      />\r\n\r\n      {/* Modal Container */}\r\n      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n          {/* Close Button */}\r\n          <button \r\n            onClick={onClose}\r\n            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n          >\r\n            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          {/* Modal Content */}\r\n          <div className=\"text-center mb-12\">\r\n            <h2 className=\"text-2xl font-normal text-black\">DEACTIVATE ACCOUNT</h2>\r\n            <div className=\"flex items-center justify-center my-6\">\r\n              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n              <div className=\"mx-4\">\r\n                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n                </svg>\r\n              </div>\r\n              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-8\">\r\n            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n              We're sorry that you want to deactivate your AISH account. By deactivating your AISH account, you will not be able to access your data. If you would like us to delete all of your related information please contact{' '}\r\n              <span className=\"text-black\">\"privacy@aish.com\"</span>.\r\n            </p>\r\n\r\n            {/* Box chứa phần chọn lý do */}\r\n            <div className=\"bg-[#f5f5f5] p-8\">\r\n              <div className=\"space-y-4\">\r\n                <p className=\"text-xs text-black\">\r\n                  To help us better serve our clients, please share your reason for deactivating your account:\r\n                </p>\r\n                {/* Select dropdown */}\r\n                <div className=\"relative\">\r\n                  <button\r\n                    className=\"w-full p-3 text-left text-xs text-black bg-white border border-gray-200 flex justify-between items-center\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setIsDropdownOpen(!isDropdownOpen);\r\n                    }}\r\n                  >\r\n                    <span>{reason && reason !== 'select' ? reasons.find(r => r.id === reason)?.label : 'Select'}</span>\r\n                    <svg \r\n                      className=\"w-3 h-3\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path d=\"M7 10l5 5 5-5z\" fill=\"currentColor\"/>\r\n                    </svg>\r\n                  </button>\r\n\r\n                  {/* Dropdown menu - bỏ hết animation */}\r\n                  {isDropdownOpen && (\r\n                    <div \r\n                      className=\"absolute top-full left-0 right-0 bg-white border border-gray-200\"\r\n                      style={{\r\n                        maxHeight: '144px',\r\n                        overflowY: 'auto',\r\n                        scrollbarWidth: 'none',\r\n                        msOverflowStyle: 'none'\r\n                      }}\r\n                    >\r\n                      <style jsx>{`\r\n                        div::-webkit-scrollbar {\r\n                          display: none;\r\n                        }\r\n                      `}</style>\r\n                      {reasons.map((item) => (\r\n                        <button\r\n                          key={item.id}\r\n                          className={`\r\n                            w-full text-left p-3 text-xs text-black \r\n                            ${item.id === 'select' ? 'text-gray-400' : ''}\r\n                            h-9 hover:bg-[#f5f5f5]\r\n                            transition-none\r\n                          `}\r\n                          style={{ transform: 'none' }}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            if (item.id !== 'select') {\r\n                              setReason(item.id);\r\n                              setIsDropdownOpen(false);\r\n                            }\r\n                          }}\r\n                        >\r\n                          {item.label}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <button \r\n                className=\"bg-black text-white text-xs uppercase px-8 py-3\"\r\n                onClick={() => {\r\n                  if (!reason || reason === 'select') {\r\n                    alert('Please select a reason before deactivating your account.');\r\n                    return;\r\n                  }\r\n                  console.log('Deactivating account with reason:', reason);\r\n                  onClose();\r\n                  setIsDropdownOpen(false);\r\n                }}\r\n              >\r\n                DEACTIVATE MY ACCOUNT\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function SettingsPage() {\r\n  // Dữ liệu mặc định\r\n  const defaultData = {\r\n    firstName: 'D',\r\n    lastName: 'LICHT',\r\n    country: 'Việt Nam',\r\n    birthDay: '03',\r\n    birthMonth: '30',\r\n    birthYear: '2001',\r\n    email: 'dlicht03@gmail.com',\r\n  };\r\n\r\n  // Khởi tạo state với dữ liệu mặc định\r\n  const [initialData, setInitialData] = useState(defaultData);\r\n  const [formData, setFormData] = useState(defaultData);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n\r\n  // Sử dụng useEffect để load dữ liệu từ localStorage sau khi component được mount\r\n  useEffect(() => {\r\n    // Kiểm tra xem có đang ở môi trường browser không\r\n    if (typeof window !== 'undefined') {\r\n      const savedData = localStorage.getItem('userSettings');\r\n      if (savedData) {\r\n        const parsedData = JSON.parse(savedData);\r\n        setInitialData(parsedData);\r\n        setFormData(parsedData);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Sử dụng useCallback cho các hàm xử lý để tránh re-render không cần thiết\r\n  const handleInputChange = useCallback((field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback((e) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    if (!isChecked) {\r\n      alert('Please accept the privacy settings before saving changes.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Kiểm tra trước khi sử dụng localStorage\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.setItem('userSettings', JSON.stringify(formData));\r\n      }\r\n      \r\n      setInitialData(formData);\r\n      alert('Changes saved successfully!');\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Error saving changes:', error);\r\n      alert('Failed to save changes. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation(); // Thêm stopPropagation\r\n    setFormData(initialData);\r\n  }, [initialData]);\r\n\r\n  const validateDay = (value) => {\r\n    const day = parseInt(value);\r\n    if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n    return value;\r\n  };\r\n\r\n  const validateMonth = (value) => {\r\n    const month = parseInt(value);\r\n    if (isNaN(month) || month < 1 || month > 12) return formData.birthMonth;\r\n    return value;\r\n  };\r\n\r\n  const validateYear = (value) => {\r\n    const year = parseInt(value);\r\n    if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n        <div className=\"text-center py-16\">\r\n          <div className=\"inline-block\">\r\n            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}> {/* Thêm stopPropagation */}\r\n          {/* Your Information Section */}\r\n          <div className=\"flex\">\r\n            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n            <div className=\"flex-1 space-y-12\">\r\n              <div className=\"grid grid-cols-2 gap-8\">\r\n                <div>\r\n                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                    value={formData.firstName}\r\n                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                    value={formData.lastName}\r\n                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n                    onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n                <input \r\n                  type=\"text\"\r\n                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                  value={formData.country}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <input \r\n                      type=\"number\"\r\n                      placeholder=\"DD\"\r\n                      min=\"1\"\r\n                      max=\"31\"\r\n                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                      value={formData.birthDay}\r\n                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                    />\r\n                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n                  </div>\r\n                  <div>\r\n                    <input \r\n                      type=\"number\"\r\n                      placeholder=\"MM\"\r\n                      min=\"1\"\r\n                      max=\"12\"\r\n                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                      value={formData.birthMonth}\r\n                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                    />\r\n                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n                  </div>\r\n                  <div>\r\n                    <input \r\n                      type=\"number\"\r\n                      placeholder=\"YYYY\"\r\n                      min=\"0\"\r\n                      max=\"9999\"\r\n                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                      value={formData.birthYear}\r\n                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n                      onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                    />\r\n                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Account Details Section */}\r\n          <div className=\"flex\">\r\n            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n            <div className=\"flex-1\">\r\n              <div>\r\n                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n                <input \r\n                  type=\"email\"\r\n                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                  value={formData.email}\r\n                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n                  onBlur={(e) => e.stopPropagation()} // Thêm onBlur handler\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Privacy Settings Section */}\r\n          <div className=\"flex\">\r\n            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n            <div className=\"flex-1 space-y-6\">\r\n              <div className=\"flex items-start gap-4\">\r\n                <input \r\n                  type=\"checkbox\"\r\n                  className=\"mt-1\"\r\n                  checked={isChecked}\r\n                  onChange={(e) => {\r\n                    e.stopPropagation();\r\n                    setIsChecked(e.target.checked);\r\n                  }}\r\n                />\r\n                <p className=\"text-xs text-black\">\r\n                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                </p>\r\n              </div>\r\n              <p className=\"text-xs text-black\">\r\n                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Buttons */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-8\">\r\n              <button \r\n                type=\"button\"\r\n                className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                onClick={handleSave}\r\n                disabled={!isChecked || isLoading}\r\n              >\r\n                {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n              </button>\r\n              <button \r\n                type=\"button\"\r\n                className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n                onClick={handleCancel}\r\n                disabled={isLoading}\r\n              >\r\n                CANCEL CHANGES\r\n              </button>\r\n            </div>\r\n            <button \r\n              type=\"button\"\r\n              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n              onClick={() => setIsDeactivateModalOpen(true)}\r\n            >\r\n              DEACTIVATE ACCOUNT\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Thêm Modal */}\r\n      <DeactivateModal \r\n        isOpen={isDeactivateModalOpen}\r\n        onClose={() => setIsDeactivateModalOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
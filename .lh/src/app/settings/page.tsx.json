{
    "sourceFile": "src/app/settings/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 34,
            "patches": [
                {
                    "date": 1747121018596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747121249418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,500 @@\n- \n\\ No newline at end of file\n+'use client';\r\n+\r\n+import { useState, useEffect, useCallback } from 'react';\r\n+import { motion } from 'framer-motion';\r\n+import { useSession } from 'next-auth/react';\r\n+import toast from 'react-hot-toast';\r\n+\r\n+interface DeactivateModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+}\r\n+\r\n+interface FormData {\r\n+  firstName: string;\r\n+  lastName: string;\r\n+  country: string;\r\n+  birthDay: string;\r\n+  birthMonth: string;\r\n+  birthYear: string;\r\n+  email: string;\r\n+}\r\n+\r\n+// Thêm component Modal\r\n+const DeactivateModal: React.FC<DeactivateModalProps> = ({ isOpen, onClose }) => {\r\n+  const [reason, setReason] = useState('');\r\n+  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n+\r\n+  if (!isOpen) return null;\r\n+\r\n+  // Điều chỉnh thứ tự các lý do\r\n+  const reasons = [\r\n+    { id: 'select', label: 'Select' },\r\n+    { id: 'security', label: 'Security concerns' },\r\n+    { id: 'personal', label: 'Personal reasons' },\r\n+    { id: 'service', label: 'Service issue' },\r\n+    { id: 'unsatisfied', label: 'Unsatisfied with a product' },\r\n+    { id: 'no_content', label: 'No useful contents' },\r\n+    { id: 'not_interested', label: 'Not interested in AISH anymore' },\r\n+    { id: 'billing', label: 'Billing issue' },\r\n+    { id: 'other', label: 'Other' },\r\n+  ];\r\n+\r\n+  return (\r\n+    <>\r\n+      {/* Lớp overlay - không cần background đậm vì nền đã tối */}\r\n+      <div \r\n+        className=\"fixed inset-0 z-40 bg-gray-900 bg-opacity-40\"\r\n+        onClick={() => {\r\n+          onClose();\r\n+          setIsDropdownOpen(false);\r\n+        }}\r\n+      />\r\n+\r\n+      {/* Modal Container */}\r\n+      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n+        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n+          {/* Close Button */}\r\n+          <button \r\n+            onClick={onClose}\r\n+            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n+          >\r\n+            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n+              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n+            </svg>\r\n+          </button>\r\n+\r\n+          {/* Modal Content */}\r\n+          <div className=\"text-center mb-12\">\r\n+            <h2 className=\"text-2xl font-normal text-black\">DEACTIVATE ACCOUNT</h2>\r\n+            <div className=\"flex items-center justify-center my-6\">\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+              <div className=\"mx-4\">\r\n+                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n+                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n+                </svg>\r\n+              </div>\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"space-y-8\">\r\n+            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n+              We're sorry that you want to deactivate your AISH account. By deactivating your AISH account, you will not be able to access your data. If you would like us to delete all of your related information please contact{' '}\r\n+              <span className=\"text-black\">\"privacy@aish.com\"</span>.\r\n+            </p>\r\n+\r\n+            {/* Box chứa phần chọn lý do */}\r\n+            <div className=\"bg-[#f5f5f5] p-8\">\r\n+              <div className=\"space-y-4\">\r\n+                <p className=\"text-xs text-black\">\r\n+                  To help us better serve our clients, please share your reason for deactivating your account:\r\n+                </p>\r\n+                {/* Select dropdown */}\r\n+                <div className=\"relative\">\r\n+                  <button\r\n+                    className=\"w-full p-3 text-left text-xs text-black bg-white border border-gray-200 flex justify-between items-center\"\r\n+                    onClick={(e) => {\r\n+                      e.stopPropagation();\r\n+                      setIsDropdownOpen(!isDropdownOpen);\r\n+                    }}\r\n+                  >\r\n+                    <span>{reason && reason !== 'select' ? reasons.find(r => r.id === reason)?.label : 'Select'}</span>\r\n+                    <svg \r\n+                      className=\"w-3 h-3\"\r\n+                      viewBox=\"0 0 24 24\"\r\n+                    >\r\n+                      <path d=\"M7 10l5 5 5-5z\" fill=\"currentColor\"/>\r\n+                    </svg>\r\n+                  </button>\r\n+\r\n+                  {/* Dropdown menu - bỏ hết animation */}\r\n+                  {isDropdownOpen && (\r\n+                    <div \r\n+                      className=\"absolute top-full left-0 right-0 bg-white border border-gray-200\"\r\n+                      style={{\r\n+                        maxHeight: '144px',\r\n+                        overflowY: 'auto',\r\n+                        scrollbarWidth: 'none',\r\n+                        msOverflowStyle: 'none'\r\n+                      }}\r\n+                    >\r\n+                      <style jsx>{`\r\n+                        div::-webkit-scrollbar {\r\n+                          display: none;\r\n+                        }\r\n+                      `}</style>\r\n+                      {reasons.map((item) => (\r\n+                        <button\r\n+                          key={item.id}\r\n+                          className={`\r\n+                            w-full text-left p-3 text-xs text-black \r\n+                            ${item.id === 'select' ? 'text-gray-400' : ''}\r\n+                            h-9 hover:bg-[#f5f5f5]\r\n+                            transition-none\r\n+                          `}\r\n+                          style={{ transform: 'none' }}\r\n+                          onClick={(e) => {\r\n+                            e.stopPropagation();\r\n+                            if (item.id !== 'select') {\r\n+                              setReason(item.id);\r\n+                              setIsDropdownOpen(false);\r\n+                            }\r\n+                          }}\r\n+                        >\r\n+                          {item.label}\r\n+                        </button>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div className=\"text-center\">\r\n+              <button \r\n+                className=\"bg-black text-white text-xs uppercase px-8 py-3\"\r\n+                onClick={() => {\r\n+                  if (!reason || reason === 'select') {\r\n+                    alert('Please select a reason before deactivating your account.');\r\n+                    return;\r\n+                  }\r\n+                  console.log('Deactivating account with reason:', reason);\r\n+                  onClose();\r\n+                  setIsDropdownOpen(false);\r\n+                }}\r\n+              >\r\n+                DEACTIVATE MY ACCOUNT\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default function SettingsPage() {\r\n+  const { data: session } = useSession();\r\n+  const [initialData, setInitialData] = useState<FormData>({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [formData, setFormData] = useState<FormData>({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [isChecked, setIsChecked] = useState(false);\r\n+  const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n+\r\n+  // Load user data when component mounts\r\n+  useEffect(() => {\r\n+    const fetchUserData = async () => {\r\n+      try {\r\n+        const response = await fetch('/api/user/profile');\r\n+        if (!response.ok) {\r\n+          throw new Error('Failed to fetch user data');\r\n+        }\r\n+        const data = await response.json();\r\n+        \r\n+        // Format the data to match our form structure\r\n+        const formattedData = {\r\n+          firstName: data.firstName || '',\r\n+          lastName: data.lastName || '',\r\n+          country: 'Việt Nam',\r\n+          birthDay: data.birthDay || '',\r\n+          birthMonth: data.birthMonth || '',\r\n+          birthYear: data.birthYear || '',\r\n+          email: data.email || '',\r\n+        };\r\n+        \r\n+        // Set both initial and form data\r\n+        setInitialData(formattedData);\r\n+        setFormData(formattedData);\r\n+      } catch (error) {\r\n+        console.error('Error fetching user data:', error);\r\n+        toast.error('Không thể tải dữ liệu người dùng');\r\n+      }\r\n+    };\r\n+\r\n+    if (session?.user) {\r\n+      fetchUserData();\r\n+    }\r\n+  }, [session]);\r\n+\r\n+  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [field]: value\r\n+    }));\r\n+  }, []);\r\n+\r\n+  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n+    e.preventDefault();\r\n+  }, []);\r\n+\r\n+  const handleSave = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n+    e.preventDefault();\r\n+    if (!isChecked) {\r\n+      toast.error('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsLoading(true);\r\n+      \r\n+      const response = await fetch('/api/user/update', {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          firstName: formData.firstName,\r\n+          lastName: formData.lastName,\r\n+          birthDay: formData.birthDay,\r\n+          birthMonth: formData.birthMonth,\r\n+          birthYear: formData.birthYear,\r\n+          email: formData.email,\r\n+        }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        const error = await response.json();\r\n+        throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n+      }\r\n+\r\n+      // Sau khi lưu thành công, gọi lại API để lấy dữ liệu mới nhất\r\n+      const fetchUserData = async () => {\r\n+        try {\r\n+          const response = await fetch('/api/user/profile');\r\n+          if (!response.ok) throw new Error('Không thể tải lại dữ liệu');\r\n+          const data = await response.json();\r\n+          setInitialData(data);\r\n+          setFormData(data);\r\n+        } catch (err) {\r\n+          toast.error('Không thể tải lại dữ liệu mới');\r\n+        }\r\n+      };\r\n+      await fetchUserData();\r\n+      toast.success('Lưu thay đổi thành công!');\r\n+    } catch (error) {\r\n+      console.error('Error saving changes:', error);\r\n+      toast.error(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCancel = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\r\n+    e.preventDefault();\r\n+    e.stopPropagation();\r\n+    // Khôi phục lại dữ liệu ban đầu\r\n+    setFormData(initialData);\r\n+    toast.success('Đã hủy thay đổi');\r\n+  }, [initialData]);\r\n+\r\n+  const validateDay = (value: string) => {\r\n+    const day = parseInt(value);\r\n+    if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n+    return value;\r\n+  };\r\n+\r\n+  const validateMonth = (value: string) => {\r\n+    const month = parseInt(value);\r\n+    if (isNaN(month) || month < 1 || month > 12) return formData.birthMonth;\r\n+    return value;\r\n+  };\r\n+\r\n+  const validateYear = (value: string) => {\r\n+    const year = parseInt(value);\r\n+    if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n+    return value;\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-white\">\r\n+      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n+        <div className=\"text-center py-16\">\r\n+          <div className=\"inline-block\">\r\n+            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n+            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n+          {/* Your Information Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n+            <div className=\"flex-1 space-y-12\">\r\n+              <div className=\"grid grid-cols-2 gap-8\">\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.firstName}\r\n+                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                </div>\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.lastName}\r\n+                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                </div>\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n+                <input \r\n+                  type=\"text\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.country}\r\n+                  disabled\r\n+                />\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n+                <div className=\"grid grid-cols-3 gap-4\">\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"DD\"\r\n+                      min=\"1\"\r\n+                      max=\"31\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthDay}\r\n+                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"MM\"\r\n+                      min=\"1\"\r\n+                      max=\"12\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthMonth}\r\n+                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"YYYY\"\r\n+                      min=\"0\"\r\n+                      max=\"9999\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthYear}\r\n+                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Account Details Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n+            <div className=\"flex-1\">\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n+                <input \r\n+                  type=\"email\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.email}\r\n+                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n+                  onBlur={(e) => e.stopPropagation()}\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Privacy Settings Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n+            <div className=\"flex-1 space-y-6\">\r\n+              <div className=\"flex items-start gap-4\">\r\n+                <input \r\n+                  type=\"checkbox\"\r\n+                  className=\"mt-1\"\r\n+                  checked={isChecked}\r\n+                  onChange={(e) => {\r\n+                    e.stopPropagation();\r\n+                    setIsChecked(e.target.checked);\r\n+                  }}\r\n+                />\r\n+                <p className=\"text-xs text-black\">\r\n+                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+                </p>\r\n+              </div>\r\n+              <p className=\"text-xs text-black\">\r\n+                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n+                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+              </p>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Buttons */}\r\n+          <div className=\"flex items-center justify-between\">\r\n+            <div className=\"flex items-center gap-8\">\r\n+              <button \r\n+                type=\"button\"\r\n+                className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                onClick={handleSave}\r\n+                disabled={!isChecked || isLoading}\r\n+              >\r\n+                {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+              </button>\r\n+              <button \r\n+                type=\"button\"\r\n+                className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+                onClick={handleCancel}\r\n+                disabled={isLoading}\r\n+              >\r\n+                CANCEL CHANGES\r\n+              </button>\r\n+            </div>\r\n+            <button \r\n+              type=\"button\"\r\n+              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+              onClick={() => setIsDeactivateModalOpen(true)}\r\n+            >\r\n+              DEACTIVATE ACCOUNT\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+\r\n+      {/* Thêm Modal */}\r\n+      <DeactivateModal \r\n+        isOpen={isDeactivateModalOpen}\r\n+        onClose={() => setIsDeactivateModalOpen(false)}\r\n+      />\r\n+    </div>\r\n+  );\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747121564766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -295,16 +295,8 @@\n       setIsLoading(false);\r\n     }\r\n   };\r\n \r\n-  const handleCancel = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\r\n-    e.preventDefault();\r\n-    e.stopPropagation();\r\n-    // Khôi phục lại dữ liệu ban đầu\r\n-    setFormData(initialData);\r\n-    toast.success('Đã hủy thay đổi');\r\n-  }, [initialData]);\r\n-\r\n   const validateDay = (value: string) => {\r\n     const day = parseInt(value);\r\n     if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n     return value;\r\n@@ -460,28 +452,18 @@\n           </div>\r\n \r\n           {/* Buttons */}\r\n           <div className=\"flex items-center justify-between\">\r\n-            <div className=\"flex items-center gap-8\">\r\n-              <button \r\n-                type=\"button\"\r\n-                className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-                onClick={handleSave}\r\n-                disabled={!isChecked || isLoading}\r\n-              >\r\n-                {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n-              </button>\r\n-              <button \r\n-                type=\"button\"\r\n-                className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-                onClick={handleCancel}\r\n-                disabled={isLoading}\r\n-              >\r\n-                CANCEL CHANGES\r\n-              </button>\r\n-            </div>\r\n             <button \r\n               type=\"button\"\r\n+              className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+              onClick={handleSave}\r\n+              disabled={!isChecked || isLoading}\r\n+            >\r\n+              {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+            </button>\r\n+            <button \r\n+              type=\"button\"\r\n               className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n               onClick={() => setIsDeactivateModalOpen(true)}\r\n             >\r\n               DEACTIVATE ACCOUNT\r\n"
                },
                {
                    "date": 1747122721090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n 'use client';\r\n \r\n import { useState, useEffect, useCallback } from 'react';\r\n import { motion } from 'framer-motion';\r\n-import { useSession } from 'next-auth/react';\r\n+import { useSession, signOut } from 'next-auth/react';\r\n import toast from 'react-hot-toast';\r\n+import { useRouter } from 'next/navigation';\r\n \r\n interface DeactivateModalProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n@@ -23,8 +24,10 @@\n // Thêm component Modal\r\n const DeactivateModal: React.FC<DeactivateModalProps> = ({ isOpen, onClose }) => {\r\n   const [reason, setReason] = useState('');\r\n   const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n+  const [isDeleting, setIsDeleting] = useState(false);\r\n+  const router = useRouter();\r\n \r\n   if (!isOpen) return null;\r\n \r\n   // Điều chỉnh thứ tự các lý do\r\n@@ -39,8 +42,41 @@\n     { id: 'billing', label: 'Billing issue' },\r\n     { id: 'other', label: 'Other' },\r\n   ];\r\n \r\n+  const handleDeactivate = async () => {\r\n+    if (!reason || reason === 'select') {\r\n+      toast.error('Vui lòng chọn lý do hủy tài khoản');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsDeleting(true);\r\n+      const response = await fetch('/api/user/deactivate', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({ reason }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error('Không thể hủy tài khoản');\r\n+      }\r\n+\r\n+      toast.success('Tài khoản đã được hủy thành công');\r\n+      // Đăng xuất và chuyển về trang chủ\r\n+      await signOut({ redirect: false });\r\n+      router.push('/');\r\n+    } catch (error) {\r\n+      console.error('Error deactivating account:', error);\r\n+      toast.error('Có lỗi xảy ra khi hủy tài khoản');\r\n+    } finally {\r\n+      setIsDeleting(false);\r\n+      onClose();\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <>\r\n       {/* Lớp overlay - không cần background đậm vì nền đã tối */}\r\n       <div \r\n@@ -152,20 +188,13 @@\n             </div>\r\n \r\n             <div className=\"text-center\">\r\n               <button \r\n-                className=\"bg-black text-white text-xs uppercase px-8 py-3\"\r\n-                onClick={() => {\r\n-                  if (!reason || reason === 'select') {\r\n-                    alert('Please select a reason before deactivating your account.');\r\n-                    return;\r\n-                  }\r\n-                  console.log('Deactivating account with reason:', reason);\r\n-                  onClose();\r\n-                  setIsDropdownOpen(false);\r\n-                }}\r\n+                className={`bg-black text-white text-xs uppercase px-8 py-3 ${(!reason || reason === 'select' || isDeleting) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                onClick={handleDeactivate}\r\n+                disabled={!reason || reason === 'select' || isDeleting}\r\n               >\r\n-                DEACTIVATE MY ACCOUNT\r\n+                {isDeleting ? 'DEACTIVATING...' : 'DEACTIVATE MY ACCOUNT'}\r\n               </button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1747122950419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,18 +77,16 @@\n   };\r\n \r\n   return (\r\n     <>\r\n-      {/* Lớp overlay - không cần background đậm vì nền đã tối */}\r\n       <div \r\n-        className=\"fixed inset-0 z-40 bg-gray-900 bg-opacity-40\"\r\n+        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n         onClick={() => {\r\n           onClose();\r\n           setIsDropdownOpen(false);\r\n         }}\r\n       />\r\n \r\n-      {/* Modal Container */}\r\n       <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n         <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n           {/* Close Button */}\r\n           <button \r\n"
                },
                {
                    "date": 1747243196620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,12 @@\n import { motion } from 'framer-motion';\r\n import { useSession, signOut } from 'next-auth/react';\r\n import toast from 'react-hot-toast';\r\n import { useRouter } from 'next/navigation';\r\n+import { getServerSession } from \"next-auth\";\r\n+import { authOptions } from \"@/lib/auth\";\r\n+import { redirect } from \"next/navigation\";\r\n+import ChangePasswordForm from \"@/components/ChangePasswordForm\";\r\n \r\n interface DeactivateModalProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n@@ -200,310 +204,43 @@\n     </>\r\n   );\r\n };\r\n \r\n-export default function SettingsPage() {\r\n-  const { data: session } = useSession();\r\n-  const [initialData, setInitialData] = useState<FormData>({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    country: 'Việt Nam',\r\n-    birthDay: '',\r\n-    birthMonth: '',\r\n-    birthYear: '',\r\n-    email: '',\r\n-  });\r\n-  const [formData, setFormData] = useState<FormData>({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    country: 'Việt Nam',\r\n-    birthDay: '',\r\n-    birthMonth: '',\r\n-    birthYear: '',\r\n-    email: '',\r\n-  });\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [isChecked, setIsChecked] = useState(false);\r\n-  const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n+export default async function SettingsPage() {\r\n+  const session = await getServerSession(authOptions);\r\n \r\n-  // Load user data when component mounts\r\n-  useEffect(() => {\r\n-    const fetchUserData = async () => {\r\n-      try {\r\n-        const response = await fetch('/api/user/profile');\r\n-        if (!response.ok) {\r\n-          throw new Error('Failed to fetch user data');\r\n-        }\r\n-        const data = await response.json();\r\n-        \r\n-        // Format the data to match our form structure\r\n-        const formattedData = {\r\n-          firstName: data.firstName || '',\r\n-          lastName: data.lastName || '',\r\n-          country: 'Việt Nam',\r\n-          birthDay: data.birthDay || '',\r\n-          birthMonth: data.birthMonth || '',\r\n-          birthYear: data.birthYear || '',\r\n-          email: data.email || '',\r\n-        };\r\n-        \r\n-        // Set both initial and form data\r\n-        setInitialData(formattedData);\r\n-        setFormData(formattedData);\r\n-      } catch (error) {\r\n-        console.error('Error fetching user data:', error);\r\n-        toast.error('Không thể tải dữ liệu người dùng');\r\n-      }\r\n-    };\r\n+  if (!session) {\r\n+    redirect(\"/login\");\r\n+  }\r\n \r\n-    if (session?.user) {\r\n-      fetchUserData();\r\n-    }\r\n-  }, [session]);\r\n-\r\n-  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\r\n-    setFormData(prev => ({\r\n-      ...prev,\r\n-      [field]: value\r\n-    }));\r\n-  }, []);\r\n-\r\n-  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n-    e.preventDefault();\r\n-  }, []);\r\n-\r\n-  const handleSave = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n-    e.preventDefault();\r\n-    if (!isChecked) {\r\n-      toast.error('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      setIsLoading(true);\r\n-      \r\n-      const response = await fetch('/api/user/update', {\r\n-        method: 'PUT',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify({\r\n-          firstName: formData.firstName,\r\n-          lastName: formData.lastName,\r\n-          birthDay: formData.birthDay,\r\n-          birthMonth: formData.birthMonth,\r\n-          birthYear: formData.birthYear,\r\n-          email: formData.email,\r\n-        }),\r\n-      });\r\n-\r\n-      if (!response.ok) {\r\n-        const error = await response.json();\r\n-        throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n-      }\r\n-\r\n-      // Sau khi lưu thành công, gọi lại API để lấy dữ liệu mới nhất\r\n-      const fetchUserData = async () => {\r\n-        try {\r\n-          const response = await fetch('/api/user/profile');\r\n-          if (!response.ok) throw new Error('Không thể tải lại dữ liệu');\r\n-          const data = await response.json();\r\n-          setInitialData(data);\r\n-          setFormData(data);\r\n-        } catch (err) {\r\n-          toast.error('Không thể tải lại dữ liệu mới');\r\n-        }\r\n-      };\r\n-      await fetchUserData();\r\n-      toast.success('Lưu thay đổi thành công!');\r\n-    } catch (error) {\r\n-      console.error('Error saving changes:', error);\r\n-      toast.error(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  const validateDay = (value: string) => {\r\n-    const day = parseInt(value);\r\n-    if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n-    return value;\r\n-  };\r\n-\r\n-  const validateMonth = (value: string) => {\r\n-    const month = parseInt(value);\r\n-    if (isNaN(month) || month < 1 || month > 12) return formData.birthMonth;\r\n-    return value;\r\n-  };\r\n-\r\n-  const validateYear = (value: string) => {\r\n-    const year = parseInt(value);\r\n-    if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n-    return value;\r\n-  };\r\n-\r\n   return (\r\n-    <div className=\"min-h-screen bg-white\">\r\n-      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n-        <div className=\"text-center py-16\">\r\n-          <div className=\"inline-block\">\r\n-            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n-            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n+    <div className=\"max-w-2xl mx-auto py-16 px-4 sm:px-6 lg:px-8\">\r\n+      <div className=\"space-y-10 divide-y divide-gray-900/10\">\r\n+        <div className=\"grid grid-cols-1 gap-x-8 gap-y-8 md:grid-cols-3\">\r\n+          <div className=\"px-4 sm:px-0\">\r\n+            <h2 className=\"text-base font-semibold leading-7 text-gray-900\">Cài đặt</h2>\r\n+            <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n+              Quản lý thông tin tài khoản và bảo mật\r\n+            </p>\r\n           </div>\r\n-        </div>\r\n \r\n-        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n-          {/* Your Information Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n-            <div className=\"flex-1 space-y-12\">\r\n-              <div className=\"grid grid-cols-2 gap-8\">\r\n+          <div className=\"bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2\">\r\n+            <div className=\"px-4 py-6 sm:p-8\">\r\n+              <div className=\"max-w-2xl space-y-10\">\r\n                 <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.firstName}\r\n-                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n+                  <h3 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n+                    Đổi mật khẩu\r\n+                  </h3>\r\n+                  <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n+                    Cập nhật mật khẩu của bạn để bảo vệ tài khoản\r\n+                  </p>\r\n                 </div>\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.lastName}\r\n-                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n-                </div>\r\n-              </div>\r\n \r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n-                <input \r\n-                  type=\"text\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.country}\r\n-                  disabled\r\n-                />\r\n+                <ChangePasswordForm />\r\n               </div>\r\n-\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n-                <div className=\"grid grid-cols-3 gap-4\">\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"DD\"\r\n-                      min=\"1\"\r\n-                      max=\"31\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthDay}\r\n-                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n-                  </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"MM\"\r\n-                      min=\"1\"\r\n-                      max=\"12\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthMonth}\r\n-                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n-                  </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"YYYY\"\r\n-                      min=\"0\"\r\n-                      max=\"9999\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthYear}\r\n-                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n             </div>\r\n           </div>\r\n-\r\n-          {/* Account Details Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n-            <div className=\"flex-1\">\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n-                <input \r\n-                  type=\"email\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.email}\r\n-                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n-                  onBlur={(e) => e.stopPropagation()}\r\n-                />\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Privacy Settings Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n-            <div className=\"flex-1 space-y-6\">\r\n-              <div className=\"flex items-start gap-4\">\r\n-                <input \r\n-                  type=\"checkbox\"\r\n-                  className=\"mt-1\"\r\n-                  checked={isChecked}\r\n-                  onChange={(e) => {\r\n-                    e.stopPropagation();\r\n-                    setIsChecked(e.target.checked);\r\n-                  }}\r\n-                />\r\n-                <p className=\"text-xs text-black\">\r\n-                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n-                </p>\r\n-              </div>\r\n-              <p className=\"text-xs text-black\">\r\n-                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n-              </p>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Buttons */}\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <button \r\n-              type=\"button\"\r\n-              className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-              onClick={handleSave}\r\n-              disabled={!isChecked || isLoading}\r\n-            >\r\n-              {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n-            </button>\r\n-            <button \r\n-              type=\"button\"\r\n-              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-              onClick={() => setIsDeactivateModalOpen(true)}\r\n-            >\r\n-              DEACTIVATE ACCOUNT\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n+        </div>\r\n       </div>\r\n-\r\n-      {/* Thêm Modal */}\r\n-      <DeactivateModal \r\n-        isOpen={isDeactivateModalOpen}\r\n-        onClose={() => setIsDeactivateModalOpen(false)}\r\n-      />\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747243245199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,8 @@\n import { motion } from 'framer-motion';\r\n import { useSession, signOut } from 'next-auth/react';\r\n import toast from 'react-hot-toast';\r\n import { useRouter } from 'next/navigation';\r\n-import { getServerSession } from \"next-auth\";\r\n-import { authOptions } from \"@/lib/auth\";\r\n-import { redirect } from \"next/navigation\";\r\n-import ChangePasswordForm from \"@/components/ChangePasswordForm\";\r\n \r\n interface DeactivateModalProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n@@ -204,43 +200,310 @@\n     </>\r\n   );\r\n };\r\n \r\n-export default async function SettingsPage() {\r\n-  const session = await getServerSession(authOptions);\r\n+export default function SettingsPage() {\r\n+  const { data: session } = useSession();\r\n+  const [initialData, setInitialData] = useState<FormData>({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [formData, setFormData] = useState<FormData>({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [isChecked, setIsChecked] = useState(false);\r\n+  const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n \r\n-  if (!session) {\r\n-    redirect(\"/login\");\r\n-  }\r\n+  // Load user data when component mounts\r\n+  useEffect(() => {\r\n+    const fetchUserData = async () => {\r\n+      try {\r\n+        const response = await fetch('/api/user/profile');\r\n+        if (!response.ok) {\r\n+          throw new Error('Failed to fetch user data');\r\n+        }\r\n+        const data = await response.json();\r\n+        \r\n+        // Format the data to match our form structure\r\n+        const formattedData = {\r\n+          firstName: data.firstName || '',\r\n+          lastName: data.lastName || '',\r\n+          country: 'Việt Nam',\r\n+          birthDay: data.birthDay || '',\r\n+          birthMonth: data.birthMonth || '',\r\n+          birthYear: data.birthYear || '',\r\n+          email: data.email || '',\r\n+        };\r\n+        \r\n+        // Set both initial and form data\r\n+        setInitialData(formattedData);\r\n+        setFormData(formattedData);\r\n+      } catch (error) {\r\n+        console.error('Error fetching user data:', error);\r\n+        toast.error('Không thể tải dữ liệu người dùng');\r\n+      }\r\n+    };\r\n \r\n+    if (session?.user) {\r\n+      fetchUserData();\r\n+    }\r\n+  }, [session]);\r\n+\r\n+  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [field]: value\r\n+    }));\r\n+  }, []);\r\n+\r\n+  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n+    e.preventDefault();\r\n+  }, []);\r\n+\r\n+  const handleSave = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n+    e.preventDefault();\r\n+    if (!isChecked) {\r\n+      toast.error('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsLoading(true);\r\n+      \r\n+      const response = await fetch('/api/user/update', {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          firstName: formData.firstName,\r\n+          lastName: formData.lastName,\r\n+          birthDay: formData.birthDay,\r\n+          birthMonth: formData.birthMonth,\r\n+          birthYear: formData.birthYear,\r\n+          email: formData.email,\r\n+        }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        const error = await response.json();\r\n+        throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n+      }\r\n+\r\n+      // Sau khi lưu thành công, gọi lại API để lấy dữ liệu mới nhất\r\n+      const fetchUserData = async () => {\r\n+        try {\r\n+          const response = await fetch('/api/user/profile');\r\n+          if (!response.ok) throw new Error('Không thể tải lại dữ liệu');\r\n+          const data = await response.json();\r\n+          setInitialData(data);\r\n+          setFormData(data);\r\n+        } catch (err) {\r\n+          toast.error('Không thể tải lại dữ liệu mới');\r\n+        }\r\n+      };\r\n+      await fetchUserData();\r\n+      toast.success('Lưu thay đổi thành công!');\r\n+    } catch (error) {\r\n+      console.error('Error saving changes:', error);\r\n+      toast.error(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const validateDay = (value: string) => {\r\n+    const day = parseInt(value);\r\n+    if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n+    return value;\r\n+  };\r\n+\r\n+  const validateMonth = (value: string) => {\r\n+    const month = parseInt(value);\r\n+    if (isNaN(month) || month < 1 || month > 12) return formData.birthMonth;\r\n+    return value;\r\n+  };\r\n+\r\n+  const validateYear = (value: string) => {\r\n+    const year = parseInt(value);\r\n+    if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n+    return value;\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"max-w-2xl mx-auto py-16 px-4 sm:px-6 lg:px-8\">\r\n-      <div className=\"space-y-10 divide-y divide-gray-900/10\">\r\n-        <div className=\"grid grid-cols-1 gap-x-8 gap-y-8 md:grid-cols-3\">\r\n-          <div className=\"px-4 sm:px-0\">\r\n-            <h2 className=\"text-base font-semibold leading-7 text-gray-900\">Cài đặt</h2>\r\n-            <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n-              Quản lý thông tin tài khoản và bảo mật\r\n-            </p>\r\n+    <div className=\"min-h-screen bg-white\">\r\n+      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n+        <div className=\"text-center py-16\">\r\n+          <div className=\"inline-block\">\r\n+            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n+            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n           </div>\r\n+        </div>\r\n \r\n-          <div className=\"bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2\">\r\n-            <div className=\"px-4 py-6 sm:p-8\">\r\n-              <div className=\"max-w-2xl space-y-10\">\r\n+        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n+          {/* Your Information Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n+            <div className=\"flex-1 space-y-12\">\r\n+              <div className=\"grid grid-cols-2 gap-8\">\r\n                 <div>\r\n-                  <h3 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n-                    Đổi mật khẩu\r\n-                  </h3>\r\n-                  <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n-                    Cập nhật mật khẩu của bạn để bảo vệ tài khoản\r\n-                  </p>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.firstName}\r\n+                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n                 </div>\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.lastName}\r\n+                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                </div>\r\n+              </div>\r\n \r\n-                <ChangePasswordForm />\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n+                <input \r\n+                  type=\"text\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.country}\r\n+                  disabled\r\n+                />\r\n               </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n+                <div className=\"grid grid-cols-3 gap-4\">\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"DD\"\r\n+                      min=\"1\"\r\n+                      max=\"31\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthDay}\r\n+                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"MM\"\r\n+                      min=\"1\"\r\n+                      max=\"12\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthMonth}\r\n+                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"YYYY\"\r\n+                      min=\"0\"\r\n+                      max=\"9999\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthYear}\r\n+                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n             </div>\r\n           </div>\r\n-        </div>\r\n+\r\n+          {/* Account Details Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n+            <div className=\"flex-1\">\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n+                <input \r\n+                  type=\"email\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.email}\r\n+                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n+                  onBlur={(e) => e.stopPropagation()}\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Privacy Settings Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n+            <div className=\"flex-1 space-y-6\">\r\n+              <div className=\"flex items-start gap-4\">\r\n+                <input \r\n+                  type=\"checkbox\"\r\n+                  className=\"mt-1\"\r\n+                  checked={isChecked}\r\n+                  onChange={(e) => {\r\n+                    e.stopPropagation();\r\n+                    setIsChecked(e.target.checked);\r\n+                  }}\r\n+                />\r\n+                <p className=\"text-xs text-black\">\r\n+                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+                </p>\r\n+              </div>\r\n+              <p className=\"text-xs text-black\">\r\n+                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n+                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+              </p>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Buttons */}\r\n+          <div className=\"flex items-center justify-between\">\r\n+            <button \r\n+              type=\"button\"\r\n+              className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+              onClick={handleSave}\r\n+              disabled={!isChecked || isLoading}\r\n+            >\r\n+              {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+            </button>\r\n+            <button \r\n+              type=\"button\"\r\n+              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+              onClick={() => setIsDeactivateModalOpen(true)}\r\n+            >\r\n+              DEACTIVATE ACCOUNT\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n       </div>\r\n+\r\n+      {/* Thêm Modal */}\r\n+      <DeactivateModal \r\n+        isOpen={isDeactivateModalOpen}\r\n+        onClose={() => setIsDeactivateModalOpen(false)}\r\n+      />\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747243348823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,8 +223,12 @@\n   });\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [isChecked, setIsChecked] = useState(false);\r\n   const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n+  const [currentPassword, setCurrentPassword] = useState('');\r\n+  const [newPassword, setNewPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n \r\n   // Load user data when component mounts\r\n   useEffect(() => {\r\n     const fetchUserData = async () => {\r\n@@ -340,8 +344,44 @@\n     if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n     return value;\r\n   };\r\n \r\n+  const handlePasswordChange = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n+    e.preventDefault();\r\n+    if (!currentPassword || !newPassword || !confirmPassword) {\r\n+      toast.error('Vui lòng nhập đầy đủ thông tin đổi mật khẩu');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsChangingPassword(true);\r\n+      \r\n+      const response = await fetch('/api/user/updatePassword', {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          currentPassword,\r\n+          newPassword,\r\n+          confirmPassword,\r\n+        }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        const error = await response.json();\r\n+        throw new Error(error.message || 'Không thể đổi mật khẩu');\r\n+      }\r\n+\r\n+      toast.success('Đổi mật khẩu thành công!');\r\n+    } catch (error) {\r\n+      console.error('Error changing password:', error);\r\n+      toast.error(error instanceof Error ? error.message : 'Không thể đổi mật khẩu. Vui lòng thử lại.');\r\n+    } finally {\r\n+      setIsChangingPassword(false);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"min-h-screen bg-white\">\r\n       <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n         <div className=\"text-center py-16\">\r\n@@ -438,9 +478,9 @@\n \r\n           {/* Account Details Section */}\r\n           <div className=\"flex\">\r\n             <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n-            <div className=\"flex-1\">\r\n+            <div className=\"flex-1 space-y-12\">\r\n               <div>\r\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n                 <input \r\n                   type=\"email\"\r\n@@ -449,8 +489,47 @@\n                   onChange={(e) => handleInputChange('email', e.target.value)}\r\n                   onBlur={(e) => e.stopPropagation()}\r\n                 />\r\n               </div>\r\n+\r\n+              {/* Password Change Section */}\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Password</label>\r\n+                <div className=\"space-y-4\">\r\n+                  <input \r\n+                    type=\"password\"\r\n+                    placeholder=\"Current Password\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={currentPassword}\r\n+                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                  <input \r\n+                    type=\"password\"\r\n+                    placeholder=\"New Password\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={newPassword}\r\n+                    onChange={(e) => setNewPassword(e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                  <input \r\n+                    type=\"password\"\r\n+                    placeholder=\"Confirm New Password\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={confirmPassword}\r\n+                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handlePasswordChange}\r\n+                    disabled={isChangingPassword}\r\n+                    className={`w-full px-8 py-2 bg-black text-white text-xs uppercase ${isChangingPassword ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                  >\r\n+                    {isChangingPassword ? 'CHANGING...' : 'CHANGE PASSWORD'}\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n             </div>\r\n           </div>\r\n \r\n           {/* Privacy Settings Section */}\r\n"
                },
                {
                    "date": 1747243556151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -351,8 +351,18 @@\n       toast.error('Vui lòng nhập đầy đủ thông tin đổi mật khẩu');\r\n       return;\r\n     }\r\n \r\n+    if (newPassword !== confirmPassword) {\r\n+      toast.error('Mật khẩu mới không khớp');\r\n+      return;\r\n+    }\r\n+\r\n+    if (newPassword.length < 8) {\r\n+      toast.error('Mật khẩu mới phải có ít nhất 8 ký tự');\r\n+      return;\r\n+    }\r\n+\r\n     try {\r\n       setIsChangingPassword(true);\r\n       \r\n       const response = await fetch('/api/user/updatePassword', {\r\n@@ -366,14 +376,19 @@\n           confirmPassword,\r\n         }),\r\n       });\r\n \r\n+      const data = await response.json();\r\n+\r\n       if (!response.ok) {\r\n-        const error = await response.json();\r\n-        throw new Error(error.message || 'Không thể đổi mật khẩu');\r\n+        throw new Error(data.error || 'Không thể đổi mật khẩu');\r\n       }\r\n \r\n       toast.success('Đổi mật khẩu thành công!');\r\n+      // Reset form\r\n+      setCurrentPassword('');\r\n+      setNewPassword('');\r\n+      setConfirmPassword('');\r\n     } catch (error) {\r\n       console.error('Error changing password:', error);\r\n       toast.error(error instanceof Error ? error.message : 'Không thể đổi mật khẩu. Vui lòng thử lại.');\r\n     } finally {\r\n"
                },
                {
                    "date": 1747243750367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -379,9 +379,14 @@\n \r\n       const data = await response.json();\r\n \r\n       if (!response.ok) {\r\n-        throw new Error(data.error || 'Không thể đổi mật khẩu');\r\n+        if (data.error === \"Current password is incorrect\") {\r\n+          toast.error('Mật khẩu hiện tại không đúng');\r\n+        } else {\r\n+          throw new Error(data.error || 'Không thể đổi mật khẩu');\r\n+        }\r\n+        return;\r\n       }\r\n \r\n       toast.success('Đổi mật khẩu thành công!');\r\n       // Reset form\r\n"
                },
                {
                    "date": 1747244086319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n \r\n   const handleInputChange = useCallback((field: keyof FormData, value: string) => {\r\n     setFormData(prev => ({\r\n       ...prev,\r\n-      [field]: value\r\n+      [field]: value || '' // Đảm bảo giá trị không bao giờ là undefined\r\n     }));\r\n   }, []);\r\n \r\n   const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n@@ -421,9 +421,9 @@\n                   <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n                   <input \r\n                     type=\"text\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.firstName}\r\n+                    value={formData.firstName || ''}\r\n                     onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n                     onBlur={(e) => e.stopPropagation()}\r\n                   />\r\n                 </div>\r\n@@ -431,9 +431,9 @@\n                   <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n                   <input \r\n                     type=\"text\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.lastName}\r\n+                    value={formData.lastName || ''}\r\n                     onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n                     onBlur={(e) => e.stopPropagation()}\r\n                   />\r\n                 </div>\r\n@@ -443,9 +443,9 @@\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n                 <input \r\n                   type=\"text\"\r\n                   className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.country}\r\n+                  value={formData.country || ''}\r\n                   disabled\r\n                 />\r\n               </div>\r\n \r\n@@ -458,9 +458,9 @@\n                       placeholder=\"DD\"\r\n                       min=\"1\"\r\n                       max=\"31\"\r\n                       className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthDay}\r\n+                      value={formData.birthDay || ''}\r\n                       onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n                       onBlur={(e) => e.stopPropagation()}\r\n                     />\r\n                     <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n@@ -471,9 +471,9 @@\n                       placeholder=\"MM\"\r\n                       min=\"1\"\r\n                       max=\"12\"\r\n                       className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthMonth}\r\n+                      value={formData.birthMonth || ''}\r\n                       onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n                       onBlur={(e) => e.stopPropagation()}\r\n                     />\r\n                     <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n@@ -484,9 +484,9 @@\n                       placeholder=\"YYYY\"\r\n                       min=\"0\"\r\n                       max=\"9999\"\r\n                       className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthYear}\r\n+                      value={formData.birthYear || ''}\r\n                       onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n                       onBlur={(e) => e.stopPropagation()}\r\n                     />\r\n                     <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n@@ -504,9 +504,9 @@\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n                 <input \r\n                   type=\"email\"\r\n                   className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.email}\r\n+                  value={formData.email || ''}\r\n                   onChange={(e) => handleInputChange('email', e.target.value)}\r\n                   onBlur={(e) => e.stopPropagation()}\r\n                 />\r\n               </div>\r\n@@ -518,25 +518,25 @@\n                   <input \r\n                     type=\"password\"\r\n                     placeholder=\"Current Password\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={currentPassword}\r\n+                    value={currentPassword || ''}\r\n                     onChange={(e) => setCurrentPassword(e.target.value)}\r\n                     onBlur={(e) => e.stopPropagation()}\r\n                   />\r\n                   <input \r\n                     type=\"password\"\r\n                     placeholder=\"New Password\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={newPassword}\r\n+                    value={newPassword || ''}\r\n                     onChange={(e) => setNewPassword(e.target.value)}\r\n                     onBlur={(e) => e.stopPropagation()}\r\n                   />\r\n                   <input \r\n                     type=\"password\"\r\n                     placeholder=\"Confirm New Password\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={confirmPassword}\r\n+                    value={confirmPassword || ''}\r\n                     onChange={(e) => setConfirmPassword(e.target.value)}\r\n                     onBlur={(e) => e.stopPropagation()}\r\n                   />\r\n                   <button\r\n"
                },
                {
                    "date": 1747244379783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -516,25 +516,25 @@\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Password</label>\r\n                 <div className=\"space-y-4\">\r\n                   <input \r\n                     type=\"password\"\r\n-                    placeholder=\"Current Password\"\r\n+                    placeholder=\"Mật khẩu hiện tại\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                     value={currentPassword || ''}\r\n                     onChange={(e) => setCurrentPassword(e.target.value)}\r\n                     onBlur={(e) => e.stopPropagation()}\r\n                   />\r\n                   <input \r\n                     type=\"password\"\r\n-                    placeholder=\"New Password\"\r\n+                    placeholder=\"Mật khẩu mới\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                     value={newPassword || ''}\r\n                     onChange={(e) => setNewPassword(e.target.value)}\r\n                     onBlur={(e) => e.stopPropagation()}\r\n                   />\r\n                   <input \r\n                     type=\"password\"\r\n-                    placeholder=\"Confirm New Password\"\r\n+                    placeholder=\"Xác nhận mật khẩu mới\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                     value={confirmPassword || ''}\r\n                     onChange={(e) => setConfirmPassword(e.target.value)}\r\n                     onBlur={(e) => e.stopPropagation()}\r\n"
                },
                {
                    "date": 1747244451273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -514,18 +514,20 @@\n               {/* Password Change Section */}\r\n               <div>\r\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Password</label>\r\n                 <div className=\"space-y-4\">\r\n+                  <div className=\"relative\">\r\n+                    <input \r\n+                      type={currentPassword ? \"password\" : \"text\"}\r\n+                      placeholder=\"Mật khẩu hiện tại\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={currentPassword || ''}\r\n+                      onChange={(e) => setCurrentPassword(e.target.value)}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                  </div>\r\n                   <input \r\n                     type=\"password\"\r\n-                    placeholder=\"Mật khẩu hiện tại\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={currentPassword || ''}\r\n-                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n-                  <input \r\n-                    type=\"password\"\r\n                     placeholder=\"Mật khẩu mới\"\r\n                     className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                     value={newPassword || ''}\r\n                     onChange={(e) => setNewPassword(e.target.value)}\r\n"
                },
                {
                    "date": 1747244509980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -524,24 +524,28 @@\n                       onChange={(e) => setCurrentPassword(e.target.value)}\r\n                       onBlur={(e) => e.stopPropagation()}\r\n                     />\r\n                   </div>\r\n-                  <input \r\n-                    type=\"password\"\r\n-                    placeholder=\"Mật khẩu mới\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={newPassword || ''}\r\n-                    onChange={(e) => setNewPassword(e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n-                  <input \r\n-                    type=\"password\"\r\n-                    placeholder=\"Xác nhận mật khẩu mới\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={confirmPassword || ''}\r\n-                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n+                  <div className=\"relative\">\r\n+                    <input \r\n+                      type={newPassword ? \"password\" : \"text\"}\r\n+                      placeholder=\"Mật khẩu mới\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={newPassword || ''}\r\n+                      onChange={(e) => setNewPassword(e.target.value)}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                  </div>\r\n+                  <div className=\"relative\">\r\n+                    <input \r\n+                      type={confirmPassword ? \"password\" : \"text\"}\r\n+                      placeholder=\"Nhập mật khẩu mới\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={confirmPassword || ''}\r\n+                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                  </div>\r\n                   <button\r\n                     type=\"button\"\r\n                     onClick={handlePasswordChange}\r\n                     disabled={isChangingPassword}\r\n"
                },
                {
                    "date": 1747245061247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,14 @@\n   isOpen: boolean;\r\n   onClose: () => void;\r\n }\r\n \r\n+interface PasswordErrorModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  error: string;\r\n+}\r\n+\r\n interface FormData {\r\n   firstName: string;\r\n   lastName: string;\r\n   country: string;\r\n@@ -200,8 +206,65 @@\n     </>\r\n   );\r\n };\r\n \r\n+// Thêm component Modal thông báo lỗi mật khẩu\r\n+const PasswordErrorModal: React.FC<PasswordErrorModalProps> = ({ isOpen, onClose, error }) => {\r\n+  if (!isOpen) return null;\r\n+\r\n+  return (\r\n+    <>\r\n+      <div \r\n+        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n+        onClick={onClose}\r\n+      />\r\n+\r\n+      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n+        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n+          {/* Close Button */}\r\n+          <button \r\n+            onClick={onClose}\r\n+            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n+          >\r\n+            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n+              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n+            </svg>\r\n+          </button>\r\n+\r\n+          {/* Modal Content */}\r\n+          <div className=\"text-center mb-12\">\r\n+            <h2 className=\"text-2xl font-normal text-black\">THÔNG BÁO</h2>\r\n+            <div className=\"flex items-center justify-center my-6\">\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+              <div className=\"mx-4\">\r\n+                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n+                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n+                </svg>\r\n+              </div>\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"space-y-8\">\r\n+            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n+              {error}\r\n+            </p>\r\n+\r\n+            <div className=\"text-center\">\r\n+              <button \r\n+                className=\"bg-black text-white text-xs uppercase px-8 py-3\"\r\n+                onClick={onClose}\r\n+              >\r\n+                ĐÓNG\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n export default function SettingsPage() {\r\n   const { data: session } = useSession();\r\n   const [initialData, setInitialData] = useState<FormData>({\r\n     firstName: '',\r\n@@ -227,8 +290,10 @@\n   const [currentPassword, setCurrentPassword] = useState('');\r\n   const [newPassword, setNewPassword] = useState('');\r\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n+  const [isPasswordErrorModalOpen, setIsPasswordErrorModalOpen] = useState(false);\r\n+  const [passwordError, setPasswordError] = useState('');\r\n \r\n   // Load user data when component mounts\r\n   useEffect(() => {\r\n     const fetchUserData = async () => {\r\n@@ -347,19 +412,22 @@\n \r\n   const handlePasswordChange = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n     e.preventDefault();\r\n     if (!currentPassword || !newPassword || !confirmPassword) {\r\n-      toast.error('Vui lòng nhập đầy đủ thông tin đổi mật khẩu');\r\n+      setPasswordError('Vui lòng nhập đầy đủ thông tin đổi mật khẩu');\r\n+      setIsPasswordErrorModalOpen(true);\r\n       return;\r\n     }\r\n \r\n     if (newPassword !== confirmPassword) {\r\n-      toast.error('Mật khẩu mới không khớp');\r\n+      setPasswordError('Mật khẩu mới không khớp');\r\n+      setIsPasswordErrorModalOpen(true);\r\n       return;\r\n     }\r\n \r\n     if (newPassword.length < 8) {\r\n-      toast.error('Mật khẩu mới phải có ít nhất 8 ký tự');\r\n+      setPasswordError('Mật khẩu mới phải có ít nhất 8 ký tự');\r\n+      setIsPasswordErrorModalOpen(true);\r\n       return;\r\n     }\r\n \r\n     try {\r\n@@ -380,9 +448,10 @@\n       const data = await response.json();\r\n \r\n       if (!response.ok) {\r\n         if (data.error === \"Current password is incorrect\") {\r\n-          toast.error('Mật khẩu hiện tại không đúng');\r\n+          setPasswordError('Mật khẩu hiện tại không đúng');\r\n+          setIsPasswordErrorModalOpen(true);\r\n         } else {\r\n           throw new Error(data.error || 'Không thể đổi mật khẩu');\r\n         }\r\n         return;\r\n@@ -394,9 +463,10 @@\n       setNewPassword('');\r\n       setConfirmPassword('');\r\n     } catch (error) {\r\n       console.error('Error changing password:', error);\r\n-      toast.error(error instanceof Error ? error.message : 'Không thể đổi mật khẩu. Vui lòng thử lại.');\r\n+      setPasswordError(error instanceof Error ? error.message : 'Không thể đổi mật khẩu. Vui lòng thử lại.');\r\n+      setIsPasswordErrorModalOpen(true);\r\n     } finally {\r\n       setIsChangingPassword(false);\r\n     }\r\n   };\r\n@@ -608,7 +678,14 @@\n       <DeactivateModal \r\n         isOpen={isDeactivateModalOpen}\r\n         onClose={() => setIsDeactivateModalOpen(false)}\r\n       />\r\n+\r\n+      {/* Thêm Modal thông báo lỗi mật khẩu */}\r\n+      <PasswordErrorModal \r\n+        isOpen={isPasswordErrorModalOpen}\r\n+        onClose={() => setIsPasswordErrorModalOpen(false)}\r\n+        error={passwordError}\r\n+      />\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747245120989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,691 @@\n+'use client';\r\n+\r\n+import { useState, useEffect, useCallback } from 'react';\r\n+import { motion } from 'framer-motion';\r\n+import { useSession, signOut } from 'next-auth/react';\r\n+import toast from 'react-hot-toast';\r\n+import { useRouter } from 'next/navigation';\r\n+\r\n+interface DeactivateModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+}\r\n+\r\n+interface PasswordErrorModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  error: string;\r\n+}\r\n+\r\n+interface FormData {\r\n+  firstName: string;\r\n+  lastName: string;\r\n+  country: string;\r\n+  birthDay: string;\r\n+  birthMonth: string;\r\n+  birthYear: string;\r\n+  email: string;\r\n+}\r\n+\r\n+// Thêm component Modal\r\n+const DeactivateModal: React.FC<DeactivateModalProps> = ({ isOpen, onClose }) => {\r\n+  const [reason, setReason] = useState('');\r\n+  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n+  const [isDeleting, setIsDeleting] = useState(false);\r\n+  const router = useRouter();\r\n+\r\n+  if (!isOpen) return null;\r\n+\r\n+  // Điều chỉnh thứ tự các lý do\r\n+  const reasons = [\r\n+    { id: 'select', label: 'Select' },\r\n+    { id: 'security', label: 'Security concerns' },\r\n+    { id: 'personal', label: 'Personal reasons' },\r\n+    { id: 'service', label: 'Service issue' },\r\n+    { id: 'unsatisfied', label: 'Unsatisfied with a product' },\r\n+    { id: 'no_content', label: 'No useful contents' },\r\n+    { id: 'not_interested', label: 'Not interested in AISH anymore' },\r\n+    { id: 'billing', label: 'Billing issue' },\r\n+    { id: 'other', label: 'Other' },\r\n+  ];\r\n+\r\n+  const handleDeactivate = async () => {\r\n+    if (!reason || reason === 'select') {\r\n+      toast.error('Vui lòng chọn lý do hủy tài khoản');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsDeleting(true);\r\n+      const response = await fetch('/api/user/deactivate', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({ reason }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error('Không thể hủy tài khoản');\r\n+      }\r\n+\r\n+      toast.success('Tài khoản đã được hủy thành công');\r\n+      // Đăng xuất và chuyển về trang chủ\r\n+      await signOut({ redirect: false });\r\n+      router.push('/');\r\n+    } catch (error) {\r\n+      console.error('Error deactivating account:', error);\r\n+      toast.error('Có lỗi xảy ra khi hủy tài khoản');\r\n+    } finally {\r\n+      setIsDeleting(false);\r\n+      onClose();\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div \r\n+        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n+        onClick={() => {\r\n+          onClose();\r\n+          setIsDropdownOpen(false);\r\n+        }}\r\n+      />\r\n+\r\n+      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n+        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n+          {/* Close Button */}\r\n+          <button \r\n+            onClick={onClose}\r\n+            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n+          >\r\n+            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n+              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n+            </svg>\r\n+          </button>\r\n+\r\n+          {/* Modal Content */}\r\n+          <div className=\"text-center mb-12\">\r\n+            <h2 className=\"text-2xl font-normal text-black\">DEACTIVATE ACCOUNT</h2>\r\n+            <div className=\"flex items-center justify-center my-6\">\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+              <div className=\"mx-4\">\r\n+                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n+                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n+                </svg>\r\n+              </div>\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"space-y-8\">\r\n+            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n+              We're sorry that you want to deactivate your AISH account. By deactivating your AISH account, you will not be able to access your data. If you would like us to delete all of your related information please contact{' '}\r\n+              <span className=\"text-black\">\"privacy@aish.com\"</span>.\r\n+            </p>\r\n+\r\n+            {/* Box chứa phần chọn lý do */}\r\n+            <div className=\"bg-[#f5f5f5] p-8\">\r\n+              <div className=\"space-y-4\">\r\n+                <p className=\"text-xs text-black\">\r\n+                  To help us better serve our clients, please share your reason for deactivating your account:\r\n+                </p>\r\n+                {/* Select dropdown */}\r\n+                <div className=\"relative\">\r\n+                  <button\r\n+                    className=\"w-full p-3 text-left text-xs text-black bg-white border border-gray-200 flex justify-between items-center\"\r\n+                    onClick={(e) => {\r\n+                      e.stopPropagation();\r\n+                      setIsDropdownOpen(!isDropdownOpen);\r\n+                    }}\r\n+                  >\r\n+                    <span>{reason && reason !== 'select' ? reasons.find(r => r.id === reason)?.label : 'Select'}</span>\r\n+                    <svg \r\n+                      className=\"w-3 h-3\"\r\n+                      viewBox=\"0 0 24 24\"\r\n+                    >\r\n+                      <path d=\"M7 10l5 5 5-5z\" fill=\"currentColor\"/>\r\n+                    </svg>\r\n+                  </button>\r\n+\r\n+                  {/* Dropdown menu - bỏ hết animation */}\r\n+                  {isDropdownOpen && (\r\n+                    <div \r\n+                      className=\"absolute top-full left-0 right-0 bg-white border border-gray-200\"\r\n+                      style={{\r\n+                        maxHeight: '144px',\r\n+                        overflowY: 'auto',\r\n+                        scrollbarWidth: 'none',\r\n+                        msOverflowStyle: 'none'\r\n+                      }}\r\n+                    >\r\n+                      <style jsx>{`\r\n+                        div::-webkit-scrollbar {\r\n+                          display: none;\r\n+                        }\r\n+                      `}</style>\r\n+                      {reasons.map((item) => (\r\n+                        <button\r\n+                          key={item.id}\r\n+                          className={`\r\n+                            w-full text-left p-3 text-xs text-black \r\n+                            ${item.id === 'select' ? 'text-gray-400' : ''}\r\n+                            h-9 hover:bg-[#f5f5f5]\r\n+                            transition-none\r\n+                          `}\r\n+                          style={{ transform: 'none' }}\r\n+                          onClick={(e) => {\r\n+                            e.stopPropagation();\r\n+                            if (item.id !== 'select') {\r\n+                              setReason(item.id);\r\n+                              setIsDropdownOpen(false);\r\n+                            }\r\n+                          }}\r\n+                        >\r\n+                          {item.label}\r\n+                        </button>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div className=\"text-center\">\r\n+              <button \r\n+                className={`bg-black text-white text-xs uppercase px-8 py-3 ${(!reason || reason === 'select' || isDeleting) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                onClick={handleDeactivate}\r\n+                disabled={!reason || reason === 'select' || isDeleting}\r\n+              >\r\n+                {isDeleting ? 'DEACTIVATING...' : 'DEACTIVATE MY ACCOUNT'}\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+// Thêm component Modal thông báo lỗi mật khẩu\r\n+const PasswordErrorModal: React.FC<PasswordErrorModalProps> = ({ isOpen, onClose, error }) => {\r\n+  if (!isOpen) return null;\r\n+\r\n+  return (\r\n+    <>\r\n+      <div \r\n+        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n+        onClick={onClose}\r\n+      />\r\n+\r\n+      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n+        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n+          {/* Close Button */}\r\n+          <button \r\n+            onClick={onClose}\r\n+            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n+          >\r\n+            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n+              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n+            </svg>\r\n+          </button>\r\n+\r\n+          {/* Modal Content */}\r\n+          <div className=\"text-center mb-12\">\r\n+            <h2 className=\"text-2xl font-normal text-black\">THÔNG BÁO</h2>\r\n+            <div className=\"flex items-center justify-center my-6\">\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+              <div className=\"mx-4\">\r\n+                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n+                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n+                </svg>\r\n+              </div>\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"space-y-8\">\r\n+            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n+              {error}\r\n+            </p>\r\n+\r\n+            <div className=\"text-center\">\r\n+              <button \r\n+                className=\"bg-black text-white text-xs uppercase px-8 py-3\"\r\n+                onClick={onClose}\r\n+              >\r\n+                ĐÓNG\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default function SettingsPage() {\r\n+  const { data: session } = useSession();\r\n+  const [initialData, setInitialData] = useState<FormData>({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [formData, setFormData] = useState<FormData>({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [isChecked, setIsChecked] = useState(false);\r\n+  const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n+  const [currentPassword, setCurrentPassword] = useState('');\r\n+  const [newPassword, setNewPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n+  const [isPasswordErrorModalOpen, setIsPasswordErrorModalOpen] = useState(false);\r\n+  const [passwordError, setPasswordError] = useState('');\r\n+\r\n+  // Load user data when component mounts\r\n+  useEffect(() => {\r\n+    const fetchUserData = async () => {\r\n+      try {\r\n+        const response = await fetch('/api/user/profile');\r\n+        if (!response.ok) {\r\n+          throw new Error('Failed to fetch user data');\r\n+        }\r\n+        const data = await response.json();\r\n+        \r\n+        // Format the data to match our form structure\r\n+        const formattedData = {\r\n+          firstName: data.firstName || '',\r\n+          lastName: data.lastName || '',\r\n+          country: 'Việt Nam',\r\n+          birthDay: data.birthDay || '',\r\n+          birthMonth: data.birthMonth || '',\r\n+          birthYear: data.birthYear || '',\r\n+          email: data.email || '',\r\n+        };\r\n+        \r\n+        // Set both initial and form data\r\n+        setInitialData(formattedData);\r\n+        setFormData(formattedData);\r\n+      } catch (error) {\r\n+        console.error('Error fetching user data:', error);\r\n+        toast.error('Không thể tải dữ liệu người dùng');\r\n+      }\r\n+    };\r\n+\r\n+    if (session?.user) {\r\n+      fetchUserData();\r\n+    }\r\n+  }, [session]);\r\n+\r\n+  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [field]: value || '' // Đảm bảo giá trị không bao giờ là undefined\r\n+    }));\r\n+  }, []);\r\n+\r\n+  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n+    e.preventDefault();\r\n+  }, []);\r\n+\r\n+  const handleSave = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n+    e.preventDefault();\r\n+    if (!isChecked) {\r\n+      toast.error('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsLoading(true);\r\n+      \r\n+      const response = await fetch('/api/user/update', {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          firstName: formData.firstName,\r\n+          lastName: formData.lastName,\r\n+          birthDay: formData.birthDay,\r\n+          birthMonth: formData.birthMonth,\r\n+          birthYear: formData.birthYear,\r\n+          email: formData.email,\r\n+        }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        const error = await response.json();\r\n+        throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n+      }\r\n+\r\n+      // Sau khi lưu thành công, gọi lại API để lấy dữ liệu mới nhất\r\n+      const fetchUserData = async () => {\r\n+        try {\r\n+          const response = await fetch('/api/user/profile');\r\n+          if (!response.ok) throw new Error('Không thể tải lại dữ liệu');\r\n+          const data = await response.json();\r\n+          setInitialData(data);\r\n+          setFormData(data);\r\n+        } catch (err) {\r\n+          toast.error('Không thể tải lại dữ liệu mới');\r\n+        }\r\n+      };\r\n+      await fetchUserData();\r\n+      toast.success('Lưu thay đổi thành công!');\r\n+    } catch (error) {\r\n+      console.error('Error saving changes:', error);\r\n+      toast.error(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const validateDay = (value: string) => {\r\n+    const day = parseInt(value);\r\n+    if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n+    return value;\r\n+  };\r\n+\r\n+  const validateMonth = (value: string) => {\r\n+    const month = parseInt(value);\r\n+    if (isNaN(month) || month < 1 || month > 12) return formData.birthMonth;\r\n+    return value;\r\n+  };\r\n+\r\n+  const validateYear = (value: string) => {\r\n+    const year = parseInt(value);\r\n+    if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n+    return value;\r\n+  };\r\n+\r\n+  const handlePasswordChange = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n+    e.preventDefault();\r\n+    if (!currentPassword || !newPassword || !confirmPassword) {\r\n+      setPasswordError('Vui lòng nhập đầy đủ thông tin đổi mật khẩu');\r\n+      setIsPasswordErrorModalOpen(true);\r\n+      return;\r\n+    }\r\n+\r\n+    if (newPassword !== confirmPassword) {\r\n+      setPasswordError('Mật khẩu mới không khớp');\r\n+      setIsPasswordErrorModalOpen(true);\r\n+      return;\r\n+    }\r\n+\r\n+    if (newPassword.length < 8) {\r\n+      setPasswordError('Mật khẩu mới phải có ít nhất 8 ký tự');\r\n+      setIsPasswordErrorModalOpen(true);\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsChangingPassword(true);\r\n+      \r\n+      const response = await fetch('/api/user/updatePassword', {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          currentPassword,\r\n+          newPassword,\r\n+          confirmPassword,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+\r\n+      if (!response.ok) {\r\n+        if (data.error === \"Current password is incorrect\") {\r\n+          setPasswordError('Mật khẩu hiện tại không đúng');\r\n+          setIsPasswordErrorModalOpen(true);\r\n+        } else {\r\n+          throw new Error(data.error || 'Không thể đổi mật khẩu');\r\n+        }\r\n+        return;\r\n+      }\r\n+\r\n+      toast.success('Đổi mật khẩu thành công!');\r\n+      // Reset form\r\n+      setCurrentPassword('');\r\n+      setNewPassword('');\r\n+      setConfirmPassword('');\r\n+    } catch (error) {\r\n+      console.error('Error changing password:', error);\r\n+      setPasswordError(error instanceof Error ? error.message : 'Không thể đổi mật khẩu. Vui lòng thử lại.');\r\n+      setIsPasswordErrorModalOpen(true);\r\n+    } finally {\r\n+      setIsChangingPassword(false);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-white\">\r\n+      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n+        <div className=\"text-center py-16\">\r\n+          <div className=\"inline-block\">\r\n+            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n+            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n+          {/* Your Information Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n+            <div className=\"flex-1 space-y-12\">\r\n+              <div className=\"grid grid-cols-2 gap-8\">\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.firstName || ''}\r\n+                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                </div>\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.lastName || ''}\r\n+                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                </div>\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n+                <input \r\n+                  type=\"text\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.country || ''}\r\n+                  disabled\r\n+                />\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n+                <div className=\"grid grid-cols-3 gap-4\">\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"DD\"\r\n+                      min=\"1\"\r\n+                      max=\"31\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthDay || ''}\r\n+                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"MM\"\r\n+                      min=\"1\"\r\n+                      max=\"12\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthMonth || ''}\r\n+                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"YYYY\"\r\n+                      min=\"0\"\r\n+                      max=\"9999\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthYear || ''}\r\n+                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Account Details Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n+            <div className=\"flex-1 space-y-12\">\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n+                <input \r\n+                  type=\"email\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.email || ''}\r\n+                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n+                  onBlur={(e) => e.stopPropagation()}\r\n+                />\r\n+              </div>\r\n+\r\n+              {/* Password Change Section */}\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Password</label>\r\n+                <div className=\"space-y-4\">\r\n+                  <div className=\"relative\">\r\n+                    <input \r\n+                      type={currentPassword ? \"password\" : \"text\"}\r\n+                      placeholder=\"Mật khẩu hiện tại\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={currentPassword || ''}\r\n+                      onChange={(e) => setCurrentPassword(e.target.value)}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                  </div>\r\n+                  <div className=\"relative\">\r\n+                    <input \r\n+                      type={newPassword ? \"password\" : \"text\"}\r\n+                      placeholder=\"Mật khẩu mới\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={newPassword || ''}\r\n+                      onChange={(e) => setNewPassword(e.target.value)}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                  </div>\r\n+                  <div className=\"relative\">\r\n+                    <input \r\n+                      type={confirmPassword ? \"password\" : \"text\"}\r\n+                      placeholder=\"Nhập mật khẩu mới\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={confirmPassword || ''}\r\n+                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                  </div>\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handlePasswordChange}\r\n+                    disabled={isChangingPassword}\r\n+                    className={`w-full px-8 py-2 bg-black text-white text-xs uppercase ${isChangingPassword ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                  >\r\n+                    {isChangingPassword ? 'CHANGING...' : 'CHANGE PASSWORD'}\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Privacy Settings Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n+            <div className=\"flex-1 space-y-6\">\r\n+              <div className=\"flex items-start gap-4\">\r\n+                <input \r\n+                  type=\"checkbox\"\r\n+                  className=\"mt-1\"\r\n+                  checked={isChecked}\r\n+                  onChange={(e) => {\r\n+                    e.stopPropagation();\r\n+                    setIsChecked(e.target.checked);\r\n+                  }}\r\n+                />\r\n+                <p className=\"text-xs text-black\">\r\n+                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+                </p>\r\n+              </div>\r\n+              <p className=\"text-xs text-black\">\r\n+                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n+                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+              </p>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Buttons */}\r\n+          <div className=\"flex items-center justify-between\">\r\n+            <button \r\n+              type=\"button\"\r\n+              className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+              onClick={handleSave}\r\n+              disabled={!isChecked || isLoading}\r\n+            >\r\n+              {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+            </button>\r\n+            <button \r\n+              type=\"button\"\r\n+              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+              onClick={() => setIsDeactivateModalOpen(true)}\r\n+            >\r\n+              DEACTIVATE ACCOUNT\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+\r\n+      {/* Thêm Modal */}\r\n+      <DeactivateModal \r\n+        isOpen={isDeactivateModalOpen}\r\n+        onClose={() => setIsDeactivateModalOpen(false)}\r\n+      />\r\n+\r\n+      {/* Thêm Modal thông báo lỗi mật khẩu */}\r\n+      <PasswordErrorModal \r\n+        isOpen={isPasswordErrorModalOpen}\r\n+        onClose={() => setIsPasswordErrorModalOpen(false)}\r\n+        error={passwordError}\r\n+      />\r\n+    </div>\r\n+  );\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747245218976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,14 @@\n   onClose: () => void;\r\n   error: string;\r\n }\r\n \r\n+interface InfoErrorModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  error: string;\r\n+}\r\n+\r\n interface FormData {\r\n   firstName: string;\r\n   lastName: string;\r\n   country: string;\r\n@@ -263,650 +269,16 @@\n     </>\r\n   );\r\n };\r\n \r\n-export default function SettingsPage() {\r\n-  const { data: session } = useSession();\r\n-  const [initialData, setInitialData] = useState<FormData>({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    country: 'Việt Nam',\r\n-    birthDay: '',\r\n-    birthMonth: '',\r\n-    birthYear: '',\r\n-    email: '',\r\n-  });\r\n-  const [formData, setFormData] = useState<FormData>({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    country: 'Việt Nam',\r\n-    birthDay: '',\r\n-    birthMonth: '',\r\n-    birthYear: '',\r\n-    email: '',\r\n-  });\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [isChecked, setIsChecked] = useState(false);\r\n-  const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n-  const [currentPassword, setCurrentPassword] = useState('');\r\n-  const [newPassword, setNewPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n-  const [isPasswordErrorModalOpen, setIsPasswordErrorModalOpen] = useState(false);\r\n-  const [passwordError, setPasswordError] = useState('');\r\n-\r\n-  // Load user data when component mounts\r\n-  useEffect(() => {\r\n-    const fetchUserData = async () => {\r\n-      try {\r\n-        const response = await fetch('/api/user/profile');\r\n-        if (!response.ok) {\r\n-          throw new Error('Failed to fetch user data');\r\n-        }\r\n-        const data = await response.json();\r\n-        \r\n-        // Format the data to match our form structure\r\n-        const formattedData = {\r\n-          firstName: data.firstName || '',\r\n-          lastName: data.lastName || '',\r\n-          country: 'Việt Nam',\r\n-          birthDay: data.birthDay || '',\r\n-          birthMonth: data.birthMonth || '',\r\n-          birthYear: data.birthYear || '',\r\n-          email: data.email || '',\r\n-        };\r\n-        \r\n-        // Set both initial and form data\r\n-        setInitialData(formattedData);\r\n-        setFormData(formattedData);\r\n-      } catch (error) {\r\n-        console.error('Error fetching user data:', error);\r\n-        toast.error('Không thể tải dữ liệu người dùng');\r\n-      }\r\n-    };\r\n-\r\n-    if (session?.user) {\r\n-      fetchUserData();\r\n-    }\r\n-  }, [session]);\r\n-\r\n-  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\r\n-    setFormData(prev => ({\r\n-      ...prev,\r\n-      [field]: value || '' // Đảm bảo giá trị không bao giờ là undefined\r\n-    }));\r\n-  }, []);\r\n-\r\n-  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n-    e.preventDefault();\r\n-  }, []);\r\n-\r\n-  const handleSave = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n-    e.preventDefault();\r\n-    if (!isChecked) {\r\n-      toast.error('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      setIsLoading(true);\r\n-      \r\n-      const response = await fetch('/api/user/update', {\r\n-        method: 'PUT',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify({\r\n-          firstName: formData.firstName,\r\n-          lastName: formData.lastName,\r\n-          birthDay: formData.birthDay,\r\n-          birthMonth: formData.birthMonth,\r\n-          birthYear: formData.birthYear,\r\n-          email: formData.email,\r\n-        }),\r\n-      });\r\n-\r\n-      if (!response.ok) {\r\n-        const error = await response.json();\r\n-        throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n-      }\r\n-\r\n-      // Sau khi lưu thành công, gọi lại API để lấy dữ liệu mới nhất\r\n-      const fetchUserData = async () => {\r\n-        try {\r\n-          const response = await fetch('/api/user/profile');\r\n-          if (!response.ok) throw new Error('Không thể tải lại dữ liệu');\r\n-          const data = await response.json();\r\n-          setInitialData(data);\r\n-          setFormData(data);\r\n-        } catch (err) {\r\n-          toast.error('Không thể tải lại dữ liệu mới');\r\n-        }\r\n-      };\r\n-      await fetchUserData();\r\n-      toast.success('Lưu thay đổi thành công!');\r\n-    } catch (error) {\r\n-      console.error('Error saving changes:', error);\r\n-      toast.error(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  const validateDay = (value: string) => {\r\n-    const day = parseInt(value);\r\n-    if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n-    return value;\r\n-  };\r\n-\r\n-  const validateMonth = (value: string) => {\r\n-    const month = parseInt(value);\r\n-    if (isNaN(month) || month < 1 || month > 12) return formData.birthMonth;\r\n-    return value;\r\n-  };\r\n-\r\n-  const validateYear = (value: string) => {\r\n-    const year = parseInt(value);\r\n-    if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n-    return value;\r\n-  };\r\n-\r\n-  const handlePasswordChange = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n-    e.preventDefault();\r\n-    if (!currentPassword || !newPassword || !confirmPassword) {\r\n-      setPasswordError('Vui lòng nhập đầy đủ thông tin đổi mật khẩu');\r\n-      setIsPasswordErrorModalOpen(true);\r\n-      return;\r\n-    }\r\n-\r\n-    if (newPassword !== confirmPassword) {\r\n-      setPasswordError('Mật khẩu mới không khớp');\r\n-      setIsPasswordErrorModalOpen(true);\r\n-      return;\r\n-    }\r\n-\r\n-    if (newPassword.length < 8) {\r\n-      setPasswordError('Mật khẩu mới phải có ít nhất 8 ký tự');\r\n-      setIsPasswordErrorModalOpen(true);\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      setIsChangingPassword(true);\r\n-      \r\n-      const response = await fetch('/api/user/updatePassword', {\r\n-        method: 'PUT',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify({\r\n-          currentPassword,\r\n-          newPassword,\r\n-          confirmPassword,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await response.json();\r\n-\r\n-      if (!response.ok) {\r\n-        if (data.error === \"Current password is incorrect\") {\r\n-          setPasswordError('Mật khẩu hiện tại không đúng');\r\n-          setIsPasswordErrorModalOpen(true);\r\n-        } else {\r\n-          throw new Error(data.error || 'Không thể đổi mật khẩu');\r\n-        }\r\n-        return;\r\n-      }\r\n-\r\n-      toast.success('Đổi mật khẩu thành công!');\r\n-      // Reset form\r\n-      setCurrentPassword('');\r\n-      setNewPassword('');\r\n-      setConfirmPassword('');\r\n-    } catch (error) {\r\n-      console.error('Error changing password:', error);\r\n-      setPasswordError(error instanceof Error ? error.message : 'Không thể đổi mật khẩu. Vui lòng thử lại.');\r\n-      setIsPasswordErrorModalOpen(true);\r\n-    } finally {\r\n-      setIsChangingPassword(false);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-white\">\r\n-      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n-        <div className=\"text-center py-16\">\r\n-          <div className=\"inline-block\">\r\n-            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n-            <div className=\"h-[1px] bg-black mt-2\"></div>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n-          {/* Your Information Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n-            <div className=\"flex-1 space-y-12\">\r\n-              <div className=\"grid grid-cols-2 gap-8\">\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.firstName || ''}\r\n-                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n-                </div>\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.lastName || ''}\r\n-                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n-                </div>\r\n-              </div>\r\n-\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n-                <input \r\n-                  type=\"text\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.country || ''}\r\n-                  disabled\r\n-                />\r\n-              </div>\r\n-\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n-                <div className=\"grid grid-cols-3 gap-4\">\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"DD\"\r\n-                      min=\"1\"\r\n-                      max=\"31\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthDay || ''}\r\n-                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n-                  </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"MM\"\r\n-                      min=\"1\"\r\n-                      max=\"12\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthMonth || ''}\r\n-                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n-                  </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"YYYY\"\r\n-                      min=\"0\"\r\n-                      max=\"9999\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthYear || ''}\r\n-                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Account Details Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n-            <div className=\"flex-1 space-y-12\">\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n-                <input \r\n-                  type=\"email\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.email || ''}\r\n-                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n-                  onBlur={(e) => e.stopPropagation()}\r\n-                />\r\n-              </div>\r\n-\r\n-              {/* Password Change Section */}\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Password</label>\r\n-                <div className=\"space-y-4\">\r\n-                  <div className=\"relative\">\r\n-                    <input \r\n-                      type={currentPassword ? \"password\" : \"text\"}\r\n-                      placeholder=\"Mật khẩu hiện tại\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={currentPassword || ''}\r\n-                      onChange={(e) => setCurrentPassword(e.target.value)}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                  </div>\r\n-                  <div className=\"relative\">\r\n-                    <input \r\n-                      type={newPassword ? \"password\" : \"text\"}\r\n-                      placeholder=\"Mật khẩu mới\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={newPassword || ''}\r\n-                      onChange={(e) => setNewPassword(e.target.value)}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                  </div>\r\n-                  <div className=\"relative\">\r\n-                    <input \r\n-                      type={confirmPassword ? \"password\" : \"text\"}\r\n-                      placeholder=\"Nhập mật khẩu mới\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={confirmPassword || ''}\r\n-                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                  </div>\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handlePasswordChange}\r\n-                    disabled={isChangingPassword}\r\n-                    className={`w-full px-8 py-2 bg-black text-white text-xs uppercase ${isChangingPassword ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-                  >\r\n-                    {isChangingPassword ? 'CHANGING...' : 'CHANGE PASSWORD'}\r\n-                  </button>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Privacy Settings Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n-            <div className=\"flex-1 space-y-6\">\r\n-              <div className=\"flex items-start gap-4\">\r\n-                <input \r\n-                  type=\"checkbox\"\r\n-                  className=\"mt-1\"\r\n-                  checked={isChecked}\r\n-                  onChange={(e) => {\r\n-                    e.stopPropagation();\r\n-                    setIsChecked(e.target.checked);\r\n-                  }}\r\n-                />\r\n-                <p className=\"text-xs text-black\">\r\n-                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n-                </p>\r\n-              </div>\r\n-              <p className=\"text-xs text-black\">\r\n-                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n-              </p>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Buttons */}\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <button \r\n-              type=\"button\"\r\n-              className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-              onClick={handleSave}\r\n-              disabled={!isChecked || isLoading}\r\n-            >\r\n-              {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n-            </button>\r\n-            <button \r\n-              type=\"button\"\r\n-              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-              onClick={() => setIsDeactivateModalOpen(true)}\r\n-            >\r\n-              DEACTIVATE ACCOUNT\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n-      </div>\r\n-\r\n-      {/* Thêm Modal */}\r\n-      <DeactivateModal \r\n-        isOpen={isDeactivateModalOpen}\r\n-        onClose={() => setIsDeactivateModalOpen(false)}\r\n-      />\r\n-\r\n-      {/* Thêm Modal thông báo lỗi mật khẩu */}\r\n-      <PasswordErrorModal \r\n-        isOpen={isPasswordErrorModalOpen}\r\n-        onClose={() => setIsPasswordErrorModalOpen(false)}\r\n-        error={passwordError}\r\n-      />\r\n-    </div>\r\n-  );\r\n-} \n-'use client';\r\n-\r\n-import { useState, useEffect, useCallback } from 'react';\r\n-import { motion } from 'framer-motion';\r\n-import { useSession, signOut } from 'next-auth/react';\r\n-import toast from 'react-hot-toast';\r\n-import { useRouter } from 'next/navigation';\r\n-\r\n-interface DeactivateModalProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-}\r\n-\r\n-interface PasswordErrorModalProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-  error: string;\r\n-}\r\n-\r\n-interface FormData {\r\n-  firstName: string;\r\n-  lastName: string;\r\n-  country: string;\r\n-  birthDay: string;\r\n-  birthMonth: string;\r\n-  birthYear: string;\r\n-  email: string;\r\n-}\r\n-\r\n-// Thêm component Modal\r\n-const DeactivateModal: React.FC<DeactivateModalProps> = ({ isOpen, onClose }) => {\r\n-  const [reason, setReason] = useState('');\r\n-  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n-  const [isDeleting, setIsDeleting] = useState(false);\r\n-  const router = useRouter();\r\n-\r\n+// Thêm component Modal thông báo lỗi thông tin\r\n+const InfoErrorModal: React.FC<InfoErrorModalProps> = ({ isOpen, onClose, error }) => {\r\n   if (!isOpen) return null;\r\n \r\n-  // Điều chỉnh thứ tự các lý do\r\n-  const reasons = [\r\n-    { id: 'select', label: 'Select' },\r\n-    { id: 'security', label: 'Security concerns' },\r\n-    { id: 'personal', label: 'Personal reasons' },\r\n-    { id: 'service', label: 'Service issue' },\r\n-    { id: 'unsatisfied', label: 'Unsatisfied with a product' },\r\n-    { id: 'no_content', label: 'No useful contents' },\r\n-    { id: 'not_interested', label: 'Not interested in AISH anymore' },\r\n-    { id: 'billing', label: 'Billing issue' },\r\n-    { id: 'other', label: 'Other' },\r\n-  ];\r\n-\r\n-  const handleDeactivate = async () => {\r\n-    if (!reason || reason === 'select') {\r\n-      toast.error('Vui lòng chọn lý do hủy tài khoản');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      setIsDeleting(true);\r\n-      const response = await fetch('/api/user/deactivate', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify({ reason }),\r\n-      });\r\n-\r\n-      if (!response.ok) {\r\n-        throw new Error('Không thể hủy tài khoản');\r\n-      }\r\n-\r\n-      toast.success('Tài khoản đã được hủy thành công');\r\n-      // Đăng xuất và chuyển về trang chủ\r\n-      await signOut({ redirect: false });\r\n-      router.push('/');\r\n-    } catch (error) {\r\n-      console.error('Error deactivating account:', error);\r\n-      toast.error('Có lỗi xảy ra khi hủy tài khoản');\r\n-    } finally {\r\n-      setIsDeleting(false);\r\n-      onClose();\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <>\r\n       <div \r\n         className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n-        onClick={() => {\r\n-          onClose();\r\n-          setIsDropdownOpen(false);\r\n-        }}\r\n-      />\r\n-\r\n-      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n-        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n-          {/* Close Button */}\r\n-          <button \r\n-            onClick={onClose}\r\n-            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n-          >\r\n-            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n-              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n-            </svg>\r\n-          </button>\r\n-\r\n-          {/* Modal Content */}\r\n-          <div className=\"text-center mb-12\">\r\n-            <h2 className=\"text-2xl font-normal text-black\">DEACTIVATE ACCOUNT</h2>\r\n-            <div className=\"flex items-center justify-center my-6\">\r\n-              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n-              <div className=\"mx-4\">\r\n-                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n-                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n-                </svg>\r\n-              </div>\r\n-              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div className=\"space-y-8\">\r\n-            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n-              We're sorry that you want to deactivate your AISH account. By deactivating your AISH account, you will not be able to access your data. If you would like us to delete all of your related information please contact{' '}\r\n-              <span className=\"text-black\">\"privacy@aish.com\"</span>.\r\n-            </p>\r\n-\r\n-            {/* Box chứa phần chọn lý do */}\r\n-            <div className=\"bg-[#f5f5f5] p-8\">\r\n-              <div className=\"space-y-4\">\r\n-                <p className=\"text-xs text-black\">\r\n-                  To help us better serve our clients, please share your reason for deactivating your account:\r\n-                </p>\r\n-                {/* Select dropdown */}\r\n-                <div className=\"relative\">\r\n-                  <button\r\n-                    className=\"w-full p-3 text-left text-xs text-black bg-white border border-gray-200 flex justify-between items-center\"\r\n-                    onClick={(e) => {\r\n-                      e.stopPropagation();\r\n-                      setIsDropdownOpen(!isDropdownOpen);\r\n-                    }}\r\n-                  >\r\n-                    <span>{reason && reason !== 'select' ? reasons.find(r => r.id === reason)?.label : 'Select'}</span>\r\n-                    <svg \r\n-                      className=\"w-3 h-3\"\r\n-                      viewBox=\"0 0 24 24\"\r\n-                    >\r\n-                      <path d=\"M7 10l5 5 5-5z\" fill=\"currentColor\"/>\r\n-                    </svg>\r\n-                  </button>\r\n-\r\n-                  {/* Dropdown menu - bỏ hết animation */}\r\n-                  {isDropdownOpen && (\r\n-                    <div \r\n-                      className=\"absolute top-full left-0 right-0 bg-white border border-gray-200\"\r\n-                      style={{\r\n-                        maxHeight: '144px',\r\n-                        overflowY: 'auto',\r\n-                        scrollbarWidth: 'none',\r\n-                        msOverflowStyle: 'none'\r\n-                      }}\r\n-                    >\r\n-                      <style jsx>{`\r\n-                        div::-webkit-scrollbar {\r\n-                          display: none;\r\n-                        }\r\n-                      `}</style>\r\n-                      {reasons.map((item) => (\r\n-                        <button\r\n-                          key={item.id}\r\n-                          className={`\r\n-                            w-full text-left p-3 text-xs text-black \r\n-                            ${item.id === 'select' ? 'text-gray-400' : ''}\r\n-                            h-9 hover:bg-[#f5f5f5]\r\n-                            transition-none\r\n-                          `}\r\n-                          style={{ transform: 'none' }}\r\n-                          onClick={(e) => {\r\n-                            e.stopPropagation();\r\n-                            if (item.id !== 'select') {\r\n-                              setReason(item.id);\r\n-                              setIsDropdownOpen(false);\r\n-                            }\r\n-                          }}\r\n-                        >\r\n-                          {item.label}\r\n-                        </button>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <div className=\"text-center\">\r\n-              <button \r\n-                className={`bg-black text-white text-xs uppercase px-8 py-3 ${(!reason || reason === 'select' || isDeleting) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-                onClick={handleDeactivate}\r\n-                disabled={!reason || reason === 'select' || isDeleting}\r\n-              >\r\n-                {isDeleting ? 'DEACTIVATING...' : 'DEACTIVATE MY ACCOUNT'}\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-// Thêm component Modal thông báo lỗi mật khẩu\r\n-const PasswordErrorModal: React.FC<PasswordErrorModalProps> = ({ isOpen, onClose, error }) => {\r\n-  if (!isOpen) return null;\r\n-\r\n-  return (\r\n-    <>\r\n-      <div \r\n-        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n         onClick={onClose}\r\n       />\r\n \r\n       <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n@@ -983,8 +355,10 @@\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n   const [isPasswordErrorModalOpen, setIsPasswordErrorModalOpen] = useState(false);\r\n   const [passwordError, setPasswordError] = useState('');\r\n+  const [isInfoErrorModalOpen, setIsInfoErrorModalOpen] = useState(false);\r\n+  const [infoError, setInfoError] = useState('');\r\n \r\n   // Load user data when component mounts\r\n   useEffect(() => {\r\n     const fetchUserData = async () => {\r\n@@ -1033,12 +407,21 @@\n \r\n   const handleSave = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n     e.preventDefault();\r\n     if (!isChecked) {\r\n-      toast.error('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n+      setInfoError('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n+      setIsInfoErrorModalOpen(true);\r\n       return;\r\n     }\r\n \r\n+    // Kiểm tra email hợp lệ\r\n+    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n+    if (!emailRegex.test(formData.email)) {\r\n+      setInfoError('Email không hợp lệ');\r\n+      setIsInfoErrorModalOpen(true);\r\n+      return;\r\n+    }\r\n+\r\n     try {\r\n       setIsLoading(true);\r\n       \r\n       const response = await fetch('/api/user/update', {\r\n@@ -1069,16 +452,18 @@\n           const data = await response.json();\r\n           setInitialData(data);\r\n           setFormData(data);\r\n         } catch (err) {\r\n-          toast.error('Không thể tải lại dữ liệu mới');\r\n+          setInfoError('Không thể tải lại dữ liệu mới');\r\n+          setIsInfoErrorModalOpen(true);\r\n         }\r\n       };\r\n       await fetchUserData();\r\n       toast.success('Lưu thay đổi thành công!');\r\n     } catch (error) {\r\n       console.error('Error saving changes:', error);\r\n-      toast.error(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n+      setInfoError(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n+      setIsInfoErrorModalOpen(true);\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n@@ -1376,7 +761,14 @@\n         isOpen={isPasswordErrorModalOpen}\r\n         onClose={() => setIsPasswordErrorModalOpen(false)}\r\n         error={passwordError}\r\n       />\r\n+\r\n+      {/* Thêm Modal thông báo lỗi thông tin */}\r\n+      <InfoErrorModal \r\n+        isOpen={isInfoErrorModalOpen}\r\n+        onClose={() => setIsInfoErrorModalOpen(false)}\r\n+        error={infoError}\r\n+      />\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747245316444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -420,8 +420,23 @@\n       setIsInfoErrorModalOpen(true);\r\n       return;\r\n     }\r\n \r\n+    // Kiểm tra xem có thay đổi gì không\r\n+    const hasChanges = \r\n+      formData.firstName !== initialData.firstName ||\r\n+      formData.lastName !== initialData.lastName ||\r\n+      formData.birthDay !== initialData.birthDay ||\r\n+      formData.birthMonth !== initialData.birthMonth ||\r\n+      formData.birthYear !== initialData.birthYear ||\r\n+      formData.email !== initialData.email;\r\n+\r\n+    if (!hasChanges) {\r\n+      setInfoError('Không có thay đổi nào để lưu');\r\n+      setIsInfoErrorModalOpen(true);\r\n+      return;\r\n+    }\r\n+\r\n     try {\r\n       setIsLoading(true);\r\n       \r\n       const response = await fetch('/api/user/update', {\r\n"
                },
                {
                    "date": 1747245395234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -665,10 +665,16 @@\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n                 <input \r\n                   type=\"email\"\r\n                   className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.email || ''}\r\n-                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n+                  value={formData.email}\r\n+                  onChange={(e) => {\r\n+                    // Nếu người dùng cố xóa email, giữ nguyên giá trị cũ\r\n+                    if (!e.target.value) {\r\n+                      return;\r\n+                    }\r\n+                    handleInputChange('email', e.target.value);\r\n+                  }}\r\n                   onBlur={(e) => e.stopPropagation()}\r\n                 />\r\n               </div>\r\n \r\n"
                },
                {
                    "date": 1747245451103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,9 +364,10 @@\n     const fetchUserData = async () => {\r\n       try {\r\n         const response = await fetch('/api/user/profile');\r\n         if (!response.ok) {\r\n-          throw new Error('Failed to fetch user data');\r\n+          const error = await response.json();\r\n+          throw new Error(error.message || 'Failed to fetch user data');\r\n         }\r\n         const data = await response.json();\r\n         \r\n         // Format the data to match our form structure\r\n@@ -384,9 +385,10 @@\n         setInitialData(formattedData);\r\n         setFormData(formattedData);\r\n       } catch (error) {\r\n         console.error('Error fetching user data:', error);\r\n-        toast.error('Không thể tải dữ liệu người dùng');\r\n+        setInfoError('Không thể tải dữ liệu người dùng. Vui lòng thử lại sau.');\r\n+        setIsInfoErrorModalOpen(true);\r\n       }\r\n     };\r\n \r\n     if (session?.user) {\r\n"
                },
                {
                    "date": 1747246370528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,219 +1,16 @@\n 'use client';\r\n \r\n-import { useState, useEffect, useCallback } from 'react';\r\n-import { motion } from 'framer-motion';\r\n-import { useSession, signOut } from 'next-auth/react';\r\n+import { useState } from 'react';\r\n+import { useSession } from 'next-auth/react';\r\n import toast from 'react-hot-toast';\r\n-import { useRouter } from 'next/navigation';\r\n \r\n-interface DeactivateModalProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-}\r\n-\r\n interface PasswordErrorModalProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n   error: string;\r\n }\r\n \r\n-interface InfoErrorModalProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-  error: string;\r\n-}\r\n-\r\n-interface FormData {\r\n-  firstName: string;\r\n-  lastName: string;\r\n-  country: string;\r\n-  birthDay: string;\r\n-  birthMonth: string;\r\n-  birthYear: string;\r\n-  email: string;\r\n-}\r\n-\r\n-// Thêm component Modal\r\n-const DeactivateModal: React.FC<DeactivateModalProps> = ({ isOpen, onClose }) => {\r\n-  const [reason, setReason] = useState('');\r\n-  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n-  const [isDeleting, setIsDeleting] = useState(false);\r\n-  const router = useRouter();\r\n-\r\n-  if (!isOpen) return null;\r\n-\r\n-  // Điều chỉnh thứ tự các lý do\r\n-  const reasons = [\r\n-    { id: 'select', label: 'Select' },\r\n-    { id: 'security', label: 'Security concerns' },\r\n-    { id: 'personal', label: 'Personal reasons' },\r\n-    { id: 'service', label: 'Service issue' },\r\n-    { id: 'unsatisfied', label: 'Unsatisfied with a product' },\r\n-    { id: 'no_content', label: 'No useful contents' },\r\n-    { id: 'not_interested', label: 'Not interested in AISH anymore' },\r\n-    { id: 'billing', label: 'Billing issue' },\r\n-    { id: 'other', label: 'Other' },\r\n-  ];\r\n-\r\n-  const handleDeactivate = async () => {\r\n-    if (!reason || reason === 'select') {\r\n-      toast.error('Vui lòng chọn lý do hủy tài khoản');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      setIsDeleting(true);\r\n-      const response = await fetch('/api/user/deactivate', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify({ reason }),\r\n-      });\r\n-\r\n-      if (!response.ok) {\r\n-        throw new Error('Không thể hủy tài khoản');\r\n-      }\r\n-\r\n-      toast.success('Tài khoản đã được hủy thành công');\r\n-      // Đăng xuất và chuyển về trang chủ\r\n-      await signOut({ redirect: false });\r\n-      router.push('/');\r\n-    } catch (error) {\r\n-      console.error('Error deactivating account:', error);\r\n-      toast.error('Có lỗi xảy ra khi hủy tài khoản');\r\n-    } finally {\r\n-      setIsDeleting(false);\r\n-      onClose();\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div \r\n-        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n-        onClick={() => {\r\n-          onClose();\r\n-          setIsDropdownOpen(false);\r\n-        }}\r\n-      />\r\n-\r\n-      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n-        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n-          {/* Close Button */}\r\n-          <button \r\n-            onClick={onClose}\r\n-            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n-          >\r\n-            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n-              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n-            </svg>\r\n-          </button>\r\n-\r\n-          {/* Modal Content */}\r\n-          <div className=\"text-center mb-12\">\r\n-            <h2 className=\"text-2xl font-normal text-black\">DEACTIVATE ACCOUNT</h2>\r\n-            <div className=\"flex items-center justify-center my-6\">\r\n-              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n-              <div className=\"mx-4\">\r\n-                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n-                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n-                </svg>\r\n-              </div>\r\n-              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div className=\"space-y-8\">\r\n-            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n-              We're sorry that you want to deactivate your AISH account. By deactivating your AISH account, you will not be able to access your data. If you would like us to delete all of your related information please contact{' '}\r\n-              <span className=\"text-black\">\"privacy@aish.com\"</span>.\r\n-            </p>\r\n-\r\n-            {/* Box chứa phần chọn lý do */}\r\n-            <div className=\"bg-[#f5f5f5] p-8\">\r\n-              <div className=\"space-y-4\">\r\n-                <p className=\"text-xs text-black\">\r\n-                  To help us better serve our clients, please share your reason for deactivating your account:\r\n-                </p>\r\n-                {/* Select dropdown */}\r\n-                <div className=\"relative\">\r\n-                  <button\r\n-                    className=\"w-full p-3 text-left text-xs text-black bg-white border border-gray-200 flex justify-between items-center\"\r\n-                    onClick={(e) => {\r\n-                      e.stopPropagation();\r\n-                      setIsDropdownOpen(!isDropdownOpen);\r\n-                    }}\r\n-                  >\r\n-                    <span>{reason && reason !== 'select' ? reasons.find(r => r.id === reason)?.label : 'Select'}</span>\r\n-                    <svg \r\n-                      className=\"w-3 h-3\"\r\n-                      viewBox=\"0 0 24 24\"\r\n-                    >\r\n-                      <path d=\"M7 10l5 5 5-5z\" fill=\"currentColor\"/>\r\n-                    </svg>\r\n-                  </button>\r\n-\r\n-                  {/* Dropdown menu - bỏ hết animation */}\r\n-                  {isDropdownOpen && (\r\n-                    <div \r\n-                      className=\"absolute top-full left-0 right-0 bg-white border border-gray-200\"\r\n-                      style={{\r\n-                        maxHeight: '144px',\r\n-                        overflowY: 'auto',\r\n-                        scrollbarWidth: 'none',\r\n-                        msOverflowStyle: 'none'\r\n-                      }}\r\n-                    >\r\n-                      <style jsx>{`\r\n-                        div::-webkit-scrollbar {\r\n-                          display: none;\r\n-                        }\r\n-                      `}</style>\r\n-                      {reasons.map((item) => (\r\n-                        <button\r\n-                          key={item.id}\r\n-                          className={`\r\n-                            w-full text-left p-3 text-xs text-black \r\n-                            ${item.id === 'select' ? 'text-gray-400' : ''}\r\n-                            h-9 hover:bg-[#f5f5f5]\r\n-                            transition-none\r\n-                          `}\r\n-                          style={{ transform: 'none' }}\r\n-                          onClick={(e) => {\r\n-                            e.stopPropagation();\r\n-                            if (item.id !== 'select') {\r\n-                              setReason(item.id);\r\n-                              setIsDropdownOpen(false);\r\n-                            }\r\n-                          }}\r\n-                        >\r\n-                          {item.label}\r\n-                        </button>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <div className=\"text-center\">\r\n-              <button \r\n-                className={`bg-black text-white text-xs uppercase px-8 py-3 ${(!reason || reason === 'select' || isDeleting) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-                onClick={handleDeactivate}\r\n-                disabled={!reason || reason === 'select' || isDeleting}\r\n-              >\r\n-                {isDeleting ? 'DEACTIVATING...' : 'DEACTIVATE MY ACCOUNT'}\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n // Thêm component Modal thông báo lỗi mật khẩu\r\n const PasswordErrorModal: React.FC<PasswordErrorModalProps> = ({ isOpen, onClose, error }) => {\r\n   if (!isOpen) return null;\r\n \r\n@@ -269,241 +66,17 @@\n     </>\r\n   );\r\n };\r\n \r\n-// Thêm component Modal thông báo lỗi thông tin\r\n-const InfoErrorModal: React.FC<InfoErrorModalProps> = ({ isOpen, onClose, error }) => {\r\n-  if (!isOpen) return null;\r\n-\r\n-  return (\r\n-    <>\r\n-      <div \r\n-        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n-        onClick={onClose}\r\n-      />\r\n-\r\n-      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n-        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n-          {/* Close Button */}\r\n-          <button \r\n-            onClick={onClose}\r\n-            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n-          >\r\n-            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n-              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n-            </svg>\r\n-          </button>\r\n-\r\n-          {/* Modal Content */}\r\n-          <div className=\"text-center mb-12\">\r\n-            <h2 className=\"text-2xl font-normal text-black\">THÔNG BÁO</h2>\r\n-            <div className=\"flex items-center justify-center my-6\">\r\n-              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n-              <div className=\"mx-4\">\r\n-                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n-                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n-                </svg>\r\n-              </div>\r\n-              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div className=\"space-y-8\">\r\n-            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n-              {error}\r\n-            </p>\r\n-\r\n-            <div className=\"text-center\">\r\n-              <button \r\n-                className=\"bg-black text-white text-xs uppercase px-8 py-3\"\r\n-                onClick={onClose}\r\n-              >\r\n-                ĐÓNG\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n export default function SettingsPage() {\r\n   const { data: session } = useSession();\r\n-  const [initialData, setInitialData] = useState<FormData>({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    country: 'Việt Nam',\r\n-    birthDay: '',\r\n-    birthMonth: '',\r\n-    birthYear: '',\r\n-    email: '',\r\n-  });\r\n-  const [formData, setFormData] = useState<FormData>({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    country: 'Việt Nam',\r\n-    birthDay: '',\r\n-    birthMonth: '',\r\n-    birthYear: '',\r\n-    email: '',\r\n-  });\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [isChecked, setIsChecked] = useState(false);\r\n-  const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n   const [currentPassword, setCurrentPassword] = useState('');\r\n   const [newPassword, setNewPassword] = useState('');\r\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n   const [isPasswordErrorModalOpen, setIsPasswordErrorModalOpen] = useState(false);\r\n   const [passwordError, setPasswordError] = useState('');\r\n-  const [isInfoErrorModalOpen, setIsInfoErrorModalOpen] = useState(false);\r\n-  const [infoError, setInfoError] = useState('');\r\n \r\n-  // Load user data when component mounts\r\n-  useEffect(() => {\r\n-    const fetchUserData = async () => {\r\n-      try {\r\n-        const response = await fetch('/api/user/profile');\r\n-        if (!response.ok) {\r\n-          const error = await response.json();\r\n-          throw new Error(error.message || 'Failed to fetch user data');\r\n-        }\r\n-        const data = await response.json();\r\n-        \r\n-        // Format the data to match our form structure\r\n-        const formattedData = {\r\n-          firstName: data.firstName || '',\r\n-          lastName: data.lastName || '',\r\n-          country: 'Việt Nam',\r\n-          birthDay: data.birthDay || '',\r\n-          birthMonth: data.birthMonth || '',\r\n-          birthYear: data.birthYear || '',\r\n-          email: data.email || '',\r\n-        };\r\n-        \r\n-        // Set both initial and form data\r\n-        setInitialData(formattedData);\r\n-        setFormData(formattedData);\r\n-      } catch (error) {\r\n-        console.error('Error fetching user data:', error);\r\n-        setInfoError('Không thể tải dữ liệu người dùng. Vui lòng thử lại sau.');\r\n-        setIsInfoErrorModalOpen(true);\r\n-      }\r\n-    };\r\n-\r\n-    if (session?.user) {\r\n-      fetchUserData();\r\n-    }\r\n-  }, [session]);\r\n-\r\n-  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\r\n-    setFormData(prev => ({\r\n-      ...prev,\r\n-      [field]: value || '' // Đảm bảo giá trị không bao giờ là undefined\r\n-    }));\r\n-  }, []);\r\n-\r\n-  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n-    e.preventDefault();\r\n-  }, []);\r\n-\r\n-  const handleSave = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n-    e.preventDefault();\r\n-    if (!isChecked) {\r\n-      setInfoError('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n-      setIsInfoErrorModalOpen(true);\r\n-      return;\r\n-    }\r\n-\r\n-    // Kiểm tra email hợp lệ\r\n-    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n-    if (!emailRegex.test(formData.email)) {\r\n-      setInfoError('Email không hợp lệ');\r\n-      setIsInfoErrorModalOpen(true);\r\n-      return;\r\n-    }\r\n-\r\n-    // Kiểm tra xem có thay đổi gì không\r\n-    const hasChanges = \r\n-      formData.firstName !== initialData.firstName ||\r\n-      formData.lastName !== initialData.lastName ||\r\n-      formData.birthDay !== initialData.birthDay ||\r\n-      formData.birthMonth !== initialData.birthMonth ||\r\n-      formData.birthYear !== initialData.birthYear ||\r\n-      formData.email !== initialData.email;\r\n-\r\n-    if (!hasChanges) {\r\n-      setInfoError('Không có thay đổi nào để lưu');\r\n-      setIsInfoErrorModalOpen(true);\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      setIsLoading(true);\r\n-      \r\n-      const response = await fetch('/api/user/update', {\r\n-        method: 'PUT',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify({\r\n-          firstName: formData.firstName,\r\n-          lastName: formData.lastName,\r\n-          birthDay: formData.birthDay,\r\n-          birthMonth: formData.birthMonth,\r\n-          birthYear: formData.birthYear,\r\n-          email: formData.email,\r\n-        }),\r\n-      });\r\n-\r\n-      if (!response.ok) {\r\n-        const error = await response.json();\r\n-        throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n-      }\r\n-\r\n-      // Sau khi lưu thành công, gọi lại API để lấy dữ liệu mới nhất\r\n-      const fetchUserData = async () => {\r\n-        try {\r\n-          const response = await fetch('/api/user/profile');\r\n-          if (!response.ok) throw new Error('Không thể tải lại dữ liệu');\r\n-          const data = await response.json();\r\n-          setInitialData(data);\r\n-          setFormData(data);\r\n-        } catch (err) {\r\n-          setInfoError('Không thể tải lại dữ liệu mới');\r\n-          setIsInfoErrorModalOpen(true);\r\n-        }\r\n-      };\r\n-      await fetchUserData();\r\n-      toast.success('Lưu thay đổi thành công!');\r\n-    } catch (error) {\r\n-      console.error('Error saving changes:', error);\r\n-      setInfoError(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n-      setIsInfoErrorModalOpen(true);\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  const validateDay = (value: string) => {\r\n-    const day = parseInt(value);\r\n-    if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n-    return value;\r\n-  };\r\n-\r\n-  const validateMonth = (value: string) => {\r\n-    const month = parseInt(value);\r\n-    if (isNaN(month) || month < 1 || month > 12) return formData.birthMonth;\r\n-    return value;\r\n-  };\r\n-\r\n-  const validateYear = (value: string) => {\r\n-    const year = parseInt(value);\r\n-    if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n-    return value;\r\n-  };\r\n-\r\n   const handlePasswordChange = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n     e.preventDefault();\r\n     if (!currentPassword || !newPassword || !confirmPassword) {\r\n       setPasswordError('Vui lòng nhập đầy đủ thông tin đổi mật khẩu');\r\n@@ -573,116 +146,14 @@\n             <div className=\"h-[1px] bg-black mt-2\"></div>\r\n           </div>\r\n         </div>\r\n \r\n-        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n-          {/* Your Information Section */}\r\n+        <form className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n+          {/* Password Change Section */}\r\n           <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n-            <div className=\"flex-1 space-y-12\">\r\n-              <div className=\"grid grid-cols-2 gap-8\">\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.firstName || ''}\r\n-                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n-                </div>\r\n-                <div>\r\n-                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n-                  <input \r\n-                    type=\"text\"\r\n-                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                    value={formData.lastName || ''}\r\n-                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n-                    onBlur={(e) => e.stopPropagation()}\r\n-                  />\r\n-                </div>\r\n-              </div>\r\n-\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n-                <input \r\n-                  type=\"text\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.country || ''}\r\n-                  disabled\r\n-                />\r\n-              </div>\r\n-\r\n-              <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n-                <div className=\"grid grid-cols-3 gap-4\">\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"DD\"\r\n-                      min=\"1\"\r\n-                      max=\"31\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthDay || ''}\r\n-                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n-                  </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"MM\"\r\n-                      min=\"1\"\r\n-                      max=\"12\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthMonth || ''}\r\n-                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n-                  </div>\r\n-                  <div>\r\n-                    <input \r\n-                      type=\"number\"\r\n-                      placeholder=\"YYYY\"\r\n-                      min=\"0\"\r\n-                      max=\"9999\"\r\n-                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                      value={formData.birthYear || ''}\r\n-                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n-                      onBlur={(e) => e.stopPropagation()}\r\n-                    />\r\n-                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Account Details Section */}\r\n-          <div className=\"flex\">\r\n             <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n             <div className=\"flex-1 space-y-12\">\r\n               <div>\r\n-                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n-                <input \r\n-                  type=\"email\"\r\n-                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n-                  value={formData.email}\r\n-                  onChange={(e) => {\r\n-                    // Nếu người dùng cố xóa email, giữ nguyên giá trị cũ\r\n-                    if (!e.target.value) {\r\n-                      return;\r\n-                    }\r\n-                    handleInputChange('email', e.target.value);\r\n-                  }}\r\n-                  onBlur={(e) => e.stopPropagation()}\r\n-                />\r\n-              </div>\r\n-\r\n-              {/* Password Change Section */}\r\n-              <div>\r\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Password</label>\r\n                 <div className=\"space-y-4\">\r\n                   <div className=\"relative\">\r\n                     <input \r\n@@ -725,73 +196,16 @@\n                 </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n-\r\n-          {/* Privacy Settings Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n-            <div className=\"flex-1 space-y-6\">\r\n-              <div className=\"flex items-start gap-4\">\r\n-                <input \r\n-                  type=\"checkbox\"\r\n-                  className=\"mt-1\"\r\n-                  checked={isChecked}\r\n-                  onChange={(e) => {\r\n-                    e.stopPropagation();\r\n-                    setIsChecked(e.target.checked);\r\n-                  }}\r\n-                />\r\n-                <p className=\"text-xs text-black\">\r\n-                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n-                </p>\r\n-              </div>\r\n-              <p className=\"text-xs text-black\">\r\n-                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n-              </p>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Buttons */}\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <button \r\n-              type=\"button\"\r\n-              className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-              onClick={handleSave}\r\n-              disabled={!isChecked || isLoading}\r\n-            >\r\n-              {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n-            </button>\r\n-            <button \r\n-              type=\"button\"\r\n-              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-              onClick={() => setIsDeactivateModalOpen(true)}\r\n-            >\r\n-              DEACTIVATE ACCOUNT\r\n-            </button>\r\n-          </div>\r\n         </form>\r\n       </div>\r\n \r\n-      {/* Thêm Modal */}\r\n-      <DeactivateModal \r\n-        isOpen={isDeactivateModalOpen}\r\n-        onClose={() => setIsDeactivateModalOpen(false)}\r\n-      />\r\n-\r\n       {/* Thêm Modal thông báo lỗi mật khẩu */}\r\n       <PasswordErrorModal \r\n         isOpen={isPasswordErrorModalOpen}\r\n         onClose={() => setIsPasswordErrorModalOpen(false)}\r\n         error={passwordError}\r\n       />\r\n-\r\n-      {/* Thêm Modal thông báo lỗi thông tin */}\r\n-      <InfoErrorModal \r\n-        isOpen={isInfoErrorModalOpen}\r\n-        onClose={() => setIsInfoErrorModalOpen(false)}\r\n-        error={infoError}\r\n-      />\r\n     </div>\r\n   );\r\n-} \n\\ No newline at end of file\n+}   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747246390920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,219 @@\n 'use client';\r\n \r\n-import { useState } from 'react';\r\n-import { useSession } from 'next-auth/react';\r\n+import { useState, useEffect, useCallback } from 'react';\r\n+import { motion } from 'framer-motion';\r\n+import { useSession, signOut } from 'next-auth/react';\r\n import toast from 'react-hot-toast';\r\n+import { useRouter } from 'next/navigation';\r\n \r\n+interface DeactivateModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+}\r\n+\r\n interface PasswordErrorModalProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n   error: string;\r\n }\r\n \r\n+interface InfoErrorModalProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  error: string;\r\n+}\r\n+\r\n+interface FormData {\r\n+  firstName: string;\r\n+  lastName: string;\r\n+  country: string;\r\n+  birthDay: string;\r\n+  birthMonth: string;\r\n+  birthYear: string;\r\n+  email: string;\r\n+}\r\n+\r\n+// Thêm component Modal\r\n+const DeactivateModal: React.FC<DeactivateModalProps> = ({ isOpen, onClose }) => {\r\n+  const [reason, setReason] = useState('');\r\n+  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n+  const [isDeleting, setIsDeleting] = useState(false);\r\n+  const router = useRouter();\r\n+\r\n+  if (!isOpen) return null;\r\n+\r\n+  // Điều chỉnh thứ tự các lý do\r\n+  const reasons = [\r\n+    { id: 'select', label: 'Select' },\r\n+    { id: 'security', label: 'Security concerns' },\r\n+    { id: 'personal', label: 'Personal reasons' },\r\n+    { id: 'service', label: 'Service issue' },\r\n+    { id: 'unsatisfied', label: 'Unsatisfied with a product' },\r\n+    { id: 'no_content', label: 'No useful contents' },\r\n+    { id: 'not_interested', label: 'Not interested in AISH anymore' },\r\n+    { id: 'billing', label: 'Billing issue' },\r\n+    { id: 'other', label: 'Other' },\r\n+  ];\r\n+\r\n+  const handleDeactivate = async () => {\r\n+    if (!reason || reason === 'select') {\r\n+      toast.error('Vui lòng chọn lý do hủy tài khoản');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsDeleting(true);\r\n+      const response = await fetch('/api/user/deactivate', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({ reason }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error('Không thể hủy tài khoản');\r\n+      }\r\n+\r\n+      toast.success('Tài khoản đã được hủy thành công');\r\n+      // Đăng xuất và chuyển về trang chủ\r\n+      await signOut({ redirect: false });\r\n+      router.push('/');\r\n+    } catch (error) {\r\n+      console.error('Error deactivating account:', error);\r\n+      toast.error('Có lỗi xảy ra khi hủy tài khoản');\r\n+    } finally {\r\n+      setIsDeleting(false);\r\n+      onClose();\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div \r\n+        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n+        onClick={() => {\r\n+          onClose();\r\n+          setIsDropdownOpen(false);\r\n+        }}\r\n+      />\r\n+\r\n+      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n+        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n+          {/* Close Button */}\r\n+          <button \r\n+            onClick={onClose}\r\n+            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n+          >\r\n+            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n+              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n+            </svg>\r\n+          </button>\r\n+\r\n+          {/* Modal Content */}\r\n+          <div className=\"text-center mb-12\">\r\n+            <h2 className=\"text-2xl font-normal text-black\">DEACTIVATE ACCOUNT</h2>\r\n+            <div className=\"flex items-center justify-center my-6\">\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+              <div className=\"mx-4\">\r\n+                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n+                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n+                </svg>\r\n+              </div>\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"space-y-8\">\r\n+            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n+              We're sorry that you want to deactivate your AISH account. By deactivating your AISH account, you will not be able to access your data. If you would like us to delete all of your related information please contact{' '}\r\n+              <span className=\"text-black\">\"privacy@aish.com\"</span>.\r\n+            </p>\r\n+\r\n+            {/* Box chứa phần chọn lý do */}\r\n+            <div className=\"bg-[#f5f5f5] p-8\">\r\n+              <div className=\"space-y-4\">\r\n+                <p className=\"text-xs text-black\">\r\n+                  To help us better serve our clients, please share your reason for deactivating your account:\r\n+                </p>\r\n+                {/* Select dropdown */}\r\n+                <div className=\"relative\">\r\n+                  <button\r\n+                    className=\"w-full p-3 text-left text-xs text-black bg-white border border-gray-200 flex justify-between items-center\"\r\n+                    onClick={(e) => {\r\n+                      e.stopPropagation();\r\n+                      setIsDropdownOpen(!isDropdownOpen);\r\n+                    }}\r\n+                  >\r\n+                    <span>{reason && reason !== 'select' ? reasons.find(r => r.id === reason)?.label : 'Select'}</span>\r\n+                    <svg \r\n+                      className=\"w-3 h-3\"\r\n+                      viewBox=\"0 0 24 24\"\r\n+                    >\r\n+                      <path d=\"M7 10l5 5 5-5z\" fill=\"currentColor\"/>\r\n+                    </svg>\r\n+                  </button>\r\n+\r\n+                  {/* Dropdown menu - bỏ hết animation */}\r\n+                  {isDropdownOpen && (\r\n+                    <div \r\n+                      className=\"absolute top-full left-0 right-0 bg-white border border-gray-200\"\r\n+                      style={{\r\n+                        maxHeight: '144px',\r\n+                        overflowY: 'auto',\r\n+                        scrollbarWidth: 'none',\r\n+                        msOverflowStyle: 'none'\r\n+                      }}\r\n+                    >\r\n+                      <style jsx>{`\r\n+                        div::-webkit-scrollbar {\r\n+                          display: none;\r\n+                        }\r\n+                      `}</style>\r\n+                      {reasons.map((item) => (\r\n+                        <button\r\n+                          key={item.id}\r\n+                          className={`\r\n+                            w-full text-left p-3 text-xs text-black \r\n+                            ${item.id === 'select' ? 'text-gray-400' : ''}\r\n+                            h-9 hover:bg-[#f5f5f5]\r\n+                            transition-none\r\n+                          `}\r\n+                          style={{ transform: 'none' }}\r\n+                          onClick={(e) => {\r\n+                            e.stopPropagation();\r\n+                            if (item.id !== 'select') {\r\n+                              setReason(item.id);\r\n+                              setIsDropdownOpen(false);\r\n+                            }\r\n+                          }}\r\n+                        >\r\n+                          {item.label}\r\n+                        </button>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div className=\"text-center\">\r\n+              <button \r\n+                className={`bg-black text-white text-xs uppercase px-8 py-3 ${(!reason || reason === 'select' || isDeleting) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                onClick={handleDeactivate}\r\n+                disabled={!reason || reason === 'select' || isDeleting}\r\n+              >\r\n+                {isDeleting ? 'DEACTIVATING...' : 'DEACTIVATE MY ACCOUNT'}\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n // Thêm component Modal thông báo lỗi mật khẩu\r\n const PasswordErrorModal: React.FC<PasswordErrorModalProps> = ({ isOpen, onClose, error }) => {\r\n   if (!isOpen) return null;\r\n \r\n@@ -66,17 +269,241 @@\n     </>\r\n   );\r\n };\r\n \r\n+// Thêm component Modal thông báo lỗi thông tin\r\n+const InfoErrorModal: React.FC<InfoErrorModalProps> = ({ isOpen, onClose, error }) => {\r\n+  if (!isOpen) return null;\r\n+\r\n+  return (\r\n+    <>\r\n+      <div \r\n+        className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-[2px]\"\r\n+        onClick={onClose}\r\n+      />\r\n+\r\n+      <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\r\n+        <div className=\"bg-white p-12 max-w-2xl w-full mx-4 relative pointer-events-auto\">\r\n+          {/* Close Button */}\r\n+          <button \r\n+            onClick={onClose}\r\n+            className=\"absolute top-8 right-8 text-[#0066CC]\"\r\n+          >\r\n+            <svg className=\"w-4 h-4\" viewBox=\"0 0 14 14\">\r\n+              <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"currentColor\"/>\r\n+            </svg>\r\n+          </button>\r\n+\r\n+          {/* Modal Content */}\r\n+          <div className=\"text-center mb-12\">\r\n+            <h2 className=\"text-2xl font-normal text-black\">THÔNG BÁO</h2>\r\n+            <div className=\"flex items-center justify-center my-6\">\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+              <div className=\"mx-4\">\r\n+                <svg className=\"w-2 h-2 text-gray-300\" viewBox=\"0 0 8 8\">\r\n+                  <rect width=\"8\" height=\"8\" transform=\"rotate(45 4 4)\" fill=\"currentColor\"/>\r\n+                </svg>\r\n+              </div>\r\n+              <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"space-y-8\">\r\n+            <p className=\"text-xs text-black text-center leading-relaxed\">\r\n+              {error}\r\n+            </p>\r\n+\r\n+            <div className=\"text-center\">\r\n+              <button \r\n+                className=\"bg-black text-white text-xs uppercase px-8 py-3\"\r\n+                onClick={onClose}\r\n+              >\r\n+                ĐÓNG\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n export default function SettingsPage() {\r\n   const { data: session } = useSession();\r\n+  const [initialData, setInitialData] = useState<FormData>({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [formData, setFormData] = useState<FormData>({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    country: 'Việt Nam',\r\n+    birthDay: '',\r\n+    birthMonth: '',\r\n+    birthYear: '',\r\n+    email: '',\r\n+  });\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [isChecked, setIsChecked] = useState(false);\r\n+  const [isDeactivateModalOpen, setIsDeactivateModalOpen] = useState(false);\r\n   const [currentPassword, setCurrentPassword] = useState('');\r\n   const [newPassword, setNewPassword] = useState('');\r\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n   const [isPasswordErrorModalOpen, setIsPasswordErrorModalOpen] = useState(false);\r\n   const [passwordError, setPasswordError] = useState('');\r\n+  const [isInfoErrorModalOpen, setIsInfoErrorModalOpen] = useState(false);\r\n+  const [infoError, setInfoError] = useState('');\r\n \r\n+  // Load user data when component mounts\r\n+  useEffect(() => {\r\n+    const fetchUserData = async () => {\r\n+      try {\r\n+        const response = await fetch('/api/user/profile');\r\n+        if (!response.ok) {\r\n+          const error = await response.json();\r\n+          throw new Error(error.message || 'Failed to fetch user data');\r\n+        }\r\n+        const data = await response.json();\r\n+        \r\n+        // Format the data to match our form structure\r\n+        const formattedData = {\r\n+          firstName: data.firstName || '',\r\n+          lastName: data.lastName || '',\r\n+          country: 'Việt Nam',\r\n+          birthDay: data.birthDay || '',\r\n+          birthMonth: data.birthMonth || '',\r\n+          birthYear: data.birthYear || '',\r\n+          email: data.email || '',\r\n+        };\r\n+        \r\n+        // Set both initial and form data\r\n+        setInitialData(formattedData);\r\n+        setFormData(formattedData);\r\n+      } catch (error) {\r\n+        console.error('Error fetching user data:', error);\r\n+        setInfoError('Không thể tải dữ liệu người dùng. Vui lòng thử lại sau.');\r\n+        setIsInfoErrorModalOpen(true);\r\n+      }\r\n+    };\r\n+\r\n+    if (session?.user) {\r\n+      fetchUserData();\r\n+    }\r\n+  }, [session]);\r\n+\r\n+  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [field]: value || '' // Đảm bảo giá trị không bao giờ là undefined\r\n+    }));\r\n+  }, []);\r\n+\r\n+  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n+    e.preventDefault();\r\n+  }, []);\r\n+\r\n+  const handleSave = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n+    e.preventDefault();\r\n+    if (!isChecked) {\r\n+      setInfoError('Vui lòng chấp nhận cài đặt bảo mật trước khi lưu thay đổi.');\r\n+      setIsInfoErrorModalOpen(true);\r\n+      return;\r\n+    }\r\n+\r\n+    // Kiểm tra email hợp lệ\r\n+    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n+    if (!emailRegex.test(formData.email)) {\r\n+      setInfoError('Email không hợp lệ');\r\n+      setIsInfoErrorModalOpen(true);\r\n+      return;\r\n+    }\r\n+\r\n+    // Kiểm tra xem có thay đổi gì không\r\n+    const hasChanges = \r\n+      formData.firstName !== initialData.firstName ||\r\n+      formData.lastName !== initialData.lastName ||\r\n+      formData.birthDay !== initialData.birthDay ||\r\n+      formData.birthMonth !== initialData.birthMonth ||\r\n+      formData.birthYear !== initialData.birthYear ||\r\n+      formData.email !== initialData.email;\r\n+\r\n+    if (!hasChanges) {\r\n+      setInfoError('Không có thay đổi nào để lưu');\r\n+      setIsInfoErrorModalOpen(true);\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      setIsLoading(true);\r\n+      \r\n+      const response = await fetch('/api/user/update', {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          firstName: formData.firstName,\r\n+          lastName: formData.lastName,\r\n+          birthDay: formData.birthDay,\r\n+          birthMonth: formData.birthMonth,\r\n+          birthYear: formData.birthYear,\r\n+          email: formData.email,\r\n+        }),\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        const error = await response.json();\r\n+        throw new Error(error.message || 'Không thể cập nhật thông tin người dùng');\r\n+      }\r\n+\r\n+      // Sau khi lưu thành công, gọi lại API để lấy dữ liệu mới nhất\r\n+      const fetchUserData = async () => {\r\n+        try {\r\n+          const response = await fetch('/api/user/profile');\r\n+          if (!response.ok) throw new Error('Không thể tải lại dữ liệu');\r\n+          const data = await response.json();\r\n+          setInitialData(data);\r\n+          setFormData(data);\r\n+        } catch (err) {\r\n+          setInfoError('Không thể tải lại dữ liệu mới');\r\n+          setIsInfoErrorModalOpen(true);\r\n+        }\r\n+      };\r\n+      await fetchUserData();\r\n+      toast.success('Lưu thay đổi thành công!');\r\n+    } catch (error) {\r\n+      console.error('Error saving changes:', error);\r\n+      setInfoError(error instanceof Error ? error.message : 'Không thể lưu thay đổi. Vui lòng thử lại.');\r\n+      setIsInfoErrorModalOpen(true);\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const validateDay = (value: string) => {\r\n+    const day = parseInt(value);\r\n+    if (isNaN(day) || day < 1 || day > 31) return formData.birthDay;\r\n+    return value;\r\n+  };\r\n+\r\n+  const validateMonth = (value: string) => {\r\n+    const month = parseInt(value);\r\n+    if (isNaN(month) || month < 1 || month > 12) return formData.birthMonth;\r\n+    return value;\r\n+  };\r\n+\r\n+  const validateYear = (value: string) => {\r\n+    const year = parseInt(value);\r\n+    if (isNaN(year) || year < 0 || year > 9999) return formData.birthYear;\r\n+    return value;\r\n+  };\r\n+\r\n   const handlePasswordChange = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n     e.preventDefault();\r\n     if (!currentPassword || !newPassword || !confirmPassword) {\r\n       setPasswordError('Vui lòng nhập đầy đủ thông tin đổi mật khẩu');\r\n@@ -146,14 +573,116 @@\n             <div className=\"h-[1px] bg-black mt-2\"></div>\r\n           </div>\r\n         </div>\r\n \r\n-        <form className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n-          {/* Password Change Section */}\r\n+        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n+          {/* Your Information Section */}\r\n           <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n+            <div className=\"flex-1 space-y-12\">\r\n+              <div className=\"grid grid-cols-2 gap-8\">\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.firstName || ''}\r\n+                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                </div>\r\n+                <div>\r\n+                  <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Last Name</label>\r\n+                  <input \r\n+                    type=\"text\"\r\n+                    className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                    value={formData.lastName || ''}\r\n+                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n+                    onBlur={(e) => e.stopPropagation()}\r\n+                  />\r\n+                </div>\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Country/Region</label>\r\n+                <input \r\n+                  type=\"text\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.country || ''}\r\n+                  disabled\r\n+                />\r\n+              </div>\r\n+\r\n+              <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n+                <div className=\"grid grid-cols-3 gap-4\">\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"DD\"\r\n+                      min=\"1\"\r\n+                      max=\"31\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthDay || ''}\r\n+                      onChange={(e) => handleInputChange('birthDay', validateDay(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Day (1-31)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"MM\"\r\n+                      min=\"1\"\r\n+                      max=\"12\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthMonth || ''}\r\n+                      onChange={(e) => handleInputChange('birthMonth', validateMonth(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Month (1-12)</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <input \r\n+                      type=\"number\"\r\n+                      placeholder=\"YYYY\"\r\n+                      min=\"0\"\r\n+                      max=\"9999\"\r\n+                      className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                      value={formData.birthYear || ''}\r\n+                      onChange={(e) => handleInputChange('birthYear', validateYear(e.target.value))}\r\n+                      onBlur={(e) => e.stopPropagation()}\r\n+                    />\r\n+                    <div className=\"text-[10px] text-gray-500 mt-1\">Year (0-9999)</div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Account Details Section */}\r\n+          <div className=\"flex\">\r\n             <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n             <div className=\"flex-1 space-y-12\">\r\n               <div>\r\n+                <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n+                <input \r\n+                  type=\"email\"\r\n+                  className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n+                  value={formData.email}\r\n+                  onChange={(e) => {\r\n+                    // Nếu người dùng cố xóa email, giữ nguyên giá trị cũ\r\n+                    if (!e.target.value) {\r\n+                      return;\r\n+                    }\r\n+                    handleInputChange('email', e.target.value);\r\n+                  }}\r\n+                  onBlur={(e) => e.stopPropagation()}\r\n+                />\r\n+              </div>\r\n+\r\n+              {/* Password Change Section */}\r\n+              <div>\r\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Password</label>\r\n                 <div className=\"space-y-4\">\r\n                   <div className=\"relative\">\r\n                     <input \r\n@@ -196,16 +725,73 @@\n                 </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n+\r\n+          {/* Privacy Settings Section */}\r\n+          <div className=\"flex\">\r\n+            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n+            <div className=\"flex-1 space-y-6\">\r\n+              <div className=\"flex items-start gap-4\">\r\n+                <input \r\n+                  type=\"checkbox\"\r\n+                  className=\"mt-1\"\r\n+                  checked={isChecked}\r\n+                  onChange={(e) => {\r\n+                    e.stopPropagation();\r\n+                    setIsChecked(e.target.checked);\r\n+                  }}\r\n+                />\r\n+                <p className=\"text-xs text-black\">\r\n+                  I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n+                </p>\r\n+              </div>\r\n+              <p className=\"text-xs text-black\">\r\n+                Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n+                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+              </p>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Buttons */}\r\n+          <div className=\"flex items-center justify-between\">\r\n+            <button \r\n+              type=\"button\"\r\n+              className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+              onClick={handleSave}\r\n+              disabled={!isChecked || isLoading}\r\n+            >\r\n+              {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+            </button>\r\n+            <button \r\n+              type=\"button\"\r\n+              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+              onClick={() => setIsDeactivateModalOpen(true)}\r\n+            >\r\n+              DEACTIVATE ACCOUNT\r\n+            </button>\r\n+          </div>\r\n         </form>\r\n       </div>\r\n \r\n+      {/* Thêm Modal */}\r\n+      <DeactivateModal \r\n+        isOpen={isDeactivateModalOpen}\r\n+        onClose={() => setIsDeactivateModalOpen(false)}\r\n+      />\r\n+\r\n       {/* Thêm Modal thông báo lỗi mật khẩu */}\r\n       <PasswordErrorModal \r\n         isOpen={isPasswordErrorModalOpen}\r\n         onClose={() => setIsPasswordErrorModalOpen(false)}\r\n         error={passwordError}\r\n       />\r\n+\r\n+      {/* Thêm Modal thông báo lỗi thông tin */}\r\n+      <InfoErrorModal \r\n+        isOpen={isInfoErrorModalOpen}\r\n+        onClose={() => setIsInfoErrorModalOpen(false)}\r\n+        error={infoError}\r\n+      />\r\n     </div>\r\n   );\r\n }   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747246955419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -668,16 +668,9 @@\n                 <input \r\n                   type=\"email\"\r\n                   className=\"w-full p-2 bg-gray-100 border border-gray-200 text-xs text-black\"\r\n                   value={formData.email}\r\n-                  onChange={(e) => {\r\n-                    // Nếu người dùng cố xóa email, giữ nguyên giá trị cũ\r\n-                    if (!e.target.value) {\r\n-                      return;\r\n-                    }\r\n-                    handleInputChange('email', e.target.value);\r\n-                  }}\r\n-                  onBlur={(e) => e.stopPropagation()}\r\n+                  disabled\r\n                 />\r\n               </div>\r\n \r\n               {/* Password Change Section */}\r\n"
                },
                {
                    "date": 1747278173198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -786,5 +786,10 @@\n         error={infoError}\r\n       />\r\n     </div>\r\n   );\r\n-}   \n\\ No newline at end of file\n+}\r\n+\r\n+export const metadata = {\r\n+  title: 'Account Setting | AISH',\r\n+  description: 'Quản lý tài khoản AISH của bạn. Cập nhật thông tin cá nhân, đổi mật khẩu và tùy chỉnh cài đặt bảo mật.',\r\n+};   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747279548263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-'use client';\r\n+\"use client\";\r\n \r\n import { useState, useEffect, useCallback } from 'react';\r\n import { motion } from 'framer-motion';\r\n import { useSession, signOut } from 'next-auth/react';\r\n@@ -786,10 +786,5 @@\n         error={infoError}\r\n       />\r\n     </div>\r\n   );\r\n-}\r\n-\r\n-export const metadata = {\r\n-  title: 'Account Setting | AISH',\r\n-  description: 'Quản lý tài khoản AISH của bạn. Cập nhật thông tin cá nhân, đổi mật khẩu và tùy chỉnh cài đặt bảo mật.',\r\n-};   \n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747370261553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -739,9 +739,9 @@\n                 </p>\r\n               </div>\r\n               <p className=\"text-xs text-black\">\r\n                 Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+                <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">aish.aish.vn@gmail.com</a>.\r\n               </p>\r\n             </div>\r\n           </div>\r\n \r\n"
                },
                {
                    "date": 1747370290515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -739,9 +739,9 @@\n                 </p>\r\n               </div>\r\n               <p className=\"text-xs text-black\">\r\n                 Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">aish.aish.vn@gmail.com</a>.\r\n+                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n               </p>\r\n             </div>\r\n           </div>\r\n \r\n"
                },
                {
                    "date": 1747370337193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -739,9 +739,9 @@\n                 </p>\r\n               </div>\r\n               <p className=\"text-xs text-black\">\r\n                 Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:privacy@aish.com\" className=\"underline\">privacy@aish.com</a>.\r\n+                <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">privacy@aish.com</a>.\r\n               </p>\r\n             </div>\r\n           </div>\r\n \r\n"
                },
                {
                    "date": 1747370480978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -739,9 +739,9 @@\n                 </p>\r\n               </div>\r\n               <p className=\"text-xs text-black\">\r\n                 Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n-                <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">privacy@aish.com</a>.\r\n+                <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">aish.aish.vn@gmail.com</a>.\r\n               </p>\r\n             </div>\r\n           </div>\r\n \r\n"
                },
                {
                    "date": 1747406068617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,8 +328,9 @@\n };\r\n \r\n export default function SettingsPage() {\r\n   const { data: session } = useSession();\r\n+  const [isMobile, setIsMobile] = useState(false);\r\n   const [initialData, setInitialData] = useState<FormData>({\r\n     firstName: '',\r\n     lastName: '',\r\n     country: 'Việt Nam',\r\n@@ -358,8 +359,19 @@\n   const [passwordError, setPasswordError] = useState('');\r\n   const [isInfoErrorModalOpen, setIsInfoErrorModalOpen] = useState(false);\r\n   const [infoError, setInfoError] = useState('');\r\n \r\n+  useEffect(() => {\r\n+    const checkMobile = () => {\r\n+      setIsMobile(window.innerWidth <= 768);\r\n+    };\r\n+    \r\n+    checkMobile();\r\n+    window.addEventListener('resize', checkMobile);\r\n+    \r\n+    return () => window.removeEventListener('resize', checkMobile);\r\n+  }, []);\r\n+\r\n   // Load user data when component mounts\r\n   useEffect(() => {\r\n     const fetchUserData = async () => {\r\n       try {\r\n@@ -566,21 +578,21 @@\n \r\n   return (\r\n     <div className=\"min-h-screen bg-white\">\r\n       <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n-        <div className=\"text-center py-16\">\r\n+        <div className=\"text-center py-8 md:py-16\">\r\n           <div className=\"inline-block\">\r\n-            <h1 className=\"text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n+            <h1 className=\"text-xl md:text-2xl font-bold text-black\">ACCOUNT SETTINGS</h1>\r\n             <div className=\"h-[1px] bg-black mt-2\"></div>\r\n           </div>\r\n         </div>\r\n \r\n-        <form onSubmit={handleSubmit} className=\"space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n+        <form onSubmit={handleSubmit} className=\"space-y-12 md:space-y-24\" onClick={(e) => e.stopPropagation()}>\r\n           {/* Your Information Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">YOUR INFORMATION</h2>\r\n-            <div className=\"flex-1 space-y-12\">\r\n-              <div className=\"grid grid-cols-2 gap-8\">\r\n+          <div className=\"flex flex-col md:flex-row\">\r\n+            <h2 className=\"text-sm font-bold text-black w-full md:w-[200px] mb-4 md:mb-0\">YOUR INFORMATION</h2>\r\n+            <div className=\"flex-1 space-y-8 md:space-y-12\">\r\n+              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-8\">\r\n                 <div>\r\n                   <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">First Name</label>\r\n                   <input \r\n                     type=\"text\"\r\n@@ -613,9 +625,9 @@\n               </div>\r\n \r\n               <div>\r\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Birthdate</label>\r\n-                <div className=\"grid grid-cols-3 gap-4\">\r\n+                <div className=\"grid grid-cols-3 gap-2 md:gap-4\">\r\n                   <div>\r\n                     <input \r\n                       type=\"number\"\r\n                       placeholder=\"DD\"\r\n@@ -659,11 +671,11 @@\n             </div>\r\n           </div>\r\n \r\n           {/* Account Details Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">ACCOUNT DETAILS</h2>\r\n-            <div className=\"flex-1 space-y-12\">\r\n+          <div className=\"flex flex-col md:flex-row\">\r\n+            <h2 className=\"text-sm font-bold text-black w-full md:w-[200px] mb-4 md:mb-0\">ACCOUNT DETAILS</h2>\r\n+            <div className=\"flex-1 space-y-8 md:space-y-12\">\r\n               <div>\r\n                 <label className=\"block text-[10px] uppercase tracking-wider text-black mb-2\">Email</label>\r\n                 <input \r\n                   type=\"email\"\r\n@@ -720,11 +732,11 @@\n             </div>\r\n           </div>\r\n \r\n           {/* Privacy Settings Section */}\r\n-          <div className=\"flex\">\r\n-            <h2 className=\"text-sm font-bold text-black w-[200px]\">PRIVACY SETTINGS</h2>\r\n-            <div className=\"flex-1 space-y-6\">\r\n+          <div className=\"flex flex-col md:flex-row\">\r\n+            <h2 className=\"text-sm font-bold text-black w-full md:w-[200px] mb-4 md:mb-0\">PRIVACY SETTINGS</h2>\r\n+            <div className=\"flex-1 space-y-4 md:space-y-6\">\r\n               <div className=\"flex items-start gap-4\">\r\n                 <input \r\n                   type=\"checkbox\"\r\n                   className=\"mt-1\"\r\n@@ -745,42 +757,42 @@\n             </div>\r\n           </div>\r\n \r\n           {/* Buttons */}\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <button \r\n-              type=\"button\"\r\n-              className={`px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n-              onClick={handleSave}\r\n-              disabled={!isChecked || isLoading}\r\n-            >\r\n-              {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n-            </button>\r\n-            <button \r\n-              type=\"button\"\r\n-              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-              onClick={() => setIsDeactivateModalOpen(true)}\r\n-            >\r\n-              DEACTIVATE ACCOUNT\r\n-            </button>\r\n+          <div className=\"flex flex-col md:flex-row items-center justify-between gap-4 md:gap-8\">\r\n+            <div className=\"flex flex-col md:flex-row items-center gap-4 md:gap-8 w-full md:w-auto\">\r\n+              <button \r\n+                type=\"button\"\r\n+                className={`w-full md:w-auto px-8 py-3 bg-black text-white text-xs uppercase ${(!isChecked || isLoading) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                onClick={handleSave}\r\n+                disabled={!isChecked || isLoading}\r\n+              >\r\n+                {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n+              </button>\r\n+              <button \r\n+                type=\"button\"\r\n+                className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n+                onClick={() => setIsDeactivateModalOpen(true)}\r\n+              >\r\n+                DEACTIVATE ACCOUNT\r\n+              </button>\r\n+            </div>\r\n           </div>\r\n         </form>\r\n       </div>\r\n \r\n-      {/* Thêm Modal */}\r\n+      {/* Modals */}\r\n       <DeactivateModal \r\n         isOpen={isDeactivateModalOpen}\r\n         onClose={() => setIsDeactivateModalOpen(false)}\r\n       />\r\n \r\n-      {/* Thêm Modal thông báo lỗi mật khẩu */}\r\n       <PasswordErrorModal \r\n         isOpen={isPasswordErrorModalOpen}\r\n         onClose={() => setIsPasswordErrorModalOpen(false)}\r\n         error={passwordError}\r\n       />\r\n \r\n-      {/* Thêm Modal thông báo lỗi thông tin */}\r\n       <InfoErrorModal \r\n         isOpen={isInfoErrorModalOpen}\r\n         onClose={() => setIsInfoErrorModalOpen(false)}\r\n         error={infoError}\r\n"
                },
                {
                    "date": 1747406160421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -745,13 +745,13 @@\n                     e.stopPropagation();\r\n                     setIsChecked(e.target.checked);\r\n                   }}\r\n                 />\r\n-                <p className=\"text-xs text-black\">\r\n+                <p className=\"text-[10px] md:text-xs text-black\">\r\n                   I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </p>\r\n               </div>\r\n-              <p className=\"text-xs text-black\">\r\n+              <p className=\"text-[10px] md:text-xs text-black\">\r\n                 Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n                 <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">aish.aish.vn@gmail.com</a>.\r\n               </p>\r\n             </div>\r\n"
                },
                {
                    "date": 1747406200857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -745,13 +745,13 @@\n                     e.stopPropagation();\r\n                     setIsChecked(e.target.checked);\r\n                   }}\r\n                 />\r\n-                <p className=\"text-[10px] md:text-xs text-black\">\r\n+                <p className=\"text-[9px] md:text-[11px] text-black\">\r\n                   I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </p>\r\n               </div>\r\n-              <p className=\"text-[10px] md:text-xs text-black\">\r\n+              <p className=\"text-[9px] md:text-[11px] text-black\">\r\n                 Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n                 <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">aish.aish.vn@gmail.com</a>.\r\n               </p>\r\n             </div>\r\n"
                },
                {
                    "date": 1747406327323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -745,13 +745,13 @@\n                     e.stopPropagation();\r\n                     setIsChecked(e.target.checked);\r\n                   }}\r\n                 />\r\n-                <p className=\"text-[9px] md:text-[11px] text-black\">\r\n+                <p className=\"text-[10px] md:text-xs text-black\">\r\n                   I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </p>\r\n               </div>\r\n-              <p className=\"text-[9px] md:text-[11px] text-black\">\r\n+              <p className=\"text-[10px] md:text-xs text-black\">\r\n                 Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n                 <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">aish.aish.vn@gmail.com</a>.\r\n               </p>\r\n             </div>\r\n"
                },
                {
                    "date": 1747406396673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -745,13 +745,13 @@\n                     e.stopPropagation();\r\n                     setIsChecked(e.target.checked);\r\n                   }}\r\n                 />\r\n-                <p className=\"text-[10px] md:text-xs text-black\">\r\n+                <p className=\"text-[10px] md:text-[11px] text-black\">\r\n                   I would like to receive updates (including by email, SMS, MMS, social media, phone, physical letter) about AISH new activities, exclusive products, tailored services and to have a personalised client experience based on my interests.\r\n                 </p>\r\n               </div>\r\n-              <p className=\"text-[10px] md:text-xs text-black\">\r\n+              <p className=\"text-[10px] md:text-[11px] text-black\">\r\n                 Privacy laws may grant you certain rights such as the right to access, delete, modify and rectify your data, or to restrict or object to processing, as well as the right to data portability. You can also lodge a complaint with your competent regulator. You can withdraw your consent or delete your profile at any time. For further information regarding our privacy practices and your rights, please contact us at{' '}\r\n                 <a href=\"mailto:aish.aish.vn@gmail.com\" className=\"underline\">aish.aish.vn@gmail.com</a>.\r\n               </p>\r\n             </div>\r\n"
                },
                {
                    "date": 1747406449546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -767,16 +767,16 @@\n                 disabled={!isChecked || isLoading}\r\n               >\r\n                 {isLoading ? 'SAVING...' : 'SAVE CHANGES'}\r\n               </button>\r\n-              <button \r\n-                type=\"button\"\r\n-                className=\"text-xs text-black uppercase font-semibold underline underline-offset-4\"\r\n-                onClick={() => setIsDeactivateModalOpen(true)}\r\n-              >\r\n-                DEACTIVATE ACCOUNT\r\n-              </button>\r\n             </div>\r\n+            <button \r\n+              type=\"button\"\r\n+              className=\"text-xs text-black uppercase font-semibold underline underline-offset-4 w-full md:w-auto text-center\"\r\n+              onClick={() => setIsDeactivateModalOpen(true)}\r\n+            >\r\n+              DEACTIVATE ACCOUNT\r\n+            </button>\r\n           </div>\r\n         </form>\r\n       </div>\r\n \r\n"
                }
            ],
            "date": 1747121018596,
            "name": "Commit-0",
            "content": " "
        }
    ]
}
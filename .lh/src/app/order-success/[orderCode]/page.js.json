{
    "sourceFile": "src/app/order-success/[orderCode]/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 34,
            "patches": [
                {
                    "date": 1746893163020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747059802701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,11 +69,15 @@\n                       fontWeight: \"600\",\r\n                       marginBottom: \"4px\",\r\n                       color: \"#000000\"\r\n                     }}>{item.name}</p>\r\n-                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Size: {item.variation}</p>\r\n+                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Size: {item.size}</p>\r\n                     <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Số lượng: {item.quantity}</p>\r\n-                    <p style={{ fontSize: \"0.8em\", color: \"#000000\" }}>Giá: {item.price}</p>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.8em\", \r\n+                      color: \"#000000\",\r\n+                      fontWeight: \"bold\" \r\n+                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n                   </div>\r\n                 </div>\r\n               ))}\r\n             </div>\r\n"
                },
                {
                    "date": 1747059854324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n                 marginBottom: \"8px\",\r\n                 fontSize: \"0.95em\",\r\n                 fontWeight: \"600\"\r\n               }}>\r\n-                Tổng tiền: {order.total}\r\n+                Tổng tiền: {order.total.toLocaleString('vi-VN')} VND\r\n               </p>\r\n             </div>\r\n \r\n             {order.paymentMethod === 'bank' && (\r\n"
                },
                {
                    "date": 1747063888203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,211 +1,78 @@\n \"use client\";\r\n-import { useEffect, useState, use } from 'react';\r\n+import { useEffect, useState } from 'react';\r\n import { useOrders } from '../../../context/OrderContext';\r\n import { useRouter } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n \r\n export default function OrderSuccessPage({ params }) {\r\n-  const unwrappedParams = use(params);\r\n-  const { orderCode } = unwrappedParams;\r\n-  const { orders } = useOrders();\r\n+  const { orderCode } = params;\r\n+  const { orders, loading } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n-    if (foundOrder) {\r\n-      setOrder(foundOrder);\r\n+    if (!loading && orders) {\r\n+      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n+      if (foundOrder) {\r\n+        setOrder(foundOrder);\r\n+      } else {\r\n+        // Nếu không tìm thấy đơn hàng, chuyển hướng về trang chủ sau 3 giây\r\n+        setTimeout(() => {\r\n+          router.push('/');\r\n+        }, 3000);\r\n+      }\r\n     }\r\n-  }, [orderCode, orders]);\r\n+  }, [orderCode, orders, loading, router]);\r\n \r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <p>Đang tải thông tin đơn hàng...</p>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <p>Đơn hàng không tồn tại</p>\r\n+        <div className=\"text-center\">\r\n+          <p className=\"text-lg mb-4\">Không tìm thấy thông tin đơn hàng</p>\r\n+          <p className=\"text-sm text-gray-600\">Bạn sẽ được chuyển hướng về trang chủ trong giây lát...</p>\r\n+        </div>\r\n       </div>\r\n     );\r\n   }\r\n \r\n   return (\r\n-    <>\r\n-      <div className=\"min-h-screen w-full flex\" style={{ paddingTop: \"48px\" }}>\r\n-        {/* Left side - Product Information (4/10) */}\r\n-        <div className=\"w-4/10 bg-white min-h-screen flex flex-col\">\r\n-          <div className=\"flex-grow p-6\">\r\n-            <h2 style={{ \r\n-              fontSize: \"0.85em\", \r\n-              color: \"#000000\", \r\n-              textTransform: \"uppercase\", \r\n-              letterSpacing: \"0.1em\", \r\n-              marginBottom: \"24px\",\r\n-              fontWeight: \"600\",\r\n-              paddingTop: \"12px\"\r\n-            }}>\r\n-              Sản phẩm đã đặt\r\n-            </h2>\r\n-            \r\n-            <div className=\"space-y-4 mb-8\">\r\n-              {order.items.map((item, index) => (\r\n-                <div key={index} style={{ \r\n-                  display: \"flex\", \r\n-                  alignItems: \"center\", \r\n-                  marginBottom: \"12px\",\r\n-                  padding: \"10px\",\r\n-                }}>\r\n-                  <img \r\n-                    src={item.image} \r\n-                    alt={item.name} \r\n-                    style={{\r\n-                      width: \"80px\",\r\n-                      height: \"80px\",\r\n-                      objectFit: \"cover\",\r\n-                      marginRight: \"12px\"\r\n-                    }}\r\n-                  />\r\n-                  <div style={{ textAlign: \"left\" }}>\r\n-                    <p style={{ \r\n-                      fontSize: \"0.85em\", \r\n-                      fontWeight: \"600\",\r\n-                      marginBottom: \"4px\",\r\n-                      color: \"#000000\"\r\n-                    }}>{item.name}</p>\r\n-                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Size: {item.size}</p>\r\n-                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Số lượng: {item.quantity}</p>\r\n-                    <p style={{ \r\n-                      fontSize: \"0.8em\", \r\n-                      color: \"#000000\",\r\n-                      fontWeight: \"bold\" \r\n-                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n-                  </div>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n+    <div className=\"min-h-screen bg-gray-50\">\r\n+      <div className=\"max-w-4xl mx-auto px-4 py-8\">\r\n+        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n+          <h1 className=\"text-2xl font-bold text-center mb-6\">Đặt hàng thành công!</h1>\r\n+          <div className=\"text-center mb-6\">\r\n+            <p className=\"text-lg mb-2\">Mã đơn hàng của bạn:</p>\r\n+            <p className=\"text-xl font-bold\">{order.orderCode}</p>\r\n           </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => setIsHelpOpen(true)}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"14px\",\r\n-                fontSize: \"0.8em\",\r\n-                color: \"#000000\",\r\n-                backgroundColor: \"#ffffff\",\r\n-                border: \"1px solid #000\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              MAY WE HELP YOU?\r\n-            </button>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Right side - Order Success Information (6/10) */}\r\n-        <div className=\"w-6/10 bg-white min-h-screen flex flex-col border-l border-gray-100\">\r\n-          <div className=\"flex-grow p-6\">\r\n-            <div className=\"text-center mb-12\" style={{ paddingTop: \"12px\" }}>\r\n-              <div style={{\r\n-                width: \"50px\",\r\n-                height: \"50px\",\r\n-                borderRadius: \"50%\",\r\n-                backgroundColor: \"#000000\",\r\n-                color: \"white\",\r\n-                display: \"flex\",\r\n-                alignItems: \"center\",\r\n-                justifyContent: \"center\",\r\n-                fontSize: \"24px\",\r\n-                margin: \"0 auto 16px\",\r\n-              }}>\r\n-                ✓\r\n+          <div className=\"border-t border-gray-200 pt-6\">\r\n+            <h2 className=\"text-lg font-semibold mb-4\">Thông tin đơn hàng</h2>\r\n+            <div className=\"space-y-4\">\r\n+              <div className=\"flex justify-between\">\r\n+                <span className=\"text-gray-600\">Trạng thái:</span>\r\n+                <span className=\"font-medium\">{order.status}</span>\r\n               </div>\r\n-              <h1 style={{ \r\n-                fontSize: \"1.1em\", \r\n-                color: \"#000000\", \r\n-                textTransform: \"uppercase\", \r\n-                letterSpacing: \"0.1em\", \r\n-                marginBottom: \"24px\",\r\n-                fontWeight: \"600\"\r\n-              }}>\r\n-                Đặt hàng thành công\r\n-              </h1>\r\n+              <div className=\"flex justify-between\">\r\n+                <span className=\"text-gray-600\">Tổng tiền:</span>\r\n+                <span className=\"font-medium\">{order.total.toLocaleString('vi-VN')} VND</span>\r\n+              </div>\r\n+              <div className=\"flex justify-between\">\r\n+                <span className=\"text-gray-600\">Phương thức thanh toán:</span>\r\n+                <span className=\"font-medium\">{order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'}</span>\r\n+              </div>\r\n             </div>\r\n-\r\n-            <div style={{ fontSize: \"0.85em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n-              <h2 style={{ \r\n-                fontSize: \"0.85em\", \r\n-                color: \"#000000\", \r\n-                textTransform: \"uppercase\", \r\n-                letterSpacing: \"0.1em\", \r\n-                marginBottom: \"16px\",\r\n-                fontWeight: \"600\"\r\n-              }}>\r\n-                Thông tin đơn hàng\r\n-              </h2>\r\n-              <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Họ tên: {order.fullName}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Email: {order.email}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {order.phone}</p>\r\n-              {order.additionalPhone && (\r\n-                <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n-              )}\r\n-              <p style={{ marginBottom: \"8px\" }}>\r\n-                Địa chỉ: {order.address}, {order.ward}, {order.district}, {order.province}\r\n-              </p>\r\n-              <p style={{ marginBottom: \"8px\" }}>\r\n-                Phương thức thanh toán: {\r\n-                  order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-                }\r\n-              </p>\r\n-              <p style={{ \r\n-                marginBottom: \"8px\",\r\n-                fontSize: \"0.95em\",\r\n-                fontWeight: \"600\"\r\n-              }}>\r\n-                Tổng tiền: {order.total.toLocaleString('vi-VN')} VND\r\n-              </p>\r\n-            </div>\r\n-\r\n-            {order.paymentMethod === 'bank' && (\r\n-              <div style={{\r\n-                padding: \"12px\",\r\n-                border: \"1px solid #e5e7eb\",\r\n-                marginBottom: \"20px\",\r\n-                borderRadius: \"6px\"\r\n-              }}>\r\n-                <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n-                  Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n-                </p>\r\n-              </div>\r\n-            )}\r\n           </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => router.push('/products')}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"14px\",\r\n-                fontSize: \"0.8em\",\r\n-                color: \"#ffffff\",\r\n-                backgroundColor: \"#000000\",\r\n-                border: \"none\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              Tiếp tục mua sắm\r\n-            </button>\r\n-          </div>\r\n         </div>\r\n       </div>\r\n-\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n-    </>\r\n+    </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747064857846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n \"use client\";\r\n-import { useEffect, useState } from 'react';\r\n+import { useEffect, useState, use } from 'react';\r\n import { useOrders } from '../../../context/OrderContext';\r\n import { useRouter } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n \r\n export default function OrderSuccessPage({ params }) {\r\n-  const { orderCode } = params;\r\n+  const unwrappedParams = use(params);\r\n+  const { orderCode } = unwrappedParams;\r\n   const { orders, loading } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n"
                },
                {
                    "date": 1747064879415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,20 +12,30 @@\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    if (!loading && orders) {\r\n-      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n-      if (foundOrder) {\r\n-        setOrder(foundOrder);\r\n-      } else {\r\n-        // Nếu không tìm thấy đơn hàng, chuyển hướng về trang chủ sau 3 giây\r\n+    const fetchOrder = async () => {\r\n+      try {\r\n+        // Fetch order directly from API instead of searching in orders list\r\n+        const response = await fetch(`/api/orders/${orderCode}`);\r\n+        if (!response.ok) {\r\n+          throw new Error('Order not found');\r\n+        }\r\n+        const data = await response.json();\r\n+        setOrder(data.order);\r\n+      } catch (error) {\r\n+        console.error('Error fetching order:', error);\r\n+        // Redirect to home page after 3 seconds if order not found\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       }\r\n+    };\r\n+\r\n+    if (orderCode) {\r\n+      fetchOrder();\r\n     }\r\n-  }, [orderCode, orders, loading, router]);\r\n+  }, [orderCode, router]);\r\n \r\n   if (loading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747064899218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,30 +12,20 @@\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    const fetchOrder = async () => {\r\n-      try {\r\n-        // Fetch order directly from API instead of searching in orders list\r\n-        const response = await fetch(`/api/orders/${orderCode}`);\r\n-        if (!response.ok) {\r\n-          throw new Error('Order not found');\r\n-        }\r\n-        const data = await response.json();\r\n-        setOrder(data.order);\r\n-      } catch (error) {\r\n-        console.error('Error fetching order:', error);\r\n-        // Redirect to home page after 3 seconds if order not found\r\n+    if (!loading && orders) {\r\n+      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n+      if (foundOrder) {\r\n+        setOrder(foundOrder);\r\n+      } else {\r\n+        // Nếu không tìm thấy đơn hàng, chuyển hướng về trang chủ sau 3 giây\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       }\r\n-    };\r\n-\r\n-    if (orderCode) {\r\n-      fetchOrder();\r\n     }\r\n-  }, [orderCode, router]);\r\n+  }, [orderCode, orders, loading, router]);\r\n \r\n   if (loading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747064954943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,20 +12,28 @@\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    if (!loading && orders) {\r\n-      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n-      if (foundOrder) {\r\n-        setOrder(foundOrder);\r\n-      } else {\r\n-        // Nếu không tìm thấy đơn hàng, chuyển hướng về trang chủ sau 3 giây\r\n+    const fetchOrder = async () => {\r\n+      try {\r\n+        const response = await fetch(`/api/orders/${orderCode}`);\r\n+        if (!response.ok) {\r\n+          throw new Error('Order not found');\r\n+        }\r\n+        const data = await response.json();\r\n+        setOrder(data.order);\r\n+      } catch (error) {\r\n+        console.error('Error fetching order:', error);\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       }\r\n+    };\r\n+\r\n+    if (orderCode) {\r\n+      fetchOrder();\r\n     }\r\n-  }, [orderCode, orders, loading, router]);\r\n+  }, [orderCode, router]);\r\n \r\n   if (loading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747065000074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,30 @@\n \"use client\";\r\n-import { useEffect, useState, use } from 'react';\r\n+import { useEffect, useState } from 'react';\r\n import { useOrders } from '../../../context/OrderContext';\r\n import { useRouter } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n \r\n export default function OrderSuccessPage({ params }) {\r\n-  const unwrappedParams = use(params);\r\n-  const { orderCode } = unwrappedParams;\r\n+  const { orderCode } = params;\r\n   const { orders, loading } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    const fetchOrder = async () => {\r\n-      try {\r\n-        const response = await fetch(`/api/orders/${orderCode}`);\r\n-        if (!response.ok) {\r\n-          throw new Error('Order not found');\r\n-        }\r\n-        const data = await response.json();\r\n-        setOrder(data.order);\r\n-      } catch (error) {\r\n-        console.error('Error fetching order:', error);\r\n+    if (!loading && orders) {\r\n+      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n+      if (foundOrder) {\r\n+        setOrder(foundOrder);\r\n+      } else {\r\n+        // Nếu không tìm thấy đơn hàng, chuyển hướng về trang chủ sau 3 giây\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       }\r\n-    };\r\n-\r\n-    if (orderCode) {\r\n-      fetchOrder();\r\n     }\r\n-  }, [orderCode, router]);\r\n+  }, [orderCode, orders, loading, router]);\r\n \r\n   if (loading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747065159466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n \"use client\";\r\n-import { useEffect, useState } from 'react';\r\n+import { useEffect, useState, use } from 'react';\r\n import { useOrders } from '../../../context/OrderContext';\r\n import { useRouter } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n \r\n export default function OrderSuccessPage({ params }) {\r\n-  const { orderCode } = params;\r\n+  const unwrappedParams = use(params);\r\n+  const { orderCode } = unwrappedParams;\r\n   const { orders, loading } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n"
                },
                {
                    "date": 1747065187026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,20 +12,28 @@\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    if (!loading && orders) {\r\n-      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n-      if (foundOrder) {\r\n-        setOrder(foundOrder);\r\n-      } else {\r\n-        // Nếu không tìm thấy đơn hàng, chuyển hướng về trang chủ sau 3 giây\r\n+    const fetchOrder = async () => {\r\n+      try {\r\n+        const response = await fetch(`/api/orders/${orderCode}`);\r\n+        if (!response.ok) {\r\n+          throw new Error('Order not found');\r\n+        }\r\n+        const data = await response.json();\r\n+        setOrder(data.order);\r\n+      } catch (error) {\r\n+        console.error('Error fetching order:', error);\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       }\r\n+    };\r\n+\r\n+    if (orderCode) {\r\n+      fetchOrder();\r\n     }\r\n-  }, [orderCode, orders, loading, router]);\r\n+  }, [orderCode, router]);\r\n \r\n   if (loading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747065216568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,82 +6,206 @@\n \r\n export default function OrderSuccessPage({ params }) {\r\n   const unwrappedParams = use(params);\r\n   const { orderCode } = unwrappedParams;\r\n-  const { orders, loading } = useOrders();\r\n+  const { orders } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    const fetchOrder = async () => {\r\n-      try {\r\n-        const response = await fetch(`/api/orders/${orderCode}`);\r\n-        if (!response.ok) {\r\n-          throw new Error('Order not found');\r\n-        }\r\n-        const data = await response.json();\r\n-        setOrder(data.order);\r\n-      } catch (error) {\r\n-        console.error('Error fetching order:', error);\r\n-        setTimeout(() => {\r\n-          router.push('/');\r\n-        }, 3000);\r\n-      }\r\n-    };\r\n-\r\n-    if (orderCode) {\r\n-      fetchOrder();\r\n+    const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n+    if (foundOrder) {\r\n+      setOrder(foundOrder);\r\n     }\r\n-  }, [orderCode, router]);\r\n+  }, [orderCode, orders]);\r\n \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <p>Đang tải thông tin đơn hàng...</p>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n   if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"text-center\">\r\n-          <p className=\"text-lg mb-4\">Không tìm thấy thông tin đơn hàng</p>\r\n-          <p className=\"text-sm text-gray-600\">Bạn sẽ được chuyển hướng về trang chủ trong giây lát...</p>\r\n-        </div>\r\n+        <p>Đơn hàng không tồn tại</p>\r\n       </div>\r\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-gray-50\">\r\n-      <div className=\"max-w-4xl mx-auto px-4 py-8\">\r\n-        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n-          <h1 className=\"text-2xl font-bold text-center mb-6\">Đặt hàng thành công!</h1>\r\n-          <div className=\"text-center mb-6\">\r\n-            <p className=\"text-lg mb-2\">Mã đơn hàng của bạn:</p>\r\n-            <p className=\"text-xl font-bold\">{order.orderCode}</p>\r\n+    <>\r\n+      <div className=\"min-h-screen w-full flex\" style={{ paddingTop: \"48px\" }}>\r\n+        {/* Left side - Product Information (4/10) */}\r\n+        <div className=\"w-4/10 bg-white min-h-screen flex flex-col\">\r\n+          <div className=\"flex-grow p-6\">\r\n+            <h2 style={{ \r\n+              fontSize: \"0.85em\", \r\n+              color: \"#000000\", \r\n+              textTransform: \"uppercase\", \r\n+              letterSpacing: \"0.1em\", \r\n+              marginBottom: \"24px\",\r\n+              fontWeight: \"600\",\r\n+              paddingTop: \"12px\"\r\n+            }}>\r\n+              Sản phẩm đã đặt\r\n+            </h2>\r\n+            \r\n+            <div className=\"space-y-4 mb-8\">\r\n+              {order.items.map((item, index) => (\r\n+                <div key={index} style={{ \r\n+                  display: \"flex\", \r\n+                  alignItems: \"center\", \r\n+                  marginBottom: \"12px\",\r\n+                  padding: \"10px\",\r\n+                }}>\r\n+                  <img \r\n+                    src={item.image} \r\n+                    alt={item.name} \r\n+                    style={{\r\n+                      width: \"80px\",\r\n+                      height: \"80px\",\r\n+                      objectFit: \"cover\",\r\n+                      marginRight: \"12px\"\r\n+                    }}\r\n+                  />\r\n+                  <div style={{ textAlign: \"left\" }}>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.85em\", \r\n+                      fontWeight: \"600\",\r\n+                      marginBottom: \"4px\",\r\n+                      color: \"#000000\"\r\n+                    }}>{item.name}</p>\r\n+                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Size: {item.size}</p>\r\n+                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Số lượng: {item.quantity}</p>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.8em\", \r\n+                      color: \"#000000\",\r\n+                      fontWeight: \"bold\" \r\n+                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n+                  </div>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n           </div>\r\n-          <div className=\"border-t border-gray-200 pt-6\">\r\n-            <h2 className=\"text-lg font-semibold mb-4\">Thông tin đơn hàng</h2>\r\n-            <div className=\"space-y-4\">\r\n-              <div className=\"flex justify-between\">\r\n-                <span className=\"text-gray-600\">Trạng thái:</span>\r\n-                <span className=\"font-medium\">{order.status}</span>\r\n+\r\n+          <div className=\"p-4 pb-12\">\r\n+            <button\r\n+              onClick={() => setIsHelpOpen(true)}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"14px\",\r\n+                fontSize: \"0.8em\",\r\n+                color: \"#000000\",\r\n+                backgroundColor: \"#ffffff\",\r\n+                border: \"1px solid #000\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              MAY WE HELP YOU?\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Right side - Order Success Information (6/10) */}\r\n+        <div className=\"w-6/10 bg-white min-h-screen flex flex-col border-l border-gray-100\">\r\n+          <div className=\"flex-grow p-6\">\r\n+            <div className=\"text-center mb-12\" style={{ paddingTop: \"12px\" }}>\r\n+              <div style={{\r\n+                width: \"50px\",\r\n+                height: \"50px\",\r\n+                borderRadius: \"50%\",\r\n+                backgroundColor: \"#000000\",\r\n+                color: \"white\",\r\n+                display: \"flex\",\r\n+                alignItems: \"center\",\r\n+                justifyContent: \"center\",\r\n+                fontSize: \"24px\",\r\n+                margin: \"0 auto 16px\",\r\n+              }}>\r\n+                ✓\r\n               </div>\r\n-              <div className=\"flex justify-between\">\r\n-                <span className=\"text-gray-600\">Tổng tiền:</span>\r\n-                <span className=\"font-medium\">{order.total.toLocaleString('vi-VN')} VND</span>\r\n+              <h1 style={{ \r\n+                fontSize: \"1.1em\", \r\n+                color: \"#000000\", \r\n+                textTransform: \"uppercase\", \r\n+                letterSpacing: \"0.1em\", \r\n+                marginBottom: \"24px\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Đặt hàng thành công\r\n+              </h1>\r\n+            </div>\r\n+\r\n+            <div style={{ fontSize: \"0.85em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n+              <h2 style={{ \r\n+                fontSize: \"0.85em\", \r\n+                color: \"#000000\", \r\n+                textTransform: \"uppercase\", \r\n+                letterSpacing: \"0.1em\", \r\n+                marginBottom: \"16px\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Thông tin đơn hàng\r\n+              </h2>\r\n+              <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+              <p style={{ marginBottom: \"8px\" }}>Họ tên: {order.fullName}</p>\r\n+              <p style={{ marginBottom: \"8px\" }}>Email: {order.email}</p>\r\n+              <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {order.phone}</p>\r\n+              {order.additionalPhone && (\r\n+                <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+              )}\r\n+              <p style={{ marginBottom: \"8px\" }}>\r\n+                Địa chỉ: {order.address}, {order.ward}, {order.district}, {order.province}\r\n+              </p>\r\n+              <p style={{ marginBottom: \"8px\" }}>\r\n+                Phương thức thanh toán: {\r\n+                  order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n+                }\r\n+              </p>\r\n+              <p style={{ \r\n+                marginBottom: \"8px\",\r\n+                fontSize: \"0.95em\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Tổng tiền: {order.total.toLocaleString('vi-VN')} VND\r\n+              </p>\r\n+            </div>\r\n+\r\n+            {order.paymentMethod === 'bank' && (\r\n+              <div style={{\r\n+                padding: \"12px\",\r\n+                border: \"1px solid #e5e7eb\",\r\n+                marginBottom: \"20px\",\r\n+                borderRadius: \"6px\"\r\n+              }}>\r\n+                <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n+                  Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n+                </p>\r\n               </div>\r\n-              <div className=\"flex justify-between\">\r\n-                <span className=\"text-gray-600\">Phương thức thanh toán:</span>\r\n-                <span className=\"font-medium\">{order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'}</span>\r\n-              </div>\r\n-            </div>\r\n+            )}\r\n           </div>\r\n+\r\n+          <div className=\"p-4 pb-12\">\r\n+            <button\r\n+              onClick={() => router.push('/products')}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"14px\",\r\n+                fontSize: \"0.8em\",\r\n+                color: \"#ffffff\",\r\n+                backgroundColor: \"#000000\",\r\n+                border: \"none\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              Tiếp tục mua sắm\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n+\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n-    </div>\r\n+    </>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747065320101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,13 +12,19 @@\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n-    if (foundOrder) {\r\n-      setOrder(foundOrder);\r\n+    if (orders && orderCode) {\r\n+      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n+      if (foundOrder) {\r\n+        setOrder(foundOrder);\r\n+      } else {\r\n+        setTimeout(() => {\r\n+          router.push('/');\r\n+        }, 3000);\r\n+      }\r\n     }\r\n-  }, [orderCode, orders]);\r\n+  }, [orderCode, orders, router]);\r\n \r\n   if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747065412531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,11 @@\n import { useEffect, useState, use } from 'react';\r\n import { useOrders } from '../../../context/OrderContext';\r\n import { useRouter } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n+import dynamic from 'next/dynamic';\r\n \r\n-export default function OrderSuccessPage({ params }) {\r\n+const OrderSuccessPage = ({ params }) => {\r\n   const unwrappedParams = use(params);\r\n   const { orderCode } = unwrappedParams;\r\n   const { orders } = useOrders();\r\n   const router = useRouter();\r\n@@ -213,5 +214,7 @@\n \r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n   );\r\n-} \n\\ No newline at end of file\n+};\r\n+\r\n+export default dynamic(() => Promise.resolve(OrderSuccessPage), { ssr: false }); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747065483318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,19 +13,28 @@\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    if (orders && orderCode) {\r\n-      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n-      if (foundOrder) {\r\n-        setOrder(foundOrder);\r\n-      } else {\r\n+    const fetchOrder = async () => {\r\n+      try {\r\n+        const response = await fetch(`/api/orders/${orderCode}`);\r\n+        if (!response.ok) {\r\n+          throw new Error('Order not found');\r\n+        }\r\n+        const data = await response.json();\r\n+        setOrder(data.order);\r\n+      } catch (error) {\r\n+        console.error('Error fetching order:', error);\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       }\r\n+    };\r\n+\r\n+    if (orderCode) {\r\n+      fetchOrder();\r\n     }\r\n-  }, [orderCode, orders, router]);\r\n+  }, [orderCode, router]);\r\n \r\n   if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747065550848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,28 +13,19 @@\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    const fetchOrder = async () => {\r\n-      try {\r\n-        const response = await fetch(`/api/orders/${orderCode}`);\r\n-        if (!response.ok) {\r\n-          throw new Error('Order not found');\r\n-        }\r\n-        const data = await response.json();\r\n-        setOrder(data.order);\r\n-      } catch (error) {\r\n-        console.error('Error fetching order:', error);\r\n+    if (orders && orderCode) {\r\n+      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n+      if (foundOrder) {\r\n+        setOrder(foundOrder);\r\n+      } else {\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       }\r\n-    };\r\n-\r\n-    if (orderCode) {\r\n-      fetchOrder();\r\n     }\r\n-  }, [orderCode, router]);\r\n+  }, [orderCode, orders, router]);\r\n \r\n   if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747065609106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,25 +7,35 @@\n \r\n const OrderSuccessPage = ({ params }) => {\r\n   const unwrappedParams = use(params);\r\n   const { orderCode } = unwrappedParams;\r\n-  const { orders } = useOrders();\r\n+  const { orders, refreshOrders } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    if (orders && orderCode) {\r\n-      const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n-      if (foundOrder) {\r\n-        setOrder(foundOrder);\r\n-      } else {\r\n-        setTimeout(() => {\r\n-          router.push('/');\r\n-        }, 3000);\r\n+    const findOrder = async () => {\r\n+      // Refresh orders list first\r\n+      await refreshOrders();\r\n+      \r\n+      // Then try to find the order\r\n+      if (orders) {\r\n+        const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n+        if (foundOrder) {\r\n+          setOrder(foundOrder);\r\n+        } else {\r\n+          setTimeout(() => {\r\n+            router.push('/');\r\n+          }, 3000);\r\n+        }\r\n       }\r\n+    };\r\n+\r\n+    if (orderCode) {\r\n+      findOrder();\r\n     }\r\n-  }, [orderCode, orders, router]);\r\n+  }, [orderCode, orders, router, refreshOrders]);\r\n \r\n   if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747066163964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,21 +14,34 @@\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const findOrder = async () => {\r\n-      // Refresh orders list first\r\n-      await refreshOrders();\r\n-      \r\n-      // Then try to find the order\r\n-      if (orders) {\r\n-        const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n-        if (foundOrder) {\r\n-          setOrder(foundOrder);\r\n+      try {\r\n+        // Refresh orders list first\r\n+        await refreshOrders();\r\n+        \r\n+        // Then try to find the order\r\n+        if (orders && Array.isArray(orders)) {\r\n+          const foundOrder = orders.find(o => o && o.orderCode === orderCode);\r\n+          if (foundOrder) {\r\n+            setOrder(foundOrder);\r\n+          } else {\r\n+            console.log('Order not found:', orderCode);\r\n+            setTimeout(() => {\r\n+              router.push('/');\r\n+            }, 3000);\r\n+          }\r\n         } else {\r\n+          console.log('Orders is not an array:', orders);\r\n           setTimeout(() => {\r\n             router.push('/');\r\n           }, 3000);\r\n         }\r\n+      } catch (error) {\r\n+        console.error('Error finding order:', error);\r\n+        setTimeout(() => {\r\n+          router.push('/');\r\n+        }, 3000);\r\n       }\r\n     };\r\n \r\n     if (orderCode) {\r\n"
                },
                {
                    "date": 1747066339236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,13 +10,15 @@\n   const { orderCode } = unwrappedParams;\r\n   const { orders, refreshOrders } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n+  const [isLoading, setIsLoading] = useState(true);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const findOrder = async () => {\r\n       try {\r\n+        setIsLoading(true);\r\n         // Refresh orders list first\r\n         await refreshOrders();\r\n         \r\n         // Then try to find the order\r\n@@ -40,20 +42,36 @@\n         console.error('Error finding order:', error);\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n+      } finally {\r\n+        setIsLoading(false);\r\n       }\r\n     };\r\n \r\n     if (orderCode) {\r\n       findOrder();\r\n     }\r\n   }, [orderCode, orders, router, refreshOrders]);\r\n \r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <div className=\"text-center\">\r\n+          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-black mx-auto mb-4\"></div>\r\n+          <p className=\"text-sm\">Đang tải thông tin đơn hàng...</p>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <p>Đơn hàng không tồn tại</p>\r\n+        <div className=\"text-center\">\r\n+          <p className=\"mb-4\">Đơn hàng không tồn tại</p>\r\n+          <p className=\"text-sm text-gray-500\">Chuyển hướng về trang chủ...</p>\r\n+        </div>\r\n       </div>\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1747066387129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,15 +10,13 @@\n   const { orderCode } = unwrappedParams;\r\n   const { orders, refreshOrders } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const findOrder = async () => {\r\n       try {\r\n-        setIsLoading(true);\r\n         // Refresh orders list first\r\n         await refreshOrders();\r\n         \r\n         // Then try to find the order\r\n@@ -42,36 +40,20 @@\n         console.error('Error finding order:', error);\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n-      } finally {\r\n-        setIsLoading(false);\r\n       }\r\n     };\r\n \r\n     if (orderCode) {\r\n       findOrder();\r\n     }\r\n   }, [orderCode, orders, router, refreshOrders]);\r\n \r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"text-center\">\r\n-          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-black mx-auto mb-4\"></div>\r\n-          <p className=\"text-sm\">Đang tải thông tin đơn hàng...</p>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n   if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"text-center\">\r\n-          <p className=\"mb-4\">Đơn hàng không tồn tại</p>\r\n-          <p className=\"text-sm text-gray-500\">Chuyển hướng về trang chủ...</p>\r\n-        </div>\r\n+        <p>Đơn hàng không tồn tại</p>\r\n       </div>\r\n     );\r\n   }\r\n \r\n"
                },
                {
                    "date": 1747066429279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,61 +1,45 @@\n \"use client\";\r\n import { useEffect, useState, use } from 'react';\r\n-import { useOrders } from '../../../context/OrderContext';\r\n import { useRouter } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n import dynamic from 'next/dynamic';\r\n \r\n const OrderSuccessPage = ({ params }) => {\r\n   const unwrappedParams = use(params);\r\n   const { orderCode } = unwrappedParams;\r\n-  const { orders, refreshOrders } = useOrders();\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    const findOrder = async () => {\r\n+    const fetchOrder = async () => {\r\n       try {\r\n-        // Refresh orders list first\r\n-        await refreshOrders();\r\n-        \r\n-        // Then try to find the order\r\n-        if (orders && Array.isArray(orders)) {\r\n-          const foundOrder = orders.find(o => o && o.orderCode === orderCode);\r\n-          if (foundOrder) {\r\n-            setOrder(foundOrder);\r\n-          } else {\r\n-            console.log('Order not found:', orderCode);\r\n-            setTimeout(() => {\r\n-              router.push('/');\r\n-            }, 3000);\r\n-          }\r\n+        const response = await fetch(`/api/orders/${orderCode}`);\r\n+        if (response.ok) {\r\n+          const data = await response.json();\r\n+          setOrder(data);\r\n         } else {\r\n-          console.log('Orders is not an array:', orders);\r\n+          console.error('Failed to fetch order');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n           }, 3000);\r\n         }\r\n       } catch (error) {\r\n-        console.error('Error finding order:', error);\r\n+        console.error('Error fetching order:', error);\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       }\r\n     };\r\n \r\n     if (orderCode) {\r\n-      findOrder();\r\n+      fetchOrder();\r\n     }\r\n-  }, [orderCode, orders, router, refreshOrders]);\r\n+  }, [orderCode, router]);\r\n \r\n   if (!order) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <p>Đơn hàng không tồn tại</p>\r\n-      </div>\r\n-    );\r\n+    return null;\r\n   }\r\n \r\n   return (\r\n     <>\r\n"
                },
                {
                    "date": 1747066559993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n   useEffect(() => {\r\n     const fetchOrder = async () => {\r\n       try {\r\n-        const response = await fetch(`/api/orders/${orderCode}`);\r\n+        const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n         if (response.ok) {\r\n           const data = await response.json();\r\n           setOrder(data);\r\n         } else {\r\n"
                },
                {
                    "date": 1747067009048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,17 @@\n       try {\r\n         const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n         if (response.ok) {\r\n           const data = await response.json();\r\n-          setOrder(data);\r\n+          // Đảm bảo giá tiền là số\r\n+          const processedData = {\r\n+            ...data,\r\n+            items: data.items.map(item => ({\r\n+              ...item,\r\n+              price: typeof item.price === 'string' ? parseFloat(item.price.replace(/[^0-9.-]+/g, '')) : item.price\r\n+            }))\r\n+          };\r\n+          setOrder(processedData);\r\n         } else {\r\n           console.error('Failed to fetch order');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n"
                },
                {
                    "date": 1747067026309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,17 +16,9 @@\n       try {\r\n         const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n         if (response.ok) {\r\n           const data = await response.json();\r\n-          // Đảm bảo giá tiền là số\r\n-          const processedData = {\r\n-            ...data,\r\n-            items: data.items.map(item => ({\r\n-              ...item,\r\n-              price: typeof item.price === 'string' ? parseFloat(item.price.replace(/[^0-9.-]+/g, '')) : item.price\r\n-            }))\r\n-          };\r\n-          setOrder(processedData);\r\n+          setOrder(data);\r\n         } else {\r\n           console.error('Failed to fetch order');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n"
                },
                {
                    "date": 1747108480184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n               {order.additionalPhone && (\r\n                 <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n               )}\r\n               <p style={{ marginBottom: \"8px\" }}>\r\n-                Địa chỉ: {order.address}, {order.ward}, {order.district}, {order.province}\r\n+                Địa chỉ: {[order.address, order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n               </p>\r\n               <p style={{ marginBottom: \"8px\" }}>\r\n                 Phương thức thanh toán: {\r\n                   order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n"
                },
                {
                    "date": 1747109235802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,11 @@\n   if (!order) {\r\n     return null;\r\n   }\r\n \r\n+  // Log kiểm tra order\r\n+  console.log('OrderSuccessPage order:', order);\r\n+\r\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Left side - Product Information (4/10) */}\r\n"
                },
                {
                    "date": 1747109293275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,8 @@\n   if (!order) {\r\n     return null;\r\n   }\r\n \r\n-  // Log kiểm tra order\r\n-  console.log('OrderSuccessPage order:', order);\r\n-\r\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Left side - Product Information (4/10) */}\r\n"
                },
                {
                    "date": 1747110515088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,14 +173,22 @@\n                 Phương thức thanh toán: {\r\n                   order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n                 }\r\n               </p>\r\n+              <p style={{ marginBottom: \"8px\" }}>\r\n+                Tổng phụ: {order.subtotal?.toLocaleString('vi-VN')} VND\r\n+              </p>\r\n+              {order.promoCode && (\r\n+                <p style={{ marginBottom: \"8px\" }}>\r\n+                  Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n+                </p>\r\n+              )}\r\n               <p style={{ \r\n                 marginBottom: \"8px\",\r\n                 fontSize: \"0.95em\",\r\n                 fontWeight: \"600\"\r\n               }}>\r\n-                Tổng tiền: {order.total.toLocaleString('vi-VN')} VND\r\n+                Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n               </p>\r\n             </div>\r\n \r\n             {order.paymentMethod === 'bank' && (\r\n"
                },
                {
                    "date": 1747110572129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,232 @@\n+\"use client\";\r\n+import { useEffect, useState, use } from 'react';\r\n+import { useRouter } from 'next/navigation';\r\n+import HelpPanel from '../../../components/HelpPanel';\r\n+import dynamic from 'next/dynamic';\r\n+\r\n+const OrderSuccessPage = ({ params }) => {\r\n+  const unwrappedParams = use(params);\r\n+  const { orderCode } = unwrappedParams;\r\n+  const router = useRouter();\r\n+  const [order, setOrder] = useState(null);\r\n+  const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchOrder = async () => {\r\n+      try {\r\n+        const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n+        if (response.ok) {\r\n+          const data = await response.json();\r\n+          setOrder(data);\r\n+        } else {\r\n+          console.error('Failed to fetch order');\r\n+          setTimeout(() => {\r\n+            router.push('/');\r\n+          }, 3000);\r\n+        }\r\n+      } catch (error) {\r\n+        console.error('Error fetching order:', error);\r\n+        setTimeout(() => {\r\n+          router.push('/');\r\n+        }, 3000);\r\n+      }\r\n+    };\r\n+\r\n+    if (orderCode) {\r\n+      fetchOrder();\r\n+    }\r\n+  }, [orderCode, router]);\r\n+\r\n+  if (!order) {\r\n+    return null;\r\n+  }\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className=\"min-h-screen w-full flex\" style={{ paddingTop: \"48px\" }}>\r\n+        {/* Left side - Product Information (4/10) */}\r\n+        <div className=\"w-4/10 bg-white min-h-screen flex flex-col\">\r\n+          <div className=\"flex-grow p-6\">\r\n+            <h2 style={{ \r\n+              fontSize: \"0.85em\", \r\n+              color: \"#000000\", \r\n+              textTransform: \"uppercase\", \r\n+              letterSpacing: \"0.1em\", \r\n+              marginBottom: \"24px\",\r\n+              fontWeight: \"600\",\r\n+              paddingTop: \"12px\"\r\n+            }}>\r\n+              Sản phẩm đã đặt\r\n+            </h2>\r\n+            \r\n+            <div className=\"space-y-4 mb-8\">\r\n+              {order.items.map((item, index) => (\r\n+                <div key={index} style={{ \r\n+                  display: \"flex\", \r\n+                  alignItems: \"center\", \r\n+                  marginBottom: \"12px\",\r\n+                  padding: \"10px\",\r\n+                }}>\r\n+                  <img \r\n+                    src={item.image} \r\n+                    alt={item.name} \r\n+                    style={{\r\n+                      width: \"80px\",\r\n+                      height: \"80px\",\r\n+                      objectFit: \"cover\",\r\n+                      marginRight: \"12px\"\r\n+                    }}\r\n+                  />\r\n+                  <div style={{ textAlign: \"left\" }}>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.85em\", \r\n+                      fontWeight: \"600\",\r\n+                      marginBottom: \"4px\",\r\n+                      color: \"#000000\"\r\n+                    }}>{item.name}</p>\r\n+                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Size: {item.size}</p>\r\n+                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Số lượng: {item.quantity}</p>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.8em\", \r\n+                      color: \"#000000\",\r\n+                      fontWeight: \"bold\" \r\n+                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n+                  </div>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"p-4 pb-12\">\r\n+            <button\r\n+              onClick={() => setIsHelpOpen(true)}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"14px\",\r\n+                fontSize: \"0.8em\",\r\n+                color: \"#000000\",\r\n+                backgroundColor: \"#ffffff\",\r\n+                border: \"1px solid #000\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              MAY WE HELP YOU?\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Right side - Order Success Information (6/10) */}\r\n+        <div className=\"w-6/10 bg-white min-h-screen flex flex-col border-l border-gray-100\">\r\n+          <div className=\"flex-grow p-6\">\r\n+            <div className=\"text-center mb-12\" style={{ paddingTop: \"12px\" }}>\r\n+              <div style={{\r\n+                width: \"50px\",\r\n+                height: \"50px\",\r\n+                borderRadius: \"50%\",\r\n+                backgroundColor: \"#000000\",\r\n+                color: \"white\",\r\n+                display: \"flex\",\r\n+                alignItems: \"center\",\r\n+                justifyContent: \"center\",\r\n+                fontSize: \"24px\",\r\n+                margin: \"0 auto 16px\",\r\n+              }}>\r\n+                ✓\r\n+              </div>\r\n+              <h1 style={{ \r\n+                fontSize: \"1.1em\", \r\n+                color: \"#000000\", \r\n+                textTransform: \"uppercase\", \r\n+                letterSpacing: \"0.1em\", \r\n+                marginBottom: \"24px\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Đặt hàng thành công\r\n+              </h1>\r\n+            </div>\r\n+\r\n+            <div style={{ fontSize: \"0.85em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n+              <h2 style={{ \r\n+                fontSize: \"0.85em\", \r\n+                color: \"#000000\", \r\n+                textTransform: \"uppercase\", \r\n+                letterSpacing: \"0.1em\", \r\n+                marginBottom: \"16px\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Thông tin đơn hàng\r\n+              </h2>\r\n+              <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+              <p style={{ marginBottom: \"8px\" }}>Họ tên: {order.fullName}</p>\r\n+              <p style={{ marginBottom: \"8px\" }}>Email: {order.email}</p>\r\n+              <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {order.phone}</p>\r\n+              {order.additionalPhone && (\r\n+                <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+              )}\r\n+              <p style={{ marginBottom: \"8px\" }}>\r\n+                Địa chỉ: {[order.address, order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n+              </p>\r\n+              <p style={{ marginBottom: \"8px\" }}>\r\n+                Phương thức thanh toán: {\r\n+                  order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n+                }\r\n+              </p>\r\n+              {order.promoCode && (\r\n+                <p style={{ marginBottom: \"8px\" }}>\r\n+                  Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n+                </p>\r\n+              )}\r\n+              <p style={{ \r\n+                marginBottom: \"8px\",\r\n+                fontSize: \"0.95em\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n+              </p>\r\n+            </div>\r\n+\r\n+            {order.paymentMethod === 'bank' && (\r\n+              <div style={{\r\n+                padding: \"12px\",\r\n+                border: \"1px solid #e5e7eb\",\r\n+                marginBottom: \"20px\",\r\n+                borderRadius: \"6px\"\r\n+              }}>\r\n+                <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n+                  Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n+                </p>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"p-4 pb-12\">\r\n+            <button\r\n+              onClick={() => router.push('/products')}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"14px\",\r\n+                fontSize: \"0.8em\",\r\n+                color: \"#ffffff\",\r\n+                backgroundColor: \"#000000\",\r\n+                border: \"none\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              Tiếp tục mua sắm\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default dynamic(() => Promise.resolve(OrderSuccessPage), { ssr: false }); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747363679788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,17 +2,20 @@\n import { useEffect, useState, use } from 'react';\r\n import { useRouter } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n import dynamic from 'next/dynamic';\r\n+import { useCart } from '../../../context/CartContext';\r\n \r\n const OrderSuccessPage = ({ params }) => {\r\n   const unwrappedParams = use(params);\r\n   const { orderCode } = unwrappedParams;\r\n   const router = useRouter();\r\n+  const { clearCart } = useCart();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n+    clearCart();\r\n     const fetchOrder = async () => {\r\n       try {\r\n         const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n         if (response.ok) {\r\n@@ -34,9 +37,9 @@\n \r\n     if (orderCode) {\r\n       fetchOrder();\r\n     }\r\n-  }, [orderCode, router]);\r\n+  }, [orderCode, router, clearCart]);\r\n \r\n   if (!order) {\r\n     return null;\r\n   }\r\n@@ -228,240 +231,5 @@\n     </>\r\n   );\r\n };\r\n \r\n-export default dynamic(() => Promise.resolve(OrderSuccessPage), { ssr: false }); \n-\"use client\";\r\n-import { useEffect, useState, use } from 'react';\r\n-import { useRouter } from 'next/navigation';\r\n-import HelpPanel from '../../../components/HelpPanel';\r\n-import dynamic from 'next/dynamic';\r\n-\r\n-const OrderSuccessPage = ({ params }) => {\r\n-  const unwrappedParams = use(params);\r\n-  const { orderCode } = unwrappedParams;\r\n-  const router = useRouter();\r\n-  const [order, setOrder] = useState(null);\r\n-  const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchOrder = async () => {\r\n-      try {\r\n-        const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n-        if (response.ok) {\r\n-          const data = await response.json();\r\n-          setOrder(data);\r\n-        } else {\r\n-          console.error('Failed to fetch order');\r\n-          setTimeout(() => {\r\n-            router.push('/');\r\n-          }, 3000);\r\n-        }\r\n-      } catch (error) {\r\n-        console.error('Error fetching order:', error);\r\n-        setTimeout(() => {\r\n-          router.push('/');\r\n-        }, 3000);\r\n-      }\r\n-    };\r\n-\r\n-    if (orderCode) {\r\n-      fetchOrder();\r\n-    }\r\n-  }, [orderCode, router]);\r\n-\r\n-  if (!order) {\r\n-    return null;\r\n-  }\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"min-h-screen w-full flex\" style={{ paddingTop: \"48px\" }}>\r\n-        {/* Left side - Product Information (4/10) */}\r\n-        <div className=\"w-4/10 bg-white min-h-screen flex flex-col\">\r\n-          <div className=\"flex-grow p-6\">\r\n-            <h2 style={{ \r\n-              fontSize: \"0.85em\", \r\n-              color: \"#000000\", \r\n-              textTransform: \"uppercase\", \r\n-              letterSpacing: \"0.1em\", \r\n-              marginBottom: \"24px\",\r\n-              fontWeight: \"600\",\r\n-              paddingTop: \"12px\"\r\n-            }}>\r\n-              Sản phẩm đã đặt\r\n-            </h2>\r\n-            \r\n-            <div className=\"space-y-4 mb-8\">\r\n-              {order.items.map((item, index) => (\r\n-                <div key={index} style={{ \r\n-                  display: \"flex\", \r\n-                  alignItems: \"center\", \r\n-                  marginBottom: \"12px\",\r\n-                  padding: \"10px\",\r\n-                }}>\r\n-                  <img \r\n-                    src={item.image} \r\n-                    alt={item.name} \r\n-                    style={{\r\n-                      width: \"80px\",\r\n-                      height: \"80px\",\r\n-                      objectFit: \"cover\",\r\n-                      marginRight: \"12px\"\r\n-                    }}\r\n-                  />\r\n-                  <div style={{ textAlign: \"left\" }}>\r\n-                    <p style={{ \r\n-                      fontSize: \"0.85em\", \r\n-                      fontWeight: \"600\",\r\n-                      marginBottom: \"4px\",\r\n-                      color: \"#000000\"\r\n-                    }}>{item.name}</p>\r\n-                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Size: {item.size}</p>\r\n-                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Số lượng: {item.quantity}</p>\r\n-                    <p style={{ \r\n-                      fontSize: \"0.8em\", \r\n-                      color: \"#000000\",\r\n-                      fontWeight: \"bold\" \r\n-                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n-                  </div>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => setIsHelpOpen(true)}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"14px\",\r\n-                fontSize: \"0.8em\",\r\n-                color: \"#000000\",\r\n-                backgroundColor: \"#ffffff\",\r\n-                border: \"1px solid #000\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              MAY WE HELP YOU?\r\n-            </button>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Right side - Order Success Information (6/10) */}\r\n-        <div className=\"w-6/10 bg-white min-h-screen flex flex-col border-l border-gray-100\">\r\n-          <div className=\"flex-grow p-6\">\r\n-            <div className=\"text-center mb-12\" style={{ paddingTop: \"12px\" }}>\r\n-              <div style={{\r\n-                width: \"50px\",\r\n-                height: \"50px\",\r\n-                borderRadius: \"50%\",\r\n-                backgroundColor: \"#000000\",\r\n-                color: \"white\",\r\n-                display: \"flex\",\r\n-                alignItems: \"center\",\r\n-                justifyContent: \"center\",\r\n-                fontSize: \"24px\",\r\n-                margin: \"0 auto 16px\",\r\n-              }}>\r\n-                ✓\r\n-              </div>\r\n-              <h1 style={{ \r\n-                fontSize: \"1.1em\", \r\n-                color: \"#000000\", \r\n-                textTransform: \"uppercase\", \r\n-                letterSpacing: \"0.1em\", \r\n-                marginBottom: \"24px\",\r\n-                fontWeight: \"600\"\r\n-              }}>\r\n-                Đặt hàng thành công\r\n-              </h1>\r\n-            </div>\r\n-\r\n-            <div style={{ fontSize: \"0.85em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n-              <h2 style={{ \r\n-                fontSize: \"0.85em\", \r\n-                color: \"#000000\", \r\n-                textTransform: \"uppercase\", \r\n-                letterSpacing: \"0.1em\", \r\n-                marginBottom: \"16px\",\r\n-                fontWeight: \"600\"\r\n-              }}>\r\n-                Thông tin đơn hàng\r\n-              </h2>\r\n-              <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Họ tên: {order.fullName}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Email: {order.email}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {order.phone}</p>\r\n-              {order.additionalPhone && (\r\n-                <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n-              )}\r\n-              <p style={{ marginBottom: \"8px\" }}>\r\n-                Địa chỉ: {[order.address, order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n-              </p>\r\n-              <p style={{ marginBottom: \"8px\" }}>\r\n-                Phương thức thanh toán: {\r\n-                  order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-                }\r\n-              </p>\r\n-              <p style={{ marginBottom: \"8px\" }}>\r\n-                Tổng phụ: {order.subtotal?.toLocaleString('vi-VN')} VND\r\n-              </p>\r\n-              {order.promoCode && (\r\n-                <p style={{ marginBottom: \"8px\" }}>\r\n-                  Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n-                </p>\r\n-              )}\r\n-              <p style={{ \r\n-                marginBottom: \"8px\",\r\n-                fontSize: \"0.95em\",\r\n-                fontWeight: \"600\"\r\n-              }}>\r\n-                Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n-              </p>\r\n-            </div>\r\n-\r\n-            {order.paymentMethod === 'bank' && (\r\n-              <div style={{\r\n-                padding: \"12px\",\r\n-                border: \"1px solid #e5e7eb\",\r\n-                marginBottom: \"20px\",\r\n-                borderRadius: \"6px\"\r\n-              }}>\r\n-                <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n-                  Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n-                </p>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => router.push('/products')}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"14px\",\r\n-                fontSize: \"0.8em\",\r\n-                color: \"#ffffff\",\r\n-                backgroundColor: \"#000000\",\r\n-                border: \"none\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              Tiếp tục mua sắm\r\n-            </button>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n export default dynamic(() => Promise.resolve(OrderSuccessPage), { ssr: false }); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747363777249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,20 +2,17 @@\n import { useEffect, useState, use } from 'react';\r\n import { useRouter } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n import dynamic from 'next/dynamic';\r\n-import { useCart } from '../../../context/CartContext';\r\n \r\n const OrderSuccessPage = ({ params }) => {\r\n   const unwrappedParams = use(params);\r\n   const { orderCode } = unwrappedParams;\r\n   const router = useRouter();\r\n-  const { clearCart } = useCart();\r\n   const [order, setOrder] = useState(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    clearCart();\r\n     const fetchOrder = async () => {\r\n       try {\r\n         const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n         if (response.ok) {\r\n@@ -37,9 +34,9 @@\n \r\n     if (orderCode) {\r\n       fetchOrder();\r\n     }\r\n-  }, [orderCode, router, clearCart]);\r\n+  }, [orderCode, router]);\r\n \r\n   if (!order) {\r\n     return null;\r\n   }\r\n"
                },
                {
                    "date": 1747369142218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,11 +194,31 @@\n                 border: \"1px solid #e5e7eb\",\r\n                 marginBottom: \"20px\",\r\n                 borderRadius: \"6px\"\r\n               }}>\r\n-                <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n-                  Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n-                </p>\r\n+                <h3 style={{\r\n+                  fontSize: \"0.9em\",\r\n+                  fontWeight: \"bold\",\r\n+                  marginBottom: \"10px\",\r\n+                  color: \"#000000\"\r\n+                }}>\r\n+                  Thông tin chuyển khoản\r\n+                </h3>\r\n+                <div style={{ fontSize: \"0.9em\", color: \"#000000\" }}>\r\n+                  <p style={{ marginBottom: \"8px\" }}>Ngân hàng: MB BANK</p>\r\n+                  <p style={{ marginBottom: \"8px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n+                  <p style={{ marginBottom: \"8px\" }}>Số tài khoản: 024052306</p>\r\n+                  <p style={{ marginBottom: \"8px\" }}>\r\n+                    Nội dung chuyển khoản: MÃ ĐƠN HÀNG + SĐT\r\n+                  </p>\r\n+                  <p style={{\r\n+                    marginTop: \"15px\",\r\n+                    fontStyle: \"italic\",\r\n+                    color: \"#666666\"\r\n+                  }}>\r\n+                    Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\r\n+                  </p>\r\n+                </div>\r\n               </div>\r\n             )}\r\n           </div>\r\n \r\n"
                },
                {
                    "date": 1747369199379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,32 +189,33 @@\n             </div>\r\n \r\n             {order.paymentMethod === 'bank' && (\r\n               <div style={{\r\n-                padding: \"12px\",\r\n+                padding: \"8px\",\r\n                 border: \"1px solid #e5e7eb\",\r\n                 marginBottom: \"20px\",\r\n                 borderRadius: \"6px\"\r\n               }}>\r\n                 <h3 style={{\r\n-                  fontSize: \"0.9em\",\r\n+                  fontSize: \"0.8em\",\r\n                   fontWeight: \"bold\",\r\n-                  marginBottom: \"10px\",\r\n+                  marginBottom: \"8px\",\r\n                   color: \"#000000\"\r\n                 }}>\r\n                   Thông tin chuyển khoản\r\n                 </h3>\r\n-                <div style={{ fontSize: \"0.9em\", color: \"#000000\" }}>\r\n-                  <p style={{ marginBottom: \"8px\" }}>Ngân hàng: MB BANK</p>\r\n-                  <p style={{ marginBottom: \"8px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n-                  <p style={{ marginBottom: \"8px\" }}>Số tài khoản: 024052306</p>\r\n-                  <p style={{ marginBottom: \"8px\" }}>\r\n+                <div style={{ fontSize: \"0.8em\", color: \"#000000\" }}>\r\n+                  <p style={{ marginBottom: \"6px\" }}>Ngân hàng: MB BANK</p>\r\n+                  <p style={{ marginBottom: \"6px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n+                  <p style={{ marginBottom: \"6px\" }}>Số tài khoản: 024052306</p>\r\n+                  <p style={{ marginBottom: \"6px\" }}>\r\n                     Nội dung chuyển khoản: MÃ ĐƠN HÀNG + SĐT\r\n                   </p>\r\n                   <p style={{\r\n-                    marginTop: \"15px\",\r\n+                    marginTop: \"10px\",\r\n                     fontStyle: \"italic\",\r\n-                    color: \"#666666\"\r\n+                    color: \"#666666\",\r\n+                    fontSize: \"0.75em\"\r\n                   }}>\r\n                     Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\r\n                   </p>\r\n                 </div>\r\n"
                },
                {
                    "date": 1747393271222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,53 +42,53 @@\n   }\r\n \r\n   return (\r\n     <>\r\n-      <div className=\"min-h-screen w-full flex\" style={{ paddingTop: \"48px\" }}>\r\n+      <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Left side - Product Information (4/10) */}\r\n-        <div className=\"w-4/10 bg-white min-h-screen flex flex-col\">\r\n-          <div className=\"flex-grow p-6\">\r\n+        <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n+          <div className=\"flex-grow p-4 md:p-6\">\r\n             <h2 style={{ \r\n-              fontSize: \"0.85em\", \r\n+              fontSize: \"0.8em\", \r\n               color: \"#000000\", \r\n               textTransform: \"uppercase\", \r\n               letterSpacing: \"0.1em\", \r\n-              marginBottom: \"24px\",\r\n+              marginBottom: \"16px\",\r\n               fontWeight: \"600\",\r\n-              paddingTop: \"12px\"\r\n+              paddingTop: \"8px\"\r\n             }}>\r\n               Sản phẩm đã đặt\r\n             </h2>\r\n             \r\n-            <div className=\"space-y-4 mb-8\">\r\n+            <div className=\"space-y-3 mb-6\">\r\n               {order.items.map((item, index) => (\r\n                 <div key={index} style={{ \r\n                   display: \"flex\", \r\n                   alignItems: \"center\", \r\n-                  marginBottom: \"12px\",\r\n-                  padding: \"10px\",\r\n+                  marginBottom: \"8px\",\r\n+                  padding: \"8px\",\r\n                 }}>\r\n                   <img \r\n                     src={item.image} \r\n                     alt={item.name} \r\n                     style={{\r\n-                      width: \"80px\",\r\n-                      height: \"80px\",\r\n+                      width: \"60px\",\r\n+                      height: \"60px\",\r\n                       objectFit: \"cover\",\r\n-                      marginRight: \"12px\"\r\n+                      marginRight: \"8px\"\r\n                     }}\r\n                   />\r\n                   <div style={{ textAlign: \"left\" }}>\r\n                     <p style={{ \r\n-                      fontSize: \"0.85em\", \r\n+                      fontSize: \"0.8em\", \r\n                       fontWeight: \"600\",\r\n-                      marginBottom: \"4px\",\r\n+                      marginBottom: \"2px\",\r\n                       color: \"#000000\"\r\n                     }}>{item.name}</p>\r\n-                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Size: {item.size}</p>\r\n-                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Số lượng: {item.quantity}</p>\r\n+                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Size: {item.size}</p>\r\n+                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\r\n                     <p style={{ \r\n-                      fontSize: \"0.8em\", \r\n+                      fontSize: \"0.75em\", \r\n                       color: \"#000000\",\r\n                       fontWeight: \"bold\" \r\n                     }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n                   </div>\r\n@@ -96,15 +96,15 @@\n               ))}\r\n             </div>\r\n           </div>\r\n \r\n-          <div className=\"p-4 pb-12\">\r\n+          <div className=\"p-3 md:p-4 pb-8 md:pb-12\">\r\n             <button\r\n               onClick={() => setIsHelpOpen(true)}\r\n               style={{\r\n                 width: \"100%\",\r\n-                padding: \"14px\",\r\n-                fontSize: \"0.8em\",\r\n+                padding: \"12px\",\r\n+                fontSize: \"0.75em\",\r\n                 color: \"#000000\",\r\n                 backgroundColor: \"#ffffff\",\r\n                 border: \"1px solid #000\",\r\n                 cursor: \"pointer\",\r\n@@ -118,71 +118,71 @@\n           </div>\r\n         </div>\r\n \r\n         {/* Right side - Order Success Information (6/10) */}\r\n-        <div className=\"w-6/10 bg-white min-h-screen flex flex-col border-l border-gray-100\">\r\n-          <div className=\"flex-grow p-6\">\r\n-            <div className=\"text-center mb-12\" style={{ paddingTop: \"12px\" }}>\r\n+        <div className=\"w-full md:w-6/10 bg-white min-h-screen flex flex-col md:border-l border-gray-100\">\r\n+          <div className=\"flex-grow p-4 md:p-6\">\r\n+            <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n               <div style={{\r\n-                width: \"50px\",\r\n-                height: \"50px\",\r\n+                width: \"40px\",\r\n+                height: \"40px\",\r\n                 borderRadius: \"50%\",\r\n                 backgroundColor: \"#000000\",\r\n                 color: \"white\",\r\n                 display: \"flex\",\r\n                 alignItems: \"center\",\r\n                 justifyContent: \"center\",\r\n-                fontSize: \"24px\",\r\n-                margin: \"0 auto 16px\",\r\n+                fontSize: \"20px\",\r\n+                margin: \"0 auto 12px\",\r\n               }}>\r\n                 ✓\r\n               </div>\r\n               <h1 style={{ \r\n-                fontSize: \"1.1em\", \r\n+                fontSize: \"1em\", \r\n                 color: \"#000000\", \r\n                 textTransform: \"uppercase\", \r\n                 letterSpacing: \"0.1em\", \r\n-                marginBottom: \"24px\",\r\n+                marginBottom: \"16px\",\r\n                 fontWeight: \"600\"\r\n               }}>\r\n                 Đặt hàng thành công\r\n               </h1>\r\n             </div>\r\n \r\n-            <div style={{ fontSize: \"0.85em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n+            <div style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"16px\" }}>\r\n               <h2 style={{ \r\n-                fontSize: \"0.85em\", \r\n+                fontSize: \"0.8em\", \r\n                 color: \"#000000\", \r\n                 textTransform: \"uppercase\", \r\n                 letterSpacing: \"0.1em\", \r\n-                marginBottom: \"16px\",\r\n+                marginBottom: \"12px\",\r\n                 fontWeight: \"600\"\r\n               }}>\r\n                 Thông tin đơn hàng\r\n               </h2>\r\n-              <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Họ tên: {order.fullName}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Email: {order.email}</p>\r\n-              <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {order.phone}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n               {order.additionalPhone && (\r\n-                <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+                <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n               )}\r\n-              <p style={{ marginBottom: \"8px\" }}>\r\n+              <p style={{ marginBottom: \"6px\" }}>\r\n                 Địa chỉ: {[order.address, order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n               </p>\r\n-              <p style={{ marginBottom: \"8px\" }}>\r\n+              <p style={{ marginBottom: \"6px\" }}>\r\n                 Phương thức thanh toán: {\r\n                   order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n                 }\r\n               </p>\r\n               {order.promoCode && (\r\n-                <p style={{ marginBottom: \"8px\" }}>\r\n+                <p style={{ marginBottom: \"6px\" }}>\r\n                   Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n                 </p>\r\n               )}\r\n               <p style={{ \r\n-                marginBottom: \"8px\",\r\n-                fontSize: \"0.95em\",\r\n+                marginBottom: \"6px\",\r\n+                fontSize: \"0.9em\",\r\n                 fontWeight: \"600\"\r\n               }}>\r\n                 Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n               </p>\r\n@@ -191,46 +191,46 @@\n             {order.paymentMethod === 'bank' && (\r\n               <div style={{\r\n                 padding: \"8px\",\r\n                 border: \"1px solid #e5e7eb\",\r\n-                marginBottom: \"20px\",\r\n-                borderRadius: \"6px\"\r\n+                marginBottom: \"16px\",\r\n+                borderRadius: \"4px\"\r\n               }}>\r\n                 <h3 style={{\r\n-                  fontSize: \"0.8em\",\r\n+                  fontSize: \"0.75em\",\r\n                   fontWeight: \"bold\",\r\n-                  marginBottom: \"8px\",\r\n+                  marginBottom: \"6px\",\r\n                   color: \"#000000\"\r\n                 }}>\r\n                   Thông tin chuyển khoản\r\n                 </h3>\r\n-                <div style={{ fontSize: \"0.8em\", color: \"#000000\" }}>\r\n-                  <p style={{ marginBottom: \"6px\" }}>Ngân hàng: MB BANK</p>\r\n-                  <p style={{ marginBottom: \"6px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n-                  <p style={{ marginBottom: \"6px\" }}>Số tài khoản: 024052306</p>\r\n-                  <p style={{ marginBottom: \"6px\" }}>\r\n+                <div style={{ fontSize: \"0.75em\", color: \"#000000\" }}>\r\n+                  <p style={{ marginBottom: \"4px\" }}>Ngân hàng: MB BANK</p>\r\n+                  <p style={{ marginBottom: \"4px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n+                  <p style={{ marginBottom: \"4px\" }}>Số tài khoản: 024052306</p>\r\n+                  <p style={{ marginBottom: \"4px\" }}>\r\n                     Nội dung chuyển khoản: MÃ ĐƠN HÀNG + SĐT\r\n                   </p>\r\n                   <p style={{\r\n-                    marginTop: \"10px\",\r\n+                    marginTop: \"8px\",\r\n                     fontStyle: \"italic\",\r\n                     color: \"#666666\",\r\n-                    fontSize: \"0.75em\"\r\n+                    fontSize: \"0.7em\"\r\n                   }}>\r\n                     Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\r\n                   </p>\r\n                 </div>\r\n               </div>\r\n             )}\r\n           </div>\r\n \r\n-          <div className=\"p-4 pb-12\">\r\n+          <div className=\"p-3 md:p-4 pb-8 md:pb-12\">\r\n             <button\r\n               onClick={() => router.push('/products')}\r\n               style={{\r\n                 width: \"100%\",\r\n-                padding: \"14px\",\r\n-                fontSize: \"0.8em\",\r\n+                padding: \"12px\",\r\n+                fontSize: \"0.75em\",\r\n                 color: \"#ffffff\",\r\n                 backgroundColor: \"#000000\",\r\n                 border: \"none\",\r\n                 cursor: \"pointer\",\r\n"
                },
                {
                    "date": 1747393357536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,85 +43,11 @@\n \r\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n-        {/* Left side - Product Information (4/10) */}\r\n-        <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n+        {/* Order Success Information */}\r\n+        <div className=\"w-full md:w-6/10 bg-white min-h-screen flex flex-col md:border-r border-gray-100\">\r\n           <div className=\"flex-grow p-4 md:p-6\">\r\n-            <h2 style={{ \r\n-              fontSize: \"0.8em\", \r\n-              color: \"#000000\", \r\n-              textTransform: \"uppercase\", \r\n-              letterSpacing: \"0.1em\", \r\n-              marginBottom: \"16px\",\r\n-              fontWeight: \"600\",\r\n-              paddingTop: \"8px\"\r\n-            }}>\r\n-              Sản phẩm đã đặt\r\n-            </h2>\r\n-            \r\n-            <div className=\"space-y-3 mb-6\">\r\n-              {order.items.map((item, index) => (\r\n-                <div key={index} style={{ \r\n-                  display: \"flex\", \r\n-                  alignItems: \"center\", \r\n-                  marginBottom: \"8px\",\r\n-                  padding: \"8px\",\r\n-                }}>\r\n-                  <img \r\n-                    src={item.image} \r\n-                    alt={item.name} \r\n-                    style={{\r\n-                      width: \"60px\",\r\n-                      height: \"60px\",\r\n-                      objectFit: \"cover\",\r\n-                      marginRight: \"8px\"\r\n-                    }}\r\n-                  />\r\n-                  <div style={{ textAlign: \"left\" }}>\r\n-                    <p style={{ \r\n-                      fontSize: \"0.8em\", \r\n-                      fontWeight: \"600\",\r\n-                      marginBottom: \"2px\",\r\n-                      color: \"#000000\"\r\n-                    }}>{item.name}</p>\r\n-                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Size: {item.size}</p>\r\n-                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\r\n-                    <p style={{ \r\n-                      fontSize: \"0.75em\", \r\n-                      color: \"#000000\",\r\n-                      fontWeight: \"bold\" \r\n-                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n-                  </div>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div className=\"p-3 md:p-4 pb-8 md:pb-12\">\r\n-            <button\r\n-              onClick={() => setIsHelpOpen(true)}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"12px\",\r\n-                fontSize: \"0.75em\",\r\n-                color: \"#000000\",\r\n-                backgroundColor: \"#ffffff\",\r\n-                border: \"1px solid #000\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              MAY WE HELP YOU?\r\n-            </button>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Right side - Order Success Information (6/10) */}\r\n-        <div className=\"w-full md:w-6/10 bg-white min-h-screen flex flex-col md:border-l border-gray-100\">\r\n-          <div className=\"flex-grow p-4 md:p-6\">\r\n             <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n               <div style={{\r\n                 width: \"40px\",\r\n                 height: \"40px\",\r\n@@ -242,8 +168,82 @@\n               Tiếp tục mua sắm\r\n             </button>\r\n           </div>\r\n         </div>\r\n+\r\n+        {/* Product Information */}\r\n+        <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n+          <div className=\"flex-grow p-4 md:p-6\">\r\n+            <h2 style={{ \r\n+              fontSize: \"0.8em\", \r\n+              color: \"#000000\", \r\n+              textTransform: \"uppercase\", \r\n+              letterSpacing: \"0.1em\", \r\n+              marginBottom: \"16px\",\r\n+              fontWeight: \"600\",\r\n+              paddingTop: \"8px\"\r\n+            }}>\r\n+              Sản phẩm đã đặt\r\n+            </h2>\r\n+            \r\n+            <div className=\"space-y-3 mb-6\">\r\n+              {order.items.map((item, index) => (\r\n+                <div key={index} style={{ \r\n+                  display: \"flex\", \r\n+                  alignItems: \"center\", \r\n+                  marginBottom: \"8px\",\r\n+                  padding: \"8px\",\r\n+                }}>\r\n+                  <img \r\n+                    src={item.image} \r\n+                    alt={item.name} \r\n+                    style={{\r\n+                      width: \"60px\",\r\n+                      height: \"60px\",\r\n+                      objectFit: \"cover\",\r\n+                      marginRight: \"8px\"\r\n+                    }}\r\n+                  />\r\n+                  <div style={{ textAlign: \"left\" }}>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.8em\", \r\n+                      fontWeight: \"600\",\r\n+                      marginBottom: \"2px\",\r\n+                      color: \"#000000\"\r\n+                    }}>{item.name}</p>\r\n+                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Size: {item.size}</p>\r\n+                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.75em\", \r\n+                      color: \"#000000\",\r\n+                      fontWeight: \"bold\" \r\n+                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n+                  </div>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"p-3 md:p-4 pb-8 md:pb-12\">\r\n+            <button\r\n+              onClick={() => setIsHelpOpen(true)}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"12px\",\r\n+                fontSize: \"0.75em\",\r\n+                color: \"#000000\",\r\n+                backgroundColor: \"#ffffff\",\r\n+                border: \"1px solid #000\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              MAY WE HELP YOU?\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n       </div>\r\n \r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n"
                }
            ],
            "date": 1746891704042,
            "name": "cart",
            "content": "\"use client\";\r\nimport { useEffect, useState, use } from 'react';\r\nimport { useOrders } from '../../../context/OrderContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport HelpPanel from '../../../components/HelpPanel';\r\n\r\nexport default function OrderSuccessPage({ params }) {\r\n  const unwrappedParams = use(params);\r\n  const { orderCode } = unwrappedParams;\r\n  const { orders } = useOrders();\r\n  const router = useRouter();\r\n  const [order, setOrder] = useState(null);\r\n  const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const foundOrder = orders.find(o => o.orderCode === orderCode);\r\n    if (foundOrder) {\r\n      setOrder(foundOrder);\r\n    }\r\n  }, [orderCode, orders]);\r\n\r\n  if (!order) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <p>Đơn hàng không tồn tại</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen w-full flex\" style={{ paddingTop: \"48px\" }}>\r\n        {/* Left side - Product Information (4/10) */}\r\n        <div className=\"w-4/10 bg-white min-h-screen flex flex-col\">\r\n          <div className=\"flex-grow p-6\">\r\n            <h2 style={{ \r\n              fontSize: \"0.85em\", \r\n              color: \"#000000\", \r\n              textTransform: \"uppercase\", \r\n              letterSpacing: \"0.1em\", \r\n              marginBottom: \"24px\",\r\n              fontWeight: \"600\",\r\n              paddingTop: \"12px\"\r\n            }}>\r\n              Sản phẩm đã đặt\r\n            </h2>\r\n            \r\n            <div className=\"space-y-4 mb-8\">\r\n              {order.items.map((item, index) => (\r\n                <div key={index} style={{ \r\n                  display: \"flex\", \r\n                  alignItems: \"center\", \r\n                  marginBottom: \"12px\",\r\n                  padding: \"10px\",\r\n                }}>\r\n                  <img \r\n                    src={item.image} \r\n                    alt={item.name} \r\n                    style={{\r\n                      width: \"80px\",\r\n                      height: \"80px\",\r\n                      objectFit: \"cover\",\r\n                      marginRight: \"12px\"\r\n                    }}\r\n                  />\r\n                  <div style={{ textAlign: \"left\" }}>\r\n                    <p style={{ \r\n                      fontSize: \"0.85em\", \r\n                      fontWeight: \"600\",\r\n                      marginBottom: \"4px\",\r\n                      color: \"#000000\"\r\n                    }}>{item.name}</p>\r\n                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Size: {item.variation}</p>\r\n                    <p style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"3px\" }}>Số lượng: {item.quantity}</p>\r\n                    <p style={{ fontSize: \"0.8em\", color: \"#000000\" }}>Giá: {item.price}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-4 pb-12\">\r\n            <button\r\n              onClick={() => setIsHelpOpen(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"14px\",\r\n                fontSize: \"0.8em\",\r\n                color: \"#000000\",\r\n                backgroundColor: \"#ffffff\",\r\n                border: \"1px solid #000\",\r\n                cursor: \"pointer\",\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: \"0.1em\",\r\n                fontWeight: \"600\"\r\n              }}\r\n            >\r\n              MAY WE HELP YOU?\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right side - Order Success Information (6/10) */}\r\n        <div className=\"w-6/10 bg-white min-h-screen flex flex-col border-l border-gray-100\">\r\n          <div className=\"flex-grow p-6\">\r\n            <div className=\"text-center mb-12\" style={{ paddingTop: \"12px\" }}>\r\n              <div style={{\r\n                width: \"50px\",\r\n                height: \"50px\",\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"#000000\",\r\n                color: \"white\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                fontSize: \"24px\",\r\n                margin: \"0 auto 16px\",\r\n              }}>\r\n                ✓\r\n              </div>\r\n              <h1 style={{ \r\n                fontSize: \"1.1em\", \r\n                color: \"#000000\", \r\n                textTransform: \"uppercase\", \r\n                letterSpacing: \"0.1em\", \r\n                marginBottom: \"24px\",\r\n                fontWeight: \"600\"\r\n              }}>\r\n                Đặt hàng thành công\r\n              </h1>\r\n            </div>\r\n\r\n            <div style={{ fontSize: \"0.85em\", color: \"#000000\", marginBottom: \"20px\" }}>\r\n              <h2 style={{ \r\n                fontSize: \"0.85em\", \r\n                color: \"#000000\", \r\n                textTransform: \"uppercase\", \r\n                letterSpacing: \"0.1em\", \r\n                marginBottom: \"16px\",\r\n                fontWeight: \"600\"\r\n              }}>\r\n                Thông tin đơn hàng\r\n              </h2>\r\n              <p style={{ marginBottom: \"8px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n              <p style={{ marginBottom: \"8px\" }}>Họ tên: {order.fullName}</p>\r\n              <p style={{ marginBottom: \"8px\" }}>Email: {order.email}</p>\r\n              <p style={{ marginBottom: \"8px\" }}>Số điện thoại: {order.phone}</p>\r\n              {order.additionalPhone && (\r\n                <p style={{ marginBottom: \"8px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n              )}\r\n              <p style={{ marginBottom: \"8px\" }}>\r\n                Địa chỉ: {order.address}, {order.ward}, {order.district}, {order.province}\r\n              </p>\r\n              <p style={{ marginBottom: \"8px\" }}>\r\n                Phương thức thanh toán: {\r\n                  order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n                }\r\n              </p>\r\n              <p style={{ \r\n                marginBottom: \"8px\",\r\n                fontSize: \"0.95em\",\r\n                fontWeight: \"600\"\r\n              }}>\r\n                Tổng tiền: {order.total}\r\n              </p>\r\n            </div>\r\n\r\n            {order.paymentMethod === 'bank' && (\r\n              <div style={{\r\n                padding: \"12px\",\r\n                border: \"1px solid #e5e7eb\",\r\n                marginBottom: \"20px\",\r\n                borderRadius: \"6px\"\r\n              }}>\r\n                <p style={{ fontSize: \"0.85em\", color: \"#000000\", fontStyle: \"italic\" }}>\r\n                  Vui lòng chuyển khoản theo thông tin đã cung cấp và gửi biên lai về Facebook hoặc Instagram AISH\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"p-4 pb-12\">\r\n            <button\r\n              onClick={() => router.push('/products')}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"14px\",\r\n                fontSize: \"0.8em\",\r\n                color: \"#ffffff\",\r\n                backgroundColor: \"#000000\",\r\n                border: \"none\",\r\n                cursor: \"pointer\",\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: \"0.1em\",\r\n                fontWeight: \"600\"\r\n              }}\r\n            >\r\n              Tiếp tục mua sắm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n    </>\r\n  );\r\n} "
        }
    ]
}
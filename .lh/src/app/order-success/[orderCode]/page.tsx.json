{
    "sourceFile": "src/app/order-success/[orderCode]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 41,
            "patches": [
                {
                    "date": 1747803503209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747803980747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n   useEffect(() => {\r\n     const fetchOrder = async () => {\r\n       try {\r\n         const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\r\n-        const response = await fetch(`${baseUrl}/api/orders/by-code/${orderCode}`, {\r\n+        const response = await fetch(`${baseUrl}/api/orders/${orderCode}`, {\r\n           method: 'GET',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n"
                },
                {
                    "date": 1747804455427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n   useEffect(() => {\r\n     const fetchOrder = async () => {\r\n       try {\r\n         const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\r\n-        const response = await fetch(`${baseUrl}/api/orders/${orderCode}`, {\r\n+        const response = await fetch(`${baseUrl}/api/orders?orderCode=${orderCode}`, {\r\n           method: 'GET',\r\n           headers: {\r\n             'Content-Type': 'application/json',\r\n           },\r\n"
                },
                {
                    "date": 1747885209686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,21 +17,22 @@\n }\r\n \r\n interface Order {\r\n   _id: string;\r\n-  orderNumber: string;\r\n+  orderCode: string;\r\n   items: OrderItem[];\r\n   totalAmount: number;\r\n   status: string;\r\n   createdAt: string;\r\n-  shippingAddress: {\r\n-    firstName: string;\r\n-    lastName: string;\r\n-    address: string;\r\n-    phone: string;\r\n-    additionalPhone?: string;\r\n-    apartment?: string;\r\n-  };\r\n+  fullName: string;\r\n+  email: string;\r\n+  phone: string;\r\n+  additionalPhone?: string;\r\n+  apartment?: string;\r\n+  address: string;\r\n+  ward: string;\r\n+  district: string;\r\n+  province: string;\r\n   paymentMethod: string;\r\n }\r\n \r\n export default function OrderSuccessPage() {\r\n@@ -42,16 +43,9 @@\n \r\n   useEffect(() => {\r\n     const fetchOrder = async () => {\r\n       try {\r\n-        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\r\n-        const response = await fetch(`${baseUrl}/api/orders?orderCode=${orderCode}`, {\r\n-          method: 'GET',\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-          },\r\n-        });\r\n-\r\n+        const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n         if (!response.ok) {\r\n           throw new Error('Failed to fetch order');\r\n         }\r\n \r\n@@ -105,9 +99,9 @@\n           <div className=\"p-6 border-b\">\r\n             <div className=\"flex justify-between items-center mb-4\">\r\n               <div>\r\n                 <p className=\"text-sm text-gray-600\">Order Number</p>\r\n-                <p className=\"font-semibold text-black\">{order.orderNumber}</p>\r\n+                <p className=\"font-semibold text-black\">{order.orderCode}</p>\r\n               </div>\r\n               <div>\r\n                 <p className=\"text-sm text-gray-600\">Date</p>\r\n                 <p className=\"font-semibold text-black\">\r\n@@ -150,19 +144,17 @@\n \r\n           <div className=\"p-6 border-b\">\r\n             <h2 className=\"text-lg font-semibold text-black mb-4\">Shipping Information</h2>\r\n             <div className=\"space-y-2\">\r\n-              <p className=\"text-black\">\r\n-                {order.shippingAddress.firstName} {order.shippingAddress.lastName}\r\n-              </p>\r\n-              <p className=\"text-gray-600\">{order.shippingAddress.address}</p>\r\n-              {order.shippingAddress.apartment && (\r\n-                <p className=\"text-gray-600\">{order.shippingAddress.apartment}</p>\r\n+              <p className=\"text-black\">{order.fullName}</p>\r\n+              <p className=\"text-gray-600\">{order.address}</p>\r\n+              {order.apartment && (\r\n+                <p className=\"text-gray-600\">{order.apartment}</p>\r\n               )}\r\n-              <p className=\"text-gray-600\">Phone: {order.shippingAddress.phone}</p>\r\n-              {order.shippingAddress.additionalPhone && (\r\n+              <p className=\"text-gray-600\">Phone: {order.phone}</p>\r\n+              {order.additionalPhone && (\r\n                 <p className=\"text-gray-600\">\r\n-                  Additional Phone: {order.shippingAddress.additionalPhone}\r\n+                  Additional Phone: {order.additionalPhone}\r\n                 </p>\r\n               )}\r\n             </div>\r\n           </div>\r\n@@ -175,9 +167,11 @@\n               </p>\r\n             </div>\r\n             <div className=\"flex justify-between items-center\">\r\n               <p className=\"text-sm text-gray-600\">Payment Method</p>\r\n-              <p className=\"text-sm text-gray-600\">{order.paymentMethod}</p>\r\n+              <p className=\"text-sm text-gray-600\">\r\n+                {order.paymentMethod === 'cod' ? 'Cash on Delivery' : 'Bank Transfer'}\r\n+              </p>\r\n             </div>\r\n           </div>\r\n         </div>\r\n \r\n"
                },
                {
                    "date": 1747885724507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n           throw new Error('Failed to fetch order');\r\n         }\r\n \r\n         const data = await response.json();\r\n-        if (data.ok) {\r\n+        if (data.ok && data.order) {\r\n           setOrder(data.order);\r\n         } else {\r\n           throw new Error(data.error || 'Failed to load order');\r\n         }\r\n@@ -99,43 +99,43 @@\n           <div className=\"p-6 border-b\">\r\n             <div className=\"flex justify-between items-center mb-4\">\r\n               <div>\r\n                 <p className=\"text-sm text-gray-600\">Order Number</p>\r\n-                <p className=\"font-semibold text-black\">{order.orderCode}</p>\r\n+                <p className=\"font-semibold text-black\">{order.orderCode || 'N/A'}</p>\r\n               </div>\r\n               <div>\r\n                 <p className=\"text-sm text-gray-600\">Date</p>\r\n                 <p className=\"font-semibold text-black\">\r\n-                  {new Date(order.createdAt).toLocaleDateString()}\r\n+                  {order.createdAt ? new Date(order.createdAt).toLocaleDateString() : 'N/A'}\r\n                 </p>\r\n               </div>\r\n             </div>\r\n             <div>\r\n               <p className=\"text-sm text-gray-600\">Status</p>\r\n-              <p className=\"font-semibold text-green-600\">{order.status}</p>\r\n+              <p className=\"font-semibold text-green-600\">{order.status || 'Pending'}</p>\r\n             </div>\r\n           </div>\r\n \r\n           <div className=\"p-6 border-b\">\r\n             <h2 className=\"text-lg font-semibold text-black mb-4\">Order Details</h2>\r\n             <div className=\"space-y-4\">\r\n-              {order.items.map((item, index) => (\r\n+              {order.items && order.items.map((item, index) => (\r\n                 <div key={index} className=\"flex items-center gap-4\">\r\n                   <div className=\"relative w-20 h-20\">\r\n                     <Image\r\n-                      src={item.image}\r\n-                      alt={item.name}\r\n+                      src={item.image || '/placeholder.png'}\r\n+                      alt={item.name || 'Product'}\r\n                       fill\r\n                       className=\"object-cover\"\r\n                     />\r\n                   </div>\r\n                   <div className=\"flex-1\">\r\n-                    <p className=\"font-medium text-black\">{item.name}</p>\r\n+                    <p className=\"font-medium text-black\">{item.name || 'N/A'}</p>\r\n                     <p className=\"text-sm text-gray-600\">\r\n-                      Size: {item.size} | Quantity: {item.quantity}\r\n+                      Size: {item.size || 'N/A'} | Quantity: {item.quantity || 0}\r\n                     </p>\r\n                     <p className=\"text-sm text-gray-600\">\r\n-                      {(item.price * item.quantity).toLocaleString('vi-VN')} VND\r\n+                      {((item.price || 0) * (item.quantity || 0)).toLocaleString('vi-VN')} VND\r\n                     </p>\r\n                   </div>\r\n                 </div>\r\n               ))}\r\n@@ -144,14 +144,14 @@\n \r\n           <div className=\"p-6 border-b\">\r\n             <h2 className=\"text-lg font-semibold text-black mb-4\">Shipping Information</h2>\r\n             <div className=\"space-y-2\">\r\n-              <p className=\"text-black\">{order.fullName}</p>\r\n-              <p className=\"text-gray-600\">{order.address}</p>\r\n+              <p className=\"text-black\">{order.fullName || 'N/A'}</p>\r\n+              <p className=\"text-gray-600\">{order.address || 'N/A'}</p>\r\n               {order.apartment && (\r\n                 <p className=\"text-gray-600\">{order.apartment}</p>\r\n               )}\r\n-              <p className=\"text-gray-600\">Phone: {order.phone}</p>\r\n+              <p className=\"text-gray-600\">Phone: {order.phone || 'N/A'}</p>\r\n               {order.additionalPhone && (\r\n                 <p className=\"text-gray-600\">\r\n                   Additional Phone: {order.additionalPhone}\r\n                 </p>\r\n@@ -162,9 +162,9 @@\n           <div className=\"p-6\">\r\n             <div className=\"flex justify-between items-center mb-4\">\r\n               <p className=\"text-lg font-semibold text-black\">Total Amount</p>\r\n               <p className=\"text-lg font-semibold text-black\">\r\n-                {order.totalAmount.toLocaleString('vi-VN')} VND\r\n+                {(order.totalAmount || 0).toLocaleString('vi-VN')} VND\r\n               </p>\r\n             </div>\r\n             <div className=\"flex justify-between items-center\">\r\n               <p className=\"text-sm text-gray-600\">Payment Method</p>\r\n"
                },
                {
                    "date": 1747886149064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n \"use client\";\r\n \r\n-import { useState, useEffect } from \"react\";\r\n-import { useParams } from \"next/navigation\";\r\n-import Link from \"next/link\";\r\n-import Image from \"next/image\";\r\n-import { toast } from \"react-hot-toast\";\r\n+import { useEffect, useState, use } from 'react';\r\n+import { useRouter } from 'next/navigation';\r\n+import HelpPanel from '../../../components/HelpPanel';\r\n+import dynamic from 'next/dynamic';\r\n \r\n interface OrderItem {\r\n   id: string;\r\n   name: string;\r\n@@ -19,9 +18,9 @@\n interface Order {\r\n   _id: string;\r\n   orderCode: string;\r\n   items: OrderItem[];\r\n-  totalAmount: number;\r\n+  total: number;\r\n   status: string;\r\n   createdAt: string;\r\n   fullName: string;\r\n   email: string;\r\n@@ -32,158 +31,266 @@\n   ward: string;\r\n   district: string;\r\n   province: string;\r\n   paymentMethod: string;\r\n+  promoCode?: string;\r\n+  promoAmount?: number;\r\n }\r\n \r\n-export default function OrderSuccessPage() {\r\n-  const params = useParams();\r\n-  const orderCode = params?.orderCode as string;\r\n+const OrderSuccessPage = ({ params }) => {\r\n+  const unwrappedParams = use(params);\r\n+  const { orderCode } = unwrappedParams;\r\n+  const router = useRouter();\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n+  const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchOrder = async () => {\r\n       try {\r\n         const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n-        if (!response.ok) {\r\n-          throw new Error('Failed to fetch order');\r\n-        }\r\n-\r\n-        const data = await response.json();\r\n-        if (data.ok && data.order) {\r\n-          setOrder(data.order);\r\n+        if (response.ok) {\r\n+          const data = await response.json();\r\n+          if (data.ok && data.order) {\r\n+            setOrder(data.order);\r\n+          } else {\r\n+            console.error('Failed to fetch order data');\r\n+            setTimeout(() => {\r\n+              router.push('/');\r\n+            }, 3000);\r\n+          }\r\n         } else {\r\n-          throw new Error(data.error || 'Failed to load order');\r\n+          console.error('Failed to fetch order');\r\n+          setTimeout(() => {\r\n+            router.push('/');\r\n+          }, 3000);\r\n         }\r\n       } catch (error) {\r\n         console.error('Error fetching order:', error);\r\n-        toast.error('Failed to load order details');\r\n-      } finally {\r\n-        setIsLoading(false);\r\n+        setTimeout(() => {\r\n+          router.push('/');\r\n+        }, 3000);\r\n       }\r\n     };\r\n \r\n     if (orderCode) {\r\n       fetchOrder();\r\n     }\r\n-  }, [orderCode]);\r\n+  }, [orderCode, router]);\r\n \r\n-  if (isLoading) {\r\n+  if (!order) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n         <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\r\n       </div>\r\n     );\r\n   }\r\n \r\n-  if (!order) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex flex-col items-center justify-center\">\r\n-        <p className=\"text-xl mb-4\">Order not found</p>\r\n-        <Link href=\"/\" className=\"text-blue-600 hover:underline\">\r\n-          Return to Home\r\n-        </Link>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n   return (\r\n-    <div className=\"min-h-screen bg-white py-16 px-4 sm:px-6 lg:px-8\">\r\n-      <div className=\"max-w-3xl mx-auto\">\r\n-        <div className=\"text-center mb-8\">\r\n-          <h1 className=\"text-3xl font-bold text-black mb-2\">Order Confirmed!</h1>\r\n-          <p className=\"text-gray-600\">Thank you for your purchase</p>\r\n-        </div>\r\n+    <>\r\n+      <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n+        {/* Order Success Information */}\r\n+        <div className=\"w-full md:w-6/10 bg-white min-h-screen flex flex-col md:border-r border-gray-100\">\r\n+          <div className=\"flex-grow p-4 md:p-6\">\r\n+            <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n+              <div style={{\r\n+                width: \"40px\",\r\n+                height: \"40px\",\r\n+                borderRadius: \"50%\",\r\n+                backgroundColor: \"#000000\",\r\n+                color: \"white\",\r\n+                display: \"flex\",\r\n+                alignItems: \"center\",\r\n+                justifyContent: \"center\",\r\n+                fontSize: \"20px\",\r\n+                margin: \"0 auto 12px\",\r\n+              }}>\r\n+                ✓\r\n+              </div>\r\n+              <h1 style={{ \r\n+                fontSize: \"1em\", \r\n+                color: \"#000000\", \r\n+                textTransform: \"uppercase\", \r\n+                letterSpacing: \"0.1em\", \r\n+                marginBottom: \"16px\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Đặt hàng thành công\r\n+              </h1>\r\n+            </div>\r\n \r\n-        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden\">\r\n-          <div className=\"p-6 border-b\">\r\n-            <div className=\"flex justify-between items-center mb-4\">\r\n-              <div>\r\n-                <p className=\"text-sm text-gray-600\">Order Number</p>\r\n-                <p className=\"font-semibold text-black\">{order.orderCode || 'N/A'}</p>\r\n-              </div>\r\n-              <div>\r\n-                <p className=\"text-sm text-gray-600\">Date</p>\r\n-                <p className=\"font-semibold text-black\">\r\n-                  {order.createdAt ? new Date(order.createdAt).toLocaleDateString() : 'N/A'}\r\n+            <div style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"16px\" }}>\r\n+              <h2 style={{ \r\n+                fontSize: \"0.8em\", \r\n+                color: \"#000000\", \r\n+                textTransform: \"uppercase\", \r\n+                letterSpacing: \"0.1em\", \r\n+                marginBottom: \"12px\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Thông tin đơn hàng\r\n+              </h2>\r\n+              <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n+              {order.additionalPhone && (\r\n+                <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+              )}\r\n+              <p style={{ marginBottom: \"6px\" }}>\r\n+                Địa chỉ: {[order.address, order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n+              </p>\r\n+              <p style={{ marginBottom: \"6px\" }}>\r\n+                Phương thức thanh toán: {\r\n+                  order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n\\ No newline at end of file\n+                }\r\n+              </p>\r\n+              {order.promoCode && (\r\n+                <p style={{ marginBottom: \"6px\" }}>\r\n+                  Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n                 </p>\r\n+              )}\r\n+              <p style={{ \r\n+                marginBottom: \"6px\",\r\n+                fontSize: \"0.9em\",\r\n+                fontWeight: \"600\"\r\n+              }}>\r\n+                Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n+              </p>\r\n+            </div>\r\n+\r\n+            {order.paymentMethod === 'bank' && (\r\n+              <div style={{\r\n+                padding: \"8px\",\r\n+                border: \"1px solid #e5e7eb\",\r\n+                marginBottom: \"16px\",\r\n+                borderRadius: \"4px\"\r\n+              }}>\r\n+                <h3 style={{\r\n+                  fontSize: \"0.75em\",\r\n+                  fontWeight: \"bold\",\r\n+                  marginBottom: \"6px\",\r\n+                  color: \"#000000\"\r\n+                }}>\r\n+                  Thông tin chuyển khoản\r\n+                </h3>\r\n+                <div style={{ fontSize: \"0.75em\", color: \"#000000\" }}>\r\n+                  <p style={{ marginBottom: \"4px\" }}>Ngân hàng: MB BANK</p>\r\n+                  <p style={{ marginBottom: \"4px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n+                  <p style={{ marginBottom: \"4px\" }}>Số tài khoản: 024052306</p>\r\n+                  <p style={{ marginBottom: \"4px\" }}>\r\n+                    Nội dung chuyển khoản: MÃ ĐƠN HÀNG + SĐT\r\n+                  </p>\r\n+                  <p style={{\r\n+                    marginTop: \"8px\",\r\n+                    fontStyle: \"italic\",\r\n+                    color: \"#666666\",\r\n+                    fontSize: \"0.7em\"\r\n+                  }}>\r\n+                    Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\r\n+                  </p>\r\n+                </div>\r\n               </div>\r\n-            </div>\r\n-            <div>\r\n-              <p className=\"text-sm text-gray-600\">Status</p>\r\n-              <p className=\"font-semibold text-green-600\">{order.status || 'Pending'}</p>\r\n-            </div>\r\n+            )}\r\n           </div>\r\n \r\n-          <div className=\"p-6 border-b\">\r\n-            <h2 className=\"text-lg font-semibold text-black mb-4\">Order Details</h2>\r\n-            <div className=\"space-y-4\">\r\n-              {order.items && order.items.map((item, index) => (\r\n-                <div key={index} className=\"flex items-center gap-4\">\r\n-                  <div className=\"relative w-20 h-20\">\r\n-                    <Image\r\n-                      src={item.image || '/placeholder.png'}\r\n-                      alt={item.name || 'Product'}\r\n-                      fill\r\n-                      className=\"object-cover\"\r\n-                    />\r\n+          <div className=\"p-3 md:p-4 pb-8 md:pb-12\">\r\n+            <button\r\n+              onClick={() => router.push('/products')}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"12px\",\r\n+                fontSize: \"0.75em\",\r\n+                color: \"#ffffff\",\r\n+                backgroundColor: \"#000000\",\r\n+                border: \"none\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              Tiếp tục mua sắm\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Product Information */}\r\n+        <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n+          <div className=\"flex-grow p-4 md:p-6\">\r\n+            <h2 style={{ \r\n+              fontSize: \"0.8em\", \r\n+              color: \"#000000\", \r\n+              textTransform: \"uppercase\", \r\n+              letterSpacing: \"0.1em\", \r\n+              marginBottom: \"16px\",\r\n+              fontWeight: \"600\",\r\n+              paddingTop: \"8px\"\r\n+            }}>\r\n+              Sản phẩm đã đặt\r\n+            </h2>\r\n+            \r\n+            <div className=\"space-y-3 mb-6\">\r\n+              {order.items.map((item, index) => (\r\n+                <div key={index} style={{ \r\n+                  display: \"flex\", \r\n+                  alignItems: \"center\", \r\n+                  marginBottom: \"8px\",\r\n+                  padding: \"8px\",\r\n+                }}>\r\n+                  <img \r\n+                    src={item.image} \r\n+                    alt={item.name} \r\n+                    style={{\r\n+                      width: \"60px\",\r\n+                      height: \"60px\",\r\n+                      objectFit: \"cover\",\r\n+                      marginRight: \"8px\"\r\n+                    }}\r\n+                  />\r\n+                  <div style={{ textAlign: \"left\" }}>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.8em\", \r\n+                      fontWeight: \"600\",\r\n+                      marginBottom: \"2px\",\r\n+                      color: \"#000000\"\r\n+                    }}>{item.name}</p>\r\n+                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Size: {item.size}</p>\r\n+                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\r\n+                    <p style={{ \r\n+                      fontSize: \"0.75em\", \r\n+                      color: \"#000000\",\r\n+                      fontWeight: \"bold\" \r\n+                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n                   </div>\r\n-                  <div className=\"flex-1\">\r\n-                    <p className=\"font-medium text-black\">{item.name || 'N/A'}</p>\r\n-                    <p className=\"text-sm text-gray-600\">\r\n-                      Size: {item.size || 'N/A'} | Quantity: {item.quantity || 0}\r\n-                    </p>\r\n-                    <p className=\"text-sm text-gray-600\">\r\n-                      {((item.price || 0) * (item.quantity || 0)).toLocaleString('vi-VN')} VND\r\n-                    </p>\r\n-                  </div>\r\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n \r\n-          <div className=\"p-6 border-b\">\r\n-            <h2 className=\"text-lg font-semibold text-black mb-4\">Shipping Information</h2>\r\n-            <div className=\"space-y-2\">\r\n-              <p className=\"text-black\">{order.fullName || 'N/A'}</p>\r\n-              <p className=\"text-gray-600\">{order.address || 'N/A'}</p>\r\n-              {order.apartment && (\r\n-                <p className=\"text-gray-600\">{order.apartment}</p>\r\n-              )}\r\n-              <p className=\"text-gray-600\">Phone: {order.phone || 'N/A'}</p>\r\n-              {order.additionalPhone && (\r\n-                <p className=\"text-gray-600\">\r\n-                  Additional Phone: {order.additionalPhone}\r\n-                </p>\r\n-              )}\r\n-            </div>\r\n+          <div className=\"p-3 md:p-4 pb-8 md:pb-12\">\r\n+            <button\r\n+              onClick={() => setIsHelpOpen(true)}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"12px\",\r\n+                fontSize: \"0.75em\",\r\n+                color: \"#000000\",\r\n+                backgroundColor: \"#ffffff\",\r\n+                border: \"1px solid #000\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              MAY WE HELP YOU?\r\n+            </button>\r\n           </div>\r\n-\r\n-          <div className=\"p-6\">\r\n-            <div className=\"flex justify-between items-center mb-4\">\r\n-              <p className=\"text-lg font-semibold text-black\">Total Amount</p>\r\n-              <p className=\"text-lg font-semibold text-black\">\r\n-                {(order.totalAmount || 0).toLocaleString('vi-VN')} VND\r\n-              </p>\r\n-            </div>\r\n-            <div className=\"flex justify-between items-center\">\r\n-              <p className=\"text-sm text-gray-600\">Payment Method</p>\r\n-              <p className=\"text-sm text-gray-600\">\r\n-                {order.paymentMethod === 'cod' ? 'Cash on Delivery' : 'Bank Transfer'}\r\n-              </p>\r\n-            </div>\r\n-          </div>\r\n         </div>\r\n+      </div>\r\n \r\n-        <div className=\"mt-8 text-center\">\r\n-          <Link\r\n-            href=\"/\"\r\n-            className=\"inline-block bg-black text-white px-6 py-3 rounded-md hover:bg-gray-800 transition-colors\"\r\n-          >\r\n-            Continue Shopping\r\n-          </Link>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n+      <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n+    </>\r\n   );\r\n-} \n+};\r\n+\r\n+export default dynamic(() => Promise.resolve(OrderSuccessPage), { ssr: false }); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747886158017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,13 @@\n   promoCode?: string;\r\n   promoAmount?: number;\r\n }\r\n \r\n-const OrderSuccessPage = ({ params }) => {\r\n+interface PageParams {\r\n+  orderCode: string;\r\n+}\r\n+\r\n+const OrderSuccessPage = ({ params }: { params: PageParams }) => {\r\n   const unwrappedParams = use(params);\r\n   const { orderCode } = unwrappedParams;\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n"
                },
                {
                    "date": 1747886167400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n-import { useEffect, useState, use } from 'react';\r\n-import { useRouter } from 'next/navigation';\r\n+import { useEffect, useState } from 'react';\r\n+import { useRouter, useParams } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n import dynamic from 'next/dynamic';\r\n \r\n interface OrderItem {\r\n@@ -35,15 +35,11 @@\n   promoCode?: string;\r\n   promoAmount?: number;\r\n }\r\n \r\n-interface PageParams {\r\n-  orderCode: string;\r\n-}\r\n-\r\n-const OrderSuccessPage = ({ params }: { params: PageParams }) => {\r\n-  const unwrappedParams = use(params);\r\n-  const { orderCode } = unwrappedParams;\r\n+const OrderSuccessPage = () => {\r\n+  const params = useParams();\r\n+  const orderCode = params?.orderCode as string;\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n \r\n"
                },
                {
                    "date": 1747886198993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,50 +41,82 @@\n   const orderCode = params?.orderCode as string;\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(true);\r\n+  const [error, setError] = useState<string | null>(null);\r\n \r\n   useEffect(() => {\r\n     const fetchOrder = async () => {\r\n+      if (!orderCode) {\r\n+        setError('Order code is missing');\r\n+        setIsLoading(false);\r\n+        return;\r\n+      }\r\n+\r\n       try {\r\n+        setIsLoading(true);\r\n         const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n-        if (response.ok) {\r\n-          const data = await response.json();\r\n-          if (data.ok && data.order) {\r\n-            setOrder(data.order);\r\n-          } else {\r\n-            console.error('Failed to fetch order data');\r\n-            setTimeout(() => {\r\n-              router.push('/');\r\n-            }, 3000);\r\n-          }\r\n+        const data = await response.json();\r\n+\r\n+        if (response.ok && data.ok && data.order) {\r\n+          setOrder(data.order);\r\n+          setError(null);\r\n         } else {\r\n-          console.error('Failed to fetch order');\r\n+          setError('Failed to fetch order data');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n           }, 3000);\r\n         }\r\n       } catch (error) {\r\n         console.error('Error fetching order:', error);\r\n+        setError('An error occurred while fetching your order');\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n+      } finally {\r\n+        setIsLoading(false);\r\n       }\r\n     };\r\n \r\n-    if (orderCode) {\r\n-      fetchOrder();\r\n-    }\r\n+    fetchOrder();\r\n   }, [orderCode, router]);\r\n \r\n-  if (!order) {\r\n+  if (isLoading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n         <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\r\n       </div>\r\n     );\r\n   }\r\n \r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <div className=\"text-center\">\r\n+          <p className=\"text-red-500 mb-4\">{error}</p>\r\n+          <p className=\"text-gray-500\">Redirecting to home page...</p>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!order) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <div className=\"text-center\">\r\n+          <p className=\"text-gray-500 mb-4\">Order not found</p>\r\n+          <button\r\n+            onClick={() => router.push('/')}\r\n+            className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 transition-colors\"\r\n+          >\r\n+            Return to Home\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n"
                },
                {
                    "date": 1747886256725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,14 @@\n   promoCode?: string;\r\n   promoAmount?: number;\r\n }\r\n \r\n+interface ApiResponse {\r\n+  ok: boolean;\r\n+  order?: Order;\r\n+  error?: string;\r\n+}\r\n+\r\n const OrderSuccessPage = () => {\r\n   const params = useParams();\r\n   const orderCode = params?.orderCode as string;\r\n   const router = useRouter();\r\n@@ -55,15 +61,26 @@\n \r\n       try {\r\n         setIsLoading(true);\r\n         const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n-        const data = await response.json();\r\n+        const data: ApiResponse = await response.json();\r\n \r\n         if (response.ok && data.ok && data.order) {\r\n+          // Validate order data\r\n+          if (!data.order.items || data.order.items.length === 0) {\r\n+            setError('Order has no items');\r\n+            return;\r\n+          }\r\n+\r\n+          if (!data.order.total || data.order.total <= 0) {\r\n+            setError('Invalid order total');\r\n+            return;\r\n+          }\r\n+\r\n           setOrder(data.order);\r\n           setError(null);\r\n         } else {\r\n-          setError('Failed to fetch order data');\r\n+          setError(data.error || 'Failed to fetch order data');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n           }, 3000);\r\n         }\r\n@@ -115,8 +132,17 @@\n       </div>\r\n     );\r\n   }\r\n \r\n+  // Format date\r\n+  const orderDate = new Date(order.createdAt).toLocaleDateString('vi-VN', {\r\n+    year: 'numeric',\r\n+    month: 'long',\r\n+    day: 'numeric',\r\n+    hour: '2-digit',\r\n+    minute: '2-digit'\r\n+  });\r\n+\r\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n@@ -160,8 +186,9 @@\n               }}>\r\n                 Thông tin đơn hàng\r\n               </h2>\r\n               <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Ngày đặt: {orderDate}</p>\r\n               <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n               <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n               <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n               {order.additionalPhone && (\r\n@@ -208,9 +235,9 @@\n                   <p style={{ marginBottom: \"4px\" }}>Ngân hàng: MB BANK</p>\r\n                   <p style={{ marginBottom: \"4px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n                   <p style={{ marginBottom: \"4px\" }}>Số tài khoản: 024052306</p>\r\n                   <p style={{ marginBottom: \"4px\" }}>\r\n-                    Nội dung chuyển khoản: MÃ ĐƠN HÀNG + SĐT\r\n+                    Nội dung chuyển khoản: {order.orderCode} {order.phone}\r\n                   </p>\r\n                   <p style={{\r\n                     marginTop: \"8px\",\r\n                     fontStyle: \"italic\",\r\n@@ -266,8 +293,10 @@\n                   display: \"flex\", \r\n                   alignItems: \"center\", \r\n                   marginBottom: \"8px\",\r\n                   padding: \"8px\",\r\n+                  border: \"1px solid #e5e7eb\",\r\n+                  borderRadius: \"4px\"\r\n                 }}>\r\n                   <img \r\n                     src={item.image} \r\n                     alt={item.name} \r\n@@ -277,9 +306,9 @@\n                       objectFit: \"cover\",\r\n                       marginRight: \"8px\"\r\n                     }}\r\n                   />\r\n-                  <div style={{ textAlign: \"left\" }}>\r\n+                  <div style={{ textAlign: \"left\", flex: 1 }}>\r\n                     <p style={{ \r\n                       fontSize: \"0.8em\", \r\n                       fontWeight: \"600\",\r\n                       marginBottom: \"2px\",\r\n"
                },
                {
                    "date": 1747886353338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,11 @@\n   useEffect(() => {\r\n     const fetchOrder = async () => {\r\n       if (!orderCode) {\r\n         setError('Order code is missing');\r\n+        setTimeout(() => {\r\n+          router.push('/');\r\n+        }, 3000);\r\n         setIsLoading(false);\r\n         return;\r\n       }\r\n \r\n@@ -67,13 +70,19 @@\n         if (response.ok && data.ok && data.order) {\r\n           // Validate order data\r\n           if (!data.order.items || data.order.items.length === 0) {\r\n             setError('Order has no items');\r\n+            setTimeout(() => {\r\n+              router.push('/');\r\n+            }, 3000);\r\n             return;\r\n           }\r\n \r\n           if (!data.order.total || data.order.total <= 0) {\r\n             setError('Invalid order total');\r\n+            setTimeout(() => {\r\n+              router.push('/');\r\n+            }, 3000);\r\n             return;\r\n           }\r\n \r\n           setOrder(data.order);\r\n"
                },
                {
                    "date": 1747886446351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n import { useEffect, useState } from 'react';\r\n-import { useRouter, useParams } from 'next/navigation';\r\n+import { useRouter, useSearchParams } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n import dynamic from 'next/dynamic';\r\n \r\n interface OrderItem {\r\n@@ -42,10 +42,10 @@\n   error?: string;\r\n }\r\n \r\n const OrderSuccessPage = () => {\r\n-  const params = useParams();\r\n-  const orderCode = params?.orderCode as string;\r\n+  const searchParams = useSearchParams();\r\n+  const orderCode = searchParams.get('orderCode');\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n   const [isLoading, setIsLoading] = useState(true);\r\n"
                },
                {
                    "date": 1747886458559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n \"use client\";\r\n \r\n import { useEffect, useState } from 'react';\r\n-import { useRouter, useSearchParams } from 'next/navigation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { useParams } from 'next/navigation';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n import dynamic from 'next/dynamic';\r\n \r\n interface OrderItem {\r\n@@ -42,19 +43,19 @@\n   error?: string;\r\n }\r\n \r\n const OrderSuccessPage = () => {\r\n-  const searchParams = useSearchParams();\r\n-  const orderCode = searchParams.get('orderCode');\r\n+  const params = useParams();\r\n+  const orderCode = params?.orderCode;\r\n   const router = useRouter();\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n   const [isLoading, setIsLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n   useEffect(() => {\r\n     const fetchOrder = async () => {\r\n-      if (!orderCode) {\r\n+      if (!orderCode || typeof orderCode !== 'string') {\r\n         setError('Order code is missing');\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n"
                },
                {
                    "date": 1747888430903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,9 +204,9 @@\n               {order.additionalPhone && (\r\n                 <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n               )}\r\n               <p style={{ marginBottom: \"6px\" }}>\r\n-                Địa chỉ: {[order.address, order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n+                Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n               </p>\r\n               <p style={{ marginBottom: \"6px\" }}>\r\n                 Phương thức thanh toán: {\r\n                   order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n"
                },
                {
                    "date": 1747890292075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n       }\r\n \r\n       try {\r\n         setIsLoading(true);\r\n-        const response = await fetch(`/api/orders?orderCode=${orderCode}`);\r\n+        const response = await fetch(`/api/orders/${orderCode}`);\r\n         const data: ApiResponse = await response.json();\r\n \r\n         if (response.ok && data.ok && data.order) {\r\n           // Validate order data\r\n"
                },
                {
                    "date": 1747905711174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,15 @@\n       }\r\n \r\n       try {\r\n         setIsLoading(true);\r\n-        const response = await fetch(`/api/orders/${orderCode}`);\r\n+        // Lấy email từ localStorage nếu có\r\n+        const email = localStorage.getItem('orderEmail');\r\n+        const url = email \r\n+          ? `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`\r\n+          : `/api/orders/${orderCode}`;\r\n+        \r\n+        const response = await fetch(url);\r\n         const data: ApiResponse = await response.json();\r\n \r\n         if (response.ok && data.ok && data.order) {\r\n           // Validate order data\r\n"
                },
                {
                    "date": 1747906020402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         const email = localStorage.getItem('orderEmail');\r\n         const url = email \r\n           ? `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`\r\n           : `/api/orders/${orderCode}`;\r\n-        \r\n+          \r\n         const response = await fetch(url);\r\n         const data: ApiResponse = await response.json();\r\n \r\n         if (response.ok && data.ok && data.order) {\r\n"
                },
                {
                    "date": 1747906199392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,13 @@\n           }\r\n \r\n           setOrder(data.order);\r\n           setError(null);\r\n+          \r\n+          // Xóa email khỏi localStorage sau khi đã sử dụng\r\n+          if (email) {\r\n+            localStorage.removeItem('orderEmail');\r\n+          }\r\n         } else {\r\n           setError(data.error || 'Failed to fetch order data');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n"
                },
                {
                    "date": 1747906409160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,13 +93,8 @@\n           }\r\n \r\n           setOrder(data.order);\r\n           setError(null);\r\n-          \r\n-          // Xóa email khỏi localStorage sau khi đã sử dụng\r\n-          if (email) {\r\n-            localStorage.removeItem('orderEmail');\r\n-          }\r\n         } else {\r\n           setError(data.error || 'Failed to fetch order data');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n"
                },
                {
                    "date": 1747907811966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,44 +66,58 @@\n       try {\r\n         setIsLoading(true);\r\n         // Lấy email từ localStorage nếu có\r\n         const email = localStorage.getItem('orderEmail');\r\n-        const url = email \r\n-          ? `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`\r\n-          : `/api/orders/${orderCode}`;\r\n+        console.log('Fetching order with:', { orderCode, email });\r\n+\r\n+        if (!email) {\r\n+          setError('Email not found. Please try placing the order again.');\r\n+          setTimeout(() => {\r\n+            router.push('/');\r\n+          }, 3000);\r\n+          return;\r\n+        }\r\n+\r\n+        const url = `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`;\r\n+        console.log('Fetching from URL:', url);\r\n           \r\n         const response = await fetch(url);\r\n-        const data: ApiResponse = await response.json();\r\n+        const data = await response.json();\r\n+        console.log('Order fetch response:', data);\r\n \r\n-        if (response.ok && data.ok && data.order) {\r\n-          // Validate order data\r\n-          if (!data.order.items || data.order.items.length === 0) {\r\n-            setError('Order has no items');\r\n-            setTimeout(() => {\r\n-              router.push('/');\r\n-            }, 3000);\r\n-            return;\r\n-          }\r\n+        if (!response.ok) {\r\n+          throw new Error(data.message || 'Failed to fetch order data');\r\n+        }\r\n \r\n-          if (!data.order.total || data.order.total <= 0) {\r\n-            setError('Invalid order total');\r\n-            setTimeout(() => {\r\n-              router.push('/');\r\n-            }, 3000);\r\n-            return;\r\n-          }\r\n+        if (!data.ok || !data.order) {\r\n+          throw new Error('Invalid order data received');\r\n+        }\r\n \r\n-          setOrder(data.order);\r\n-          setError(null);\r\n-        } else {\r\n-          setError(data.error || 'Failed to fetch order data');\r\n+        // Validate order data\r\n+        if (!data.order.items || data.order.items.length === 0) {\r\n+          setError('Order has no items');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n           }, 3000);\r\n+          return;\r\n         }\r\n+\r\n+        if (!data.order.total || data.order.total <= 0) {\r\n+          setError('Invalid order total');\r\n+          setTimeout(() => {\r\n+            router.push('/');\r\n+          }, 3000);\r\n+          return;\r\n+        }\r\n+\r\n+        setOrder(data.order);\r\n+        setError(null);\r\n+\r\n+        // Xóa email khỏi localStorage sau khi đã sử dụng\r\n+        localStorage.removeItem('orderEmail');\r\n       } catch (error) {\r\n         console.error('Error fetching order:', error);\r\n-        setError('An error occurred while fetching your order');\r\n+        setError(error instanceof Error ? error.message : 'An error occurred while fetching your order');\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       } finally {\r\n"
                },
                {
                    "date": 1747907831931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,58 +66,44 @@\n       try {\r\n         setIsLoading(true);\r\n         // Lấy email từ localStorage nếu có\r\n         const email = localStorage.getItem('orderEmail');\r\n-        console.log('Fetching order with:', { orderCode, email });\r\n-\r\n-        if (!email) {\r\n-          setError('Email not found. Please try placing the order again.');\r\n-          setTimeout(() => {\r\n-            router.push('/');\r\n-          }, 3000);\r\n-          return;\r\n-        }\r\n-\r\n-        const url = `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`;\r\n-        console.log('Fetching from URL:', url);\r\n+        const url = email \r\n+          ? `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`\r\n+          : `/api/orders/${orderCode}`;\r\n           \r\n         const response = await fetch(url);\r\n-        const data = await response.json();\r\n-        console.log('Order fetch response:', data);\r\n+        const data: ApiResponse = await response.json();\r\n \r\n-        if (!response.ok) {\r\n-          throw new Error(data.message || 'Failed to fetch order data');\r\n-        }\r\n+        if (response.ok && data.ok && data.order) {\r\n+          // Validate order data\r\n+          if (!data.order.items || data.order.items.length === 0) {\r\n+            setError('Order has no items');\r\n+            setTimeout(() => {\r\n+              router.push('/');\r\n+            }, 3000);\r\n+            return;\r\n+          }\r\n \r\n-        if (!data.ok || !data.order) {\r\n-          throw new Error('Invalid order data received');\r\n-        }\r\n+          if (!data.order.total || data.order.total <= 0) {\r\n+            setError('Invalid order total');\r\n+            setTimeout(() => {\r\n+              router.push('/');\r\n+            }, 3000);\r\n+            return;\r\n+          }\r\n \r\n-        // Validate order data\r\n-        if (!data.order.items || data.order.items.length === 0) {\r\n-          setError('Order has no items');\r\n+          setOrder(data.order);\r\n+          setError(null);\r\n+        } else {\r\n+          setError(data.error || 'Failed to fetch order data');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n           }, 3000);\r\n-          return;\r\n         }\r\n-\r\n-        if (!data.order.total || data.order.total <= 0) {\r\n-          setError('Invalid order total');\r\n-          setTimeout(() => {\r\n-            router.push('/');\r\n-          }, 3000);\r\n-          return;\r\n-        }\r\n-\r\n-        setOrder(data.order);\r\n-        setError(null);\r\n-\r\n-        // Xóa email khỏi localStorage sau khi đã sử dụng\r\n-        localStorage.removeItem('orderEmail');\r\n       } catch (error) {\r\n         console.error('Error fetching order:', error);\r\n-        setError(error instanceof Error ? error.message : 'An error occurred while fetching your order');\r\n+        setError('An error occurred while fetching your order');\r\n         setTimeout(() => {\r\n           router.push('/');\r\n         }, 3000);\r\n       } finally {\r\n"
                },
                {
                    "date": 1747907880485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,17 +64,28 @@\n       }\r\n \r\n       try {\r\n         setIsLoading(true);\r\n-        // Lấy email từ localStorage nếu có\r\n+        // Lấy email từ localStorage\r\n         const email = localStorage.getItem('orderEmail');\r\n-        const url = email \r\n-          ? `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`\r\n-          : `/api/orders/${orderCode}`;\r\n-          \r\n+        console.log('Retrieved email from localStorage:', email);\r\n+\r\n+        if (!email) {\r\n+          setError('Email not found. Please try placing the order again.');\r\n+          setTimeout(() => {\r\n+            router.push('/');\r\n+          }, 3000);\r\n+          return;\r\n+        }\r\n+\r\n+        const url = `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`;\r\n+        console.log('Fetching order with URL:', url);\r\n+\r\n         const response = await fetch(url);\r\n         const data: ApiResponse = await response.json();\r\n \r\n+        console.log('Order fetch response:', data);\r\n+\r\n         if (response.ok && data.ok && data.order) {\r\n           // Validate order data\r\n           if (!data.order.items || data.order.items.length === 0) {\r\n             setError('Order has no items');\r\n"
                },
                {
                    "date": 1748489205538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,11 +64,11 @@\n       }\r\n \r\n       try {\r\n         setIsLoading(true);\r\n-        // Lấy email từ localStorage\r\n-        const email = localStorage.getItem('orderEmail');\r\n-        console.log('Retrieved email from localStorage:', email);\r\n+        // Lấy email từ session hoặc localStorage\r\n+        const email = session?.user?.email || localStorage.getItem('orderEmail');\r\n+        console.log('Retrieved email:', email);\r\n \r\n         if (!email) {\r\n           setError('Email not found. Please try placing the order again.');\r\n           setTimeout(() => {\r\n@@ -122,9 +122,9 @@\n       }\r\n     };\r\n \r\n     fetchOrder();\r\n-  }, [orderCode, router]);\r\n+  }, [orderCode, router, session]);\r\n \r\n   if (isLoading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1748489218350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n \r\n import { useEffect, useState } from 'react';\r\n import { useRouter } from 'next/navigation';\r\n import { useParams } from 'next/navigation';\r\n+import { useSession } from 'next-auth/react';\r\n import HelpPanel from '../../../components/HelpPanel';\r\n import dynamic from 'next/dynamic';\r\n \r\n interface OrderItem {\r\n@@ -46,8 +47,9 @@\n const OrderSuccessPage = () => {\r\n   const params = useParams();\r\n   const orderCode = params?.orderCode;\r\n   const router = useRouter();\r\n+  const { data: session } = useSession();\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n   const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n   const [isLoading, setIsLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n"
                },
                {
                    "date": 1748492546952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n       }\r\n \r\n       try {\r\n         setIsLoading(true);\r\n-        // Lấy email từ session hoặc localStorage\r\n+        // Get email from session or localStorage\r\n         const email = session?.user?.email || localStorage.getItem('orderEmail');\r\n         console.log('Retrieved email:', email);\r\n \r\n         if (!email) {\r\n@@ -87,28 +87,12 @@\n \r\n         console.log('Order fetch response:', data);\r\n \r\n         if (response.ok && data.ok && data.order) {\r\n-          // Validate order data\r\n-          if (!data.order.items || data.order.items.length === 0) {\r\n-            setError('Order has no items');\r\n-            setTimeout(() => {\r\n-              router.push('/');\r\n-            }, 3000);\r\n-            return;\r\n-          }\r\n-\r\n-          if (!data.order.total || data.order.total <= 0) {\r\n-            setError('Invalid order total');\r\n-            setTimeout(() => {\r\n-              router.push('/');\r\n-            }, 3000);\r\n-            return;\r\n-          }\r\n-\r\n           setOrder(data.order);\r\n           setError(null);\r\n         } else {\r\n+          console.error('Failed to fetch order:', data.error);\r\n           setError(data.error || 'Failed to fetch order data');\r\n           setTimeout(() => {\r\n             router.push('/');\r\n           }, 3000);\r\n@@ -174,132 +158,128 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"w-full md:w-6/10 bg-white min-h-screen flex flex-col md:border-r border-gray-100\">\r\n-          <div className=\"flex-grow p-4 md:p-6\">\r\n-            <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n-              <div style={{\r\n-                width: \"40px\",\r\n-                height: \"40px\",\r\n-                borderRadius: \"50%\",\r\n-                backgroundColor: \"#000000\",\r\n-                color: \"white\",\r\n-                display: \"flex\",\r\n-                alignItems: \"center\",\r\n-                justifyContent: \"center\",\r\n-                fontSize: \"20px\",\r\n-                margin: \"0 auto 12px\",\r\n-              }}>\r\n-                ✓\r\n-              </div>\r\n-              <h1 style={{ \r\n-                fontSize: \"1em\", \r\n-                color: \"#000000\", \r\n-                textTransform: \"uppercase\", \r\n-                letterSpacing: \"0.1em\", \r\n-                marginBottom: \"16px\",\r\n-                fontWeight: \"600\"\r\n-              }}>\r\n-                Đặt hàng thành công\r\n-              </h1>\r\n+        <div className=\"flex-grow p-4 md:p-6\">\r\n+          <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n+            <div style={{\r\n+              width: \"40px\",\r\n+              height: \"40px\",\r\n+              borderRadius: \"50%\",\r\n+              backgroundColor: \"#000000\",\r\n+              color: \"white\",\r\n+              display: \"flex\",\r\n+              alignItems: \"center\",\r\n+              justifyContent: \"center\",\r\n+              fontSize: \"20px\",\r\n+              margin: \"0 auto 12px\",\r\n+            }}>\r\n+              ✓\r\n             </div>\r\n+            <h1 style={{ \r\n+              fontSize: \"1em\", \r\n+              color: \"#000000\", \r\n+              textTransform: \"uppercase\", \r\n+              letterSpacing: \"0.1em\", \r\n+              marginBottom: \"16px\",\r\n+              fontWeight: \"600\"\r\n+            }}>\r\n+              Đặt hàng thành công\r\n+            </h1>\r\n+          </div>\r\n \r\n-            <div style={{ fontSize: \"0.8em\", color: \"#000000\", marginBottom: \"16px\" }}>\r\n-              <h2 style={{ \r\n-                fontSize: \"0.8em\", \r\n-                color: \"#000000\", \r\n-                textTransform: \"uppercase\", \r\n-                letterSpacing: \"0.1em\", \r\n-                marginBottom: \"12px\",\r\n-                fontWeight: \"600\"\r\n-              }}>\r\n-                Thông tin đơn hàng\r\n-              </h2>\r\n-              <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-              <p style={{ marginBottom: \"6px\" }}>Ngày đặt: {orderDate}</p>\r\n-              <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n-              <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n-              <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n-              {order.additionalPhone && (\r\n-                <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n-              )}\r\n+          <div>\r\n+            <h2 style={{ \r\n+              fontSize: \"0.8em\", \r\n+              color: \"#000000\", \r\n+              textTransform: \"uppercase\", \r\n+              letterSpacing: \"0.1em\", \r\n+              marginBottom: \"12px\",\r\n+              fontWeight: \"600\"\r\n+            }}>\r\n+              Thông tin đơn hàng\r\n+            </h2>\r\n+            <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Ngày đặt: {orderDate}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n+            {order.additionalPhone && (\r\n+              <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+            )}\r\n+            <p style={{ marginBottom: \"6px\" }}>\r\n+              Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n+            </p>\r\n+            <p style={{ marginBottom: \"6px\" }}>\r\n+              Phương thức thanh toán: {\r\n+                order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n+              }\r\n+            </p>\r\n+            {order.promoCode && (\r\n               <p style={{ marginBottom: \"6px\" }}>\r\n-                Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n+                Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n               </p>\r\n-              <p style={{ marginBottom: \"6px\" }}>\r\n-                Phương thức thanh toán: {\r\n-                  order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-                }\r\n-              </p>\r\n-              {order.promoCode && (\r\n-                <p style={{ marginBottom: \"6px\" }}>\r\n-                  Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n-                </p>\r\n-              )}\r\n-              <p style={{ \r\n+            )}\r\n+            <p style={{ \r\n+              marginBottom: \"6px\",\r\n+              fontSize: \"0.9em\",\r\n+              fontWeight: \"600\"\r\n+            }}>\r\n+              Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n+            </p>\r\n+          </div>\r\n+\r\n+          {order.paymentMethod === 'bank' && (\r\n+            <div style={{\r\n+              padding: \"8px\",\r\n+              border: \"1px solid #e5e7eb\",\r\n+              marginBottom: \"16px\",\r\n+              borderRadius: \"4px\"\r\n+            }}>\r\n+              <h3 style={{\r\n+                fontSize: \"0.75em\",\r\n+                fontWeight: \"bold\",\r\n                 marginBottom: \"6px\",\r\n-                fontSize: \"0.9em\",\r\n-                fontWeight: \"600\"\r\n+                color: \"#000000\"\r\n               }}>\r\n-                Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n-              </p>\r\n-            </div>\r\n-\r\n-            {order.paymentMethod === 'bank' && (\r\n-              <div style={{\r\n-                padding: \"8px\",\r\n-                border: \"1px solid #e5e7eb\",\r\n-                marginBottom: \"16px\",\r\n-                borderRadius: \"4px\"\r\n-              }}>\r\n-                <h3 style={{\r\n-                  fontSize: \"0.75em\",\r\n-                  fontWeight: \"bold\",\r\n-                  marginBottom: \"6px\",\r\n-                  color: \"#000000\"\r\n+                Thông tin chuyển khoản\r\n+              </h3>\r\n+              <div style={{ fontSize: \"0.75em\", color: \"#000000\" }}>\r\n+                <p style={{ marginBottom: \"4px\" }}>Ngân hàng: MB BANK</p>\r\n+                <p style={{ marginBottom: \"4px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n+                <p style={{ marginBottom: \"4px\" }}>Số tài khoản: 024052306</p>\r\n+                <p style={{ marginBottom: \"4px\" }}>\r\n+                  Nội dung chuyển khoản: {order.orderCode} {order.phone}\r\n+                </p>\r\n+                <p style={{\r\n+                  marginTop: \"8px\",\r\n+                  fontStyle: \"italic\",\r\n+                  color: \"#666666\",\r\n+                  fontSize: \"0.7em\"\r\n                 }}>\r\n-                  Thông tin chuyển khoản\r\n-                </h3>\r\n-                <div style={{ fontSize: \"0.75em\", color: \"#000000\" }}>\r\n-                  <p style={{ marginBottom: \"4px\" }}>Ngân hàng: MB BANK</p>\r\n-                  <p style={{ marginBottom: \"4px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n-                  <p style={{ marginBottom: \"4px\" }}>Số tài khoản: 024052306</p>\r\n-                  <p style={{ marginBottom: \"4px\" }}>\r\n-                    Nội dung chuyển khoản: {order.orderCode} {order.phone}\r\n-                  </p>\r\n-                  <p style={{\r\n-                    marginTop: \"8px\",\r\n-                    fontStyle: \"italic\",\r\n-                    color: \"#666666\",\r\n-                    fontSize: \"0.7em\"\r\n-                  }}>\r\n-                    Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\r\n-                  </p>\r\n-                </div>\r\n+                  Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\r\n+                </p>\r\n               </div>\r\n-            )}\r\n-          </div>\r\n+            </div>\r\n+          )}\r\n \r\n-          <div className=\"p-3 md:p-4 pb-8 md:pb-12\">\r\n-            <button\r\n-              onClick={() => router.push('/products')}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"12px\",\r\n-                fontSize: \"0.75em\",\r\n-                color: \"#ffffff\",\r\n-                backgroundColor: \"#000000\",\r\n-                border: \"none\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              Tiếp tục mua sắm\r\n-            </button>\r\n-          </div>\r\n+          <button\r\n+            onClick={() => router.push('/products')}\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"12px\",\r\n+              fontSize: \"0.75em\",\r\n+              color: \"#ffffff\",\r\n+              backgroundColor: \"#000000\",\r\n+              border: \"none\",\r\n+              cursor: \"pointer\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\",\r\n+              fontWeight: \"600\"\r\n+            }}\r\n+          >\r\n+            Tiếp tục mua sắm\r\n+          </button>\r\n         </div>\r\n \r\n         {/* Product Information */}\r\n         <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n@@ -315,9 +295,9 @@\n             }}>\r\n               Sản phẩm đã đặt\r\n             </h2>\r\n             \r\n-            <div className=\"space-y-3 mb-6\">\r\n+            <div>\r\n               {order.items.map((item, index) => (\r\n                 <div key={index} style={{ \r\n                   display: \"flex\", \r\n                   alignItems: \"center\", \r\n@@ -355,9 +335,9 @@\n               ))}\r\n             </div>\r\n           </div>\r\n \r\n-          <div className=\"p-3 md:p-4 pb-8 md:pb-12\">\r\n+          <div className=\"p-4 pb-12\">\r\n             <button\r\n               onClick={() => setIsHelpOpen(true)}\r\n               style={{\r\n                 width: \"100%\",\r\n"
                },
                {
                    "date": 1748588363879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\">\r\n+        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\" }}>\r\n           <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n             <div style={{\r\n               width: \"40px\",\r\n               height: \"40px\",\r\n"
                },
                {
                    "date": 1748588535146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\" }}>\r\n+        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\", color: \"#000000\" }}>\r\n           <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n             <div style={{\r\n               width: \"40px\",\r\n               height: \"40px\",\r\n@@ -260,26 +260,8 @@\n                 </p>\r\n               </div>\r\n             </div>\r\n           )}\r\n-\r\n-          <button\r\n-            onClick={() => router.push('/products')}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.75em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\",\r\n-              fontWeight: \"600\"\r\n-            }}\r\n-          >\r\n-            Tiếp tục mua sắm\r\n-          </button>\r\n         </div>\r\n \r\n         {/* Product Information */}\r\n         <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n@@ -334,31 +316,49 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => setIsHelpOpen(true)}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"12px\",\r\n-                fontSize: \"0.75em\",\r\n-                color: \"#000000\",\r\n-                backgroundColor: \"#ffffff\",\r\n-                border: \"1px solid #000\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              MAY WE HELP YOU?\r\n-            </button>\r\n-          </div>\r\n         </div>\r\n       </div>\r\n \r\n+      {/* Buttons Container */}\r\n+      <div className=\"w-full flex flex-col md:flex-row p-4 md:p-6 gap-4\" style={{ backgroundColor: \"white\" }}>\r\n+        <button\r\n+          onClick={() => router.push('/products')}\r\n+          style={{\r\n+            flex: 1,\r\n+            padding: \"12px\",\r\n+            fontSize: \"0.75em\",\r\n+            color: \"#ffffff\",\r\n+            backgroundColor: \"#000000\",\r\n+            border: \"none\",\r\n+            cursor: \"pointer\",\r\n+            textTransform: \"uppercase\",\r\n+            letterSpacing: \"0.1em\",\r\n+            fontWeight: \"600\"\r\n+          }}\r\n+        >\r\n+          Tiếp tục mua sắm\r\n+        </button>\r\n+        <button\r\n+          onClick={() => setIsHelpOpen(true)}\r\n+          style={{\r\n+            flex: 1,\r\n+            padding: \"12px\",\r\n+            fontSize: \"0.75em\",\r\n+            color: \"#000000\",\r\n+            backgroundColor: \"#ffffff\",\r\n+            border: \"1px solid #000\",\r\n+            cursor: \"pointer\",\r\n+            textTransform: \"uppercase\",\r\n+            letterSpacing: \"0.1em\",\r\n+            fontWeight: \"600\"\r\n+          }}\r\n+        >\r\n+          MAY WE HELP YOU?\r\n+        </button>\r\n+      </div>\r\n+\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1748588736271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\", color: \"#000000\" }}>\r\n+        <div className=\"flex-grow p-4 md:p-6\">\r\n           <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n             <div style={{\r\n               width: \"40px\",\r\n               height: \"40px\",\r\n@@ -260,8 +260,26 @@\n                 </p>\r\n               </div>\r\n             </div>\r\n           )}\r\n+\r\n+          <button\r\n+            onClick={() => router.push('/products')}\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"12px\",\r\n+              fontSize: \"0.75em\",\r\n+              color: \"#ffffff\",\r\n+              backgroundColor: \"#000000\",\r\n+              border: \"none\",\r\n+              cursor: \"pointer\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\",\r\n+              fontWeight: \"600\"\r\n+            }}\r\n+          >\r\n+            Tiếp tục mua sắm\r\n+          </button>\r\n         </div>\r\n \r\n         {/* Product Information */}\r\n         <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n@@ -316,49 +334,31 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n+\r\n+          <div className=\"p-4 pb-12\">\r\n+            <button\r\n+              onClick={() => setIsHelpOpen(true)}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"12px\",\r\n+                fontSize: \"0.75em\",\r\n+                color: \"#000000\",\r\n+                backgroundColor: \"#ffffff\",\r\n+                border: \"1px solid #000\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              MAY WE HELP YOU?\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Buttons Container */}\r\n-      <div className=\"w-full flex flex-col md:flex-row p-4 md:p-6 gap-4\" style={{ backgroundColor: \"white\" }}>\r\n-        <button\r\n-          onClick={() => router.push('/products')}\r\n-          style={{\r\n-            flex: 1,\r\n-            padding: \"12px\",\r\n-            fontSize: \"0.75em\",\r\n-            color: \"#ffffff\",\r\n-            backgroundColor: \"#000000\",\r\n-            border: \"none\",\r\n-            cursor: \"pointer\",\r\n-            textTransform: \"uppercase\",\r\n-            letterSpacing: \"0.1em\",\r\n-            fontWeight: \"600\"\r\n-          }}\r\n-        >\r\n-          Tiếp tục mua sắm\r\n-        </button>\r\n-        <button\r\n-          onClick={() => setIsHelpOpen(true)}\r\n-          style={{\r\n-            flex: 1,\r\n-            padding: \"12px\",\r\n-            fontSize: \"0.75em\",\r\n-            color: \"#000000\",\r\n-            backgroundColor: \"#ffffff\",\r\n-            border: \"1px solid #000\",\r\n-            cursor: \"pointer\",\r\n-            textTransform: \"uppercase\",\r\n-            letterSpacing: \"0.1em\",\r\n-            fontWeight: \"600\"\r\n-          }}\r\n-        >\r\n-          MAY WE HELP YOU?\r\n-        </button>\r\n-      </div>\r\n-\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1748588849810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\">\r\n+        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\", color: \"#000000\" }}>\r\n           <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n             <div style={{\r\n               width: \"40px\",\r\n               height: \"40px\",\r\n@@ -260,26 +260,8 @@\n                 </p>\r\n               </div>\r\n             </div>\r\n           )}\r\n-\r\n-          <button\r\n-            onClick={() => router.push('/products')}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.75em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\",\r\n-              fontWeight: \"600\"\r\n-            }}\r\n-          >\r\n-            Tiếp tục mua sắm\r\n-          </button>\r\n         </div>\r\n \r\n         {/* Product Information */}\r\n         <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n@@ -334,31 +316,49 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => setIsHelpOpen(true)}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"12px\",\r\n-                fontSize: \"0.75em\",\r\n-                color: \"#000000\",\r\n-                backgroundColor: \"#ffffff\",\r\n-                border: \"1px solid #000\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              MAY WE HELP YOU?\r\n-            </button>\r\n-          </div>\r\n         </div>\r\n       </div>\r\n \r\n+      {/* Buttons Container */}\r\n+      <div className=\"w-full flex flex-col md:flex-row p-4 md:p-6 gap-4\" style={{ backgroundColor: \"white\" }}>\r\n+        <button\r\n+          onClick={() => router.push('/products')}\r\n+          style={{\r\n+            flex: 1,\r\n+            padding: \"12px\",\r\n+            fontSize: \"0.75em\",\r\n+            color: \"#ffffff\",\r\n+            backgroundColor: \"#000000\",\r\n+            border: \"none\",\r\n+            cursor: \"pointer\",\r\n+            textTransform: \"uppercase\",\r\n+            letterSpacing: \"0.1em\",\r\n+            fontWeight: \"600\"\r\n+          }}\r\n+        >\r\n+          Tiếp tục mua sắm\r\n+        </button>\r\n+        <button\r\n+          onClick={() => setIsHelpOpen(true)}\r\n+          style={{\r\n+            flex: 1,\r\n+            padding: \"12px\",\r\n+            fontSize: \"0.75em\",\r\n+            color: \"#000000\",\r\n+            backgroundColor: \"#ffffff\",\r\n+            border: \"1px solid #000\",\r\n+            cursor: \"pointer\",\r\n+            textTransform: \"uppercase\",\r\n+            letterSpacing: \"0.1em\",\r\n+            fontWeight: \"600\"\r\n+          }}\r\n+        >\r\n+          MAY WE HELP YOU?\r\n+        </button>\r\n+      </div>\r\n+\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1748589052925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\", color: \"#000000\" }}>\r\n+        <div className=\"flex-grow p-4 md:p-6\">\r\n           <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n             <div style={{\r\n               width: \"40px\",\r\n               height: \"40px\",\r\n@@ -197,26 +197,26 @@\n               fontWeight: \"600\"\r\n             }}>\r\n               Thông tin đơn hàng\r\n             </h2>\r\n-            <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Ngày đặt: {orderDate}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Ngày đặt: {orderDate}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Họ tên: {order.fullName}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Email: {order.email}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại: {order.phone}</p>\r\n             {order.additionalPhone && (\r\n-              <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n             )}\r\n-            <p style={{ marginBottom: \"6px\" }}>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n               Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n             </p>\r\n-            <p style={{ marginBottom: \"6px\" }}>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n               Phương thức thanh toán: {\r\n                 order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n               }\r\n             </p>\r\n             {order.promoCode && (\r\n-              <p style={{ marginBottom: \"6px\" }}>\r\n+              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n                 Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n               </p>\r\n             )}\r\n             <p style={{ \r\n@@ -260,8 +260,26 @@\n                 </p>\r\n               </div>\r\n             </div>\r\n           )}\r\n+\r\n+          <button\r\n+            onClick={() => router.push('/products')}\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"12px\",\r\n+              fontSize: \"0.75em\",\r\n+              color: \"#ffffff\",\r\n+              backgroundColor: \"#000000\",\r\n+              border: \"none\",\r\n+              cursor: \"pointer\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\",\r\n+              fontWeight: \"600\"\r\n+            }}\r\n+          >\r\n+            Tiếp tục mua sắm\r\n+          </button>\r\n         </div>\r\n \r\n         {/* Product Information */}\r\n         <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n@@ -316,49 +334,31 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n+\r\n+          <div className=\"p-4 pb-12\">\r\n+            <button\r\n+              onClick={() => setIsHelpOpen(true)}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"12px\",\r\n+                fontSize: \"0.75em\",\r\n+                color: \"#000000\",\r\n+                backgroundColor: \"#ffffff\",\r\n+                border: \"1px solid #000\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              MAY WE HELP YOU?\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Buttons Container */}\r\n-      <div className=\"w-full flex flex-col md:flex-row p-4 md:p-6 gap-4\" style={{ backgroundColor: \"white\" }}>\r\n-        <button\r\n-          onClick={() => router.push('/products')}\r\n-          style={{\r\n-            flex: 1,\r\n-            padding: \"12px\",\r\n-            fontSize: \"0.75em\",\r\n-            color: \"#ffffff\",\r\n-            backgroundColor: \"#000000\",\r\n-            border: \"none\",\r\n-            cursor: \"pointer\",\r\n-            textTransform: \"uppercase\",\r\n-            letterSpacing: \"0.1em\",\r\n-            fontWeight: \"600\"\r\n-          }}\r\n-        >\r\n-          Tiếp tục mua sắm\r\n-        </button>\r\n-        <button\r\n-          onClick={() => setIsHelpOpen(true)}\r\n-          style={{\r\n-            flex: 1,\r\n-            padding: \"12px\",\r\n-            fontSize: \"0.75em\",\r\n-            color: \"#000000\",\r\n-            backgroundColor: \"#ffffff\",\r\n-            border: \"1px solid #000\",\r\n-            cursor: \"pointer\",\r\n-            textTransform: \"uppercase\",\r\n-            letterSpacing: \"0.1em\",\r\n-            fontWeight: \"600\"\r\n-          }}\r\n-        >\r\n-          MAY WE HELP YOU?\r\n-        </button>\r\n-      </div>\r\n-\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1748589148230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,26 +197,26 @@\n               fontWeight: \"600\"\r\n             }}>\r\n               Thông tin đơn hàng\r\n             </h2>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Ngày đặt: {orderDate}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Họ tên: {order.fullName}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Email: {order.email}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại: {order.phone}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Ngày đặt: {orderDate}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n             {order.additionalPhone && (\r\n-              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n             )}\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n+            <p style={{ marginBottom: \"6px\" }}>\r\n               Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n             </p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n+            <p style={{ marginBottom: \"6px\" }}>\r\n               Phương thức thanh toán: {\r\n                 order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n               }\r\n             </p>\r\n             {order.promoCode && (\r\n-              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n+              <p style={{ marginBottom: \"6px\" }}>\r\n                 Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n               </p>\r\n             )}\r\n             <p style={{ \r\n"
                },
                {
                    "date": 1748589178358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,43 +187,44 @@\n             </h1>\r\n           </div>\r\n \r\n           <div>\r\n-            <h2 style={{ \r\n-              fontSize: \"0.8em\", \r\n-              color: \"#000000\", \r\n-              textTransform: \"uppercase\", \r\n-              letterSpacing: \"0.1em\", \r\n+            <h2 style={{\r\n+              fontSize: \"0.8em\",\r\n+              color: \"#000000\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\",\r\n               marginBottom: \"12px\",\r\n               fontWeight: \"600\"\r\n             }}>\r\n               Thông tin đơn hàng\r\n             </h2>\r\n-            <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Ngày đặt: {orderDate}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Ngày đặt: {orderDate}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Họ tên: {order.fullName}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Email: {order.email}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại: {order.phone}</p>\r\n             {order.additionalPhone && (\r\n-              <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n             )}\r\n-            <p style={{ marginBottom: \"6px\" }}>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n               Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n             </p>\r\n-            <p style={{ marginBottom: \"6px\" }}>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n               Phương thức thanh toán: {\r\n                 order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n               }\r\n             </p>\r\n             {order.promoCode && (\r\n-              <p style={{ marginBottom: \"6px\" }}>\r\n+              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n                 Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n               </p>\r\n             )}\r\n-            <p style={{ \r\n+            <p style={{\r\n               marginBottom: \"6px\",\r\n               fontSize: \"0.9em\",\r\n-              fontWeight: \"600\"\r\n+              fontWeight: \"600\",\r\n+              fontSize: \"0.8em\"\r\n             }}>\r\n               Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n             </p>\r\n           </div>\r\n"
                },
                {
                    "date": 1748589187476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,8 @@\n               </p>\r\n             )}\r\n             <p style={{\r\n               marginBottom: \"6px\",\r\n-              fontSize: \"0.9em\",\r\n               fontWeight: \"600\",\r\n               fontSize: \"0.8em\"\r\n             }}>\r\n               Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n"
                },
                {
                    "date": 1748589285327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,43 +187,43 @@\n             </h1>\r\n           </div>\r\n \r\n           <div>\r\n-            <h2 style={{\r\n-              fontSize: \"0.8em\",\r\n-              color: \"#000000\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\",\r\n+            <h2 style={{ \r\n+              fontSize: \"0.8em\", \r\n+              color: \"#000000\", \r\n+              textTransform: \"uppercase\", \r\n+              letterSpacing: \"0.1em\", \r\n               marginBottom: \"12px\",\r\n               fontWeight: \"600\"\r\n             }}>\r\n               Thông tin đơn hàng\r\n             </h2>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Ngày đặt: {orderDate}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Họ tên: {order.fullName}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Email: {order.email}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại: {order.phone}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Ngày đặt: {orderDate}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n+            <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n             {order.additionalPhone && (\r\n-              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+              <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n             )}\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n+            <p style={{ marginBottom: \"6px\" }}>\r\n               Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n             </p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n+            <p style={{ marginBottom: \"6px\" }}>\r\n               Phương thức thanh toán: {\r\n                 order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n               }\r\n             </p>\r\n             {order.promoCode && (\r\n-              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n+              <p style={{ marginBottom: \"6px\" }}>\r\n                 Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n               </p>\r\n             )}\r\n-            <p style={{\r\n+            <p style={{ \r\n               marginBottom: \"6px\",\r\n-              fontWeight: \"600\",\r\n-              fontSize: \"0.8em\"\r\n+              fontSize: \"0.9em\",\r\n+              fontWeight: \"600\"\r\n             }}>\r\n               Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n             </p>\r\n           </div>\r\n"
                },
                {
                    "date": 1748589564662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,26 +197,26 @@\n               fontWeight: \"600\"\r\n             }}>\r\n               Thông tin đơn hàng\r\n             </h2>\r\n-            <p style={{ marginBottom: \"6px\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Ngày đặt: {orderDate}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Họ tên: {order.fullName}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Email: {order.email}</p>\r\n-            <p style={{ marginBottom: \"6px\" }}>Số điện thoại: {order.phone}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Ngày đặt: {orderDate}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Họ tên: {order.fullName}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Email: {order.email}</p>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại: {order.phone}</p>\r\n             {order.additionalPhone && (\r\n-              <p style={{ marginBottom: \"6px\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n+              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n             )}\r\n-            <p style={{ marginBottom: \"6px\" }}>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n               Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n             </p>\r\n-            <p style={{ marginBottom: \"6px\" }}>\r\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n               Phương thức thanh toán: {\r\n                 order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n               }\r\n             </p>\r\n             {order.promoCode && (\r\n-              <p style={{ marginBottom: \"6px\" }}>\r\n+              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n                 Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n               </p>\r\n             )}\r\n             <p style={{ \r\n"
                },
                {
                    "date": 1748589608450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,13 +187,13 @@\n             </h1>\r\n           </div>\r\n \r\n           <div>\r\n-            <h2 style={{ \r\n-              fontSize: \"0.8em\", \r\n-              color: \"#000000\", \r\n-              textTransform: \"uppercase\", \r\n-              letterSpacing: \"0.1em\", \r\n+            <h2 style={{\r\n+              fontSize: \"0.8em\",\r\n+              color: \"#000000\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\",\r\n               marginBottom: \"12px\",\r\n               fontWeight: \"600\"\r\n             }}>\r\n               Thông tin đơn hàng\r\n@@ -218,12 +218,13 @@\n               <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n                 Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n               </p>\r\n             )}\r\n-            <p style={{ \r\n+            <p style={{\r\n               marginBottom: \"6px\",\r\n               fontSize: \"0.9em\",\r\n-              fontWeight: \"600\"\r\n+              fontWeight: \"600\",\r\n+              fontSize: \"0.8em\"\r\n             }}>\r\n               Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n             </p>\r\n           </div>\r\n"
                },
                {
                    "date": 1748589633122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,8 @@\n               </p>\r\n             )}\r\n             <p style={{\r\n               marginBottom: \"6px\",\r\n-              fontSize: \"0.9em\",\r\n               fontWeight: \"600\",\r\n               fontSize: \"0.8em\"\r\n             }}>\r\n               Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n"
                },
                {
                    "date": 1748589784452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\">\r\n+        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\", color: \"#000000\" }}>\r\n           <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n             <div style={{\r\n               width: \"40px\",\r\n               height: \"40px\",\r\n@@ -260,26 +260,8 @@\n                 </p>\r\n               </div>\r\n             </div>\r\n           )}\r\n-\r\n-          <button\r\n-            onClick={() => router.push('/products')}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.75em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\",\r\n-              fontWeight: \"600\"\r\n-            }}\r\n-          >\r\n-            Tiếp tục mua sắm\r\n-          </button>\r\n         </div>\r\n \r\n         {/* Product Information */}\r\n         <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n@@ -334,31 +316,49 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => setIsHelpOpen(true)}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"12px\",\r\n-                fontSize: \"0.75em\",\r\n-                color: \"#000000\",\r\n-                backgroundColor: \"#ffffff\",\r\n-                border: \"1px solid #000\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              MAY WE HELP YOU?\r\n-            </button>\r\n-          </div>\r\n         </div>\r\n       </div>\r\n \r\n+      {/* Buttons Container */}\r\n+      <div className=\"w-full flex flex-col md:flex-row p-4 md:p-6 gap-4\" style={{ backgroundColor: \"white\" }}>\r\n+        <button\r\n+          onClick={() => router.push('/products')}\r\n+          style={{\r\n+            flex: 1,\r\n+            padding: \"12px\",\r\n+            fontSize: \"0.75em\",\r\n+            color: \"#ffffff\",\r\n+            backgroundColor: \"#000000\",\r\n+            border: \"none\",\r\n+            cursor: \"pointer\",\r\n+            textTransform: \"uppercase\",\r\n+            letterSpacing: \"0.1em\",\r\n+            fontWeight: \"600\"\r\n+          }}\r\n+        >\r\n+          Tiếp tục mua sắm\r\n+        </button>\r\n+        <button\r\n+          onClick={() => setIsHelpOpen(true)}\r\n+          style={{\r\n+            flex: 1,\r\n+            padding: \"12px\",\r\n+            fontSize: \"0.75em\",\r\n+            color: \"#000000\",\r\n+            backgroundColor: \"#ffffff\",\r\n+            border: \"1px solid #000\",\r\n+            cursor: \"pointer\",\r\n+            textTransform: \"uppercase\",\r\n+            letterSpacing: \"0.1em\",\r\n+            fontWeight: \"600\"\r\n+          }}\r\n+        >\r\n+          MAY WE HELP YOU?\r\n+        </button>\r\n+      </div>\r\n+\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1748589824324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\", color: \"#000000\" }}>\r\n+        <div className=\"flex-grow p-4 md:p-6\">\r\n           <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n             <div style={{\r\n               width: \"40px\",\r\n               height: \"40px\",\r\n@@ -260,8 +260,26 @@\n                 </p>\r\n               </div>\r\n             </div>\r\n           )}\r\n+\r\n+          <button\r\n+            onClick={() => router.push('/products')}\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"12px\",\r\n+              fontSize: \"0.75em\",\r\n+              color: \"#ffffff\",\r\n+              backgroundColor: \"#000000\",\r\n+              border: \"none\",\r\n+              cursor: \"pointer\",\r\n+              textTransform: \"uppercase\",\r\n+              letterSpacing: \"0.1em\",\r\n+              fontWeight: \"600\"\r\n+            }}\r\n+          >\r\n+            Tiếp tục mua sắm\r\n+          </button>\r\n         </div>\r\n \r\n         {/* Product Information */}\r\n         <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n@@ -316,49 +334,31 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n+\r\n+          <div className=\"p-4 pb-12\">\r\n+            <button\r\n+              onClick={() => setIsHelpOpen(true)}\r\n+              style={{\r\n+                width: \"100%\",\r\n+                padding: \"12px\",\r\n+                fontSize: \"0.75em\",\r\n+                color: \"#000000\",\r\n+                backgroundColor: \"#ffffff\",\r\n+                border: \"1px solid #000\",\r\n+                cursor: \"pointer\",\r\n+                textTransform: \"uppercase\",\r\n+                letterSpacing: \"0.1em\",\r\n+                fontWeight: \"600\"\r\n+              }}\r\n+            >\r\n+              MAY WE HELP YOU?\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Buttons Container */}\r\n-      <div className=\"w-full flex flex-col md:flex-row p-4 md:p-6 gap-4\" style={{ backgroundColor: \"white\" }}>\r\n-        <button\r\n-          onClick={() => router.push('/products')}\r\n-          style={{\r\n-            flex: 1,\r\n-            padding: \"12px\",\r\n-            fontSize: \"0.75em\",\r\n-            color: \"#ffffff\",\r\n-            backgroundColor: \"#000000\",\r\n-            border: \"none\",\r\n-            cursor: \"pointer\",\r\n-            textTransform: \"uppercase\",\r\n-            letterSpacing: \"0.1em\",\r\n-            fontWeight: \"600\"\r\n-          }}\r\n-        >\r\n-          Tiếp tục mua sắm\r\n-        </button>\r\n-        <button\r\n-          onClick={() => setIsHelpOpen(true)}\r\n-          style={{\r\n-            flex: 1,\r\n-            padding: \"12px\",\r\n-            fontSize: \"0.75em\",\r\n-            color: \"#000000\",\r\n-            backgroundColor: \"#ffffff\",\r\n-            border: \"1px solid #000\",\r\n-            cursor: \"pointer\",\r\n-            textTransform: \"uppercase\",\r\n-            letterSpacing: \"0.1em\",\r\n-            fontWeight: \"600\"\r\n-          }}\r\n-        >\r\n-          MAY WE HELP YOU?\r\n-        </button>\r\n-      </div>\r\n-\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1748589832850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n   return (\r\n     <>\r\n       <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n         {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\">\r\n+        <div className=\"flex-grow p-4 md:p-6\" style={{ backgroundColor: \"white\", color: \"#000000\" }}>\r\n           <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n             <div style={{\r\n               width: \"40px\",\r\n               height: \"40px\",\r\n@@ -260,26 +260,8 @@\n                 </p>\r\n               </div>\r\n             </div>\r\n           )}\r\n-\r\n-          <button\r\n-            onClick={() => router.push('/products')}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.75em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\",\r\n-              fontWeight: \"600\"\r\n-            }}\r\n-          >\r\n-            Tiếp tục mua sắm\r\n-          </button>\r\n         </div>\r\n \r\n         {/* Product Information */}\r\n         <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n@@ -334,31 +316,48 @@\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => setIsHelpOpen(true)}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"12px\",\r\n-                fontSize: \"0.75em\",\r\n-                color: \"#000000\",\r\n-                backgroundColor: \"#ffffff\",\r\n-                border: \"1px solid #000\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              MAY WE HELP YOU?\r\n-            </button>\r\n-          </div>\r\n         </div>\r\n       </div>\r\n \r\n+      <div className=\"w-full flex flex-col md:flex-row p-4 md:p-6 gap-4\" style={{ backgroundColor: \"white\" }}>\r\n+        <button\r\n+          onClick={() => router.push('/products')}\r\n+          style={{\r\n+            flex: 1,\r\n+            padding: \"12px\",\r\n+            fontSize: \"0.75em\",\r\n+            color: \"#ffffff\",\r\n+            backgroundColor: \"#000000\",\r\n+            border: \"none\",\r\n+            cursor: \"pointer\",\r\n+            textTransform: \"uppercase\",\r\n+            letterSpacing: \"0.1em\",\r\n+            fontWeight: \"600\"\r\n+          }}\r\n+        >\r\n+          Tiếp tục mua sắm\r\n+        </button>\r\n+        <button\r\n+          onClick={() => setIsHelpOpen(true)}\r\n+          style={{\r\n+            flex: 1,\r\n+            padding: \"12px\",\r\n+            fontSize: \"0.75em\",\r\n+            color: \"#000000\",\r\n+            backgroundColor: \"#ffffff\",\r\n+            border: \"1px solid #000\",\r\n+            cursor: \"pointer\",\r\n+            textTransform: \"uppercase\",\r\n+            letterSpacing: \"0.1em\",\r\n+            fontWeight: \"600\"\r\n+          }}\r\n+        >\r\n+          MAY WE HELP YOU?\r\n+        </button>\r\n+      </div>\r\n+\r\n       <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1748589857013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,8 +319,9 @@\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n+      {/* Buttons Container */}\r\n       <div className=\"w-full flex flex-col md:flex-row p-4 md:p-6 gap-4\" style={{ backgroundColor: \"white\" }}>\r\n         <button\r\n           onClick={() => router.push('/products')}\r\n           style={{\r\n"
                },
                {
                    "date": 1748589878648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,366 +1,366 @@\n-\"use client\";\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { useRouter } from 'next/navigation';\r\n-import { useParams } from 'next/navigation';\r\n-import { useSession } from 'next-auth/react';\r\n-import HelpPanel from '../../../components/HelpPanel';\r\n-import dynamic from 'next/dynamic';\r\n-\r\n-interface OrderItem {\r\n-  id: string;\r\n-  name: string;\r\n-  price: number;\r\n-  image: string;\r\n-  size: string;\r\n-  quantity: number;\r\n-  color: string;\r\n-}\r\n-\r\n-interface Order {\r\n-  _id: string;\r\n-  orderCode: string;\r\n-  items: OrderItem[];\r\n-  total: number;\r\n-  status: string;\r\n-  createdAt: string;\r\n-  fullName: string;\r\n-  email: string;\r\n-  phone: string;\r\n-  additionalPhone?: string;\r\n-  apartment?: string;\r\n-  address: string;\r\n-  ward: string;\r\n-  district: string;\r\n-  province: string;\r\n-  paymentMethod: string;\r\n-  promoCode?: string;\r\n-  promoAmount?: number;\r\n-}\r\n-\r\n-interface ApiResponse {\r\n-  ok: boolean;\r\n-  order?: Order;\r\n-  error?: string;\r\n-}\r\n-\r\n-const OrderSuccessPage = () => {\r\n-  const params = useParams();\r\n-  const orderCode = params?.orderCode;\r\n-  const router = useRouter();\r\n-  const { data: session } = useSession();\r\n-  const [order, setOrder] = useState<Order | null>(null);\r\n-  const [isHelpOpen, setIsHelpOpen] = useState(false);\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n-  const [error, setError] = useState<string | null>(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchOrder = async () => {\r\n-      if (!orderCode || typeof orderCode !== 'string') {\r\n-        setError('Order code is missing');\r\n-        setTimeout(() => {\r\n-          router.push('/');\r\n-        }, 3000);\r\n-        setIsLoading(false);\r\n-        return;\r\n-      }\r\n-\r\n-      try {\r\n-        setIsLoading(true);\r\n-        // Get email from session or localStorage\r\n-        const email = session?.user?.email || localStorage.getItem('orderEmail');\r\n-        console.log('Retrieved email:', email);\r\n-\r\n-        if (!email) {\r\n-          setError('Email not found. Please try placing the order again.');\r\n-          setTimeout(() => {\r\n-            router.push('/');\r\n-          }, 3000);\r\n-          return;\r\n-        }\r\n-\r\n-        const url = `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`;\r\n-        console.log('Fetching order with URL:', url);\r\n-\r\n-        const response = await fetch(url);\r\n-        const data: ApiResponse = await response.json();\r\n-\r\n-        console.log('Order fetch response:', data);\r\n-\r\n-        if (response.ok && data.ok && data.order) {\r\n-          setOrder(data.order);\r\n-          setError(null);\r\n-        } else {\r\n-          console.error('Failed to fetch order:', data.error);\r\n-          setError(data.error || 'Failed to fetch order data');\r\n-          setTimeout(() => {\r\n-            router.push('/');\r\n-          }, 3000);\r\n-        }\r\n-      } catch (error) {\r\n-        console.error('Error fetching order:', error);\r\n-        setError('An error occurred while fetching your order');\r\n-        setTimeout(() => {\r\n-          router.push('/');\r\n-        }, 3000);\r\n-      } finally {\r\n-        setIsLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchOrder();\r\n-  }, [orderCode, router, session]);\r\n-\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"text-center\">\r\n-          <p className=\"text-red-500 mb-4\">{error}</p>\r\n-          <p className=\"text-gray-500\">Redirecting to home page...</p>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!order) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"text-center\">\r\n-          <p className=\"text-gray-500 mb-4\">Order not found</p>\r\n-          <button\r\n-            onClick={() => router.push('/')}\r\n-            className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 transition-colors\"\r\n-          >\r\n-            Return to Home\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Format date\r\n-  const orderDate = new Date(order.createdAt).toLocaleDateString('vi-VN', {\r\n-    year: 'numeric',\r\n-    month: 'long',\r\n-    day: 'numeric',\r\n-    hour: '2-digit',\r\n-    minute: '2-digit'\r\n-  });\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\r\n-        {/* Order Success Information */}\r\n-        <div className=\"flex-grow p-4 md:p-6\">\r\n-          <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\r\n-            <div style={{\r\n-              width: \"40px\",\r\n-              height: \"40px\",\r\n-              borderRadius: \"50%\",\r\n-              backgroundColor: \"#000000\",\r\n-              color: \"white\",\r\n-              display: \"flex\",\r\n-              alignItems: \"center\",\r\n-              justifyContent: \"center\",\r\n-              fontSize: \"20px\",\r\n-              margin: \"0 auto 12px\",\r\n-            }}>\r\n-              ✓\r\n-            </div>\r\n-            <h1 style={{ \r\n-              fontSize: \"1em\", \r\n-              color: \"#000000\", \r\n-              textTransform: \"uppercase\", \r\n-              letterSpacing: \"0.1em\", \r\n-              marginBottom: \"16px\",\r\n-              fontWeight: \"600\"\r\n-            }}>\r\n-              Đặt hàng thành công\r\n-            </h1>\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <h2 style={{\r\n-              fontSize: \"0.8em\",\r\n-              color: \"#000000\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\",\r\n-              marginBottom: \"12px\",\r\n-              fontWeight: \"600\"\r\n-            }}>\r\n-              Thông tin đơn hàng\r\n-            </h2>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {order.orderCode}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Ngày đặt: {orderDate}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Họ tên: {order.fullName}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Email: {order.email}</p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại: {order.phone}</p>\r\n-            {order.additionalPhone && (\r\n-              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\r\n-            )}\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n-              Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\r\n-            </p>\r\n-            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n-              Phương thức thanh toán: {\r\n-                order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\r\n-              }\r\n-            </p>\r\n-            {order.promoCode && (\r\n-              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\r\n-                Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\r\n-              </p>\r\n-            )}\r\n-            <p style={{\r\n-              marginBottom: \"6px\",\r\n-              fontWeight: \"600\",\r\n-              fontSize: \"0.8em\"\r\n-            }}>\r\n-              Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\r\n-            </p>\r\n-          </div>\r\n-\r\n-          {order.paymentMethod === 'bank' && (\r\n-            <div style={{\r\n-              padding: \"8px\",\r\n-              border: \"1px solid #e5e7eb\",\r\n-              marginBottom: \"16px\",\r\n-              borderRadius: \"4px\"\r\n-            }}>\r\n-              <h3 style={{\r\n-                fontSize: \"0.75em\",\r\n-                fontWeight: \"bold\",\r\n-                marginBottom: \"6px\",\r\n-                color: \"#000000\"\r\n-              }}>\r\n-                Thông tin chuyển khoản\r\n-              </h3>\r\n-              <div style={{ fontSize: \"0.75em\", color: \"#000000\" }}>\r\n-                <p style={{ marginBottom: \"4px\" }}>Ngân hàng: MB BANK</p>\r\n-                <p style={{ marginBottom: \"4px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n-                <p style={{ marginBottom: \"4px\" }}>Số tài khoản: 024052306</p>\r\n-                <p style={{ marginBottom: \"4px\" }}>\r\n-                  Nội dung chuyển khoản: {order.orderCode} {order.phone}\r\n-                </p>\r\n-                <p style={{\r\n-                  marginTop: \"8px\",\r\n-                  fontStyle: \"italic\",\r\n-                  color: \"#666666\",\r\n-                  fontSize: \"0.7em\"\r\n-                }}>\r\n-                  Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\r\n-                </p>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-\r\n-          <button\r\n-            onClick={() => router.push('/products')}\r\n-            style={{\r\n-              width: \"100%\",\r\n-              padding: \"12px\",\r\n-              fontSize: \"0.75em\",\r\n-              color: \"#ffffff\",\r\n-              backgroundColor: \"#000000\",\r\n-              border: \"none\",\r\n-              cursor: \"pointer\",\r\n-              textTransform: \"uppercase\",\r\n-              letterSpacing: \"0.1em\",\r\n-              fontWeight: \"600\"\r\n-            }}\r\n-          >\r\n-            Tiếp tục mua sắm\r\n-          </button>\r\n-        </div>\r\n-\r\n-        {/* Product Information */}\r\n-        <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\r\n-          <div className=\"flex-grow p-4 md:p-6\">\r\n-            <h2 style={{ \r\n-              fontSize: \"0.8em\", \r\n-              color: \"#000000\", \r\n-              textTransform: \"uppercase\", \r\n-              letterSpacing: \"0.1em\", \r\n-              marginBottom: \"16px\",\r\n-              fontWeight: \"600\",\r\n-              paddingTop: \"8px\"\r\n-            }}>\r\n-              Sản phẩm đã đặt\r\n-            </h2>\r\n-            \r\n-            <div>\r\n-              {order.items.map((item, index) => (\r\n-                <div key={index} style={{ \r\n-                  display: \"flex\", \r\n-                  alignItems: \"center\", \r\n-                  marginBottom: \"8px\",\r\n-                  padding: \"8px\",\r\n-                  border: \"1px solid #e5e7eb\",\r\n-                  borderRadius: \"4px\"\r\n-                }}>\r\n-                  <img \r\n-                    src={item.image} \r\n-                    alt={item.name} \r\n-                    style={{\r\n-                      width: \"60px\",\r\n-                      height: \"60px\",\r\n-                      objectFit: \"cover\",\r\n-                      marginRight: \"8px\"\r\n-                    }}\r\n-                  />\r\n-                  <div style={{ textAlign: \"left\", flex: 1 }}>\r\n-                    <p style={{ \r\n-                      fontSize: \"0.8em\", \r\n-                      fontWeight: \"600\",\r\n-                      marginBottom: \"2px\",\r\n-                      color: \"#000000\"\r\n-                    }}>{item.name}</p>\r\n-                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Size: {item.size}</p>\r\n-                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\r\n-                    <p style={{ \r\n-                      fontSize: \"0.75em\", \r\n-                      color: \"#000000\",\r\n-                      fontWeight: \"bold\" \r\n-                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\r\n-                  </div>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <div className=\"p-4 pb-12\">\r\n-            <button\r\n-              onClick={() => setIsHelpOpen(true)}\r\n-              style={{\r\n-                width: \"100%\",\r\n-                padding: \"12px\",\r\n-                fontSize: \"0.75em\",\r\n-                color: \"#000000\",\r\n-                backgroundColor: \"#ffffff\",\r\n-                border: \"1px solid #000\",\r\n-                cursor: \"pointer\",\r\n-                textTransform: \"uppercase\",\r\n-                letterSpacing: \"0.1em\",\r\n-                fontWeight: \"600\"\r\n-              }}\r\n-            >\r\n-              MAY WE HELP YOU?\r\n-            </button>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n+\"use client\";\n+\n+import { useEffect, useState } from 'react';\n+import { useRouter } from 'next/navigation';\n+import { useParams } from 'next/navigation';\n+import { useSession } from 'next-auth/react';\n+import HelpPanel from '../../../components/HelpPanel';\n+import dynamic from 'next/dynamic';\n+\n+interface OrderItem {\n+  id: string;\n+  name: string;\n+  price: number;\n+  image: string;\n+  size: string;\n+  quantity: number;\n+  color: string;\n+}\n+\n+interface Order {\n+  _id: string;\n+  orderCode: string;\n+  items: OrderItem[];\n+  total: number;\n+  status: string;\n+  createdAt: string;\n+  fullName: string;\n+  email: string;\n+  phone: string;\n+  additionalPhone?: string;\n+  apartment?: string;\n+  address: string;\n+  ward: string;\n+  district: string;\n+  province: string;\n+  paymentMethod: string;\n+  promoCode?: string;\n+  promoAmount?: number;\n+}\n+\n+interface ApiResponse {\n+  ok: boolean;\n+  order?: Order;\n+  error?: string;\n+}\n+\n+const OrderSuccessPage = () => {\n+  const params = useParams();\n+  const orderCode = params?.orderCode;\n+  const router = useRouter();\n+  const { data: session } = useSession();\n+  const [order, setOrder] = useState<Order | null>(null);\n+  const [isHelpOpen, setIsHelpOpen] = useState(false);\n+  const [isLoading, setIsLoading] = useState(true);\n+  const [error, setError] = useState<string | null>(null);\n+\n+  useEffect(() => {\n+    const fetchOrder = async () => {\n+      if (!orderCode || typeof orderCode !== 'string') {\n+        setError('Order code is missing');\n+        setTimeout(() => {\n+          router.push('/');\n+        }, 3000);\n+        setIsLoading(false);\n+        return;\n+      }\n+\n+      try {\n+        setIsLoading(true);\n+        // Get email from session or localStorage\n+        const email = session?.user?.email || localStorage.getItem('orderEmail');\n+        console.log('Retrieved email:', email);\n+\n+        if (!email) {\n+          setError('Email not found. Please try placing the order again.');\n+          setTimeout(() => {\n+            router.push('/');\n+          }, 3000);\n+          return;\n+        }\n+\n+        const url = `/api/orders/${orderCode}?email=${encodeURIComponent(email)}`;\n+        console.log('Fetching order with URL:', url);\n+\n+        const response = await fetch(url);\n+        const data: ApiResponse = await response.json();\n+\n+        console.log('Order fetch response:', data);\n+\n+        if (response.ok && data.ok && data.order) {\n+          setOrder(data.order);\n+          setError(null);\n+        } else {\n+          console.error('Failed to fetch order:', data.error);\n+          setError(data.error || 'Failed to fetch order data');\n+          setTimeout(() => {\n+            router.push('/');\n+          }, 3000);\n+        }\n+      } catch (error) {\n+        console.error('Error fetching order:', error);\n+        setError('An error occurred while fetching your order');\n+        setTimeout(() => {\n+          router.push('/');\n+        }, 3000);\n+      } finally {\n+        setIsLoading(false);\n+      }\n+    };\n+\n+    fetchOrder();\n+  }, [orderCode, router, session]);\n+\n+  if (isLoading) {\n+    return (\n+      <div className=\"min-h-screen flex items-center justify-center\">\n+        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"min-h-screen flex items-center justify-center\">\n+        <div className=\"text-center\">\n+          <p className=\"text-red-500 mb-4\">{error}</p>\n+          <p className=\"text-gray-500\">Redirecting to home page...</p>\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  if (!order) {\n+    return (\n+      <div className=\"min-h-screen flex items-center justify-center\">\n+        <div className=\"text-center\">\n+          <p className=\"text-gray-500 mb-4\">Order not found</p>\n+          <button\n+            onClick={() => router.push('/')}\n+            className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 transition-colors\"\n+          >\n+            Return to Home\n+          </button>\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  // Format date\n+  const orderDate = new Date(order.createdAt).toLocaleDateString('vi-VN', {\n+    year: 'numeric',\n+    month: 'long',\n+    day: 'numeric',\n+    hour: '2-digit',\n+    minute: '2-digit'\n+  });\n+\n+  return (\n+    <>\n+      <div className=\"min-h-screen w-full flex flex-col md:flex-row\" style={{ paddingTop: \"48px\" }}>\n+        {/* Order Success Information */}\n+        <div className=\"flex-grow p-4 md:p-6\">\n+          <div className=\"text-center mb-8 md:mb-12\" style={{ paddingTop: \"8px\" }}>\n+            <div style={{\n+              width: \"40px\",\n+              height: \"40px\",\n+              borderRadius: \"50%\",\n+              backgroundColor: \"#000000\",\n+              color: \"white\",\n+              display: \"flex\",\n+              alignItems: \"center\",\n+              justifyContent: \"center\",\n+              fontSize: \"20px\",\n+              margin: \"0 auto 12px\",\n+            }}>\n+              ✓\n+            </div>\n+            <h1 style={{ \n+              fontSize: \"1em\", \n+              color: \"#000000\", \n+              textTransform: \"uppercase\", \n+              letterSpacing: \"0.1em\", \n+              marginBottom: \"16px\",\n+              fontWeight: \"600\"\n+            }}>\n+              Đặt hàng thành công\n+            </h1>\n+          </div>\n+\n+          <div>\n+            <h2 style={{\n+              fontSize: \"0.8em\",\n+              color: \"#000000\",\n+              textTransform: \"uppercase\",\n+              letterSpacing: \"0.1em\",\n+              marginBottom: \"12px\",\n+              fontWeight: \"600\"\n+            }}>\n+              Thông tin đơn hàng\n+            </h2>\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Mã đơn hàng: {order.orderCode}</p>\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Ngày đặt: {orderDate}</p>\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Họ tên: {order.fullName}</p>\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Email: {order.email}</p>\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại: {order.phone}</p>\n+            {order.additionalPhone && (\n+              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>Số điện thoại phụ: {order.additionalPhone}</p>\n+            )}\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\n+              Địa chỉ: {[order.apartment, order.ward, order.district, order.province].filter(Boolean).join(\", \")}\n+            </p>\n+            <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\n+              Phương thức thanh toán: {\n+                order.paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng' : 'Chuyển khoản ngân hàng'\n+              }\n+            </p>\n+            {order.promoCode && (\n+              <p style={{ marginBottom: \"6px\", fontSize: \"0.8em\" }}>\n+                Mã giảm giá: <b>{order.promoCode}</b> (-{order.promoAmount?.toLocaleString('vi-VN')} VND)\n+              </p>\n+            )}\n+            <p style={{\n+              marginBottom: \"6px\",\n+              fontWeight: \"600\",\n+              fontSize: \"0.8em\"\n+            }}>\n+              Tổng tiền: {order.total?.toLocaleString('vi-VN')} VND\n+            </p>\n+          </div>\n+\n+          {order.paymentMethod === 'bank' && (\n+            <div style={{\n+              padding: \"8px\",\n+              border: \"1px solid #e5e7eb\",\n+              marginBottom: \"16px\",\n+              borderRadius: \"4px\"\n+            }}>\n+              <h3 style={{\n+                fontSize: \"0.75em\",\n+                fontWeight: \"bold\",\n+                marginBottom: \"6px\",\n+                color: \"#000000\"\n+              }}>\n+                Thông tin chuyển khoản\n+              </h3>\n+              <div style={{ fontSize: \"0.75em\", color: \"#000000\" }}>\n+                <p style={{ marginBottom: \"4px\" }}>Ngân hàng: MB BANK</p>\n+                <p style={{ marginBottom: \"4px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\n+                <p style={{ marginBottom: \"4px\" }}>Số tài khoản: 024052306</p>\n+                <p style={{ marginBottom: \"4px\" }}>\n+                  Nội dung chuyển khoản: {order.orderCode} {order.phone}\n+                </p>\n+                <p style={{\n+                  marginTop: \"8px\",\n+                  fontStyle: \"italic\",\n+                  color: \"#666666\",\n+                  fontSize: \"0.7em\"\n+                }}>\n+                  Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\n+                </p>\n+              </div>\n+            </div>\n+          )}\n+\n+          <button\n+            onClick={() => router.push('/products')}\n+            style={{\n+              width: \"100%\",\n+              padding: \"12px\",\n+              fontSize: \"0.75em\",\n+              color: \"#ffffff\",\n+              backgroundColor: \"#000000\",\n+              border: \"none\",\n+              cursor: \"pointer\",\n+              textTransform: \"uppercase\",\n+              letterSpacing: \"0.1em\",\n+              fontWeight: \"600\"\n+            }}\n+          >\n+            Tiếp tục mua sắm\n+          </button>\n+        </div>\n+\n+        {/* Product Information */}\n+        <div className=\"w-full md:w-4/10 bg-white min-h-screen flex flex-col\">\n+          <div className=\"flex-grow p-4 md:p-6\">\n+            <h2 style={{ \n+              fontSize: \"0.8em\", \n+              color: \"#000000\", \n+              textTransform: \"uppercase\", \n+              letterSpacing: \"0.1em\", \n+              marginBottom: \"16px\",\n+              fontWeight: \"600\",\n+              paddingTop: \"8px\"\n+            }}>\n+              Sản phẩm đã đặt\n+            </h2>\n+            \n+            <div>\n+              {order.items.map((item, index) => (\n+                <div key={index} style={{ \n+                  display: \"flex\", \n+                  alignItems: \"center\", \n+                  marginBottom: \"8px\",\n+                  padding: \"8px\",\n+                  border: \"1px solid #e5e7eb\",\n+                  borderRadius: \"4px\"\n+                }}>\n+                  <img \n+                    src={item.image} \n+                    alt={item.name} \n+                    style={{\n+                      width: \"60px\",\n+                      height: \"60px\",\n+                      objectFit: \"cover\",\n+                      marginRight: \"8px\"\n+                    }}\n+                  />\n+                  <div style={{ textAlign: \"left\", flex: 1 }}>\n+                    <p style={{ \n+                      fontSize: \"0.8em\", \n+                      fontWeight: \"600\",\n+                      marginBottom: \"2px\",\n+                      color: \"#000000\"\n+                    }}>{item.name}</p>\n+                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Size: {item.size}</p>\n+                    <p style={{ fontSize: \"0.75em\", color: \"#000000\", marginBottom: \"2px\" }}>Số lượng: {item.quantity}</p>\n+                    <p style={{ \n+                      fontSize: \"0.75em\", \n+                      color: \"#000000\",\n+                      fontWeight: \"bold\" \n+                    }}>Giá: {item.price.toLocaleString('vi-VN')} VND</p>\n+                  </div>\n+                </div>\n+              ))}\n+            </div>\n+          </div>\n+\n+          <div className=\"p-4 pb-12\">\n+            <button\n+              onClick={() => setIsHelpOpen(true)}\n+              style={{\n+                width: \"100%\",\n+                padding: \"12px\",\n+                fontSize: \"0.75em\",\n+                color: \"#000000\",\n+                backgroundColor: \"#ffffff\",\n+                border: \"1px solid #000\",\n+                cursor: \"pointer\",\n+                textTransform: \"uppercase\",\n+                letterSpacing: \"0.1em\",\n+                fontWeight: \"600\"\n+              }}\n+            >\n+              MAY WE HELP YOU?\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+\n+      <HelpPanel isOpen={isHelpOpen} onClose={() => setIsHelpOpen(false)} />\n+    </>\n+  );\n+};\n+\n export default dynamic(() => Promise.resolve(OrderSuccessPage), { ssr: false }); \n\\ No newline at end of file\n"
                }
            ],
            "date": 1747803503209,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\ninterface OrderItem {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  size: string;\r\n  quantity: number;\r\n  color: string;\r\n}\r\n\r\ninterface Order {\r\n  _id: string;\r\n  orderNumber: string;\r\n  items: OrderItem[];\r\n  totalAmount: number;\r\n  status: string;\r\n  createdAt: string;\r\n  shippingAddress: {\r\n    firstName: string;\r\n    lastName: string;\r\n    address: string;\r\n    phone: string;\r\n    additionalPhone?: string;\r\n    apartment?: string;\r\n  };\r\n  paymentMethod: string;\r\n}\r\n\r\nexport default function OrderSuccessPage() {\r\n  const params = useParams();\r\n  const orderCode = params?.orderCode as string;\r\n  const [order, setOrder] = useState<Order | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\r\n        const response = await fetch(`${baseUrl}/api/orders/by-code/${orderCode}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch order');\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (data.ok) {\r\n          setOrder(data.order);\r\n        } else {\r\n          throw new Error(data.error || 'Failed to load order');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching order:', error);\r\n        toast.error('Failed to load order details');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (orderCode) {\r\n      fetchOrder();\r\n    }\r\n  }, [orderCode]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!order) {\r\n    return (\r\n      <div className=\"min-h-screen flex flex-col items-center justify-center\">\r\n        <p className=\"text-xl mb-4\">Order not found</p>\r\n        <Link href=\"/\" className=\"text-blue-600 hover:underline\">\r\n          Return to Home\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white py-16 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-3xl mx-auto\">\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-black mb-2\">Order Confirmed!</h1>\r\n          <p className=\"text-gray-600\">Thank you for your purchase</p>\r\n        </div>\r\n\r\n        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden\">\r\n          <div className=\"p-6 border-b\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Order Number</p>\r\n                <p className=\"font-semibold text-black\">{order.orderNumber}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Date</p>\r\n                <p className=\"font-semibold text-black\">\r\n                  {new Date(order.createdAt).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Status</p>\r\n              <p className=\"font-semibold text-green-600\">{order.status}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6 border-b\">\r\n            <h2 className=\"text-lg font-semibold text-black mb-4\">Order Details</h2>\r\n            <div className=\"space-y-4\">\r\n              {order.items.map((item, index) => (\r\n                <div key={index} className=\"flex items-center gap-4\">\r\n                  <div className=\"relative w-20 h-20\">\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fill\r\n                      className=\"object-cover\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"font-medium text-black\">{item.name}</p>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      Size: {item.size} | Quantity: {item.quantity}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      {(item.price * item.quantity).toLocaleString('vi-VN')} VND\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6 border-b\">\r\n            <h2 className=\"text-lg font-semibold text-black mb-4\">Shipping Information</h2>\r\n            <div className=\"space-y-2\">\r\n              <p className=\"text-black\">\r\n                {order.shippingAddress.firstName} {order.shippingAddress.lastName}\r\n              </p>\r\n              <p className=\"text-gray-600\">{order.shippingAddress.address}</p>\r\n              {order.shippingAddress.apartment && (\r\n                <p className=\"text-gray-600\">{order.shippingAddress.apartment}</p>\r\n              )}\r\n              <p className=\"text-gray-600\">Phone: {order.shippingAddress.phone}</p>\r\n              {order.shippingAddress.additionalPhone && (\r\n                <p className=\"text-gray-600\">\r\n                  Additional Phone: {order.shippingAddress.additionalPhone}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <p className=\"text-lg font-semibold text-black\">Total Amount</p>\r\n              <p className=\"text-lg font-semibold text-black\">\r\n                {order.totalAmount.toLocaleString('vi-VN')} VND\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-between items-center\">\r\n              <p className=\"text-sm text-gray-600\">Payment Method</p>\r\n              <p className=\"text-sm text-gray-600\">{order.paymentMethod}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-8 text-center\">\r\n          <Link\r\n            href=\"/\"\r\n            className=\"inline-block bg-black text-white px-6 py-3 rounded-md hover:bg-gray-800 transition-colors\"\r\n          >\r\n            Continue Shopping\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
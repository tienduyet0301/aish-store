{
    "sourceFile": "src/app/order-success/[orderId]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1747803431314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1747803431314,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\ninterface OrderItem {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  size: string;\r\n  quantity: number;\r\n  color: string;\r\n}\r\n\r\ninterface Order {\r\n  _id: string;\r\n  orderNumber: string;\r\n  items: OrderItem[];\r\n  totalAmount: number;\r\n  status: string;\r\n  createdAt: string;\r\n  shippingAddress: {\r\n    firstName: string;\r\n    lastName: string;\r\n    address: string;\r\n    phone: string;\r\n    additionalPhone?: string;\r\n    apartment?: string;\r\n  };\r\n  paymentMethod: string;\r\n}\r\n\r\nexport default function OrderSuccessPage() {\r\n  const params = useParams();\r\n  const orderId = params?.orderId as string;\r\n  const [order, setOrder] = useState<Order | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\r\n        const response = await fetch(`${baseUrl}/api/orders/${orderId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch order');\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (data.ok) {\r\n          setOrder(data.order);\r\n        } else {\r\n          throw new Error(data.error || 'Failed to load order');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching order:', error);\r\n        toast.error('Failed to load order details');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (orderId) {\r\n      fetchOrder();\r\n    }\r\n  }, [orderId]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!order) {\r\n    return (\r\n      <div className=\"min-h-screen flex flex-col items-center justify-center\">\r\n        <p className=\"text-xl mb-4\">Order not found</p>\r\n        <Link href=\"/\" className=\"text-blue-600 hover:underline\">\r\n          Return to Home\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white py-16 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-3xl mx-auto\">\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-black mb-2\">Order Confirmed!</h1>\r\n          <p className=\"text-gray-600\">Thank you for your purchase</p>\r\n        </div>\r\n\r\n        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden\">\r\n          <div className=\"p-6 border-b\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Order Number</p>\r\n                <p className=\"font-semibold text-black\">{order.orderNumber}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Date</p>\r\n                <p className=\"font-semibold text-black\">\r\n                  {new Date(order.createdAt).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Status</p>\r\n              <p className=\"font-semibold text-green-600\">{order.status}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6 border-b\">\r\n            <h2 className=\"text-lg font-semibold text-black mb-4\">Order Details</h2>\r\n            <div className=\"space-y-4\">\r\n              {order.items.map((item, index) => (\r\n                <div key={index} className=\"flex items-center gap-4\">\r\n                  <div className=\"relative w-20 h-20\">\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fill\r\n                      className=\"object-cover\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"font-medium text-black\">{item.name}</p>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      Size: {item.size} | Quantity: {item.quantity}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      {(item.price * item.quantity).toLocaleString('vi-VN')} VND\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6 border-b\">\r\n            <h2 className=\"text-lg font-semibold text-black mb-4\">Shipping Information</h2>\r\n            <div className=\"space-y-2\">\r\n              <p className=\"text-black\">\r\n                {order.shippingAddress.firstName} {order.shippingAddress.lastName}\r\n              </p>\r\n              <p className=\"text-gray-600\">{order.shippingAddress.address}</p>\r\n              {order.shippingAddress.apartment && (\r\n                <p className=\"text-gray-600\">{order.shippingAddress.apartment}</p>\r\n              )}\r\n              <p className=\"text-gray-600\">Phone: {order.shippingAddress.phone}</p>\r\n              {order.shippingAddress.additionalPhone && (\r\n                <p className=\"text-gray-600\">\r\n                  Additional Phone: {order.shippingAddress.additionalPhone}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <p className=\"text-lg font-semibold text-black\">Total Amount</p>\r\n              <p className=\"text-lg font-semibold text-black\">\r\n                {order.totalAmount.toLocaleString('vi-VN')} VND\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-between items-center\">\r\n              <p className=\"text-sm text-gray-600\">Payment Method</p>\r\n              <p className=\"text-sm text-gray-600\">{order.paymentMethod}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-8 text-center\">\r\n          <Link\r\n            href=\"/\"\r\n            className=\"inline-block bg-black text-white px-6 py-3 rounded-md hover:bg-gray-800 transition-colors\"\r\n          >\r\n            Continue Shopping\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
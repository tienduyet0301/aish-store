{
    "sourceFile": "src/app/login/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 59,
            "patches": [
                {
                    "date": 1746959635362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746959666426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,136 +1,1 @@\n-\"use client\";\r\n-\r\n-import { useState } from \"react\";\r\n-import { signIn } from \"next-auth/react\";\r\n-import { useRouter } from \"next/navigation\";\r\n-import Link from \"next/link\";\r\n-\r\n-export default function LoginPage() {\r\n-  const router = useRouter();\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [error, setError] = useState(\"\");\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [isCheckingEmail, setIsCheckingEmail] = useState(false);\r\n-\r\n-  const handleEmailCheck = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setIsCheckingEmail(true);\r\n-    setError(\"\");\r\n-\r\n-    try {\r\n-      const response = await fetch(\"/api/auth/check-email\", {\r\n-        method: \"POST\",\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-        },\r\n-        body: JSON.stringify({ email }),\r\n-      });\r\n-\r\n-      const data = await response.json();\r\n-\r\n-      if (data.exists) {\r\n-        setShowPassword(true);\r\n-      } else {\r\n-        // Chuyển hướng đến trang đăng ký với email đã nhập\r\n-        router.push(`/register?email=${encodeURIComponent(email)}`);\r\n-      }\r\n-    } catch (error) {\r\n-      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n-    } finally {\r\n-      setIsCheckingEmail(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError(\"\");\r\n-\r\n-    try {\r\n-      const result = await signIn(\"credentials\", {\r\n-        email,\r\n-        password,\r\n-        redirect: false,\r\n-      });\r\n-\r\n-      if (result?.error) {\r\n-        setError(\"Email hoặc mật khẩu không đúng\");\r\n-      } else {\r\n-        router.push(\"/\");\r\n-      }\r\n-    } catch (error) {\r\n-      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n-      <div className=\"max-w-md w-full space-y-8\">\r\n-        <div>\r\n-          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n-            Đăng nhập\r\n-          </h2>\r\n-        </div>\r\n-        {error && (\r\n-          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\r\n-            {error}\r\n-          </div>\r\n-        )}\r\n-        <form className=\"mt-8 space-y-6\" onSubmit={showPassword ? handleLogin : handleEmailCheck}>\r\n-          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n-            <div>\r\n-              <label htmlFor=\"email\" className=\"sr-only\">\r\n-                Email\r\n-              </label>\r\n-              <input\r\n-                id=\"email\"\r\n-                name=\"email\"\r\n-                type=\"email\"\r\n-                required\r\n-                value={email}\r\n-                onChange={(e) => setEmail(e.target.value)}\r\n-                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n-                placeholder=\"Email\"\r\n-              />\r\n-            </div>\r\n-            {showPassword && (\r\n-              <div>\r\n-                <label htmlFor=\"password\" className=\"sr-only\">\r\n-                  Mật khẩu\r\n-                </label>\r\n-                <input\r\n-                  id=\"password\"\r\n-                  name=\"password\"\r\n-                  type=\"password\"\r\n-                  required\r\n-                  value={password}\r\n-                  onChange={(e) => setPassword(e.target.value)}\r\n-                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n-                  placeholder=\"Mật khẩu\"\r\n-                />\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isCheckingEmail}\r\n-              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n-            >\r\n-              {isCheckingEmail ? \"Đang kiểm tra...\" : showPassword ? \"Đăng nhập\" : \"Tiếp tục\"}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div className=\"text-sm\">\r\n-              <Link href=\"/forgot-password\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n-                Quên mật khẩu?\r\n-              </Link>\r\n-            </div>\r\n-          </div>\r\n-        </form>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1746959784270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,142 @@\n- \n\\ No newline at end of file\n+\"use client\";\r\n+import { useState } from \"react\";\r\n+import { useRouter } from \"next/navigation\";\r\n+import { FcGoogle } from \"react-icons/fc\";\r\n+import { motion } from \"framer-motion\";\r\n+import { signIn } from \"next-auth/react\";\r\n+\r\n+export default function LoginPage() {\r\n+  const router = useRouter();\r\n+  const [isFocused, setIsFocused] = useState(false);\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [error, setError] = useState(\"\");\r\n+\r\n+  // Giả lập danh sách email đã đăng ký\r\n+  const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n+\r\n+  // Hàm kiểm tra định dạng email\r\n+  const isValidEmail = (email: string): boolean => {\r\n+    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n+  };\r\n+\r\n+  // Xử lý đăng nhập bằng Google\r\n+  const handleGoogleSignIn = async () => {\r\n+    try {\r\n+      const result = await signIn(\"google\", { redirect: false });\r\n+      if (result?.error) {\r\n+        setError(\"Failed to sign in with Google\");\r\n+      }\r\n+    } catch (error) {\r\n+      setError(\"An error occurred during sign in\");\r\n+    }\r\n+  };\r\n+\r\n+  // Xử lý khi nhấn CONTINUE\r\n+  const handleContinue = () => {\r\n+    if (!email) {\r\n+      setError(\"Please enter a valid email address\");\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isValidEmail(email)) {\r\n+      setError(\"Invalid email format\");\r\n+      return;\r\n+    }\r\n+\r\n+    setError(\"\"); // Xóa lỗi nếu email hợp lệ\r\n+\r\n+    // Kiểm tra email có tồn tại hay không\r\n+    if (registeredEmails.includes(email)) {\r\n+      router.push(\"/dashboard\"); // Nếu có tài khoản, chuyển vào dashboard\r\n+    } else {\r\n+      router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n+      {/* Tiêu đề */}\r\n+      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n+        MY AISH ACCOUNT\r\n+      </h1>\r\n+\r\n+      {/* Nút đăng nhập */}\r\n+      <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n+        <button \r\n+          onClick={handleGoogleSignIn}\r\n+          className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+        >\r\n+          <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n+        </button>\r\n+\r\n+        {/* Dòng OR */}\r\n+        <div className=\"flex items-center justify-center mt-3\">\r\n+          <span className=\"text-black font-semibold\">OR</span>\r\n+        </div>\r\n+\r\n+        {/* Dòng tiếp tục bằng email */}\r\n+        <div className=\"flex justify-center w-full\">\r\n+          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n+            CONTINUE WITH YOUR EMAIL ADDRESS\r\n+          </h2>\r\n+        </div>\r\n+        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n+          <p className=\"text-black text-xs font-semibold\">\r\n+            Sign in with your email and password or create a profile if you are new\r\n+          </p>\r\n+        </div>\r\n+\r\n+        {/* Ô nhập email */}\r\n+        <div className=\"relative w-full mt-4\">\r\n+          {/* Label động */}\r\n+          <motion.label\r\n+            className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+            animate={{\r\n+              top: isFocused || email ? \"4px\" : \"40%\",\r\n+              left: \"8px\",\r\n+              scale: isFocused || email ? 0.75 : 1,\r\n+              translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+            }}\r\n+            transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+          >\r\n+            EMAIL*\r\n+          </motion.label>\r\n+\r\n+          {/* Input */}\r\n+          <input\r\n+            type=\"email\"\r\n+            value={email}\r\n+            onChange={(e) => setEmail(e.target.value)}\r\n+            onFocus={() => setIsFocused(true)}\r\n+            onBlur={() => {\r\n+              setIsFocused(false); // Reset isFocused khi rời input\r\n+              if (!email || !isValidEmail(email)) {\r\n+                setError(\"Please enter a valid email address\");\r\n+              } else {\r\n+                setError(\"\");\r\n+              }\r\n+            }}\r\n+            className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n+              error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n+            }`}\r\n+          />\r\n+          {/* Hiển thị lỗi nếu có */}\r\n+          {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+        </div>\r\n+\r\n+        {/* Nút CONTINUE */}\r\n+        <button\r\n+          onClick={handleContinue}\r\n+          className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+        >\r\n+          CONTINUE\r\n+        </button>\r\n+\r\n+        {/* Dòng JOIN MY AISH */}\r\n+        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n+          JOIN MY AISH\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1746960124302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,18 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n+import { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n \r\n export default function LoginPage() {\r\n   const router = useRouter();\r\n-  const [isFocused, setIsFocused] = useState(false);\r\n+  const [isFocused, setIsFocused] = useState({ email: false, password: false });\r\n   const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n   const [error, setError] = useState(\"\");\r\n+  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const [isExistingUser, setIsExistingUser] = useState(false);\r\n \r\n   // Giả lập danh sách email đã đăng ký\r\n   const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n@@ -30,8 +34,22 @@\n       setError(\"An error occurred during sign in\");\r\n     }\r\n   };\r\n \r\n+  // Xử lý khi nhập email\r\n+  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const newEmail = e.target.value;\r\n+    setEmail(newEmail);\r\n+    setError(\"\");\r\n+\r\n+    // Kiểm tra email có tồn tại không\r\n+    if (isValidEmail(newEmail)) {\r\n+      setIsExistingUser(registeredEmails.includes(newEmail));\r\n+    } else {\r\n+      setIsExistingUser(false);\r\n+    }\r\n+  };\r\n+\r\n   // Xử lý khi nhấn CONTINUE\r\n   const handleContinue = () => {\r\n     if (!email) {\r\n       setError(\"Please enter a valid email address\");\r\n@@ -42,15 +60,17 @@\n       setError(\"Invalid email format\");\r\n       return;\r\n     }\r\n \r\n-    setError(\"\"); // Xóa lỗi nếu email hợp lệ\r\n-\r\n-    // Kiểm tra email có tồn tại hay không\r\n-    if (registeredEmails.includes(email)) {\r\n-      router.push(\"/dashboard\"); // Nếu có tài khoản, chuyển vào dashboard\r\n+    if (isExistingUser) {\r\n+      if (!password) {\r\n+        setError(\"Please enter your password\");\r\n+        return;\r\n+      }\r\n+      // TODO: Xử lý đăng nhập với email và password\r\n+      router.push(\"/dashboard\");\r\n     } else {\r\n-      router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n+      router.push(`/register?email=${email}`);\r\n     }\r\n   };\r\n \r\n   return (\r\n@@ -91,12 +111,12 @@\n           {/* Label động */}\r\n           <motion.label\r\n             className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n             animate={{\r\n-              top: isFocused || email ? \"4px\" : \"40%\",\r\n+              top: isFocused.email || email ? \"4px\" : \"40%\",\r\n               left: \"8px\",\r\n-              scale: isFocused || email ? 0.75 : 1,\r\n-              translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+              scale: isFocused.email || email ? 0.75 : 1,\r\n+              translateY: isFocused.email || email ? \"0\" : \"-50%\",\r\n             }}\r\n             transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n           >\r\n             EMAIL*\r\n@@ -105,12 +125,12 @@\n           {/* Input */}\r\n           <input\r\n             type=\"email\"\r\n             value={email}\r\n-            onChange={(e) => setEmail(e.target.value)}\r\n-            onFocus={() => setIsFocused(true)}\r\n+            onChange={handleEmailChange}\r\n+            onFocus={() => setIsFocused(prev => ({ ...prev, email: true }))}\r\n             onBlur={() => {\r\n-              setIsFocused(false); // Reset isFocused khi rời input\r\n+              setIsFocused(prev => ({ ...prev, email: false }));\r\n               if (!email || !isValidEmail(email)) {\r\n                 setError(\"Please enter a valid email address\");\r\n               } else {\r\n                 setError(\"\");\r\n@@ -119,12 +139,54 @@\n             className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n               error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n             }`}\r\n           />\r\n-          {/* Hiển thị lỗi nếu có */}\r\n-          {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n         </div>\r\n \r\n+        {/* Ô nhập mật khẩu (chỉ hiện khi email đã tồn tại) */}\r\n+        {isExistingUser && (\r\n+          <div className=\"relative w-full mt-4\">\r\n+            <motion.label\r\n+              className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+              animate={{\r\n+                top: isFocused.password || password ? \"4px\" : \"40%\",\r\n+                left: \"8px\",\r\n+                scale: isFocused.password || password ? 0.75 : 1,\r\n+                translateY: isFocused.password || password ? \"0\" : \"-50%\",\r\n+              }}\r\n+              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+            >\r\n+              PASSWORD*\r\n+            </motion.label>\r\n+\r\n+            <div className=\"relative\">\r\n+              <input\r\n+                type={isPasswordVisible ? \"text\" : \"password\"}\r\n+                value={password}\r\n+                onChange={(e) => setPassword(e.target.value)}\r\n+                onFocus={() => setIsFocused(prev => ({ ...prev, password: true }))}\r\n+                onBlur={() => setIsFocused(prev => ({ ...prev, password: false }))}\r\n+                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n+                  error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n+                }`}\r\n+              />\r\n+              <div\r\n+                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n+                onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n+              >\r\n+                {isPasswordVisible ? (\r\n+                  <AiOutlineEye className=\"text-gray-500\" />\r\n+                ) : (\r\n+                  <AiOutlineEyeInvisible className=\"text-gray-500\" />\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Hiển thị lỗi nếu có */}\r\n+        {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+\r\n         {/* Nút CONTINUE */}\r\n         <button\r\n           onClick={handleContinue}\r\n           className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n"
                },
                {
                    "date": 1746960294003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,14 @@\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n import { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n \r\n+// Danh sách khách hàng đã đăng ký (giả lập)\r\n+const registeredUsers = [\r\n+  { email: \"test@example.com\", password: \"Test@123\" },\r\n+  { email: \"user@gmail.com\", password: \"User@123\" },\r\n+];\r\n+\r\n export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState({ email: false, password: false });\r\n   const [email, setEmail] = useState(\"\");\r\n@@ -14,11 +20,8 @@\n   const [error, setError] = useState(\"\");\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const [isExistingUser, setIsExistingUser] = useState(false);\r\n \r\n-  // Giả lập danh sách email đã đăng ký\r\n-  const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n-\r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n     return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n   };\r\n@@ -42,9 +45,10 @@\n     setError(\"\");\r\n \r\n     // Kiểm tra email có tồn tại không\r\n     if (isValidEmail(newEmail)) {\r\n-      setIsExistingUser(registeredEmails.includes(newEmail));\r\n+      const userExists = registeredUsers.some(user => user.email === newEmail);\r\n+      setIsExistingUser(userExists);\r\n     } else {\r\n       setIsExistingUser(false);\r\n     }\r\n   };\r\n@@ -65,10 +69,16 @@\n       if (!password) {\r\n         setError(\"Please enter your password\");\r\n         return;\r\n       }\r\n-      // TODO: Xử lý đăng nhập với email và password\r\n-      router.push(\"/dashboard\");\r\n+\r\n+      // Kiểm tra mật khẩu\r\n+      const user = registeredUsers.find(user => user.email === email);\r\n+      if (user && user.password === password) {\r\n+        router.push(\"/dashboard\");\r\n+      } else {\r\n+        setError(\"Invalid password\");\r\n+      }\r\n     } else {\r\n       router.push(`/register?email=${email}`);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1746960527214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,24 +3,17 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n-import { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n-const registeredUsers = [\r\n-  { email: \"test@example.com\", password: \"Test@123\" },\r\n-  { email: \"user@gmail.com\", password: \"User@123\" },\r\n-];\r\n+const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n export default function LoginPage() {\r\n   const router = useRouter();\r\n-  const [isFocused, setIsFocused] = useState({ email: false, password: false });\r\n+  const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n   const [error, setError] = useState(\"\");\r\n-  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n-  const [isExistingUser, setIsExistingUser] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n     return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n@@ -37,23 +30,8 @@\n       setError(\"An error occurred during sign in\");\r\n     }\r\n   };\r\n \r\n-  // Xử lý khi nhập email\r\n-  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    const newEmail = e.target.value;\r\n-    setEmail(newEmail);\r\n-    setError(\"\");\r\n-\r\n-    // Kiểm tra email có tồn tại không\r\n-    if (isValidEmail(newEmail)) {\r\n-      const userExists = registeredUsers.some(user => user.email === newEmail);\r\n-      setIsExistingUser(userExists);\r\n-    } else {\r\n-      setIsExistingUser(false);\r\n-    }\r\n-  };\r\n-\r\n   // Xử lý khi nhấn CONTINUE\r\n   const handleContinue = () => {\r\n     if (!email) {\r\n       setError(\"Please enter a valid email address\");\r\n@@ -64,23 +42,15 @@\n       setError(\"Invalid email format\");\r\n       return;\r\n     }\r\n \r\n-    if (isExistingUser) {\r\n-      if (!password) {\r\n-        setError(\"Please enter your password\");\r\n-        return;\r\n-      }\r\n+    setError(\"\"); // Xóa lỗi nếu email hợp lệ\r\n \r\n-      // Kiểm tra mật khẩu\r\n-      const user = registeredUsers.find(user => user.email === email);\r\n-      if (user && user.password === password) {\r\n-        router.push(\"/dashboard\");\r\n-      } else {\r\n-        setError(\"Invalid password\");\r\n-      }\r\n+    // Kiểm tra email có tồn tại hay không\r\n+    if (registeredEmails.includes(email)) {\r\n+      router.push(\"/dashboard\"); // Nếu có tài khoản, chuyển vào dashboard\r\n     } else {\r\n-      router.push(`/register?email=${email}`);\r\n+      router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n     }\r\n   };\r\n \r\n   return (\r\n@@ -121,12 +91,12 @@\n           {/* Label động */}\r\n           <motion.label\r\n             className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n             animate={{\r\n-              top: isFocused.email || email ? \"4px\" : \"40%\",\r\n+              top: isFocused || email ? \"4px\" : \"40%\",\r\n               left: \"8px\",\r\n-              scale: isFocused.email || email ? 0.75 : 1,\r\n-              translateY: isFocused.email || email ? \"0\" : \"-50%\",\r\n+              scale: isFocused || email ? 0.75 : 1,\r\n+              translateY: isFocused || email ? \"0\" : \"-50%\",\r\n             }}\r\n             transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n           >\r\n             EMAIL*\r\n@@ -135,12 +105,12 @@\n           {/* Input */}\r\n           <input\r\n             type=\"email\"\r\n             value={email}\r\n-            onChange={handleEmailChange}\r\n-            onFocus={() => setIsFocused(prev => ({ ...prev, email: true }))}\r\n+            onChange={(e) => setEmail(e.target.value)}\r\n+            onFocus={() => setIsFocused(true)}\r\n             onBlur={() => {\r\n-              setIsFocused(prev => ({ ...prev, email: false }));\r\n+              setIsFocused(false); // Reset isFocused khi rời input\r\n               if (!email || !isValidEmail(email)) {\r\n                 setError(\"Please enter a valid email address\");\r\n               } else {\r\n                 setError(\"\");\r\n@@ -149,54 +119,12 @@\n             className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n               error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n             }`}\r\n           />\r\n+          {/* Hiển thị lỗi nếu có */}\r\n+          {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n         </div>\r\n \r\n-        {/* Ô nhập mật khẩu (chỉ hiện khi email đã tồn tại) */}\r\n-        {isExistingUser && (\r\n-          <div className=\"relative w-full mt-4\">\r\n-            <motion.label\r\n-              className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-              animate={{\r\n-                top: isFocused.password || password ? \"4px\" : \"40%\",\r\n-                left: \"8px\",\r\n-                scale: isFocused.password || password ? 0.75 : 1,\r\n-                translateY: isFocused.password || password ? \"0\" : \"-50%\",\r\n-              }}\r\n-              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-            >\r\n-              PASSWORD*\r\n-            </motion.label>\r\n-\r\n-            <div className=\"relative\">\r\n-              <input\r\n-                type={isPasswordVisible ? \"text\" : \"password\"}\r\n-                value={password}\r\n-                onChange={(e) => setPassword(e.target.value)}\r\n-                onFocus={() => setIsFocused(prev => ({ ...prev, password: true }))}\r\n-                onBlur={() => setIsFocused(prev => ({ ...prev, password: false }))}\r\n-                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n-                  error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n-                }`}\r\n-              />\r\n-              <div\r\n-                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\r\n-                onClick={() => setIsPasswordVisible(!isPasswordVisible)}\r\n-              >\r\n-                {isPasswordVisible ? (\r\n-                  <AiOutlineEye className=\"text-gray-500\" />\r\n-                ) : (\r\n-                  <AiOutlineEyeInvisible className=\"text-gray-500\" />\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Hiển thị lỗi nếu có */}\r\n-        {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n-\r\n         {/* Nút CONTINUE */}\r\n         <button\r\n           onClick={handleContinue}\r\n           className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n"
                },
                {
                    "date": 1746960734232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n   const [error, setError] = useState(\"\");\r\n+  const [showAccountFound, setShowAccountFound] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n     return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n@@ -46,9 +47,9 @@\n     setError(\"\"); // Xóa lỗi nếu email hợp lệ\r\n \r\n     // Kiểm tra email có tồn tại hay không\r\n     if (registeredEmails.includes(email)) {\r\n-      router.push(\"/dashboard\"); // Nếu có tài khoản, chuyển vào dashboard\r\n+      setShowAccountFound(true); // Hiển thị thông báo tìm thấy tài khoản\r\n     } else {\r\n       router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n     }\r\n   };\r\n@@ -85,53 +86,73 @@\n             Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n+        {/* Thông báo tìm thấy tài khoản */}\r\n+        {showAccountFound && (\r\n+          <div className=\"w-full bg-gray-50 p-4 rounded-md border border-gray-200\">\r\n+            <h3 className=\"text-lg font-semibold text-black mb-2\">We Found Your Account</h3>\r\n+            <p className=\"text-gray-600 mb-4\">\r\n+              You are registered with {email}, please sign in with Google\r\n+            </p>\r\n+            <button \r\n+              onClick={handleGoogleSignIn}\r\n+              className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+            >\r\n+              <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n+            </button>\r\n+          </div>\r\n+        )}\r\n+\r\n         {/* Ô nhập email */}\r\n-        <div className=\"relative w-full mt-4\">\r\n-          {/* Label động */}\r\n-          <motion.label\r\n-            className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-            animate={{\r\n-              top: isFocused || email ? \"4px\" : \"40%\",\r\n-              left: \"8px\",\r\n-              scale: isFocused || email ? 0.75 : 1,\r\n-              translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-            }}\r\n-            transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-          >\r\n-            EMAIL*\r\n-          </motion.label>\r\n+        {!showAccountFound && (\r\n+          <div className=\"relative w-full mt-4\">\r\n+            {/* Label động */}\r\n+            <motion.label\r\n+              className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+              animate={{\r\n+                top: isFocused || email ? \"4px\" : \"40%\",\r\n+                left: \"8px\",\r\n+                scale: isFocused || email ? 0.75 : 1,\r\n+                translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+              }}\r\n+              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+            >\r\n+              EMAIL*\r\n+            </motion.label>\r\n \r\n-          {/* Input */}\r\n-          <input\r\n-            type=\"email\"\r\n-            value={email}\r\n-            onChange={(e) => setEmail(e.target.value)}\r\n-            onFocus={() => setIsFocused(true)}\r\n-            onBlur={() => {\r\n-              setIsFocused(false); // Reset isFocused khi rời input\r\n-              if (!email || !isValidEmail(email)) {\r\n-                setError(\"Please enter a valid email address\");\r\n-              } else {\r\n-                setError(\"\");\r\n-              }\r\n-            }}\r\n-            className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n-              error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n-            }`}\r\n-          />\r\n-          {/* Hiển thị lỗi nếu có */}\r\n-          {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n-        </div>\r\n+            {/* Input */}\r\n+            <input\r\n+              type=\"email\"\r\n+              value={email}\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              onFocus={() => setIsFocused(true)}\r\n+              onBlur={() => {\r\n+                setIsFocused(false); // Reset isFocused khi rời input\r\n+                if (!email || !isValidEmail(email)) {\r\n+                  setError(\"Please enter a valid email address\");\r\n+                } else {\r\n+                  setError(\"\");\r\n+                }\r\n+              }}\r\n+              className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n+                error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n+              }`}\r\n+            />\r\n+            {/* Hiển thị lỗi nếu có */}\r\n+            {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+          </div>\r\n+        )}\r\n \r\n         {/* Nút CONTINUE */}\r\n-        <button\r\n-          onClick={handleContinue}\r\n-          className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n-        >\r\n-          CONTINUE\r\n-        </button>\r\n+        {!showAccountFound && (\r\n+          <button\r\n+            onClick={handleContinue}\r\n+            className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+          >\r\n+            CONTINUE\r\n+          </button>\r\n+        )}\r\n \r\n         {/* Dòng JOIN MY AISH */}\r\n         <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n           JOIN MY AISH\r\n"
                },
                {
                    "date": 1746960895913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,18 +88,22 @@\n         </div>\r\n \r\n         {/* Thông báo tìm thấy tài khoản */}\r\n         {showAccountFound && (\r\n-          <div className=\"w-full bg-gray-50 p-4 rounded-md border border-gray-200\">\r\n-            <h3 className=\"text-lg font-semibold text-black mb-2\">We Found Your Account</h3>\r\n-            <p className=\"text-gray-600 mb-4\">\r\n-              You are registered with {email}, please sign in with Google\r\n+          <div className=\"flex flex-col items-center justify-center w-full mt-24\">\r\n+            <h2 className=\"text-5xl font-light tracking-wide text-black mb-8 text-center uppercase\">\r\n+              WE FOUND YOUR ACCOUNT\r\n+            </h2>\r\n+            <p className=\"text-lg text-center text-black mb-8\">\r\n+              You are registered with <span className=\"font-semibold\">{email}</span>\r\n             </p>\r\n-            <button \r\n+            <button\r\n               onClick={handleGoogleSignIn}\r\n-              className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+              className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+              style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n             >\r\n-              <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n+              <FcGoogle className=\"text-2xl mr-3\" />\r\n+              <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n             </button>\r\n           </div>\r\n         )}\r\n \r\n"
                },
                {
                    "date": 1746960958010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n \r\n         {/* Thông báo tìm thấy tài khoản */}\r\n         {showAccountFound && (\r\n           <div className=\"flex flex-col items-center justify-center w-full mt-24\">\r\n-            <h2 className=\"text-5xl font-light tracking-wide text-black mb-8 text-center uppercase\">\r\n+            <h2 className=\"text-5xl font-light tracking-wide text-black mb-8 text-center uppercase whitespace-nowrap\">\r\n               WE FOUND YOUR ACCOUNT\r\n             </h2>\r\n             <p className=\"text-lg text-center text-black mb-8\">\r\n               You are registered with <span className=\"font-semibold\">{email}</span>\r\n"
                },
                {
                    "date": 1746960999365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n           <div className=\"flex flex-col items-center justify-center w-full mt-24\">\r\n             <h2 className=\"text-5xl font-light tracking-wide text-black mb-8 text-center uppercase whitespace-nowrap\">\r\n               WE FOUND YOUR ACCOUNT\r\n             </h2>\r\n-            <p className=\"text-lg text-center text-black mb-8\">\r\n+            <p className=\"text-lg text-center text-black mb-8 whitespace-nowrap\">\r\n               You are registered with <span className=\"font-semibold\">{email}</span>\r\n             </p>\r\n             <button\r\n               onClick={handleGoogleSignIn}\r\n"
                },
                {
                    "date": 1746961049316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,12 +89,12 @@\n \r\n         {/* Thông báo tìm thấy tài khoản */}\r\n         {showAccountFound && (\r\n           <div className=\"flex flex-col items-center justify-center w-full mt-24\">\r\n-            <h2 className=\"text-5xl font-light tracking-wide text-black mb-8 text-center uppercase whitespace-nowrap\">\r\n+            <h2 className=\"text-3xl font-light tracking-wide text-black mb-8 text-center uppercase whitespace-nowrap\">\r\n               WE FOUND YOUR ACCOUNT\r\n             </h2>\r\n-            <p className=\"text-lg text-center text-black mb-8 whitespace-nowrap\">\r\n+            <p className=\"text-base text-center text-black mb-8 whitespace-nowrap\">\r\n               You are registered with <span className=\"font-semibold\">{email}</span>\r\n             </p>\r\n             <button\r\n               onClick={handleGoogleSignIn}\r\n"
                },
                {
                    "date": 1746961110926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,13 +88,13 @@\n         </div>\r\n \r\n         {/* Thông báo tìm thấy tài khoản */}\r\n         {showAccountFound && (\r\n-          <div className=\"flex flex-col items-center justify-center w-full mt-24\">\r\n-            <h2 className=\"text-3xl font-light tracking-wide text-black mb-8 text-center uppercase whitespace-nowrap\">\r\n+          <div className=\"flex flex-col items-center justify-center w-full mt-10\">\r\n+            <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n               WE FOUND YOUR ACCOUNT\r\n             </h2>\r\n-            <p className=\"text-base text-center text-black mb-8 whitespace-nowrap\">\r\n+            <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n               You are registered with <span className=\"font-semibold\">{email}</span>\r\n             </p>\r\n             <button\r\n               onClick={handleGoogleSignIn}\r\n"
                },
                {
                    "date": 1746961194503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,11 +64,13 @@\n       {/* Nút đăng nhập */}\r\n       <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"flex items-center justify-center w-full border border-black text-black py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition\"\r\n+          className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n-          <FcGoogle className=\"text-3xl mr-2\" /> CONTINUE WITH GOOGLE\r\n+          <FcGoogle className=\"text-2xl mr-3\" />\r\n+          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-3\">\r\n"
                },
                {
                    "date": 1746961486906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     }\r\n   };\r\n \r\n   // Xử lý khi nhấn CONTINUE\r\n-  const handleContinue = () => {\r\n+  const handleContinue = async () => {\r\n     if (!email) {\r\n       setError(\"Please enter a valid email address\");\r\n       return;\r\n     }\r\n@@ -45,13 +45,23 @@\n     }\r\n \r\n     setError(\"\"); // Xóa lỗi nếu email hợp lệ\r\n \r\n-    // Kiểm tra email có tồn tại hay không\r\n-    if (registeredEmails.includes(email)) {\r\n-      setShowAccountFound(true); // Hiển thị thông báo tìm thấy tài khoản\r\n-    } else {\r\n-      router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n+    // Gọi API kiểm tra email trong database\r\n+    try {\r\n+      const res = await fetch(\"/api/auth/check-email\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email }),\r\n+      });\r\n+      const data = await res.json();\r\n+      if (data.exists) {\r\n+        setShowAccountFound(true); // Hiển thị thông báo tìm thấy tài khoản\r\n+      } else {\r\n+        router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n+      }\r\n+    } catch (err) {\r\n+      setError(\"Something went wrong. Please try again.\");\r\n     }\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1747043609019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,12 @@\n export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n   const [error, setError] = useState(\"\");\r\n   const [showAccountFound, setShowAccountFound] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n     return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n@@ -37,34 +39,53 @@\n     if (!email) {\r\n       setError(\"Please enter a valid email address\");\r\n       return;\r\n     }\r\n-\r\n     if (!isValidEmail(email)) {\r\n       setError(\"Invalid email format\");\r\n       return;\r\n     }\r\n-\r\n-    setError(\"\"); // Xóa lỗi nếu email hợp lệ\r\n-\r\n-    // Gọi API kiểm tra email trong database\r\n+    setError(\"\");\r\n     try {\r\n       const res = await fetch(\"/api/auth/check-email\", {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email }),\r\n       });\r\n       const data = await res.json();\r\n       if (data.exists) {\r\n-        setShowAccountFound(true); // Hiển thị thông báo tìm thấy tài khoản\r\n+        setShowAccountFound(true);\r\n       } else {\r\n-        router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n+        router.push(`/register?email=${email}`);\r\n       }\r\n     } catch (err) {\r\n       setError(\"Something went wrong. Please try again.\");\r\n     }\r\n   };\r\n \r\n+  // Xử lý đăng nhập bằng email + mật khẩu\r\n+  const handlePasswordLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setIsLoading(true);\r\n+    setError(\"\");\r\n+    try {\r\n+      const result = await signIn(\"credentials\", {\r\n+        email,\r\n+        password,\r\n+        redirect: false,\r\n+      });\r\n+      if (result?.error) {\r\n+        setError(\"Email hoặc mật khẩu không đúng\");\r\n+      } else {\r\n+        router.push(\"/\");\r\n+      }\r\n+    } catch (error) {\r\n+      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       {/* Tiêu đề */}\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n@@ -98,78 +119,95 @@\n             Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n-        {/* Thông báo tìm thấy tài khoản */}\r\n-        {showAccountFound && (\r\n-          <div className=\"flex flex-col items-center justify-center w-full mt-10\">\r\n-            <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n-              WE FOUND YOUR ACCOUNT\r\n-            </h2>\r\n-            <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n-              You are registered with <span className=\"font-semibold\">{email}</span>\r\n-            </p>\r\n+        {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n+        {showAccountFound ? (\r\n+          <form onSubmit={handlePasswordLogin} className=\"flex flex-col gap-4 mt-6 w-full\">\r\n+            <div className=\"flex flex-col items-center justify-center w-full\">\r\n+              <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n+                WE FOUND YOUR ACCOUNT\r\n+              </h2>\r\n+              <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n+                You are registered with <span className=\"font-semibold\">{email}</span>\r\n+              </p>\r\n+            </div>\r\n+            <div className=\"relative w-full\">\r\n+              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n+              <input\r\n+                id=\"password\"\r\n+                name=\"password\"\r\n+                type=\"password\"\r\n+                value={password}\r\n+                onChange={e => setPassword(e.target.value)}\r\n+                className=\"w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n+                placeholder=\"Password\"\r\n+                autoComplete=\"current-password\"\r\n+                required\r\n+              />\r\n+            </div>\r\n+            {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n-              onClick={handleGoogleSignIn}\r\n-              className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n-              style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n+              type=\"submit\"\r\n+              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+              disabled={isLoading}\r\n             >\r\n-              <FcGoogle className=\"text-2xl mr-3\" />\r\n-              <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+              {isLoading ? 'Signing in...' : 'Sign in'}\r\n             </button>\r\n-          </div>\r\n-        )}\r\n+          </form>\r\n+        ) : (\r\n+          <>\r\n+            {/* Ô nhập email */}\r\n+            <div className=\"relative w-full mt-4\">\r\n+              {/* Label động */}\r\n+              <motion.label\r\n+                className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                animate={{\r\n+                  top: isFocused || email ? \"4px\" : \"40%\",\r\n+                  left: \"8px\",\r\n+                  scale: isFocused || email ? 0.75 : 1,\r\n+                  translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+                }}\r\n+                transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+              >\r\n+                EMAIL*\r\n+              </motion.label>\r\n \r\n-        {/* Ô nhập email */}\r\n-        {!showAccountFound && (\r\n-          <div className=\"relative w-full mt-4\">\r\n-            {/* Label động */}\r\n-            <motion.label\r\n-              className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-              animate={{\r\n-                top: isFocused || email ? \"4px\" : \"40%\",\r\n-                left: \"8px\",\r\n-                scale: isFocused || email ? 0.75 : 1,\r\n-                translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-              }}\r\n-              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+              {/* Input */}\r\n+              <input\r\n+                type=\"email\"\r\n+                value={email}\r\n+                onChange={(e) => setEmail(e.target.value)}\r\n+                onFocus={() => setIsFocused(true)}\r\n+                onBlur={() => {\r\n+                  setIsFocused(false); // Reset isFocused khi rời input\r\n+                  if (!email || !isValidEmail(email)) {\r\n+                    setError(\"Please enter a valid email address\");\r\n+                  } else {\r\n+                    setError(\"\");\r\n+                  }\r\n+                }}\r\n+                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n+                  error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n+                }`}\r\n+                placeholder=\"Email\"\r\n+                autoComplete=\"email\"\r\n+                required\r\n+              />\r\n+              {/* Hiển thị lỗi nếu có */}\r\n+              {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+            </div>\r\n+\r\n+            {/* Nút CONTINUE */}\r\n+            <button\r\n+              onClick={handleContinue}\r\n+              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n             >\r\n-              EMAIL*\r\n-            </motion.label>\r\n-\r\n-            {/* Input */}\r\n-            <input\r\n-              type=\"email\"\r\n-              value={email}\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              onFocus={() => setIsFocused(true)}\r\n-              onBlur={() => {\r\n-                setIsFocused(false); // Reset isFocused khi rời input\r\n-                if (!email || !isValidEmail(email)) {\r\n-                  setError(\"Please enter a valid email address\");\r\n-                } else {\r\n-                  setError(\"\");\r\n-                }\r\n-              }}\r\n-              className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n-                error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n-              }`}\r\n-            />\r\n-            {/* Hiển thị lỗi nếu có */}\r\n-            {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n-          </div>\r\n+              CONTINUE\r\n+            </button>\r\n+          </>\r\n         )}\r\n \r\n-        {/* Nút CONTINUE */}\r\n-        {!showAccountFound && (\r\n-          <button\r\n-            onClick={handleContinue}\r\n-            className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n-          >\r\n-            CONTINUE\r\n-          </button>\r\n-        )}\r\n-\r\n         {/* Dòng JOIN MY AISH */}\r\n         <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n           JOIN MY AISH\r\n         </div>\r\n"
                },
                {
                    "date": 1747043668936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,10 @@\n export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n   const [error, setError] = useState(\"\");\r\n   const [showAccountFound, setShowAccountFound] = useState(false);\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n     return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n@@ -39,53 +37,34 @@\n     if (!email) {\r\n       setError(\"Please enter a valid email address\");\r\n       return;\r\n     }\r\n+\r\n     if (!isValidEmail(email)) {\r\n       setError(\"Invalid email format\");\r\n       return;\r\n     }\r\n-    setError(\"\");\r\n+\r\n+    setError(\"\"); // Xóa lỗi nếu email hợp lệ\r\n+\r\n+    // Gọi API kiểm tra email trong database\r\n     try {\r\n       const res = await fetch(\"/api/auth/check-email\", {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email }),\r\n       });\r\n       const data = await res.json();\r\n       if (data.exists) {\r\n-        setShowAccountFound(true);\r\n+        setShowAccountFound(true); // Hiển thị thông báo tìm thấy tài khoản\r\n       } else {\r\n-        router.push(`/register?email=${email}`);\r\n+        router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n       }\r\n     } catch (err) {\r\n       setError(\"Something went wrong. Please try again.\");\r\n     }\r\n   };\r\n \r\n-  // Xử lý đăng nhập bằng email + mật khẩu\r\n-  const handlePasswordLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setIsLoading(true);\r\n-    setError(\"\");\r\n-    try {\r\n-      const result = await signIn(\"credentials\", {\r\n-        email,\r\n-        password,\r\n-        redirect: false,\r\n-      });\r\n-      if (result?.error) {\r\n-        setError(\"Email hoặc mật khẩu không đúng\");\r\n-      } else {\r\n-        router.push(\"/\");\r\n-      }\r\n-    } catch (error) {\r\n-      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       {/* Tiêu đề */}\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n@@ -119,95 +98,78 @@\n             Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n-        {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n-        {showAccountFound ? (\r\n-          <form onSubmit={handlePasswordLogin} className=\"flex flex-col gap-4 mt-6 w-full\">\r\n-            <div className=\"flex flex-col items-center justify-center w-full\">\r\n-              <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n-                WE FOUND YOUR ACCOUNT\r\n-              </h2>\r\n-              <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n-                You are registered with <span className=\"font-semibold\">{email}</span>\r\n-              </p>\r\n-            </div>\r\n-            <div className=\"relative w-full\">\r\n-              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n-              <input\r\n-                id=\"password\"\r\n-                name=\"password\"\r\n-                type=\"password\"\r\n-                value={password}\r\n-                onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n-                placeholder=\"Password\"\r\n-                autoComplete=\"current-password\"\r\n-                required\r\n-              />\r\n-            </div>\r\n-            {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n+        {/* Thông báo tìm thấy tài khoản */}\r\n+        {showAccountFound && (\r\n+          <div className=\"flex flex-col items-center justify-center w-full mt-10\">\r\n+            <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n+              WE FOUND YOUR ACCOUNT\r\n+            </h2>\r\n+            <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n+              You are registered with <span className=\"font-semibold\">{email}</span>\r\n+            </p>\r\n             <button\r\n-              type=\"submit\"\r\n-              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n-              disabled={isLoading}\r\n+              onClick={handleGoogleSignIn}\r\n+              className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+              style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n             >\r\n-              {isLoading ? 'Signing in...' : 'Sign in'}\r\n+              <FcGoogle className=\"text-2xl mr-3\" />\r\n+              <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n             </button>\r\n-          </form>\r\n-        ) : (\r\n-          <>\r\n-            {/* Ô nhập email */}\r\n-            <div className=\"relative w-full mt-4\">\r\n-              {/* Label động */}\r\n-              <motion.label\r\n-                className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-                animate={{\r\n-                  top: isFocused || email ? \"4px\" : \"40%\",\r\n-                  left: \"8px\",\r\n-                  scale: isFocused || email ? 0.75 : 1,\r\n-                  translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-                }}\r\n-                transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-              >\r\n-                EMAIL*\r\n-              </motion.label>\r\n+          </div>\r\n+        )}\r\n \r\n-              {/* Input */}\r\n-              <input\r\n-                type=\"email\"\r\n-                value={email}\r\n-                onChange={(e) => setEmail(e.target.value)}\r\n-                onFocus={() => setIsFocused(true)}\r\n-                onBlur={() => {\r\n-                  setIsFocused(false); // Reset isFocused khi rời input\r\n-                  if (!email || !isValidEmail(email)) {\r\n-                    setError(\"Please enter a valid email address\");\r\n-                  } else {\r\n-                    setError(\"\");\r\n-                  }\r\n-                }}\r\n-                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n-                  error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n-                }`}\r\n-                placeholder=\"Email\"\r\n-                autoComplete=\"email\"\r\n-                required\r\n-              />\r\n-              {/* Hiển thị lỗi nếu có */}\r\n-              {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n-            </div>\r\n+        {/* Ô nhập email */}\r\n+        {!showAccountFound && (\r\n+          <div className=\"relative w-full mt-4\">\r\n+            {/* Label động */}\r\n+            <motion.label\r\n+              className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+              animate={{\r\n+                top: isFocused || email ? \"4px\" : \"40%\",\r\n+                left: \"8px\",\r\n+                scale: isFocused || email ? 0.75 : 1,\r\n+                translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+              }}\r\n+              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+            >\r\n+              EMAIL*\r\n+            </motion.label>\r\n \r\n-            {/* Nút CONTINUE */}\r\n-            <button\r\n-              onClick={handleContinue}\r\n-              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n-            >\r\n-              CONTINUE\r\n-            </button>\r\n-          </>\r\n+            {/* Input */}\r\n+            <input\r\n+              type=\"email\"\r\n+              value={email}\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              onFocus={() => setIsFocused(true)}\r\n+              onBlur={() => {\r\n+                setIsFocused(false); // Reset isFocused khi rời input\r\n+                if (!email || !isValidEmail(email)) {\r\n+                  setError(\"Please enter a valid email address\");\r\n+                } else {\r\n+                  setError(\"\");\r\n+                }\r\n+              }}\r\n+              className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n+                error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n+              }`}\r\n+            />\r\n+            {/* Hiển thị lỗi nếu có */}\r\n+            {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+          </div>\r\n         )}\r\n \r\n+        {/* Nút CONTINUE */}\r\n+        {!showAccountFound && (\r\n+          <button\r\n+            onClick={handleContinue}\r\n+            className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+          >\r\n+            CONTINUE\r\n+          </button>\r\n+        )}\r\n+\r\n         {/* Dòng JOIN MY AISH */}\r\n         <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n           JOIN MY AISH\r\n         </div>\r\n"
                },
                {
                    "date": 1747043979145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,14 +11,16 @@\n export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n   const [error, setError] = useState(\"\");\r\n   const [showAccountFound, setShowAccountFound] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n-    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n+    return /^[^\\s@]+@[^\"]+\\.[^\"]+$/.test(email);\r\n   };\r\n \r\n   // Xử lý đăng nhập bằng Google\r\n   const handleGoogleSignIn = async () => {\r\n@@ -37,34 +39,53 @@\n     if (!email) {\r\n       setError(\"Please enter a valid email address\");\r\n       return;\r\n     }\r\n-\r\n     if (!isValidEmail(email)) {\r\n       setError(\"Invalid email format\");\r\n       return;\r\n     }\r\n-\r\n-    setError(\"\"); // Xóa lỗi nếu email hợp lệ\r\n-\r\n-    // Gọi API kiểm tra email trong database\r\n+    setError(\"\");\r\n     try {\r\n       const res = await fetch(\"/api/auth/check-email\", {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email }),\r\n       });\r\n       const data = await res.json();\r\n       if (data.exists) {\r\n-        setShowAccountFound(true); // Hiển thị thông báo tìm thấy tài khoản\r\n+        setShowAccountFound(true);\r\n       } else {\r\n-        router.push(`/register?email=${email}`); // Nếu chưa có, chuyển sang đăng ký\r\n+        router.push(`/register?email=${email}`);\r\n       }\r\n     } catch (err) {\r\n       setError(\"Something went wrong. Please try again.\");\r\n     }\r\n   };\r\n \r\n+  // Xử lý đăng nhập bằng email + mật khẩu\r\n+  const handlePasswordLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setIsLoading(true);\r\n+    setError(\"\");\r\n+    try {\r\n+      const result = await signIn(\"credentials\", {\r\n+        email,\r\n+        password,\r\n+        redirect: false,\r\n+      });\r\n+      if (result?.error) {\r\n+        setError(\"Email hoặc mật khẩu không đúng\");\r\n+      } else {\r\n+        router.push(\"/\");\r\n+      }\r\n+    } catch (error) {\r\n+      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       {/* Tiêu đề */}\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n@@ -98,78 +119,95 @@\n             Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n-        {/* Thông báo tìm thấy tài khoản */}\r\n-        {showAccountFound && (\r\n-          <div className=\"flex flex-col items-center justify-center w-full mt-10\">\r\n-            <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n-              WE FOUND YOUR ACCOUNT\r\n-            </h2>\r\n-            <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n-              You are registered with <span className=\"font-semibold\">{email}</span>\r\n-            </p>\r\n+        {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n+        {showAccountFound ? (\r\n+          <form onSubmit={handlePasswordLogin} className=\"flex flex-col gap-4 mt-6 w-full\">\r\n+            <div className=\"flex flex-col items-center justify-center w-full\">\r\n+              <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n+                WE FOUND YOUR ACCOUNT\r\n+              </h2>\r\n+              <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n+                You are registered with <span className=\"font-semibold\">{email}</span>\r\n+              </p>\r\n+            </div>\r\n+            <div className=\"relative w-full\">\r\n+              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n+              <input\r\n+                id=\"password\"\r\n+                name=\"password\"\r\n+                type=\"password\"\r\n+                value={password}\r\n+                onChange={e => setPassword(e.target.value)}\r\n+                className=\"w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n+                placeholder=\"Password\"\r\n+                autoComplete=\"current-password\"\r\n+                required\r\n+              />\r\n+            </div>\r\n+            {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n-              onClick={handleGoogleSignIn}\r\n-              className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n-              style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n+              type=\"submit\"\r\n+              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+              disabled={isLoading}\r\n             >\r\n-              <FcGoogle className=\"text-2xl mr-3\" />\r\n-              <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+              {isLoading ? 'Signing in...' : 'Sign in'}\r\n             </button>\r\n-          </div>\r\n-        )}\r\n+          </form>\r\n+        ) : (\r\n+          <>\r\n+            {/* Ô nhập email */}\r\n+            <div className=\"relative w-full mt-4\">\r\n+              {/* Label động */}\r\n+              <motion.label\r\n+                className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                animate={{\r\n+                  top: isFocused || email ? \"4px\" : \"40%\",\r\n+                  left: \"8px\",\r\n+                  scale: isFocused || email ? 0.75 : 1,\r\n+                  translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+                }}\r\n+                transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+              >\r\n+                EMAIL*\r\n+              </motion.label>\r\n \r\n-        {/* Ô nhập email */}\r\n-        {!showAccountFound && (\r\n-          <div className=\"relative w-full mt-4\">\r\n-            {/* Label động */}\r\n-            <motion.label\r\n-              className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-              animate={{\r\n-                top: isFocused || email ? \"4px\" : \"40%\",\r\n-                left: \"8px\",\r\n-                scale: isFocused || email ? 0.75 : 1,\r\n-                translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-              }}\r\n-              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+              {/* Input */}\r\n+              <input\r\n+                type=\"email\"\r\n+                value={email}\r\n+                onChange={(e) => setEmail(e.target.value)}\r\n+                onFocus={() => setIsFocused(true)}\r\n+                onBlur={() => {\r\n+                  setIsFocused(false); // Reset isFocused khi rời input\r\n+                  if (!email || !isValidEmail(email)) {\r\n+                    setError(\"Please enter a valid email address\");\r\n+                  } else {\r\n+                    setError(\"\");\r\n+                  }\r\n+                }}\r\n+                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n+                  error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n+                }`}\r\n+                placeholder=\"Email\"\r\n+                autoComplete=\"email\"\r\n+                required\r\n+              />\r\n+              {/* Hiển thị lỗi nếu có */}\r\n+              {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+            </div>\r\n+\r\n+            {/* Nút CONTINUE */}\r\n+            <button\r\n+              onClick={handleContinue}\r\n+              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n             >\r\n-              EMAIL*\r\n-            </motion.label>\r\n-\r\n-            {/* Input */}\r\n-            <input\r\n-              type=\"email\"\r\n-              value={email}\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              onFocus={() => setIsFocused(true)}\r\n-              onBlur={() => {\r\n-                setIsFocused(false); // Reset isFocused khi rời input\r\n-                if (!email || !isValidEmail(email)) {\r\n-                  setError(\"Please enter a valid email address\");\r\n-                } else {\r\n-                  setError(\"\");\r\n-                }\r\n-              }}\r\n-              className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n-                error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n-              }`}\r\n-            />\r\n-            {/* Hiển thị lỗi nếu có */}\r\n-            {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n-          </div>\r\n+              CONTINUE\r\n+            </button>\r\n+          </>\r\n         )}\r\n \r\n-        {/* Nút CONTINUE */}\r\n-        {!showAccountFound && (\r\n-          <button\r\n-            onClick={handleContinue}\r\n-            className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n-          >\r\n-            CONTINUE\r\n-          </button>\r\n-        )}\r\n-\r\n         {/* Dòng JOIN MY AISH */}\r\n         <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n           JOIN MY AISH\r\n         </div>\r\n"
                },
                {
                    "date": 1747044166108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n   const [error, setError] = useState(\"\");\r\n   const [showAccountFound, setShowAccountFound] = useState(false);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n \r\n@@ -135,16 +136,30 @@\n               <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n               <input\r\n                 id=\"password\"\r\n                 name=\"password\"\r\n-                type=\"password\"\r\n+                type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n+                className=\"w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black text-center placeholder:text-center\"\r\n                 placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n+                style={{ textAlign: 'center' }}\r\n               />\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => setShowPassword((prev) => !prev)}\r\n+                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 focus:outline-none\"\r\n+                tabIndex={0}\r\n+                aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n+              >\r\n+                {showPassword ? (\r\n+                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-5.523 0-10-4.477-10-10 0-1.657.403-3.221 1.125-4.575m1.875-2.425A9.956 9.956 0 0112 3c5.523 0 10 4.477 10 10 0 1.657-.403 3.221-1.125 4.575m-1.875 2.425A9.956 9.956 0 0112 21c-5.523 0-10-4.477-10-10 0-1.657.403-3.221 1.125-4.575\" /></svg>\r\n+                ) : (\r\n+                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" /></svg>\r\n+                )}\r\n+              </button>\r\n             </div>\r\n             {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n@@ -178,19 +193,16 @@\n                 value={email}\r\n                 onChange={(e) => setEmail(e.target.value)}\r\n                 onFocus={() => setIsFocused(true)}\r\n                 onBlur={() => {\r\n-                  setIsFocused(false); // Reset isFocused khi rời input\r\n+                  setIsFocused(false);\r\n                   if (!email || !isValidEmail(email)) {\r\n                     setError(\"Please enter a valid email address\");\r\n                   } else {\r\n                     setError(\"\");\r\n                   }\r\n                 }}\r\n-                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${\r\n-                  error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"\r\n-                }`}\r\n-                placeholder=\"Email\"\r\n+                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n                 autoComplete=\"email\"\r\n                 required\r\n               />\r\n               {/* Hiển thị lỗi nếu có */}\r\n"
                },
                {
                    "date": 1747044331274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,13 +139,13 @@\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black text-center placeholder:text-center\"\r\n+                className=\"w-full px-4 py-3 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black text-center placeholder:text-center\"\r\n                 placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n-                style={{ textAlign: 'center' }}\r\n+                style={{ textAlign: 'center', height: '48px', lineHeight: '48px' }}\r\n               />\r\n               <button\r\n                 type=\"button\"\r\n                 onClick={() => setShowPassword((prev) => !prev)}\r\n@@ -153,11 +153,13 @@\n                 tabIndex={0}\r\n                 aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n               >\r\n                 {showPassword ? (\r\n-                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-5.523 0-10-4.477-10-10 0-1.657.403-3.221 1.125-4.575m1.875-2.425A9.956 9.956 0 0112 3c5.523 0 10 4.477 10 10 0 1.657-.403 3.221-1.125 4.575m-1.875 2.425A9.956 9.956 0 0112 21c-5.523 0-10-4.477-10-10 0-1.657.403-3.221 1.125-4.575\" /></svg>\r\n+                  // Basic eye open icon\r\n+                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n                 ) : (\r\n-                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" /></svg>\r\n+                  // Basic eye closed icon\r\n+                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n                 )}\r\n               </button>\r\n             </div>\r\n             {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n"
                },
                {
                    "date": 1747044438266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,13 +139,13 @@\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-full px-4 py-3 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black text-center placeholder:text-center\"\r\n+                className=\"w-full px-4 py-3 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black placeholder:text-left\"\r\n                 placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n-                style={{ textAlign: 'center', height: '48px', lineHeight: '48px' }}\r\n+                style={{ textAlign: 'left', height: '48px', lineHeight: '48px' }}\r\n               />\r\n               <button\r\n                 type=\"button\"\r\n                 onClick={() => setShowPassword((prev) => !prev)}\r\n"
                },
                {
                    "date": 1747046424190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,14 @@\n       setIsLoading(false);\r\n     }\r\n   };\r\n \r\n+  // Reset password when email changes\r\n+  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    setEmail(e.target.value);\r\n+    setPassword(\"\");\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       {/* Tiêu đề */}\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n@@ -192,9 +198,9 @@\n               {/* Input */}\r\n               <input\r\n                 type=\"email\"\r\n                 value={email}\r\n-                onChange={(e) => setEmail(e.target.value)}\r\n+                onChange={handleEmailChange}\r\n                 onFocus={() => setIsFocused(true)}\r\n                 onBlur={() => {\r\n                   setIsFocused(false);\r\n                   if (!email || !isValidEmail(email)) {\r\n"
                },
                {
                    "date": 1747214308711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,12 +25,9 @@\n \r\n   // Xử lý đăng nhập bằng Google\r\n   const handleGoogleSignIn = async () => {\r\n     try {\r\n-      const result = await signIn(\"google\", { redirect: false });\r\n-      if (result?.error) {\r\n-        setError(\"Failed to sign in with Google\");\r\n-      }\r\n+      await signIn(\"google\", { callbackUrl: \"/\" });\r\n     } catch (error) {\r\n       setError(\"An error occurred during sign in\");\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1747215373304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,8 +164,12 @@\n                   <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n                 )}\r\n               </button>\r\n             </div>\r\n+            {/* Thêm mục Quên mật khẩu */}\r\n+            <div className=\"w-full flex justify-end mt-1\">\r\n+              <a href=\"/forgot-password\" className=\"text-xs text-blue-600 hover:underline\">Quên mật khẩu?</a>\r\n+            </div>\r\n             {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n               className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n"
                },
                {
                    "date": 1747215448622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n               </button>\r\n             </div>\r\n             {/* Thêm mục Quên mật khẩu */}\r\n             <div className=\"w-full flex justify-end mt-1\">\r\n-              <a href=\"/forgot-password\" className=\"text-xs text-blue-600 hover:underline\">Quên mật khẩu?</a>\r\n+              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n             </div>\r\n             {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n"
                },
                {
                    "date": 1747275451644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n+import { toast } from \"react-hot-toast\";\r\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n@@ -32,32 +33,31 @@\n     }\r\n   };\r\n \r\n   // Xử lý khi nhấn CONTINUE\r\n-  const handleContinue = async () => {\r\n+  const handleContinue = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n     if (!email) {\r\n-      setError(\"Please enter a valid email address\");\r\n+      toast.error('Please enter your email');\r\n       return;\r\n     }\r\n-    if (!isValidEmail(email)) {\r\n-      setError(\"Invalid email format\");\r\n-      return;\r\n-    }\r\n-    setError(\"\");\r\n+    setIsLoading(true);\r\n     try {\r\n-      const res = await fetch(\"/api/auth/check-email\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n+      const response = await fetch('/api/auth/check-email', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({ email }),\r\n       });\r\n-      const data = await res.json();\r\n+      const data = await response.json();\r\n       if (data.exists) {\r\n-        setShowAccountFound(true);\r\n+        router.push(`/login?email=${encodeURIComponent(email)}`);\r\n       } else {\r\n-        router.push(`/register?email=${email}`);\r\n+        router.push(`/register?email=${encodeURIComponent(email)}`);\r\n       }\r\n-    } catch (err) {\r\n-      setError(\"Something went wrong. Please try again.\");\r\n+    } catch (error) {\r\n+      toast.error('An error occurred');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n     }\r\n   };\r\n \r\n   // Xử lý đăng nhập bằng email + mật khẩu\r\n@@ -219,12 +219,13 @@\n             </div>\r\n \r\n             {/* Nút CONTINUE */}\r\n             <button\r\n-              onClick={handleContinue}\r\n-              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+              type=\"submit\"\r\n+              className=\"w-full bg-black text-white py-3 text-sm uppercase tracking-wider hover:bg-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              disabled={isLoading}\r\n             >\r\n-              CONTINUE\r\n+              {isLoading ? 'Continue...' : 'Continue'}\r\n             </button>\r\n           </>\r\n         )}\r\n \r\n"
                },
                {
                    "date": 1747275506537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n-import { toast } from \"react-hot-toast\";\r\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n@@ -33,31 +32,32 @@\n     }\r\n   };\r\n \r\n   // Xử lý khi nhấn CONTINUE\r\n-  const handleContinue = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n+  const handleContinue = async () => {\r\n     if (!email) {\r\n-      toast.error('Please enter your email');\r\n+      setError(\"Please enter a valid email address\");\r\n       return;\r\n     }\r\n-    setIsLoading(true);\r\n+    if (!isValidEmail(email)) {\r\n+      setError(\"Invalid email format\");\r\n+      return;\r\n+    }\r\n+    setError(\"\");\r\n     try {\r\n-      const response = await fetch('/api/auth/check-email', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n+      const res = await fetch(\"/api/auth/check-email\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email }),\r\n       });\r\n-      const data = await response.json();\r\n+      const data = await res.json();\r\n       if (data.exists) {\r\n-        router.push(`/login?email=${encodeURIComponent(email)}`);\r\n+        setShowAccountFound(true);\r\n       } else {\r\n-        router.push(`/register?email=${encodeURIComponent(email)}`);\r\n+        router.push(`/register?email=${email}`);\r\n       }\r\n-    } catch (error) {\r\n-      toast.error('An error occurred');\r\n-    } finally {\r\n-      setIsLoading(false);\r\n+    } catch (err) {\r\n+      setError(\"Something went wrong. Please try again.\");\r\n     }\r\n   };\r\n \r\n   // Xử lý đăng nhập bằng email + mật khẩu\r\n@@ -219,13 +219,12 @@\n             </div>\r\n \r\n             {/* Nút CONTINUE */}\r\n             <button\r\n-              type=\"submit\"\r\n-              className=\"w-full bg-black text-white py-3 text-sm uppercase tracking-wider hover:bg-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-              disabled={isLoading}\r\n+              onClick={handleContinue}\r\n+              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n             >\r\n-              {isLoading ? 'Continue...' : 'Continue'}\r\n+              CONTINUE\r\n             </button>\r\n           </>\r\n         )}\r\n \r\n"
                },
                {
                    "date": 1747275594863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n       setError(\"Invalid email format\");\r\n       return;\r\n     }\r\n     setError(\"\");\r\n+    setIsLoading(true);\r\n     try {\r\n       const res = await fetch(\"/api/auth/check-email\", {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n@@ -56,8 +57,10 @@\n         router.push(`/register?email=${email}`);\r\n       }\r\n     } catch (err) {\r\n       setError(\"Something went wrong. Please try again.\");\r\n+    } finally {\r\n+      setIsLoading(false);\r\n     }\r\n   };\r\n \r\n   // Xử lý đăng nhập bằng email + mật khẩu\r\n@@ -220,11 +223,12 @@\n \r\n             {/* Nút CONTINUE */}\r\n             <button\r\n               onClick={handleContinue}\r\n-              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              disabled={isLoading}\r\n             >\r\n-              CONTINUE\r\n+              {isLoading ? 'Continue...' : 'Continue'}\r\n             </button>\r\n           </>\r\n         )}\r\n \r\n"
                },
                {
                    "date": 1747276892111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,19 @@\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n+export const metadata = {\r\n+  title: 'Đăng nhập - AISH',\r\n+  description: 'Đăng nhập vào tài khoản AISH để trải nghiệm thời trang cao cấp, dịch vụ khách hàng tận tâm và nhiều ưu đãi hấp dẫn.',\r\n+  keywords: 'AISH, đăng nhập, thời trang, tài khoản, cao cấp',\r\n+  openGraph: {\r\n+    title: 'Đăng nhập - AISH',\r\n+    description: 'Đăng nhập vào tài khoản AISH để trải nghiệm thời trang cao cấp, dịch vụ khách hàng tận tâm và nhiều ưu đãi hấp dẫn.',\r\n+    images: ['/og-image.jpg'],\r\n+  }\r\n+};\r\n+\r\n export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n"
                },
                {
                    "date": 1747276935452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,19 +7,8 @@\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n-export const metadata = {\r\n-  title: 'Đăng nhập - AISH',\r\n-  description: 'Đăng nhập vào tài khoản AISH để trải nghiệm thời trang cao cấp, dịch vụ khách hàng tận tâm và nhiều ưu đãi hấp dẫn.',\r\n-  keywords: 'AISH, đăng nhập, thời trang, tài khoản, cao cấp',\r\n-  openGraph: {\r\n-    title: 'Đăng nhập - AISH',\r\n-    description: 'Đăng nhập vào tài khoản AISH để trải nghiệm thời trang cao cấp, dịch vụ khách hàng tận tâm và nhiều ưu đãi hấp dẫn.',\r\n-    images: ['/og-image.jpg'],\r\n-  }\r\n-};\r\n-\r\n export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n"
                },
                {
                    "date": 1747278101270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,13 @@\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n+export const metadata = {\r\n+  title: 'Đăng nhập - AISH',\r\n+  description: 'Đăng nhập vào tài khoản AISH để trải nghiệm thời trang cao cấp, dịch vụ khách hàng tận tâm và nhiều ưu đãi hấp dẫn.',\r\n+};\r\n+\r\n export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n"
                },
                {
                    "date": 1747278282335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n export const metadata = {\r\n   title: 'Đăng nhập - AISH',\r\n-  description: 'Đăng nhập vào tài khoản AISH để trải nghiệm thời trang cao cấp, dịch vụ khách hàng tận tâm và nhiều ưu đãi hấp dẫn.',\r\n };\r\n \r\n export default function LoginPage() {\r\n   const router = useRouter();\r\n"
                },
                {
                    "date": 1747278988416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,8 @@\n+export const metadata = {\r\n+  title: 'Đăng nhập - AISH',\r\n+};\r\n+\r\n \"use client\";\r\n import { useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n@@ -7,12 +11,8 @@\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n-export const metadata = {\r\n-  title: 'Đăng nhập - AISH',\r\n-};\r\n-\r\n export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n"
                },
                {
                    "date": 1747279049028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,4 @@\n-export const metadata = {\r\n-  title: 'Đăng nhập - AISH',\r\n-};\r\n-\r\n \"use client\";\r\n import { useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n"
                },
                {
                    "date": 1747279060598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,8 @@\n+export const metadata = {\r\n+  title: 'Đăng nhập - AISH',\r\n+};\r\n+\r\n \"use client\";\r\n import { useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n"
                },
                {
                    "date": 1747279068958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,4 @@\n-export const metadata = {\r\n-  title: 'Đăng nhập - AISH',\r\n-};\r\n \r\n \"use client\";\r\n import { useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n@@ -242,5 +239,8 @@\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n-} \n\\ No newline at end of file\n+} \r\n+export const metadata = {\r\n+  title: 'Đăng nhập - AISH',\r\n+};\r\n"
                },
                {
                    "date": 1747279159206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,7 +240,5 @@\n       </div>\r\n     </div>\r\n   );\r\n } \r\n-export const metadata = {\r\n-  title: 'Đăng nhập - AISH',\r\n-};\r\n+\r\n"
                },
                {
                    "date": 1747288602280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-\r\n \"use client\";\r\n import { useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n@@ -48,15 +47,15 @@\n     try {\r\n       const res = await fetch(\"/api/auth/check-email\", {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ email }),\r\n+        body: JSON.stringify({ email: email.toLowerCase() }),\r\n       });\r\n       const data = await res.json();\r\n       if (data.exists) {\r\n         setShowAccountFound(true);\r\n       } else {\r\n-        router.push(`/register?email=${email}`);\r\n+        router.push(`/register?email=${email.toLowerCase()}`);\r\n       }\r\n     } catch (err) {\r\n       setError(\"Something went wrong. Please try again.\");\r\n     } finally {\r\n"
                },
                {
                    "date": 1747289332955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,9 +212,9 @@\n                   } else {\r\n                     setError(\"\");\r\n                   }\r\n                 }}\r\n-                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-md focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n                 autoComplete=\"email\"\r\n                 required\r\n               />\r\n               {/* Hiển thị lỗi nếu có */}\r\n@@ -223,12 +223,15 @@\n \r\n             {/* Nút CONTINUE */}\r\n             <button\r\n               onClick={handleContinue}\r\n-              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               disabled={isLoading}\r\n             >\r\n-              {isLoading ? 'Continue...' : 'Continue'}\r\n+              <span className=\"text-base font-semibold tracking-widest\">\r\n+                {isLoading ? 'Continue...' : 'Continue'}\r\n+              </span>\r\n             </button>\r\n           </>\r\n         )}\r\n \r\n"
                },
                {
                    "date": 1747289387485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,43 +183,45 @@\n           </form>\r\n         ) : (\r\n           <>\r\n             {/* Ô nhập email */}\r\n-            <div className=\"relative w-full mt-4\">\r\n+            <div className=\"relative w-full mt-4 flex justify-center\">\r\n               {/* Label động */}\r\n-              <motion.label\r\n-                className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-                animate={{\r\n-                  top: isFocused || email ? \"4px\" : \"40%\",\r\n-                  left: \"8px\",\r\n-                  scale: isFocused || email ? 0.75 : 1,\r\n-                  translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-                }}\r\n-                transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-              >\r\n-                EMAIL*\r\n-              </motion.label>\r\n+              <div className=\"relative w-[350px]\">\r\n+                <motion.label\r\n+                  className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                  animate={{\r\n+                    top: isFocused || email ? \"4px\" : \"40%\",\r\n+                    left: \"8px\",\r\n+                    scale: isFocused || email ? 0.75 : 1,\r\n+                    translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+                  }}\r\n+                  transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+                >\r\n+                  EMAIL*\r\n+                </motion.label>\r\n \r\n-              {/* Input */}\r\n-              <input\r\n-                type=\"email\"\r\n-                value={email}\r\n-                onChange={handleEmailChange}\r\n-                onFocus={() => setIsFocused(true)}\r\n-                onBlur={() => {\r\n-                  setIsFocused(false);\r\n-                  if (!email || !isValidEmail(email)) {\r\n-                    setError(\"Please enter a valid email address\");\r\n-                  } else {\r\n-                    setError(\"\");\r\n-                  }\r\n-                }}\r\n-                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n-                autoComplete=\"email\"\r\n-                required\r\n-              />\r\n-              {/* Hiển thị lỗi nếu có */}\r\n-              {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+                {/* Input */}\r\n+                <input\r\n+                  type=\"email\"\r\n+                  value={email}\r\n+                  onChange={handleEmailChange}\r\n+                  onFocus={() => setIsFocused(true)}\r\n+                  onBlur={() => {\r\n+                    setIsFocused(false);\r\n+                    if (!email || !isValidEmail(email)) {\r\n+                      setError(\"Please enter a valid email address\");\r\n+                    } else {\r\n+                      setError(\"\");\r\n+                    }\r\n+                  }}\r\n+                  className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  autoComplete=\"email\"\r\n+                  required\r\n+                />\r\n+                {/* Hiển thị lỗi nếu có */}\r\n+                {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+              </div>\r\n             </div>\r\n \r\n             {/* Nút CONTINUE */}\r\n             <button\r\n"
                },
                {
                    "date": 1747289408780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,45 +183,43 @@\n           </form>\r\n         ) : (\r\n           <>\r\n             {/* Ô nhập email */}\r\n-            <div className=\"relative w-full mt-4 flex justify-center\">\r\n+            <div className=\"relative w-full mt-4\">\r\n               {/* Label động */}\r\n-              <div className=\"relative w-[350px]\">\r\n-                <motion.label\r\n-                  className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-                  animate={{\r\n-                    top: isFocused || email ? \"4px\" : \"40%\",\r\n-                    left: \"8px\",\r\n-                    scale: isFocused || email ? 0.75 : 1,\r\n-                    translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-                  }}\r\n-                  transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-                >\r\n-                  EMAIL*\r\n-                </motion.label>\r\n+              <motion.label\r\n+                className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                animate={{\r\n+                  top: isFocused || email ? \"4px\" : \"40%\",\r\n+                  left: \"8px\",\r\n+                  scale: isFocused || email ? 0.75 : 1,\r\n+                  translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+                }}\r\n+                transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+              >\r\n+                EMAIL*\r\n+              </motion.label>\r\n \r\n-                {/* Input */}\r\n-                <input\r\n-                  type=\"email\"\r\n-                  value={email}\r\n-                  onChange={handleEmailChange}\r\n-                  onFocus={() => setIsFocused(true)}\r\n-                  onBlur={() => {\r\n-                    setIsFocused(false);\r\n-                    if (!email || !isValidEmail(email)) {\r\n-                      setError(\"Please enter a valid email address\");\r\n-                    } else {\r\n-                      setError(\"\");\r\n-                    }\r\n-                  }}\r\n-                  className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n-                  autoComplete=\"email\"\r\n-                  required\r\n-                />\r\n-                {/* Hiển thị lỗi nếu có */}\r\n-                {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n-              </div>\r\n+              {/* Input */}\r\n+              <input\r\n+                type=\"email\"\r\n+                value={email}\r\n+                onChange={handleEmailChange}\r\n+                onFocus={() => setIsFocused(true)}\r\n+                onBlur={() => {\r\n+                  setIsFocused(false);\r\n+                  if (!email || !isValidEmail(email)) {\r\n+                    setError(\"Please enter a valid email address\");\r\n+                  } else {\r\n+                    setError(\"\");\r\n+                  }\r\n+                }}\r\n+                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                autoComplete=\"email\"\r\n+                required\r\n+              />\r\n+              {/* Hiển thị lỗi nếu có */}\r\n+              {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n             </div>\r\n \r\n             {/* Nút CONTINUE */}\r\n             <button\r\n"
                },
                {
                    "date": 1747289446358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,43 +183,45 @@\n           </form>\r\n         ) : (\r\n           <>\r\n             {/* Ô nhập email */}\r\n-            <div className=\"relative w-full mt-4\">\r\n+            <div className=\"relative w-full mt-4 flex justify-center\">\r\n               {/* Label động */}\r\n-              <motion.label\r\n-                className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-                animate={{\r\n-                  top: isFocused || email ? \"4px\" : \"40%\",\r\n-                  left: \"8px\",\r\n-                  scale: isFocused || email ? 0.75 : 1,\r\n-                  translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-                }}\r\n-                transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-              >\r\n-                EMAIL*\r\n-              </motion.label>\r\n+              <div className=\"relative w-[350px]\">\r\n+                <motion.label\r\n+                  className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                  animate={{\r\n+                    top: isFocused || email ? \"4px\" : \"40%\",\r\n+                    left: \"8px\",\r\n+                    scale: isFocused || email ? 0.75 : 1,\r\n+                    translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+                  }}\r\n+                  transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+                >\r\n+                  EMAIL*\r\n+                </motion.label>\r\n \r\n-              {/* Input */}\r\n-              <input\r\n-                type=\"email\"\r\n-                value={email}\r\n-                onChange={handleEmailChange}\r\n-                onFocus={() => setIsFocused(true)}\r\n-                onBlur={() => {\r\n-                  setIsFocused(false);\r\n-                  if (!email || !isValidEmail(email)) {\r\n-                    setError(\"Please enter a valid email address\");\r\n-                  } else {\r\n-                    setError(\"\");\r\n-                  }\r\n-                }}\r\n-                className={`w-full px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n-                autoComplete=\"email\"\r\n-                required\r\n-              />\r\n-              {/* Hiển thị lỗi nếu có */}\r\n-              {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+                {/* Input */}\r\n+                <input\r\n+                  type=\"email\"\r\n+                  value={email}\r\n+                  onChange={handleEmailChange}\r\n+                  onFocus={() => setIsFocused(true)}\r\n+                  onBlur={() => {\r\n+                    setIsFocused(false);\r\n+                    if (!email || !isValidEmail(email)) {\r\n+                      setError(\"Please enter a valid email address\");\r\n+                    } else {\r\n+                      setError(\"\");\r\n+                    }\r\n+                  }}\r\n+                  className={`w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  autoComplete=\"email\"\r\n+                  required\r\n+                />\r\n+                {/* Hiển thị lỗi nếu có */}\r\n+                {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+              </div>\r\n             </div>\r\n \r\n             {/* Nút CONTINUE */}\r\n             <button\r\n"
                },
                {
                    "date": 1747289505351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,12 +182,13 @@\n             </button>\r\n           </form>\r\n         ) : (\r\n           <>\r\n-            {/* Ô nhập email */}\r\n-            <div className=\"relative w-full mt-4 flex justify-center\">\r\n-              {/* Label động */}\r\n+            {/* Container cho email và continue button */}\r\n+            <div className=\"flex flex-col items-center gap-4 mt-4\">\r\n+              {/* Ô nhập email */}\r\n               <div className=\"relative w-[350px]\">\r\n+                {/* Label động */}\r\n                 <motion.label\r\n                   className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n                   animate={{\r\n                     top: isFocused || email ? \"4px\" : \"40%\",\r\n@@ -220,21 +221,21 @@\n                 />\r\n                 {/* Hiển thị lỗi nếu có */}\r\n                 {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n               </div>\r\n+\r\n+              {/* Nút CONTINUE */}\r\n+              <button\r\n+                onClick={handleContinue}\r\n+                className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+                style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n+                disabled={isLoading}\r\n+              >\r\n+                <span className=\"text-base font-semibold tracking-widest\">\r\n+                  {isLoading ? 'Continue...' : 'Continue'}\r\n+                </span>\r\n+              </button>\r\n             </div>\r\n-\r\n-            {/* Nút CONTINUE */}\r\n-            <button\r\n-              onClick={handleContinue}\r\n-              className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-              style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n-              disabled={isLoading}\r\n-            >\r\n-              <span className=\"text-base font-semibold tracking-widest\">\r\n-                {isLoading ? 'Continue...' : 'Continue'}\r\n-              </span>\r\n-            </button>\r\n           </>\r\n         )}\r\n \r\n         {/* Dòng JOIN MY AISH */}\r\n"
                },
                {
                    "date": 1747289520920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,249 @@\n+\"use client\";\r\n+import { useState } from \"react\";\r\n+import { useRouter } from \"next/navigation\";\r\n+import { FcGoogle } from \"react-icons/fc\";\r\n+import { motion } from \"framer-motion\";\r\n+import { signIn } from \"next-auth/react\";\r\n+\r\n+// Danh sách khách hàng đã đăng ký (giả lập)\r\n+const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n+\r\n+export default function LoginPage() {\r\n+  const router = useRouter();\r\n+  const [isFocused, setIsFocused] = useState(false);\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState(\"\");\r\n+  const [showAccountFound, setShowAccountFound] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+\r\n+  // Hàm kiểm tra định dạng email\r\n+  const isValidEmail = (email: string): boolean => {\r\n+    return /^[^\\s@]+@[^\"]+\\.[^\"]+$/.test(email);\r\n+  };\r\n+\r\n+  // Xử lý đăng nhập bằng Google\r\n+  const handleGoogleSignIn = async () => {\r\n+    try {\r\n+      await signIn(\"google\", { callbackUrl: \"/\" });\r\n+    } catch (error) {\r\n+      setError(\"An error occurred during sign in\");\r\n+    }\r\n+  };\r\n+\r\n+  // Xử lý khi nhấn CONTINUE\r\n+  const handleContinue = async () => {\r\n+    if (!email) {\r\n+      setError(\"Please enter a valid email address\");\r\n+      return;\r\n+    }\r\n+    if (!isValidEmail(email)) {\r\n+      setError(\"Invalid email format\");\r\n+      return;\r\n+    }\r\n+    setError(\"\");\r\n+    setIsLoading(true);\r\n+    try {\r\n+      const res = await fetch(\"/api/auth/check-email\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email: email.toLowerCase() }),\r\n+      });\r\n+      const data = await res.json();\r\n+      if (data.exists) {\r\n+        setShowAccountFound(true);\r\n+      } else {\r\n+        router.push(`/register?email=${email.toLowerCase()}`);\r\n+      }\r\n+    } catch (err) {\r\n+      setError(\"Something went wrong. Please try again.\");\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  // Xử lý đăng nhập bằng email + mật khẩu\r\n+  const handlePasswordLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setIsLoading(true);\r\n+    setError(\"\");\r\n+    try {\r\n+      const result = await signIn(\"credentials\", {\r\n+        email,\r\n+        password,\r\n+        redirect: false,\r\n+      });\r\n+      if (result?.error) {\r\n+        setError(\"Email hoặc mật khẩu không đúng\");\r\n+      } else {\r\n+        router.push(\"/\");\r\n+      }\r\n+    } catch (error) {\r\n+      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  // Reset password when email changes\r\n+  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    setEmail(e.target.value);\r\n+    setPassword(\"\");\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n+      {/* Tiêu đề */}\r\n+      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n+        MY AISH ACCOUNT\r\n+      </h1>\r\n+\r\n+      {/* Nút đăng nhập */}\r\n+      <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n+        <button \r\n+          onClick={handleGoogleSignIn}\r\n+          className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n+        >\r\n+          <FcGoogle className=\"text-2xl mr-3\" />\r\n+          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+        </button>\r\n+\r\n+        {/* Dòng OR */}\r\n+        <div className=\"flex items-center justify-center mt-3\">\r\n+          <span className=\"text-black font-semibold\">OR</span>\r\n+        </div>\r\n+\r\n+        {/* Dòng tiếp tục bằng email */}\r\n+        <div className=\"flex justify-center w-full\">\r\n+          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n+            CONTINUE WITH YOUR EMAIL ADDRESS\r\n+          </h2>\r\n+        </div>\r\n+        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n+          <p className=\"text-black text-xs font-semibold\">\r\n+            Sign in with your email and password or create a profile if you are new\r\n+          </p>\r\n+        </div>\r\n+\r\n+        {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n+        {showAccountFound ? (\r\n+          <form onSubmit={handlePasswordLogin} className=\"flex flex-col gap-4 mt-6 w-full\">\r\n+            <div className=\"flex flex-col items-center justify-center w-full\">\r\n+              <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n+                WE FOUND YOUR ACCOUNT\r\n+              </h2>\r\n+              <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n+                You are registered with <span className=\"font-semibold\">{email}</span>\r\n+              </p>\r\n+            </div>\r\n+            <div className=\"relative w-full\">\r\n+              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n+              <input\r\n+                id=\"password\"\r\n+                name=\"password\"\r\n+                type={showPassword ? \"text\" : \"password\"}\r\n+                value={password}\r\n+                onChange={e => setPassword(e.target.value)}\r\n+                className=\"w-full px-4 py-3 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black placeholder:text-left\"\r\n+                placeholder=\"Password\"\r\n+                autoComplete=\"current-password\"\r\n+                required\r\n+                style={{ textAlign: 'left', height: '48px', lineHeight: '48px' }}\r\n+              />\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => setShowPassword((prev) => !prev)}\r\n+                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 focus:outline-none\"\r\n+                tabIndex={0}\r\n+                aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n+              >\r\n+                {showPassword ? (\r\n+                  // Basic eye open icon\r\n+                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n+                ) : (\r\n+                  // Basic eye closed icon\r\n+                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n+                )}\r\n+              </button>\r\n+            </div>\r\n+            {/* Thêm mục Quên mật khẩu */}\r\n+            <div className=\"w-full flex justify-end mt-1\">\r\n+              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n+            </div>\r\n+            {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+              disabled={isLoading}\r\n+            >\r\n+              {isLoading ? 'Signing in...' : 'Sign in'}\r\n+            </button>\r\n+          </form>\r\n+        ) : (\r\n+          <>\r\n+            {/* Container cho email và continue button */}\r\n+            <div className=\"flex flex-col items-center gap-4 mt-4\">\r\n+              {/* Ô nhập email */}\r\n+              <div className=\"relative w-[350px]\">\r\n+                {/* Label động */}\r\n+                <motion.label\r\n+                  className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                  animate={{\r\n+                    top: isFocused || email ? \"4px\" : \"40%\",\r\n+                    left: \"8px\",\r\n+                    scale: isFocused || email ? 0.75 : 1,\r\n+                    translateY: isFocused || email ? \"0\" : \"-50%\",\r\n+                  }}\r\n+                  transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n+                >\r\n+                  EMAIL*\r\n+                </motion.label>\r\n+\r\n+                {/* Input */}\r\n+                <input\r\n+                  type=\"email\"\r\n+                  value={email}\r\n+                  onChange={handleEmailChange}\r\n+                  onFocus={() => setIsFocused(true)}\r\n+                  onBlur={() => {\r\n+                    setIsFocused(false);\r\n+                    if (!email || !isValidEmail(email)) {\r\n+                      setError(\"Please enter a valid email address\");\r\n+                    } else {\r\n+                      setError(\"\");\r\n+                    }\r\n+                  }}\r\n+                  className={`w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  autoComplete=\"email\"\r\n+                  required\r\n+                />\r\n+                {/* Hiển thị lỗi nếu có */}\r\n+                {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+              </div>\r\n+\r\n+              {/* Nút CONTINUE */}\r\n+              <button\r\n+                onClick={handleContinue}\r\n+                className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+                style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n+                disabled={isLoading}\r\n+              >\r\n+                <span className=\"text-base font-semibold tracking-widest\">\r\n+                  {isLoading ? 'Continue...' : 'Continue'}\r\n+                </span>\r\n+              </button>\r\n+            </div>\r\n+          </>\r\n+        )}\r\n+\r\n+        {/* Dòng JOIN MY AISH */}\r\n+        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n+          JOIN MY AISH\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+} \r\n+\r\n"
                },
                {
                    "date": 1747289577597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,30 +128,29 @@\n         </div>\r\n \r\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n         {showAccountFound ? (\r\n-          <form onSubmit={handlePasswordLogin} className=\"flex flex-col gap-4 mt-6 w-full\">\r\n-            <div className=\"flex flex-col items-center justify-center w-full\">\r\n+          <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-6\">\r\n+            <div className=\"flex flex-col items-center justify-center\">\r\n               <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n                 WE FOUND YOUR ACCOUNT\r\n               </h2>\r\n               <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n                 You are registered with <span className=\"font-semibold\">{email}</span>\r\n               </p>\r\n             </div>\r\n-            <div className=\"relative w-full\">\r\n+            <div className=\"relative w-[350px]\">\r\n               <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n               <input\r\n                 id=\"password\"\r\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-full px-4 py-3 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black placeholder:text-left\"\r\n+                className=\"w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n                 placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n-                style={{ textAlign: 'left', height: '48px', lineHeight: '48px' }}\r\n               />\r\n               <button\r\n                 type=\"button\"\r\n                 onClick={() => setShowPassword((prev) => !prev)}\r\n@@ -159,27 +158,28 @@\n                 tabIndex={0}\r\n                 aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n               >\r\n                 {showPassword ? (\r\n-                  // Basic eye open icon\r\n                   <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n                 ) : (\r\n-                  // Basic eye closed icon\r\n                   <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n                 )}\r\n               </button>\r\n             </div>\r\n             {/* Thêm mục Quên mật khẩu */}\r\n-            <div className=\"w-full flex justify-end mt-1\">\r\n+            <div className=\"w-[350px] flex justify-end mt-1\">\r\n               <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n             </div>\r\n             {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n-              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n+              className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               disabled={isLoading}\r\n             >\r\n-              {isLoading ? 'Signing in...' : 'Sign in'}\r\n+              <span className=\"text-base font-semibold tracking-widest\">\r\n+                {isLoading ? 'Signing in...' : 'Sign in'}\r\n+              </span>\r\n             </button>\r\n           </form>\r\n         ) : (\r\n           <>\r\n@@ -246,253 +246,4 @@\n     </div>\r\n   );\r\n } \r\n \r\n-\"use client\";\r\n-import { useState } from \"react\";\r\n-import { useRouter } from \"next/navigation\";\r\n-import { FcGoogle } from \"react-icons/fc\";\r\n-import { motion } from \"framer-motion\";\r\n-import { signIn } from \"next-auth/react\";\r\n-\r\n-// Danh sách khách hàng đã đăng ký (giả lập)\r\n-const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n-\r\n-export default function LoginPage() {\r\n-  const router = useRouter();\r\n-  const [isFocused, setIsFocused] = useState(false);\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState(\"\");\r\n-  const [showAccountFound, setShowAccountFound] = useState(false);\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-\r\n-  // Hàm kiểm tra định dạng email\r\n-  const isValidEmail = (email: string): boolean => {\r\n-    return /^[^\\s@]+@[^\"]+\\.[^\"]+$/.test(email);\r\n-  };\r\n-\r\n-  // Xử lý đăng nhập bằng Google\r\n-  const handleGoogleSignIn = async () => {\r\n-    try {\r\n-      await signIn(\"google\", { callbackUrl: \"/\" });\r\n-    } catch (error) {\r\n-      setError(\"An error occurred during sign in\");\r\n-    }\r\n-  };\r\n-\r\n-  // Xử lý khi nhấn CONTINUE\r\n-  const handleContinue = async () => {\r\n-    if (!email) {\r\n-      setError(\"Please enter a valid email address\");\r\n-      return;\r\n-    }\r\n-    if (!isValidEmail(email)) {\r\n-      setError(\"Invalid email format\");\r\n-      return;\r\n-    }\r\n-    setError(\"\");\r\n-    setIsLoading(true);\r\n-    try {\r\n-      const res = await fetch(\"/api/auth/check-email\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ email: email.toLowerCase() }),\r\n-      });\r\n-      const data = await res.json();\r\n-      if (data.exists) {\r\n-        setShowAccountFound(true);\r\n-      } else {\r\n-        router.push(`/register?email=${email.toLowerCase()}`);\r\n-      }\r\n-    } catch (err) {\r\n-      setError(\"Something went wrong. Please try again.\");\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Xử lý đăng nhập bằng email + mật khẩu\r\n-  const handlePasswordLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setIsLoading(true);\r\n-    setError(\"\");\r\n-    try {\r\n-      const result = await signIn(\"credentials\", {\r\n-        email,\r\n-        password,\r\n-        redirect: false,\r\n-      });\r\n-      if (result?.error) {\r\n-        setError(\"Email hoặc mật khẩu không đúng\");\r\n-      } else {\r\n-        router.push(\"/\");\r\n-      }\r\n-    } catch (error) {\r\n-      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Reset password when email changes\r\n-  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    setEmail(e.target.value);\r\n-    setPassword(\"\");\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n-      {/* Tiêu đề */}\r\n-      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n-        MY AISH ACCOUNT\r\n-      </h1>\r\n-\r\n-      {/* Nút đăng nhập */}\r\n-      <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n-        <button \r\n-          onClick={handleGoogleSignIn}\r\n-          className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n-          style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n-        >\r\n-          <FcGoogle className=\"text-2xl mr-3\" />\r\n-          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n-        </button>\r\n-\r\n-        {/* Dòng OR */}\r\n-        <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">OR</span>\r\n-        </div>\r\n-\r\n-        {/* Dòng tiếp tục bằng email */}\r\n-        <div className=\"flex justify-center w-full\">\r\n-          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n-            CONTINUE WITH YOUR EMAIL ADDRESS\r\n-          </h2>\r\n-        </div>\r\n-        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n-          <p className=\"text-black text-xs font-semibold\">\r\n-            Sign in with your email and password or create a profile if you are new\r\n-          </p>\r\n-        </div>\r\n-\r\n-        {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n-        {showAccountFound ? (\r\n-          <form onSubmit={handlePasswordLogin} className=\"flex flex-col gap-4 mt-6 w-full\">\r\n-            <div className=\"flex flex-col items-center justify-center w-full\">\r\n-              <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n-                WE FOUND YOUR ACCOUNT\r\n-              </h2>\r\n-              <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n-                You are registered with <span className=\"font-semibold\">{email}</span>\r\n-              </p>\r\n-            </div>\r\n-            <div className=\"relative w-full\">\r\n-              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n-              <input\r\n-                id=\"password\"\r\n-                name=\"password\"\r\n-                type={showPassword ? \"text\" : \"password\"}\r\n-                value={password}\r\n-                onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-full px-4 py-3 text-base text-black border rounded-md focus:outline-none focus:ring-2 border-gray-300 focus:ring-black placeholder:text-left\"\r\n-                placeholder=\"Password\"\r\n-                autoComplete=\"current-password\"\r\n-                required\r\n-                style={{ textAlign: 'left', height: '48px', lineHeight: '48px' }}\r\n-              />\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => setShowPassword((prev) => !prev)}\r\n-                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 focus:outline-none\"\r\n-                tabIndex={0}\r\n-                aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n-              >\r\n-                {showPassword ? (\r\n-                  // Basic eye open icon\r\n-                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n-                ) : (\r\n-                  // Basic eye closed icon\r\n-                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n-                )}\r\n-              </button>\r\n-            </div>\r\n-            {/* Thêm mục Quên mật khẩu */}\r\n-            <div className=\"w-full flex justify-end mt-1\">\r\n-              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n-            </div>\r\n-            {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n-            <button\r\n-              type=\"submit\"\r\n-              className=\"w-full max-w-[325px] bg-black text-white py-3 rounded-md font-semibold mt-1 hover:bg-gray-800 transition\"\r\n-              disabled={isLoading}\r\n-            >\r\n-              {isLoading ? 'Signing in...' : 'Sign in'}\r\n-            </button>\r\n-          </form>\r\n-        ) : (\r\n-          <>\r\n-            {/* Container cho email và continue button */}\r\n-            <div className=\"flex flex-col items-center gap-4 mt-4\">\r\n-              {/* Ô nhập email */}\r\n-              <div className=\"relative w-[350px]\">\r\n-                {/* Label động */}\r\n-                <motion.label\r\n-                  className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-                  animate={{\r\n-                    top: isFocused || email ? \"4px\" : \"40%\",\r\n-                    left: \"8px\",\r\n-                    scale: isFocused || email ? 0.75 : 1,\r\n-                    translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-                  }}\r\n-                  transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-                >\r\n-                  EMAIL*\r\n-                </motion.label>\r\n-\r\n-                {/* Input */}\r\n-                <input\r\n-                  type=\"email\"\r\n-                  value={email}\r\n-                  onChange={handleEmailChange}\r\n-                  onFocus={() => setIsFocused(true)}\r\n-                  onBlur={() => {\r\n-                    setIsFocused(false);\r\n-                    if (!email || !isValidEmail(email)) {\r\n-                      setError(\"Please enter a valid email address\");\r\n-                    } else {\r\n-                      setError(\"\");\r\n-                    }\r\n-                  }}\r\n-                  className={`w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n-                  autoComplete=\"email\"\r\n-                  required\r\n-                />\r\n-                {/* Hiển thị lỗi nếu có */}\r\n-                {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n-              </div>\r\n-\r\n-              {/* Nút CONTINUE */}\r\n-              <button\r\n-                onClick={handleContinue}\r\n-                className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-                style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n-                disabled={isLoading}\r\n-              >\r\n-                <span className=\"text-base font-semibold tracking-widest\">\r\n-                  {isLoading ? 'Continue...' : 'Continue'}\r\n-                </span>\r\n-              </button>\r\n-            </div>\r\n-          </>\r\n-        )}\r\n-\r\n-        {/* Dòng JOIN MY AISH */}\r\n-        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n-          JOIN MY AISH\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-} \r\n-\r\n"
                },
                {
                    "date": 1747290347387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,13 +98,14 @@\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n \r\n-      {/* Nút đăng nhập */}\r\n-      <div className=\"w-full max-w-xs flex flex-col gap-4\">\r\n+      {/* Container cho tất cả các nút và input */}\r\n+      <div className=\"w-full max-w-xs flex flex-col items-center gap-4\">\r\n+        {/* Nút đăng nhập Google */}\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"flex items-center justify-center w-[350px] border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n           <FcGoogle className=\"text-2xl mr-3\" />\r\n           <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n"
                },
                {
                    "date": 1747291286223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,13 +3,16 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n+import { useLanguage } from \"@/contexts/LanguageContext\";\r\n+import LanguageSwitcher from \"@/components/LanguageSwitcher\";\r\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n-export default function LoginPage() {\r\n+export default function Login() {\r\n+  const { t } = useLanguage();\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n@@ -19,9 +22,9 @@\n   const [isLoading, setIsLoading] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n-    return /^[^\\s@]+@[^\"]+\\.[^\"]+$/.test(email);\r\n+    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n   };\r\n \r\n   // Xử lý đăng nhập bằng Google\r\n   const handleGoogleSignIn = async () => {\r\n@@ -33,17 +36,12 @@\n   };\r\n \r\n   // Xử lý khi nhấn CONTINUE\r\n   const handleContinue = async () => {\r\n-    if (!email) {\r\n-      setError(\"Please enter a valid email address\");\r\n+    if (!email || !isValidEmail(email)) {\r\n+      setError(t('validation.requiredEmail'));\r\n       return;\r\n     }\r\n-    if (!isValidEmail(email)) {\r\n-      setError(\"Invalid email format\");\r\n-      return;\r\n-    }\r\n-    setError(\"\");\r\n     setIsLoading(true);\r\n     try {\r\n       const res = await fetch(\"/api/auth/check-email\", {\r\n         method: \"POST\",\r\n@@ -89,12 +87,19 @@\n   // Reset password when email changes\r\n   const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setEmail(e.target.value);\r\n     setPassword(\"\");\r\n+    if (error) {\r\n+      setError(\"\");\r\n+    }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center justify-center p-4\">\r\n+      <div className=\"absolute top-4 right-4\">\r\n+        <LanguageSwitcher />\r\n+      </div>\r\n+\r\n       {/* Tiêu đề */}\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n@@ -107,25 +112,25 @@\n           className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n           <FcGoogle className=\"text-2xl mr-3\" />\r\n-          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <span className=\"text-base font-semibold tracking-widest\">{t('common.continueWithGoogle')}</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">OR</span>\r\n+          <span className=\"text-black font-semibold\">{t('common.or')}</span>\r\n         </div>\r\n \r\n         {/* Dòng tiếp tục bằng email */}\r\n         <div className=\"flex justify-center w-full\">\r\n           <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n-            CONTINUE WITH YOUR EMAIL ADDRESS\r\n+            {t('common.continueWithEmail')}\r\n           </h2>\r\n         </div>\r\n         <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n           <p className=\"text-black text-xs font-semibold\">\r\n-            Sign in with your email and password or create a profile if you are new\r\n+            {t('common.signInWithEmail')}\r\n           </p>\r\n         </div>\r\n \r\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n@@ -198,9 +203,9 @@\n                     translateY: isFocused || email ? \"0\" : \"-50%\",\r\n                   }}\r\n                   transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n                 >\r\n-                  EMAIL*\r\n+                  {t('common.email')}\r\n                 </motion.label>\r\n \r\n                 {/* Input */}\r\n                 <input\r\n@@ -210,9 +215,9 @@\n                   onFocus={() => setIsFocused(true)}\r\n                   onBlur={() => {\r\n                     setIsFocused(false);\r\n                     if (!email || !isValidEmail(email)) {\r\n-                      setError(\"Please enter a valid email address\");\r\n+                      setError(t('validation.requiredEmail'));\r\n                     } else {\r\n                       setError(\"\");\r\n                     }\r\n                   }}\r\n@@ -231,9 +236,9 @@\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n                 disabled={isLoading}\r\n               >\r\n                 <span className=\"text-base font-semibold tracking-widest\">\r\n-                  {isLoading ? 'Continue...' : 'Continue'}\r\n+                  {isLoading ? t('common.sending') : t('common.continue')}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n           </>\r\n"
                },
                {
                    "date": 1747291432795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n-import { useLanguage } from \"@/contexts/LanguageContext\";\r\n+import { useLanguage } from \"@/context/LanguageContext\";\r\n import LanguageSwitcher from \"@/components/LanguageSwitcher\";\r\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n"
                },
                {
                    "date": 1747291448908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,13 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n-import { useLanguage } from \"@/context/LanguageContext\";\r\n-import LanguageSwitcher from \"@/components/LanguageSwitcher\";\r\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n-export default function Login() {\r\n-  const { t } = useLanguage();\r\n+export default function LoginPage() {\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n@@ -22,9 +19,9 @@\n   const [isLoading, setIsLoading] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n-    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n+    return /^[^\\s@]+@[^\"]+\\.[^\"]+$/.test(email);\r\n   };\r\n \r\n   // Xử lý đăng nhập bằng Google\r\n   const handleGoogleSignIn = async () => {\r\n@@ -36,12 +33,17 @@\n   };\r\n \r\n   // Xử lý khi nhấn CONTINUE\r\n   const handleContinue = async () => {\r\n-    if (!email || !isValidEmail(email)) {\r\n-      setError(t('validation.requiredEmail'));\r\n+    if (!email) {\r\n+      setError(\"Please enter a valid email address\");\r\n       return;\r\n     }\r\n+    if (!isValidEmail(email)) {\r\n+      setError(\"Invalid email format\");\r\n+      return;\r\n+    }\r\n+    setError(\"\");\r\n     setIsLoading(true);\r\n     try {\r\n       const res = await fetch(\"/api/auth/check-email\", {\r\n         method: \"POST\",\r\n@@ -87,19 +89,12 @@\n   // Reset password when email changes\r\n   const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setEmail(e.target.value);\r\n     setPassword(\"\");\r\n-    if (error) {\r\n-      setError(\"\");\r\n-    }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center justify-center p-4\">\r\n-      <div className=\"absolute top-4 right-4\">\r\n-        <LanguageSwitcher />\r\n-      </div>\r\n-\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       {/* Tiêu đề */}\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n@@ -112,25 +107,25 @@\n           className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n           <FcGoogle className=\"text-2xl mr-3\" />\r\n-          <span className=\"text-base font-semibold tracking-widest\">{t('common.continueWithGoogle')}</span>\r\n+          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">{t('common.or')}</span>\r\n+          <span className=\"text-black font-semibold\">OR</span>\r\n         </div>\r\n \r\n         {/* Dòng tiếp tục bằng email */}\r\n         <div className=\"flex justify-center w-full\">\r\n           <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n-            {t('common.continueWithEmail')}\r\n+            CONTINUE WITH YOUR EMAIL ADDRESS\r\n           </h2>\r\n         </div>\r\n         <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n           <p className=\"text-black text-xs font-semibold\">\r\n-            {t('common.signInWithEmail')}\r\n+            Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n@@ -203,9 +198,9 @@\n                     translateY: isFocused || email ? \"0\" : \"-50%\",\r\n                   }}\r\n                   transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n                 >\r\n-                  {t('common.email')}\r\n+                  EMAIL*\r\n                 </motion.label>\r\n \r\n                 {/* Input */}\r\n                 <input\r\n@@ -215,9 +210,9 @@\n                   onFocus={() => setIsFocused(true)}\r\n                   onBlur={() => {\r\n                     setIsFocused(false);\r\n                     if (!email || !isValidEmail(email)) {\r\n-                      setError(t('validation.requiredEmail'));\r\n+                      setError(\"Please enter a valid email address\");\r\n                     } else {\r\n                       setError(\"\");\r\n                     }\r\n                   }}\r\n@@ -236,9 +231,9 @@\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n                 disabled={isLoading}\r\n               >\r\n                 <span className=\"text-base font-semibold tracking-widest\">\r\n-                  {isLoading ? t('common.sending') : t('common.continue')}\r\n+                  {isLoading ? 'Continue...' : 'Continue'}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n           </>\r\n"
                },
                {
                    "date": 1747291651882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,13 +3,15 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n+import { useLanguage } from \"@/context/LanguageContext\";\r\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n export default function LoginPage() {\r\n+  const { t } = useLanguage();\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n@@ -19,28 +21,28 @@\n   const [isLoading, setIsLoading] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n-    return /^[^\\s@]+@[^\"]+\\.[^\"]+$/.test(email);\r\n+    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n   };\r\n \r\n   // Xử lý đăng nhập bằng Google\r\n   const handleGoogleSignIn = async () => {\r\n     try {\r\n       await signIn(\"google\", { callbackUrl: \"/\" });\r\n     } catch (error) {\r\n-      setError(\"An error occurred during sign in\");\r\n+      setError(t('validation.invalidEmail'));\r\n     }\r\n   };\r\n \r\n   // Xử lý khi nhấn CONTINUE\r\n   const handleContinue = async () => {\r\n     if (!email) {\r\n-      setError(\"Please enter a valid email address\");\r\n+      setError(t('validation.requiredEmail'));\r\n       return;\r\n     }\r\n     if (!isValidEmail(email)) {\r\n-      setError(\"Invalid email format\");\r\n+      setError(t('validation.invalidEmail'));\r\n       return;\r\n     }\r\n     setError(\"\");\r\n     setIsLoading(true);\r\n@@ -56,9 +58,9 @@\n       } else {\r\n         router.push(`/register?email=${email.toLowerCase()}`);\r\n       }\r\n     } catch (err) {\r\n-      setError(\"Something went wrong. Please try again.\");\r\n+      setError(t('validation.requiredEmail'));\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n@@ -74,14 +76,14 @@\n         password,\r\n         redirect: false,\r\n       });\r\n       if (result?.error) {\r\n-        setError(\"Email hoặc mật khẩu không đúng\");\r\n+        setError(t('validation.requiredPassword'));\r\n       } else {\r\n         router.push(\"/\");\r\n       }\r\n     } catch (error) {\r\n-      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n+      setError(t('validation.requiredPassword'));\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n@@ -89,15 +91,18 @@\n   // Reset password when email changes\r\n   const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setEmail(e.target.value);\r\n     setPassword(\"\");\r\n+    if (error) {\r\n+      setError(\"\");\r\n+    }\r\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       {/* Tiêu đề */}\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n-        MY AISH ACCOUNT\r\n+        {t('common.myAishAccount')}\r\n       </h1>\r\n \r\n       {/* Container cho tất cả các nút và input */}\r\n       <div className=\"w-full max-w-xs flex flex-col items-center gap-4\">\r\n@@ -107,49 +112,49 @@\n           className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n           <FcGoogle className=\"text-2xl mr-3\" />\r\n-          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <span className=\"text-base font-semibold tracking-widest\">{t('common.continueWithGoogle')}</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">OR</span>\r\n+          <span className=\"text-black font-semibold\">{t('common.or')}</span>\r\n         </div>\r\n \r\n         {/* Dòng tiếp tục bằng email */}\r\n         <div className=\"flex justify-center w-full\">\r\n           <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n-            CONTINUE WITH YOUR EMAIL ADDRESS\r\n+            {t('common.continueWithEmail')}\r\n           </h2>\r\n         </div>\r\n         <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n           <p className=\"text-black text-xs font-semibold\">\r\n-            Sign in with your email and password or create a profile if you are new\r\n+            {t('common.signInWithEmail')}\r\n           </p>\r\n         </div>\r\n \r\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n         {showAccountFound ? (\r\n           <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-6\">\r\n             <div className=\"flex flex-col items-center justify-center\">\r\n               <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n-                WE FOUND YOUR ACCOUNT\r\n+                {t('common.myAishAccount')}\r\n               </h2>\r\n               <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n-                You are registered with <span className=\"font-semibold\">{email}</span>\r\n+                {t('common.signInWithEmail')}\r\n               </p>\r\n             </div>\r\n             <div className=\"relative w-[350px]\">\r\n-              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n+              <label htmlFor=\"password\" className=\"sr-only\">{t('common.password')}</label>\r\n               <input\r\n                 id=\"password\"\r\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n                 className=\"w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n-                placeholder=\"Password\"\r\n+                placeholder={t('common.password')}\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n               />\r\n               <button\r\n@@ -167,9 +172,9 @@\n               </button>\r\n             </div>\r\n             {/* Thêm mục Quên mật khẩu */}\r\n             <div className=\"w-[350px] flex justify-end mt-1\">\r\n-              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n+              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">{t('common.forgotPassword')}</a>\r\n             </div>\r\n             {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n@@ -177,9 +182,9 @@\n               style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               disabled={isLoading}\r\n             >\r\n               <span className=\"text-base font-semibold tracking-widest\">\r\n-                {isLoading ? 'Signing in...' : 'Sign in'}\r\n+                {isLoading ? t('common.sending') : t('common.login')}\r\n               </span>\r\n             </button>\r\n           </form>\r\n         ) : (\r\n@@ -198,9 +203,9 @@\n                     translateY: isFocused || email ? \"0\" : \"-50%\",\r\n                   }}\r\n                   transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n                 >\r\n-                  EMAIL*\r\n+                  {t('common.email')}\r\n                 </motion.label>\r\n \r\n                 {/* Input */}\r\n                 <input\r\n@@ -210,9 +215,9 @@\n                   onFocus={() => setIsFocused(true)}\r\n                   onBlur={() => {\r\n                     setIsFocused(false);\r\n                     if (!email || !isValidEmail(email)) {\r\n-                      setError(\"Please enter a valid email address\");\r\n+                      setError(t('validation.requiredEmail'));\r\n                     } else {\r\n                       setError(\"\");\r\n                     }\r\n                   }}\r\n@@ -231,18 +236,18 @@\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n                 disabled={isLoading}\r\n               >\r\n                 <span className=\"text-base font-semibold tracking-widest\">\r\n-                  {isLoading ? 'Continue...' : 'Continue'}\r\n+                  {isLoading ? t('common.sending') : t('common.continue')}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n           </>\r\n         )}\r\n \r\n         {/* Dòng JOIN MY AISH */}\r\n         <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n-          JOIN MY AISH\r\n+          {t('common.joinMyAish')}\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1747291842311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,13 @@\n import { useRouter } from \"next/navigation\";\r\n import { FcGoogle } from \"react-icons/fc\";\r\n import { motion } from \"framer-motion\";\r\n import { signIn } from \"next-auth/react\";\r\n-import { useLanguage } from \"@/context/LanguageContext\";\r\n \r\n // Danh sách khách hàng đã đăng ký (giả lập)\r\n const registeredEmails = [\"test@example.com\", \"user@gmail.com\"];\r\n \r\n export default function LoginPage() {\r\n-  const { t } = useLanguage();\r\n   const router = useRouter();\r\n   const [isFocused, setIsFocused] = useState(false);\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n@@ -21,28 +19,28 @@\n   const [isLoading, setIsLoading] = useState(false);\r\n \r\n   // Hàm kiểm tra định dạng email\r\n   const isValidEmail = (email: string): boolean => {\r\n-    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n+    return /^[^\\s@]+@[^\"]+\\.[^\"]+$/.test(email);\r\n   };\r\n \r\n   // Xử lý đăng nhập bằng Google\r\n   const handleGoogleSignIn = async () => {\r\n     try {\r\n       await signIn(\"google\", { callbackUrl: \"/\" });\r\n     } catch (error) {\r\n-      setError(t('validation.invalidEmail'));\r\n+      setError(\"An error occurred during sign in\");\r\n     }\r\n   };\r\n \r\n   // Xử lý khi nhấn CONTINUE\r\n   const handleContinue = async () => {\r\n     if (!email) {\r\n-      setError(t('validation.requiredEmail'));\r\n+      setError(\"Please enter a valid email address\");\r\n       return;\r\n     }\r\n     if (!isValidEmail(email)) {\r\n-      setError(t('validation.invalidEmail'));\r\n+      setError(\"Invalid email format\");\r\n       return;\r\n     }\r\n     setError(\"\");\r\n     setIsLoading(true);\r\n@@ -58,9 +56,9 @@\n       } else {\r\n         router.push(`/register?email=${email.toLowerCase()}`);\r\n       }\r\n     } catch (err) {\r\n-      setError(t('validation.requiredEmail'));\r\n+      setError(\"Something went wrong. Please try again.\");\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n@@ -76,14 +74,14 @@\n         password,\r\n         redirect: false,\r\n       });\r\n       if (result?.error) {\r\n-        setError(t('validation.requiredPassword'));\r\n+        setError(\"Email hoặc mật khẩu không đúng\");\r\n       } else {\r\n         router.push(\"/\");\r\n       }\r\n     } catch (error) {\r\n-      setError(t('validation.requiredPassword'));\r\n+      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n@@ -91,18 +89,15 @@\n   // Reset password when email changes\r\n   const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setEmail(e.target.value);\r\n     setPassword(\"\");\r\n-    if (error) {\r\n-      setError(\"\");\r\n-    }\r\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       {/* Tiêu đề */}\r\n       <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n-        {t('common.myAishAccount')}\r\n+        MY AISH ACCOUNT\r\n       </h1>\r\n \r\n       {/* Container cho tất cả các nút và input */}\r\n       <div className=\"w-full max-w-xs flex flex-col items-center gap-4\">\r\n@@ -112,49 +107,49 @@\n           className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n           <FcGoogle className=\"text-2xl mr-3\" />\r\n-          <span className=\"text-base font-semibold tracking-widest\">{t('common.continueWithGoogle')}</span>\r\n+          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">{t('common.or')}</span>\r\n+          <span className=\"text-black font-semibold\">OR</span>\r\n         </div>\r\n \r\n         {/* Dòng tiếp tục bằng email */}\r\n         <div className=\"flex justify-center w-full\">\r\n           <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n-            {t('common.continueWithEmail')}\r\n+            CONTINUE WITH YOUR EMAIL ADDRESS\r\n           </h2>\r\n         </div>\r\n         <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n           <p className=\"text-black text-xs font-semibold\">\r\n-            {t('common.signInWithEmail')}\r\n+            Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n         {showAccountFound ? (\r\n           <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-6\">\r\n             <div className=\"flex flex-col items-center justify-center\">\r\n               <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n-                {t('common.myAishAccount')}\r\n+                WE FOUND YOUR ACCOUNT\r\n               </h2>\r\n               <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n-                {t('common.signInWithEmail')}\r\n+                You are registered with <span className=\"font-semibold\">{email}</span>\r\n               </p>\r\n             </div>\r\n             <div className=\"relative w-[350px]\">\r\n-              <label htmlFor=\"password\" className=\"sr-only\">{t('common.password')}</label>\r\n+              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n               <input\r\n                 id=\"password\"\r\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n                 className=\"w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n-                placeholder={t('common.password')}\r\n+                placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n               />\r\n               <button\r\n@@ -172,9 +167,9 @@\n               </button>\r\n             </div>\r\n             {/* Thêm mục Quên mật khẩu */}\r\n             <div className=\"w-[350px] flex justify-end mt-1\">\r\n-              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">{t('common.forgotPassword')}</a>\r\n+              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n             </div>\r\n             {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n@@ -182,9 +177,9 @@\n               style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               disabled={isLoading}\r\n             >\r\n               <span className=\"text-base font-semibold tracking-widest\">\r\n-                {isLoading ? t('common.sending') : t('common.login')}\r\n+                {isLoading ? 'Signing in...' : 'Sign in'}\r\n               </span>\r\n             </button>\r\n           </form>\r\n         ) : (\r\n@@ -203,9 +198,9 @@\n                     translateY: isFocused || email ? \"0\" : \"-50%\",\r\n                   }}\r\n                   transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n                 >\r\n-                  {t('common.email')}\r\n+                  EMAIL*\r\n                 </motion.label>\r\n \r\n                 {/* Input */}\r\n                 <input\r\n@@ -215,9 +210,9 @@\n                   onFocus={() => setIsFocused(true)}\r\n                   onBlur={() => {\r\n                     setIsFocused(false);\r\n                     if (!email || !isValidEmail(email)) {\r\n-                      setError(t('validation.requiredEmail'));\r\n+                      setError(\"Please enter a valid email address\");\r\n                     } else {\r\n                       setError(\"\");\r\n                     }\r\n                   }}\r\n@@ -236,18 +231,18 @@\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n                 disabled={isLoading}\r\n               >\r\n                 <span className=\"text-base font-semibold tracking-widest\">\r\n-                  {isLoading ? t('common.sending') : t('common.continue')}\r\n+                  {isLoading ? 'Continue...' : 'Continue'}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n           </>\r\n         )}\r\n \r\n         {/* Dòng JOIN MY AISH */}\r\n         <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n-          {t('common.joinMyAish')}\r\n+          JOIN MY AISH\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1747406638542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,63 +92,63 @@\n     setPassword(\"\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center pt-12 md:pt-20 px-4\">\r\n       {/* Tiêu đề */}\r\n-      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n+      <h1 className=\"text-3xl md:text-5xl font-bold text-black text-center my-4 md:my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n \r\n       {/* Container cho tất cả các nút và input */}\r\n-      <div className=\"w-full max-w-xs flex flex-col items-center gap-4\">\r\n+      <div className=\"w-full max-w-[350px] flex flex-col items-center gap-4\">\r\n         {/* Nút đăng nhập Google */}\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          className=\"w-full flex items-center justify-center border border-black text-black py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n-          <FcGoogle className=\"text-2xl mr-3\" />\r\n-          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <FcGoogle className=\"text-xl md:text-2xl mr-2 md:mr-3\" />\r\n+          <span className=\"text-sm md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n-        <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">OR</span>\r\n+        <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n+          <span className=\"text-black font-semibold text-sm md:text-base\">OR</span>\r\n         </div>\r\n \r\n         {/* Dòng tiếp tục bằng email */}\r\n         <div className=\"flex justify-center w-full\">\r\n-          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n+          <h2 className=\"text-black text-xl md:text-3xl font-semibold text-center\">\r\n             CONTINUE WITH YOUR EMAIL ADDRESS\r\n           </h2>\r\n         </div>\r\n-        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n-          <p className=\"text-black text-xs font-semibold\">\r\n+        <div className=\"flex justify-center w-full text-center px-2 md:px-4\">\r\n+          <p className=\"text-black text-[10px] md:text-xs font-semibold\">\r\n             Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n         {showAccountFound ? (\r\n-          <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-6\">\r\n+          <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-4 md:mt-6 w-full\">\r\n             <div className=\"flex flex-col items-center justify-center\">\r\n-              <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n+              <h2 className=\"text-lg md:text-xl font-light tracking-wide text-black mb-2 md:mb-4 text-center uppercase\">\r\n                 WE FOUND YOUR ACCOUNT\r\n               </h2>\r\n-              <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n+              <p className=\"text-xs md:text-sm text-center text-black mb-4 md:mb-6\">\r\n                 You are registered with <span className=\"font-semibold\">{email}</span>\r\n               </p>\r\n             </div>\r\n-            <div className=\"relative w-[350px]\">\r\n+            <div className=\"relative w-full\">\r\n               <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n               <input\r\n                 id=\"password\"\r\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n+                className=\"w-full px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n                 placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n               />\r\n@@ -159,39 +159,39 @@\n                 tabIndex={0}\r\n                 aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n               >\r\n                 {showPassword ? (\r\n-                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n+                  <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n                 ) : (\r\n-                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n+                  <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n                 )}\r\n               </button>\r\n             </div>\r\n             {/* Thêm mục Quên mật khẩu */}\r\n-            <div className=\"w-[350px] flex justify-end mt-1\">\r\n-              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n+            <div className=\"w-full flex justify-end mt-1\">\r\n+              <a href=\"/forgot-password\" className=\"text-[10px] md:text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n             </div>\r\n-            {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n+            {error && <p className=\"text-red-500 text-[10px] md:text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n-              className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              className=\"w-full bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n               style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               disabled={isLoading}\r\n             >\r\n-              <span className=\"text-base font-semibold tracking-widest\">\r\n+              <span className=\"text-sm md:text-base font-semibold tracking-widest\">\r\n                 {isLoading ? 'Signing in...' : 'Sign in'}\r\n               </span>\r\n             </button>\r\n           </form>\r\n         ) : (\r\n           <>\r\n             {/* Container cho email và continue button */}\r\n-            <div className=\"flex flex-col items-center gap-4 mt-4\">\r\n+            <div className=\"flex flex-col items-center gap-4 mt-4 w-full\">\r\n               {/* Ô nhập email */}\r\n-              <div className=\"relative w-[350px]\">\r\n+              <div className=\"relative w-full\">\r\n                 {/* Label động */}\r\n                 <motion.label\r\n-                  className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                  className={`absolute text-xs md:text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n                   animate={{\r\n                     top: isFocused || email ? \"4px\" : \"40%\",\r\n                     left: \"8px\",\r\n                     scale: isFocused || email ? 0.75 : 1,\r\n@@ -215,33 +215,33 @@\n                     } else {\r\n                       setError(\"\");\r\n                     }\r\n                   }}\r\n-                  className={`w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  className={`w-full px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n                   autoComplete=\"email\"\r\n                   required\r\n                 />\r\n                 {/* Hiển thị lỗi nếu có */}\r\n-                {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+                {error && <p className=\"text-red-500 text-[10px] md:text-xs mt-1\">{error}</p>}\r\n               </div>\r\n \r\n               {/* Nút CONTINUE */}\r\n               <button\r\n                 onClick={handleContinue}\r\n-                className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+                className=\"w-full bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n                 disabled={isLoading}\r\n               >\r\n-                <span className=\"text-base font-semibold tracking-widest\">\r\n+                <span className=\"text-sm md:text-base font-semibold tracking-widest\">\r\n                   {isLoading ? 'Continue...' : 'Continue'}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n           </>\r\n         )}\r\n \r\n         {/* Dòng JOIN MY AISH */}\r\n-        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n+        <div className=\"mt-8 md:mt-15 mb-8 md:mb-12 text-black font-semibold text-xl md:text-2xl text-center\">\r\n           JOIN MY AISH\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1747406663010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,63 +92,63 @@\n     setPassword(\"\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center pt-12 md:pt-20 px-4\">\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n       {/* Tiêu đề */}\r\n-      <h1 className=\"text-3xl md:text-5xl font-bold text-black text-center my-4 md:my-8 tracking-wide\">\r\n+      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n \r\n       {/* Container cho tất cả các nút và input */}\r\n-      <div className=\"w-full max-w-[350px] flex flex-col items-center gap-4\">\r\n+      <div className=\"w-full max-w-xs flex flex-col items-center gap-4\">\r\n         {/* Nút đăng nhập Google */}\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"w-full flex items-center justify-center border border-black text-black py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n-          <FcGoogle className=\"text-xl md:text-2xl mr-2 md:mr-3\" />\r\n-          <span className=\"text-sm md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <FcGoogle className=\"text-2xl mr-3\" />\r\n+          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n-        <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n-          <span className=\"text-black font-semibold text-sm md:text-base\">OR</span>\r\n+        <div className=\"flex items-center justify-center mt-3\">\r\n+          <span className=\"text-black font-semibold\">OR</span>\r\n         </div>\r\n \r\n         {/* Dòng tiếp tục bằng email */}\r\n         <div className=\"flex justify-center w-full\">\r\n-          <h2 className=\"text-black text-xl md:text-3xl font-semibold text-center\">\r\n+          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n             CONTINUE WITH YOUR EMAIL ADDRESS\r\n           </h2>\r\n         </div>\r\n-        <div className=\"flex justify-center w-full text-center px-2 md:px-4\">\r\n-          <p className=\"text-black text-[10px] md:text-xs font-semibold\">\r\n+        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n+          <p className=\"text-black text-xs font-semibold\">\r\n             Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n         {showAccountFound ? (\r\n-          <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-4 md:mt-6 w-full\">\r\n+          <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-6\">\r\n             <div className=\"flex flex-col items-center justify-center\">\r\n-              <h2 className=\"text-lg md:text-xl font-light tracking-wide text-black mb-2 md:mb-4 text-center uppercase\">\r\n+              <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n                 WE FOUND YOUR ACCOUNT\r\n               </h2>\r\n-              <p className=\"text-xs md:text-sm text-center text-black mb-4 md:mb-6\">\r\n+              <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n                 You are registered with <span className=\"font-semibold\">{email}</span>\r\n               </p>\r\n             </div>\r\n-            <div className=\"relative w-full\">\r\n+            <div className=\"relative w-[350px]\">\r\n               <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n               <input\r\n                 id=\"password\"\r\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-full px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n+                className=\"w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n                 placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n               />\r\n@@ -159,39 +159,39 @@\n                 tabIndex={0}\r\n                 aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n               >\r\n                 {showPassword ? (\r\n-                  <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n+                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n                 ) : (\r\n-                  <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n+                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n                 )}\r\n               </button>\r\n             </div>\r\n             {/* Thêm mục Quên mật khẩu */}\r\n-            <div className=\"w-full flex justify-end mt-1\">\r\n-              <a href=\"/forgot-password\" className=\"text-[10px] md:text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n+            <div className=\"w-[350px] flex justify-end mt-1\">\r\n+              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n             </div>\r\n-            {error && <p className=\"text-red-500 text-[10px] md:text-xs mt-1 text-center\">{error}</p>}\r\n+            {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n-              className=\"w-full bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n               style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               disabled={isLoading}\r\n             >\r\n-              <span className=\"text-sm md:text-base font-semibold tracking-widest\">\r\n+              <span className=\"text-base font-semibold tracking-widest\">\r\n                 {isLoading ? 'Signing in...' : 'Sign in'}\r\n               </span>\r\n             </button>\r\n           </form>\r\n         ) : (\r\n           <>\r\n             {/* Container cho email và continue button */}\r\n-            <div className=\"flex flex-col items-center gap-4 mt-4 w-full\">\r\n+            <div className=\"flex flex-col items-center gap-4 mt-4\">\r\n               {/* Ô nhập email */}\r\n-              <div className=\"relative w-full\">\r\n+              <div className=\"relative w-[350px]\">\r\n                 {/* Label động */}\r\n                 <motion.label\r\n-                  className={`absolute text-xs md:text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                  className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n                   animate={{\r\n                     top: isFocused || email ? \"4px\" : \"40%\",\r\n                     left: \"8px\",\r\n                     scale: isFocused || email ? 0.75 : 1,\r\n@@ -215,33 +215,33 @@\n                     } else {\r\n                       setError(\"\");\r\n                     }\r\n                   }}\r\n-                  className={`w-full px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  className={`w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n                   autoComplete=\"email\"\r\n                   required\r\n                 />\r\n                 {/* Hiển thị lỗi nếu có */}\r\n-                {error && <p className=\"text-red-500 text-[10px] md:text-xs mt-1\">{error}</p>}\r\n+                {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n               </div>\r\n \r\n               {/* Nút CONTINUE */}\r\n               <button\r\n                 onClick={handleContinue}\r\n-                className=\"w-full bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+                className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n                 disabled={isLoading}\r\n               >\r\n-                <span className=\"text-sm md:text-base font-semibold tracking-widest\">\r\n+                <span className=\"text-base font-semibold tracking-widest\">\r\n                   {isLoading ? 'Continue...' : 'Continue'}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n           </>\r\n         )}\r\n \r\n         {/* Dòng JOIN MY AISH */}\r\n-        <div className=\"mt-8 md:mt-15 mb-8 md:mb-12 text-black font-semibold text-xl md:text-2xl text-center\">\r\n+        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n           JOIN MY AISH\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1747406703635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,63 +92,63 @@\n     setPassword(\"\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center pt-20\">\r\n+    <div className=\"min-h-screen bg-white flex flex-col items-center pt-12 md:pt-20\">\r\n       {/* Tiêu đề */}\r\n-      <h1 className=\"text-5xl font-bold text-black text-center my-8 tracking-wide\">\r\n+      <h1 className=\"text-3xl md:text-5xl font-bold text-black text-center my-4 md:my-8 tracking-wide\">\r\n         MY AISH ACCOUNT\r\n       </h1>\r\n \r\n       {/* Container cho tất cả các nút và input */}\r\n-      <div className=\"w-full max-w-xs flex flex-col items-center gap-4\">\r\n+      <div className=\"w-full max-w-[350px] flex flex-col items-center gap-4\">\r\n         {/* Nút đăng nhập Google */}\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          className=\"w-full md:w-[350px] flex items-center justify-center border border-black text-black py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n-          <FcGoogle className=\"text-2xl mr-3\" />\r\n-          <span className=\"text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <FcGoogle className=\"text-xl md:text-2xl mr-2 md:mr-3\" />\r\n+          <span className=\"text-sm md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n-        <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">OR</span>\r\n+        <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n+          <span className=\"text-black font-semibold text-sm md:text-base\">OR</span>\r\n         </div>\r\n \r\n         {/* Dòng tiếp tục bằng email */}\r\n         <div className=\"flex justify-center w-full\">\r\n-          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n+          <h2 className=\"text-black text-xl md:text-3xl font-semibold text-center md:whitespace-nowrap\">\r\n             CONTINUE WITH YOUR EMAIL ADDRESS\r\n           </h2>\r\n         </div>\r\n-        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n-          <p className=\"text-black text-xs font-semibold\">\r\n+        <div className=\"flex justify-center w-full text-center px-2 md:px-4 md:whitespace-nowrap\">\r\n+          <p className=\"text-black text-[10px] md:text-xs font-semibold\">\r\n             Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n         {showAccountFound ? (\r\n-          <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-6\">\r\n+          <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-4 md:mt-6 w-full\">\r\n             <div className=\"flex flex-col items-center justify-center\">\r\n-              <h2 className=\"text-xl font-light tracking-wide text-black mb-4 text-center uppercase whitespace-nowrap\">\r\n+              <h2 className=\"text-lg md:text-xl font-light tracking-wide text-black mb-2 md:mb-4 text-center uppercase md:whitespace-nowrap\">\r\n                 WE FOUND YOUR ACCOUNT\r\n               </h2>\r\n-              <p className=\"text-sm text-center text-black mb-6 whitespace-nowrap\">\r\n+              <p className=\"text-xs md:text-sm text-center text-black mb-4 md:mb-6 md:whitespace-nowrap\">\r\n                 You are registered with <span className=\"font-semibold\">{email}</span>\r\n               </p>\r\n             </div>\r\n-            <div className=\"relative w-[350px]\">\r\n+            <div className=\"relative w-full md:w-[350px]\">\r\n               <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n               <input\r\n                 id=\"password\"\r\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n+                className=\"w-full md:w-[350px] px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n                 placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n               />\r\n@@ -159,39 +159,39 @@\n                 tabIndex={0}\r\n                 aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n               >\r\n                 {showPassword ? (\r\n-                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n+                  <svg width=\"20\" height=\"20\" className=\"md:w-[22px] md:h-[22px]\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><path d=\"M2 12s4-7 10-7 10 7 10 7-4 7-10 7-10-7-10-7z\"/></svg>\r\n                 ) : (\r\n-                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n+                  <svg width=\"20\" height=\"20\" className=\"md:w-[22px] md:h-[22px]\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><path d=\"M17.94 17.94A10.06 10.06 0 0 1 12 19c-5.52 0-10-7-10-7a17.92 17.92 0 0 1 4.06-5.94M1 1l22 22\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n                 )}\r\n               </button>\r\n             </div>\r\n             {/* Thêm mục Quên mật khẩu */}\r\n-            <div className=\"w-[350px] flex justify-end mt-1\">\r\n-              <a href=\"/forgot-password\" className=\"text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n+            <div className=\"w-full md:w-[350px] flex justify-end mt-1\">\r\n+              <a href=\"/forgot-password\" className=\"text-[10px] md:text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n             </div>\r\n-            {error && <p className=\"text-red-500 text-xs mt-1 text-center\">{error}</p>}\r\n+            {error && <p className=\"text-red-500 text-[10px] md:text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n-              className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              className=\"w-full md:w-[350px] bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n               style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               disabled={isLoading}\r\n             >\r\n-              <span className=\"text-base font-semibold tracking-widest\">\r\n+              <span className=\"text-sm md:text-base font-semibold tracking-widest\">\r\n                 {isLoading ? 'Signing in...' : 'Sign in'}\r\n               </span>\r\n             </button>\r\n           </form>\r\n         ) : (\r\n           <>\r\n             {/* Container cho email và continue button */}\r\n-            <div className=\"flex flex-col items-center gap-4 mt-4\">\r\n+            <div className=\"flex flex-col items-center gap-4 mt-4 w-full\">\r\n               {/* Ô nhập email */}\r\n-              <div className=\"relative w-[350px]\">\r\n+              <div className=\"relative w-full md:w-[350px]\">\r\n                 {/* Label động */}\r\n                 <motion.label\r\n-                  className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n+                  className={`absolute text-xs md:text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n                   animate={{\r\n                     top: isFocused || email ? \"4px\" : \"40%\",\r\n                     left: \"8px\",\r\n                     scale: isFocused || email ? 0.75 : 1,\r\n@@ -215,33 +215,33 @@\n                     } else {\r\n                       setError(\"\");\r\n                     }\r\n                   }}\r\n-                  className={`w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  className={`w-full md:w-[350px] px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n                   autoComplete=\"email\"\r\n                   required\r\n                 />\r\n                 {/* Hiển thị lỗi nếu có */}\r\n-                {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n+                {error && <p className=\"text-red-500 text-[10px] md:text-xs mt-1\">{error}</p>}\r\n               </div>\r\n \r\n               {/* Nút CONTINUE */}\r\n               <button\r\n                 onClick={handleContinue}\r\n-                className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+                className=\"w-full md:w-[350px] bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n                 disabled={isLoading}\r\n               >\r\n-                <span className=\"text-base font-semibold tracking-widest\">\r\n+                <span className=\"text-sm md:text-base font-semibold tracking-widest\">\r\n                   {isLoading ? 'Continue...' : 'Continue'}\r\n                 </span>\r\n               </button>\r\n             </div>\r\n           </>\r\n         )}\r\n \r\n         {/* Dòng JOIN MY AISH */}\r\n-        <div className=\"mt-15 mb-12 text-black font-semibold text-2xl text-center\">\r\n+        <div className=\"mt-8 md:mt-15 mb-8 md:mb-12 text-black font-semibold text-xl md:text-2xl text-center\">\r\n           JOIN MY AISH\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1747406749055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,13 +103,13 @@\n       <div className=\"w-full max-w-[350px] flex flex-col items-center gap-4\">\r\n         {/* Nút đăng nhập Google */}\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"w-full md:w-[350px] flex items-center justify-center border border-black text-black py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          className=\"w-full md:w-[350px] flex items-center justify-center border border-black text-black py-2.5 md:py-4 rounded-none text-xs md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n-          <FcGoogle className=\"text-xl md:text-2xl mr-2 md:mr-3\" />\r\n-          <span className=\"text-sm md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <FcGoogle className=\"text-lg md:text-2xl mr-2 md:mr-3\" />\r\n+          <span className=\"text-xs md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n"
                },
                {
                    "date": 1747406839562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,13 +103,13 @@\n       <div className=\"w-full max-w-[350px] flex flex-col items-center gap-4\">\r\n         {/* Nút đăng nhập Google */}\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"w-full md:w-[350px] flex items-center justify-center border border-black text-black py-2.5 md:py-4 rounded-none text-xs md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          className=\"w-full md:w-[350px] flex items-center justify-center border border-black text-black py-1.5 md:py-4 rounded-none text-[9px] md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n-          <FcGoogle className=\"text-lg md:text-2xl mr-2 md:mr-3\" />\r\n-          <span className=\"text-xs md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <FcGoogle className=\"text-sm md:text-2xl mr-1.5 md:mr-3\" />\r\n+          <span className=\"text-[9px] md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n"
                },
                {
                    "date": 1747406858017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,13 +103,13 @@\n       <div className=\"w-full max-w-[350px] flex flex-col items-center gap-4\">\r\n         {/* Nút đăng nhập Google */}\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"w-full md:w-[350px] flex items-center justify-center border border-black text-black py-1.5 md:py-4 rounded-none text-[9px] md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          className=\"w-full md:w-[350px] flex items-center justify-center border border-black text-black py-2.5 md:py-4 rounded-none text-xs md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n-          <FcGoogle className=\"text-sm md:text-2xl mr-1.5 md:mr-3\" />\r\n-          <span className=\"text-[9px] md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <FcGoogle className=\"text-lg md:text-2xl mr-2 md:mr-3\" />\r\n+          <span className=\"text-xs md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n"
                },
                {
                    "date": 1747406891216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,13 +103,13 @@\n       <div className=\"w-full max-w-[350px] flex flex-col items-center gap-4\">\r\n         {/* Nút đăng nhập Google */}\r\n         <button \r\n           onClick={handleGoogleSignIn}\r\n-          className=\"w-full md:w-[350px] flex items-center justify-center border border-black text-black py-2.5 md:py-4 rounded-none text-xs md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n+          className=\"w-[280px] md:w-[350px] flex items-center justify-center border border-black text-black py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n           style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n         >\r\n-          <FcGoogle className=\"text-lg md:text-2xl mr-2 md:mr-3\" />\r\n-          <span className=\"text-xs md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n+          <FcGoogle className=\"text-xl md:text-2xl mr-2 md:mr-3\" />\r\n+          <span className=\"text-sm md:text-base font-semibold tracking-widest\">CONTINUE WITH GOOGLE</span>\r\n         </button>\r\n \r\n         {/* Dòng OR */}\r\n         <div className=\"flex items-center justify-center mt-2 md:mt-3\">\r\n"
                },
                {
                    "date": 1747406941128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,14 +117,14 @@\n         </div>\r\n \r\n         {/* Dòng tiếp tục bằng email */}\r\n         <div className=\"flex justify-center w-full\">\r\n-          <h2 className=\"text-black text-xl md:text-3xl font-semibold text-center md:whitespace-nowrap\">\r\n+          <h2 className=\"text-black text-base md:text-3xl font-semibold text-center md:whitespace-nowrap\">\r\n             CONTINUE WITH YOUR EMAIL ADDRESS\r\n           </h2>\r\n         </div>\r\n         <div className=\"flex justify-center w-full text-center px-2 md:px-4 md:whitespace-nowrap\">\r\n-          <p className=\"text-black text-[10px] md:text-xs font-semibold\">\r\n+          <p className=\"text-black text-[8px] md:text-xs font-semibold\">\r\n             Sign in with your email and password or create a profile if you are new\r\n           </p>\r\n         </div>\r\n \r\n"
                },
                {
                    "date": 1747406995216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n           <>\r\n             {/* Container cho email và continue button */}\r\n             <div className=\"flex flex-col items-center gap-4 mt-4 w-full\">\r\n               {/* Ô nhập email */}\r\n-              <div className=\"relative w-full md:w-[350px]\">\r\n+              <div className=\"relative w-[280px] md:w-[350px]\">\r\n                 {/* Label động */}\r\n                 <motion.label\r\n                   className={`absolute text-xs md:text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n                   animate={{\r\n@@ -215,9 +215,9 @@\n                     } else {\r\n                       setError(\"\");\r\n                     }\r\n                   }}\r\n-                  className={`w-full md:w-[350px] px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n+                  className={`w-[280px] md:w-[350px] px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n                   autoComplete=\"email\"\r\n                   required\r\n                 />\r\n                 {/* Hiển thị lỗi nếu có */}\r\n@@ -226,9 +226,9 @@\n \r\n               {/* Nút CONTINUE */}\r\n               <button\r\n                 onClick={handleContinue}\r\n-                className=\"w-full md:w-[350px] bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+                className=\"w-[280px] md:w-[350px] bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                 style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n                 disabled={isLoading}\r\n               >\r\n                 <span className=\"text-sm md:text-base font-semibold tracking-widest\">\r\n"
                },
                {
                    "date": 1747407119162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,24 +131,24 @@\n         {/* Nếu đã tìm thấy tài khoản, hiển thị form nhập mật khẩu */}\r\n         {showAccountFound ? (\r\n           <form onSubmit={handlePasswordLogin} className=\"flex flex-col items-center gap-4 mt-4 md:mt-6 w-full\">\r\n             <div className=\"flex flex-col items-center justify-center\">\r\n-              <h2 className=\"text-lg md:text-xl font-light tracking-wide text-black mb-2 md:mb-4 text-center uppercase md:whitespace-nowrap\">\r\n+              <h2 className=\"text-base md:text-xl font-light tracking-wide text-black mb-2 md:mb-4 text-center uppercase md:whitespace-nowrap\">\r\n                 WE FOUND YOUR ACCOUNT\r\n               </h2>\r\n-              <p className=\"text-xs md:text-sm text-center text-black mb-4 md:mb-6 md:whitespace-nowrap\">\r\n+              <p className=\"text-[8px] md:text-sm text-center text-black mb-4 md:mb-6 md:whitespace-nowrap\">\r\n                 You are registered with <span className=\"font-semibold\">{email}</span>\r\n               </p>\r\n             </div>\r\n-            <div className=\"relative w-full md:w-[350px]\">\r\n+            <div className=\"relative w-[280px] md:w-[350px]\">\r\n               <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n               <input\r\n                 id=\"password\"\r\n                 name=\"password\"\r\n                 type={showPassword ? \"text\" : \"password\"}\r\n                 value={password}\r\n                 onChange={e => setPassword(e.target.value)}\r\n-                className=\"w-full md:w-[350px] px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n+                className=\"w-[280px] md:w-[350px] px-4 pt-6 pb-2 text-sm md:text-base text-black border rounded-none focus:outline-none focus:ring-2 border-gray-300 focus:ring-black\"\r\n                 placeholder=\"Password\"\r\n                 autoComplete=\"current-password\"\r\n                 required\r\n               />\r\n@@ -166,15 +166,15 @@\n                 )}\r\n               </button>\r\n             </div>\r\n             {/* Thêm mục Quên mật khẩu */}\r\n-            <div className=\"w-full md:w-[350px] flex justify-end mt-1\">\r\n-              <a href=\"/forgot-password\" className=\"text-[10px] md:text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n+            <div className=\"w-[280px] md:w-[350px] flex justify-end mt-1\">\r\n+              <a href=\"/forgot-password\" className=\"text-[8px] md:text-xs text-black hover:underline\">Quên mật khẩu?</a>\r\n             </div>\r\n-            {error && <p className=\"text-red-500 text-[10px] md:text-xs mt-1 text-center\">{error}</p>}\r\n+            {error && <p className=\"text-red-500 text-[8px] md:text-xs mt-1 text-center\">{error}</p>}\r\n             <button\r\n               type=\"submit\"\r\n-              className=\"w-full md:w-[350px] bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              className=\"w-[280px] md:w-[350px] bg-black text-white py-3 md:py-4 rounded-none text-sm md:text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n               style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n               disabled={isLoading}\r\n             >\r\n               <span className=\"text-sm md:text-base font-semibold tracking-widest\">\r\n"
                }
            ],
            "date": 1746959635362,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { signIn } from \"next-auth/react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\n\r\nexport default function LoginPage() {\r\n  const router = useRouter();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isCheckingEmail, setIsCheckingEmail] = useState(false);\r\n\r\n  const handleEmailCheck = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsCheckingEmail(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"/api/auth/check-email\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.exists) {\r\n        setShowPassword(true);\r\n      } else {\r\n        // Chuyển hướng đến trang đăng ký với email đã nhập\r\n        router.push(`/register?email=${encodeURIComponent(email)}`);\r\n      }\r\n    } catch (error) {\r\n      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n    } finally {\r\n      setIsCheckingEmail(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try {\r\n      const result = await signIn(\"credentials\", {\r\n        email,\r\n        password,\r\n        redirect: false,\r\n      });\r\n\r\n      if (result?.error) {\r\n        setError(\"Email hoặc mật khẩu không đúng\");\r\n      } else {\r\n        router.push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Đăng nhập\r\n          </h2>\r\n        </div>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <form className=\"mt-8 space-y-6\" onSubmit={showPassword ? handleLogin : handleEmailCheck}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"sr-only\">\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            {showPassword && (\r\n              <div>\r\n                <label htmlFor=\"password\" className=\"sr-only\">\r\n                  Mật khẩu\r\n                </label>\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                  placeholder=\"Mật khẩu\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isCheckingEmail}\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n            >\r\n              {isCheckingEmail ? \"Đang kiểm tra...\" : showPassword ? \"Đăng nhập\" : \"Tiếp tục\"}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"text-sm\">\r\n              <Link href=\"/forgot-password\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n                Quên mật khẩu?\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
{
    "sourceFile": "src/app/[slug]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 103,
            "patches": [
                {
                    "date": 1747198765875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747198835161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n \r\n export default function ProductDetailPage() {\r\n-  const { slug } = useParams();\r\n+  const { id: slug } = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n   const [quantity, setQuantity] = useState<number>(1);\r\n@@ -42,6 +42,348 @@\n \r\n     fetchProduct();\r\n   }, [slug]);\r\n \r\n-  // ... rest of the code remains the same ...\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900\"></div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!product) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <p className=\"text-xl\">Product not found</p>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  const handleAddToCart = () => {\r\n+    if (!product) return;\r\n+\r\n+    if (!selectedSize) {\r\n+      toast.error(\"Vui lòng chọn size\");\r\n+      return;\r\n+    }\r\n+\r\n+    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n+    if (quantity > sizeQuantity) {\r\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\r\n+      return;\r\n+    }\r\n+\r\n+    // Tạo object chứa thông tin stock cho tất cả các size\r\n+    const stockInfo: { [key: string]: number } = {};\r\n+    product.sizes?.forEach(size => {\r\n+      const quantity = product[`quantity${size}` as keyof Product] as number;\r\n+      stockInfo[size] = quantity;\r\n+    });\r\n+\r\n+    // Thêm sản phẩm vào giỏ hàng với thông tin stock đầy đủ\r\n+    addToCart({\r\n+      id: product._id,\r\n+      name: product.name,\r\n+      price: product.price,\r\n+      image: product.images[0],\r\n+      size: selectedSize,\r\n+      color: product.colors[0] || 'Default',\r\n+      quantity: quantity,\r\n+      cartItemId: Date.now(),\r\n+      stock: stockInfo,\r\n+      availableSizes: product.sizes || [],\r\n+      // Thêm thông tin stock cho size hiện tại\r\n+      currentStock: sizeQuantity\r\n+    });\r\n+\r\n+    toast.success(\"Đã thêm vào giỏ hàng\");\r\n+  };\r\n+\r\n+  const handleQuantityChange = (value: number) => {\r\n+    if (!product || !selectedSize) return;\r\n+    \r\n+    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n+    if (value > sizeQuantity) {\r\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\r\n+      return;\r\n+    }\r\n+    \r\n+    setQuantity(value);\r\n+  };\r\n+\r\n+  const handlePrevImage = () => {\r\n+    if (!product || !product.images) return;\r\n+    setCurrentImageIndex((currentImageIndex - 1 + product.images.length) % product.images.length);\r\n+  };\r\n+\r\n+  const handleNextImage = () => {\r\n+    if (!product || !product.images) return;\r\n+    setCurrentImageIndex((currentImageIndex + 1) % product.images.length);\r\n+  };\r\n+\r\n+  const isClothing = product.category && product.category !== \"CAP\";\r\n+  const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-white flex flex-col\">\r\n+      {/* Breadcrumb */}\r\n+      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\r\n+        <span className=\"font-semibold uppercase underline\">{product.category}</span>\r\n+        <span className=\"mx-2\">/</span>\r\n+        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\r\n+      </div>\r\n+\r\n+      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\r\n+        {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\r\n+        <div className=\"flex-1 flex flex-col items-center\">\r\n+          <div className=\"relative w-full flex justify-center items-center mt-6 mb-6\" style={{height: '450px'}}>\r\n+            <Image\r\n+              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\r\n+              alt={product.name}\r\n+              width={450}\r\n+              height={450}\r\n+              quality={100}\r\n+              className=\"object-contain object-center w-full h-full\"\r\n+              style={{ maxWidth: \"90%\", height: \"auto\" }}\r\n+              onClick={() => setShowFullImage(true)}\r\n+            />\r\n+            {product.images.length > 1 && (\r\n+              <>\r\n+                <button\r\n+                  onClick={handlePrevImage}\r\n+                  className=\"absolute left-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\r\n+                >\r\n+                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 19l-7-7 7-7\" />\r\n+                  </svg>\r\n+                </button>\r\n+                <button\r\n+                  onClick={handleNextImage}\r\n+                  className=\"absolute right-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\r\n+                >\r\n+                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 5l7 7-7 7\" />\r\n+                  </svg>\r\n+                </button>\r\n+              </>\r\n+            )}\r\n+          </div>\r\n+          <div className=\"flex gap-4 w-full justify-center mt-10\">\r\n+            {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\r\n+              <div \r\n+                key={index} \r\n+                className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\r\n+                  currentImageIndex === index ? \"border-black scale-105\" : \"border-gray-200 hover:border-gray-400\"\r\n+                }`}\r\n+                onClick={() => setCurrentImageIndex(index)}\r\n+              >\r\n+                <Image\r\n+                  src={img}\r\n+                  alt={`${product.name} thumbnail ${index + 1}`}\r\n+                  width={96}\r\n+                  height={96}\r\n+                  className=\"object-cover\"\r\n+                />\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Bên phải: Thông tin sản phẩm */}\r\n+        <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\r\n+          <div className=\"w-full max-w-xl\">\r\n+            <h1 className=\"text-2xl font-bold text-center md:text-left mb-2 uppercase text-black\">{product.name}</h1>\r\n+            <div className=\"text-xl font-semibold mb-4 text-black\">\r\n+              {(product.price).toLocaleString('vi-VN')} VND\r\n+            </div>\r\n+\r\n+            {isClothing ? (\r\n+              <div className=\"mb-6\">\r\n+                <div className=\"relative\">\r\n+                  <button\r\n+                    onClick={() => setShowSizeOptions(!showSizeOptions)}\r\n+                    className=\"w-full px-4 py-3 border border-black text-left flex justify-between items-center select-none transform-none\"\r\n+                    style={{ userSelect: 'none', transform: 'none' }}\r\n+                  >\r\n+                    <span className=\"text-black font-medium\">\r\n+                      {selectedSize ? `${selectedSize} - Còn ${product[`quantity${selectedSize}` as keyof Product]} sản phẩm` : \"Select a size\"}\r\n+                    </span>\r\n+                    <svg \r\n+                      className=\"w-4 h-4\" \r\n+                      fill=\"none\" \r\n+                      stroke=\"currentColor\" \r\n+                      viewBox=\"0 0 24 24\"\r\n+                    >\r\n+                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n+                    </svg>\r\n+                  </button>\r\n+                  \r\n+                  {showSizeOptions && (\r\n+                    <div className=\"absolute z-10 w-full mt-1 bg-white border border-black shadow-lg\">\r\n+                      {availableSizes.map((size) => {\r\n+                        const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n+                        return (\r\n+                          <button\r\n+                            key={size}\r\n+                            onClick={() => {\r\n+                              setSelectedSize(size);\r\n+                              setShowSizeOptions(false);\r\n+                            }}\r\n+                            disabled={sizeQuantity === 0}\r\n+                            className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\r\n+                              sizeQuantity === 0 \r\n+                                ? \"text-gray-400 cursor-not-allowed\" \r\n+                                : size === selectedSize \r\n+                                  ? \"text-black font-bold bg-gray-100\" \r\n+                                  : \"text-black font-medium\"\r\n+                            }`}\r\n+                            style={{ transform: 'none' }}\r\n+                          >\r\n+                            {size} - Còn {sizeQuantity} sản phẩm\r\n+                          </button>\r\n+                        );\r\n+                      })}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            ) : product.category === \"CAP\" ? (\r\n+              <div className=\"mb-6\">\r\n+                <p className=\"text-sm text-black\">\r\n+                  Còn {product.quantityHat} sản phẩm\r\n+                </p>\r\n+              </div>\r\n+            ) : null}\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\r\n+              <div className=\"flex items-center gap-2\">\r\n+                <button\r\n+                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\r\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\r\n+                >\r\n+                  -\r\n+                </button>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  min=\"1\"\r\n+                  value={quantity}\r\n+                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\r\n+                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\r\n+                />\r\n+                <button\r\n+                  onClick={() => handleQuantityChange(quantity + 1)}\r\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\r\n+                >\r\n+                  +\r\n+                </button>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4 text-base\">\r\n+              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4 text-xs\">\r\n+              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\r\n+              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\r\n+            </div>\r\n+\r\n+            <button\r\n+              className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\r\n+              onClick={handleAddToCart}\r\n+              disabled={Boolean(isClothing && !selectedSize)}\r\n+            >\r\n+              Thêm vào giỏ hàng\r\n+            </button>\r\n+\r\n+            {isClothing && (\r\n+              <button\r\n+                onClick={() => setShowSizeGuide(true)}\r\n+                className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\r\n+                style={{ transform: 'none' }}\r\n+              >\r\n+                <span className=\"group-hover:font-semibold\">Size guide</span>\r\n+                <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Navigation và các thông tin phụ */}\r\n+      <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\r\n+        <div className=\"text-black\">\r\n+          <span className=\"font-semibold uppercase underline\">{product.category}</span>\r\n+          {\" / \"}\r\n+          <span className=\"font-semibold uppercase underline\">{product.name}</span>\r\n+        </div>\r\n+        <div>\r\n+          <button \r\n+            onClick={() => setShowHelpPanel(true)}\r\n+            className=\"hover:underline text-black font-semibold uppercase\"\r\n+          >\r\n+            Cần giúp đỡ?\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Full Image Modal */}\r\n+      {showFullImage && (\r\n+        <div \r\n+          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \r\n+          onClick={() => setShowFullImage(false)}\r\n+        >\r\n+          <div className=\"min-h-screen w-full flex justify-center items-start\">\r\n+            <Image\r\n+              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\r\n+              alt={product.name}\r\n+              width={2000}\r\n+              height={2000}\r\n+              quality={100}\r\n+              className=\"object-contain w-full\"\r\n+              style={{ height: \"auto\" }}\r\n+            />\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Help Panel */}\r\n+      <HelpPanel isOpen={showHelpPanel} onClose={() => setShowHelpPanel(false)} />\r\n+\r\n+      {/* Size Guide Modal */}\r\n+      {showSizeGuide && (\r\n+        <div \r\n+          className=\"fixed inset-0 bg-white/60 backdrop-blur-sm flex items-center justify-center z-50\" \r\n+          onClick={() => setShowSizeGuide(false)}\r\n+        >\r\n+          <div \r\n+            className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\r\n+            onClick={e => e.stopPropagation()}\r\n+          >\r\n+            <div className=\"flex justify-between items-center mb-4\">\r\n+              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\r\n+              <button \r\n+                onClick={() => setShowSizeGuide(false)}\r\n+                className=\"text-gray-500 hover:text-black\"\r\n+              >\r\n+                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n+                </svg>\r\n+              </button>\r\n+            </div>\r\n+            <div>\r\n+              <Image\r\n+                src={product.sizeGuideImage || \"/size-guide.jpg\"}\r\n+                alt=\"Size Guide\"\r\n+                width={600}\r\n+                height={400}\r\n+                className=\"w-full h-auto rounded-lg\"\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747198867755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n \r\n export default function ProductDetailPage() {\r\n-  const { id: slug } = useParams();\r\n+  const { slug } = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n   const [quantity, setQuantity] = useState<number>(1);\r\n"
                },
                {
                    "date": 1747199319857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,41 +59,31 @@\n     );\r\n   }\r\n \r\n   const handleAddToCart = () => {\r\n-    if (!product) return;\r\n-\r\n     if (!selectedSize) {\r\n       toast.error(\"Vui lòng chọn size\");\r\n       return;\r\n     }\r\n \r\n-    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n+    const sizeQuantity = product[`quantity${selectedSize}`];\r\n+    if (sizeQuantity === 0) {\r\n+      toast.error(`Size ${selectedSize} đã hết hàng`);\r\n+      return;\r\n+    }\r\n+\r\n     if (quantity > sizeQuantity) {\r\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\r\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\r\n       return;\r\n     }\r\n \r\n-    // Tạo object chứa thông tin stock cho tất cả các size\r\n-    const stockInfo: { [key: string]: number } = {};\r\n-    product.sizes?.forEach(size => {\r\n-      const quantity = product[`quantity${size}` as keyof Product] as number;\r\n-      stockInfo[size] = quantity;\r\n-    });\r\n-\r\n-    // Thêm sản phẩm vào giỏ hàng với thông tin stock đầy đủ\r\n     addToCart({\r\n       id: product._id,\r\n       name: product.name,\r\n       price: product.price,\r\n       image: product.images[0],\r\n       size: selectedSize,\r\n-      color: product.colors[0] || 'Default',\r\n       quantity: quantity,\r\n-      cartItemId: Date.now(),\r\n-      stock: stockInfo,\r\n-      availableSizes: product.sizes || [],\r\n-      // Thêm thông tin stock cho size hiện tại\r\n       currentStock: sizeQuantity\r\n     });\r\n \r\n     toast.success(\"Đã thêm vào giỏ hàng\");\r\n@@ -221,26 +211,32 @@\n                   {showSizeOptions && (\r\n                     <div className=\"absolute z-10 w-full mt-1 bg-white border border-black shadow-lg\">\r\n                       {availableSizes.map((size) => {\r\n                         const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n+                        const isOutOfStock = sizeQuantity === 0;\r\n                         return (\r\n                           <button\r\n                             key={size}\r\n                             onClick={() => {\r\n                               setSelectedSize(size);\r\n                               setShowSizeOptions(false);\r\n                             }}\r\n-                            disabled={sizeQuantity === 0}\r\n+                            disabled={isOutOfStock}\r\n                             className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\r\n-                              sizeQuantity === 0 \r\n+                              isOutOfStock \r\n                                 ? \"text-gray-400 cursor-not-allowed\" \r\n                                 : size === selectedSize \r\n                                   ? \"text-black font-bold bg-gray-100\" \r\n                                   : \"text-black font-medium\"\r\n                             }`}\r\n                             style={{ transform: 'none' }}\r\n                           >\r\n                             {size} - Còn {sizeQuantity} sản phẩm\r\n+                            {isOutOfStock && (\r\n+                              <span className=\"absolute inset-0 flex items-center justify-center bg-gray-100 bg-opacity-75 text-xs text-gray-500\">\r\n+                                Hết hàng\r\n+                              </span>\r\n+                            )}\r\n                           </button>\r\n                         );\r\n                       })}\r\n                     </div>\r\n@@ -291,11 +287,13 @@\n \r\n             <button\r\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\r\n               onClick={handleAddToCart}\r\n-              disabled={Boolean(isClothing && !selectedSize)}\r\n+              disabled={!selectedSize || product[`quantity${selectedSize}`] === 0}\r\n             >\r\n-              Thêm vào giỏ hàng\r\n+              {selectedSize && product[`quantity${selectedSize}`] === 0\r\n+                ? \"Hết hàng\"\r\n+                : \"Thêm vào giỏ hàng\"}\r\n             </button>\r\n \r\n             {isClothing && (\r\n               <button\r\n"
                },
                {
                    "date": 1747205326712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,59 +189,35 @@\n \r\n             {isClothing ? (\r\n               <div className=\"mb-6\">\r\n                 <div className=\"relative\">\r\n-                  <button\r\n-                    onClick={() => setShowSizeOptions(!showSizeOptions)}\r\n-                    className=\"w-full px-4 py-3 border border-black text-left flex justify-between items-center select-none transform-none\"\r\n-                    style={{ userSelect: 'none', transform: 'none' }}\r\n-                  >\r\n-                    <span className=\"text-black font-medium\">\r\n-                      {selectedSize ? `${selectedSize} - Còn ${product[`quantity${selectedSize}` as keyof Product]} sản phẩm` : \"Select a size\"}\r\n-                    </span>\r\n-                    <svg \r\n-                      className=\"w-4 h-4\" \r\n-                      fill=\"none\" \r\n-                      stroke=\"currentColor\" \r\n-                      viewBox=\"0 0 24 24\"\r\n-                    >\r\n-                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n-                    </svg>\r\n-                  </button>\r\n-                  \r\n-                  {showSizeOptions && (\r\n-                    <div className=\"absolute z-10 w-full mt-1 bg-white border border-black shadow-lg\">\r\n-                      {availableSizes.map((size) => {\r\n-                        const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n-                        const isOutOfStock = sizeQuantity === 0;\r\n-                        return (\r\n-                          <button\r\n-                            key={size}\r\n-                            onClick={() => {\r\n-                              setSelectedSize(size);\r\n-                              setShowSizeOptions(false);\r\n-                            }}\r\n-                            disabled={isOutOfStock}\r\n-                            className={`w-full px-4 py-3 text-left border-b border-gray-200 last:border-b-0 transform-none ${\r\n-                              isOutOfStock \r\n-                                ? \"text-gray-400 cursor-not-allowed\" \r\n-                                : size === selectedSize \r\n-                                  ? \"text-black font-bold bg-gray-100\" \r\n-                                  : \"text-black font-medium\"\r\n-                            }`}\r\n-                            style={{ transform: 'none' }}\r\n-                          >\r\n-                            {size} - Còn {sizeQuantity} sản phẩm\r\n-                            {isOutOfStock && (\r\n-                              <span className=\"absolute inset-0 flex items-center justify-center bg-gray-100 bg-opacity-75 text-xs text-gray-500\">\r\n-                                Hết hàng\r\n-                              </span>\r\n-                            )}\r\n-                          </button>\r\n-                        );\r\n-                      })}\r\n-                    </div>\r\n-                  )}\r\n+                  <div className=\"grid grid-cols-3 gap-2\">\r\n+                    {availableSizes.map((size) => {\r\n+                      const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n+                      const isOutOfStock = sizeQuantity === 0;\r\n+                      return (\r\n+                        <button\r\n+                          key={size}\r\n+                          onClick={() => {\r\n+                            if (!isOutOfStock) setSelectedSize(size);\r\n+                          }}\r\n+                          disabled={isOutOfStock}\r\n+                          className={`py-2 px-4 border rounded text-sm font-medium transition-colors relative\r\n+                            ${isOutOfStock ? 'text-gray-400 bg-gray-100 cursor-not-allowed' : 'text-black bg-white hover:border-black'}\r\n+                            ${selectedSize === size && !isOutOfStock ? 'border-black font-bold bg-gray-100' : 'border-gray-200'}\r\n+                          `}\r\n+                          style={{ minWidth: 80 }}\r\n+                        >\r\n+                          {size} - Còn {sizeQuantity} sản phẩm\r\n+                          {isOutOfStock && (\r\n+                            <span className=\"absolute inset-0 flex items-center justify-center text-xs text-gray-500 bg-white bg-opacity-70 pointer-events-none\">\r\n+                              Hết hàng\r\n+                            </span>\r\n+                          )}\r\n+                        </button>\r\n+                      );\r\n+                    })}\r\n+                  </div>\r\n                 </div>\r\n               </div>\r\n             ) : product.category === \"CAP\" ? (\r\n               <div className=\"mb-6\">\r\n"
                },
                {
                    "date": 1747205650667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,13 +200,14 @@\n                           onClick={() => {\r\n                             if (!isOutOfStock) setSelectedSize(size);\r\n                           }}\r\n                           disabled={isOutOfStock}\r\n-                          className={`py-2 px-4 border rounded text-sm font-medium transition-colors relative\r\n-                            ${isOutOfStock ? 'text-gray-400 bg-gray-100 cursor-not-allowed' : 'text-black bg-white hover:border-black'}\r\n-                            ${selectedSize === size && !isOutOfStock ? 'border-black font-bold bg-gray-100' : 'border-gray-200'}\r\n+                          className={`py-2 px-4 border-2 text-sm font-medium transition-colors relative\r\n+                            border-black\r\n+                            ${isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed' : 'text-black bg-white'}\r\n+                            ${selectedSize === size && !isOutOfStock ? 'bg-black text-white' : ''}\r\n                           `}\r\n-                          style={{ minWidth: 80 }}\r\n+                          style={{ minWidth: 80, borderRadius: 0 }}\r\n                         >\r\n                           {size} - Còn {sizeQuantity} sản phẩm\r\n                           {isOutOfStock && (\r\n                             <span className=\"absolute inset-0 flex items-center justify-center text-xs text-gray-500 bg-white bg-opacity-70 pointer-events-none\">\r\n"
                },
                {
                    "date": 1747205874001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,28 +193,24 @@\n                   <div className=\"grid grid-cols-3 gap-2\">\r\n                     {availableSizes.map((size) => {\r\n                       const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n                       const isOutOfStock = sizeQuantity === 0;\r\n+                      const isSelected = selectedSize === size && !isOutOfStock;\r\n                       return (\r\n                         <button\r\n                           key={size}\r\n                           onClick={() => {\r\n                             if (!isOutOfStock) setSelectedSize(size);\r\n                           }}\r\n                           disabled={isOutOfStock}\r\n-                          className={`py-2 px-4 border-2 text-sm font-medium transition-colors relative\r\n-                            border-black\r\n-                            ${isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed' : 'text-black bg-white'}\r\n-                            ${selectedSize === size && !isOutOfStock ? 'bg-black text-white' : ''}\r\n-                          `}\r\n+                          className={\r\n+                            `py-2 px-4 border-2 text-sm font-medium transition-colors relative border-black ` +\r\n+                            (isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed ' : '') +\r\n+                            (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\r\n+                          }\r\n                           style={{ minWidth: 80, borderRadius: 0 }}\r\n                         >\r\n                           {size} - Còn {sizeQuantity} sản phẩm\r\n-                          {isOutOfStock && (\r\n-                            <span className=\"absolute inset-0 flex items-center justify-center text-xs text-gray-500 bg-white bg-opacity-70 pointer-events-none\">\r\n-                              Hết hàng\r\n-                            </span>\r\n-                          )}\r\n                         </button>\r\n                       );\r\n                     })}\r\n                   </div>\r\n"
                },
                {
                    "date": 1747206081267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,13 +202,13 @@\n                             if (!isOutOfStock) setSelectedSize(size);\r\n                           }}\r\n                           disabled={isOutOfStock}\r\n                           className={\r\n-                            `py-2 px-4 border-2 text-sm font-medium transition-colors relative border-black ` +\r\n+                            `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\r\n                             (isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed ' : '') +\r\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\r\n                           }\r\n-                          style={{ minWidth: 80, borderRadius: 0 }}\r\n+                          style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\r\n                         >\r\n                           {size} - Còn {sizeQuantity} sản phẩm\r\n                         </button>\r\n                       );\r\n"
                },
                {
                    "date": 1747208947562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,9 @@\n       price: product.price,\r\n       image: product.images[0],\r\n       size: selectedSize,\r\n       quantity: quantity,\r\n+      color: product.color || (product.colors && product.colors[0]) || \"Không xác định\",\r\n       currentStock: sizeQuantity\r\n     });\r\n \r\n     toast.success(\"Đã thêm vào giỏ hàng\");\r\n"
                },
                {
                    "date": 1747209015045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       price: product.price,\r\n       image: product.images[0],\r\n       size: selectedSize,\r\n       quantity: quantity,\r\n-      color: product.color || (product.colors && product.colors[0]) || \"Không xác định\",\r\n+      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\r\n       currentStock: sizeQuantity\r\n     });\r\n \r\n     toast.success(\"Đã thêm vào giỏ hàng\");\r\n"
                },
                {
                    "date": 1747209663340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   const [showHelpPanel, setShowHelpPanel] = useState(false);\r\n   const [showSizeOptions, setShowSizeOptions] = useState(false);\r\n   const [showSizeGuide, setShowSizeGuide] = useState(false);\r\n   const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n+  const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n       try {\r\n@@ -60,9 +61,9 @@\n   }\r\n \r\n   const handleAddToCart = () => {\r\n     if (!selectedSize) {\r\n-      toast.error(\"Vui lòng chọn size\");\r\n+      setShowSelectSizeModal(true);\r\n       return;\r\n     }\r\n \r\n     const sizeQuantity = product[`quantity${selectedSize}`];\r\n@@ -90,9 +91,12 @@\n     toast.success(\"Đã thêm vào giỏ hàng\");\r\n   };\r\n \r\n   const handleQuantityChange = (value: number) => {\r\n-    if (!product || !selectedSize) return;\r\n+    if (!product || !selectedSize) {\r\n+      setShowSelectSizeModal(true);\r\n+      return;\r\n+    }\r\n     \r\n     const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n     if (value > sizeQuantity) {\r\n       toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\r\n@@ -355,7 +359,47 @@\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n+\r\n+      {/* Modal chọn size */}\r\n+      {showSelectSizeModal && (\r\n+        <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n+          <div className=\"bg-white/80 w-11/12 max-w-md relative rounded-lg shadow-lg\">\r\n+            <button\r\n+              onClick={() => setShowSelectSizeModal(false)}\r\n+              className=\"absolute top-4 right-4 text-black\"\r\n+            >\r\n+              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n+                <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n+                <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n+              </svg>\r\n+            </button>\r\n+            <div className=\"text-center py-8 px-6\">\r\n+              <p style={{ fontSize: \"1em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", fontWeight: \"bold\" }}>\r\n+                Vui lòng chọn size trước khi thêm vào giỏ hàng\r\n+              </p>\r\n+              <button\r\n+                onClick={() => setShowSelectSizeModal(false)}\r\n+                style={{\r\n+                  width: \"100%\",\r\n+                  padding: \"12px\",\r\n+                  fontSize: \"0.9em\",\r\n+                  color: \"#ffffff\",\r\n+                  backgroundColor: \"#000000\",\r\n+                  border: \"none\",\r\n+                  cursor: \"pointer\",\r\n+                  textTransform: \"uppercase\",\r\n+                  letterSpacing: \"0.1em\",\r\n+                  marginTop: \"20px\",\r\n+                  borderRadius: \"4px\"\r\n+                }}\r\n+              >\r\n+                Đóng\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747209800059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,9 +265,9 @@\n \r\n             <button\r\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\r\n               onClick={handleAddToCart}\r\n-              disabled={!selectedSize || product[`quantity${selectedSize}`] === 0}\r\n+              disabled={selectedSize && product[`quantity${selectedSize}`] === 0}\r\n             >\r\n               {selectedSize && product[`quantity${selectedSize}`] === 0\r\n                 ? \"Hết hàng\"\r\n                 : \"Thêm vào giỏ hàng\"}\r\n"
                },
                {
                    "date": 1747209813509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,9 +265,9 @@\n \r\n             <button\r\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\r\n               onClick={handleAddToCart}\r\n-              disabled={selectedSize && product[`quantity${selectedSize}`] === 0}\r\n+              disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\r\n             >\r\n               {selectedSize && product[`quantity${selectedSize}`] === 0\r\n                 ? \"Hết hàng\"\r\n                 : \"Thêm vào giỏ hàng\"}\r\n"
                },
                {
                    "date": 1747209943585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -374,25 +374,28 @@\n                 <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n               </svg>\r\n             </button>\r\n             <div className=\"text-center py-8 px-6\">\r\n-              <p style={{ fontSize: \"1em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", fontWeight: \"bold\" }}>\r\n-                Vui lòng chọn size trước khi thêm vào giỏ hàng\r\n+              <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\r\n+                Vui lòng chọn size\r\n               </p>\r\n+              <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\r\n+                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng.\r\n+              </p>\r\n+            </div>\r\n+            <div className=\"border-t border-gray-200\">\r\n               <button\r\n                 onClick={() => setShowSelectSizeModal(false)}\r\n                 style={{\r\n                   width: \"100%\",\r\n                   padding: \"12px\",\r\n-                  fontSize: \"0.9em\",\r\n+                  fontSize: \"0.7em\",\r\n                   color: \"#ffffff\",\r\n                   backgroundColor: \"#000000\",\r\n                   border: \"none\",\r\n                   cursor: \"pointer\",\r\n                   textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\",\r\n-                  marginTop: \"20px\",\r\n-                  borderRadius: \"4px\"\r\n+                  letterSpacing: \"0.1em\"\r\n                 }}\r\n               >\r\n                 Đóng\r\n               </button>\r\n"
                },
                {
                    "date": 1747210061694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -374,28 +374,25 @@\n                 <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n               </svg>\r\n             </button>\r\n             <div className=\"text-center py-8 px-6\">\r\n-              <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\r\n-                Vui lòng chọn size\r\n+              <p style={{ fontSize: \"1em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", fontWeight: \"bold\" }}>\r\n+                Vui lòng chọn size trước khi thêm vào giỏ hàng\r\n               </p>\r\n-              <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\r\n-                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng.\r\n-              </p>\r\n-            </div>\r\n-            <div className=\"border-t border-gray-200\">\r\n               <button\r\n                 onClick={() => setShowSelectSizeModal(false)}\r\n                 style={{\r\n                   width: \"100%\",\r\n                   padding: \"12px\",\r\n-                  fontSize: \"0.7em\",\r\n+                  fontSize: \"0.9em\",\r\n                   color: \"#ffffff\",\r\n                   backgroundColor: \"#000000\",\r\n                   border: \"none\",\r\n                   cursor: \"pointer\",\r\n                   textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\"\r\n+                  letterSpacing: \"0.1em\",\r\n+                  marginTop: \"20px\",\r\n+                  borderRadius: \"4px\"\r\n                 }}\r\n               >\r\n                 Đóng\r\n               </button>\r\n"
                },
                {
                    "date": 1747210793297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,9 +363,9 @@\n \r\n       {/* Modal chọn size */}\r\n       {showSelectSizeModal && (\r\n         <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-          <div className=\"bg-white/80 w-11/12 max-w-md relative rounded-lg shadow-lg\">\r\n+          <div className=\"bg-white/80 w-11/12 max-w-md relative shadow-lg\">\r\n             <button\r\n               onClick={() => setShowSelectSizeModal(false)}\r\n               className=\"absolute top-4 right-4 text-black\"\r\n             >\r\n@@ -373,30 +373,19 @@\n                 <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                 <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n               </svg>\r\n             </button>\r\n-            <div className=\"text-center py-8 px-6\">\r\n-              <p style={{ fontSize: \"1em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", fontWeight: \"bold\" }}>\r\n-                Vui lòng chọn size trước khi thêm vào giỏ hàng\r\n-              </p>\r\n-              <button\r\n-                onClick={() => setShowSelectSizeModal(false)}\r\n-                style={{\r\n-                  width: \"100%\",\r\n-                  padding: \"12px\",\r\n-                  fontSize: \"0.9em\",\r\n-                  color: \"#ffffff\",\r\n-                  backgroundColor: \"#000000\",\r\n-                  border: \"none\",\r\n-                  cursor: \"pointer\",\r\n-                  textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\",\r\n-                  marginTop: \"20px\",\r\n-                  borderRadius: \"4px\"\r\n-                }}\r\n-              >\r\n-                Đóng\r\n-              </button>\r\n+            <div className=\"p-6\">\r\n+              <h2 className=\"text-lg font-semibold mb-4\">Vui lòng chọn size</h2>\r\n+              <p className=\"text-gray-600 mb-6\">Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng.</p>\r\n+              <div className=\"flex justify-end\">\r\n+                <button\r\n+                  onClick={() => setShowSelectSizeModal(false)}\r\n+                  className=\"bg-black text-white px-4 py-2 text-sm font-medium hover:bg-gray-800 transition\"\r\n+                >\r\n+                  Đóng\r\n+                </button>\r\n+              </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1747210849639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,9 +363,9 @@\n \r\n       {/* Modal chọn size */}\r\n       {showSelectSizeModal && (\r\n         <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-          <div className=\"bg-white/80 w-11/12 max-w-md relative shadow-lg\">\r\n+          <div className=\"bg-white/80 w-11/12 max-w-md relative rounded-lg shadow-lg\">\r\n             <button\r\n               onClick={() => setShowSelectSizeModal(false)}\r\n               className=\"absolute top-4 right-4 text-black\"\r\n             >\r\n@@ -373,19 +373,30 @@\n                 <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                 <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n               </svg>\r\n             </button>\r\n-            <div className=\"p-6\">\r\n-              <h2 className=\"text-lg font-semibold mb-4\">Vui lòng chọn size</h2>\r\n-              <p className=\"text-gray-600 mb-6\">Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng.</p>\r\n-              <div className=\"flex justify-end\">\r\n-                <button\r\n-                  onClick={() => setShowSelectSizeModal(false)}\r\n-                  className=\"bg-black text-white px-4 py-2 text-sm font-medium hover:bg-gray-800 transition\"\r\n-                >\r\n-                  Đóng\r\n-                </button>\r\n-              </div>\r\n+            <div className=\"text-center py-8 px-6\">\r\n+              <p style={{ fontSize: \"1em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", fontWeight: \"bold\" }}>\r\n+                Vui lòng chọn size trước khi thêm vào giỏ hàng\r\n+              </p>\r\n+              <button\r\n+                onClick={() => setShowSelectSizeModal(false)}\r\n+                style={{\r\n+                  width: \"100%\",\r\n+                  padding: \"12px\",\r\n+                  fontSize: \"0.9em\",\r\n+                  color: \"#ffffff\",\r\n+                  backgroundColor: \"#000000\",\r\n+                  border: \"none\",\r\n+                  cursor: \"pointer\",\r\n+                  textTransform: \"uppercase\",\r\n+                  letterSpacing: \"0.1em\",\r\n+                  marginTop: \"20px\",\r\n+                  borderRadius: \"4px\"\r\n+                }}\r\n+              >\r\n+                Đóng\r\n+              </button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1747210861334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,9 +363,9 @@\n \r\n       {/* Modal chọn size */}\r\n       {showSelectSizeModal && (\r\n         <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-          <div className=\"bg-white/80 w-11/12 max-w-md relative rounded-lg shadow-lg\">\r\n+          <div className=\"bg-white w-11/12 max-w-md relative shadow-lg\">\r\n             <button\r\n               onClick={() => setShowSelectSizeModal(false)}\r\n               className=\"absolute top-4 right-4 text-black\"\r\n             >\r\n@@ -373,30 +373,19 @@\n                 <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                 <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n               </svg>\r\n             </button>\r\n-            <div className=\"text-center py-8 px-6\">\r\n-              <p style={{ fontSize: \"1em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", fontWeight: \"bold\" }}>\r\n-                Vui lòng chọn size trước khi thêm vào giỏ hàng\r\n-              </p>\r\n-              <button\r\n-                onClick={() => setShowSelectSizeModal(false)}\r\n-                style={{\r\n-                  width: \"100%\",\r\n-                  padding: \"12px\",\r\n-                  fontSize: \"0.9em\",\r\n-                  color: \"#ffffff\",\r\n-                  backgroundColor: \"#000000\",\r\n-                  border: \"none\",\r\n-                  cursor: \"pointer\",\r\n-                  textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\",\r\n-                  marginTop: \"20px\",\r\n-                  borderRadius: \"4px\"\r\n-                }}\r\n-              >\r\n-                Đóng\r\n-              </button>\r\n+            <div className=\"p-6\">\r\n+              <h2 className=\"text-lg font-semibold mb-4\">Xác nhận</h2>\r\n+              <p className=\"text-gray-600 mb-6\">Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng.</p>\r\n+              <div className=\"flex justify-end\">\r\n+                <button\r\n+                  onClick={() => setShowSelectSizeModal(false)}\r\n+                  className=\"bg-black text-white px-4 py-2 text-sm font-medium hover:bg-gray-800 transition\"\r\n+                >\r\n+                  Đóng\r\n+                </button>\r\n+              </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1747210884417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,9 +363,9 @@\n \r\n       {/* Modal chọn size */}\r\n       {showSelectSizeModal && (\r\n         <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-          <div className=\"bg-white w-11/12 max-w-md relative shadow-lg\">\r\n+          <div className=\"bg-white/80 w-11/12 max-w-md relative rounded-lg shadow-lg\">\r\n             <button\r\n               onClick={() => setShowSelectSizeModal(false)}\r\n               className=\"absolute top-4 right-4 text-black\"\r\n             >\r\n@@ -373,19 +373,30 @@\n                 <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                 <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n               </svg>\r\n             </button>\r\n-            <div className=\"p-6\">\r\n-              <h2 className=\"text-lg font-semibold mb-4\">Xác nhận</h2>\r\n-              <p className=\"text-gray-600 mb-6\">Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng.</p>\r\n-              <div className=\"flex justify-end\">\r\n-                <button\r\n-                  onClick={() => setShowSelectSizeModal(false)}\r\n-                  className=\"bg-black text-white px-4 py-2 text-sm font-medium hover:bg-gray-800 transition\"\r\n-                >\r\n-                  Đóng\r\n-                </button>\r\n-              </div>\r\n+            <div className=\"text-center py-8 px-6\">\r\n+              <p style={{ fontSize: \"1em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", fontWeight: \"bold\" }}>\r\n+                Vui lòng chọn size trước khi thêm vào giỏ hàng\r\n+              </p>\r\n+              <button\r\n+                onClick={() => setShowSelectSizeModal(false)}\r\n+                style={{\r\n+                  width: \"100%\",\r\n+                  padding: \"12px\",\r\n+                  fontSize: \"0.9em\",\r\n+                  color: \"#ffffff\",\r\n+                  backgroundColor: \"#000000\",\r\n+                  border: \"none\",\r\n+                  cursor: \"pointer\",\r\n+                  textTransform: \"uppercase\",\r\n+                  letterSpacing: \"0.1em\",\r\n+                  marginTop: \"20px\",\r\n+                  borderRadius: \"4px\"\r\n+                }}\r\n+              >\r\n+                Đóng\r\n+              </button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1747210904848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,9 +363,9 @@\n \r\n       {/* Modal chọn size */}\r\n       {showSelectSizeModal && (\r\n         <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-          <div className=\"bg-white/80 w-11/12 max-w-md relative rounded-lg shadow-lg\">\r\n+          <div className=\"bg-white w-11/12 max-w-md relative\">\r\n             <button\r\n               onClick={() => setShowSelectSizeModal(false)}\r\n               className=\"absolute top-4 right-4 text-black\"\r\n             >\r\n@@ -373,30 +373,49 @@\n                 <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                 <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n               </svg>\r\n             </button>\r\n-            <div className=\"text-center py-8 px-6\">\r\n-              <p style={{ fontSize: \"1em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", fontWeight: \"bold\" }}>\r\n-                Vui lòng chọn size trước khi thêm vào giỏ hàng\r\n+            <div className=\"text-center py-8\">\r\n+              <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\r\n+                VUI LÒNG CHỌN SIZE\r\n               </p>\r\n+              <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\r\n+                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\r\n+              </p>\r\n+            </div>\r\n+            <div className=\"border-t border-gray-200\">\r\n               <button\r\n                 onClick={() => setShowSelectSizeModal(false)}\r\n                 style={{\r\n                   width: \"100%\",\r\n                   padding: \"12px\",\r\n-                  fontSize: \"0.9em\",\r\n+                  fontSize: \"0.7em\",\r\n                   color: \"#ffffff\",\r\n                   backgroundColor: \"#000000\",\r\n                   border: \"none\",\r\n                   cursor: \"pointer\",\r\n                   textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\",\r\n-                  marginTop: \"20px\",\r\n-                  borderRadius: \"4px\"\r\n+                  letterSpacing: \"0.1em\"\r\n                 }}\r\n               >\r\n                 Đóng\r\n               </button>\r\n+              <button\r\n+                onClick={() => setShowSelectSizeModal(false)}\r\n+                style={{\r\n+                  width: \"100%\",\r\n+                  padding: \"12px\",\r\n+                  fontSize: \"0.7em\",\r\n+                  color: \"#000000\",\r\n+                  backgroundColor: \"transparent\",\r\n+                  border: \"none\",\r\n+                  cursor: \"pointer\",\r\n+                  textTransform: \"uppercase\",\r\n+                  letterSpacing: \"0.1em\"\r\n+                }}\r\n+              >\r\n+                Hủy\r\n+              </button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1747210968954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -398,24 +398,8 @@\n                 }}\r\n               >\r\n                 Đóng\r\n               </button>\r\n-              <button\r\n-                onClick={() => setShowSelectSizeModal(false)}\r\n-                style={{\r\n-                  width: \"100%\",\r\n-                  padding: \"12px\",\r\n-                  fontSize: \"0.7em\",\r\n-                  color: \"#000000\",\r\n-                  backgroundColor: \"transparent\",\r\n-                  border: \"none\",\r\n-                  cursor: \"pointer\",\r\n-                  textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\"\r\n-                }}\r\n-              >\r\n-                Hủy\r\n-              </button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1747211012320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,408 @@\n+\"use client\";\r\n+\r\n+import { useState, useEffect } from \"react\";\r\n+import { useParams, usePathname } from \"next/navigation\";\r\n+import { motion } from \"framer-motion\";\r\n+import { toast } from \"react-hot-toast\";\r\n+import { useCart } from \"@/context/CartContext\";\r\n+import { Product } from \"@/types/product\";\r\n+import Image from \"next/image\";\r\n+import Link from \"next/link\";\r\n+import HelpPanel from \"@/components/HelpPanel\";\r\n+\r\n+export default function ProductDetailPage() {\r\n+  const { slug } = useParams();\r\n+  const pathname = usePathname();\r\n+  const [product, setProduct] = useState<Product | null>(null);\r\n+  const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n+  const [quantity, setQuantity] = useState<number>(1);\r\n+  const [isLoading, setIsLoading] = useState(true);\r\n+  const { addToCart } = useCart();\r\n+  const [showFullImage, setShowFullImage] = useState(false);\r\n+  const [showHelpPanel, setShowHelpPanel] = useState(false);\r\n+  const [showSizeOptions, setShowSizeOptions] = useState(false);\r\n+  const [showSizeGuide, setShowSizeGuide] = useState(false);\r\n+  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n+  const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProduct = async () => {\r\n+      try {\r\n+        const response = await fetch(`/api/products/by-slug/${slug}`);\r\n+        const data = await response.json();\r\n+        if (data.ok) {\r\n+          setProduct(data.product);\r\n+        }\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching product:\", error);\r\n+        toast.error(\"Failed to load product\");\r\n+      } finally {\r\n+        setIsLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProduct();\r\n+  }, [slug]);\r\n+\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900\"></div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!product) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <p className=\"text-xl\">Product not found</p>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  const handleAddToCart = () => {\r\n+    if (!selectedSize) {\r\n+      setShowSelectSizeModal(true);\r\n+      return;\r\n+    }\r\n+\r\n+    const sizeQuantity = product[`quantity${selectedSize}`];\r\n+    if (sizeQuantity === 0) {\r\n+      toast.error(`Size ${selectedSize} đã hết hàng`);\r\n+      return;\r\n+    }\r\n+\r\n+    if (quantity > sizeQuantity) {\r\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\r\n+      return;\r\n+    }\r\n+\r\n+    addToCart({\r\n+      id: product._id,\r\n+      name: product.name,\r\n+      price: product.price,\r\n+      image: product.images[0],\r\n+      size: selectedSize,\r\n+      quantity: quantity,\r\n+      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\r\n+      currentStock: sizeQuantity\r\n+    });\r\n+\r\n+    toast.success(\"Đã thêm vào giỏ hàng\");\r\n+  };\r\n+\r\n+  const handleQuantityChange = (value: number) => {\r\n+    if (!product || !selectedSize) {\r\n+      setShowSelectSizeModal(true);\r\n+      return;\r\n+    }\r\n+    \r\n+    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n+    if (value > sizeQuantity) {\r\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\r\n+      return;\r\n+    }\r\n+    \r\n+    setQuantity(value);\r\n+  };\r\n+\r\n+  const handlePrevImage = () => {\r\n+    if (!product || !product.images) return;\r\n+    setCurrentImageIndex((currentImageIndex - 1 + product.images.length) % product.images.length);\r\n+  };\r\n+\r\n+  const handleNextImage = () => {\r\n+    if (!product || !product.images) return;\r\n+    setCurrentImageIndex((currentImageIndex + 1) % product.images.length);\r\n+  };\r\n+\r\n+  const isClothing = product.category && product.category !== \"CAP\";\r\n+  const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-white flex flex-col\">\r\n+      {/* Breadcrumb */}\r\n+      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\r\n+        <span className=\"font-semibold uppercase underline\">{product.category}</span>\r\n+        <span className=\"mx-2\">/</span>\r\n+        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\r\n+      </div>\r\n+\r\n+      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\r\n+        {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\r\n+        <div className=\"flex-1 flex flex-col items-center\">\r\n+          <div className=\"relative w-full flex justify-center items-center mt-6 mb-6\" style={{height: '450px'}}>\r\n+            <Image\r\n+              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\r\n+              alt={product.name}\r\n+              width={450}\r\n+              height={450}\r\n+              quality={100}\r\n+              className=\"object-contain object-center w-full h-full\"\r\n+              style={{ maxWidth: \"90%\", height: \"auto\" }}\r\n+              onClick={() => setShowFullImage(true)}\r\n+            />\r\n+            {product.images.length > 1 && (\r\n+              <>\r\n+                <button\r\n+                  onClick={handlePrevImage}\r\n+                  className=\"absolute left-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\r\n+                >\r\n+                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 19l-7-7 7-7\" />\r\n+                  </svg>\r\n+                </button>\r\n+                <button\r\n+                  onClick={handleNextImage}\r\n+                  className=\"absolute right-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\r\n+                >\r\n+                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 5l7 7-7 7\" />\r\n+                  </svg>\r\n+                </button>\r\n+              </>\r\n+            )}\r\n+          </div>\r\n+          <div className=\"flex gap-4 w-full justify-center mt-10\">\r\n+            {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\r\n+              <div \r\n+                key={index} \r\n+                className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\r\n+                  currentImageIndex === index ? \"border-black scale-105\" : \"border-gray-200 hover:border-gray-400\"\r\n+                }`}\r\n+                onClick={() => setCurrentImageIndex(index)}\r\n+              >\r\n+                <Image\r\n+                  src={img}\r\n+                  alt={`${product.name} thumbnail ${index + 1}`}\r\n+                  width={96}\r\n+                  height={96}\r\n+                  className=\"object-cover\"\r\n+                />\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Bên phải: Thông tin sản phẩm */}\r\n+        <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\r\n+          <div className=\"w-full max-w-xl\">\r\n+            <h1 className=\"text-2xl font-bold text-center md:text-left mb-2 uppercase text-black\">{product.name}</h1>\r\n+            <div className=\"text-xl font-semibold mb-4 text-black\">\r\n+              {(product.price).toLocaleString('vi-VN')} VND\r\n+            </div>\r\n+\r\n+            {isClothing ? (\r\n+              <div className=\"mb-6\">\r\n+                <div className=\"relative\">\r\n+                  <div className=\"grid grid-cols-3 gap-2\">\r\n+                    {availableSizes.map((size) => {\r\n+                      const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n+                      const isOutOfStock = sizeQuantity === 0;\r\n+                      const isSelected = selectedSize === size && !isOutOfStock;\r\n+                      return (\r\n+                        <button\r\n+                          key={size}\r\n+                          onClick={() => {\r\n+                            if (!isOutOfStock) setSelectedSize(size);\r\n+                          }}\r\n+                          disabled={isOutOfStock}\r\n+                          className={\r\n+                            `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\r\n+                            (isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed ' : '') +\r\n+                            (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\r\n+                          }\r\n+                          style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\r\n+                        >\r\n+                          {size} - Còn {sizeQuantity} sản phẩm\r\n+                        </button>\r\n+                      );\r\n+                    })}\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+            ) : product.category === \"CAP\" ? (\r\n+              <div className=\"mb-6\">\r\n+                <p className=\"text-sm text-black\">\r\n+                  Còn {product.quantityHat} sản phẩm\r\n+                </p>\r\n+              </div>\r\n+            ) : null}\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\r\n+              <div className=\"flex items-center gap-2\">\r\n+                <button\r\n+                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\r\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\r\n+                >\r\n+                  -\r\n+                </button>\r\n+                <input\r\n+                  type=\"number\"\r\n+                  min=\"1\"\r\n+                  value={quantity}\r\n+                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\r\n+                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\r\n+                />\r\n+                <button\r\n+                  onClick={() => handleQuantityChange(quantity + 1)}\r\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\r\n+                >\r\n+                  +\r\n+                </button>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4 text-base\">\r\n+              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4 text-xs\">\r\n+              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\r\n+              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\r\n+            </div>\r\n+\r\n+            <button\r\n+              className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\r\n+              onClick={handleAddToCart}\r\n+              disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\r\n+            >\r\n+              {selectedSize && product[`quantity${selectedSize}`] === 0\r\n+                ? \"Hết hàng\"\r\n+                : \"Thêm vào giỏ hàng\"}\r\n+            </button>\r\n+\r\n+            {isClothing && (\r\n+              <button\r\n+                onClick={() => setShowSizeGuide(true)}\r\n+                className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\r\n+                style={{ transform: 'none' }}\r\n+              >\r\n+                <span className=\"group-hover:font-semibold\">Size guide</span>\r\n+                <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Navigation và các thông tin phụ */}\r\n+      <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\r\n+        <div className=\"text-black\">\r\n+          <span className=\"font-semibold uppercase underline\">{product.category}</span>\r\n+          {\" / \"}\r\n+          <span className=\"font-semibold uppercase underline\">{product.name}</span>\r\n+        </div>\r\n+        <div>\r\n+          <button \r\n+            onClick={() => setShowHelpPanel(true)}\r\n+            className=\"hover:underline text-black font-semibold uppercase\"\r\n+          >\r\n+            Cần giúp đỡ?\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Full Image Modal */}\r\n+      {showFullImage && (\r\n+        <div \r\n+          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \r\n+          onClick={() => setShowFullImage(false)}\r\n+        >\r\n+          <div className=\"min-h-screen w-full flex justify-center items-start\">\r\n+            <Image\r\n+              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\r\n+              alt={product.name}\r\n+              width={2000}\r\n+              height={2000}\r\n+              quality={100}\r\n+              className=\"object-contain w-full\"\r\n+              style={{ height: \"auto\" }}\r\n+            />\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Help Panel */}\r\n+      <HelpPanel isOpen={showHelpPanel} onClose={() => setShowHelpPanel(false)} />\r\n+\r\n+      {/* Size Guide Modal */}\r\n+      {showSizeGuide && (\r\n+        <div \r\n+          className=\"fixed inset-0 bg-white/60 backdrop-blur-sm flex items-center justify-center z-50\" \r\n+          onClick={() => setShowSizeGuide(false)}\r\n+        >\r\n+          <div \r\n+            className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\r\n+            onClick={e => e.stopPropagation()}\r\n+          >\r\n+            <div className=\"flex justify-between items-center mb-4\">\r\n+              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\r\n+              <button \r\n+                onClick={() => setShowSizeGuide(false)}\r\n+                className=\"text-gray-500 hover:text-black\"\r\n+              >\r\n+                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n+                </svg>\r\n+              </button>\r\n+            </div>\r\n+            <div>\r\n+              <Image\r\n+                src={product.sizeGuideImage || \"/size-guide.jpg\"}\r\n+                alt=\"Size Guide\"\r\n+                width={600}\r\n+                height={400}\r\n+                className=\"w-full h-auto rounded-lg\"\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Modal chọn size */}\r\n+      {showSelectSizeModal && (\r\n+        <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n+          <div className=\"bg-white w-11/12 max-w-md relative\">\r\n+            <button\r\n+              onClick={() => setShowSelectSizeModal(false)}\r\n+              className=\"absolute top-4 right-4 text-black\"\r\n+            >\r\n+              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n+                <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n+                <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n+              </svg>\r\n+            </button>\r\n+            <div className=\"text-center py-8\">\r\n+              <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\r\n+                VUI LÒNG CHỌN SIZE\r\n+              </p>\r\n+              <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\r\n+                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\r\n+              </p>\r\n+            </div>\r\n+            <div className=\"border-t border-gray-200\">\r\n+              <button\r\n+                onClick={() => setShowSelectSizeModal(false)}\r\n+                style={{\r\n+                  width: \"100%\",\r\n+                  padding: \"12px\",\r\n+                  fontSize: \"0.7em\",\r\n+                  color: \"#ffffff\",\r\n+                  backgroundColor: \"#000000\",\r\n+                  border: \"none\",\r\n+                  cursor: \"pointer\",\r\n+                  textTransform: \"uppercase\",\r\n+                  letterSpacing: \"0.1em\"\r\n+                }}\r\n+              >\r\n+                Đóng\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747278782146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,417 +8,18 @@\n import { Product } from \"@/types/product\";\r\n import Image from \"next/image\";\r\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n+import { getProduct } from \"@/services/product\";\r\n \r\n-export default function ProductDetailPage() {\r\n-  const { slug } = useParams();\r\n-  const pathname = usePathname();\r\n-  const [product, setProduct] = useState<Product | null>(null);\r\n-  const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n-  const [quantity, setQuantity] = useState<number>(1);\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n-  const { addToCart } = useCart();\r\n-  const [showFullImage, setShowFullImage] = useState(false);\r\n-  const [showHelpPanel, setShowHelpPanel] = useState(false);\r\n-  const [showSizeOptions, setShowSizeOptions] = useState(false);\r\n-  const [showSizeGuide, setShowSizeGuide] = useState(false);\r\n-  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n-  const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProduct = async () => {\r\n-      try {\r\n-        const response = await fetch(`/api/products/by-slug/${slug}`);\r\n-        const data = await response.json();\r\n-        if (data.ok) {\r\n-          setProduct(data.product);\r\n-        }\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching product:\", error);\r\n-        toast.error(\"Failed to load product\");\r\n-      } finally {\r\n-        setIsLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProduct();\r\n-  }, [slug]);\r\n-\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900\"></div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!product) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <p className=\"text-xl\">Product not found</p>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  const handleAddToCart = () => {\r\n-    if (!selectedSize) {\r\n-      setShowSelectSizeModal(true);\r\n-      return;\r\n-    }\r\n-\r\n-    const sizeQuantity = product[`quantity${selectedSize}`];\r\n-    if (sizeQuantity === 0) {\r\n-      toast.error(`Size ${selectedSize} đã hết hàng`);\r\n-      return;\r\n-    }\r\n-\r\n-    if (quantity > sizeQuantity) {\r\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\r\n-      return;\r\n-    }\r\n-\r\n-    addToCart({\r\n-      id: product._id,\r\n-      name: product.name,\r\n-      price: product.price,\r\n-      image: product.images[0],\r\n-      size: selectedSize,\r\n-      quantity: quantity,\r\n-      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\r\n-      currentStock: sizeQuantity\r\n-    });\r\n-\r\n-    toast.success(\"Đã thêm vào giỏ hàng\");\r\n+export async function generateMetadata({ params }: { params: { slug: string } }) {\r\n+  const product = await getProduct(params.slug);\r\n+  return {\r\n+    title: `${product.name} | AISH`,\r\n+    description: product.description,\r\n   };\r\n+}\r\n \r\n-  const handleQuantityChange = (value: number) => {\r\n-    if (!product || !selectedSize) {\r\n-      setShowSelectSizeModal(true);\r\n-      return;\r\n-    }\r\n-    \r\n-    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n-    if (value > sizeQuantity) {\r\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\r\n-      return;\r\n-    }\r\n-    \r\n-    setQuantity(value);\r\n-  };\r\n-\r\n-  const handlePrevImage = () => {\r\n-    if (!product || !product.images) return;\r\n-    setCurrentImageIndex((currentImageIndex - 1 + product.images.length) % product.images.length);\r\n-  };\r\n-\r\n-  const handleNextImage = () => {\r\n-    if (!product || !product.images) return;\r\n-    setCurrentImageIndex((currentImageIndex + 1) % product.images.length);\r\n-  };\r\n-\r\n-  const isClothing = product.category && product.category !== \"CAP\";\r\n-  const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col\">\r\n-      {/* Breadcrumb */}\r\n-      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\r\n-        <span className=\"font-semibold uppercase underline\">{product.category}</span>\r\n-        <span className=\"mx-2\">/</span>\r\n-        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\r\n-      </div>\r\n-\r\n-      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\r\n-        {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\r\n-        <div className=\"flex-1 flex flex-col items-center\">\r\n-          <div className=\"relative w-full flex justify-center items-center mt-6 mb-6\" style={{height: '450px'}}>\r\n-            <Image\r\n-              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\r\n-              alt={product.name}\r\n-              width={450}\r\n-              height={450}\r\n-              quality={100}\r\n-              className=\"object-contain object-center w-full h-full\"\r\n-              style={{ maxWidth: \"90%\", height: \"auto\" }}\r\n-              onClick={() => setShowFullImage(true)}\r\n-            />\r\n-            {product.images.length > 1 && (\r\n-              <>\r\n-                <button\r\n-                  onClick={handlePrevImage}\r\n-                  className=\"absolute left-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\r\n-                >\r\n-                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 19l-7-7 7-7\" />\r\n-                  </svg>\r\n-                </button>\r\n-                <button\r\n-                  onClick={handleNextImage}\r\n-                  className=\"absolute right-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\r\n-                >\r\n-                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 5l7 7-7 7\" />\r\n-                  </svg>\r\n-                </button>\r\n-              </>\r\n-            )}\r\n-          </div>\r\n-          <div className=\"flex gap-4 w-full justify-center mt-10\">\r\n-            {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\r\n-              <div \r\n-                key={index} \r\n-                className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\r\n-                  currentImageIndex === index ? \"border-black scale-105\" : \"border-gray-200 hover:border-gray-400\"\r\n-                }`}\r\n-                onClick={() => setCurrentImageIndex(index)}\r\n-              >\r\n-                <Image\r\n-                  src={img}\r\n-                  alt={`${product.name} thumbnail ${index + 1}`}\r\n-                  width={96}\r\n-                  height={96}\r\n-                  className=\"object-cover\"\r\n-                />\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Bên phải: Thông tin sản phẩm */}\r\n-        <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\r\n-          <div className=\"w-full max-w-xl\">\r\n-            <h1 className=\"text-2xl font-bold text-center md:text-left mb-2 uppercase text-black\">{product.name}</h1>\r\n-            <div className=\"text-xl font-semibold mb-4 text-black\">\r\n-              {(product.price).toLocaleString('vi-VN')} VND\r\n-            </div>\r\n-\r\n-            {isClothing ? (\r\n-              <div className=\"mb-6\">\r\n-                <div className=\"relative\">\r\n-                  <div className=\"grid grid-cols-3 gap-2\">\r\n-                    {availableSizes.map((size) => {\r\n-                      const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n-                      const isOutOfStock = sizeQuantity === 0;\r\n-                      const isSelected = selectedSize === size && !isOutOfStock;\r\n-                      return (\r\n-                        <button\r\n-                          key={size}\r\n-                          onClick={() => {\r\n-                            if (!isOutOfStock) setSelectedSize(size);\r\n-                          }}\r\n-                          disabled={isOutOfStock}\r\n-                          className={\r\n-                            `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\r\n-                            (isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed ' : '') +\r\n-                            (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\r\n-                          }\r\n-                          style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\r\n-                        >\r\n-                          {size} - Còn {sizeQuantity} sản phẩm\r\n-                        </button>\r\n-                      );\r\n-                    })}\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-            ) : product.category === \"CAP\" ? (\r\n-              <div className=\"mb-6\">\r\n-                <p className=\"text-sm text-black\">\r\n-                  Còn {product.quantityHat} sản phẩm\r\n-                </p>\r\n-              </div>\r\n-            ) : null}\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\r\n-              <div className=\"flex items-center gap-2\">\r\n-                <button\r\n-                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\r\n-                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\r\n-                >\r\n-                  -\r\n-                </button>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  min=\"1\"\r\n-                  value={quantity}\r\n-                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\r\n-                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\r\n-                />\r\n-                <button\r\n-                  onClick={() => handleQuantityChange(quantity + 1)}\r\n-                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\r\n-                >\r\n-                  +\r\n-                </button>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4 text-base\">\r\n-              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4 text-xs\">\r\n-              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\r\n-              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\r\n-            </div>\r\n-\r\n-            <button\r\n-              className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\r\n-              onClick={handleAddToCart}\r\n-              disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\r\n-            >\r\n-              {selectedSize && product[`quantity${selectedSize}`] === 0\r\n-                ? \"Hết hàng\"\r\n-                : \"Thêm vào giỏ hàng\"}\r\n-            </button>\r\n-\r\n-            {isClothing && (\r\n-              <button\r\n-                onClick={() => setShowSizeGuide(true)}\r\n-                className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\r\n-                style={{ transform: 'none' }}\r\n-              >\r\n-                <span className=\"group-hover:font-semibold\">Size guide</span>\r\n-                <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Navigation và các thông tin phụ */}\r\n-      <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\r\n-        <div className=\"text-black\">\r\n-          <span className=\"font-semibold uppercase underline\">{product.category}</span>\r\n-          {\" / \"}\r\n-          <span className=\"font-semibold uppercase underline\">{product.name}</span>\r\n-        </div>\r\n-        <div>\r\n-          <button \r\n-            onClick={() => setShowHelpPanel(true)}\r\n-            className=\"hover:underline text-black font-semibold uppercase\"\r\n-          >\r\n-            Cần giúp đỡ?\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Full Image Modal */}\r\n-      {showFullImage && (\r\n-        <div \r\n-          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \r\n-          onClick={() => setShowFullImage(false)}\r\n-        >\r\n-          <div className=\"min-h-screen w-full flex justify-center items-start\">\r\n-            <Image\r\n-              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\r\n-              alt={product.name}\r\n-              width={2000}\r\n-              height={2000}\r\n-              quality={100}\r\n-              className=\"object-contain w-full\"\r\n-              style={{ height: \"auto\" }}\r\n-            />\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Help Panel */}\r\n-      <HelpPanel isOpen={showHelpPanel} onClose={() => setShowHelpPanel(false)} />\r\n-\r\n-      {/* Size Guide Modal */}\r\n-      {showSizeGuide && (\r\n-        <div \r\n-          className=\"fixed inset-0 bg-white/60 backdrop-blur-sm flex items-center justify-center z-50\" \r\n-          onClick={() => setShowSizeGuide(false)}\r\n-        >\r\n-          <div \r\n-            className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\r\n-            onClick={e => e.stopPropagation()}\r\n-          >\r\n-            <div className=\"flex justify-between items-center mb-4\">\r\n-              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\r\n-              <button \r\n-                onClick={() => setShowSizeGuide(false)}\r\n-                className=\"text-gray-500 hover:text-black\"\r\n-              >\r\n-                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n-                </svg>\r\n-              </button>\r\n-            </div>\r\n-            <div>\r\n-              <Image\r\n-                src={product.sizeGuideImage || \"/size-guide.jpg\"}\r\n-                alt=\"Size Guide\"\r\n-                width={600}\r\n-                height={400}\r\n-                className=\"w-full h-auto rounded-lg\"\r\n-              />\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Modal chọn size */}\r\n-      {showSelectSizeModal && (\r\n-        <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-          <div className=\"bg-white w-11/12 max-w-md relative\">\r\n-            <button\r\n-              onClick={() => setShowSelectSizeModal(false)}\r\n-              className=\"absolute top-4 right-4 text-black\"\r\n-            >\r\n-              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n-                <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-                <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-              </svg>\r\n-            </button>\r\n-            <div className=\"text-center py-8\">\r\n-              <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\r\n-                VUI LÒNG CHỌN SIZE\r\n-              </p>\r\n-              <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\r\n-                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\r\n-              </p>\r\n-            </div>\r\n-            <div className=\"border-t border-gray-200\">\r\n-              <button\r\n-                onClick={() => setShowSelectSizeModal(false)}\r\n-                style={{\r\n-                  width: \"100%\",\r\n-                  padding: \"12px\",\r\n-                  fontSize: \"0.7em\",\r\n-                  color: \"#ffffff\",\r\n-                  backgroundColor: \"#000000\",\r\n-                  border: \"none\",\r\n-                  cursor: \"pointer\",\r\n-                  textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\"\r\n-                }}\r\n-              >\r\n-                Đóng\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-} \n-\"use client\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import { useParams, usePathname } from \"next/navigation\";\r\n-import { motion } from \"framer-motion\";\r\n-import { toast } from \"react-hot-toast\";\r\n-import { useCart } from \"@/context/CartContext\";\r\n-import { Product } from \"@/types/product\";\r\n-import Image from \"next/image\";\r\n-import Link from \"next/link\";\r\n-import HelpPanel from \"@/components/HelpPanel\";\r\n-\r\n export default function ProductDetailPage() {\r\n   const { slug } = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n"
                },
                {
                    "date": 1747278825714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,14 @@\n+import { getProduct } from \"@/services/product\";\r\n+\r\n+export async function generateMetadata({ params }: { params: { slug: string } }) {\r\n+  const product = await getProduct(params.slug);\r\n+  return {\r\n+    title: `${product.name} | AISH`,\r\n+    description: product.description,\r\n+  };\r\n+}\r\n+\r\n \"use client\";\r\n \r\n import { useState, useEffect } from \"react\";\r\n import { useParams, usePathname } from \"next/navigation\";\r\n@@ -8,18 +18,9 @@\n import { Product } from \"@/types/product\";\r\n import Image from \"next/image\";\r\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n-import { getProduct } from \"@/services/product\";\r\n \r\n-export async function generateMetadata({ params }: { params: { slug: string } }) {\r\n-  const product = await getProduct(params.slug);\r\n-  return {\r\n-    title: `${product.name} | AISH`,\r\n-    description: product.description,\r\n-  };\r\n-}\r\n-\r\n export default function ProductDetailPage() {\r\n   const { slug } = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n"
                },
                {
                    "date": 1747279331681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,4 @@\n-import { getProduct } from \"@/services/product\";\r\n-\r\n-export async function generateMetadata({ params }: { params: { slug: string } }) {\r\n-  const product = await getProduct(params.slug);\r\n-  return {\r\n-    title: `${product.name} | AISH`,\r\n-    description: product.description,\r\n-  };\r\n-}\r\n-\r\n \"use client\";\r\n \r\n import { useState, useEffect } from \"react\";\r\n import { useParams, usePathname } from \"next/navigation\";\r\n"
                },
                {
                    "date": 1747281710256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,25 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n+      if (!slug) {\r\n+        console.error(\"No slug provided\");\r\n+        toast.error(\"Invalid product URL\");\r\n+        setIsLoading(false);\r\n+        return;\r\n+      }\r\n+\r\n       try {\r\n         const response = await fetch(`/api/products/by-slug/${slug}`);\r\n+        if (!response.ok) {\r\n+          throw new Error(`HTTP error! status: ${response.status}`);\r\n+        }\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n           setProduct(data.product);\r\n+        } else {\r\n+          throw new Error(data.error || \"Failed to load product\");\r\n         }\r\n       } catch (error) {\r\n         console.error(\"Error fetching product:\", error);\r\n         toast.error(\"Failed to load product\");\r\n"
                },
                {
                    "date": 1747281768391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,25 +26,13 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n-      if (!slug) {\r\n-        console.error(\"No slug provided\");\r\n-        toast.error(\"Invalid product URL\");\r\n-        setIsLoading(false);\r\n-        return;\r\n-      }\r\n-\r\n       try {\r\n         const response = await fetch(`/api/products/by-slug/${slug}`);\r\n-        if (!response.ok) {\r\n-          throw new Error(`HTTP error! status: ${response.status}`);\r\n-        }\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n           setProduct(data.product);\r\n-        } else {\r\n-          throw new Error(data.error || \"Failed to load product\");\r\n         }\r\n       } catch (error) {\r\n         console.error(\"Error fetching product:\", error);\r\n         toast.error(\"Failed to load product\");\r\n"
                },
                {
                    "date": 1747281793178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n \r\n export default function ProductDetailPage() {\r\n-  const { slug } = useParams();\r\n+  const params = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n   const [quantity, setQuantity] = useState<number>(1);\r\n@@ -26,13 +26,23 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n+      if (!params?.slug) {\r\n+        setIsLoading(false);\r\n+        return;\r\n+      }\r\n+\r\n       try {\r\n-        const response = await fetch(`/api/products/by-slug/${slug}`);\r\n+        const response = await fetch(`/api/products/by-slug/${params.slug}`);\r\n+        if (!response.ok) {\r\n+          throw new Error(`HTTP error! status: ${response.status}`);\r\n+        }\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n           setProduct(data.product);\r\n+        } else {\r\n+          throw new Error(data.error || \"Failed to load product\");\r\n         }\r\n       } catch (error) {\r\n         console.error(\"Error fetching product:\", error);\r\n         toast.error(\"Failed to load product\");\r\n@@ -41,9 +51,9 @@\n       }\r\n     };\r\n \r\n     fetchProduct();\r\n-  }, [slug]);\r\n+  }, [params?.slug]);\r\n \r\n   if (isLoading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747281834270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n \r\n export default function ProductDetailPage() {\r\n-  const params = useParams();\r\n+  const { slug } = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n   const [quantity, setQuantity] = useState<number>(1);\r\n@@ -26,23 +26,13 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n-      if (!params?.slug) {\r\n-        setIsLoading(false);\r\n-        return;\r\n-      }\r\n-\r\n       try {\r\n-        const response = await fetch(`/api/products/by-slug/${params.slug}`);\r\n-        if (!response.ok) {\r\n-          throw new Error(`HTTP error! status: ${response.status}`);\r\n-        }\r\n+        const response = await fetch(`/api/products/by-slug/${slug}`);\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n           setProduct(data.product);\r\n-        } else {\r\n-          throw new Error(data.error || \"Failed to load product\");\r\n         }\r\n       } catch (error) {\r\n         console.error(\"Error fetching product:\", error);\r\n         toast.error(\"Failed to load product\");\r\n@@ -51,9 +41,9 @@\n       }\r\n     };\r\n \r\n     fetchProduct();\r\n-  }, [params?.slug]);\r\n+  }, [slug]);\r\n \r\n   if (isLoading) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747281940388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,10 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n+      if (!slug) return;\r\n+      \r\n       try {\r\n         const response = await fetch(`/api/products/by-slug/${slug}`);\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n"
                },
                {
                    "date": 1747282018484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,8 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n-      if (!slug) return;\r\n-      \r\n       try {\r\n         const response = await fetch(`/api/products/by-slug/${slug}`);\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n"
                },
                {
                    "date": 1747282234427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n   const [quantity, setQuantity] = useState<number>(1);\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n   const { addToCart } = useCart();\r\n   const [showFullImage, setShowFullImage] = useState(false);\r\n   const [showHelpPanel, setShowHelpPanel] = useState(false);\r\n   const [showSizeOptions, setShowSizeOptions] = useState(false);\r\n@@ -26,8 +25,9 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n+      if (!slug) return;\r\n       try {\r\n         const response = await fetch(`/api/products/by-slug/${slug}`);\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n@@ -35,24 +35,13 @@\n         }\r\n       } catch (error) {\r\n         console.error(\"Error fetching product:\", error);\r\n         toast.error(\"Failed to load product\");\r\n-      } finally {\r\n-        setIsLoading(false);\r\n       }\r\n     };\r\n-\r\n     fetchProduct();\r\n   }, [slug]);\r\n \r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900\"></div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n   if (!product) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n         <p className=\"text-xl\">Product not found</p>\r\n"
                },
                {
                    "date": 1747282925636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n \r\n export default function ProductDetailPage() {\r\n-  const { slug } = useParams();\r\n+  const params = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n   const [quantity, setQuantity] = useState<number>(1);\r\n@@ -25,22 +25,33 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n-      if (!slug) return;\r\n+      // Ensure slug exists and is a string\r\n+      if (!params?.slug || typeof params.slug !== 'string') {\r\n+        console.error('Invalid slug:', params?.slug);\r\n+        return;\r\n+      }\r\n+\r\n       try {\r\n-        const response = await fetch(`/api/products/by-slug/${slug}`);\r\n+        const response = await fetch(`/api/products/by-slug/${params.slug}`);\r\n+        if (!response.ok) {\r\n+          throw new Error(`HTTP error! status: ${response.status}`);\r\n+        }\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n           setProduct(data.product);\r\n+        } else {\r\n+          throw new Error(data.error || 'Failed to load product');\r\n         }\r\n       } catch (error) {\r\n         console.error(\"Error fetching product:\", error);\r\n         toast.error(\"Failed to load product\");\r\n       }\r\n     };\r\n+\r\n     fetchProduct();\r\n-  }, [slug]);\r\n+  }, [params?.slug]);\r\n \r\n   if (!product) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747282968776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n \r\n export default function ProductDetailPage() {\r\n-  const params = useParams();\r\n+  const { slug } = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n   const [quantity, setQuantity] = useState<number>(1);\r\n@@ -25,33 +25,22 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n-      // Ensure slug exists and is a string\r\n-      if (!params?.slug || typeof params.slug !== 'string') {\r\n-        console.error('Invalid slug:', params?.slug);\r\n-        return;\r\n-      }\r\n-\r\n+      if (!slug) return;\r\n       try {\r\n-        const response = await fetch(`/api/products/by-slug/${params.slug}`);\r\n-        if (!response.ok) {\r\n-          throw new Error(`HTTP error! status: ${response.status}`);\r\n-        }\r\n+        const response = await fetch(`/api/products/by-slug/${slug}`);\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n           setProduct(data.product);\r\n-        } else {\r\n-          throw new Error(data.error || 'Failed to load product');\r\n         }\r\n       } catch (error) {\r\n         console.error(\"Error fetching product:\", error);\r\n         toast.error(\"Failed to load product\");\r\n       }\r\n     };\r\n-\r\n     fetchProduct();\r\n-  }, [params?.slug]);\r\n+  }, [slug]);\r\n \r\n   if (!product) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1747283340259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,12 @@\n import Link from \"next/link\";\r\n import HelpPanel from \"@/components/HelpPanel\";\r\n \r\n export default function ProductDetailPage() {\r\n-  const { slug } = useParams();\r\n+  const params = useParams();\r\n   const pathname = usePathname();\r\n   const [product, setProduct] = useState<Product | null>(null);\r\n+  const [isLoading, setIsLoading] = useState(true);\r\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n   const [quantity, setQuantity] = useState<number>(1);\r\n   const { addToCart } = useCart();\r\n   const [showFullImage, setShowFullImage] = useState(false);\r\n@@ -25,23 +26,43 @@\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const fetchProduct = async () => {\r\n-      if (!slug) return;\r\n+      if (!params?.slug || typeof params.slug !== 'string') {\r\n+        setIsLoading(false);\r\n+        return;\r\n+      }\r\n+\r\n       try {\r\n-        const response = await fetch(`/api/products/by-slug/${slug}`);\r\n+        const response = await fetch(`/api/products/by-slug/${params.slug}`);\r\n+        if (!response.ok) {\r\n+          throw new Error(`HTTP error! status: ${response.status}`);\r\n+        }\r\n         const data = await response.json();\r\n         if (data.ok) {\r\n           setProduct(data.product);\r\n+        } else {\r\n+          throw new Error(data.error || 'Failed to load product');\r\n         }\r\n       } catch (error) {\r\n         console.error(\"Error fetching product:\", error);\r\n         toast.error(\"Failed to load product\");\r\n+      } finally {\r\n+        setIsLoading(false);\r\n       }\r\n     };\r\n+\r\n     fetchProduct();\r\n-  }, [slug]);\r\n+  }, [params?.slug]);\r\n \r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   if (!product) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center\">\r\n         <p className=\"text-xl\">Product not found</p>\r\n"
                },
                {
                    "date": 1747319223597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,418 +1,418 @@\n-\"use client\";\r\n-\r\n-import { useState, useEffect } from \"react\";\r\n-import { useParams, usePathname } from \"next/navigation\";\r\n-import { motion } from \"framer-motion\";\r\n-import { toast } from \"react-hot-toast\";\r\n-import { useCart } from \"@/context/CartContext\";\r\n-import { Product } from \"@/types/product\";\r\n-import Image from \"next/image\";\r\n-import Link from \"next/link\";\r\n-import HelpPanel from \"@/components/HelpPanel\";\r\n-\r\n-export default function ProductDetailPage() {\r\n-  const params = useParams();\r\n-  const pathname = usePathname();\r\n-  const [product, setProduct] = useState<Product | null>(null);\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n-  const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n-  const [quantity, setQuantity] = useState<number>(1);\r\n-  const { addToCart } = useCart();\r\n-  const [showFullImage, setShowFullImage] = useState(false);\r\n-  const [showHelpPanel, setShowHelpPanel] = useState(false);\r\n-  const [showSizeOptions, setShowSizeOptions] = useState(false);\r\n-  const [showSizeGuide, setShowSizeGuide] = useState(false);\r\n-  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n-  const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProduct = async () => {\r\n-      if (!params?.slug || typeof params.slug !== 'string') {\r\n-        setIsLoading(false);\r\n-        return;\r\n-      }\r\n-\r\n-      try {\r\n-        const response = await fetch(`/api/products/by-slug/${params.slug}`);\r\n-        if (!response.ok) {\r\n-          throw new Error(`HTTP error! status: ${response.status}`);\r\n-        }\r\n-        const data = await response.json();\r\n-        if (data.ok) {\r\n-          setProduct(data.product);\r\n-        } else {\r\n-          throw new Error(data.error || 'Failed to load product');\r\n-        }\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching product:\", error);\r\n-        toast.error(\"Failed to load product\");\r\n-      } finally {\r\n-        setIsLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProduct();\r\n-  }, [params?.slug]);\r\n-\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!product) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        <p className=\"text-xl\">Product not found</p>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  const handleAddToCart = () => {\r\n-    if (!selectedSize) {\r\n-      setShowSelectSizeModal(true);\r\n-      return;\r\n-    }\r\n-\r\n-    const sizeQuantity = product[`quantity${selectedSize}`];\r\n-    if (sizeQuantity === 0) {\r\n-      toast.error(`Size ${selectedSize} đã hết hàng`);\r\n-      return;\r\n-    }\r\n-\r\n-    if (quantity > sizeQuantity) {\r\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\r\n-      return;\r\n-    }\r\n-\r\n-    addToCart({\r\n-      id: product._id,\r\n-      name: product.name,\r\n-      price: product.price,\r\n-      image: product.images[0],\r\n-      size: selectedSize,\r\n-      quantity: quantity,\r\n-      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\r\n-      currentStock: sizeQuantity\r\n-    });\r\n-\r\n-    toast.success(\"Đã thêm vào giỏ hàng\");\r\n-  };\r\n-\r\n-  const handleQuantityChange = (value: number) => {\r\n-    if (!product || !selectedSize) {\r\n-      setShowSelectSizeModal(true);\r\n-      return;\r\n-    }\r\n-    \r\n-    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\r\n-    if (value > sizeQuantity) {\r\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\r\n-      return;\r\n-    }\r\n-    \r\n-    setQuantity(value);\r\n-  };\r\n-\r\n-  const handlePrevImage = () => {\r\n-    if (!product || !product.images) return;\r\n-    setCurrentImageIndex((currentImageIndex - 1 + product.images.length) % product.images.length);\r\n-  };\r\n-\r\n-  const handleNextImage = () => {\r\n-    if (!product || !product.images) return;\r\n-    setCurrentImageIndex((currentImageIndex + 1) % product.images.length);\r\n-  };\r\n-\r\n-  const isClothing = product.category && product.category !== \"CAP\";\r\n-  const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col\">\r\n-      {/* Breadcrumb */}\r\n-      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\r\n-        <span className=\"font-semibold uppercase underline\">{product.category}</span>\r\n-        <span className=\"mx-2\">/</span>\r\n-        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\r\n-      </div>\r\n-\r\n-      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\r\n-        {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\r\n-        <div className=\"flex-1 flex flex-col items-center\">\r\n-          <div className=\"relative w-full flex justify-center items-center mt-6 mb-6\" style={{height: '450px'}}>\r\n-            <Image\r\n-              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\r\n-              alt={product.name}\r\n-              width={450}\r\n-              height={450}\r\n-              quality={100}\r\n-              className=\"object-contain object-center w-full h-full\"\r\n-              style={{ maxWidth: \"90%\", height: \"auto\" }}\r\n-              onClick={() => setShowFullImage(true)}\r\n-            />\r\n-            {product.images.length > 1 && (\r\n-              <>\r\n-                <button\r\n-                  onClick={handlePrevImage}\r\n-                  className=\"absolute left-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\r\n-                >\r\n-                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 19l-7-7 7-7\" />\r\n-                  </svg>\r\n-                </button>\r\n-                <button\r\n-                  onClick={handleNextImage}\r\n-                  className=\"absolute right-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\r\n-                >\r\n-                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 5l7 7-7 7\" />\r\n-                  </svg>\r\n-                </button>\r\n-              </>\r\n-            )}\r\n-          </div>\r\n-          <div className=\"flex gap-4 w-full justify-center mt-10\">\r\n-            {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\r\n-              <div \r\n-                key={index} \r\n-                className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\r\n-                  currentImageIndex === index ? \"border-black scale-105\" : \"border-gray-200 hover:border-gray-400\"\r\n-                }`}\r\n-                onClick={() => setCurrentImageIndex(index)}\r\n-              >\r\n-                <Image\r\n-                  src={img}\r\n-                  alt={`${product.name} thumbnail ${index + 1}`}\r\n-                  width={96}\r\n-                  height={96}\r\n-                  className=\"object-cover\"\r\n-                />\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Bên phải: Thông tin sản phẩm */}\r\n-        <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\r\n-          <div className=\"w-full max-w-xl\">\r\n-            <h1 className=\"text-2xl font-bold text-center md:text-left mb-2 uppercase text-black\">{product.name}</h1>\r\n-            <div className=\"text-xl font-semibold mb-4 text-black\">\r\n-              {(product.price).toLocaleString('vi-VN')} VND\r\n-            </div>\r\n-\r\n-            {isClothing ? (\r\n-              <div className=\"mb-6\">\r\n-                <div className=\"relative\">\r\n-                  <div className=\"grid grid-cols-3 gap-2\">\r\n-                    {availableSizes.map((size) => {\r\n-                      const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\r\n-                      const isOutOfStock = sizeQuantity === 0;\r\n-                      const isSelected = selectedSize === size && !isOutOfStock;\r\n-                      return (\r\n-                        <button\r\n-                          key={size}\r\n-                          onClick={() => {\r\n-                            if (!isOutOfStock) setSelectedSize(size);\r\n-                          }}\r\n-                          disabled={isOutOfStock}\r\n-                          className={\r\n-                            `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\r\n-                            (isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed ' : '') +\r\n-                            (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\r\n-                          }\r\n-                          style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\r\n-                        >\r\n-                          {size} - Còn {sizeQuantity} sản phẩm\r\n-                        </button>\r\n-                      );\r\n-                    })}\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-            ) : product.category === \"CAP\" ? (\r\n-              <div className=\"mb-6\">\r\n-                <p className=\"text-sm text-black\">\r\n-                  Còn {product.quantityHat} sản phẩm\r\n-                </p>\r\n-              </div>\r\n-            ) : null}\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\r\n-              <div className=\"flex items-center gap-2\">\r\n-                <button\r\n-                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\r\n-                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\r\n-                >\r\n-                  -\r\n-                </button>\r\n-                <input\r\n-                  type=\"number\"\r\n-                  min=\"1\"\r\n-                  value={quantity}\r\n-                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\r\n-                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\r\n-                />\r\n-                <button\r\n-                  onClick={() => handleQuantityChange(quantity + 1)}\r\n-                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\r\n-                >\r\n-                  +\r\n-                </button>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4 text-base\">\r\n-              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4 text-xs\">\r\n-              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\r\n-              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\r\n-            </div>\r\n-\r\n-            <button\r\n-              className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\r\n-              onClick={handleAddToCart}\r\n-              disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\r\n-            >\r\n-              {selectedSize && product[`quantity${selectedSize}`] === 0\r\n-                ? \"Hết hàng\"\r\n-                : \"Thêm vào giỏ hàng\"}\r\n-            </button>\r\n-\r\n-            {isClothing && (\r\n-              <button\r\n-                onClick={() => setShowSizeGuide(true)}\r\n-                className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\r\n-                style={{ transform: 'none' }}\r\n-              >\r\n-                <span className=\"group-hover:font-semibold\">Size guide</span>\r\n-                <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Navigation và các thông tin phụ */}\r\n-      <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\r\n-        <div className=\"text-black\">\r\n-          <span className=\"font-semibold uppercase underline\">{product.category}</span>\r\n-          {\" / \"}\r\n-          <span className=\"font-semibold uppercase underline\">{product.name}</span>\r\n-        </div>\r\n-        <div>\r\n-          <button \r\n-            onClick={() => setShowHelpPanel(true)}\r\n-            className=\"hover:underline text-black font-semibold uppercase\"\r\n-          >\r\n-            Cần giúp đỡ?\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Full Image Modal */}\r\n-      {showFullImage && (\r\n-        <div \r\n-          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \r\n-          onClick={() => setShowFullImage(false)}\r\n-        >\r\n-          <div className=\"min-h-screen w-full flex justify-center items-start\">\r\n-            <Image\r\n-              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\r\n-              alt={product.name}\r\n-              width={2000}\r\n-              height={2000}\r\n-              quality={100}\r\n-              className=\"object-contain w-full\"\r\n-              style={{ height: \"auto\" }}\r\n-            />\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Help Panel */}\r\n-      <HelpPanel isOpen={showHelpPanel} onClose={() => setShowHelpPanel(false)} />\r\n-\r\n-      {/* Size Guide Modal */}\r\n-      {showSizeGuide && (\r\n-        <div \r\n-          className=\"fixed inset-0 bg-white/60 backdrop-blur-sm flex items-center justify-center z-50\" \r\n-          onClick={() => setShowSizeGuide(false)}\r\n-        >\r\n-          <div \r\n-            className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\r\n-            onClick={e => e.stopPropagation()}\r\n-          >\r\n-            <div className=\"flex justify-between items-center mb-4\">\r\n-              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\r\n-              <button \r\n-                onClick={() => setShowSizeGuide(false)}\r\n-                className=\"text-gray-500 hover:text-black\"\r\n-              >\r\n-                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n-                </svg>\r\n-              </button>\r\n-            </div>\r\n-            <div>\r\n-              <Image\r\n-                src={product.sizeGuideImage || \"/size-guide.jpg\"}\r\n-                alt=\"Size Guide\"\r\n-                width={600}\r\n-                height={400}\r\n-                className=\"w-full h-auto rounded-lg\"\r\n-              />\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Modal chọn size */}\r\n-      {showSelectSizeModal && (\r\n-        <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\r\n-          <div className=\"bg-white w-11/12 max-w-md relative\">\r\n-            <button\r\n-              onClick={() => setShowSelectSizeModal(false)}\r\n-              className=\"absolute top-4 right-4 text-black\"\r\n-            >\r\n-              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n-                <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-                <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n-              </svg>\r\n-            </button>\r\n-            <div className=\"text-center py-8\">\r\n-              <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\r\n-                VUI LÒNG CHỌN SIZE\r\n-              </p>\r\n-              <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\r\n-                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\r\n-              </p>\r\n-            </div>\r\n-            <div className=\"border-t border-gray-200\">\r\n-              <button\r\n-                onClick={() => setShowSelectSizeModal(false)}\r\n-                style={{\r\n-                  width: \"100%\",\r\n-                  padding: \"12px\",\r\n-                  fontSize: \"0.7em\",\r\n-                  color: \"#ffffff\",\r\n-                  backgroundColor: \"#000000\",\r\n-                  border: \"none\",\r\n-                  cursor: \"pointer\",\r\n-                  textTransform: \"uppercase\",\r\n-                  letterSpacing: \"0.1em\"\r\n-                }}\r\n-              >\r\n-                Đóng\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n+\"use client\";\n+\n+import { useState, useEffect } from \"react\";\n+import { useParams, usePathname } from \"next/navigation\";\n+import { motion } from \"framer-motion\";\n+import { toast } from \"react-hot-toast\";\n+import { useCart } from \"@/context/CartContext\";\n+import { Product } from \"@/types/product\";\n+import Image from \"next/image\";\n+import Link from \"next/link\";\n+import HelpPanel from \"@/components/HelpPanel\";\n+\n+export default function ProductDetailPage() {\n+  const params = useParams();\n+  const pathname = usePathname();\n+  const [product, setProduct] = useState<Product | null>(null);\n+  const [isLoading, setIsLoading] = useState(true);\n+  const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n+  const [quantity, setQuantity] = useState<number>(1);\n+  const { addToCart } = useCart();\n+  const [showFullImage, setShowFullImage] = useState(false);\n+  const [showHelpPanel, setShowHelpPanel] = useState(false);\n+  const [showSizeOptions, setShowSizeOptions] = useState(false);\n+  const [showSizeGuide, setShowSizeGuide] = useState(false);\n+  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n+  const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\n+\n+  useEffect(() => {\n+    const fetchProduct = async () => {\n+      if (!params?.slug || typeof params.slug !== 'string') {\n+        setIsLoading(false);\n+        return;\n+      }\n+\n+      try {\n+        const response = await fetch(`/api/products/by-slug/${params.slug}`);\n+        if (!response.ok) {\n+          throw new Error(`HTTP error! status: ${response.status}`);\n+        }\n+        const data = await response.json();\n+        if (data.ok) {\n+          setProduct(data.product);\n+        } else {\n+          throw new Error(data.error || 'Failed to load product');\n+        }\n+      } catch (error) {\n+        console.error(\"Error fetching product:\", error);\n+        toast.error(\"Failed to load product\");\n+      } finally {\n+        setIsLoading(false);\n+      }\n+    };\n+\n+    fetchProduct();\n+  }, [params?.slug]);\n+\n+  if (isLoading) {\n+    return (\n+      <div className=\"min-h-screen flex items-center justify-center\">\n+        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\n+      </div>\n+    );\n+  }\n+\n+  if (!product) {\n+    return (\n+      <div className=\"min-h-screen flex items-center justify-center\">\n+        <p className=\"text-xl\">Product not found</p>\n+      </div>\n+    );\n+  }\n+\n+  const handleAddToCart = () => {\n+    if (!selectedSize) {\n+      setShowSelectSizeModal(true);\n+      return;\n+    }\n+\n+    const sizeQuantity = product[`quantity${selectedSize}`];\n+    if (sizeQuantity === 0) {\n+      toast.error(`Size ${selectedSize} đã hết hàng`);\n+      return;\n+    }\n+\n+    if (quantity > sizeQuantity) {\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\n+      return;\n+    }\n+\n+    addToCart({\n+      id: product._id,\n+      name: product.name,\n+      price: product.price,\n+      image: product.images[0],\n+      size: selectedSize,\n+      quantity: quantity,\n+      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n+      currentStock: sizeQuantity\n+    });\n+\n+    toast.success(\"Đã thêm vào giỏ hàng\");\n+  };\n+\n+  const handleQuantityChange = (value: number) => {\n+    if (!product || !selectedSize) {\n+      setShowSelectSizeModal(true);\n+      return;\n+    }\n+    \n+    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n+    if (value > sizeQuantity) {\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n+      return;\n+    }\n+    \n+    setQuantity(value);\n+  };\n+\n+  const handlePrevImage = () => {\n+    if (!product || !product.images) return;\n+    setCurrentImageIndex((currentImageIndex - 1 + product.images.length) % product.images.length);\n+  };\n+\n+  const handleNextImage = () => {\n+    if (!product || !product.images) return;\n+    setCurrentImageIndex((currentImageIndex + 1) % product.images.length);\n+  };\n+\n+  const isClothing = product.category && product.category !== \"CAP\";\n+  const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\n+\n+  return (\n+    <div className=\"min-h-screen bg-white flex flex-col\">\n+      {/* Breadcrumb */}\n+      <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\n+        <span className=\"font-semibold uppercase underline\">{product.category}</span>\n+        <span className=\"mx-2\">/</span>\n+        <span className=\"text-black font-semibold uppercase underline\">{product.name}</span>\n+      </div>\n+\n+      <div className=\"flex flex-col md:flex-row w-full max-w-7xl mx-auto py-8 px-4 gap-8 flex-1\">\n+        {/* Bên trái: Ảnh đầu tiên và 4 ảnh nhỏ */}\n+        <div className=\"flex-1 flex flex-col items-center\">\n+          <div className=\"relative w-full flex justify-center items-center mt-6 mb-6\" style={{height: '450px'}}>\n+            <Image\n+              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n+              alt={product.name}\n+              width={450}\n+              height={450}\n+              quality={100}\n+              className=\"object-contain object-center w-full h-full\"\n+              style={{ maxWidth: \"90%\", height: \"auto\" }}\n+              onClick={() => setShowFullImage(true)}\n+            />\n+            {product.images.length > 1 && (\n+              <>\n+                <button\n+                  onClick={handlePrevImage}\n+                  className=\"absolute left-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\n+                >\n+                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 19l-7-7 7-7\" />\n+                  </svg>\n+                </button>\n+                <button\n+                  onClick={handleNextImage}\n+                  className=\"absolute right-0 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-black/60 hover:text-black transition-all duration-300\"\n+                >\n+                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 5l7 7-7 7\" />\n+                  </svg>\n+                </button>\n+              </>\n+            )}\n+          </div>\n+          <div className=\"flex gap-4 w-full justify-center mt-10\">\n+            {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\n+              <div \n+                key={index} \n+                className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n+                  currentImageIndex === index ? \"border-black scale-105\" : \"border-gray-200 hover:border-gray-400\"\n+                }`}\n+                onClick={() => setCurrentImageIndex(index)}\n+              >\n+                <Image\n+                  src={img}\n+                  alt={`${product.name} thumbnail ${index + 1}`}\n+                  width={96}\n+                  height={96}\n+                  className=\"object-cover\"\n+                />\n+              </div>\n+            ))}\n+          </div>\n+        </div>\n+\n+        {/* Bên phải: Thông tin sản phẩm */}\n+        <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n+          <div className=\"w-full max-w-xl\">\n+            <h1 className=\"text-2xl font-bold text-center md:text-left mb-2 uppercase text-black\">{product.name}</h1>\n+            <div className=\"text-xl font-semibold mb-4 text-black\">\n+              {(product.price).toLocaleString('vi-VN')} VND\n+            </div>\n+\n+            {isClothing ? (\n+              <div className=\"mb-6\">\n+                <div className=\"relative\">\n+                  <div className=\"grid grid-cols-3 gap-2\">\n+                    {availableSizes.map((size) => {\n+                      const sizeQuantity = product[`quantity${size}` as keyof Product] as number;\n+                      const isOutOfStock = sizeQuantity === 0;\n+                      const isSelected = selectedSize === size && !isOutOfStock;\n+                      return (\n+                        <button\n+                          key={size}\n+                          onClick={() => {\n+                            if (!isOutOfStock) setSelectedSize(size);\n+                          }}\n+                          disabled={isOutOfStock}\n+                          className={\n+                            `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\n+                            (isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed ' : '') +\n+                            (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n+                          }\n+                          style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n+                        >\n+                          {size} - Còn {sizeQuantity} sản phẩm\n+                        </button>\n+                      );\n+                    })}\n+                  </div>\n+                </div>\n+              </div>\n+            ) : product.category === \"CAP\" ? (\n+              <div className=\"mb-6\">\n+                <p className=\"text-sm text-black\">\n+                  Còn {product.quantityHat} sản phẩm\n+                </p>\n+              </div>\n+            ) : null}\n+\n+            <div className=\"mb-6\">\n+              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n+              <div className=\"flex items-center gap-2\">\n+                <button\n+                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n+                >\n+                  -\n+                </button>\n+                <input\n+                  type=\"number\"\n+                  min=\"1\"\n+                  value={quantity}\n+                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n+                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\n+                />\n+                <button\n+                  onClick={() => handleQuantityChange(quantity + 1)}\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n+                >\n+                  +\n+                </button>\n+              </div>\n+            </div>\n+\n+            <div className=\"mb-4 text-base\">\n+              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n+            </div>\n+\n+            <div className=\"mb-4 text-xs\">\n+              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\n+              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n+            </div>\n+\n+            <button\n+              className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n+              onClick={handleAddToCart}\n+              disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n+            >\n+              {selectedSize && product[`quantity${selectedSize}`] === 0\n+                ? \"Hết hàng\"\n+                : \"Thêm vào giỏ hàng\"}\n+            </button>\n+\n+            {isClothing && (\n+              <button\n+                onClick={() => setShowSizeGuide(true)}\n+                className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\n+                style={{ transform: 'none' }}\n+              >\n+                <span className=\"group-hover:font-semibold\">Size guide</span>\n+                <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\n+              </button>\n+            )}\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Navigation và các thông tin phụ */}\n+      <div className=\"flex justify-between items-center px-8 py-4 text-xs text-gray-600 border-t\">\n+        <div className=\"text-black\">\n+          <span className=\"font-semibold uppercase underline\">{product.category}</span>\n+          {\" / \"}\n+          <span className=\"font-semibold uppercase underline\">{product.name}</span>\n+        </div>\n+        <div>\n+          <button \n+            onClick={() => setShowHelpPanel(true)}\n+            className=\"hover:underline text-black font-semibold uppercase\"\n+          >\n+            Cần giúp đỡ?\n+          </button>\n+        </div>\n+      </div>\n+\n+      {/* Full Image Modal */}\n+      {showFullImage && (\n+        <div \n+          className=\"fixed inset-0 bg-black bg-opacity-75 z-50 overflow-y-auto\" \n+          onClick={() => setShowFullImage(false)}\n+        >\n+          <div className=\"min-h-screen w-full flex justify-center items-start\">\n+            <Image\n+              src={product.images && product.images[currentImageIndex] ? product.images[currentImageIndex] : \"/placeholder.jpg\"}\n+              alt={product.name}\n+              width={2000}\n+              height={2000}\n+              quality={100}\n+              className=\"object-contain w-full\"\n+              style={{ height: \"auto\" }}\n+            />\n+          </div>\n+        </div>\n+      )}\n+\n+      {/* Help Panel */}\n+      <HelpPanel isOpen={showHelpPanel} onClose={() => setShowHelpPanel(false)} />\n+\n+      {/* Size Guide Modal */}\n+      {showSizeGuide && (\n+        <div \n+          className=\"fixed inset-0 bg-white/60 backdrop-blur-sm flex items-center justify-center z-50\" \n+          onClick={() => setShowSizeGuide(false)}\n+        >\n+          <div \n+            className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\n+            onClick={e => e.stopPropagation()}\n+          >\n+            <div className=\"flex justify-between items-center mb-4\">\n+              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\n+              <button \n+                onClick={() => setShowSizeGuide(false)}\n+                className=\"text-gray-500 hover:text-black\"\n+              >\n+                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n+                </svg>\n+              </button>\n+            </div>\n+            <div>\n+              <Image\n+                src={product.sizeGuideImage || \"/size-guide.jpg\"}\n+                alt=\"Size Guide\"\n+                width={600}\n+                height={400}\n+                className=\"w-full h-auto rounded-lg\"\n+              />\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+\n+      {/* Modal chọn size */}\n+      {showSelectSizeModal && (\n+        <div className=\"fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50\">\n+          <div className=\"bg-white w-11/12 max-w-md relative\">\n+            <button\n+              onClick={() => setShowSelectSizeModal(false)}\n+              className=\"absolute top-4 right-4 text-black\"\n+            >\n+              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+                <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n+                <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n+              </svg>\n+            </button>\n+            <div className=\"text-center py-8\">\n+              <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\n+                VUI LÒNG CHỌN SIZE\n+              </p>\n+              <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\n+                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\n+              </p>\n+            </div>\n+            <div className=\"border-t border-gray-200\">\n+              <button\n+                onClick={() => setShowSelectSizeModal(false)}\n+                style={{\n+                  width: \"100%\",\n+                  padding: \"12px\",\n+                  fontSize: \"0.7em\",\n+                  color: \"#ffffff\",\n+                  backgroundColor: \"#000000\",\n+                  border: \"none\",\n+                  cursor: \"pointer\",\n+                  textTransform: \"uppercase\",\n+                  letterSpacing: \"0.1em\"\n+                }}\n+              >\n+                Đóng\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747320694320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,6 +413,5 @@\n           </div>\n         </div>\n       )}\n     </div>\n-  );\n-} \n\\ No newline at end of file\n+  );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747323234621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import { Product } from \"@/types/product\";\n import Image from \"next/image\";\n import Link from \"next/link\";\n import HelpPanel from \"@/components/HelpPanel\";\n+import { useLanguage } from \"@/context/LanguageContext\";\n \n export default function ProductDetailPage() {\n   const params = useParams();\n   const pathname = usePathname();\n@@ -23,8 +24,9 @@\n   const [showSizeOptions, setShowSizeOptions] = useState(false);\n   const [showSizeGuide, setShowSizeGuide] = useState(false);\n   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\n+  const { t } = useLanguage();\n \n   useEffect(() => {\n     const fetchProduct = async () => {\n       if (!params?.slug || typeof params.slug !== 'string') {\n@@ -64,9 +66,9 @@\n \n   if (!product) {\n     return (\n       <div className=\"min-h-screen flex items-center justify-center\">\n-        <p className=\"text-xl\">Product not found</p>\n+        <p className=\"text-xl\">{t('product.notFound')}</p>\n       </div>\n     );\n   }\n \n@@ -74,46 +76,40 @@\n     if (!selectedSize) {\n       setShowSelectSizeModal(true);\n       return;\n     }\n-\n     const sizeQuantity = product[`quantity${selectedSize}`];\n     if (sizeQuantity === 0) {\n-      toast.error(`Size ${selectedSize} đã hết hàng`);\n+      toast.error(t('product.sizeOutOfStock', { size: selectedSize }));\n       return;\n     }\n-\n     if (quantity > sizeQuantity) {\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\n+      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n       return;\n     }\n-\n     addToCart({\n       id: product._id,\n       name: product.name,\n       price: product.price,\n       image: product.images[0],\n       size: selectedSize,\n       quantity: quantity,\n-      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n+      color: product.colors && product.colors.length > 0 ? product.colors[0] : t('product.unknownColor'),\n       currentStock: sizeQuantity\n     });\n-\n-    toast.success(\"Đã thêm vào giỏ hàng\");\n+    toast.success(t('product.addedToCart'));\n   };\n \n   const handleQuantityChange = (value: number) => {\n     if (!product || !selectedSize) {\n       setShowSelectSizeModal(true);\n       return;\n     }\n-    \n     const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n     if (value > sizeQuantity) {\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n+      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n       return;\n     }\n-    \n     setQuantity(value);\n   };\n \n   const handlePrevImage = () => {\n@@ -223,9 +219,9 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - Còn {sizeQuantity} sản phẩm\n+                          {size} - {t('product.left', { count: sizeQuantity })}\n                         </button>\n                       );\n                     })}\n                   </div>\n@@ -277,20 +273,18 @@\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n               disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n             >\n-              {selectedSize && product[`quantity${selectedSize}`] === 0\n-                ? \"Hết hàng\"\n-                : \"Thêm vào giỏ hàng\"}\n+              {t('product.addToCart')}\n             </button>\n \n             {isClothing && (\n               <button\n                 onClick={() => setShowSizeGuide(true)}\n                 className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\n                 style={{ transform: 'none' }}\n               >\n-                <span className=\"group-hover:font-semibold\">Size guide</span>\n+                <span className=\"group-hover:font-semibold\">{t('product.sizeGuide')}</span>\n                 <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\n               </button>\n             )}\n           </div>\n@@ -385,12 +379,12 @@\n               </svg>\n             </button>\n             <div className=\"text-center py-8\">\n               <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\n-                VUI LÒNG CHỌN SIZE\n+                {t('product.pleaseSelectSize')}\n               </p>\n               <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\n-                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\n+                {t('product.selectSizeBeforeAdding')}\n               </p>\n             </div>\n             <div className=\"border-t border-gray-200\">\n               <button\n@@ -406,12 +400,13 @@\n                   textTransform: \"uppercase\",\n                   letterSpacing: \"0.1em\"\n                 }}\n               >\n-                Đóng\n+                {t('product.close')}\n               </button>\n             </div>\n           </div>\n         </div>\n       )}\n     </div>\n\\ No newline at end of file\n-  );\n+  );\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747323432658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,15 +8,13 @@\n import { Product } from \"@/types/product\";\n import Image from \"next/image\";\n import Link from \"next/link\";\n import HelpPanel from \"@/components/HelpPanel\";\n-import { useLanguage } from \"@/context/LanguageContext\";\n \n export default function ProductDetailPage() {\n-  const params = useParams();\n+  const { slug } = useParams();\n   const pathname = usePathname();\n   const [product, setProduct] = useState<Product | null>(null);\n-  const [isLoading, setIsLoading] = useState(true);\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n   const [quantity, setQuantity] = useState<number>(1);\n   const { addToCart } = useCart();\n   const [showFullImage, setShowFullImage] = useState(false);\n@@ -24,51 +22,30 @@\n   const [showSizeOptions, setShowSizeOptions] = useState(false);\n   const [showSizeGuide, setShowSizeGuide] = useState(false);\n   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\n-  const { t } = useLanguage();\n \n   useEffect(() => {\n     const fetchProduct = async () => {\n-      if (!params?.slug || typeof params.slug !== 'string') {\n-        setIsLoading(false);\n-        return;\n-      }\n-\n+      if (!slug) return;\n       try {\n-        const response = await fetch(`/api/products/by-slug/${params.slug}`);\n-        if (!response.ok) {\n-          throw new Error(`HTTP error! status: ${response.status}`);\n-        }\n+        const response = await fetch(`/api/products/by-slug/${slug}`);\n         const data = await response.json();\n         if (data.ok) {\n           setProduct(data.product);\n-        } else {\n-          throw new Error(data.error || 'Failed to load product');\n         }\n       } catch (error) {\n         console.error(\"Error fetching product:\", error);\n         toast.error(\"Failed to load product\");\n-      } finally {\n-        setIsLoading(false);\n       }\n     };\n-\n     fetchProduct();\n-  }, [params?.slug]);\n+  }, [slug]);\n \n-  if (isLoading) {\n-    return (\n-      <div className=\"min-h-screen flex items-center justify-center\">\n-        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\n-      </div>\n-    );\n-  }\n-\n   if (!product) {\n     return (\n       <div className=\"min-h-screen flex items-center justify-center\">\n-        <p className=\"text-xl\">{t('product.notFound')}</p>\n+        <p className=\"text-xl\">Product not found</p>\n       </div>\n     );\n   }\n \n@@ -76,40 +53,46 @@\n     if (!selectedSize) {\n       setShowSelectSizeModal(true);\n       return;\n     }\n+\n     const sizeQuantity = product[`quantity${selectedSize}`];\n     if (sizeQuantity === 0) {\n-      toast.error(t('product.sizeOutOfStock', { size: selectedSize }));\n+      toast.error(`Size ${selectedSize} đã hết hàng`);\n       return;\n     }\n+\n     if (quantity > sizeQuantity) {\n-      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\n       return;\n     }\n+\n     addToCart({\n       id: product._id,\n       name: product.name,\n       price: product.price,\n       image: product.images[0],\n       size: selectedSize,\n       quantity: quantity,\n-      color: product.colors && product.colors.length > 0 ? product.colors[0] : t('product.unknownColor'),\n+      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n       currentStock: sizeQuantity\n     });\n-    toast.success(t('product.addedToCart'));\n+\n+    toast.success(\"Đã thêm vào giỏ hàng\");\n   };\n \n   const handleQuantityChange = (value: number) => {\n     if (!product || !selectedSize) {\n       setShowSelectSizeModal(true);\n       return;\n     }\n+    \n     const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n     if (value > sizeQuantity) {\n-      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n       return;\n     }\n+    \n     setQuantity(value);\n   };\n \n   const handlePrevImage = () => {\n@@ -219,9 +202,9 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - {t('product.left', { count: sizeQuantity })}\n+                          {size} - Còn {sizeQuantity} sản phẩm\n                         </button>\n                       );\n                     })}\n                   </div>\n@@ -273,18 +256,20 @@\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n               disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n             >\n-              {t('product.addToCart')}\n+              {selectedSize && product[`quantity${selectedSize}`] === 0\n+                ? \"Hết hàng\"\n+                : \"Thêm vào giỏ hàng\"}\n             </button>\n \n             {isClothing && (\n               <button\n                 onClick={() => setShowSizeGuide(true)}\n                 className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\n                 style={{ transform: 'none' }}\n               >\n-                <span className=\"group-hover:font-semibold\">{t('product.sizeGuide')}</span>\n+                <span className=\"group-hover:font-semibold\">Size guide</span>\n                 <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\n               </button>\n             )}\n           </div>\n@@ -379,12 +364,12 @@\n               </svg>\n             </button>\n             <div className=\"text-center py-8\">\n               <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\n-                {t('product.pleaseSelectSize')}\n+                VUI LÒNG CHỌN SIZE\n               </p>\n               <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\n-                {t('product.selectSizeBeforeAdding')}\n+                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\n               </p>\n             </div>\n             <div className=\"border-t border-gray-200\">\n               <button\n@@ -400,13 +385,12 @@\n                   textTransform: \"uppercase\",\n                   letterSpacing: \"0.1em\"\n                 }}\n               >\n-                {t('product.close')}\n+                Đóng\n               </button>\n             </div>\n           </div>\n         </div>\n       )}\n     </div>\n-  );\n\\ No newline at end of file\n-}\n+  );} \n"
                },
                {
                    "date": 1747323797727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n export default function ProductDetailPage() {\n   const { slug } = useParams();\n   const pathname = usePathname();\n   const [product, setProduct] = useState<Product | null>(null);\n+  const [isLoading, setIsLoading] = useState(true);\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n   const [quantity, setQuantity] = useState<number>(1);\n   const { addToCart } = useCart();\n   const [showFullImage, setShowFullImage] = useState(false);\n@@ -26,8 +27,9 @@\n \n   useEffect(() => {\n     const fetchProduct = async () => {\n       if (!slug) return;\n+      setIsLoading(true);\n       try {\n         const response = await fetch(`/api/products/by-slug/${slug}`);\n         const data = await response.json();\n         if (data.ok) {\n@@ -35,13 +37,23 @@\n         }\n       } catch (error) {\n         console.error(\"Error fetching product:\", error);\n         toast.error(\"Failed to load product\");\n+      } finally {\n+        setIsLoading(false);\n       }\n     };\n     fetchProduct();\n   }, [slug]);\n \n+  if (isLoading) {\n+    return (\n+      <div className=\"min-h-screen flex items-center justify-center\">\n+        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\n+      </div>\n+    );\n+  }\n+\n   if (!product) {\n     return (\n       <div className=\"min-h-screen flex items-center justify-center\">\n         <p className=\"text-xl\">Product not found</p>\n"
                },
                {
                    "date": 1747324012386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,18 @@\n import { useParams, usePathname } from \"next/navigation\";\n import { motion } from \"framer-motion\";\n import { toast } from \"react-hot-toast\";\n import { useCart } from \"@/context/CartContext\";\n+import { useLanguage } from \"@/context/LanguageContext\";\n import { Product } from \"@/types/product\";\n import Image from \"next/image\";\n import Link from \"next/link\";\n import HelpPanel from \"@/components/HelpPanel\";\n \n export default function ProductDetailPage() {\n   const { slug } = useParams();\n   const pathname = usePathname();\n+  const { t } = useLanguage();\n   const [product, setProduct] = useState<Product | null>(null);\n   const [isLoading, setIsLoading] = useState(true);\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n   const [quantity, setQuantity] = useState<number>(1);\n@@ -55,9 +57,9 @@\n \n   if (!product) {\n     return (\n       <div className=\"min-h-screen flex items-center justify-center\">\n-        <p className=\"text-xl\">Product not found</p>\n+        <p className=\"text-xl\">{t('product.notFound')}</p>\n       </div>\n     );\n   }\n \n@@ -68,14 +70,14 @@\n     }\n \n     const sizeQuantity = product[`quantity${selectedSize}`];\n     if (sizeQuantity === 0) {\n-      toast.error(`Size ${selectedSize} đã hết hàng`);\n+      toast.error(t('product.sizeOutOfStock', { size: selectedSize }));\n       return;\n     }\n \n     if (quantity > sizeQuantity) {\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\n+      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n       return;\n     }\n \n     addToCart({\n@@ -84,13 +86,13 @@\n       price: product.price,\n       image: product.images[0],\n       size: selectedSize,\n       quantity: quantity,\n-      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n+      color: product.colors && product.colors.length > 0 ? product.colors[0] : t('product.unknownColor'),\n       currentStock: sizeQuantity\n     });\n \n-    toast.success(\"Đã thêm vào giỏ hàng\");\n+    toast.success(t('product.addedToCart'));\n   };\n \n   const handleQuantityChange = (value: number) => {\n     if (!product || !selectedSize) {\n@@ -99,9 +101,9 @@\n     }\n     \n     const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n     if (value > sizeQuantity) {\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n+      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n       return;\n     }\n     \n     setQuantity(value);\n@@ -214,9 +216,9 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - Còn {sizeQuantity} sản phẩm\n+                          {size} - {sizeQuantity} {t('product.itemsLeft')}\n                         </button>\n                       );\n                     })}\n                   </div>\n@@ -224,15 +226,15 @@\n               </div>\n             ) : product.category === \"CAP\" ? (\n               <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n-                  Còn {product.quantityHat} sản phẩm\n+                  {product.quantityHat} {t('product.itemsLeft')}\n                 </p>\n               </div>\n             ) : null}\n \n             <div className=\"mb-6\">\n-              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n+              <div className=\"text-sm font-medium mb-2 text-black\">{t('product.quantityLabel')}</div>\n               <div className=\"flex items-center gap-2\">\n                 <button\n                   onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n                   className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n@@ -255,33 +257,33 @@\n               </div>\n             </div>\n \n             <div className=\"mb-4 text-base\">\n-              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n+              <p className=\"text-black\">{product.description || t('product.descriptionUnavailable')}</p>\n             </div>\n \n             <div className=\"mb-4 text-xs\">\n-              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\n-              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n+              <div className=\"font-medium mb-1 text-black\">{t('product.detailsLabel')}</div>\n+              <p className=\"text-black whitespace-pre-line\">{product.details || t('product.detailsUnavailable')}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n               disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n             >\n               {selectedSize && product[`quantity${selectedSize}`] === 0\n-                ? \"Hết hàng\"\n-                : \"Thêm vào giỏ hàng\"}\n+                ? t('product.outOfStock')\n+                : t('product.addToCartButton')}\n             </button>\n \n             {isClothing && (\n               <button\n                 onClick={() => setShowSizeGuide(true)}\n                 className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\n                 style={{ transform: 'none' }}\n               >\n-                <span className=\"group-hover:font-semibold\">Size guide</span>\n+                <span className=\"group-hover:font-semibold\">{t('product.sizeGuide')}</span>\n                 <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\n               </button>\n             )}\n           </div>\n@@ -299,9 +301,9 @@\n           <button \n             onClick={() => setShowHelpPanel(true)}\n             className=\"hover:underline text-black font-semibold uppercase\"\n           >\n-            Cần giúp đỡ?\n+            {t('product.helpButton')}\n           </button>\n         </div>\n       </div>\n \n@@ -338,9 +340,9 @@\n             className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\n             onClick={e => e.stopPropagation()}\n           >\n             <div className=\"flex justify-between items-center mb-4\">\n-              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\n+              <h2 className=\"text-lg font-bold text-left uppercase text-black\">{t('product.sizeGuideTitle')}</h2>\n               <button \n                 onClick={() => setShowSizeGuide(false)}\n                 className=\"text-gray-500 hover:text-black\"\n               >\n@@ -376,12 +378,12 @@\n               </svg>\n             </button>\n             <div className=\"text-center py-8\">\n               <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\n-                VUI LÒNG CHỌN SIZE\n+                {t('product.selectSize')}\n               </p>\n               <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\n-                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\n+                {t('product.selectSizeDescription')}\n               </p>\n             </div>\n             <div className=\"border-t border-gray-200\">\n               <button\n@@ -397,12 +399,13 @@\n                   textTransform: \"uppercase\",\n                   letterSpacing: \"0.1em\"\n                 }}\n               >\n-                Đóng\n+                {t('product.closeButton')}\n               </button>\n             </div>\n           </div>\n         </div>\n       )}\n     </div>\n-  );} \n+  );\n+} \n"
                },
                {
                    "date": 1747324024281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,14 +70,14 @@\n     }\n \n     const sizeQuantity = product[`quantity${selectedSize}`];\n     if (sizeQuantity === 0) {\n-      toast.error(t('product.sizeOutOfStock', { size: selectedSize }));\n+      toast.error(t('product.sizeOutOfStock').replace('{size}', selectedSize));\n       return;\n     }\n \n     if (quantity > sizeQuantity) {\n-      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n+      toast.error(t('product.onlyLeft').replace('{count}', sizeQuantity.toString()).replace('{size}', selectedSize));\n       return;\n     }\n \n     addToCart({\n@@ -101,9 +101,9 @@\n     }\n     \n     const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n     if (value > sizeQuantity) {\n-      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n+      toast.error(t('product.onlyLeft').replace('{count}', sizeQuantity.toString()).replace('{size}', selectedSize));\n       return;\n     }\n     \n     setQuantity(value);\n"
                },
                {
                    "date": 1747324152500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - {sizeQuantity} {t('product.itemsLeft')}\n+                          {size} - {t('product.itemsLeft').replace('{count}', sizeQuantity.toString())}\n                         </button>\n                       );\n                     })}\n                   </div>\n@@ -226,9 +226,9 @@\n               </div>\n             ) : product.category === \"CAP\" ? (\n               <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n-                  {product.quantityHat} {t('product.itemsLeft')}\n+                  {t('product.itemsLeft').replace('{count}', product.quantityHat.toString())}\n                 </p>\n               </div>\n             ) : null}\n \n"
                },
                {
                    "date": 1747324495751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,14 +70,14 @@\n     }\n \n     const sizeQuantity = product[`quantity${selectedSize}`];\n     if (sizeQuantity === 0) {\n-      toast.error(t('product.sizeOutOfStock').replace('{size}', selectedSize));\n+      toast.error(t('product.sizeOutOfStock', { size: selectedSize }));\n       return;\n     }\n \n     if (quantity > sizeQuantity) {\n-      toast.error(t('product.onlyLeft').replace('{count}', sizeQuantity.toString()).replace('{size}', selectedSize));\n+      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n       return;\n     }\n \n     addToCart({\n@@ -101,9 +101,9 @@\n     }\n     \n     const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n     if (value > sizeQuantity) {\n-      toast.error(t('product.onlyLeft').replace('{count}', sizeQuantity.toString()).replace('{size}', selectedSize));\n+      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n       return;\n     }\n     \n     setQuantity(value);\n@@ -216,9 +216,9 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - {t('product.itemsLeft').replace('{count}', sizeQuantity.toString())}\n+                          {size} - {sizeQuantity} {t('product.itemsLeft')}\n                         </button>\n                       );\n                     })}\n                   </div>\n@@ -226,9 +226,9 @@\n               </div>\n             ) : product.category === \"CAP\" ? (\n               <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n-                  {t('product.itemsLeft').replace('{count}', product.quantityHat.toString())}\n+                  {product.quantityHat} {t('product.itemsLeft')}\n                 </p>\n               </div>\n             ) : null}\n \n"
                },
                {
                    "date": 1747324501818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,18 +4,16 @@\n import { useParams, usePathname } from \"next/navigation\";\n import { motion } from \"framer-motion\";\n import { toast } from \"react-hot-toast\";\n import { useCart } from \"@/context/CartContext\";\n-import { useLanguage } from \"@/context/LanguageContext\";\n import { Product } from \"@/types/product\";\n import Image from \"next/image\";\n import Link from \"next/link\";\n import HelpPanel from \"@/components/HelpPanel\";\n \n export default function ProductDetailPage() {\n   const { slug } = useParams();\n   const pathname = usePathname();\n-  const { t } = useLanguage();\n   const [product, setProduct] = useState<Product | null>(null);\n   const [isLoading, setIsLoading] = useState(true);\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n   const [quantity, setQuantity] = useState<number>(1);\n@@ -57,9 +55,9 @@\n \n   if (!product) {\n     return (\n       <div className=\"min-h-screen flex items-center justify-center\">\n-        <p className=\"text-xl\">{t('product.notFound')}</p>\n+        <p className=\"text-xl\">Product not found</p>\n       </div>\n     );\n   }\n \n@@ -70,14 +68,14 @@\n     }\n \n     const sizeQuantity = product[`quantity${selectedSize}`];\n     if (sizeQuantity === 0) {\n-      toast.error(t('product.sizeOutOfStock', { size: selectedSize }));\n+      toast.error(`Size ${selectedSize} đã hết hàng`);\n       return;\n     }\n \n     if (quantity > sizeQuantity) {\n-      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\n       return;\n     }\n \n     addToCart({\n@@ -86,13 +84,13 @@\n       price: product.price,\n       image: product.images[0],\n       size: selectedSize,\n       quantity: quantity,\n-      color: product.colors && product.colors.length > 0 ? product.colors[0] : t('product.unknownColor'),\n+      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n       currentStock: sizeQuantity\n     });\n \n-    toast.success(t('product.addedToCart'));\n+    toast.success(\"Đã thêm vào giỏ hàng\");\n   };\n \n   const handleQuantityChange = (value: number) => {\n     if (!product || !selectedSize) {\n@@ -101,9 +99,9 @@\n     }\n     \n     const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n     if (value > sizeQuantity) {\n-      toast.error(t('product.onlyLeft', { count: sizeQuantity, size: selectedSize }));\n+      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n       return;\n     }\n     \n     setQuantity(value);\n@@ -216,9 +214,9 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - {sizeQuantity} {t('product.itemsLeft')}\n+                          {size} - Còn {sizeQuantity} sản phẩm\n                         </button>\n                       );\n                     })}\n                   </div>\n@@ -226,15 +224,15 @@\n               </div>\n             ) : product.category === \"CAP\" ? (\n               <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n-                  {product.quantityHat} {t('product.itemsLeft')}\n+                  Còn {product.quantityHat} sản phẩm\n                 </p>\n               </div>\n             ) : null}\n \n             <div className=\"mb-6\">\n-              <div className=\"text-sm font-medium mb-2 text-black\">{t('product.quantityLabel')}</div>\n+              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n               <div className=\"flex items-center gap-2\">\n                 <button\n                   onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n                   className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n@@ -257,33 +255,33 @@\n               </div>\n             </div>\n \n             <div className=\"mb-4 text-base\">\n-              <p className=\"text-black\">{product.description || t('product.descriptionUnavailable')}</p>\n+              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-xs\">\n-              <div className=\"font-medium mb-1 text-black\">{t('product.detailsLabel')}</div>\n-              <p className=\"text-black whitespace-pre-line\">{product.details || t('product.detailsUnavailable')}</p>\n+              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\n+              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n               disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n             >\n               {selectedSize && product[`quantity${selectedSize}`] === 0\n-                ? t('product.outOfStock')\n-                : t('product.addToCartButton')}\n+                ? \"Hết hàng\"\n+                : \"Thêm vào giỏ hàng\"}\n             </button>\n \n             {isClothing && (\n               <button\n                 onClick={() => setShowSizeGuide(true)}\n                 className=\"inline-block text-left text-sm text-black mb-6 relative group transition-all duration-300\"\n                 style={{ transform: 'none' }}\n               >\n-                <span className=\"group-hover:font-semibold\">{t('product.sizeGuide')}</span>\n+                <span className=\"group-hover:font-semibold\">Size guide</span>\n                 <span className=\"absolute bottom-0 left-0 w-full h-[1px] bg-black group-hover:w-0 transition-all duration-300\"></span>\n               </button>\n             )}\n           </div>\n@@ -301,9 +299,9 @@\n           <button \n             onClick={() => setShowHelpPanel(true)}\n             className=\"hover:underline text-black font-semibold uppercase\"\n           >\n-            {t('product.helpButton')}\n+            Cần giúp đỡ?\n           </button>\n         </div>\n       </div>\n \n@@ -340,9 +338,9 @@\n             className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\n             onClick={e => e.stopPropagation()}\n           >\n             <div className=\"flex justify-between items-center mb-4\">\n-              <h2 className=\"text-lg font-bold text-left uppercase text-black\">{t('product.sizeGuideTitle')}</h2>\n+              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\n               <button \n                 onClick={() => setShowSizeGuide(false)}\n                 className=\"text-gray-500 hover:text-black\"\n               >\n@@ -378,12 +376,12 @@\n               </svg>\n             </button>\n             <div className=\"text-center py-8\">\n               <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\n-                {t('product.selectSize')}\n+                VUI LÒNG CHỌN SIZE\n               </p>\n               <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\n-                {t('product.selectSizeDescription')}\n+                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\n               </p>\n             </div>\n             <div className=\"border-t border-gray-200\">\n               <button\n@@ -399,13 +397,12 @@\n                   textTransform: \"uppercase\",\n                   letterSpacing: \"0.1em\"\n                 }}\n               >\n-                {t('product.closeButton')}\n+                Đóng\n               </button>\n             </div>\n           </div>\n         </div>\n       )}\n     </div>\n-  );\n-} \n+  );} \n"
                },
                {
                    "date": 1747324760583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,9 @@\n       price: product.price,\n       image: product.images[0],\n       size: selectedSize,\n       quantity: quantity,\n-      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n-      currentStock: sizeQuantity\n+      currentStock: product[`quantity${selectedSize}`]\n     });\n \n     toast.success(\"Đã thêm vào giỏ hàng\");\n   };\n"
                },
                {
                    "date": 1747324883132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,10 @@\n       price: product.price,\n       image: product.images[0],\n       size: selectedSize,\n       quantity: quantity,\n-      currentStock: product[`quantity${selectedSize}`]\n+      color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n+      currentStock: sizeQuantity\n     });\n \n     toast.success(\"Đã thêm vào giỏ hàng\");\n   };\n"
                },
                {
                    "date": 1747380011293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,9 +214,9 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - Còn {sizeQuantity} sản phẩm\n+                          {size} - {sizeQuantity} left in stock\n                         </button>\n                       );\n                     })}\n                   </div>\n"
                },
                {
                    "date": 1747380054585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,9 +214,9 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - {sizeQuantity} left in stock\n+                          {size} - {sizeQuantity} LEFT IN STOCK\n                         </button>\n                       );\n                     })}\n                   </div>\n"
                },
                {
                    "date": 1747380121460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,9 +230,9 @@\n               </div>\n             ) : null}\n \n             <div className=\"mb-6\">\n-              <div className=\"text-sm font-medium mb-2 text-black\">Số lượng:</div>\n+              <div className=\"text-sm font-medium mb-2 text-black\">QUANTITY:</div>\n               <div className=\"flex items-center gap-2\">\n                 <button\n                   onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n                   className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n@@ -259,9 +259,9 @@\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-xs\">\n-              <div className=\"font-medium mb-1 text-black\">Chi tiết:</div>\n+              <div className=\"font-medium mb-1 text-black\">DETAILS:</div>\n               <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n@@ -269,10 +269,10 @@\n               onClick={handleAddToCart}\n               disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n             >\n               {selectedSize && product[`quantity${selectedSize}`] === 0\n-                ? \"Hết hàng\"\n-                : \"Thêm vào giỏ hàng\"}\n+                ? \"OUT OF STOCK\"\n+                : \"ADD TO CART\"}\n             </button>\n \n             {isClothing && (\n               <button\n"
                },
                {
                    "date": 1747380169191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,9 +338,9 @@\n             className=\"bg-white p-6 rounded-lg max-w-2xl w-full mx-4 shadow-lg\"\n             onClick={e => e.stopPropagation()}\n           >\n             <div className=\"flex justify-between items-center mb-4\">\n-              <h2 className=\"text-lg font-bold text-left uppercase text-black\">Hướng dẫn chọn size</h2>\n+              <h2 className=\"text-lg font-bold text-left uppercase text-black\">SIZE GUIDE</h2>\n               <button \n                 onClick={() => setShowSizeGuide(false)}\n                 className=\"text-gray-500 hover:text-black\"\n               >\n"
                },
                {
                    "date": 1747380213509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -376,12 +376,12 @@\n               </svg>\n             </button>\n             <div className=\"text-center py-8\">\n               <p style={{ fontSize: \"0.7em\", color: \"#000000\", textTransform: \"uppercase\", letterSpacing: \"0.1em\", marginBottom: \"16px\" }}>\n-                VUI LÒNG CHỌN SIZE\n+                PLEASE SELECT SIZE\n               </p>\n               <p style={{ fontSize: \"0.9em\", color: \"#000000\", marginBottom: \"8px\" }}>\n-                Bạn cần chọn size trước khi thêm sản phẩm vào giỏ hàng\n+                You need to select a size before adding the product to cart\n               </p>\n             </div>\n             <div className=\"border-t border-gray-200\">\n               <button\n@@ -397,9 +397,9 @@\n                   textTransform: \"uppercase\",\n                   letterSpacing: \"0.1em\"\n                 }}\n               >\n-                Đóng\n+                CLOSE\n               </button>\n             </div>\n           </div>\n         </div>\n"
                },
                {
                    "date": 1747387029410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,23 +163,23 @@\n                 </button>\n               </>\n             )}\n           </div>\n-          <div className=\"flex gap-4 w-full justify-center mt-10\">\n+          <div className=\"flex gap-2 md:gap-4 w-full justify-center mt-4 md:mt-10\">\n             {product.images && product.images.slice(0, 4).map((img: string, index: number) => (\n               <div \n                 key={index} \n-                className={`w-24 h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n+                className={`w-16 h-16 md:w-24 md:h-24 relative cursor-pointer border-2 transition-all duration-300 ${\n                   currentImageIndex === index ? \"border-black scale-105\" : \"border-gray-200 hover:border-gray-400\"\n                 }`}\n                 onClick={() => setCurrentImageIndex(index)}\n               >\n                 <Image\n                   src={img}\n                   alt={`${product.name} thumbnail ${index + 1}`}\n-                  width={96}\n-                  height={96}\n-                  className=\"object-cover\"\n+                  width={64}\n+                  height={64}\n+                  className=\"object-cover md:w-24 md:h-24 w-16 h-16\"\n                 />\n               </div>\n             ))}\n           </div>\n@@ -187,10 +187,10 @@\n \n         {/* Bên phải: Thông tin sản phẩm */}\n         <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n           <div className=\"w-full max-w-xl\">\n-            <h1 className=\"text-2xl font-bold text-center md:text-left mb-2 uppercase text-black\">{product.name}</h1>\n-            <div className=\"text-xl font-semibold mb-4 text-black\">\n+            <h1 className=\"text-lg md:text-2xl font-bold text-center md:text-left mb-1 md:mb-2 uppercase text-black\">{product.name}</h1>\n+            <div className=\"text-base md:text-xl font-semibold mb-2 md:mb-4 text-black\">\n               {(product.price).toLocaleString('vi-VN')} VND\n             </div>\n \n             {isClothing ? (\n"
                },
                {
                    "date": 1747387205058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,9 @@\n         {/* Bên phải: Thông tin sản phẩm */}\n         <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n           <div className=\"w-full max-w-xl\">\n             <h1 className=\"text-lg md:text-2xl font-bold text-center md:text-left mb-1 md:mb-2 uppercase text-black\">{product.name}</h1>\n-            <div className=\"text-base md:text-xl font-semibold mb-2 md:mb-4 text-black\">\n+            <div className=\"text-base md:text-xl font-semibold mb-2 md:mb-4 text-black text-center md:text-left\">\n               {(product.price).toLocaleString('vi-VN')} VND\n             </div>\n \n             {isClothing ? (\n@@ -208,13 +208,13 @@\n                             if (!isOutOfStock) setSelectedSize(size);\n                           }}\n                           disabled={isOutOfStock}\n                           className={\n-                            `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\n+                            `py-1 px-2 text-xs md:py-2 md:px-4 md:text-sm border-2 font-medium border-black relative ` +\n                             (isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed ' : '') +\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n-                          style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n+                          style={{ minWidth: 60, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n                           {size} - {sizeQuantity} LEFT IN STOCK\n                         </button>\n                       );\n"
                },
                {
                    "date": 1747387306998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,10 +259,10 @@\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-xs\">\n-              <div className=\"font-medium mb-1 text-black\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n+              <div className=\"font-medium mb-1 text-black text-xs md:text-sm\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line text-xs md:text-sm\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1747387348392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,9 @@\n         {/* Bên phải: Thông tin sản phẩm */}\n         <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n           <div className=\"w-full max-w-xl\">\n             <h1 className=\"text-lg md:text-2xl font-bold text-center md:text-left mb-1 md:mb-2 uppercase text-black\">{product.name}</h1>\n-            <div className=\"text-base md:text-xl font-semibold mb-2 md:mb-4 text-black text-center md:text-left\">\n+            <div className=\"text-base md:text-xl font-semibold mb-2 md:mb-4 text-black\">\n               {(product.price).toLocaleString('vi-VN')} VND\n             </div>\n \n             {isClothing ? (\n@@ -208,13 +208,13 @@\n                             if (!isOutOfStock) setSelectedSize(size);\n                           }}\n                           disabled={isOutOfStock}\n                           className={\n-                            `py-1 px-2 text-xs md:py-2 md:px-4 md:text-sm border-2 font-medium border-black relative ` +\n+                            `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\n                             (isOutOfStock ? 'text-gray-400 bg-gray-100 opacity-60 cursor-not-allowed ' : '') +\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n-                          style={{ minWidth: 60, borderRadius: 0, transition: 'none', transform: 'none' }}\n+                          style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n                           {size} - {sizeQuantity} LEFT IN STOCK\n                         </button>\n                       );\n@@ -259,10 +259,10 @@\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-xs\">\n-              <div className=\"font-medium mb-1 text-black text-xs md:text-sm\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-xs md:text-sm\">{product.details || \"No details available.\"}</p>\n+              <div className=\"font-medium mb-1 text-black\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1747387391753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,15 +254,15 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-base\">\n+            <div className=\"mb-4 text-[13px] md:text-base\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n-            <div className=\"mb-4 text-xs\">\n-              <div className=\"font-medium mb-1 text-black\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line\">{product.details || \"No details available.\"}</p>\n+            <div className=\"mb-4 text-[13px] md:text-xs\">\n+              <div className=\"font-medium mb-1 text-black text-[13px] md:text-xs\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line text-[13px] md:text-xs\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1747387469062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,11 +258,11 @@\n             <div className=\"mb-4 text-[13px] md:text-base\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n-            <div className=\"mb-4 text-[13px] md:text-xs\">\n-              <div className=\"font-medium mb-1 text-black text-[13px] md:text-xs\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[13px] md:text-xs\">{product.details || \"No details available.\"}</p>\n+            <div className=\"mb-4 text-[11px] md:text-xs\">\n+              <div className=\"font-medium mb-1 text-black text-[11px] md:text-xs\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1747797068033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     const fetchProduct = async () => {\n       if (!slug) return;\n       setIsLoading(true);\n       try {\n-        const response = await fetch(`/api/products/by-slug/${slug}`);\n+        const response = await fetch(`${window.location.origin}/api/products/by-slug/${slug}`);\n         const data = await response.json();\n         if (data.ok) {\n           setProduct(data.product);\n         }\n"
                },
                {
                    "date": 1747797216442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n     const fetchProduct = async () => {\n       if (!slug) return;\n       setIsLoading(true);\n       try {\n-        const response = await fetch(`${window.location.origin}/api/products/by-slug/${slug}`);\n+        const domain = process.env.NEXT_PUBLIC_DOMAIN || 'http://localhost:3000';\n+        const response = await fetch(`${domain}/api/products/by-slug/${slug}`);\n         const data = await response.json();\n         if (data.ok) {\n           setProduct(data.product);\n         }\n"
                },
                {
                    "date": 1747797225409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,14 @@\n     const fetchProduct = async () => {\n       if (!slug) return;\n       setIsLoading(true);\n       try {\n-        const domain = process.env.NEXT_PUBLIC_DOMAIN || 'http://localhost:3000';\n-        const response = await fetch(`${domain}/api/products/by-slug/${slug}`);\n+        const response = await fetch(`/api/products/by-slug/${slug}`, {\n+          method: 'GET',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+        });\n         const data = await response.json();\n         if (data.ok) {\n           setProduct(data.product);\n         }\n"
                },
                {
                    "date": 1747797407172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,18 +25,15 @@\n   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\n \n   useEffect(() => {\n+    if (!slug) return;\n+    if (typeof window === \"undefined\") return;\n+\n+    setIsLoading(true);\n     const fetchProduct = async () => {\n-      if (!slug) return;\n-      setIsLoading(true);\n       try {\n-        const response = await fetch(`/api/products/by-slug/${slug}`, {\n-          method: 'GET',\n-          headers: {\n-            'Content-Type': 'application/json',\n-          },\n-        });\n+        const response = await fetch(`/api/products/by-slug/${slug}`);\n         const data = await response.json();\n         if (data.ok) {\n           setProduct(data.product);\n         }\n"
                },
                {
                    "date": 1747797682771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n \n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n-        const response = await fetch(`/api/products/by-slug/${slug}`);\n+        const baseUrl = window.location.origin;\n+        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`);\n         const data = await response.json();\n         if (data.ok) {\n           setProduct(data.product);\n         }\n"
                },
                {
                    "date": 1747797802347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,14 @@\n \n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n-        const baseUrl = window.location.origin;\n-        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`);\n+        const response = await fetch(`/api/products/by-slug/${slug}`, {\n+          method: 'GET',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+        });\n         const data = await response.json();\n         if (data.ok) {\n           setProduct(data.product);\n         }\n"
                },
                {
                    "date": 1747798586790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,17 +31,28 @@\n \n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n+        console.log(\"Fetching product with slug:\", slug);\n         const response = await fetch(`/api/products/by-slug/${slug}`, {\n           method: 'GET',\n           headers: {\n             'Content-Type': 'application/json',\n           },\n+          cache: 'no-store'\n         });\n+        \n+        if (!response.ok) {\n+          throw new Error(`HTTP error! status: ${response.status}`);\n+        }\n+        \n         const data = await response.json();\n+        console.log(\"Received data:\", data);\n+        \n         if (data.ok) {\n           setProduct(data.product);\n+        } else {\n+          throw new Error(data.error || 'Failed to load product');\n         }\n       } catch (error) {\n         console.error(\"Error fetching product:\", error);\n         toast.error(\"Failed to load product\");\n"
                },
                {
                    "date": 1747798745031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,13 @@\n import Image from \"next/image\";\n import Link from \"next/link\";\n import HelpPanel from \"@/components/HelpPanel\";\n \n+export const dynamic = 'force-dynamic';\n+\n export default function ProductDetailPage() {\n-  const { slug } = useParams();\n+  const params = useParams();\n+  const slug = params?.slug as string;\n   const pathname = usePathname();\n   const [product, setProduct] = useState<Product | null>(null);\n   const [isLoading, setIsLoading] = useState(true);\n   const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\n"
                },
                {
                    "date": 1747803215677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,10 @@\n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n         console.log(\"Fetching product with slug:\", slug);\n-        const response = await fetch(`/api/products/by-slug/${slug}`, {\n+        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n+        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n           method: 'GET',\n           headers: {\n             'Content-Type': 'application/json',\n           },\n"
                },
                {
                    "date": 1747886709025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,40 +32,30 @@\n     if (!slug) return;\n     if (typeof window === \"undefined\") return;\n \n     setIsLoading(true);\n-    const fetchProduct = async () => {\n+    const fetchProduct = async (slug: string) => {\n       try {\n-        console.log(\"Fetching product with slug:\", slug);\n-        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n-        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n-          method: 'GET',\n-          headers: {\n-            'Content-Type': 'application/json',\n-          },\n-          cache: 'no-store'\n-        });\n-        \n+        const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n+        const response = await fetch(`${baseUrl}/api/products/${slug}`);\n         if (!response.ok) {\n-          throw new Error(`HTTP error! status: ${response.status}`);\n+          throw new Error('Failed to fetch product');\n         }\n-        \n         const data = await response.json();\n-        console.log(\"Received data:\", data);\n-        \n-        if (data.ok) {\n-          setProduct(data.product);\n-        } else {\n-          throw new Error(data.error || 'Failed to load product');\n-        }\n+        return data;\n       } catch (error) {\n-        console.error(\"Error fetching product:\", error);\n-        toast.error(\"Failed to load product\");\n-      } finally {\n-        setIsLoading(false);\n+        console.error('Error fetching product:', error);\n+        return null;\n       }\n     };\n-    fetchProduct();\n+    fetchProduct(slug).then((data) => {\n+      if (data && data.ok) {\n+        setProduct(data.product);\n+      } else {\n+        toast.error(data?.error || 'Failed to load product');\n+      }\n+      setIsLoading(false);\n+    });\n   }, [slug]);\n \n   if (isLoading) {\n     return (\n"
                },
                {
                    "date": 1747886975989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,30 +32,40 @@\n     if (!slug) return;\n     if (typeof window === \"undefined\") return;\n \n     setIsLoading(true);\n-    const fetchProduct = async (slug: string) => {\n+    const fetchProduct = async () => {\n       try {\n-        const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n-        const response = await fetch(`${baseUrl}/api/products/${slug}`);\n+        console.log(\"Fetching product with slug:\", slug);\n+        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n+        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n+          method: 'GET',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          cache: 'no-store'\n+        });\n+        \n         if (!response.ok) {\n-          throw new Error('Failed to fetch product');\n+          throw new Error(`HTTP error! status: ${response.status}`);\n         }\n+        \n         const data = await response.json();\n-        return data;\n+        console.log(\"Received data:\", data);\n+        \n+        if (data.ok) {\n+          setProduct(data.product);\n+        } else {\n+          throw new Error(data.error || 'Failed to load product');\n+        }\n       } catch (error) {\n-        console.error('Error fetching product:', error);\n-        return null;\n+        console.error(\"Error fetching product:\", error);\n+        toast.error(\"Failed to load product\");\n+      } finally {\n+        setIsLoading(false);\n       }\n     };\n-    fetchProduct(slug).then((data) => {\n-      if (data && data.ok) {\n-        setProduct(data.product);\n-      } else {\n-        toast.error(data?.error || 'Failed to load product');\n-      }\n-      setIsLoading(false);\n-    });\n+    fetchProduct();\n   }, [slug]);\n \n   if (isLoading) {\n     return (\n"
                },
                {
                    "date": 1747887134553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,40 +32,30 @@\n     if (!slug) return;\n     if (typeof window === \"undefined\") return;\n \n     setIsLoading(true);\n-    const fetchProduct = async () => {\n+    const fetchProduct = async (slug: string) => {\n       try {\n-        console.log(\"Fetching product with slug:\", slug);\n-        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n-        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n-          method: 'GET',\n-          headers: {\n-            'Content-Type': 'application/json',\n-          },\n-          cache: 'no-store'\n-        });\n-        \n+        const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n+        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`);\n         if (!response.ok) {\n-          throw new Error(`HTTP error! status: ${response.status}`);\n+          throw new Error('Failed to fetch product');\n         }\n-        \n         const data = await response.json();\n-        console.log(\"Received data:\", data);\n-        \n-        if (data.ok) {\n-          setProduct(data.product);\n-        } else {\n-          throw new Error(data.error || 'Failed to load product');\n-        }\n+        return data;\n       } catch (error) {\n-        console.error(\"Error fetching product:\", error);\n-        toast.error(\"Failed to load product\");\n-      } finally {\n-        setIsLoading(false);\n+        console.error('Error fetching product:', error);\n+        return null;\n       }\n     };\n-    fetchProduct();\n+    fetchProduct(slug).then((data) => {\n+      if (data && data.ok) {\n+        setProduct(data.product);\n+      } else {\n+        toast.error(data?.error || 'Failed to load product');\n+      }\n+      setIsLoading(false);\n+    });\n   }, [slug]);\n \n   if (isLoading) {\n     return (\n"
                },
                {
                    "date": 1747888331567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,30 +32,25 @@\n     if (!slug) return;\n     if (typeof window === \"undefined\") return;\n \n     setIsLoading(true);\n-    const fetchProduct = async (slug: string) => {\n+    const fetchProduct = async () => {\n       try {\n         const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n         const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`);\n         if (!response.ok) {\n           throw new Error('Failed to fetch product');\n         }\n         const data = await response.json();\n-        return data;\n+        return data.product;\n       } catch (error) {\n         console.error('Error fetching product:', error);\n         return null;\n+      } finally {\n+        setIsLoading(false);\n       }\n     };\n-    fetchProduct(slug).then((data) => {\n-      if (data && data.ok) {\n-        setProduct(data.product);\n-      } else {\n-        toast.error(data?.error || 'Failed to load product');\n-      }\n-      setIsLoading(false);\n-    });\n+    fetchProduct().then(setProduct);\n   }, [slug]);\n \n   if (isLoading) {\n     return (\n"
                },
                {
                    "date": 1747888344165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,23 +34,38 @@\n \n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n-        const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n-        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`);\n+        console.log(\"Fetching product with slug:\", slug);\n+        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n+        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n+          method: 'GET',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          cache: 'no-store'\n+        });\n+        \n         if (!response.ok) {\n-          throw new Error('Failed to fetch product');\n+          throw new Error(`HTTP error! status: ${response.status}`);\n         }\n+        \n         const data = await response.json();\n-        return data.product;\n+        console.log(\"Received data:\", data);\n+        \n+        if (data.ok) {\n+          setProduct(data.product);\n+        } else {\n+          throw new Error(data.error || 'Failed to load product');\n+        }\n       } catch (error) {\n-        console.error('Error fetching product:', error);\n-        return null;\n+        console.error(\"Error fetching product:\", error);\n+        toast.error(\"Failed to load product\");\n       } finally {\n         setIsLoading(false);\n       }\n     };\n-    fetchProduct().then(setProduct);\n+    fetchProduct();\n   }, [slug]);\n \n   if (isLoading) {\n     return (\n"
                },
                {
                    "date": 1747889108586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,40 +32,32 @@\n     if (!slug) return;\n     if (typeof window === \"undefined\") return;\n \n     setIsLoading(true);\n-    const fetchProduct = async () => {\n+    const fetchProduct = async (slug: string) => {\n       try {\n-        console.log(\"Fetching product with slug:\", slug);\n-        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n+        const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n         const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n-          method: 'GET',\n-          headers: {\n-            'Content-Type': 'application/json',\n-          },\n           cache: 'no-store'\n         });\n-        \n         if (!response.ok) {\n-          throw new Error(`HTTP error! status: ${response.status}`);\n+          throw new Error('Failed to fetch product');\n         }\n-        \n         const data = await response.json();\n-        console.log(\"Received data:\", data);\n-        \n-        if (data.ok) {\n-          setProduct(data.product);\n-        } else {\n-          throw new Error(data.error || 'Failed to load product');\n-        }\n+        return data.product;\n       } catch (error) {\n-        console.error(\"Error fetching product:\", error);\n+        console.error('Error fetching product:', error);\n+        return null;\n+      }\n+    };\n+    fetchProduct(slug).then((data) => {\n+      if (data) {\n+        setProduct(data);\n+      } else {\n         toast.error(\"Failed to load product\");\n-      } finally {\n-        setIsLoading(false);\n       }\n-    };\n-    fetchProduct();\n+      setIsLoading(false);\n+    });\n   }, [slug]);\n \n   if (isLoading) {\n     return (\n"
                },
                {
                    "date": 1747890885636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,32 +32,40 @@\n     if (!slug) return;\n     if (typeof window === \"undefined\") return;\n \n     setIsLoading(true);\n-    const fetchProduct = async (slug: string) => {\n+    const fetchProduct = async () => {\n       try {\n+        console.log(\"Fetching product with slug:\", slug);\n         const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n         const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n+          method: 'GET',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n           cache: 'no-store'\n         });\n+        \n         if (!response.ok) {\n-          throw new Error('Failed to fetch product');\n+          throw new Error(`HTTP error! status: ${response.status}`);\n         }\n+        \n         const data = await response.json();\n-        return data.product;\n+        console.log(\"Received data:\", data);\n+        \n+        if (data.ok) {\n+          setProduct(data.product);\n+        } else {\n+          throw new Error(data.error || 'Failed to load product');\n+        }\n       } catch (error) {\n-        console.error('Error fetching product:', error);\n-        return null;\n+        console.error(\"Error fetching product:\", error);\n+        toast.error(\"Failed to load product\");\n+      } finally {\n+        setIsLoading(false);\n       }\n     };\n-    fetchProduct(slug).then((data) => {\n-      if (data) {\n-        setProduct(data);\n-      } else {\n-        toast.error(\"Failed to load product\");\n-      }\n-      setIsLoading(false);\n-    });\n+    fetchProduct();\n   }, [slug]);\n \n   if (isLoading) {\n     return (\n"
                },
                {
                    "date": 1747890892149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n         console.log(\"Fetching product with slug:\", slug);\n-        const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n+        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n         const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n           method: 'GET',\n           headers: {\n             'Content-Type': 'application/json',\n"
                },
                {
                    "date": 1747892544940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,22 +34,13 @@\n \n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n-        console.log(\"Fetching product with slug:\", slug);\n-        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n-        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n-          method: 'GET',\n-          headers: {\n-            'Content-Type': 'application/json',\n-          },\n-          cache: 'no-store'\n-        });\n-        \n+        const baseUrl = process.env.NEXTAUTH_URL || 'http://localhost:3000';\n+        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`);\n         if (!response.ok) {\n-          throw new Error(`HTTP error! status: ${response.status}`);\n+          throw new Error('Failed to fetch product');\n         }\n-        \n         const data = await response.json();\n         console.log(\"Received data:\", data);\n         \n         if (data.ok) {\n"
                },
                {
                    "date": 1747892737586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,13 +34,22 @@\n \n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n-        const baseUrl = process.env.NEXTAUTH_URL || 'http://localhost:3000';\n-        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`);\n+        console.log(\"Fetching product with slug:\", slug);\n+        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n+        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n+          method: 'GET',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          cache: 'no-store'\n+        });\n+        \n         if (!response.ok) {\n-          throw new Error('Failed to fetch product');\n+          throw new Error(`HTTP error! status: ${response.status}`);\n         }\n+        \n         const data = await response.json();\n         console.log(\"Received data:\", data);\n         \n         if (data.ok) {\n"
                },
                {
                    "date": 1747904092190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,9 @@\n     setIsLoading(true);\n     const fetchProduct = async () => {\n       try {\n         console.log(\"Fetching product with slug:\", slug);\n-        const baseUrl = process.env.NEXT_PUBLIC_API_URL || window.location.origin;\n-        const response = await fetch(`${baseUrl}/api/products/by-slug/${slug}`, {\n+        const response = await fetch(`/api/products/by-slug/${slug}`, {\n           method: 'GET',\n           headers: {\n             'Content-Type': 'application/json',\n           },\n"
                },
                {
                    "date": 1748319013152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,12 @@\n                       return (\n                         <button\n                           key={size}\n                           onClick={() => {\n-                            if (!isOutOfStock) setSelectedSize(size);\n+                            if (!isOutOfStock) {\n+                              setSelectedSize(size);\n+                              setQuantity(1); // Reset quantity when changing size\n+                            }\n                           }}\n                           disabled={isOutOfStock}\n                           className={\n                             `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\n@@ -241,42 +244,59 @@\n                       );\n                     })}\n                   </div>\n                 </div>\n+                {selectedSize && (\n+                  <div className=\"mt-4\">\n+                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                      Số lượng\n+                    </label>\n+                    <div className=\"flex items-center space-x-4\">\n+                      <button\n+                        onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n+                        className=\"w-8 h-8 flex items-center justify-center border border-gray-300 rounded\"\n+                      >\n+                        -\n+                      </button>\n+                      <span className=\"w-8 text-center\">{quantity}</span>\n+                      <button\n+                        onClick={() => handleQuantityChange(Math.min(product[`quantity${selectedSize}` as keyof Product] as number, quantity + 1))}\n+                        className=\"w-8 h-8 flex items-center justify-center border border-gray-300 rounded\"\n+                      >\n+                        +\n+                      </button>\n+                    </div>\n+                  </div>\n+                )}\n               </div>\n             ) : product.category === \"CAP\" ? (\n               <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n                   Còn {product.quantityHat} sản phẩm\n                 </p>\n+                <div className=\"mt-4\">\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                    Số lượng\n+                  </label>\n+                  <div className=\"flex items-center space-x-4\">\n+                    <button\n+                      onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n+                      className=\"w-8 h-8 flex items-center justify-center border border-gray-300 rounded\"\n+                    >\n+                      -\n+                    </button>\n+                    <span className=\"w-8 text-center\">{quantity}</span>\n+                    <button\n+                      onClick={() => handleQuantityChange(Math.min(product.quantityHat, quantity + 1))}\n+                      className=\"w-8 h-8 flex items-center justify-center border border-gray-300 rounded\"\n+                    >\n+                      +\n+                    </button>\n+                  </div>\n+                </div>\n               </div>\n             ) : null}\n \n-            <div className=\"mb-6\">\n-              <div className=\"text-sm font-medium mb-2 text-black\">QUANTITY:</div>\n-              <div className=\"flex items-center gap-2\">\n-                <button\n-                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n-                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n-                >\n-                  -\n-                </button>\n-                <input\n-                  type=\"number\"\n-                  min=\"1\"\n-                  value={quantity}\n-                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n-                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\n-                />\n-                <button\n-                  onClick={() => handleQuantityChange(quantity + 1)}\n-                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n-                >\n-                  +\n-                </button>\n-              </div>\n-            </div>\n-\n             <div className=\"mb-4 text-[13px] md:text-base\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n"
                },
                {
                    "date": 1748319117092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,12 +225,9 @@\n                       return (\n                         <button\n                           key={size}\n                           onClick={() => {\n-                            if (!isOutOfStock) {\n-                              setSelectedSize(size);\n-                              setQuantity(1); // Reset quantity when changing size\n-                            }\n+                            if (!isOutOfStock) setSelectedSize(size);\n                           }}\n                           disabled={isOutOfStock}\n                           className={\n                             `py-2 px-4 border-2 text-sm font-medium border-black relative ` +\n@@ -244,59 +241,42 @@\n                       );\n                     })}\n                   </div>\n                 </div>\n-                {selectedSize && (\n-                  <div className=\"mt-4\">\n-                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                      Số lượng\n-                    </label>\n-                    <div className=\"flex items-center space-x-4\">\n-                      <button\n-                        onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n-                        className=\"w-8 h-8 flex items-center justify-center border border-gray-300 rounded\"\n-                      >\n-                        -\n-                      </button>\n-                      <span className=\"w-8 text-center\">{quantity}</span>\n-                      <button\n-                        onClick={() => handleQuantityChange(Math.min(product[`quantity${selectedSize}` as keyof Product] as number, quantity + 1))}\n-                        className=\"w-8 h-8 flex items-center justify-center border border-gray-300 rounded\"\n-                      >\n-                        +\n-                      </button>\n-                    </div>\n-                  </div>\n-                )}\n               </div>\n             ) : product.category === \"CAP\" ? (\n               <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n                   Còn {product.quantityHat} sản phẩm\n                 </p>\n-                <div className=\"mt-4\">\n-                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                    Số lượng\n-                  </label>\n-                  <div className=\"flex items-center space-x-4\">\n-                    <button\n-                      onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n-                      className=\"w-8 h-8 flex items-center justify-center border border-gray-300 rounded\"\n-                    >\n-                      -\n-                    </button>\n-                    <span className=\"w-8 text-center\">{quantity}</span>\n-                    <button\n-                      onClick={() => handleQuantityChange(Math.min(product.quantityHat, quantity + 1))}\n-                      className=\"w-8 h-8 flex items-center justify-center border border-gray-300 rounded\"\n-                    >\n-                      +\n-                    </button>\n-                  </div>\n-                </div>\n               </div>\n             ) : null}\n \n+            <div className=\"mb-6\">\n+              <div className=\"text-sm font-medium mb-2 text-black\">QUANTITY:</div>\n+              <div className=\"flex items-center gap-2\">\n+                <button\n+                  onClick={() => handleQuantityChange(Math.max(1, quantity - 1))}\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n+                >\n+                  -\n+                </button>\n+                <input\n+                  type=\"number\"\n+                  min=\"1\"\n+                  value={quantity}\n+                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}\n+                  className=\"w-12 h-8 text-center border border-black text-black focus:outline-none focus:border-black\"\n+                />\n+                <button\n+                  onClick={() => handleQuantityChange(quantity + 1)}\n+                  className=\"w-8 h-8 border border-black flex items-center justify-center text-black\"\n+                >\n+                  +\n+                </button>\n+              </div>\n+            </div>\n+\n             <div className=\"mb-4 text-[13px] md:text-base\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n"
                },
                {
                    "date": 1748491236085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,22 +235,22 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - {sizeQuantity} LEFT IN STOCK\n+                          {size} - {sizeQuantity > 0 ? `${sizeQuantity} LEFT IN STOCK` : 'OUT OF STOCK'}\n                         </button>\n                       );\n                     })}\n                   </div>\n                 </div>\n               </div>\n-            ) : product.category === \"CAP\" ? (\n+            ) : (\n               <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n-                  Còn {product.quantityHat} sản phẩm\n+                  {product.quantityHat > 0 ? `Còn ${product.quantityHat} sản phẩm` : 'Hết hàng'}\n                 </p>\n               </div>\n-            ) : null}\n+            )}\n \n             <div className=\"mb-6\">\n               <div className=\"text-sm font-medium mb-2 text-black\">QUANTITY:</div>\n               <div className=\"flex items-center gap-2\">\n"
                },
                {
                    "date": 1748491503161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,22 +235,22 @@\n                             (isSelected ? 'bg-black text-white ' : 'bg-white text-black ')\n                           }\n                           style={{ minWidth: 80, borderRadius: 0, transition: 'none', transform: 'none' }}\n                         >\n-                          {size} - {sizeQuantity > 0 ? `${sizeQuantity} LEFT IN STOCK` : 'OUT OF STOCK'}\n+                          {size} - {sizeQuantity} LEFT IN STOCK\n                         </button>\n                       );\n                     })}\n                   </div>\n                 </div>\n               </div>\n-            ) : (\n+            ) : product.category === \"CAP\" ? (\n               <div className=\"mb-6\">\n                 <p className=\"text-sm text-black\">\n-                  {product.quantityHat > 0 ? `Còn ${product.quantityHat} sản phẩm` : 'Hết hàng'}\n+                  Còn {product.quantityHat} sản phẩm\n                 </p>\n               </div>\n-            )}\n+            ) : null}\n \n             <div className=\"mb-6\">\n               <div className=\"text-sm font-medium mb-2 text-black\">QUANTITY:</div>\n               <div className=\"flex items-center gap-2\">\n"
                },
                {
                    "date": 1748658436903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,13 +279,28 @@\n             <div className=\"mb-4 text-[13px] md:text-base\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n-            <div className=\"mb-4 text-[11px] md:text-xs\">\n-              <div className=\"font-medium mb-1 text-black text-[11px] md:text-xs\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">{product.details || \"No details available.\"}</p>\n+            {/* Hướng dẫn giặt riêng */}\n+            <div className=\"mb-2\">\n+              <p className=\"text-[10px] md:text-[11px] text-gray-700 italic leading-tight\">\n+                Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n+              </p>\n             </div>\n \n+            <div className=\"mb-4 text-[10px] md:text-[11px]\">\n+              <div className=\"font-medium mb-1 text-black text-[10px] md:text-[11px]\">DETAILS:</div>\n+              <div className=\"text-black whitespace-pre-line\">\n+                {product.details\n+                  ? product.details.split('\\n').map((line, idx) => (\n+                      <p key={idx} className=\"text-[10px] md:text-[11px] leading-tight mb-1\">\n+                        {line}\n+                      </p>\n+                    ))\n+                  : <span className=\"text-[10px] md:text-[11px]\">No details available.</span>}\n+              </div>\n+            </div>\n+\n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n               disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n"
                },
                {
                    "date": 1748658452331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,28 +279,13 @@\n             <div className=\"mb-4 text-[13px] md:text-base\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n-            {/* Hướng dẫn giặt riêng */}\n-            <div className=\"mb-2\">\n-              <p className=\"text-[10px] md:text-[11px] text-gray-700 italic leading-tight\">\n-                Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n-              </p>\n+            <div className=\"mb-4 text-[11px] md:text-xs\">\n+              <div className=\"font-medium mb-1 text-black text-[11px] md:text-xs\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">{product.details || \"No details available.\"}</p>\n             </div>\n \n-            <div className=\"mb-4 text-[10px] md:text-[11px]\">\n-              <div className=\"font-medium mb-1 text-black text-[10px] md:text-[11px]\">DETAILS:</div>\n-              <div className=\"text-black whitespace-pre-line\">\n-                {product.details\n-                  ? product.details.split('\\n').map((line, idx) => (\n-                      <p key={idx} className=\"text-[10px] md:text-[11px] leading-tight mb-1\">\n-                        {line}\n-                      </p>\n-                    ))\n-                  : <span className=\"text-[10px] md:text-[11px]\">No details available.</span>}\n-              </div>\n-            </div>\n-\n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n               disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n"
                },
                {
                    "date": 1748658542630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,9 +281,15 @@\n             </div>\n \n             <div className=\"mb-4 text-[11px] md:text-xs\">\n               <div className=\"font-medium mb-1 text-black text-[11px] md:text-xs\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">{product.details || \"No details available.\"}</p>\n+              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">\n+                Form: Ống rộng - Quần suông\n+                Chất liệu: Jeans\n+                Thêu Logo Sau Túi\n+                Sản xuất tại Việt Nam\n+                Thiết kế bởi AISH\n+              </p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748658556545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,15 +281,9 @@\n             </div>\n \n             <div className=\"mb-4 text-[11px] md:text-xs\">\n               <div className=\"font-medium mb-1 text-black text-[11px] md:text-xs\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">\n-                Form: Ống rộng - Quần suông\n-                Chất liệu: Jeans\n-                Thêu Logo Sau Túi\n-                Sản xuất tại Việt Nam\n-                Thiết kế bởi AISH\n-              </p>\n+              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748658577936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,14 +276,20 @@\n               </div>\n             </div>\n \n             <div className=\"mb-4 text-[13px] md:text-base\">\n-              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n+              <p className=\"text-black\">\n+                Form: Ống rộng - Quần suông\n+                Chất liệu: Jeans\n+                Thêu Logo Sau Túi\n+                Sản xuất tại Việt Nam\n+                Thiết kế bởi AISH\n+              </p>\n             </div>\n \n-            <div className=\"mb-4 text-[11px] md:text-xs\">\n-              <div className=\"font-medium mb-1 text-black text-[11px] md:text-xs\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">{product.details || \"No details available.\"}</p>\n+            <div className=\"mb-4 text-[10px] md:text-[11px]\">\n+              <div className=\"font-medium mb-1 text-black text-[10px] md:text-[11px]\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line text-[10px] md:text-[11px]\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748658590681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,20 +276,14 @@\n               </div>\n             </div>\n \n             <div className=\"mb-4 text-[13px] md:text-base\">\n-              <p className=\"text-black\">\n-                Form: Ống rộng - Quần suông\n-                Chất liệu: Jeans\n-                Thêu Logo Sau Túi\n-                Sản xuất tại Việt Nam\n-                Thiết kế bởi AISH\n-              </p>\n+              <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n-            <div className=\"mb-4 text-[10px] md:text-[11px]\">\n-              <div className=\"font-medium mb-1 text-black text-[10px] md:text-[11px]\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[10px] md:text-[11px]\">{product.details || \"No details available.\"}</p>\n+            <div className=\"mb-4 text-[11px] md:text-xs\">\n+              <div className=\"font-medium mb-1 text-black text-[11px] md:text-xs\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748658623630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,15 +275,15 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[13px] md:text-base\">\n+            <div className=\"mb-4 text-[10px] md:text-[11px]\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n-            <div className=\"mb-4 text-[11px] md:text-xs\">\n-              <div className=\"font-medium mb-1 text-black text-[11px] md:text-xs\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[11px] md:text-xs\">{product.details || \"No details available.\"}</p>\n+            <div className=\"mb-4 text-[10px] md:text-[11px]\">\n+              <div className=\"font-medium mb-1 text-black text-[10px] md:text-[11px]\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line text-[10px] md:text-[11px]\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748658831868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,15 +275,15 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[10px] md:text-[11px]\">\n+            <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n-            <div className=\"mb-4 text-[10px] md:text-[11px]\">\n-              <div className=\"font-medium mb-1 text-black text-[10px] md:text-[11px]\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[10px] md:text-[11px]\">{product.details || \"No details available.\"}</p>\n+            <div className=\"mb-4 text-[8px] md:text-[10px]\">\n+              <div className=\"font-medium mb-1 text-black text-[8px] md:text-[10px]\">DETAILS:</div>\n+              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748659092818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,15 +275,20 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[8px] md:text-[10px]\">\n+            <div className=\"mb-4 text-[8px] md:text-[10px]\"></div>\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <div className=\"font-medium mb-1 text-black text-[8px] md:text-[10px]\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">{product.details || \"No details available.\"}</p>\n+              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">\n+                {product.details || \"No details available.\"}\n+                <span className=\"text-[10px] md:text-[12px] block mt-2\">\n+                  Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n+                </span>\n+              </p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748659098783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,13 +281,11 @@\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <div className=\"font-medium mb-1 text-black text-[8px] md:text-[10px]\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">\n-                {product.details || \"No details available.\"}\n-                <span className=\"text-[10px] md:text-[12px] block mt-2\">\n-                  Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n-                </span>\n+              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">{product.details || \"No details available.\"}</p>\n+              <p className=\"text-black text-[10px] md:text-[12px] mt-2\">\n+                Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n               </p>\n             </div>\n \n             <button\n"
                },
                {
                    "date": 1748659119415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,18 +275,15 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[8px] md:text-[10px]\"></div>\n+            <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <div className=\"font-medium mb-1 text-black text-[8px] md:text-[10px]\">DETAILS:</div>\n               <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">{product.details || \"No details available.\"}</p>\n-              <p className=\"text-black text-[10px] md:text-[12px] mt-2\">\n-                Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n-              </p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748659148983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,15 +275,20 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[8px] md:text-[10px]\">\n+            <div className=\"mb-4 text-[8px] md:text-[10px]\"></div>\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <div className=\"font-medium mb-1 text-black text-[8px] md:text-[10px]\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">{product.details || \"No details available.\"}</p>\n+              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">\n+                {product.details || \"No details available.\"}\n+                <span className=\"text-[10px] md:text-[12px]\">\n+                  Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n+                </span>\n+              </p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748659154915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,11 +281,11 @@\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <div className=\"font-medium mb-1 text-black text-[8px] md:text-[10px]\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">\n-                {product.details || \"No details available.\"}\n-                <span className=\"text-[10px] md:text-[12px]\">\n+              <p className=\"text-black whitespace-pre-line\">\n+                <span className=\"text-[8px] md:text-[10px]\">{product.details || \"No details available.\"}</span>\n+                <span className=\"text-[10px] md:text-[12px] block mt-1\">\n                   Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n                 </span>\n               </p>\n             </div>\n"
                },
                {
                    "date": 1748659231335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,20 +275,15 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[8px] md:text-[10px]\"></div>\n+            <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n               <div className=\"font-medium mb-1 text-black text-[8px] md:text-[10px]\">DETAILS:</div>\n-              <p className=\"text-black whitespace-pre-line\">\n-                <span className=\"text-[8px] md:text-[10px]\">{product.details || \"No details available.\"}</span>\n-                <span className=\"text-[10px] md:text-[12px] block mt-1\">\n-                  Vui lòng giặt riêng các sản phẩm có màu với quần áo sáng màu trong 4–5 lần giặt đầu tiên để tránh bị phai màu.\n-                </span>\n-              </p>\n+              <p className=\"text-black whitespace-pre-line text-[8px] md:text-[10px]\">{product.details || \"No details available.\"}</p>\n             </div>\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n"
                },
                {
                    "date": 1748659261655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,9 +275,9 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[8px] md:text-[10px]\">\n+            <div className=\"mb-4 text-[10px] md:text-[15px]\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n"
                },
                {
                    "date": 1748659317017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,9 +275,9 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[10px] md:text-[15px]\">\n+            <div className=\"mb-4 text-[8px] md:text-[15px]\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n"
                },
                {
                    "date": 1748659323307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,9 +275,9 @@\n                 </button>\n               </div>\n             </div>\n \n-            <div className=\"mb-4 text-[8px] md:text-[15px]\">\n+            <div className=\"mb-4 text-[8px] md:text-[12px]\">\n               <p className=\"text-black\">{product.description || \"No description available.\"}</p>\n             </div>\n \n             <div className=\"mb-4 text-[8px] md:text-[10px]\">\n"
                },
                {
                    "date": 1748845935092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,48 +82,66 @@\n     );\n   }\n \n   const handleAddToCart = () => {\n-    if (!selectedSize) {\n+    if (isClothing && !selectedSize) {\n       setShowSelectSizeModal(true);\n       return;\n     }\n \n-    const sizeQuantity = product[`quantity${selectedSize}`];\n-    if (sizeQuantity === 0) {\n-      toast.error(`Size ${selectedSize} đã hết hàng`);\n-      return;\n-    }\n+    if (isClothing) {\n+      const sizeQuantity = product[`quantity${selectedSize}`];\n+      if (sizeQuantity === 0) {\n+        toast.error(`Size ${selectedSize} đã hết hàng`);\n+        return;\n+      }\n \n-    if (quantity > sizeQuantity) {\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\n-      return;\n+      if (quantity > sizeQuantity) {\n+        toast.error(`Chỉ còn ${sizeQuantity} sản phẩm cho size ${selectedSize}`);\n+        return;\n+      }\n+    } else if (product.category === \"CAP\") {\n+      if (product.quantityHat === 0) {\n+        toast.error(\"Sản phẩm đã hết hàng\");\n+        return;\n+      }\n+      if (quantity > product.quantityHat) {\n+        toast.error(`Chỉ còn ${product.quantityHat} sản phẩm`);\n+        return;\n+      }\n     }\n \n     addToCart({\n       id: product._id,\n       name: product.name,\n       price: product.price,\n       image: product.images[0],\n-      size: selectedSize,\n+      size: isClothing ? selectedSize : \"ONE SIZE\",\n       quantity: quantity,\n       color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n-      currentStock: sizeQuantity\n+      currentStock: isClothing ? product[`quantity${selectedSize}`] : product.quantityHat\n     });\n \n     toast.success(\"Đã thêm vào giỏ hàng\");\n   };\n \n   const handleQuantityChange = (value: number) => {\n-    if (!product || !selectedSize) {\n+    if (isClothing && !selectedSize) {\n       setShowSelectSizeModal(true);\n       return;\n     }\n     \n-    const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n-    if (value > sizeQuantity) {\n-      toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n-      return;\n+    if (isClothing) {\n+      const sizeQuantity = product[`quantity${selectedSize}` as keyof Product] as number;\n+      if (value > sizeQuantity) {\n+        toast.error(`Chỉ còn ${sizeQuantity} sản phẩm size ${selectedSize}`);\n+        return;\n+      }\n+    } else if (product.category === \"CAP\") {\n+      if (value > product.quantityHat) {\n+        toast.error(`Chỉ còn ${product.quantityHat} sản phẩm`);\n+        return;\n+      }\n     }\n     \n     setQuantity(value);\n   };\n@@ -287,13 +305,17 @@\n \n             <button\n               className=\"w-full bg-black text-white py-3 font-medium uppercase hover:bg-gray-900 transition mb-2\"\n               onClick={handleAddToCart}\n-              disabled={!!selectedSize && product[`quantity${selectedSize}`] === 0}\n+              disabled={isClothing ? (!selectedSize || product[`quantity${selectedSize}`] === 0) : product.quantityHat === 0}\n             >\n-              {selectedSize && product[`quantity${selectedSize}`] === 0\n-                ? \"OUT OF STOCK\"\n-                : \"ADD TO CART\"}\n+              {isClothing \n+                ? (selectedSize && product[`quantity${selectedSize}`] === 0\n+                  ? \"OUT OF STOCK\"\n+                  : \"ADD TO CART\")\n+                : (product.quantityHat === 0\n+                  ? \"OUT OF STOCK\"\n+                  : \"ADD TO CART\")}\n             </button>\n \n             {isClothing && (\n               <button\n"
                },
                {
                    "date": 1749534351217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,10 @@\n   const [showSizeOptions, setShowSizeOptions] = useState(false);\n   const [showSizeGuide, setShowSizeGuide] = useState(false);\n   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\n+  const [productDiscount, setProductDiscount] = useState(null);\n+  const [discountMessage, setDiscountMessage] = useState(\"\");\n \n   useEffect(() => {\n     if (!slug) return;\n     if (typeof window === \"undefined\") return;\n@@ -65,8 +67,24 @@\n     };\n     fetchProduct();\n   }, [slug]);\n \n+  useEffect(() => {\n+    if (product?.productDiscount?.isActive) {\n+      const now = new Date();\n+      const expiryDate = new Date(product.productDiscount.expiryDate);\n+      \n+      if (now <= expiryDate) {\n+        setProductDiscount(product.productDiscount);\n+        setDiscountMessage(\n+          product.productDiscount.type === 'fixed'\n+            ? `Giảm ${product.productDiscount.value.toLocaleString('vi-VN')} VND`\n+            : `Giảm ${product.productDiscount.value}%${product.productDiscount.maxAmount ? ` (tối đa ${product.productDiscount.maxAmount.toLocaleString('vi-VN')} VND)` : ''}`\n+        );\n+      }\n+    }\n+  }, [product]);\n+\n   if (isLoading) {\n     return (\n       <div className=\"min-h-screen flex items-center justify-center\">\n         <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\n@@ -158,8 +176,24 @@\n \n   const isClothing = product.category && product.category !== \"CAP\";\n   const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\n \n+  const calculateDiscountedPrice = () => {\n+    if (!productDiscount) return product.price;\n+\n+    let discountAmount = 0;\n+    if (productDiscount.type === 'fixed') {\n+      discountAmount = productDiscount.value;\n+    } else {\n+      discountAmount = (product.price * productDiscount.value) / 100;\n+      if (productDiscount.maxAmount) {\n+        discountAmount = Math.min(discountAmount, productDiscount.maxAmount);\n+      }\n+    }\n+\n+    return Math.max(0, product.price - discountAmount);\n+  };\n+\n   return (\n     <div className=\"min-h-screen bg-white flex flex-col\">\n       {/* Breadcrumb */}\n       <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\n@@ -228,9 +262,25 @@\n         <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n           <div className=\"w-full max-w-xl\">\n             <h1 className=\"text-lg md:text-2xl font-bold text-center md:text-left mb-1 md:mb-2 uppercase text-black\">{product.name}</h1>\n             <div className=\"text-base md:text-xl font-semibold mb-2 md:mb-4 text-black\">\n-              {(product.price).toLocaleString('vi-VN')} VND\n+              <div className=\"mt-2 flex items-center space-x-4\">\n+                <p className=\"text-2xl font-bold text-black\">\n+                  {calculateDiscountedPrice().toLocaleString('vi-VN')} VND\n+                </p>\n+                {productDiscount && (\n+                  <p className=\"text-lg text-red-600 line-through\">\n+                    {product.price.toLocaleString('vi-VN')} VND\n+                  </p>\n+                )}\n+              </div>\n+              {productDiscount && (\n+                <div className=\"mt-2\">\n+                  <span className=\"inline-block bg-red-100 text-red-800 px-2 py-1 rounded text-sm\">\n+                    {discountMessage}\n+                  </span>\n+                </div>\n+              )}\n             </div>\n \n             {isClothing ? (\n               <div className=\"mb-6\">\n"
                },
                {
                    "date": 1749534366211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,8 @@\n   const [showSizeOptions, setShowSizeOptions] = useState(false);\n   const [showSizeGuide, setShowSizeGuide] = useState(false);\n   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n   const [showSelectSizeModal, setShowSelectSizeModal] = useState(false);\n-  const [productDiscount, setProductDiscount] = useState(null);\n-  const [discountMessage, setDiscountMessage] = useState(\"\");\n \n   useEffect(() => {\n     if (!slug) return;\n     if (typeof window === \"undefined\") return;\n@@ -67,24 +65,8 @@\n     };\n     fetchProduct();\n   }, [slug]);\n \n-  useEffect(() => {\n-    if (product?.productDiscount?.isActive) {\n-      const now = new Date();\n-      const expiryDate = new Date(product.productDiscount.expiryDate);\n-      \n-      if (now <= expiryDate) {\n-        setProductDiscount(product.productDiscount);\n-        setDiscountMessage(\n-          product.productDiscount.type === 'fixed'\n-            ? `Giảm ${product.productDiscount.value.toLocaleString('vi-VN')} VND`\n-            : `Giảm ${product.productDiscount.value}%${product.productDiscount.maxAmount ? ` (tối đa ${product.productDiscount.maxAmount.toLocaleString('vi-VN')} VND)` : ''}`\n-        );\n-      }\n-    }\n-  }, [product]);\n-\n   if (isLoading) {\n     return (\n       <div className=\"min-h-screen flex items-center justify-center\">\n         <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black\"></div>\n@@ -176,24 +158,8 @@\n \n   const isClothing = product.category && product.category !== \"CAP\";\n   const availableSizes = product.sizes || [\"M\", \"L\", \"XL\"];\n \n-  const calculateDiscountedPrice = () => {\n-    if (!productDiscount) return product.price;\n-\n-    let discountAmount = 0;\n-    if (productDiscount.type === 'fixed') {\n-      discountAmount = productDiscount.value;\n-    } else {\n-      discountAmount = (product.price * productDiscount.value) / 100;\n-      if (productDiscount.maxAmount) {\n-        discountAmount = Math.min(discountAmount, productDiscount.maxAmount);\n-      }\n-    }\n-\n-    return Math.max(0, product.price - discountAmount);\n-  };\n-\n   return (\n     <div className=\"min-h-screen bg-white flex flex-col\">\n       {/* Breadcrumb */}\n       <div className=\"px-4 py-4 text-xs text-gray-600 mt-16\">\n@@ -262,25 +228,9 @@\n         <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n           <div className=\"w-full max-w-xl\">\n             <h1 className=\"text-lg md:text-2xl font-bold text-center md:text-left mb-1 md:mb-2 uppercase text-black\">{product.name}</h1>\n             <div className=\"text-base md:text-xl font-semibold mb-2 md:mb-4 text-black\">\n-              <div className=\"mt-2 flex items-center space-x-4\">\n-                <p className=\"text-2xl font-bold text-black\">\n-                  {calculateDiscountedPrice().toLocaleString('vi-VN')} VND\n-                </p>\n-                {productDiscount && (\n-                  <p className=\"text-lg text-red-600 line-through\">\n-                    {product.price.toLocaleString('vi-VN')} VND\n-                  </p>\n-                )}\n-              </div>\n-              {productDiscount && (\n-                <div className=\"mt-2\">\n-                  <span className=\"inline-block bg-red-100 text-red-800 px-2 py-1 rounded text-sm\">\n-                    {discountMessage}\n-                  </span>\n-                </div>\n-              )}\n+              {(product.price).toLocaleString('vi-VN')} VND\n             </div>\n \n             {isClothing ? (\n               <div className=\"mb-6\">\n"
                },
                {
                    "date": 1749609015129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,20 @@\n         <div className=\"flex-1 flex flex-col items-center md:items-start justify-start mt-8 md:mt-0\">\n           <div className=\"w-full max-w-xl\">\n             <h1 className=\"text-lg md:text-2xl font-bold text-center md:text-left mb-1 md:mb-2 uppercase text-black\">{product.name}</h1>\n             <div className=\"text-base md:text-xl font-semibold mb-2 md:mb-4 text-black\">\n-              {(product.price).toLocaleString('vi-VN')} VND\n+              {product.discountPercent && product.discountPercent > 0 ? (\n+                <>\n+                  <span className=\"line-through text-gray-500 mr-2\">\n+                    {(product.price).toLocaleString('vi-VN')} VND\n+                  </span>\n+                  <span className=\"text-red-600\">\n+                    {(product.price * (1 - product.discountPercent / 100)).toLocaleString('vi-VN')} VND\n+                  </span>\n+                </>\n+              ) : (\n+                (product.price).toLocaleString('vi-VN') + \" VND\"\n+              )}\n             </div>\n \n             {isClothing ? (\n               <div className=\"mb-6\">\n"
                },
                {
                    "date": 1749609273482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,11 @@\n \n     addToCart({\n       id: product._id,\n       name: product.name,\n-      price: product.price,\n+      price: product.discountPercent && product.discountPercent > 0\n+        ? product.price * (1 - product.discountPercent / 100)\n+        : product.price,\n       image: product.images[0],\n       size: isClothing ? selectedSize : \"ONE SIZE\",\n       quantity: quantity,\n       color: product.colors && product.colors.length > 0 ? product.colors[0] : \"Không xác định\",\n"
                }
            ],
            "date": 1747198765875,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, usePathname } from \"next/navigation\";\r\nimport { motion } from \"framer-motion\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useCart } from \"@/context/CartContext\";\r\nimport { Product } from \"@/types/product\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport HelpPanel from \"@/components/HelpPanel\";\r\n\r\nexport default function ProductDetailPage() {\r\n  const { slug } = useParams();\r\n  const pathname = usePathname();\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n  const [selectedSize, setSelectedSize] = useState<string | undefined>(undefined);\r\n  const [quantity, setQuantity] = useState<number>(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { addToCart } = useCart();\r\n  const [showFullImage, setShowFullImage] = useState(false);\r\n  const [showHelpPanel, setShowHelpPanel] = useState(false);\r\n  const [showSizeOptions, setShowSizeOptions] = useState(false);\r\n  const [showSizeGuide, setShowSizeGuide] = useState(false);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      try {\r\n        const response = await fetch(`/api/products/by-slug/${slug}`);\r\n        const data = await response.json();\r\n        if (data.ok) {\r\n          setProduct(data.product);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching product:\", error);\r\n        toast.error(\"Failed to load product\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProduct();\r\n  }, [slug]);\r\n\r\n  // ... rest of the code remains the same ...\r\n} "
        }
    ]
}
{
    "sourceFile": "src/app/api/admin/update-promo-structure/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1748619224262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748619238517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,62 +1,1 @@\n-import { NextRequest, NextResponse } from 'next/server';\r\n-import { getServerSession } from 'next-auth';\r\n-import { authOptions } from '@/lib/auth';\r\n-import { connectToDatabase } from '@/lib/mongodb';\r\n-import { ObjectId } from 'mongodb';\r\n-\r\n-export const dynamic = 'force-dynamic';\r\n-\r\n-export async function POST(request: NextRequest) {\r\n-  try {\r\n-    const session = await getServerSession(authOptions);\r\n-    if (!session?.user?.email) {\r\n-      return NextResponse.json({ ok: false, message: 'Unauthorized' }, { status: 401 });\r\n-    }\r\n-\r\n-    const { db } = await connectToDatabase();\r\n-    console.log('Connected to database');\r\n-\r\n-    // Lấy tất cả các mã giảm giá hiện tại\r\n-    const promoCodes = await db.collection('notifications')\r\n-      .find({ type: 'promo' })\r\n-      .toArray();\r\n-\r\n-    console.log(`Found ${promoCodes.length} promo codes to update`);\r\n-\r\n-    const updatedCodes = [];\r\n-    for (const promo of promoCodes) {\r\n-      // Chuyển đổi cấu trúc cũ sang cấu trúc mới\r\n-      const updateData = {\r\n-        promoType: 'fixed', // Mặc định là fixed cho các mã cũ\r\n-        value: promo.amount || 0, // Chuyển amount cũ thành value\r\n-        maxAmount: null, // Thêm trường mới\r\n-        isLoginRequired: false, // Thêm trường mới\r\n-        perUserLimit: 0, // Thêm trường mới\r\n-        usedByUsers: [], // Thêm trường mới\r\n-        usedCount: 0, // Thêm trường mới\r\n-        expiryDate: null, // Thêm trường mới\r\n-        updatedAt: new Date().toISOString()\r\n-      };\r\n-\r\n-      // Cập nhật document\r\n-      await db.collection('notifications').updateOne(\r\n-        { _id: new ObjectId(promo._id) },\r\n-        { $set: updateData }\r\n-      );\r\n-\r\n-      updatedCodes.push(promo.code);\r\n-    }\r\n-\r\n-    return NextResponse.json({\r\n-      ok: true,\r\n-      message: `Successfully updated ${updatedCodes.length} promo codes`,\r\n-      updatedCodes\r\n-    });\r\n-  } catch (error) {\r\n-    console.error('Error updating promo structure:', error);\r\n-    return NextResponse.json(\r\n-      { ok: false, message: 'Failed to update promo structure' },\r\n-      { status: 500 }\r\n-    );\r\n-  }\r\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1748619224262,
            "name": "Commit-0",
            "content": "import { NextRequest, NextResponse } from 'next/server';\r\nimport { getServerSession } from 'next-auth';\r\nimport { authOptions } from '@/lib/auth';\r\nimport { connectToDatabase } from '@/lib/mongodb';\r\nimport { ObjectId } from 'mongodb';\r\n\r\nexport const dynamic = 'force-dynamic';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session?.user?.email) {\r\n      return NextResponse.json({ ok: false, message: 'Unauthorized' }, { status: 401 });\r\n    }\r\n\r\n    const { db } = await connectToDatabase();\r\n    console.log('Connected to database');\r\n\r\n    // Lấy tất cả các mã giảm giá hiện tại\r\n    const promoCodes = await db.collection('notifications')\r\n      .find({ type: 'promo' })\r\n      .toArray();\r\n\r\n    console.log(`Found ${promoCodes.length} promo codes to update`);\r\n\r\n    const updatedCodes = [];\r\n    for (const promo of promoCodes) {\r\n      // Chuyển đổi cấu trúc cũ sang cấu trúc mới\r\n      const updateData = {\r\n        promoType: 'fixed', // Mặc định là fixed cho các mã cũ\r\n        value: promo.amount || 0, // Chuyển amount cũ thành value\r\n        maxAmount: null, // Thêm trường mới\r\n        isLoginRequired: false, // Thêm trường mới\r\n        perUserLimit: 0, // Thêm trường mới\r\n        usedByUsers: [], // Thêm trường mới\r\n        usedCount: 0, // Thêm trường mới\r\n        expiryDate: null, // Thêm trường mới\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n\r\n      // Cập nhật document\r\n      await db.collection('notifications').updateOne(\r\n        { _id: new ObjectId(promo._id) },\r\n        { $set: updateData }\r\n      );\r\n\r\n      updatedCodes.push(promo.code);\r\n    }\r\n\r\n    return NextResponse.json({\r\n      ok: true,\r\n      message: `Successfully updated ${updatedCodes.length} promo codes`,\r\n      updatedCodes\r\n    });\r\n  } catch (error) {\r\n    console.error('Error updating promo structure:', error);\r\n    return NextResponse.json(\r\n      { ok: false, message: 'Failed to update promo structure' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "
        }
    ]
}
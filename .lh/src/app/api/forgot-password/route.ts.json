{
    "sourceFile": "src/app/api/forgot-password/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1747216663281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747216959703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     const transporter = nodemailer.createTransport({\r\n       service: \"gmail\",\r\n       auth: {\r\n         user: \"YOUR_GMAIL@gmail.com\", // Thay bằng email Gmail của bạn\r\n-        pass: \"YOUR_APP_PASSWORD\",    // Thay bằng app password 16 ký tự\r\n+        pass: \"YOUR_APP_PASSWORD\",    // Thay bằng app password 16 ký tự bạn vừa lấy\r\n       },\r\n     });\r\n \r\n     await transporter.sendMail({\r\n@@ -57,5 +57,5 @@\n   } catch (error) {\r\n     console.error(error);\r\n     return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n-} \n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747217302548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n     // Gửi email\r\n     const transporter = nodemailer.createTransport({\r\n       service: \"gmail\",\r\n       auth: {\r\n-        user: \"YOUR_GMAIL@gmail.com\", // Thay bằng email Gmail của bạn\r\n-        pass: \"YOUR_APP_PASSWORD\",    // Thay bằng app password 16 ký tự bạn vừa lấy\r\n+        user: \"Dlicht03@gmai.com\"\r\n+        pass: \"dgyg wgrr fiap lnuk\"\r\n       },\r\n     });\r\n \r\n     await transporter.sendMail({\r\n"
                },
                {
                    "date": 1747217343792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     // Gửi email\r\n     const transporter = nodemailer.createTransport({\r\n       service: \"gmail\",\r\n       auth: {\r\n-        user: \"Dlicht03@gmai.com\"\r\n+        user: \"Dlicht03@gmail.com\",\r\n         pass: \"dgyg wgrr fiap lnuk\"\r\n       },\r\n     });\r\n \r\n"
                },
                {
                    "date": 1747217358184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n       },\r\n     });\r\n \r\n     await transporter.sendMail({\r\n-      from: '\"AISH Support\" <YOUR_GMAIL@gmail.com>',\r\n+      from: '\"AISH Support\" <Dlicht03@gmail.com\r\n       to: email,\r\n       subject: \"Mật khẩu mới cho tài khoản AISH\",\r\n       text: `Mật khẩu mới của bạn là: ${newPassword}\\nVui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.`,\r\n       html: `<p>Mật khẩu mới của bạn là: <b>${newPassword}</b></p><p>Vui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.</p>`,\r\n"
                },
                {
                    "date": 1747217365285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n       },\r\n     });\r\n \r\n     await transporter.sendMail({\r\n-      from: '\"AISH Support\" <Dlicht03@gmail.com\r\n+      from: '\"AISH Support\" <YOUR_GMAIL@gmail.com>',\r\n       to: email,\r\n       subject: \"Mật khẩu mới cho tài khoản AISH\",\r\n       text: `Mật khẩu mới của bạn là: ${newPassword}\\nVui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.`,\r\n       html: `<p>Mật khẩu mới của bạn là: <b>${newPassword}</b></p><p>Vui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.</p>`,\r\n"
                },
                {
                    "date": 1747217420515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n       },\r\n     });\r\n \r\n     await transporter.sendMail({\r\n-      from: '\"AISH Support\" <YOUR_GMAIL@gmail.com>',\r\n+      from: '\"AISH Support\" <Dlicht03@gmail.com> ',\r\n       to: email,\r\n       subject: \"Mật khẩu mới cho tài khoản AISH\",\r\n       text: `Mật khẩu mới của bạn là: ${newPassword}\\nVui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.`,\r\n       html: `<p>Mật khẩu mới của bạn là: <b>${newPassword}</b></p><p>Vui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.</p>`,\r\n"
                },
                {
                    "date": 1747238532094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,14 +14,18 @@\n \r\n export async function POST(request: Request) {\r\n   try {\r\n     const { email } = await request.json();\r\n+    console.log(\"Received email:\", email); // Debug log\r\n+\r\n     if (!email) {\r\n       return NextResponse.json({ error: \"Missing email\" }, { status: 400 });\r\n     }\r\n \r\n     const { db } = await connectToDatabase();\r\n     const user = await db.collection(\"users\").findOne({ email, provider: \"credentials\" });\r\n+    console.log(\"Found user:\", user ? \"Yes\" : \"No\"); // Debug log\r\n+\r\n     if (!user) {\r\n       // Trả về thành công để tránh lộ thông tin user tồn tại hay không\r\n       return NextResponse.json({ message: \"Nếu email tồn tại, mật khẩu mới đã được gửi.\" });\r\n     }\r\n@@ -34,28 +38,47 @@\n     await db.collection(\"users\").updateOne(\r\n       { _id: user._id },\r\n       { $set: { password: hashedPassword } }\r\n     );\r\n+    console.log(\"Password updated in database\"); // Debug log\r\n \r\n     // Gửi email\r\n     const transporter = nodemailer.createTransport({\r\n-      service: \"gmail\",\r\n+      host: \"smtp.gmail.com\",\r\n+      port: 587,\r\n+      secure: false, // true for 465, false for other ports\r\n       auth: {\r\n         user: \"Dlicht03@gmail.com\",\r\n         pass: \"dgyg wgrr fiap lnuk\"\r\n       },\r\n     });\r\n \r\n-    await transporter.sendMail({\r\n-      from: '\"AISH Support\" <Dlicht03@gmail.com> ',\r\n-      to: email,\r\n-      subject: \"Mật khẩu mới cho tài khoản AISH\",\r\n-      text: `Mật khẩu mới của bạn là: ${newPassword}\\nVui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.`,\r\n-      html: `<p>Mật khẩu mới của bạn là: <b>${newPassword}</b></p><p>Vui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.</p>`,\r\n-    });\r\n+    // Verify transporter\r\n+    try {\r\n+      await transporter.verify();\r\n+      console.log(\"SMTP connection verified\"); // Debug log\r\n+    } catch (error) {\r\n+      console.error(\"SMTP verification failed:\", error);\r\n+      throw error;\r\n+    }\r\n \r\n+    // Send email\r\n+    try {\r\n+      const info = await transporter.sendMail({\r\n+        from: '\"AISH Support\" <Dlicht03@gmail.com>',\r\n+        to: email,\r\n+        subject: \"Mật khẩu mới cho tài khoản AISH\",\r\n+        text: `Mật khẩu mới của bạn là: ${newPassword}\\nVui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.`,\r\n+        html: `<p>Mật khẩu mới của bạn là: <b>${newPassword}</b></p><p>Vui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.</p>`,\r\n+      });\r\n+      console.log(\"Email sent:\", info.messageId); // Debug log\r\n+    } catch (error) {\r\n+      console.error(\"Failed to send email:\", error);\r\n+      throw error;\r\n+    }\r\n+\r\n     return NextResponse.json({ message: \"Nếu email tồn tại, mật khẩu mới đã được gửi.\" });\r\n   } catch (error) {\r\n-    console.error(error);\r\n+    console.error(\"Error in forgot-password API:\", error);\r\n     return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747239002767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,64 +14,72 @@\n \r\n export async function POST(request: Request) {\r\n   try {\r\n     const { email } = await request.json();\r\n-    console.log(\"Received email:\", email); // Debug log\r\n+    console.log(\"Received email:\", email);\r\n \r\n     if (!email) {\r\n       return NextResponse.json({ error: \"Missing email\" }, { status: 400 });\r\n     }\r\n \r\n     const { db } = await connectToDatabase();\r\n     const user = await db.collection(\"users\").findOne({ email, provider: \"credentials\" });\r\n-    console.log(\"Found user:\", user ? \"Yes\" : \"No\"); // Debug log\r\n+    console.log(\"Found user:\", user ? \"Yes\" : \"No\");\r\n \r\n     if (!user) {\r\n-      // Trả về thành công để tránh lộ thông tin user tồn tại hay không\r\n       return NextResponse.json({ message: \"Nếu email tồn tại, mật khẩu mới đã được gửi.\" });\r\n     }\r\n \r\n     // Tạo mật khẩu mới\r\n     const newPassword = generateRandomPassword(10);\r\n     const hashedPassword = await bcrypt.hash(newPassword, 10);\r\n+    console.log(\"Generated new password\");\r\n \r\n     // Cập nhật mật khẩu mới vào database\r\n     await db.collection(\"users\").updateOne(\r\n       { _id: user._id },\r\n       { $set: { password: hashedPassword } }\r\n     );\r\n-    console.log(\"Password updated in database\"); // Debug log\r\n+    console.log(\"Password updated in database\");\r\n \r\n-    // Gửi email\r\n+    // Cấu hình nodemailer với debug mode\r\n     const transporter = nodemailer.createTransport({\r\n       host: \"smtp.gmail.com\",\r\n       port: 587,\r\n-      secure: false, // true for 465, false for other ports\r\n+      secure: false,\r\n       auth: {\r\n         user: \"Dlicht03@gmail.com\",\r\n         pass: \"dgyg wgrr fiap lnuk\"\r\n       },\r\n+      debug: true, // Enable debug mode\r\n+      logger: true // Enable logger\r\n     });\r\n \r\n     // Verify transporter\r\n     try {\r\n+      console.log(\"Verifying SMTP connection...\");\r\n       await transporter.verify();\r\n-      console.log(\"SMTP connection verified\"); // Debug log\r\n+      console.log(\"SMTP connection verified successfully\");\r\n     } catch (error) {\r\n       console.error(\"SMTP verification failed:\", error);\r\n       throw error;\r\n     }\r\n \r\n     // Send email\r\n     try {\r\n-      const info = await transporter.sendMail({\r\n+      console.log(\"Preparing to send email...\");\r\n+      const mailOptions = {\r\n         from: '\"AISH Support\" <Dlicht03@gmail.com>',\r\n         to: email,\r\n         subject: \"Mật khẩu mới cho tài khoản AISH\",\r\n         text: `Mật khẩu mới của bạn là: ${newPassword}\\nVui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.`,\r\n         html: `<p>Mật khẩu mới của bạn là: <b>${newPassword}</b></p><p>Vui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.</p>`,\r\n-      });\r\n-      console.log(\"Email sent:\", info.messageId); // Debug log\r\n+      };\r\n+      console.log(\"Mail options:\", mailOptions);\r\n+\r\n+      const info = await transporter.sendMail(mailOptions);\r\n+      console.log(\"Email sent successfully:\", info.messageId);\r\n+      console.log(\"Preview URL:\", nodemailer.getTestMessageUrl(info));\r\n     } catch (error) {\r\n       console.error(\"Failed to send email:\", error);\r\n       throw error;\r\n     }\r\n"
                },
                {
                    "date": 1747240581179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,92 +1,75 @@\n import { NextResponse } from \"next/server\";\r\n import { connectToDatabase } from \"@/lib/mongodb\";\r\n-import nodemailer from \"nodemailer\";\r\n+import { sendMail } from \"@/lib/mail\";\r\n import bcrypt from \"bcryptjs\";\r\n \r\n-function generateRandomPassword(length = 10) {\r\n-  const chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n-  let pass = \"\";\r\n+function generateRandomPassword(length: number = 8) {\r\n+  const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*\";\r\n+  let password = \"\";\r\n   for (let i = 0; i < length; i++) {\r\n-    pass += chars.charAt(Math.floor(Math.random() * chars.length));\r\n+    const randomIndex = Math.floor(Math.random() * charset.length);\r\n+    password += charset[randomIndex];\r\n   }\r\n-  return pass;\r\n+  return password;\r\n }\r\n \r\n export async function POST(request: Request) {\r\n   try {\r\n     const { email } = await request.json();\r\n     console.log(\"Received email:\", email);\r\n \r\n     if (!email) {\r\n-      return NextResponse.json({ error: \"Missing email\" }, { status: 400 });\r\n+      return NextResponse.json(\r\n+        { error: \"Email is required\" },\r\n+        { status: 400 }\r\n+      );\r\n     }\r\n \r\n     const { db } = await connectToDatabase();\r\n-    const user = await db.collection(\"users\").findOne({ email, provider: \"credentials\" });\r\n+    const user = await db.collection(\"users\").findOne({ email });\r\n     console.log(\"Found user:\", user ? \"Yes\" : \"No\");\r\n \r\n     if (!user) {\r\n-      return NextResponse.json({ message: \"Nếu email tồn tại, mật khẩu mới đã được gửi.\" });\r\n+      return NextResponse.json(\r\n+        { error: \"No account found with this email\" },\r\n+        { status: 404 }\r\n+      );\r\n     }\r\n \r\n     // Tạo mật khẩu mới\r\n-    const newPassword = generateRandomPassword(10);\r\n+    const newPassword = generateRandomPassword();\r\n     const hashedPassword = await bcrypt.hash(newPassword, 10);\r\n     console.log(\"Generated new password\");\r\n \r\n-    // Cập nhật mật khẩu mới vào database\r\n+    // Cập nhật mật khẩu trong database\r\n     await db.collection(\"users\").updateOne(\r\n-      { _id: user._id },\r\n+      { email },\r\n       { $set: { password: hashedPassword } }\r\n     );\r\n     console.log(\"Password updated in database\");\r\n \r\n-    // Cấu hình nodemailer với debug mode\r\n-    const transporter = nodemailer.createTransport({\r\n-      host: \"smtp.gmail.com\",\r\n-      port: 587,\r\n-      secure: false,\r\n-      auth: {\r\n-        user: \"Dlicht03@gmail.com\",\r\n-        pass: \"dgyg wgrr fiap lnuk\"\r\n-      },\r\n-      debug: true, // Enable debug mode\r\n-      logger: true // Enable logger\r\n-    });\r\n+    // Gửi email với mật khẩu mới\r\n+    const emailSent = await sendMail(\r\n+      email,\r\n+      \"Your New Password\",\r\n+      `Your new password is: ${newPassword}\\n\\nPlease login with this password and change it immediately for security reasons.`\r\n+    );\r\n \r\n-    // Verify transporter\r\n-    try {\r\n-      console.log(\"Verifying SMTP connection...\");\r\n-      await transporter.verify();\r\n-      console.log(\"SMTP connection verified successfully\");\r\n-    } catch (error) {\r\n-      console.error(\"SMTP verification failed:\", error);\r\n-      throw error;\r\n+    if (!emailSent) {\r\n+      return NextResponse.json(\r\n+        { error: \"Failed to send email\" },\r\n+        { status: 500 }\r\n+      );\r\n     }\r\n \r\n-    // Send email\r\n-    try {\r\n-      console.log(\"Preparing to send email...\");\r\n-      const mailOptions = {\r\n-        from: '\"AISH Support\" <Dlicht03@gmail.com>',\r\n-        to: email,\r\n-        subject: \"Mật khẩu mới cho tài khoản AISH\",\r\n-        text: `Mật khẩu mới của bạn là: ${newPassword}\\nVui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.`,\r\n-        html: `<p>Mật khẩu mới của bạn là: <b>${newPassword}</b></p><p>Vui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.</p>`,\r\n-      };\r\n-      console.log(\"Mail options:\", mailOptions);\r\n-\r\n-      const info = await transporter.sendMail(mailOptions);\r\n-      console.log(\"Email sent successfully:\", info.messageId);\r\n-      console.log(\"Preview URL:\", nodemailer.getTestMessageUrl(info));\r\n-    } catch (error) {\r\n-      console.error(\"Failed to send email:\", error);\r\n-      throw error;\r\n-    }\r\n-\r\n-    return NextResponse.json({ message: \"Nếu email tồn tại, mật khẩu mới đã được gửi.\" });\r\n+    return NextResponse.json({\r\n+      message: \"New password has been sent to your email\"\r\n+    });\r\n   } catch (error) {\r\n-    console.error(\"Error in forgot-password API:\", error);\r\n-    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n+    console.error(\"Error in forgot password:\", error);\r\n+    return NextResponse.json(\r\n+      { error: \"Internal server error\" },\r\n+      { status: 500 }\r\n+    );\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747241212175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,60 +14,79 @@\n }\r\n \r\n export async function POST(request: Request) {\r\n   try {\r\n+    console.log(\"Starting forgot password process...\");\r\n+    \r\n     const { email } = await request.json();\r\n     console.log(\"Received email:\", email);\r\n \r\n     if (!email) {\r\n+      console.log(\"Email is missing\");\r\n       return NextResponse.json(\r\n         { error: \"Email is required\" },\r\n         { status: 400 }\r\n       );\r\n     }\r\n \r\n+    console.log(\"Connecting to database...\");\r\n     const { db } = await connectToDatabase();\r\n+    \r\n+    console.log(\"Finding user in database...\");\r\n     const user = await db.collection(\"users\").findOne({ email });\r\n-    console.log(\"Found user:\", user ? \"Yes\" : \"No\");\r\n+    console.log(\"User found:\", user ? \"Yes\" : \"No\");\r\n \r\n     if (!user) {\r\n+      console.log(\"No user found with email:\", email);\r\n       return NextResponse.json(\r\n         { error: \"No account found with this email\" },\r\n         { status: 404 }\r\n       );\r\n     }\r\n \r\n     // Tạo mật khẩu mới\r\n+    console.log(\"Generating new password...\");\r\n     const newPassword = generateRandomPassword();\r\n+    console.log(\"New password generated\");\r\n+    \r\n+    console.log(\"Hashing password...\");\r\n     const hashedPassword = await bcrypt.hash(newPassword, 10);\r\n-    console.log(\"Generated new password\");\r\n+    console.log(\"Password hashed successfully\");\r\n \r\n     // Cập nhật mật khẩu trong database\r\n+    console.log(\"Updating password in database...\");\r\n     await db.collection(\"users\").updateOne(\r\n       { email },\r\n       { $set: { password: hashedPassword } }\r\n     );\r\n     console.log(\"Password updated in database\");\r\n \r\n     // Gửi email với mật khẩu mới\r\n+    console.log(\"Preparing to send email...\");\r\n     const emailSent = await sendMail(\r\n       email,\r\n       \"Your New Password\",\r\n       `Your new password is: ${newPassword}\\n\\nPlease login with this password and change it immediately for security reasons.`\r\n     );\r\n \r\n     if (!emailSent) {\r\n+      console.log(\"Failed to send email\");\r\n       return NextResponse.json(\r\n         { error: \"Failed to send email\" },\r\n         { status: 500 }\r\n       );\r\n     }\r\n \r\n+    console.log(\"Email sent successfully\");\r\n     return NextResponse.json({\r\n       message: \"New password has been sent to your email\"\r\n     });\r\n   } catch (error) {\r\n-    console.error(\"Error in forgot password:\", error);\r\n+    console.error(\"Detailed error in forgot password:\", error);\r\n+    // Log stack trace if available\r\n+    if (error instanceof Error) {\r\n+      console.error(\"Error stack:\", error.stack);\r\n+    }\r\n     return NextResponse.json(\r\n       { error: \"Internal server error\" },\r\n       { status: 500 }\r\n     );\r\n"
                },
                {
                    "date": 1747242330268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,12 +61,39 @@\n     console.log(\"Password updated in database\");\r\n \r\n     // Gửi email với mật khẩu mới\r\n     console.log(\"Preparing to send email...\");\r\n+    const emailHtml = `\r\n+      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e2e8f0; border-radius: 8px;\">\r\n+        <div style=\"text-align: center; margin-bottom: 30px;\">\r\n+          <h1 style=\"color: #4f46e5; margin-bottom: 10px;\">Password Reset</h1>\r\n+          <p style=\"color: #64748b; font-size: 16px;\">Your new password has been generated</p>\r\n+        </div>\r\n+        \r\n+        <div style=\"background-color: #f8fafc; padding: 20px; border-radius: 6px; margin-bottom: 30px;\">\r\n+          <p style=\"color: #1e293b; margin-bottom: 15px;\">Here is your new password:</p>\r\n+          <div style=\"background-color: #e2e8f0; padding: 15px; border-radius: 4px; text-align: center;\">\r\n+            <code style=\"font-size: 18px; font-weight: bold; color: #4f46e5;\">${newPassword}</code>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <div style=\"background-color: #fef2f2; padding: 15px; border-radius: 6px; margin-bottom: 30px;\">\r\n+          <p style=\"color: #991b1b; margin: 0;\">\r\n+            <strong>Important:</strong> For security reasons, please change your password immediately after logging in.\r\n+          </p>\r\n+        </div>\r\n+\r\n+        <div style=\"text-align: center; color: #64748b; font-size: 14px;\">\r\n+          <p>If you didn't request this password reset, please contact our support team immediately.</p>\r\n+          <p style=\"margin-top: 20px;\">© 2024 Your Company. All rights reserved.</p>\r\n+        </div>\r\n+      </div>\r\n+    `;\r\n+\r\n     const emailSent = await sendMail(\r\n       email,\r\n-      \"Your New Password\",\r\n-      `Your new password is: ${newPassword}\\n\\nPlease login with this password and change it immediately for security reasons.`\r\n+      \"Your New Password - Password Reset\",\r\n+      `Your new password is: ${newPassword}\\n\\nPlease login with this password and change it immediately for security reasons.\\n\\nIf you didn't request this password reset, please contact our support team immediately.`\r\n     );\r\n \r\n     if (!emailSent) {\r\n       console.log(\"Failed to send email\");\r\n@@ -81,9 +108,8 @@\n       message: \"New password has been sent to your email\"\r\n     });\r\n   } catch (error) {\r\n     console.error(\"Detailed error in forgot password:\", error);\r\n-    // Log stack trace if available\r\n     if (error instanceof Error) {\r\n       console.error(\"Error stack:\", error.stack);\r\n     }\r\n     return NextResponse.json(\r\n"
                },
                {
                    "date": 1747242735017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,38 +62,82 @@\n \r\n     // Gửi email với mật khẩu mới\r\n     console.log(\"Preparing to send email...\");\r\n     const emailHtml = `\r\n-      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e2e8f0; border-radius: 8px;\">\r\n-        <div style=\"text-align: center; margin-bottom: 30px;\">\r\n-          <h1 style=\"color: #4f46e5; margin-bottom: 10px;\">Password Reset</h1>\r\n-          <p style=\"color: #64748b; font-size: 16px;\">Your new password has been generated</p>\r\n+      <div style=\"font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 600px; margin: 0 auto; padding: 40px 20px; background-color: #ffffff;\">\r\n+        <!-- Header -->\r\n+        <div style=\"text-align: center; margin-bottom: 40px;\">\r\n+          <h1 style=\"color: #000000; font-size: 24px; margin-bottom: 10px; font-weight: 600;\">🔐 Mật khẩu mới cho tài khoản AISH của bạn</h1>\r\n         </div>\r\n-        \r\n-        <div style=\"background-color: #f8fafc; padding: 20px; border-radius: 6px; margin-bottom: 30px;\">\r\n-          <p style=\"color: #1e293b; margin-bottom: 15px;\">Here is your new password:</p>\r\n-          <div style=\"background-color: #e2e8f0; padding: 15px; border-radius: 4px; text-align: center;\">\r\n-            <code style=\"font-size: 18px; font-weight: bold; color: #4f46e5;\">${newPassword}</code>\r\n+\r\n+        <!-- Content -->\r\n+        <div style=\"background-color: #ffffff; padding: 30px; border-radius: 8px; border: 1px solid #e5e7eb;\">\r\n+          <p style=\"color: #374151; font-size: 16px; line-height: 1.6; margin-bottom: 20px;\">\r\n+            Chào bạn,\r\n+          </p>\r\n+          \r\n+          <p style=\"color: #374151; font-size: 16px; line-height: 1.6; margin-bottom: 20px;\">\r\n+            Bạn vừa yêu cầu khôi phục mật khẩu cho tài khoản tại AISH – cửa hàng thời trang trực tuyến của bạn.\r\n+          </p>\r\n+\r\n+          <div style=\"background-color: #f9fafb; padding: 20px; border-radius: 6px; margin: 25px 0; border: 1px solid #e5e7eb;\">\r\n+            <p style=\"color: #374151; font-size: 16px; margin-bottom: 10px; font-weight: 500;\">\r\n+              👉 Mật khẩu mới:\r\n+            </p>\r\n+            <div style=\"background-color: #ffffff; padding: 15px; border-radius: 4px; text-align: center; border: 1px dashed #d1d5db;\">\r\n+              <code style=\"font-size: 20px; font-weight: 600; color: #000000; letter-spacing: 1px;\">${newPassword}</code>\r\n+            </div>\r\n           </div>\r\n-        </div>\r\n \r\n-        <div style=\"background-color: #fef2f2; padding: 15px; border-radius: 6px; margin-bottom: 30px;\">\r\n-          <p style=\"color: #991b1b; margin: 0;\">\r\n-            <strong>Important:</strong> For security reasons, please change your password immediately after logging in.\r\n+          <p style=\"color: #374151; font-size: 16px; line-height: 1.6; margin-bottom: 20px;\">\r\n+            Vui lòng dùng mật khẩu này để đăng nhập và đổi lại mật khẩu ngay để bảo vệ tài khoản của bạn.\r\n           </p>\r\n+\r\n+          <div style=\"background-color: #fef2f2; padding: 15px; border-radius: 6px; margin: 25px 0; border: 1px solid #fee2e2;\">\r\n+            <p style=\"color: #991b1b; font-size: 14px; margin: 0;\">\r\n+              Nếu bạn không yêu cầu đặt lại mật khẩu, vui lòng bỏ qua email này hoặc liên hệ với chúng tôi qua:\r\n+              <br>\r\n+              <a href=\"mailto:support@aish.vn\" style=\"color: #dc2626; text-decoration: none;\">📩 support@aish.vn</a>\r\n+            </p>\r\n+          </div>\r\n         </div>\r\n \r\n-        <div style=\"text-align: center; color: #64748b; font-size: 14px;\">\r\n-          <p>If you didn't request this password reset, please contact our support team immediately.</p>\r\n-          <p style=\"margin-top: 20px;\">© 2024 Your Company. All rights reserved.</p>\r\n+        <!-- Footer -->\r\n+        <div style=\"text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e5e7eb;\">\r\n+          <p style=\"color: #6b7280; font-size: 14px; margin-bottom: 10px;\">\r\n+            Trân trọng,\r\n+          </p>\r\n+          <p style=\"color: #000000; font-size: 16px; font-weight: 600; margin: 0;\">\r\n+            Đội ngũ AISH\r\n+          </p>\r\n+          <div style=\"margin-top: 20px;\">\r\n+            <a href=\"https://aish.vn\" style=\"color: #6b7280; text-decoration: none; font-size: 14px;\">\r\n+              aish.vn\r\n+            </a>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n     `;\r\n \r\n+    const emailText = `Chào bạn,\r\n+\r\n+Bạn vừa yêu cầu khôi phục mật khẩu cho tài khoản tại AISH – cửa hàng thời trang trực tuyến của bạn.\r\n+\r\n+👉 Mật khẩu mới: ${newPassword}\r\n+\r\n+Vui lòng dùng mật khẩu này để đăng nhập và đổi lại mật khẩu ngay để bảo vệ tài khoản của bạn.\r\n+\r\n+Nếu bạn không yêu cầu đặt lại mật khẩu, vui lòng bỏ qua email này hoặc liên hệ với chúng tôi qua:\r\n+📩 support@aish.vn\r\n+\r\n+Trân trọng,\r\n+Đội ngũ AISH`;\r\n+\r\n     const emailSent = await sendMail(\r\n       email,\r\n-      \"Your New Password - Password Reset\",\r\n-      `Your new password is: ${newPassword}\\n\\nPlease login with this password and change it immediately for security reasons.\\n\\nIf you didn't request this password reset, please contact our support team immediately.`\r\n+      \"🔐 Mật khẩu mới cho tài khoản AISH của bạn\",\r\n+      emailText,\r\n+      emailHtml\r\n     );\r\n \r\n     if (!emailSent) {\r\n       console.log(\"Failed to send email\");\r\n"
                },
                {
                    "date": 1747242903232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,10 @@\n           <div style=\"background-color: #fef2f2; padding: 15px; border-radius: 6px; margin: 25px 0; border: 1px solid #fee2e2;\">\r\n             <p style=\"color: #991b1b; font-size: 14px; margin: 0;\">\r\n               Nếu bạn không yêu cầu đặt lại mật khẩu, vui lòng bỏ qua email này hoặc liên hệ với chúng tôi qua:\r\n               <br>\r\n-              <a href=\"mailto:support@aish.vn\" style=\"color: #dc2626; text-decoration: none;\">📩 support@aish.vn</a>\r\n+              <a href=\"mailto:support@aish.vn\" style=\"color: #dc2626; text-decoration: none;\">📩 \r\n+aish.aish.vn@gmail.com</a>\r\n             </p>\r\n           </div>\r\n         </div>\r\n \r\n"
                },
                {
                    "date": 1747242920855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,10 +95,9 @@\n           <div style=\"background-color: #fef2f2; padding: 15px; border-radius: 6px; margin: 25px 0; border: 1px solid #fee2e2;\">\r\n             <p style=\"color: #991b1b; font-size: 14px; margin: 0;\">\r\n               Nếu bạn không yêu cầu đặt lại mật khẩu, vui lòng bỏ qua email này hoặc liên hệ với chúng tôi qua:\r\n               <br>\r\n-              <a href=\"mailto:support@aish.vn\" style=\"color: #dc2626; text-decoration: none;\">📩 \r\n-aish.aish.vn@gmail.com</a>\r\n+              <a href=\"mailto:support@aish.vn\" style=\"color: #dc2626; text-decoration: none;\">📩 support@aish.vn</a>\r\n             </p>\r\n           </div>\r\n         </div>\r\n \r\n"
                },
                {
                    "date": 1747242963794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n           <div style=\"background-color: #fef2f2; padding: 15px; border-radius: 6px; margin: 25px 0; border: 1px solid #fee2e2;\">\r\n             <p style=\"color: #991b1b; font-size: 14px; margin: 0;\">\r\n               Nếu bạn không yêu cầu đặt lại mật khẩu, vui lòng bỏ qua email này hoặc liên hệ với chúng tôi qua:\r\n               <br>\r\n-              <a href=\"mailto:support@aish.vn\" style=\"color: #dc2626; text-decoration: none;\">📩 support@aish.vn</a>\r\n+              <a href=\"mailto:aish.aish.vn@gmail.com\" style=\"color: #dc2626; text-decoration: none;\">📩 aish.aish.vn@gmail.com</a>\r\n             </p>\r\n           </div>\r\n         </div>\r\n \r\n@@ -126,9 +126,9 @@\n \r\n Vui lòng dùng mật khẩu này để đăng nhập và đổi lại mật khẩu ngay để bảo vệ tài khoản của bạn.\r\n \r\n Nếu bạn không yêu cầu đặt lại mật khẩu, vui lòng bỏ qua email này hoặc liên hệ với chúng tôi qua:\r\n-📩 support@aish.vn\r\n+📩 aish.aish.vn@gmail.com\r\n \r\n Trân trọng,\r\n Đội ngũ AISH`;\r\n \r\n"
                }
            ],
            "date": 1747216663281,
            "name": "Commit-0",
            "content": "import { NextResponse } from \"next/server\";\r\nimport { connectToDatabase } from \"@/lib/mongodb\";\r\nimport nodemailer from \"nodemailer\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nfunction generateRandomPassword(length = 10) {\r\n  const chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  let pass = \"\";\r\n  for (let i = 0; i < length; i++) {\r\n    pass += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return pass;\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const { email } = await request.json();\r\n    if (!email) {\r\n      return NextResponse.json({ error: \"Missing email\" }, { status: 400 });\r\n    }\r\n\r\n    const { db } = await connectToDatabase();\r\n    const user = await db.collection(\"users\").findOne({ email, provider: \"credentials\" });\r\n    if (!user) {\r\n      // Trả về thành công để tránh lộ thông tin user tồn tại hay không\r\n      return NextResponse.json({ message: \"Nếu email tồn tại, mật khẩu mới đã được gửi.\" });\r\n    }\r\n\r\n    // Tạo mật khẩu mới\r\n    const newPassword = generateRandomPassword(10);\r\n    const hashedPassword = await bcrypt.hash(newPassword, 10);\r\n\r\n    // Cập nhật mật khẩu mới vào database\r\n    await db.collection(\"users\").updateOne(\r\n      { _id: user._id },\r\n      { $set: { password: hashedPassword } }\r\n    );\r\n\r\n    // Gửi email\r\n    const transporter = nodemailer.createTransport({\r\n      service: \"gmail\",\r\n      auth: {\r\n        user: \"YOUR_GMAIL@gmail.com\", // Thay bằng email Gmail của bạn\r\n        pass: \"YOUR_APP_PASSWORD\",    // Thay bằng app password 16 ký tự\r\n      },\r\n    });\r\n\r\n    await transporter.sendMail({\r\n      from: '\"AISH Support\" <YOUR_GMAIL@gmail.com>',\r\n      to: email,\r\n      subject: \"Mật khẩu mới cho tài khoản AISH\",\r\n      text: `Mật khẩu mới của bạn là: ${newPassword}\\nVui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.`,\r\n      html: `<p>Mật khẩu mới của bạn là: <b>${newPassword}</b></p><p>Vui lòng đăng nhập và đổi lại mật khẩu sau khi đăng nhập.</p>`,\r\n    });\r\n\r\n    return NextResponse.json({ message: \"Nếu email tồn tại, mật khẩu mới đã được gửi.\" });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n  }\r\n} "
        }
    ]
}
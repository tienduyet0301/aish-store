{
    "sourceFile": "src/app/api/user/profile/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1746959415491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747118690245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,21 +3,36 @@\n import { getServerSession } from \"next-auth/next\";\r\n import { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\n \r\n // Lấy thông tin tài khoản\r\n-export async function GET() {\r\n+export async function GET(request: Request) {\r\n   try {\r\n     const session = await getServerSession(authOptions);\r\n     if (!session?.user?.email) {\r\n       return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n     }\r\n \r\n     const { db } = await connectToDatabase();\r\n+    \r\n+    // Lấy thông tin người dùng từ database\r\n     const user = await db.collection(\"users\").findOne({ email: session.user.email });\r\n     \r\n-    return NextResponse.json(user);\r\n+    if (!user) {\r\n+      return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n+    }\r\n+\r\n+    // Trả về thông tin người dùng\r\n+    return NextResponse.json({\r\n+      firstName: user.firstName || '',\r\n+      lastName: user.lastName || '',\r\n+      birthDay: user.birthDay || '',\r\n+      birthMonth: user.birthMonth || '',\r\n+      birthYear: user.birthYear || '',\r\n+      email: user.email || '',\r\n+    });\r\n   } catch (error) {\r\n-    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n+    console.error(\"Error fetching user profile:\", error);\r\n+    return NextResponse.json({ error: \"Internal server error\" }, { status: 500 });\r\n   }\r\n }\r\n \r\n // Cập nhật thông tin tài khoản\r\n"
                },
                {
                    "date": 1747118731189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,36 +3,21 @@\n import { getServerSession } from \"next-auth/next\";\r\n import { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\n \r\n // Lấy thông tin tài khoản\r\n-export async function GET(request: Request) {\r\n+export async function GET() {\r\n   try {\r\n     const session = await getServerSession(authOptions);\r\n     if (!session?.user?.email) {\r\n       return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n     }\r\n \r\n     const { db } = await connectToDatabase();\r\n-    \r\n-    // Lấy thông tin người dùng từ database\r\n     const user = await db.collection(\"users\").findOne({ email: session.user.email });\r\n     \r\n-    if (!user) {\r\n-      return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n-    }\r\n-\r\n-    // Trả về thông tin người dùng\r\n-    return NextResponse.json({\r\n-      firstName: user.firstName || '',\r\n-      lastName: user.lastName || '',\r\n-      birthDay: user.birthDay || '',\r\n-      birthMonth: user.birthMonth || '',\r\n-      birthYear: user.birthYear || '',\r\n-      email: user.email || '',\r\n-    });\r\n+    return NextResponse.json(user);\r\n   } catch (error) {\r\n-    console.error(\"Error fetching user profile:\", error);\r\n-    return NextResponse.json({ error: \"Internal server error\" }, { status: 500 });\r\n+    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n }\r\n \r\n // Cập nhật thông tin tài khoản\r\n"
                },
                {
                    "date": 1747118804607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,19 @@\n \r\n     const { db } = await connectToDatabase();\r\n     const user = await db.collection(\"users\").findOne({ email: session.user.email });\r\n     \r\n-    return NextResponse.json(user);\r\n+    if (!user) {\r\n+      return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n+    }\r\n+    return NextResponse.json({\r\n+      firstName: user.firstName || '',\r\n+      lastName: user.lastName || '',\r\n+      birthDay: user.birthDay || '',\r\n+      birthMonth: user.birthMonth || '',\r\n+      birthYear: user.birthYear || '',\r\n+      email: user.email || '',\r\n+    });\r\n   } catch (error) {\r\n     return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1747121053942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,17 +16,23 @@\n     \r\n     if (!user) {\r\n       return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n     }\r\n+\r\n+    // Trả về đầy đủ thông tin user\r\n     return NextResponse.json({\r\n+      name: user.name || '',\r\n       firstName: user.firstName || '',\r\n       lastName: user.lastName || '',\r\n       birthDay: user.birthDay || '',\r\n       birthMonth: user.birthMonth || '',\r\n       birthYear: user.birthYear || '',\r\n       email: user.email || '',\r\n+      provider: user.provider || 'credentials',\r\n+      createdAt: user.createdAt || new Date(),\r\n     });\r\n   } catch (error) {\r\n+    console.error('Profile error:', error);\r\n     return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n }\r\n \r\n@@ -40,14 +46,26 @@\n \r\n     const userData = await request.json();\r\n     const { db } = await connectToDatabase();\r\n \r\n-    await db.collection(\"users\").updateOne(\r\n+    // Cập nhật thông tin user\r\n+    const result = await db.collection(\"users\").updateOne(\r\n       { email: session.user.email },\r\n-      { $set: { ...userData, email: session.user.email } }\r\n+      { \r\n+        $set: { \r\n+          ...userData,\r\n+          email: session.user.email,\r\n+          updatedAt: new Date()\r\n+        } \r\n+      }\r\n     );\r\n \r\n+    if (result.matchedCount === 0) {\r\n+      return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n+    }\r\n+\r\n     return NextResponse.json({ message: \"Profile updated successfully\" });\r\n   } catch (error) {\r\n+    console.error('Update profile error:', error);\r\n     return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747121337984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,22 +5,31 @@\n \r\n // Lấy thông tin tài khoản\r\n export async function GET() {\r\n   try {\r\n+    console.log('Fetching user profile...');\r\n+    \r\n     const session = await getServerSession(authOptions);\r\n+    console.log('Session:', session?.user?.email);\r\n+    \r\n     if (!session?.user?.email) {\r\n+      console.log('No session or email found');\r\n       return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n     }\r\n \r\n     const { db } = await connectToDatabase();\r\n+    console.log('Connected to database');\r\n+    \r\n     const user = await db.collection(\"users\").findOne({ email: session.user.email });\r\n+    console.log('User found:', user ? 'Yes' : 'No');\r\n     \r\n     if (!user) {\r\n+      console.log('User not found in database');\r\n       return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n     }\r\n \r\n     // Trả về đầy đủ thông tin user\r\n-    return NextResponse.json({\r\n+    const userData = {\r\n       name: user.name || '',\r\n       firstName: user.firstName || '',\r\n       lastName: user.lastName || '',\r\n       birthDay: user.birthDay || '',\r\n@@ -28,25 +37,43 @@\n       birthYear: user.birthYear || '',\r\n       email: user.email || '',\r\n       provider: user.provider || 'credentials',\r\n       createdAt: user.createdAt || new Date(),\r\n-    });\r\n+    };\r\n+    \r\n+    console.log('Returning user data:', userData);\r\n+    return NextResponse.json(userData);\r\n   } catch (error) {\r\n     console.error('Profile error:', error);\r\n+    if (error instanceof Error) {\r\n+      return NextResponse.json({ \r\n+        error: \"Internal Server Error\", \r\n+        message: error.message,\r\n+        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\r\n+      }, { status: 500 });\r\n+    }\r\n     return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n }\r\n \r\n // Cập nhật thông tin tài khoản\r\n export async function PUT(request: Request) {\r\n   try {\r\n+    console.log('Updating user profile...');\r\n+    \r\n     const session = await getServerSession(authOptions);\r\n+    console.log('Session:', session?.user?.email);\r\n+    \r\n     if (!session?.user?.email) {\r\n+      console.log('No session or email found');\r\n       return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n     }\r\n \r\n     const userData = await request.json();\r\n+    console.log('Update data:', userData);\r\n+    \r\n     const { db } = await connectToDatabase();\r\n+    console.log('Connected to database');\r\n \r\n     // Cập nhật thông tin user\r\n     const result = await db.collection(\"users\").updateOne(\r\n       { email: session.user.email },\r\n@@ -58,14 +85,24 @@\n         } \r\n       }\r\n     );\r\n \r\n+    console.log('Update result:', result);\r\n+\r\n     if (result.matchedCount === 0) {\r\n+      console.log('User not found for update');\r\n       return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n     }\r\n \r\n     return NextResponse.json({ message: \"Profile updated successfully\" });\r\n   } catch (error) {\r\n     console.error('Update profile error:', error);\r\n+    if (error instanceof Error) {\r\n+      return NextResponse.json({ \r\n+        error: \"Internal Server Error\", \r\n+        message: error.message,\r\n+        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\r\n+      }, { status: 500 });\r\n+    }\r\n     return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747121445583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,15 +8,25 @@\n   try {\r\n     console.log('Fetching user profile...');\r\n     \r\n     const session = await getServerSession(authOptions);\r\n-    console.log('Session:', session?.user?.email);\r\n+    console.log('Session:', session?.user);\r\n     \r\n     if (!session?.user?.email) {\r\n       console.log('No session or email found');\r\n       return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n     }\r\n \r\n+    // Kiểm tra role\r\n+    if (session.user.role === \"ADMIN\") {\r\n+      console.log('Admin user detected');\r\n+      return NextResponse.json({\r\n+        name: \"Admin\",\r\n+        email: session.user.email,\r\n+        role: \"ADMIN\"\r\n+      });\r\n+    }\r\n+\r\n     const { db } = await connectToDatabase();\r\n     console.log('Connected to database');\r\n     \r\n     const user = await db.collection(\"users\").findOne({ email: session.user.email });\r\n@@ -36,8 +46,9 @@\n       birthMonth: user.birthMonth || '',\r\n       birthYear: user.birthYear || '',\r\n       email: user.email || '',\r\n       provider: user.provider || 'credentials',\r\n+      role: user.role || 'USER',\r\n       createdAt: user.createdAt || new Date(),\r\n     };\r\n     \r\n     console.log('Returning user data:', userData);\r\n@@ -60,15 +71,21 @@\n   try {\r\n     console.log('Updating user profile...');\r\n     \r\n     const session = await getServerSession(authOptions);\r\n-    console.log('Session:', session?.user?.email);\r\n+    console.log('Session:', session?.user);\r\n     \r\n     if (!session?.user?.email) {\r\n       console.log('No session or email found');\r\n       return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n     }\r\n \r\n+    // Kiểm tra role\r\n+    if (session.user.role === \"ADMIN\") {\r\n+      console.log('Admin user cannot update profile through this endpoint');\r\n+      return NextResponse.json({ error: \"Admin users cannot update profile through this endpoint\" }, { status: 403 });\r\n+    }\r\n+\r\n     const userData = await request.json();\r\n     console.log('Update data:', userData);\r\n     \r\n     const { db } = await connectToDatabase();\r\n"
                },
                {
                    "date": 1747245764941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,34 +36,26 @@\n       console.log('User not found in database');\r\n       return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n     }\r\n \r\n-    // Trả về đầy đủ thông tin user\r\n-    const userData = {\r\n-      name: user.name || '',\r\n+    // Trả về thông tin user, bỏ qua các trường nhạy cảm\r\n+    return NextResponse.json({\r\n       firstName: user.firstName || '',\r\n       lastName: user.lastName || '',\r\n       birthDay: user.birthDay || '',\r\n       birthMonth: user.birthMonth || '',\r\n       birthYear: user.birthYear || '',\r\n-      email: user.email || '',\r\n-      provider: user.provider || 'credentials',\r\n-      role: user.role || 'USER',\r\n-      createdAt: user.createdAt || new Date(),\r\n-    };\r\n-    \r\n-    console.log('Returning user data:', userData);\r\n-    return NextResponse.json(userData);\r\n+      email: user.email,\r\n+      provider: user.provider,\r\n+      role: user.role,\r\n+      createdAt: user.createdAt\r\n+    });\r\n   } catch (error) {\r\n-    console.error('Profile error:', error);\r\n-    if (error instanceof Error) {\r\n-      return NextResponse.json({ \r\n-        error: \"Internal Server Error\", \r\n-        message: error.message,\r\n-        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\r\n-      }, { status: 500 });\r\n-    }\r\n-    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n+    console.error(\"Error fetching user profile:\", error);\r\n+    return NextResponse.json(\r\n+      { error: \"Internal server error\" },\r\n+      { status: 500 }\r\n+    );\r\n   }\r\n }\r\n \r\n // Cập nhật thông tin tài khoản\r\n"
                },
                {
                    "date": 1747245837565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,26 +36,34 @@\n       console.log('User not found in database');\r\n       return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n     }\r\n \r\n-    // Trả về thông tin user, bỏ qua các trường nhạy cảm\r\n-    return NextResponse.json({\r\n+    // Trả về đầy đủ thông tin user\r\n+    const userData = {\r\n+      name: user.name || '',\r\n       firstName: user.firstName || '',\r\n       lastName: user.lastName || '',\r\n       birthDay: user.birthDay || '',\r\n       birthMonth: user.birthMonth || '',\r\n       birthYear: user.birthYear || '',\r\n-      email: user.email,\r\n-      provider: user.provider,\r\n-      role: user.role,\r\n-      createdAt: user.createdAt\r\n-    });\r\n+      email: user.email || '',\r\n+      provider: user.provider || 'credentials',\r\n+      role: user.role || 'USER',\r\n+      createdAt: user.createdAt || new Date(),\r\n+    };\r\n+    \r\n+    console.log('Returning user data:', userData);\r\n+    return NextResponse.json(userData);\r\n   } catch (error) {\r\n-    console.error(\"Error fetching user profile:\", error);\r\n-    return NextResponse.json(\r\n-      { error: \"Internal server error\" },\r\n-      { status: 500 }\r\n-    );\r\n+    console.error('Profile error:', error);\r\n+    if (error instanceof Error) {\r\n+      return NextResponse.json({ \r\n+        error: \"Internal Server Error\", \r\n+        message: error.message,\r\n+        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\r\n+      }, { status: 500 });\r\n+    }\r\n+    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n }\r\n \r\n // Cập nhật thông tin tài khoản\r\n"
                },
                {
                    "date": 1747245912068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { NextResponse } from \"next/server\";\r\n import { connectToDatabase } from \"@/lib/mongodb\";\r\n import { getServerSession } from \"next-auth/next\";\r\n-import { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\n+import { authOptions } from \"@/lib/auth\";\r\n \r\n // Lấy thông tin tài khoản\r\n export async function GET() {\r\n   try {\r\n"
                },
                {
                    "date": 1747245939184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { NextResponse } from \"next/server\";\r\n import { connectToDatabase } from \"@/lib/mongodb\";\r\n import { getServerSession } from \"next-auth/next\";\r\n-import { authOptions } from \"@/lib/auth\";\r\n+import { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\n \r\n // Lấy thông tin tài khoản\r\n export async function GET() {\r\n   try {\r\n"
                },
                {
                    "date": 1747246165288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,69 +1,48 @@\n import { NextResponse } from \"next/server\";\r\n import { connectToDatabase } from \"@/lib/mongodb\";\r\n import { getServerSession } from \"next-auth/next\";\r\n-import { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\n+import { authOptions } from \"@/lib/auth\";\r\n+import { ObjectId } from \"mongodb\";\r\n \r\n // Lấy thông tin tài khoản\r\n export async function GET() {\r\n   try {\r\n-    console.log('Fetching user profile...');\r\n-    \r\n     const session = await getServerSession(authOptions);\r\n-    console.log('Session:', session?.user);\r\n     \r\n     if (!session?.user?.email) {\r\n-      console.log('No session or email found');\r\n-      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n+      return NextResponse.json(\r\n+        { error: \"Unauthorized\" },\r\n+        { status: 401 }\r\n+      );\r\n     }\r\n \r\n-    // Kiểm tra role\r\n-    if (session.user.role === \"ADMIN\") {\r\n-      console.log('Admin user detected');\r\n-      return NextResponse.json({\r\n-        name: \"Admin\",\r\n-        email: session.user.email,\r\n-        role: \"ADMIN\"\r\n-      });\r\n-    }\r\n-\r\n     const { db } = await connectToDatabase();\r\n-    console.log('Connected to database');\r\n-    \r\n     const user = await db.collection(\"users\").findOne({ email: session.user.email });\r\n-    console.log('User found:', user ? 'Yes' : 'No');\r\n-    \r\n+\r\n     if (!user) {\r\n-      console.log('User not found in database');\r\n-      return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n+      return NextResponse.json(\r\n+        { error: \"User not found\" },\r\n+        { status: 404 }\r\n+      );\r\n     }\r\n \r\n-    // Trả về đầy đủ thông tin user\r\n-    const userData = {\r\n-      name: user.name || '',\r\n+    // Trả về thông tin user, bỏ qua các trường nhạy cảm\r\n+    return NextResponse.json({\r\n       firstName: user.firstName || '',\r\n       lastName: user.lastName || '',\r\n       birthDay: user.birthDay || '',\r\n       birthMonth: user.birthMonth || '',\r\n       birthYear: user.birthYear || '',\r\n-      email: user.email || '',\r\n-      provider: user.provider || 'credentials',\r\n-      role: user.role || 'USER',\r\n-      createdAt: user.createdAt || new Date(),\r\n-    };\r\n-    \r\n-    console.log('Returning user data:', userData);\r\n-    return NextResponse.json(userData);\r\n+      email: user.email,\r\n+      role: user.role || 'USER'\r\n+    });\r\n   } catch (error) {\r\n-    console.error('Profile error:', error);\r\n-    if (error instanceof Error) {\r\n-      return NextResponse.json({ \r\n-        error: \"Internal Server Error\", \r\n-        message: error.message,\r\n-        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\r\n-      }, { status: 500 });\r\n-    }\r\n-    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n+    console.error(\"Error fetching user profile:\", error);\r\n+    return NextResponse.json(\r\n+      { error: \"Internal server error\" },\r\n+      { status: 500 }\r\n+    );\r\n   }\r\n }\r\n \r\n // Cập nhật thông tin tài khoản\r\n"
                },
                {
                    "date": 1747246248889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,44 +1,54 @@\n import { NextResponse } from \"next/server\";\r\n import { connectToDatabase } from \"@/lib/mongodb\";\r\n-import { getServerSession } from \"next-auth/next\";\r\n+import { getServerSession } from \"next-auth\";\r\n import { authOptions } from \"@/lib/auth\";\r\n import { ObjectId } from \"mongodb\";\r\n \r\n // Lấy thông tin tài khoản\r\n export async function GET() {\r\n   try {\r\n+    console.log('API: Fetching user profile...');\r\n     const session = await getServerSession(authOptions);\r\n+    console.log('API: Session:', session?.user);\r\n     \r\n     if (!session?.user?.email) {\r\n+      console.log('API: No session or email found');\r\n       return NextResponse.json(\r\n         { error: \"Unauthorized\" },\r\n         { status: 401 }\r\n       );\r\n     }\r\n \r\n     const { db } = await connectToDatabase();\r\n+    console.log('API: Connected to database');\r\n+    \r\n     const user = await db.collection(\"users\").findOne({ email: session.user.email });\r\n+    console.log('API: User found:', user ? 'Yes' : 'No');\r\n \r\n     if (!user) {\r\n+      console.log('API: User not found in database');\r\n       return NextResponse.json(\r\n         { error: \"User not found\" },\r\n         { status: 404 }\r\n       );\r\n     }\r\n \r\n     // Trả về thông tin user, bỏ qua các trường nhạy cảm\r\n-    return NextResponse.json({\r\n+    const userData = {\r\n       firstName: user.firstName || '',\r\n       lastName: user.lastName || '',\r\n       birthDay: user.birthDay || '',\r\n       birthMonth: user.birthMonth || '',\r\n       birthYear: user.birthYear || '',\r\n       email: user.email,\r\n       role: user.role || 'USER'\r\n-    });\r\n+    };\r\n+    console.log('API: Returning user data:', userData);\r\n+    \r\n+    return NextResponse.json(userData);\r\n   } catch (error) {\r\n-    console.error(\"Error fetching user profile:\", error);\r\n+    console.error(\"API: Error fetching user profile:\", error);\r\n     return NextResponse.json(\r\n       { error: \"Internal server error\" },\r\n       { status: 500 }\r\n     );\r\n"
                },
                {
                    "date": 1747365186465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { NextResponse } from \"next/server\";\r\n import { connectToDatabase } from \"@/lib/mongodb\";\r\n import { getServerSession } from \"next-auth\";\r\n-import { authOptions } from \"@/lib/auth\";\r\n+import { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\n import { ObjectId } from \"mongodb\";\r\n \r\n // Lấy thông tin tài khoản\r\n export async function GET() {\r\n"
                }
            ],
            "date": 1746959415491,
            "name": "Commit-0",
            "content": "import { NextResponse } from \"next/server\";\r\nimport { connectToDatabase } from \"@/lib/mongodb\";\r\nimport { getServerSession } from \"next-auth/next\";\r\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\n\r\n// Lấy thông tin tài khoản\r\nexport async function GET() {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session?.user?.email) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const { db } = await connectToDatabase();\r\n    const user = await db.collection(\"users\").findOne({ email: session.user.email });\r\n    \r\n    return NextResponse.json(user);\r\n  } catch (error) {\r\n    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n  }\r\n}\r\n\r\n// Cập nhật thông tin tài khoản\r\nexport async function PUT(request: Request) {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session?.user?.email) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const userData = await request.json();\r\n    const { db } = await connectToDatabase();\r\n\r\n    await db.collection(\"users\").updateOne(\r\n      { email: session.user.email },\r\n      { $set: { ...userData, email: session.user.email } }\r\n    );\r\n\r\n    return NextResponse.json({ message: \"Profile updated successfully\" });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n  }\r\n} "
        }
    ]
}
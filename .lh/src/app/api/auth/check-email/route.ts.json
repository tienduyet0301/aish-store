{
    "sourceFile": "src/app/api/auth/check-email/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1746959616911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746961466940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,17 +3,14 @@\n \r\n export async function POST(request: Request) {\r\n   try {\r\n     const { email } = await request.json();\r\n-    \r\n     if (!email) {\r\n-      return NextResponse.json({ error: \"Email is required\" }, { status: 400 });\r\n+      return NextResponse.json({ exists: false, error: \"Email is required\" }, { status: 400 });\r\n     }\r\n-\r\n     const { db } = await connectToDatabase();\r\n     const user = await db.collection(\"users\").findOne({ email });\r\n-\r\n     return NextResponse.json({ exists: !!user });\r\n   } catch (error) {\r\n-    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n+    return NextResponse.json({ exists: false, error: \"Internal Server Error\" }, { status: 500 });\r\n   }\r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747288612156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,20 @@\n \r\n export async function POST(request: Request) {\r\n   try {\r\n     const { email } = await request.json();\r\n-    if (!email) {\r\n-      return NextResponse.json({ exists: false, error: \"Email is required\" }, { status: 400 });\r\n-    }\r\n     const { db } = await connectToDatabase();\r\n-    const user = await db.collection(\"users\").findOne({ email });\r\n+\r\n+    // Tìm kiếm email không phân biệt chữ hoa chữ thường\r\n+    const user = await db.collection(\"users\").findOne({\r\n+      email: { $regex: new RegExp(`^${email}$`, \"i\") }\r\n+    });\r\n+\r\n     return NextResponse.json({ exists: !!user });\r\n   } catch (error) {\r\n-    return NextResponse.json({ exists: false, error: \"Internal Server Error\" }, { status: 500 });\r\n+    console.error(\"Error checking email:\", error);\r\n+    return NextResponse.json(\r\n+      { error: \"Failed to check email\" },\r\n+      { status: 500 }\r\n+    );\r\n   }\r\n } \n\\ No newline at end of file\n"
                }
            ],
            "date": 1746959616911,
            "name": "Commit-0",
            "content": "import { NextResponse } from \"next/server\";\r\nimport { connectToDatabase } from \"@/lib/mongodb\";\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const { email } = await request.json();\r\n    \r\n    if (!email) {\r\n      return NextResponse.json({ error: \"Email is required\" }, { status: 400 });\r\n    }\r\n\r\n    const { db } = await connectToDatabase();\r\n    const user = await db.collection(\"users\").findOne({ email });\r\n\r\n    return NextResponse.json({ exists: !!user });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n  }\r\n} "
        }
    ]
}
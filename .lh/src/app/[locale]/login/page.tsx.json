{
    "sourceFile": "src/app/[locale]/login/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1747290841775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747290859644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,131 +1,1 @@\n-'use client';\r\n-\r\n-import { useState } from \"react\";\r\n-import { FcGoogle } from \"react-icons/fc\";\r\n-import { useRouter } from \"next/navigation\";\r\n-import { useTranslations } from 'next-intl';\r\n-import LanguageSwitcher from \"@/components/LanguageSwitcher\";\r\n-\r\n-export default function Login() {\r\n-  const t = useTranslations();\r\n-  const router = useRouter();\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [error, setError] = useState(\"\");\r\n-  const [isFocused, setIsFocused] = useState(false);\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-\r\n-  const isValidEmail = (email: string) => {\r\n-    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n-  };\r\n-\r\n-  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    setEmail(e.target.value);\r\n-    if (error) {\r\n-      setError(\"\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleContinue = async () => {\r\n-    if (!email || !isValidEmail(email)) {\r\n-      setError(t('validation.requiredEmail'));\r\n-      return;\r\n-    }\r\n-    setIsLoading(true);\r\n-    // Xử lý logic đăng nhập ở đây\r\n-    router.push(\"/register\");\r\n-  };\r\n-\r\n-  const handleGoogleSignIn = () => {\r\n-    // Xử lý đăng nhập bằng Google\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-white flex flex-col items-center justify-center p-4\">\r\n-      <div className=\"absolute top-4 right-4\">\r\n-        <LanguageSwitcher />\r\n-      </div>\r\n-\r\n-      <div className=\"w-full max-w-xs flex flex-col items-center gap-4\">\r\n-        {/* Nút đăng nhập Google */}\r\n-        <button \r\n-          onClick={handleGoogleSignIn}\r\n-          className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n-          style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n-        >\r\n-          <FcGoogle className=\"text-2xl mr-3\" />\r\n-          <span className=\"text-base font-semibold tracking-widest\">{t('common.continueWithGoogle')}</span>\r\n-        </button>\r\n-\r\n-        {/* Dòng OR */}\r\n-        <div className=\"flex items-center justify-center mt-3\">\r\n-          <span className=\"text-black font-semibold\">{t('common.or')}</span>\r\n-        </div>\r\n-\r\n-        {/* Dòng tiếp tục bằng email */}\r\n-        <div className=\"flex justify-center w-full\">\r\n-          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n-            {t('common.continueWithEmail')}\r\n-          </h2>\r\n-        </div>\r\n-        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n-          <p className=\"text-black text-xs font-semibold\">\r\n-            {t('common.signInWithEmail')}\r\n-          </p>\r\n-        </div>\r\n-\r\n-        {/* Container cho email và continue button */}\r\n-        <div className=\"flex flex-col items-center gap-4 mt-4\">\r\n-          {/* Ô nhập email */}\r\n-          <div className=\"relative w-[350px]\">\r\n-            {/* Label động */}\r\n-            <motion.label\r\n-              className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n-              animate={{\r\n-                top: isFocused || email ? \"4px\" : \"40%\",\r\n-                left: \"8px\",\r\n-                scale: isFocused || email ? 0.75 : 1,\r\n-                translateY: isFocused || email ? \"0\" : \"-50%\",\r\n-              }}\r\n-              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n-            >\r\n-              {t('common.email')}\r\n-            </motion.label>\r\n-\r\n-            {/* Input */}\r\n-            <input\r\n-              type=\"email\"\r\n-              value={email}\r\n-              onChange={handleEmailChange}\r\n-              onFocus={() => setIsFocused(true)}\r\n-              onBlur={() => {\r\n-                setIsFocused(false);\r\n-                if (!email || !isValidEmail(email)) {\r\n-                  setError(t('validation.requiredEmail'));\r\n-                } else {\r\n-                  setError(\"\");\r\n-                }\r\n-              }}\r\n-              className={`w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n-              autoComplete=\"email\"\r\n-              required\r\n-            />\r\n-            {/* Hiển thị lỗi nếu có */}\r\n-            {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n-          </div>\r\n-\r\n-          {/* Nút CONTINUE */}\r\n-          <button\r\n-            onClick={handleContinue}\r\n-            className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n-            disabled={isLoading}\r\n-          >\r\n-            <span className=\"text-base font-semibold tracking-widest\">\r\n-              {isLoading ? t('common.sending') : t('common.continue')}\r\n-            </span>\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1747290841775,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useState } from \"react\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useTranslations } from 'next-intl';\r\nimport LanguageSwitcher from \"@/components/LanguageSwitcher\";\r\n\r\nexport default function Login() {\r\n  const t = useTranslations();\r\n  const router = useRouter();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const isValidEmail = (email: string) => {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  };\r\n\r\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n    if (error) {\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleContinue = async () => {\r\n    if (!email || !isValidEmail(email)) {\r\n      setError(t('validation.requiredEmail'));\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    // Xử lý logic đăng nhập ở đây\r\n    router.push(\"/register\");\r\n  };\r\n\r\n  const handleGoogleSignIn = () => {\r\n    // Xử lý đăng nhập bằng Google\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white flex flex-col items-center justify-center p-4\">\r\n      <div className=\"absolute top-4 right-4\">\r\n        <LanguageSwitcher />\r\n      </div>\r\n\r\n      <div className=\"w-full max-w-xs flex flex-col items-center gap-4\">\r\n        {/* Nút đăng nhập Google */}\r\n        <button \r\n          onClick={handleGoogleSignIn}\r\n          className=\"w-[350px] flex items-center justify-center border border-black text-black py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-100 transition mb-2\"\r\n          style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n        >\r\n          <FcGoogle className=\"text-2xl mr-3\" />\r\n          <span className=\"text-base font-semibold tracking-widest\">{t('common.continueWithGoogle')}</span>\r\n        </button>\r\n\r\n        {/* Dòng OR */}\r\n        <div className=\"flex items-center justify-center mt-3\">\r\n          <span className=\"text-black font-semibold\">{t('common.or')}</span>\r\n        </div>\r\n\r\n        {/* Dòng tiếp tục bằng email */}\r\n        <div className=\"flex justify-center w-full\">\r\n          <h2 className=\"text-black text-3xl font-semibold text-center whitespace-nowrap\">\r\n            {t('common.continueWithEmail')}\r\n          </h2>\r\n        </div>\r\n        <div className=\"flex justify-center w-full text-center px-4 whitespace-nowrap\">\r\n          <p className=\"text-black text-xs font-semibold\">\r\n            {t('common.signInWithEmail')}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Container cho email và continue button */}\r\n        <div className=\"flex flex-col items-center gap-4 mt-4\">\r\n          {/* Ô nhập email */}\r\n          <div className=\"relative w-[350px]\">\r\n            {/* Label động */}\r\n            <motion.label\r\n              className={`absolute text-sm bg-white px-1 left-4 ${error ? \"text-red-500\" : \"text-gray-500\"}`}\r\n              animate={{\r\n                top: isFocused || email ? \"4px\" : \"40%\",\r\n                left: \"8px\",\r\n                scale: isFocused || email ? 0.75 : 1,\r\n                translateY: isFocused || email ? \"0\" : \"-50%\",\r\n              }}\r\n              transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n            >\r\n              {t('common.email')}\r\n            </motion.label>\r\n\r\n            {/* Input */}\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              onFocus={() => setIsFocused(true)}\r\n              onBlur={() => {\r\n                setIsFocused(false);\r\n                if (!email || !isValidEmail(email)) {\r\n                  setError(t('validation.requiredEmail'));\r\n                } else {\r\n                  setError(\"\");\r\n                }\r\n              }}\r\n              className={`w-[350px] px-4 pt-6 pb-2 text-base text-black border rounded-none focus:outline-none focus:ring-2 ${error ? \"border-red-500 focus:ring-red-500\" : \"border-gray-300 focus:ring-black\"}`}\r\n              autoComplete=\"email\"\r\n              required\r\n            />\r\n            {/* Hiển thị lỗi nếu có */}\r\n            {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\r\n          </div>\r\n\r\n          {/* Nút CONTINUE */}\r\n          <button\r\n            onClick={handleContinue}\r\n            className=\"w-[350px] bg-black text-white py-4 rounded-none text-base font-normal tracking-wide hover:bg-gray-800 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            style={{ fontFamily: 'inherit', letterSpacing: '1px' }}\r\n            disabled={isLoading}\r\n          >\r\n            <span className=\"text-base font-semibold tracking-widest\">\r\n              {isLoading ? t('common.sending') : t('common.continue')}\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}
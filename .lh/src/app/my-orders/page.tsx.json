{
    "sourceFile": "src/app/my-orders/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1747278155933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747889222441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,41 @@\n-export const metadata = {\r\n-  title: 'My orders | AISH',\r\n-  description: 'Xem lịch sử đơn hàng của bạn tại AISH. Theo dõi trạng thái đơn hàng, xem chi tiết và quản lý đơn hàng dễ dàng.',\r\n-}; \n\\ No newline at end of file\n+import React, { useEffect, useState } from 'react';\r\n+import { useSession } from 'next-auth/react';\r\n+import { toast } from 'react-hot-toast';\r\n+\r\n+const MyOrdersPage: React.FC = () => {\r\n+  const session = useSession();\r\n+  const [orders, setOrders] = useState<Order[]>([]);\r\n+  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchOrders = async () => {\r\n+      if (!session?.user?.email) return;\r\n+\r\n+      try {\r\n+        const response = await fetch(`/api/orders?userId=${session.user.email}`);\r\n+        const data = await response.json();\r\n+\r\n+        if (data.ok) {\r\n+          setOrders(data.orders);\r\n+        } else {\r\n+          toast.error(data.message || 'Failed to fetch orders');\r\n+        }\r\n+      } catch (error) {\r\n+        console.error('Error fetching orders:', error);\r\n+        toast.error('Failed to fetch orders');\r\n+      } finally {\r\n+        setIsLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchOrders();\r\n+  }, [session]);\r\n+\r\n+  return (\r\n+    <div>\r\n+      {/* Render your orders component here */}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default MyOrdersPage; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747889237436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,32 @@\n import React, { useEffect, useState } from 'react';\r\n import { useSession } from 'next-auth/react';\r\n import { toast } from 'react-hot-toast';\r\n \r\n+interface Order {\r\n+  _id: string;\r\n+  orderCode: string;\r\n+  fullName: string;\r\n+  email: string;\r\n+  phone: string;\r\n+  address: string;\r\n+  items: Array<{\r\n+    id: string;\r\n+    name: string;\r\n+    size: string;\r\n+    quantity: number;\r\n+    price: number;\r\n+  }>;\r\n+  total: number;\r\n+  status: string;\r\n+  paymentStatus: string;\r\n+  shippingStatus: string;\r\n+  createdAt: string;\r\n+  updatedAt: string;\r\n+}\r\n+\r\n const MyOrdersPage: React.FC = () => {\r\n-  const session = useSession();\r\n+  const { data: session } = useSession();\r\n   const [orders, setOrders] = useState<Order[]>([]);\r\n   const [isLoading, setIsLoading] = useState<boolean>(true);\r\n \r\n   useEffect(() => {\r\n@@ -30,11 +52,46 @@\n \r\n     fetchOrders();\r\n   }, [session]);\r\n \r\n+  if (isLoading) {\r\n+    return <div>Loading...</div>;\r\n+  }\r\n+\r\n   return (\r\n-    <div>\r\n-      {/* Render your orders component here */}\r\n+    <div className=\"container mx-auto px-4 py-8\">\r\n+      <h1 className=\"text-2xl font-bold mb-6\">My Orders</h1>\r\n+      {orders.length === 0 ? (\r\n+        <p>No orders found.</p>\r\n+      ) : (\r\n+        <div className=\"space-y-6\">\r\n+          {orders.map((order) => (\r\n+            <div key={order._id} className=\"border rounded-lg p-6\">\r\n+              <div className=\"flex justify-between items-start mb-4\">\r\n+                <div>\r\n+                  <h2 className=\"text-lg font-semibold\">Order #{order.orderCode}</h2>\r\n+                  <p className=\"text-gray-600\">Placed on {new Date(order.createdAt).toLocaleDateString()}</p>\r\n+                </div>\r\n+                <div className=\"text-right\">\r\n+                  <p className=\"font-semibold\">Total: ${order.total.toFixed(2)}</p>\r\n+                  <p className=\"text-sm text-gray-600\">Status: {order.status}</p>\r\n+                </div>\r\n+              </div>\r\n+              <div className=\"space-y-4\">\r\n+                {order.items.map((item, index) => (\r\n+                  <div key={index} className=\"flex justify-between items-center\">\r\n+                    <div>\r\n+                      <p className=\"font-medium\">{item.name}</p>\r\n+                      <p className=\"text-sm text-gray-600\">Size: {item.size}, Quantity: {item.quantity}</p>\r\n+                    </div>\r\n+                    <p className=\"font-medium\">${(item.price * item.quantity).toFixed(2)}</p>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747889631680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n-import React, { useEffect, useState } from 'react';\r\n+\"use client\";\r\n+import { useState, useEffect } from \"react\";\r\n+import Link from \"next/link\";\r\n import { useSession } from 'next-auth/react';\r\n import { toast } from 'react-hot-toast';\r\n \r\n interface Order {\r\n@@ -14,23 +16,42 @@\n     name: string;\r\n     size: string;\r\n     quantity: number;\r\n     price: number;\r\n+    image?: string;\r\n   }>;\r\n   total: number;\r\n   status: string;\r\n   paymentStatus: string;\r\n   shippingStatus: string;\r\n   createdAt: string;\r\n   updatedAt: string;\r\n+  ward?: string;\r\n+  district?: string;\r\n+  province?: string;\r\n+  paymentMethod?: string;\r\n }\r\n \r\n-const MyOrdersPage: React.FC = () => {\r\n+export default function MyOrders() {\r\n   const { data: session } = useSession();\r\n   const [orders, setOrders] = useState<Order[]>([]);\r\n-  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n+  const [loading, setLoading] = useState<boolean>(true);\r\n+  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\r\n+  const [displayCount, setDisplayCount] = useState<number>(3);\r\n+  const [isMobile, setIsMobile] = useState<boolean>(false);\r\n \r\n   useEffect(() => {\r\n+    const checkMobile = () => {\r\n+      setIsMobile(window.innerWidth <= 768);\r\n+    };\r\n+    \r\n+    checkMobile();\r\n+    window.addEventListener('resize', checkMobile);\r\n+    \r\n+    return () => window.removeEventListener('resize', checkMobile);\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n     const fetchOrders = async () => {\r\n       if (!session?.user?.email) return;\r\n \r\n       try {\r\n@@ -45,54 +66,611 @@\n       } catch (error) {\r\n         console.error('Error fetching orders:', error);\r\n         toast.error('Failed to fetch orders');\r\n       } finally {\r\n-        setIsLoading(false);\r\n+        setLoading(false);\r\n       }\r\n     };\r\n \r\n     fetchOrders();\r\n   }, [session]);\r\n \r\n-  if (isLoading) {\r\n-    return <div>Loading...</div>;\r\n+  const formatDate = (timestamp: string) => {\r\n+    if (!timestamp) return \"N/A\";\r\n+    return new Date(timestamp).toLocaleDateString('vi-VN', {\r\n+      day: '2-digit',\r\n+      month: '2-digit',\r\n+      year: 'numeric',\r\n+      hour: '2-digit',\r\n+      minute: '2-digit'\r\n+    });\r\n+  };\r\n+\r\n+  const formatPrice = (price: number) => {\r\n+    return price.toLocaleString('vi-VN') + ' VND';\r\n+  };\r\n+\r\n+  const getStatusColor = (status: string) => {\r\n+    switch (status) {\r\n+      case \"success\":\r\n+        return { bg: \"#e6f4ea\", text: \"#1e7e34\" };\r\n+      case \"shipping\":\r\n+        return { bg: \"#e3f2fd\", text: \"#1976d2\" };\r\n+      case \"packed\":\r\n+        return { bg: \"#f3e5f5\", text: \"#7b1fa2\" };\r\n+      case \"confirmed\":\r\n+        return { bg: \"#fff3e0\", text: \"#f57c00\" };\r\n+      case \"failed\":\r\n+      case \"customer_cancelled\":\r\n+      case \"hvc_cancelled\":\r\n+        return { bg: \"#fbe9e7\", text: \"#d32f2f\" };\r\n+      case \"refunding\":\r\n+        return { bg: \"#fff3e0\", text: \"#f57c00\" };\r\n+      case \"refunded\":\r\n+        return { bg: \"#f5f5f5\", text: \"#616161\" };\r\n+      default:\r\n+        return { bg: \"#f5f5f5\", text: \"#616161\" };\r\n+    }\r\n+  };\r\n+\r\n+  const getStatusLabel = (status: string) => {\r\n+    switch (status) {\r\n\\ No newline at end of file\n+      case \"pending\":\r\n+        return \"Chờ xác nhận\";\r\n+      case \"confirmed\":\r\n+        return \"Đã xác nhận\";\r\n+      case \"packed\":\r\n+        return \"Đã đóng gói\";\r\n+      case \"shipping\":\r\n+        return \"Đang vận chuyển\";\r\n+      case \"success\":\r\n+        return \"Thành công\";\r\n+      case \"failed\":\r\n+        return \"Thất bại\";\r\n+      case \"customer_cancelled\":\r\n+        return \"Khách hủy\";\r\n+      case \"hvc_cancelled\":\r\n+        return \"HVC hủy\";\r\n+      case \"refunding\":\r\n+        return \"Đang hoàn\";\r\n+      case \"refunded\":\r\n+        return \"Đã hoàn\";\r\n+      default:\r\n+        return status;\r\n+    }\r\n+  };\r\n+\r\n+  const getPaymentStatusLabel = (status: string) => {\r\n+    switch (status) {\r\n+      case \"paid\":\r\n+        return \"Đã thanh toán\";\r\n+      case \"pending\":\r\n+        return \"Chưa thanh toán\";\r\n+      case \"failed\":\r\n+        return \"Thanh toán thất bại\";\r\n+      default:\r\n+        return status;\r\n+    }\r\n+  };\r\n+\r\n+  const getMobileStyle = () => ({\r\n+    orderCode: {\r\n+      fontSize: isMobile ? '13px' : '16px',\r\n+      fontWeight: '600',\r\n+      color: '#2C3E50',\r\n+      marginBottom: '4px',\r\n+    },\r\n+    orderDate: {\r\n+      fontSize: isMobile ? '11px' : '14px',\r\n+      color: '#666',\r\n+    },\r\n+    statusBadge: {\r\n+      padding: isMobile ? '4px 8px' : '6px 12px',\r\n+      borderRadius: '15px',\r\n+      fontSize: isMobile ? '11px' : '12px',\r\n+      fontWeight: '500',\r\n+    },\r\n+    productName: {\r\n+      fontSize: isMobile ? '13px' : '15px',\r\n+      fontWeight: '600',\r\n+      color: '#000000',\r\n+      marginBottom: '4px',\r\n+    },\r\n+    productDetails: {\r\n+      fontSize: isMobile ? '12px' : '13px',\r\n+      color: '#666',\r\n+      marginBottom: '4px',\r\n+    },\r\n+    productPrice: {\r\n+      fontSize: isMobile ? '12px' : '14px',\r\n+      fontWeight: '600',\r\n+      color: '#000000',\r\n+    },\r\n+    detailRow: {\r\n+      fontSize: isMobile ? '12px' : '14px',\r\n+      color: '#666',\r\n+      marginBottom: '8px',\r\n+    },\r\n+    addressTitle: {\r\n+      fontSize: isMobile ? '12px' : '14px',\r\n+      fontWeight: '600',\r\n+      color: '#2C3E50',\r\n+      marginBottom: '8px',\r\n+    },\r\n+    address: {\r\n+      fontSize: isMobile ? '12px' : '14px',\r\n+      color: '#666',\r\n+      lineHeight: '1.5',\r\n+    },\r\n+    productImage: {\r\n+      width: isMobile ? '60px' : '80px',\r\n+      height: isMobile ? '60px' : '80px',\r\n+      objectFit: 'cover',\r\n+      borderRadius: '4px',\r\n+    }\r\n+  });\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div style={styles.pageWrapper}>\r\n+        <div style={styles.container}>\r\n+          <div style={styles.headerContainer}>\r\n+            <div style={styles.headerTitle}>\r\n+              <h1 style={styles.mainTitle}>MY ORDERS</h1>\r\n+              <div style={styles.titleUnderline}></div>\r\n+            </div>\r\n+          </div>\r\n+          <div style={styles.loadingContainer}>\r\n+            <p>Đang tải đơn hàng...</p>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"container mx-auto px-4 py-8\">\r\n-      <h1 className=\"text-2xl font-bold mb-6\">My Orders</h1>\r\n-      {orders.length === 0 ? (\r\n-        <p>No orders found.</p>\r\n-      ) : (\r\n-        <div className=\"space-y-6\">\r\n-          {orders.map((order) => (\r\n-            <div key={order._id} className=\"border rounded-lg p-6\">\r\n-              <div className=\"flex justify-between items-start mb-4\">\r\n-                <div>\r\n-                  <h2 className=\"text-lg font-semibold\">Order #{order.orderCode}</h2>\r\n-                  <p className=\"text-gray-600\">Placed on {new Date(order.createdAt).toLocaleDateString()}</p>\r\n-                </div>\r\n-                <div className=\"text-right\">\r\n-                  <p className=\"font-semibold\">Total: ${order.total.toFixed(2)}</p>\r\n-                  <p className=\"text-sm text-gray-600\">Status: {order.status}</p>\r\n-                </div>\r\n+    <div style={styles.pageWrapper}>\r\n+      <div style={styles.container}>\r\n+        <div style={styles.headerContainer}>\r\n+          <div style={styles.headerTitle}>\r\n+            <h1 style={styles.mainTitle}>MY ORDERS</h1>\r\n+            <div style={styles.titleUnderline}></div>\r\n+          </div>\r\n+          {Array.isArray(orders) && orders.length > 0 && (\r\n+            <p style={styles.orderCount}>\r\n+              You Have {orders.length} {orders.length === 1 ? \"Order\" : \"Orders\"} In My Orders.\r\n+            </p>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {!Array.isArray(orders) || orders.length === 0 ? (\r\n+          <div style={styles.emptyState}>\r\n+            <h2 style={styles.noOrdersTitle}>NO ORDERS</h2>\r\n+            <div style={styles.dividerLine}></div>\r\n+            <p style={styles.noOrdersText}>You have no orders to view.</p>\r\n+            <p style={styles.subText}>\r\n+              Once you place an order on aish.vn you&apos;ll be able to check its status.\r\n+            </p>\r\n+            <Link href=\"/products\">\r\n+              <button style={styles.continueButton}>\r\n+                CONTINUE SHOPPING\r\n+              </button>\r\n+            </Link>\r\n+            <div style={styles.contactInfo}>\r\n+              <div style={styles.contactItem}>\r\n+                <span style={styles.phoneIcon}>☎</span>\r\n+                <a href=\"tel:0347272386\" style={styles.contactLink}>0347272386</a>\r\n               </div>\r\n-              <div className=\"space-y-4\">\r\n-                {order.items.map((item, index) => (\r\n-                  <div key={index} className=\"flex justify-between items-center\">\r\n-                    <div>\r\n-                      <p className=\"font-medium\">{item.name}</p>\r\n-                      <p className=\"text-sm text-gray-600\">Size: {item.size}, Quantity: {item.quantity}</p>\r\n+              <span style={styles.divider}>|</span>\r\n+              <div style={styles.contactItem}>\r\n+                <span style={styles.emailIcon}>✉</span>\r\n+                <a href=\"mailto:aish.aish.vn@gmail.com\" style={styles.contactLink}>\r\n+                  aish.aish.vn@gmail.com\r\n+                </a>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <>\r\n+            <div style={styles.ordersList}>\r\n+              {orders.slice(0, displayCount).filter(Boolean).map((order, index) => {\r\n+                const statusColor = getStatusColor(order.status);\r\n+                return (\r\n+                  <div key={`${order.orderCode}-${order._id || index}`} style={styles.orderCardWrapper}>\r\n+                    <div style={styles.orderCard}>\r\n+                      <div style={styles.orderHeader}>\r\n+                        <div style={styles.orderInfo}>\r\n+                          <h3 style={getMobileStyle().orderCode}>Đơn hàng: {order.orderCode}</h3>\r\n+                          <p style={getMobileStyle().orderDate}>Ngày đặt: {formatDate(order.createdAt)}</p>\r\n+                        </div>\r\n+                        <div style={styles.orderStatus}>\r\n+                          <span style={{\r\n+                            ...getMobileStyle().statusBadge,\r\n+                            backgroundColor: statusColor.bg,\r\n+                            color: statusColor.text\r\n+                          }}>\r\n+                            {getStatusLabel(order.status)}\r\n+                          </span>\r\n+                          <span style={{\r\n+                            ...getMobileStyle().statusBadge,\r\n+                            backgroundColor: order.paymentStatus === \"paid\" ? \"#e6f4ea\" : \"#fbe9e7\",\r\n+                            color: order.paymentStatus === \"paid\" ? \"#1e7e34\" : \"#d32f2f\",\r\n+                            marginLeft: \"10px\"\r\n+                          }}>\r\n+                            {getPaymentStatusLabel(order.paymentStatus)}\r\n+                          </span>\r\n+                        </div>\r\n+                      </div>\r\n+\r\n+                      <div style={styles.orderContent}>\r\n+                        <div style={styles.productsSection}>\r\n+                          <div style={styles.productsList}>\r\n+                            {order.items.map((item, itemIndex) => (\r\n+                              <div key={itemIndex} style={styles.productItem}>\r\n+                                <img src={item.image} alt={item.name} style={getMobileStyle().productImage} />\r\n+                                <div style={styles.productInfo}>\r\n+                                  <p style={getMobileStyle().productName}>{item.name}</p>\r\n+                                  <p style={getMobileStyle().productDetails}>\r\n+                                    Size: {item.size} | Số lượng: {item.quantity}\r\n+                                  </p>\r\n+                                  <p style={getMobileStyle().productPrice}>{formatPrice(item.price)}</p>\r\n+                                </div>\r\n+                              </div>\r\n+                            ))}\r\n+                          </div>\r\n+                        </div>\r\n+\r\n+                        <div style={styles.orderDetailsSection}>\r\n+                          <div style={styles.orderDetails}>\r\n+                            <div style={getMobileStyle().detailRow}>\r\n+                              <span>Tổng tiền:</span>\r\n+                              <span style={styles.totalPrice}>{formatPrice(order.total)}</span>\r\n+                            </div>\r\n+                            <div style={getMobileStyle().detailRow}>\r\n+                              <span>Phương thức thanh toán:</span>\r\n+                              <span>{order.paymentMethod === 'cod' ? 'COD' : 'Chuyển khoản'}</span>\r\n+                            </div>\r\n+                          </div>\r\n+                          <div style={styles.shippingAddress}>\r\n+                            <h4 style={getMobileStyle().addressTitle}>Địa chỉ giao hàng:</h4>\r\n+                            <p style={getMobileStyle().address}>\r\n+                              {order.fullName}<br />\r\n+                              {order.phone}<br />\r\n+                              {order.address}, {order.ward},<br />\r\n+                              {order.district}, {order.province}\r\n+                            </p>\r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n                     </div>\r\n-                    <p className=\"font-medium\">${(item.price * item.quantity).toFixed(2)}</p>\r\n                   </div>\r\n-                ))}\r\n+                );\r\n+              })}\r\n+            </div>\r\n+            \r\n+            {orders.length > displayCount && (\r\n+              <div style={styles.loadMoreContainer}>\r\n+                <button \r\n+                  onClick={() => setDisplayCount(prev => prev + 3)}\r\n+                  style={{\r\n+                    backgroundColor: 'transparent',\r\n+                    color: '#000000',\r\n+                    border: 'none',\r\n+                    borderBottom: '1px solid #000000',\r\n+                    padding: isMobile ? '8px 20px' : '12px 30px',\r\n+                    fontSize: isMobile ? '12px' : '14px',\r\n+                    cursor: 'pointer',\r\n+                    transition: 'all 0.3s',\r\n+                  }}\r\n+                >\r\n+                  LOAD MORE...\r\n+                </button>\r\n               </div>\r\n+            )}\r\n+            \r\n+            <div style={styles.continueShopping}>\r\n+              <Link href=\"/products\">\r\n+                <button style={styles.continueButton}>\r\n+                  CONTINUE SHOPPING\r\n+                </button>\r\n+              </Link>\r\n             </div>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n+          </>\r\n+        )}\r\n+      </div>\r\n     </div>\r\n   );\r\n-};\r\n+}\r\n \r\n-export default MyOrdersPage; \n+const styles = {\r\n+  pageWrapper: {\r\n+    backgroundColor: '#f5f5f5',\r\n+    minHeight: '100vh',\r\n+    width: '100%',\r\n+    margin: 0,\r\n+    padding: '20px 0',\r\n+  },\r\n+  container: {\r\n+    maxWidth: '1200px',\r\n+    margin: '0 auto',\r\n+    padding: '0 20px',\r\n+  },\r\n+  headerContainer: {\r\n+    textAlign: 'center',\r\n+    marginTop: '100px',\r\n+    marginBottom: '40px',\r\n+  },\r\n+  headerTitle: {\r\n+    display: 'inline-block',\r\n+  },\r\n+  mainTitle: {\r\n+    fontSize: '24px',\r\n+    fontWeight: 'bold',\r\n+    color: '#000000',\r\n+    letterSpacing: '0.2em',\r\n+    marginBottom: '0px',\r\n+    paddingTop: '16px',\r\n+    paddingBottom: '0px',\r\n+    lineHeight: '1',\r\n+  },\r\n+  titleUnderline: {\r\n+    height: '1px',\r\n+    backgroundColor: '#000000',\r\n+    width: '100%',\r\n+    marginTop: '2px',\r\n+  },\r\n+  orderCount: {\r\n+    fontSize: '16px',\r\n+    color: '#000000',\r\n+    marginTop: '12px',\r\n+    paddingBottom: '16px',\r\n+  },\r\n+  emptyState: {\r\n+    display: 'flex',\r\n+    flexDirection: 'column',\r\n+    alignItems: 'center',\r\n+    justifyContent: 'center',\r\n+    padding: '60px 20px',\r\n+    textAlign: 'center',\r\n+    backgroundColor: '#ffffff',\r\n+    borderRadius: '8px',\r\n+    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n+  },\r\n+  noOrdersTitle: {\r\n+    fontSize: '24px',\r\n+    fontWeight: '500',\r\n+    color: '#000000',\r\n+    marginBottom: '8px',\r\n+    letterSpacing: '2px',\r\n+  },\r\n+  dividerLine: {\r\n+    width: '80px',\r\n+    height: '1px',\r\n+    backgroundColor: '#000000',\r\n+    margin: '0 auto 30px',\r\n+  },\r\n+  noOrdersText: {\r\n+    fontSize: '16px',\r\n+    color: '#000000',\r\n+    marginBottom: '10px',\r\n+    fontWeight: '400',\r\n+  },\r\n+  subText: {\r\n+    fontSize: '14px',\r\n+    color: '#666666',\r\n+    marginBottom: '30px',\r\n+    maxWidth: '400px',\r\n+    lineHeight: '1.5',\r\n+  },\r\n+  continueButton: {\r\n+    backgroundColor: '#000000',\r\n+    color: '#ffffff',\r\n+    border: 'none',\r\n+    padding: '15px 30px',\r\n+    fontSize: '14px',\r\n+    cursor: 'pointer',\r\n+    letterSpacing: '1px',\r\n+    marginBottom: '40px',\r\n+    transition: 'background-color 0.3s',\r\n+    borderRadius: '4px',\r\n+  },\r\n+  contactInfo: {\r\n+    display: 'flex',\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n+    justifyContent: 'center',\r\n+    gap: '20px',\r\n+    marginTop: '30px',\r\n+    flexWrap: 'wrap',\r\n+  },\r\n+  contactItem: {\r\n+    display: 'flex',\r\n+    alignItems: 'center',\r\n+    gap: '10px',\r\n+  },\r\n+  contactLink: {\r\n+    color: '#000000',\r\n+    textDecoration: 'none',\r\n+    fontSize: '14px',\r\n+  },\r\n+  phoneIcon: {\r\n+    fontSize: '16px',\r\n+    color: '#000000',\r\n+  },\r\n+  emailIcon: {\r\n+    fontSize: '16px',\r\n+    color: '#000000',\r\n+  },\r\n+  divider: {\r\n+    color: '#000000',\r\n+    fontSize: '16px',\r\n+    fontWeight: '300',\r\n+    margin: '0 5px',\r\n+  },\r\n+  ordersList: {\r\n+    display: 'flex',\r\n+    flexDirection: 'column',\r\n+    gap: '20px',\r\n+  },\r\n+  orderCardWrapper: {\r\n+    backgroundColor: '#ffffff',\r\n+    border: '1px solid #e0e0e0',\r\n+    overflow: 'hidden',\r\n+  },\r\n+  orderCard: {\r\n+    padding: '20px',\r\n+  },\r\n+  orderHeader: {\r\n+    display: 'flex',\r\n+    justifyContent: 'space-between',\r\n+    alignItems: 'flex-start',\r\n+    marginBottom: '20px',\r\n+    paddingBottom: '15px',\r\n+    borderBottom: '1px solid #e0e0e0',\r\n+    flexDirection: 'row',\r\n+    flexWrap: 'wrap',\r\n+    gap: '10px',\r\n+  },\r\n+  orderInfo: {\r\n+    flex: 1,\r\n+    minWidth: '200px',\r\n+  },\r\n+  orderCode: {\r\n+    fontSize: '16px',\r\n+    fontWeight: '600',\r\n+    color: '#2C3E50',\r\n+    marginBottom: '4px',\r\n+  },\r\n+  orderDate: {\r\n+    fontSize: '14px',\r\n+    color: '#666',\r\n+  },\r\n+  orderStatus: {\r\n+    display: 'flex',\r\n+    flexWrap: 'wrap',\r\n+    gap: '10px',\r\n+  },\r\n+  statusBadge: {\r\n+    padding: '6px 12px',\r\n+    borderRadius: '15px',\r\n+    fontSize: '12px',\r\n+    fontWeight: '500',\r\n+  },\r\n+  orderContent: {\r\n+    display: 'flex',\r\n+    backgroundColor: '#ffffff',\r\n+    marginTop: '20px',\r\n+    flexDirection: 'row',\r\n+    flexWrap: 'wrap',\r\n+    gap: '20px',\r\n+  },\r\n+  productsSection: {\r\n+    flex: '1',\r\n+    minWidth: '300px',\r\n+  },\r\n+  orderDetailsSection: {\r\n+    flex: '1',\r\n+    minWidth: '300px',\r\n+    borderLeft: '1px solid #e0e0e0',\r\n+    paddingLeft: '20px',\r\n+  },\r\n+  productsList: {\r\n+    display: 'flex',\r\n+    flexDirection: 'column',\r\n+    gap: '15px',\r\n+  },\r\n+  productItem: {\r\n+    display: 'flex',\r\n+    gap: '15px',\r\n+    padding: '10px 0',\r\n+    flexWrap: 'wrap',\r\n+  },\r\n+  productImage: {\r\n+    width: '80px',\r\n+    height: '80px',\r\n+    objectFit: 'cover',\r\n+    borderRadius: '4px',\r\n+  },\r\n+  productInfo: {\r\n+    flex: 1,\r\n+    minWidth: '200px',\r\n+  },\r\n+  productName: {\r\n+    fontSize: '15px',\r\n+    fontWeight: '600',\r\n+    color: '#000000',\r\n+    marginBottom: '4px',\r\n+  },\r\n+  productDetails: {\r\n+    fontSize: '13px',\r\n+    color: '#666',\r\n+    marginBottom: '4px',\r\n+  },\r\n+  productPrice: {\r\n+    fontSize: '14px',\r\n+    fontWeight: '600',\r\n+    color: '#000000',\r\n+  },\r\n+  orderDetails: {\r\n+    marginBottom: '20px',\r\n+  },\r\n+  detailRow: {\r\n+    display: 'flex',\r\n+    justifyContent: 'space-between',\r\n+    marginBottom: '8px',\r\n+    fontSize: '14px',\r\n+    color: '#666',\r\n+    flexWrap: 'wrap',\r\n+    gap: '5px',\r\n+  },\r\n+  totalPrice: {\r\n+    fontWeight: '600',\r\n+    color: '#2C3E50',\r\n+  },\r\n+  shippingAddress: {\r\n+    paddingTop: '20px',\r\n+    borderTop: '1px solid #e0e0e0',\r\n+  },\r\n+  addressTitle: {\r\n+    fontSize: '14px',\r\n+    fontWeight: '600',\r\n+    color: '#2C3E50',\r\n+    marginBottom: '8px',\r\n+  },\r\n+  address: {\r\n+    fontSize: '14px',\r\n+    color: '#666',\r\n+    lineHeight: '1.5',\r\n+  },\r\n+  continueShopping: {\r\n+    display: 'flex',\r\n+    justifyContent: 'center',\r\n+    marginTop: '40px',\r\n+    marginBottom: '40px',\r\n+  },\r\n+  loadingContainer: {\r\n+    display: 'flex',\r\n+    justifyContent: 'center',\r\n+    alignItems: 'center',\r\n+    minHeight: '200px',\r\n+    fontSize: '16px',\r\n+    color: '#666',\r\n+    backgroundColor: '#ffffff',\r\n+    borderRadius: '8px',\r\n+    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n+  },\r\n+  loadMoreContainer: {\r\n+    display: 'flex',\r\n+    justifyContent: 'center',\r\n+    marginTop: '30px',\r\n+    marginBottom: '20px',\r\n+  },\r\n+  loadMoreButton: {\r\n+    backgroundColor: 'transparent',\r\n+    color: '#000000',\r\n+    border: 'none',\r\n+    padding: '12px 30px',\r\n+    fontSize: '14px',\r\n+    cursor: 'pointer',\r\n+    transition: 'background-color 0.3s',\r\n+  },\r\n+}; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747889684388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { useState, useEffect } from \"react\";\r\n import Link from \"next/link\";\r\n import { useSession } from 'next-auth/react';\r\n import { toast } from 'react-hot-toast';\r\n+import { CSSProperties } from 'react';\r\n \r\n interface Order {\r\n   _id: string;\r\n   orderCode: string;\r\n@@ -380,9 +381,9 @@\n     </div>\r\n   );\r\n }\r\n \r\n-const styles = {\r\n+const styles: Record<string, CSSProperties> = {\r\n   pageWrapper: {\r\n     backgroundColor: '#f5f5f5',\r\n     minHeight: '100vh',\r\n     width: '100%',\r\n@@ -394,9 +395,9 @@\n     margin: '0 auto',\r\n     padding: '0 20px',\r\n   },\r\n   headerContainer: {\r\n-    textAlign: 'center',\r\n+    textAlign: 'center' as const,\r\n     marginTop: '100px',\r\n     marginBottom: '40px',\r\n   },\r\n   headerTitle: {\r\n@@ -425,13 +426,13 @@\n     paddingBottom: '16px',\r\n   },\r\n   emptyState: {\r\n     display: 'flex',\r\n-    flexDirection: 'column',\r\n+    flexDirection: 'column' as const,\r\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n     padding: '60px 20px',\r\n-    textAlign: 'center',\r\n+    textAlign: 'center' as const,\r\n     backgroundColor: '#ffffff',\r\n     borderRadius: '8px',\r\n     boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n   },\r\n@@ -474,14 +475,14 @@\n     borderRadius: '4px',\r\n   },\r\n   contactInfo: {\r\n     display: 'flex',\r\n-    flexDirection: 'row',\r\n+    flexDirection: 'row' as const,\r\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n     gap: '20px',\r\n     marginTop: '30px',\r\n-    flexWrap: 'wrap',\r\n+    flexWrap: 'wrap' as const,\r\n   },\r\n   contactItem: {\r\n     display: 'flex',\r\n     alignItems: 'center',\r\n@@ -507,9 +508,9 @@\n     margin: '0 5px',\r\n   },\r\n   ordersList: {\r\n     display: 'flex',\r\n-    flexDirection: 'column',\r\n+    flexDirection: 'column' as const,\r\n     gap: '20px',\r\n   },\r\n   orderCardWrapper: {\r\n     backgroundColor: '#ffffff',\r\n@@ -525,10 +526,10 @@\n     alignItems: 'flex-start',\r\n     marginBottom: '20px',\r\n     paddingBottom: '15px',\r\n     borderBottom: '1px solid #e0e0e0',\r\n-    flexDirection: 'row',\r\n-    flexWrap: 'wrap',\r\n+    flexDirection: 'row' as const,\r\n+    flexWrap: 'wrap' as const,\r\n     gap: '10px',\r\n   },\r\n   orderInfo: {\r\n     flex: 1,\r\n@@ -545,9 +546,9 @@\n     color: '#666',\r\n   },\r\n   orderStatus: {\r\n     display: 'flex',\r\n-    flexWrap: 'wrap',\r\n+    flexWrap: 'wrap' as const,\r\n     gap: '10px',\r\n   },\r\n   statusBadge: {\r\n     padding: '6px 12px',\r\n@@ -558,37 +559,37 @@\n   orderContent: {\r\n     display: 'flex',\r\n     backgroundColor: '#ffffff',\r\n     marginTop: '20px',\r\n-    flexDirection: 'row',\r\n-    flexWrap: 'wrap',\r\n+    flexDirection: 'row' as const,\r\n+    flexWrap: 'wrap' as const,\r\n     gap: '20px',\r\n   },\r\n   productsSection: {\r\n-    flex: '1',\r\n+    flex: 1,\r\n     minWidth: '300px',\r\n   },\r\n   orderDetailsSection: {\r\n-    flex: '1',\r\n+    flex: 1,\r\n     minWidth: '300px',\r\n     borderLeft: '1px solid #e0e0e0',\r\n     paddingLeft: '20px',\r\n   },\r\n   productsList: {\r\n     display: 'flex',\r\n-    flexDirection: 'column',\r\n+    flexDirection: 'column' as const,\r\n     gap: '15px',\r\n   },\r\n   productItem: {\r\n     display: 'flex',\r\n     gap: '15px',\r\n     padding: '10px 0',\r\n-    flexWrap: 'wrap',\r\n+    flexWrap: 'wrap' as const,\r\n   },\r\n   productImage: {\r\n     width: '80px',\r\n     height: '80px',\r\n-    objectFit: 'cover',\r\n+    objectFit: 'cover' as const,\r\n     borderRadius: '4px',\r\n   },\r\n   productInfo: {\r\n     flex: 1,\r\n@@ -618,9 +619,9 @@\n     justifyContent: 'space-between',\r\n     marginBottom: '8px',\r\n     fontSize: '14px',\r\n     color: '#666',\r\n-    flexWrap: 'wrap',\r\n+    flexWrap: 'wrap' as const,\r\n     gap: '5px',\r\n   },\r\n   totalPrice: {\r\n     fontWeight: '600',\r\n"
                },
                {
                    "date": 1747889697629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,9 +204,9 @@\n     },\r\n     productImage: {\r\n       width: isMobile ? '60px' : '80px',\r\n       height: isMobile ? '60px' : '80px',\r\n-      objectFit: 'cover',\r\n+      objectFit: 'cover' as const,\r\n       borderRadius: '4px',\r\n     }\r\n   });\r\n \r\n"
                }
            ],
            "date": 1747278155933,
            "name": "Commit-0",
            "content": "export const metadata = {\r\n  title: 'My orders | AISH',\r\n  description: 'Xem lịch sử đơn hàng của bạn tại AISH. Theo dõi trạng thái đơn hàng, xem chi tiết và quản lý đơn hàng dễ dàng.',\r\n}; "
        }
    ]
}
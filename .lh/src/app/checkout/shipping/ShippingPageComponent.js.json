{
    "sourceFile": "src/app/checkout/shipping/ShippingPageComponent.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1747801087984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747801266087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,19 +3,599 @@\n import Link from \"next/link\";\r\n import { useVietnameseAddress } from \"../../../hooks/useVietnameseAddress\";\r\n import OrderConfirmationModal from \"../../../components/OrderConfirmationModal\";\r\n \r\n-const ShippingPageComponent = ({\r\n-  userEmail: propUserEmail,\r\n-  isShippingComplete,\r\n-  showAdditionalContact,\r\n-  showPaymentDetails,\r\n-  errors = {},\r\n-  handleShippingComplete,\r\n-  handleAdditionalContactToggle,\r\n-  order = { items: [], promoCode: null, promoAmount: 0 },\r\n-}) => {\r\n-  // ... giữ nguyên toàn bộ code trong component cũ ...\r\n-// ... (copy toàn bộ code trong component ShippingPage ở file page.js vào đây, trừ export default) ...\r\n+const ShippingPageComponent = () => {\r\n+  const [order, setOrder] = useState({ items: [], promoCode: null, promoAmount: 0 });\r\n+  const [userEmail, setUserEmail] = useState('');\r\n+  const [errors, setErrors] = useState({});\r\n+  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n+  const [showPaymentSection, setShowPaymentSection] = useState(false);\r\n+  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n+  const [orderDetails, setOrderDetails] = useState(null);\r\n+  const [formData, setFormData] = useState({\r\n+    firstName: \"\",\r\n+    lastName: \"\",\r\n+    address: \"\",\r\n+    phone: \"\",\r\n+    additionalPhone: \"\",\r\n+    apartment: \"\",\r\n+  });\r\n+\r\n+  const {\r\n+    provinces,\r\n+    districts,\r\n+    wards,\r\n+    selectedProvince,\r\n+    selectedDistrict,\r\n+    selectedWard,\r\n+    selectedProvinceName,\r\n+    selectedDistrictName,\r\n+    selectedWardName,\r\n+    handleProvinceChange,\r\n+    handleDistrictChange,\r\n+    handleWardChange\r\n+  } = useVietnameseAddress();\r\n+\r\n+  useEffect(() => {\r\n+    // Lấy giỏ hàng từ localStorage\r\n+    const cartItems = JSON.parse(localStorage.getItem('cartItems') || '[]');\r\n+    const promoCode = localStorage.getItem('promoCode');\r\n+    const promoAmount = parseFloat(localStorage.getItem('promoAmount') || '0');\r\n+    setOrder({\r\n+      items: cartItems,\r\n+      promoCode: promoCode || null,\r\n+      promoAmount: promoAmount || 0,\r\n+    });\r\n+\r\n+    // Lấy email từ localStorage hoặc sessionStorage\r\n+    const email = localStorage.getItem('userEmail') || sessionStorage.getItem('userEmail');\r\n+    setUserEmail(email || '');\r\n+\r\n+    // Nếu có lỗi validate, bạn có thể lấy từ localStorage hoặc context (nếu có)\r\n+    // setErrors(...);\r\n+  }, []);\r\n+\r\n+  const handleInputChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [name]: value\r\n+    }));\r\n+  };\r\n+\r\n+  const handleContinueToPayment = (e) => {\r\n+    e.preventDefault();\r\n+    // Thêm validation cho form shipping\r\n+    const shippingForm = document.getElementById('shippingForm');\r\n+    if (shippingForm.checkValidity()) {\r\n+      setShowPaymentSection(true);\r\n+      // Scroll to payment section\r\n+      const paymentSection = document.getElementById('paymentSection');\r\n+      if (paymentSection) {\r\n+        paymentSection.scrollIntoView({ behavior: 'smooth' });\r\n+      }\r\n+    } else {\r\n+      shippingForm.reportValidity();\r\n+    }\r\n+  };\r\n+\r\n+  const handleCompleteOrder = async (e) => {\r\n+    e.preventDefault();\r\n+    \r\n+    try {\r\n+      // Log kiểm tra selectedWard và selectedWardName\r\n+      console.log('selectedWard:', selectedWard);\r\n+      console.log('selectedWardName:', selectedWardName);\r\n+      // Kiểm tra xem đã chọn đủ thông tin địa chỉ chưa\r\n+      if (!selectedProvince || !selectedDistrict || !selectedWard) {\r\n+        alert(\"Please select complete address information\");\r\n+        return;\r\n+      }\r\n+\r\n+      // Kiểm tra các trường bắt buộc\r\n+      if (!formData.firstName || !formData.lastName || !formData.phone) {\r\n+        alert(\"Please fill in all required information\");\r\n+        return;\r\n+      }\r\n+\r\n+      // Tìm thông tin địa chỉ\r\n+      const selectedProvinceData = provinces.find(p => p.code === selectedProvince);\r\n+      const selectedDistrictData = districts.find(d => d.code === selectedDistrict);\r\n+      const selectedWardData = wards.find(w => w.code === selectedWard);\r\n+\r\n+      // Log để kiểm tra dữ liệu\r\n+      console.log('Selected Address Data:', {\r\n+        province: selectedProvinceData,\r\n+        district: selectedDistrictData,\r\n+        ward: selectedWardData\r\n+      });\r\n+\r\n+      // Tạo mã đơn hàng\r\n+      const now = new Date();\r\n+      const orderCode = `AISH${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}${String(now.getSeconds()).padStart(2, '0')}`;\r\n+\r\n+      // Tính toán lại tổng tiền\r\n+      const subtotal = order.items.reduce((total, item) => {\r\n+        const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n+        const price = parseFloat(priceStr) || 0;\r\n+        return total + (price * item.quantity);\r\n+      }, 0);\r\n+\r\n+      const details = {\r\n+        orderCode: orderCode,\r\n+        fullName: `${formData.firstName} ${formData.lastName}`,\r\n+        email: userEmail,\r\n+        phone: formData.phone,\r\n+        additionalPhone: formData.additionalPhone || null,\r\n+        apartment: formData.apartment || null,\r\n+        ward: selectedWardName || \"\",\r\n+        district: selectedDistrictName || \"\",\r\n+        province: selectedProvinceName || \"\",\r\n+        items: order.items.map(item => ({\r\n+          ...item,\r\n+          price: typeof item.price === 'string' ? parseFloat(item.price.replace('AU$', '').trim()) : item.price\r\n+        })),\r\n+        subtotal: subtotal,\r\n+        shippingFee: \"Free\",\r\n+        promoCode: order.promoCode || null,\r\n+        promoAmount: order.promoAmount || 0,\r\n+        total: subtotal - (order.promoAmount || 0),\r\n+        paymentMethod: paymentMethod,\r\n+        status: 'pending',\r\n+        paymentStatus: 'pending',\r\n+        shippingStatus: 'pending'\r\n+      };\r\n+\r\n+      // Log để kiểm tra dữ liệu\r\n+      console.log('Order Details:', details);\r\n+      console.log('Selected Address:', {\r\n+        apartment: formData.apartment,\r\n+        ward: selectedWardName,\r\n+        district: selectedDistrictName,\r\n+        province: selectedProvinceName\r\n+      });\r\n+\r\n+      // Chỉ hiển thị modal xác nhận, không tạo đơn hàng ngay\r\n+      setOrderDetails(details);\r\n+      setShowConfirmationModal(true);\r\n+    } catch (error) {\r\n+      console.error(\"Error preparing order:\", error);\r\n+      alert(\"An error occurred while preparing the order. Please try again.\");\r\n+    }\r\n+  };\r\n+\r\n+  const handlePaymentMethodChange = (method) => {\r\n+    setPaymentMethod(method);\r\n+  };\r\n+\r\n+  const renderPaymentInfo = () => {\r\n+    if (!paymentMethod) return null;\r\n+\r\n+    if (paymentMethod === 'cod') {\r\n+      return (\r\n+        <div style={{\r\n+          marginTop: \"20px\",\r\n+          padding: \"15px\",\r\n+          backgroundColor: \"#f8f8f8\",\r\n+          borderRadius: \"4px\"\r\n+        }}>\r\n+          <p style={{\r\n+            fontSize: \"0.9em\",\r\n+            color: \"#000000\",\r\n+            fontStyle: \"italic\"\r\n+          }}>\r\n+            Quý khách ghi nhớ mã đơn hàng và nhắn tin cho Facebook hoặc Instagram aish.aish.vn nếu muốn tra cứu mã vận đơn nhé\r\n+          </p>\r\n+        </div>\r\n+      );\r\n+    }\r\n+\r\n+    if (paymentMethod === 'bank') {\r\n+      return (\r\n+        <div style={{\r\n+          marginTop: \"20px\",\r\n+          padding: \"15px\",\r\n+          backgroundColor: \"#f8f8f8\",\r\n+          borderRadius: \"4px\"\r\n+        }}>\r\n+          <h3 style={{\r\n+            fontSize: \"0.9em\",\r\n+            fontWeight: \"bold\",\r\n+            marginBottom: \"10px\",\r\n+            color: \"#000000\"\r\n+          }}>\r\n+            Thông tin chuyển khoản\r\n+          </h3>\r\n+          <div style={{ fontSize: \"0.9em\", color: \"#000000\" }}>\r\n+            <p style={{ marginBottom: \"8px\" }}>Ngân hàng: MB BANK</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Chủ tài khoản: PHAN THUY TRUC DAO</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>Số tài khoản: 024052306</p>\r\n+            <p style={{ marginBottom: \"8px\" }}>\r\n+              Nội dung chuyển khoản: MÃ ĐƠN HÀNG + SĐT\r\n+            </p>\r\n+            <p style={{\r\n+              marginTop: \"15px\",\r\n+              fontStyle: \"italic\",\r\n+              color: \"#666666\"\r\n+            }}>\r\n+              Sau khi đặt hàng thành công, quý khách sẽ thấy mã đơn hàng tại trang. Quý khách vui lòng chuyển khoản đúng nội dung và chụp màn hình gửi về Facebook hoặc Instagram aish.aish.vn nhaa\r\n+            </p>\r\n+          </div>\r\n+        </div>\r\n+      );\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div style={styles.leftSection}>\r\n+      <div style={styles.section}>\r\n+        <h2 style={styles.sectionTitle}>CONTACT INFORMATION</h2>\r\n+        <p style={styles.sectionText}>\r\n+          {userEmail ? (\r\n+            <>\r\n+              {userEmail} (<Link href=\"/logout\" style={styles.link}>Đăng xuất</Link>)\r\n+            </>\r\n+          ) : (\r\n+            \"Bạn chưa đăng nhập\"\r\n+          )}\r\n+        </p>\r\n+      </div>\r\n+\r\n+      <div style={styles.section}>\r\n+        <h2 style={styles.sectionTitle}>SHIPPING ADDRESS</h2>\r\n+        <form id=\"shippingForm\" style={styles.form}>\r\n+          <div style={styles.formRow}>\r\n+            <div style={styles.formGroup}>\r\n+              <label style={styles.label}>First Name *</label>\r\n+              <input\r\n+                name=\"firstName\"\r\n+                type=\"text\"\r\n+                value={formData.firstName}\r\n+                onChange={handleInputChange}\r\n+                style={{ ...styles.input, borderColor: errors.firstName ? \"red\" : \"#e0e0e0\" }}\r\n+                required\r\n+              />\r\n+            </div>\r\n+            <div style={styles.formGroup}>\r\n+              <label style={styles.label}>Last Name *</label>\r\n+              <input\r\n+                name=\"lastName\"\r\n+                type=\"text\"\r\n+                value={formData.lastName}\r\n+                onChange={handleInputChange}\r\n+                style={{ ...styles.input, borderColor: errors.lastName ? \"red\" : \"#e0e0e0\" }}\r\n+                required\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div style={styles.formGroup}>\r\n+            <label style={styles.label}>Apartment, building, etc. (optional)</label>\r\n+            <input\r\n+              name=\"apartment\"\r\n+              type=\"text\"\r\n+              value={formData.apartment}\r\n+              onChange={handleInputChange}\r\n+              style={styles.input}\r\n+            />\r\n+          </div>\r\n+\r\n+          <div style={styles.formRow}>\r\n+            <div style={styles.formGroup}>\r\n+              <label style={styles.label}>Province/City *</label>\r\n+              <select\r\n+                value={selectedProvince}\r\n+                onChange={handleProvinceChange}\r\n+                style={{ ...styles.input, borderColor: errors.province ? \"red\" : \"#e0e0e0\" }}\r\n+                required\r\n+              >\r\n+                <option value=\"\">Chọn Tỉnh/Thành phố</option>\r\n+                {provinces.map((province) => (\r\n+                  <option key={province.code} value={province.code}>\r\n+                    {province.name}\r\n+                  </option>\r\n+                ))}\r\n+              </select>\r\n+            </div>\r\n+            <div style={styles.formGroup}>\r\n+              <label style={styles.label}>District/County *</label>\r\n+              <select\r\n+                value={selectedDistrict}\r\n+                onChange={handleDistrictChange}\r\n+                style={{ ...styles.input, borderColor: errors.district ? \"red\" : \"#e0e0e0\" }}\r\n+                required\r\n+                disabled={!selectedProvince}\r\n+              >\r\n+                <option value=\"\">Chọn Quận/Huyện</option>\r\n+                {districts.map((district) => (\r\n+                  <option key={district.code} value={district.code}>\r\n+                    {district.name}\r\n+                  </option>\r\n+                ))}\r\n+              </select>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div style={styles.formRow}>\r\n+            <div style={styles.formGroup}>\r\n+              <label style={styles.label}>Ward/Commune *</label>\r\n+              <select\r\n+                value={selectedWard}\r\n+                onChange={handleWardChange}\r\n+                style={{ ...styles.input, borderColor: errors.ward ? \"red\" : \"#e0e0e0\" }}\r\n+                required\r\n+                disabled={!selectedDistrict}\r\n+              >\r\n+                <option value=\"\">Chọn Phường/Xã</option>\r\n+                {wards.map((ward) => (\r\n+                  <option key={ward.code} value={ward.code}>\r\n+                    {ward.name}\r\n+                  </option>\r\n+                ))}\r\n+              </select>\r\n+            </div>\r\n+            <div style={styles.formGroup}>\r\n+              <label style={styles.label}>Phone *</label>\r\n+              <input\r\n+                name=\"phone\"\r\n+                type=\"tel\"\r\n+                value={formData.phone}\r\n+                onChange={handleInputChange}\r\n+                style={{ ...styles.input, borderColor: errors.phone ? \"red\" : \"#e0e0e0\" }}\r\n+                required\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {showAdditionalContact && (\r\n+            <div style={styles.formGroup}>\r\n+              <label style={styles.label}>Additional Phone (optional)</label>\r\n+              <input\r\n+                name=\"additionalPhone\"\r\n+                type=\"tel\"\r\n+                value={formData.additionalPhone}\r\n+                onChange={handleInputChange}\r\n+                style={styles.input}\r\n+              />\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Thêm các trường ẩn để lưu thông tin địa chỉ */}\r\n+          <input type=\"hidden\" name=\"ward\" value={selectedWardName} />\r\n+          <input type=\"hidden\" name=\"district\" value={selectedDistrictName} />\r\n+          <input type=\"hidden\" name=\"province\" value={selectedProvinceName} />\r\n+\r\n+          <button\r\n+            onClick={handleContinueToPayment}\r\n+            style={{\r\n+              ...styles.continueButton,\r\n+              textTransform: \"uppercase\"\r\n+            }}\r\n+            type=\"submit\"\r\n+          >\r\n+            Continue to Payment\r\n+          </button>\r\n+        </form>\r\n+      </div>\r\n+\r\n+      {showPaymentSection && (\r\n+        <div id=\"paymentSection\" style={styles.section}>\r\n+          <h2 style={styles.sectionTitle}>PAYMENT METHOD</h2>\r\n+          <div style={styles.paymentMethods}>\r\n+            <div\r\n+              style={{\r\n+                ...styles.paymentMethod,\r\n+                borderColor: paymentMethod === \"cod\" ? \"#000\" : \"#e0e0e0\",\r\n+              }}\r\n+              onClick={() => handlePaymentMethodChange(\"cod\")}\r\n+            >\r\n+              <div style={styles.paymentMethodHeader}>\r\n+                <input\r\n+                  type=\"radio\"\r\n+                  name=\"paymentMethod\"\r\n+                  checked={paymentMethod === \"cod\"}\r\n+                  onChange={() => handlePaymentMethodChange(\"cod\")}\r\n+                  style={styles.radio}\r\n+                />\r\n+                <label\r\n+                  style={{\r\n+                    ...styles.paymentMethodLabel,\r\n+                    fontSize: \"0.85em\",\r\n+                    ...(typeof window !== 'undefined' && window.innerWidth <= 768 ? { fontSize: \"12px\" } : {})\r\n+                  }}\r\n+                >\r\n+                  Cash on Delivery (COD)\r\n+                </label>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div\r\n+              style={{\r\n+                ...styles.paymentMethod,\r\n+                borderColor: paymentMethod === \"bank\" ? \"#000\" : \"#e0e0e0\",\r\n+              }}\r\n+              onClick={() => handlePaymentMethodChange(\"bank\")}\r\n+            >\r\n+              <div style={styles.paymentMethodHeader}>\r\n+                <input\r\n+                  type=\"radio\"\r\n+                  name=\"paymentMethod\"\r\n+                  checked={paymentMethod === \"bank\"}\r\n+                  onChange={() => handlePaymentMethodChange(\"bank\")}\r\n+                  style={styles.radio}\r\n+                />\r\n+                <label\r\n+                  style={{\r\n+                    ...styles.paymentMethodLabel,\r\n+                    fontSize: \"0.85em\",\r\n+                    ...(typeof window !== 'undefined' && window.innerWidth <= 768 ? { fontSize: \"12px\" } : {})\r\n+                  }}\r\n+                >\r\n+                  Bank Transfer\r\n+                </label>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {renderPaymentInfo()}\r\n+\r\n+          {paymentMethod && (\r\n+            <button\r\n+              onClick={handleCompleteOrder}\r\n+              className=\"w-full mt-4\"\r\n+              style={{\r\n+                ...styles.completeOrderButton,\r\n+                textTransform: \"uppercase\"\r\n+              }}\r\n+            >\r\n+              Complete Order\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+      )}\r\n+\r\n+      <OrderConfirmationModal\r\n+        isOpen={showConfirmationModal}\r\n+        onClose={() => setShowConfirmationModal(false)}\r\n+        orderDetails={orderDetails}\r\n+      />\r\n+    </div>\r\n+  );\r\n };\r\n \r\n+const styles = {\r\n+  leftSection: {\r\n+    flex: 2,\r\n+    backgroundColor: \"#ffffff\",\r\n+    padding: \"20px\",\r\n+    border: \"1px solid #e0e0e0\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  section: {\r\n+    marginBottom: \"30px\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  sectionTitle: {\r\n+    fontSize: \"1.1em\",\r\n+    fontWeight: \"bold\",\r\n+    marginBottom: \"15px\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  sectionText: {\r\n+    fontSize: \"0.85em\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  link: {\r\n+    color: \"#000000\",\r\n+    textDecoration: \"underline\",\r\n+    cursor: \"pointer\",\r\n+  },\r\n+  form: {\r\n+    display: \"flex\",\r\n+    flexDirection: \"column\",\r\n+    gap: \"15px\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  formRow: {\r\n+    display: \"flex\",\r\n+    gap: \"15px\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  formGroup: {\r\n+    flex: 1,\r\n+    color: \"#000000\",\r\n+  },\r\n+  label: {\r\n+    fontSize: \"0.85em\",\r\n+    marginBottom: \"5px\",\r\n+    display: \"block\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  input: {\r\n+    width: \"100%\",\r\n+    padding: \"10px\",\r\n+    fontSize: \"0.85em\",\r\n+    border: \"1px solid #e0e0e0\",\r\n+    borderRadius: \"4px\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  checkboxGroup: {\r\n+    display: \"flex\",\r\n+    alignItems: \"center\",\r\n+    gap: \"10px\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  checkbox: {\r\n+    width: \"20px\",\r\n+    height: \"20px\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  checkboxLabel: {\r\n+    fontSize: \"0.85em\",\r\n+    color: \"#000000\",\r\n+  },\r\n+  paymentMethods: {\r\n+    display: \"flex\",\r\n+    flexDirection: \"column\",\r\n+    gap: \"15px\",\r\n+    marginTop: \"20px\",\r\n+  },\r\n+  paymentMethod: {\r\n+    border: \"1px solid #e0e0e0\",\r\n+    borderRadius: \"4px\",\r\n+    padding: \"15px\",\r\n+    cursor: \"pointer\",\r\n+    transition: \"all 0.3s ease\",\r\n+  },\r\n+  paymentMethodHeader: {\r\n+    display: \"flex\",\r\n+    alignItems: \"center\",\r\n+    gap: \"10px\",\r\n+  },\r\n+  paymentMethodLabel: {\r\n+    fontSize: \"14px\",\r\n+    fontWeight: \"500\",\r\n+  },\r\n+  paymentMethodContent: {\r\n+    marginTop: \"15px\",\r\n+    paddingTop: \"15px\",\r\n+    borderTop: \"1px solid #e0e0e0\",\r\n+    fontSize: \"13px\",\r\n+    color: \"#666\",\r\n+  },\r\n+  radio: {\r\n+    width: \"18px\",\r\n+    height: \"18px\",\r\n+    cursor: \"pointer\",\r\n+  },\r\n+  bankInfo: {\r\n+    fontWeight: \"500\",\r\n+    marginBottom: \"10px\",\r\n+  },\r\n+  completeOrderButton: {\r\n+    width: \"100%\",\r\n+    padding: \"15px\",\r\n+    backgroundColor: \"#000\",\r\n+    color: \"#fff\",\r\n+    border: \"none\",\r\n+    cursor: \"pointer\",\r\n+    fontSize: \"14px\",\r\n+    fontWeight: \"500\",\r\n+    marginTop: \"20px\",\r\n+    transition: \"background-color 0.3s ease\",\r\n+  },\r\n+  continueButton: {\r\n+    width: \"100%\",\r\n+    padding: \"15px\",\r\n+    backgroundColor: \"#000\",\r\n+    color: \"#fff\",\r\n+    border: \"none\",\r\n+    cursor: \"pointer\",\r\n+    fontSize: \"14px\",\r\n+    fontWeight: \"500\",\r\n+    marginTop: \"20px\",\r\n+    transition: \"background-color 0.3s ease\",\r\n+  },\r\n+};\r\n+\r\n export default ShippingPageComponent; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747801442849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n   const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n   const [showPaymentSection, setShowPaymentSection] = useState(false);\r\n   const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n   const [orderDetails, setOrderDetails] = useState(null);\r\n+  const [showAdditionalContact, setShowAdditionalContact] = useState(false);\r\n   const [formData, setFormData] = useState({\r\n     firstName: \"\",\r\n     lastName: \"\",\r\n     address: \"\",\r\n"
                }
            ],
            "date": 1747801087983,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useVietnameseAddress } from \"../../../hooks/useVietnameseAddress\";\r\nimport OrderConfirmationModal from \"../../../components/OrderConfirmationModal\";\r\n\r\nconst ShippingPageComponent = ({\r\n  userEmail: propUserEmail,\r\n  isShippingComplete,\r\n  showAdditionalContact,\r\n  showPaymentDetails,\r\n  errors = {},\r\n  handleShippingComplete,\r\n  handleAdditionalContactToggle,\r\n  order = { items: [], promoCode: null, promoAmount: 0 },\r\n}) => {\r\n  // ... giữ nguyên toàn bộ code trong component cũ ...\r\n// ... (copy toàn bộ code trong component ShippingPage ở file page.js vào đây, trừ export default) ...\r\n};\r\n\r\nexport default ShippingPageComponent; "
        }
    ]
}
{
    "sourceFile": "src/app/checkout/summary/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1747638254761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747638860683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n \"use client\";\r\n import { useState, useEffect } from \"react\";\r\n import { useCart } from \"../../../context/CartContext\";\r\n+import { CSSProperties } from \"react\";\r\n \r\n interface OrderItem {\r\n   name: string;\r\n   price: string | number;\r\n@@ -16,8 +17,24 @@\n   promoCode?: string;\r\n   promoAmount?: number;\r\n }\r\n \r\n+interface Styles {\r\n+  rightSection: CSSProperties;\r\n+  orderSummary: CSSProperties;\r\n+  sectionTitle: CSSProperties;\r\n+  orderItem: CSSProperties;\r\n+  orderImage: CSSProperties;\r\n+  orderItemDetails: CSSProperties;\r\n+  orderDetailRow: CSSProperties;\r\n+  orderTotals: CSSProperties;\r\n+  orderTotalRow: CSSProperties;\r\n+  viewDetailsSection: CSSProperties;\r\n+  viewDetails: CSSProperties;\r\n+  billingNote: CSSProperties;\r\n+  helpSection: CSSProperties;\r\n+}\r\n+\r\n export default function OrderSummary() {\r\n   const { cartItems } = useCart();\r\n   const [isMounted, setIsMounted] = useState(false);\r\n   const [promoCode, setPromoCode] = useState(\"\");\r\n@@ -207,9 +224,9 @@\n     </div>\r\n   );\r\n }\r\n \r\n-const styles = {\r\n+const styles: Styles = {\r\n   rightSection: {\r\n     flex: 1,\r\n     backgroundColor: \"#ffffff\",\r\n     padding: \"15px\",\r\n"
                },
                {
                    "date": 1748617512557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,22 @@\n     } else {\r\n       // Nếu không có order, tạo order từ cartItems\r\n       setOrder({ items: cartItems });\r\n     }\r\n+\r\n+    // Lấy mã giảm giá đã áp dụng từ localStorage\r\n+    const savedPromoCode = localStorage.getItem('appliedPromoCode');\r\n+    const savedPromoAmount = localStorage.getItem('promoAmount');\r\n+\r\n+    if (savedPromoCode && savedPromoAmount) {\r\n+      setAppliedPromoCode(savedPromoCode);\r\n+      setPromoAmount(parseFloat(savedPromoAmount));\r\n+      setPromoMessage(`Mã giảm giá ${parseFloat(savedPromoAmount).toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n+       if (order) {\r\n+            setOrder(prevOrder => ({ ...prevOrder!, promoCode: savedPromoCode, promoAmount: parseFloat(savedPromoAmount) }));\r\n+          }\r\n+    }\r\n+\r\n   }, [cartItems]);\r\n \r\n   const handleApplyPromoCode = async () => {\r\n     setPromoMessage(\"\");\r\n@@ -75,10 +89,14 @@\n           setPromoAmount(foundPromo.amount);\r\n           setAppliedPromoCode(foundPromo.code);\r\n           setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n           setPromoCode(\"\");\r\n+          // Lưu vào localStorage\r\n+          localStorage.setItem('appliedPromoCode', foundPromo.code);\r\n+          localStorage.setItem('promoAmount', foundPromo.amount.toString());\r\n+\r\n           if (order) {\r\n-            setOrder({ ...order, promoCode: foundPromo.code, promoAmount: foundPromo.amount });\r\n+            setOrder(prevOrder => ({ ...prevOrder!, promoCode: foundPromo.code, promoAmount: foundPromo.amount }));\r\n           }\r\n         } else {\r\n           setPromoMessage(\"Invalid or expired promo code\");\r\n         }\r\n@@ -97,9 +115,11 @@\n       const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n       const price = parseFloat(priceStr as string) || 0;\r\n       return total + (price * item.quantity);\r\n     }, 0);\r\n-    return subtotal - (order.promoAmount || promoAmount);\r\n+    // Sử dụng promoAmount từ state component hoặc từ order state nếu có\r\n+    const currentPromoAmount = order.promoAmount !== undefined ? order.promoAmount : promoAmount;\r\n+    return subtotal - currentPromoAmount;\r\n   };\r\n \r\n   if (!isMounted || !order) return null;\r\n \r\n@@ -142,13 +162,13 @@\n             </div>\r\n           );\r\n         })}\r\n         <div style={styles.orderTotals}>\r\n-          {(order.promoAmount || promoAmount) > 0 ? (\r\n+          {(order.promoAmount !== undefined && order.promoAmount > 0) || promoAmount > 0 ? (\r\n             <>\r\n               <div style={styles.orderTotalRow}>\r\n                 <span>Promo Code</span>\r\n-                <span>- {(order.promoAmount || promoAmount).toLocaleString('vi-VN')} VND</span>\r\n+                <span>- {(order.promoAmount !== undefined ? order.promoAmount : promoAmount).toLocaleString('vi-VN')} VND</span>\r\n               </div>\r\n               <div style={{ \r\n                 fontSize: \"0.7em\", \r\n                 color: \"#059669\",\r\n"
                },
                {
                    "date": 1748618309038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,44 +76,77 @@\n       return;\r\n     }\r\n \r\n     try {\r\n-      const response = await fetch(\"/api/admin/notifications\");\r\n+       // Tính toán subtotal hiện tại từ cartItems\r\n+       const currentSubtotal = cartItems.reduce((total, item) => {\r\n+         const priceStr = typeof item.price === 'string' ? item.price.replace(/[^0-9.-]+/g, '') : item.price;\r\n+         const price = parseFloat(priceStr as string) || 0;\r\n+         return total + (price * item.quantity);\r\n+       }, 0);\r\n+\r\n+       // Lấy thông tin session người dùng\r\n+       // session được lấy ở ngoài component, có thể truy cập trực tiếp\r\n+\r\n+      const response = await fetch(\"/api/promo\", { // Gọi API mới\r\n+         method: 'POST',\r\n+         headers: { 'Content-Type': 'application/json' },\r\n+         body: JSON.stringify({ \r\n+            code: promoCode,\r\n+            subtotal: currentSubtotal,\r\n+            // Thông tin người dùng (email) sẽ được API tự lấy từ session\r\n+          })\r\n+      });\r\n+\r\n       const data = await response.json();\r\n       \r\n-      if (data.ok && data.promoCodes) {\r\n-        const foundPromo = data.promoCodes.find(\r\n-          (promo: any) => promo.code.toLowerCase() === promoCode.toLowerCase() && promo.isActive\r\n-        );\r\n-        \r\n-        if (foundPromo) {\r\n-          setPromoAmount(foundPromo.amount);\r\n-          setAppliedPromoCode(foundPromo.code);\r\n-          setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n-          setPromoCode(\"\");\r\n-          // Lưu vào localStorage\r\n-          localStorage.setItem('appliedPromoCode', foundPromo.code);\r\n-          localStorage.setItem('promoAmount', foundPromo.amount.toString());\r\n+      if (data.ok) {\r\n+        setPromoAmount(data.promoAmount); // Sử dụng promoAmount từ API\r\n+        setAppliedPromoCode(data.promoCode); // Sử dụng promoCode từ API\r\n+        setPromoMessage(data.message); // Sử dụng message từ API\r\n+        setPromoCode(\"\");\r\n+        // Lưu vào localStorage\r\n+        localStorage.setItem('appliedPromoCode', data.promoCode);\r\n+        localStorage.setItem('promoAmount', data.promoAmount.toString());\r\n \r\n-          if (order) {\r\n-            setOrder(prevOrder => ({ ...prevOrder!, promoCode: foundPromo.code, promoAmount: foundPromo.amount }));\r\n+        if (order) {\r\n+           // Cập nhật order state với thông tin mã giảm giá mới\r\n+           setOrder(prevOrder => ({\r\n+             ...prevOrder!,\r\n+             promoCode: data.promoCode,\r\n+             promoAmount: data.promoAmount\r\n+           }));\r\n+         }\r\n+      } else {\r\n+        // Hiển thị thông báo lỗi từ API\r\n+        setPromoMessage(data.message || \"Unable to apply promo code\");\r\n+         // Xóa thông tin mã giảm giá cũ nếu có lỗi mới\r\n+         localStorage.removeItem('appliedPromoCode');\r\n+         localStorage.removeItem('promoAmount');\r\n+         setAppliedPromoCode(\"\");\r\n+         setPromoAmount(0);\r\n+         if (order) {\r\n+            setOrder(prevOrder => ({ ...prevOrder!, promoCode: undefined, promoAmount: 0 }));\r\n           }\r\n-        } else {\r\n-          setPromoMessage(\"Invalid or expired promo code\");\r\n-        }\r\n-      } else {\r\n-        setPromoMessage(\"Unable to check promo code\");\r\n       }\r\n     } catch (error) {\r\n       console.error(\"Error applying promo code:\", error);\r\n       setPromoMessage(\"An error occurred while applying the promo code\");\r\n+       // Xóa thông tin mã giảm giá cũ nếu có lỗi\r\n+       localStorage.removeItem('appliedPromoCode');\r\n+       localStorage.removeItem('promoAmount');\r\n+       setAppliedPromoCode(\"\");\r\n+       setPromoAmount(0);\r\n+       if (order) {\r\n+          setOrder(prevOrder => ({ ...prevOrder!, promoCode: undefined, promoAmount: 0 }));\r\n+        }\r\n     }\r\n   };\r\n \r\n   const calculateTotal = () => {\r\n     if (!order) return 0;\r\n     const subtotal = order.items.reduce((total, item) => {\r\n-      const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n+      const priceStr = typeof item.price === 'string' ? item.price.replace(/[^0-9.-]+/g, '') : item.price;\r\n       const price = parseFloat(priceStr as string) || 0;\r\n       return total + (price * item.quantity);\r\n     }, 0);\r\n     // Sử dụng promoAmount từ state component hoặc từ order state nếu có\r\n"
                },
                {
                    "date": 1748618320623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     }\r\n \r\n     try {\r\n        // Tính toán subtotal hiện tại từ cartItems\r\n-       const currentSubtotal = cartItems.reduce((total, item) => {\r\n+       const currentSubtotal = cartItems.reduce((total: number, item: OrderItem) => {\r\n          const priceStr = typeof item.price === 'string' ? item.price.replace(/[^0-9.-]+/g, '') : item.price;\r\n          const price = parseFloat(priceStr as string) || 0;\r\n          return total + (price * item.quantity);\r\n        }, 0);\r\n@@ -143,9 +143,9 @@\n   };\r\n \r\n   const calculateTotal = () => {\r\n     if (!order) return 0;\r\n-    const subtotal = order.items.reduce((total, item) => {\r\n+    const subtotal = order.items.reduce((total: number, item: OrderItem) => {\r\n       const priceStr = typeof item.price === 'string' ? item.price.replace(/[^0-9.-]+/g, '') : item.price;\r\n       const price = parseFloat(priceStr as string) || 0;\r\n       return total + (price * item.quantity);\r\n     }, 0);\r\n"
                },
                {
                    "date": 1748618425908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,77 +76,44 @@\n       return;\r\n     }\r\n \r\n     try {\r\n-       // Tính toán subtotal hiện tại từ cartItems\r\n-       const currentSubtotal = cartItems.reduce((total: number, item: OrderItem) => {\r\n-         const priceStr = typeof item.price === 'string' ? item.price.replace(/[^0-9.-]+/g, '') : item.price;\r\n-         const price = parseFloat(priceStr as string) || 0;\r\n-         return total + (price * item.quantity);\r\n-       }, 0);\r\n-\r\n-       // Lấy thông tin session người dùng\r\n-       // session được lấy ở ngoài component, có thể truy cập trực tiếp\r\n-\r\n-      const response = await fetch(\"/api/promo\", { // Gọi API mới\r\n-         method: 'POST',\r\n-         headers: { 'Content-Type': 'application/json' },\r\n-         body: JSON.stringify({ \r\n-            code: promoCode,\r\n-            subtotal: currentSubtotal,\r\n-            // Thông tin người dùng (email) sẽ được API tự lấy từ session\r\n-          })\r\n-      });\r\n-\r\n+      const response = await fetch(\"/api/admin/notifications\");\r\n       const data = await response.json();\r\n       \r\n-      if (data.ok) {\r\n-        setPromoAmount(data.promoAmount); // Sử dụng promoAmount từ API\r\n-        setAppliedPromoCode(data.promoCode); // Sử dụng promoCode từ API\r\n-        setPromoMessage(data.message); // Sử dụng message từ API\r\n-        setPromoCode(\"\");\r\n-        // Lưu vào localStorage\r\n-        localStorage.setItem('appliedPromoCode', data.promoCode);\r\n-        localStorage.setItem('promoAmount', data.promoAmount.toString());\r\n+      if (data.ok && data.promoCodes) {\r\n+        const foundPromo = data.promoCodes.find(\r\n+          (promo: any) => promo.code.toLowerCase() === promoCode.toLowerCase() && promo.isActive\r\n+        );\r\n+        \r\n+        if (foundPromo) {\r\n+          setPromoAmount(foundPromo.amount);\r\n+          setAppliedPromoCode(foundPromo.code);\r\n+          setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n+          setPromoCode(\"\");\r\n+          // Lưu vào localStorage\r\n+          localStorage.setItem('appliedPromoCode', foundPromo.code);\r\n+          localStorage.setItem('promoAmount', foundPromo.amount.toString());\r\n \r\n-        if (order) {\r\n-           // Cập nhật order state với thông tin mã giảm giá mới\r\n-           setOrder(prevOrder => ({\r\n-             ...prevOrder!,\r\n-             promoCode: data.promoCode,\r\n-             promoAmount: data.promoAmount\r\n-           }));\r\n-         }\r\n+          if (order) {\r\n+            setOrder(prevOrder => ({ ...prevOrder!, promoCode: foundPromo.code, promoAmount: foundPromo.amount }));\r\n+          }\r\n+        } else {\r\n+          setPromoMessage(\"Invalid or expired promo code\");\r\n+        }\r\n       } else {\r\n-        // Hiển thị thông báo lỗi từ API\r\n-        setPromoMessage(data.message || \"Unable to apply promo code\");\r\n-         // Xóa thông tin mã giảm giá cũ nếu có lỗi mới\r\n-         localStorage.removeItem('appliedPromoCode');\r\n-         localStorage.removeItem('promoAmount');\r\n-         setAppliedPromoCode(\"\");\r\n-         setPromoAmount(0);\r\n-         if (order) {\r\n-            setOrder(prevOrder => ({ ...prevOrder!, promoCode: undefined, promoAmount: 0 }));\r\n-          }\r\n+        setPromoMessage(\"Unable to check promo code\");\r\n       }\r\n     } catch (error) {\r\n       console.error(\"Error applying promo code:\", error);\r\n       setPromoMessage(\"An error occurred while applying the promo code\");\r\n-       // Xóa thông tin mã giảm giá cũ nếu có lỗi\r\n-       localStorage.removeItem('appliedPromoCode');\r\n-       localStorage.removeItem('promoAmount');\r\n-       setAppliedPromoCode(\"\");\r\n-       setPromoAmount(0);\r\n-       if (order) {\r\n-          setOrder(prevOrder => ({ ...prevOrder!, promoCode: undefined, promoAmount: 0 }));\r\n-        }\r\n     }\r\n   };\r\n \r\n   const calculateTotal = () => {\r\n     if (!order) return 0;\r\n-    const subtotal = order.items.reduce((total: number, item: OrderItem) => {\r\n-      const priceStr = typeof item.price === 'string' ? item.price.replace(/[^0-9.-]+/g, '') : item.price;\r\n+    const subtotal = order.items.reduce((total, item) => {\r\n+      const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n       const price = parseFloat(priceStr as string) || 0;\r\n       return total + (price * item.quantity);\r\n     }, 0);\r\n     // Sử dụng promoAmount từ state component hoặc từ order state nếu có\r\n"
                },
                {
                    "date": 1748619364364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,11 @@\n   const [promoMessage, setPromoMessage] = useState(\"\");\r\n   const [promoAmount, setPromoAmount] = useState(0);\r\n   const [appliedPromoCode, setAppliedPromoCode] = useState(\"\");\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n+  const [promoError, setPromoError] = useState(\"\");\r\n+  const [promoSuccess, setPromoSuccess] = useState(\"\");\r\n+  const [discountAmount, setDiscountAmount] = useState(0);\r\n \r\n   useEffect(() => {\r\n     setIsMounted(true);\r\n     // Lấy order từ localStorage nếu có\r\n@@ -69,44 +72,42 @@\n \r\n   }, [cartItems]);\r\n \r\n   const handleApplyPromoCode = async () => {\r\n-    setPromoMessage(\"\");\r\n-    if (!promoCode.trim()) {\r\n-      setPromoMessage(\"Please enter a promo code\");\r\n-      return;\r\n-    }\r\n+    try {\r\n+      setPromoError('');\r\n+      setPromoSuccess('');\r\n \r\n-    try {\r\n-      const response = await fetch(\"/api/admin/notifications\");\r\n+      if (!promoCode.trim()) {\r\n+        setPromoError('Vui lòng nhập mã giảm giá');\r\n+        return;\r\n+      }\r\n+\r\n+      const response = await fetch('/api/apply-promo', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          code: promoCode.trim(),\r\n+          totalAmount: totalAmount\r\n+        }),\r\n+      });\r\n+\r\n       const data = await response.json();\r\n-      \r\n-      if (data.ok && data.promoCodes) {\r\n-        const foundPromo = data.promoCodes.find(\r\n-          (promo: any) => promo.code.toLowerCase() === promoCode.toLowerCase() && promo.isActive\r\n-        );\r\n-        \r\n-        if (foundPromo) {\r\n-          setPromoAmount(foundPromo.amount);\r\n-          setAppliedPromoCode(foundPromo.code);\r\n-          setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n-          setPromoCode(\"\");\r\n-          // Lưu vào localStorage\r\n-          localStorage.setItem('appliedPromoCode', foundPromo.code);\r\n-          localStorage.setItem('promoAmount', foundPromo.amount.toString());\r\n \r\n-          if (order) {\r\n-            setOrder(prevOrder => ({ ...prevOrder!, promoCode: foundPromo.code, promoAmount: foundPromo.amount }));\r\n-          }\r\n-        } else {\r\n-          setPromoMessage(\"Invalid or expired promo code\");\r\n-        }\r\n-      } else {\r\n-        setPromoMessage(\"Unable to check promo code\");\r\n+      if (!data.ok) {\r\n+        setPromoError(data.message);\r\n+        return;\r\n       }\r\n+\r\n+      setPromoSuccess('Áp dụng mã giảm giá thành công!');\r\n+      setDiscountAmount(data.discountAmount);\r\n+      setAppliedPromoCode(data.promoCode);\r\n+      setPromoCode(''); // Xóa mã sau khi áp dụng thành công\r\n     } catch (error) {\r\n-      console.error(\"Error applying promo code:\", error);\r\n-      setPromoMessage(\"An error occurred while applying the promo code\");\r\n+      console.error('Error applying promo code:', error);\r\n+      setPromoError('Có lỗi xảy ra khi áp dụng mã giảm giá');\r\n     }\r\n   };\r\n \r\n   const calculateTotal = () => {\r\n@@ -240,8 +241,21 @@\n         <p style={{ marginBottom: \"10px\", fontWeight: \"bold\" }}>MAY WE HELP?</p>\r\n         <p style={{ marginBottom: \"10px\" }}>0347272386</p>\r\n         <p style={{ marginBottom: \"10px\" }}>aish.aish.vn@gmail.com</p>\r\n       </div>\r\n+      {/* Hiển thị thông tin mã giảm giá đã áp dụng */}\r\n+      {appliedPromoCode && (\r\n+        <div className=\"mt-2 text-sm\">\r\n+          <p className=\"text-green-600\">\r\n+            Mã giảm giá: {appliedPromoCode.code}\r\n+            {appliedPromoCode.type === 'fixed' ? (\r\n+              ` (Giảm ${appliedPromoCode.value.toLocaleString()}₫)`\r\n+            ) : (\r\n+              ` (Giảm ${appliedPromoCode.value}%${appliedPromoCode.maxAmount ? ` tối đa ${appliedPromoCode.maxAmount.toLocaleString()}₫` : ''})`\r\n+            )}\r\n+          </p>\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1748619387260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,11 +41,8 @@\n   const [promoMessage, setPromoMessage] = useState(\"\");\r\n   const [promoAmount, setPromoAmount] = useState(0);\r\n   const [appliedPromoCode, setAppliedPromoCode] = useState(\"\");\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n-  const [promoError, setPromoError] = useState(\"\");\r\n-  const [promoSuccess, setPromoSuccess] = useState(\"\");\r\n-  const [discountAmount, setDiscountAmount] = useState(0);\r\n \r\n   useEffect(() => {\r\n     setIsMounted(true);\r\n     // Lấy order từ localStorage nếu có\r\n@@ -72,42 +69,44 @@\n \r\n   }, [cartItems]);\r\n \r\n   const handleApplyPromoCode = async () => {\r\n+    setPromoMessage(\"\");\r\n+    if (!promoCode.trim()) {\r\n+      setPromoMessage(\"Please enter a promo code\");\r\n+      return;\r\n+    }\r\n+\r\n     try {\r\n-      setPromoError('');\r\n-      setPromoSuccess('');\r\n-\r\n-      if (!promoCode.trim()) {\r\n-        setPromoError('Vui lòng nhập mã giảm giá');\r\n-        return;\r\n-      }\r\n-\r\n-      const response = await fetch('/api/apply-promo', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify({\r\n-          code: promoCode.trim(),\r\n-          totalAmount: totalAmount\r\n-        }),\r\n-      });\r\n-\r\n+      const response = await fetch(\"/api/admin/notifications\");\r\n       const data = await response.json();\r\n+      \r\n+      if (data.ok && data.promoCodes) {\r\n+        const foundPromo = data.promoCodes.find(\r\n+          (promo: any) => promo.code.toLowerCase() === promoCode.toLowerCase() && promo.isActive\r\n+        );\r\n+        \r\n+        if (foundPromo) {\r\n+          setPromoAmount(foundPromo.amount);\r\n+          setAppliedPromoCode(foundPromo.code);\r\n+          setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n+          setPromoCode(\"\");\r\n+          // Lưu vào localStorage\r\n+          localStorage.setItem('appliedPromoCode', foundPromo.code);\r\n+          localStorage.setItem('promoAmount', foundPromo.amount.toString());\r\n \r\n-      if (!data.ok) {\r\n-        setPromoError(data.message);\r\n-        return;\r\n+          if (order) {\r\n+            setOrder(prevOrder => ({ ...prevOrder!, promoCode: foundPromo.code, promoAmount: foundPromo.amount }));\r\n+          }\r\n+        } else {\r\n+          setPromoMessage(\"Invalid or expired promo code\");\r\n+        }\r\n+      } else {\r\n+        setPromoMessage(\"Unable to check promo code\");\r\n       }\r\n-\r\n-      setPromoSuccess('Áp dụng mã giảm giá thành công!');\r\n-      setDiscountAmount(data.discountAmount);\r\n-      setAppliedPromoCode(data.promoCode);\r\n-      setPromoCode(''); // Xóa mã sau khi áp dụng thành công\r\n     } catch (error) {\r\n-      console.error('Error applying promo code:', error);\r\n-      setPromoError('Có lỗi xảy ra khi áp dụng mã giảm giá');\r\n+      console.error(\"Error applying promo code:\", error);\r\n+      setPromoMessage(\"An error occurred while applying the promo code\");\r\n     }\r\n   };\r\n \r\n   const calculateTotal = () => {\r\n@@ -241,21 +240,8 @@\n         <p style={{ marginBottom: \"10px\", fontWeight: \"bold\" }}>MAY WE HELP?</p>\r\n         <p style={{ marginBottom: \"10px\" }}>0347272386</p>\r\n         <p style={{ marginBottom: \"10px\" }}>aish.aish.vn@gmail.com</p>\r\n       </div>\r\n-      {/* Hiển thị thông tin mã giảm giá đã áp dụng */}\r\n-      {appliedPromoCode && (\r\n-        <div className=\"mt-2 text-sm\">\r\n-          <p className=\"text-green-600\">\r\n-            Mã giảm giá: {appliedPromoCode.code}\r\n-            {appliedPromoCode.type === 'fixed' ? (\r\n-              ` (Giảm ${appliedPromoCode.value.toLocaleString()}₫)`\r\n-            ) : (\r\n-              ` (Giảm ${appliedPromoCode.value}%${appliedPromoCode.maxAmount ? ` tối đa ${appliedPromoCode.maxAmount.toLocaleString()}₫` : ''})`\r\n-            )}\r\n-          </p>\r\n-        </div>\r\n-      )}\r\n     </div>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1748619440531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,22 @@\n   color?: string;\r\n   size?: string;\r\n }\r\n \r\n+interface PromoCode {\r\n+  id: string;\r\n+  code: string;\r\n+  type: 'fixed' | 'percentage';\r\n+  value: number;\r\n+  maxAmount?: number;\r\n+  isLoginRequired: boolean;\r\n+  perUserLimit: number;\r\n+  expiryDate?: string;\r\n+}\r\n+\r\n interface Order {\r\n   items: OrderItem[];\r\n-  promoCode?: string;\r\n+  promoCode?: PromoCode;\r\n   promoAmount?: number;\r\n }\r\n \r\n interface Styles {\r\n@@ -39,9 +50,9 @@\n   const [isMounted, setIsMounted] = useState(false);\r\n   const [promoCode, setPromoCode] = useState(\"\");\r\n   const [promoMessage, setPromoMessage] = useState(\"\");\r\n   const [promoAmount, setPromoAmount] = useState(0);\r\n-  const [appliedPromoCode, setAppliedPromoCode] = useState(\"\");\r\n+  const [appliedPromoCode, setAppliedPromoCode] = useState<PromoCode | null>(null);\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n \r\n   useEffect(() => {\r\n     setIsMounted(true);\r\n@@ -58,55 +69,67 @@\n     const savedPromoCode = localStorage.getItem('appliedPromoCode');\r\n     const savedPromoAmount = localStorage.getItem('promoAmount');\r\n \r\n     if (savedPromoCode && savedPromoAmount) {\r\n-      setAppliedPromoCode(savedPromoCode);\r\n+      const parsedPromoCode = JSON.parse(savedPromoCode);\r\n+      setAppliedPromoCode(parsedPromoCode);\r\n       setPromoAmount(parseFloat(savedPromoAmount));\r\n       setPromoMessage(`Mã giảm giá ${parseFloat(savedPromoAmount).toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n-       if (order) {\r\n-            setOrder(prevOrder => ({ ...prevOrder!, promoCode: savedPromoCode, promoAmount: parseFloat(savedPromoAmount) }));\r\n-          }\r\n+      if (order) {\r\n+        setOrder(prevOrder => ({ \r\n+          ...prevOrder!, \r\n+          promoCode: parsedPromoCode, \r\n+          promoAmount: parseFloat(savedPromoAmount) \r\n+        }));\r\n+      }\r\n     }\r\n-\r\n   }, [cartItems]);\r\n \r\n   const handleApplyPromoCode = async () => {\r\n     setPromoMessage(\"\");\r\n     if (!promoCode.trim()) {\r\n-      setPromoMessage(\"Please enter a promo code\");\r\n+      setPromoMessage(\"Vui lòng nhập mã giảm giá\");\r\n       return;\r\n     }\r\n \r\n     try {\r\n-      const response = await fetch(\"/api/admin/notifications\");\r\n+      const response = await fetch(\"/api/apply-promo\", {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          code: promoCode.trim(),\r\n+          totalAmount: calculateTotal()\r\n+        }),\r\n+      });\r\n+\r\n       const data = await response.json();\r\n-      \r\n-      if (data.ok && data.promoCodes) {\r\n-        const foundPromo = data.promoCodes.find(\r\n-          (promo: any) => promo.code.toLowerCase() === promoCode.toLowerCase() && promo.isActive\r\n-        );\r\n-        \r\n-        if (foundPromo) {\r\n-          setPromoAmount(foundPromo.amount);\r\n-          setAppliedPromoCode(foundPromo.code);\r\n-          setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n-          setPromoCode(\"\");\r\n-          // Lưu vào localStorage\r\n-          localStorage.setItem('appliedPromoCode', foundPromo.code);\r\n-          localStorage.setItem('promoAmount', foundPromo.amount.toString());\r\n \r\n-          if (order) {\r\n-            setOrder(prevOrder => ({ ...prevOrder!, promoCode: foundPromo.code, promoAmount: foundPromo.amount }));\r\n-          }\r\n-        } else {\r\n-          setPromoMessage(\"Invalid or expired promo code\");\r\n-        }\r\n-      } else {\r\n-        setPromoMessage(\"Unable to check promo code\");\r\n+      if (!data.ok) {\r\n+        setPromoMessage(data.message);\r\n+        return;\r\n       }\r\n+\r\n+      setPromoAmount(data.discountAmount);\r\n+      setAppliedPromoCode(data.promoCode);\r\n+      setPromoMessage(`Mã giảm giá ${data.discountAmount.toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n+      setPromoCode(\"\");\r\n+\r\n+      // Lưu vào localStorage\r\n+      localStorage.setItem('appliedPromoCode', JSON.stringify(data.promoCode));\r\n+      localStorage.setItem('promoAmount', data.discountAmount.toString());\r\n+\r\n+      if (order) {\r\n+        setOrder(prevOrder => ({ \r\n+          ...prevOrder!, \r\n+          promoCode: data.promoCode, \r\n+          promoAmount: data.discountAmount \r\n+        }));\r\n+      }\r\n     } catch (error) {\r\n       console.error(\"Error applying promo code:\", error);\r\n-      setPromoMessage(\"An error occurred while applying the promo code\");\r\n+      setPromoMessage(\"Có lỗi xảy ra khi áp dụng mã giảm giá\");\r\n     }\r\n   };\r\n \r\n   const calculateTotal = () => {\r\n@@ -165,18 +188,28 @@\n         <div style={styles.orderTotals}>\r\n           {(order.promoAmount !== undefined && order.promoAmount > 0) || promoAmount > 0 ? (\r\n             <>\r\n               <div style={styles.orderTotalRow}>\r\n-                <span>Promo Code</span>\r\n+                <span>Mã giảm giá</span>\r\n                 <span>- {(order.promoAmount !== undefined ? order.promoAmount : promoAmount).toLocaleString('vi-VN')} VND</span>\r\n               </div>\r\n               <div style={{ \r\n                 fontSize: \"0.7em\", \r\n                 color: \"#059669\",\r\n                 marginBottom: \"10px\",\r\n                 textAlign: \"right\"\r\n               }}>\r\n-                Promo code has been applied\r\n+                {appliedPromoCode && (\r\n+                  <div>\r\n+                    <p>Mã: {appliedPromoCode.code}</p>\r\n+                    <p>\r\n+                      {appliedPromoCode.type === 'fixed' \r\n+                        ? `Giảm ${appliedPromoCode.value.toLocaleString()}₫`\r\n+                        : `Giảm ${appliedPromoCode.value}%${appliedPromoCode.maxAmount ? ` (tối đa ${appliedPromoCode.maxAmount.toLocaleString()}₫)` : ''}`\r\n+                      }\r\n+                    </p>\r\n+                  </div>\r\n+                )}\r\n               </div>\r\n             </>\r\n           ) : (\r\n             <div style={{ marginBottom: \"15px\" }}>\r\n@@ -187,9 +220,9 @@\n                   onChange={(e) => {\r\n                     setPromoCode(e.target.value);\r\n                     if (promoMessage) setPromoMessage(\"\");\r\n                   }}\r\n-                  placeholder=\"Enter promo code\"\r\n+                  placeholder=\"Nhập mã giảm giá\"\r\n                   style={{\r\n                     flex: 1,\r\n                     padding: \"8px\",\r\n                     fontSize: \"0.7em\",\r\n@@ -206,9 +239,9 @@\n                     border: \"none\",\r\n                     cursor: \"pointer\",\r\n                   }}\r\n                 >\r\n-                  Apply\r\n+                  Áp dụng\r\n                 </button>\r\n               </div>\r\n               {promoMessage && (\r\n                 <p style={{\r\n"
                },
                {
                    "date": 1748619476376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,22 +11,11 @@\n   color?: string;\r\n   size?: string;\r\n }\r\n \r\n-interface PromoCode {\r\n-  id: string;\r\n-  code: string;\r\n-  type: 'fixed' | 'percentage';\r\n-  value: number;\r\n-  maxAmount?: number;\r\n-  isLoginRequired: boolean;\r\n-  perUserLimit: number;\r\n-  expiryDate?: string;\r\n-}\r\n-\r\n interface Order {\r\n   items: OrderItem[];\r\n-  promoCode?: PromoCode;\r\n+  promoCode?: string;\r\n   promoAmount?: number;\r\n }\r\n \r\n interface Styles {\r\n@@ -50,9 +39,9 @@\n   const [isMounted, setIsMounted] = useState(false);\r\n   const [promoCode, setPromoCode] = useState(\"\");\r\n   const [promoMessage, setPromoMessage] = useState(\"\");\r\n   const [promoAmount, setPromoAmount] = useState(0);\r\n-  const [appliedPromoCode, setAppliedPromoCode] = useState<PromoCode | null>(null);\r\n+  const [appliedPromoCode, setAppliedPromoCode] = useState(\"\");\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n \r\n   useEffect(() => {\r\n     setIsMounted(true);\r\n@@ -69,67 +58,55 @@\n     const savedPromoCode = localStorage.getItem('appliedPromoCode');\r\n     const savedPromoAmount = localStorage.getItem('promoAmount');\r\n \r\n     if (savedPromoCode && savedPromoAmount) {\r\n-      const parsedPromoCode = JSON.parse(savedPromoCode);\r\n-      setAppliedPromoCode(parsedPromoCode);\r\n+      setAppliedPromoCode(savedPromoCode);\r\n       setPromoAmount(parseFloat(savedPromoAmount));\r\n       setPromoMessage(`Mã giảm giá ${parseFloat(savedPromoAmount).toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n-      if (order) {\r\n-        setOrder(prevOrder => ({ \r\n-          ...prevOrder!, \r\n-          promoCode: parsedPromoCode, \r\n-          promoAmount: parseFloat(savedPromoAmount) \r\n-        }));\r\n-      }\r\n+       if (order) {\r\n+            setOrder(prevOrder => ({ ...prevOrder!, promoCode: savedPromoCode, promoAmount: parseFloat(savedPromoAmount) }));\r\n+          }\r\n     }\r\n+\r\n   }, [cartItems]);\r\n \r\n   const handleApplyPromoCode = async () => {\r\n     setPromoMessage(\"\");\r\n     if (!promoCode.trim()) {\r\n-      setPromoMessage(\"Vui lòng nhập mã giảm giá\");\r\n+      setPromoMessage(\"Please enter a promo code\");\r\n       return;\r\n     }\r\n \r\n     try {\r\n-      const response = await fetch(\"/api/apply-promo\", {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify({\r\n-          code: promoCode.trim(),\r\n-          totalAmount: calculateTotal()\r\n-        }),\r\n-      });\r\n-\r\n+      const response = await fetch(\"/api/admin/notifications\");\r\n       const data = await response.json();\r\n+      \r\n+      if (data.ok && data.promoCodes) {\r\n+        const foundPromo = data.promoCodes.find(\r\n+          (promo: any) => promo.code.toLowerCase() === promoCode.toLowerCase() && promo.isActive\r\n+        );\r\n+        \r\n+        if (foundPromo) {\r\n+          setPromoAmount(foundPromo.amount);\r\n+          setAppliedPromoCode(foundPromo.code);\r\n+          setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n+          setPromoCode(\"\");\r\n+          // Lưu vào localStorage\r\n+          localStorage.setItem('appliedPromoCode', foundPromo.code);\r\n+          localStorage.setItem('promoAmount', foundPromo.amount.toString());\r\n \r\n-      if (!data.ok) {\r\n-        setPromoMessage(data.message);\r\n-        return;\r\n+          if (order) {\r\n+            setOrder(prevOrder => ({ ...prevOrder!, promoCode: foundPromo.code, promoAmount: foundPromo.amount }));\r\n+          }\r\n+        } else {\r\n+          setPromoMessage(\"Invalid or expired promo code\");\r\n+        }\r\n+      } else {\r\n+        setPromoMessage(\"Unable to check promo code\");\r\n       }\r\n-\r\n-      setPromoAmount(data.discountAmount);\r\n-      setAppliedPromoCode(data.promoCode);\r\n-      setPromoMessage(`Mã giảm giá ${data.discountAmount.toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n-      setPromoCode(\"\");\r\n-\r\n-      // Lưu vào localStorage\r\n-      localStorage.setItem('appliedPromoCode', JSON.stringify(data.promoCode));\r\n-      localStorage.setItem('promoAmount', data.discountAmount.toString());\r\n-\r\n-      if (order) {\r\n-        setOrder(prevOrder => ({ \r\n-          ...prevOrder!, \r\n-          promoCode: data.promoCode, \r\n-          promoAmount: data.discountAmount \r\n-        }));\r\n-      }\r\n     } catch (error) {\r\n       console.error(\"Error applying promo code:\", error);\r\n-      setPromoMessage(\"Có lỗi xảy ra khi áp dụng mã giảm giá\");\r\n+      setPromoMessage(\"An error occurred while applying the promo code\");\r\n     }\r\n   };\r\n \r\n   const calculateTotal = () => {\r\n@@ -188,28 +165,18 @@\n         <div style={styles.orderTotals}>\r\n           {(order.promoAmount !== undefined && order.promoAmount > 0) || promoAmount > 0 ? (\r\n             <>\r\n               <div style={styles.orderTotalRow}>\r\n-                <span>Mã giảm giá</span>\r\n+                <span>Promo Code</span>\r\n                 <span>- {(order.promoAmount !== undefined ? order.promoAmount : promoAmount).toLocaleString('vi-VN')} VND</span>\r\n               </div>\r\n               <div style={{ \r\n                 fontSize: \"0.7em\", \r\n                 color: \"#059669\",\r\n                 marginBottom: \"10px\",\r\n                 textAlign: \"right\"\r\n               }}>\r\n-                {appliedPromoCode && (\r\n-                  <div>\r\n-                    <p>Mã: {appliedPromoCode.code}</p>\r\n-                    <p>\r\n-                      {appliedPromoCode.type === 'fixed' \r\n-                        ? `Giảm ${appliedPromoCode.value.toLocaleString()}₫`\r\n-                        : `Giảm ${appliedPromoCode.value}%${appliedPromoCode.maxAmount ? ` (tối đa ${appliedPromoCode.maxAmount.toLocaleString()}₫)` : ''}`\r\n-                      }\r\n-                    </p>\r\n-                  </div>\r\n-                )}\r\n+                Promo code has been applied\r\n               </div>\r\n             </>\r\n           ) : (\r\n             <div style={{ marginBottom: \"15px\" }}>\r\n@@ -220,9 +187,9 @@\n                   onChange={(e) => {\r\n                     setPromoCode(e.target.value);\r\n                     if (promoMessage) setPromoMessage(\"\");\r\n                   }}\r\n-                  placeholder=\"Nhập mã giảm giá\"\r\n+                  placeholder=\"Enter promo code\"\r\n                   style={{\r\n                     flex: 1,\r\n                     padding: \"8px\",\r\n                     fontSize: \"0.7em\",\r\n@@ -239,9 +206,9 @@\n                     border: \"none\",\r\n                     cursor: \"pointer\",\r\n                   }}\r\n                 >\r\n-                  Áp dụng\r\n+                  Apply\r\n                 </button>\r\n               </div>\r\n               {promoMessage && (\r\n                 <p style={{\r\n"
                },
                {
                    "date": 1748619640403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,24 @@\n   color?: string;\r\n   size?: string;\r\n }\r\n \r\n+interface PromoCode {\r\n+  id: string;\r\n+  code: string;\r\n+  type: 'fixed' | 'percentage';\r\n+  value: number;\r\n+  maxAmount?: number | null;\r\n+  isLoginRequired: boolean;\r\n+  perUserLimit: number;\r\n+  expiryDate?: string | null;\r\n+  usedByUsers?: string[];\r\n+  usedCount?: number;\r\n+}\r\n+\r\n interface Order {\r\n   items: OrderItem[];\r\n-  promoCode?: string;\r\n+  promoCode?: PromoCode;\r\n   promoAmount?: number;\r\n }\r\n \r\n interface Styles {\r\n@@ -39,9 +52,9 @@\n   const [isMounted, setIsMounted] = useState(false);\r\n   const [promoCode, setPromoCode] = useState(\"\");\r\n   const [promoMessage, setPromoMessage] = useState(\"\");\r\n   const [promoAmount, setPromoAmount] = useState(0);\r\n-  const [appliedPromoCode, setAppliedPromoCode] = useState(\"\");\r\n+  const [appliedPromoCode, setAppliedPromoCode] = useState<PromoCode | null>(null);\r\n   const [order, setOrder] = useState<Order | null>(null);\r\n \r\n   useEffect(() => {\r\n     setIsMounted(true);\r\n@@ -58,70 +71,103 @@\n     const savedPromoCode = localStorage.getItem('appliedPromoCode');\r\n     const savedPromoAmount = localStorage.getItem('promoAmount');\r\n \r\n     if (savedPromoCode && savedPromoAmount) {\r\n-      setAppliedPromoCode(savedPromoCode);\r\n-      setPromoAmount(parseFloat(savedPromoAmount));\r\n-      setPromoMessage(`Mã giảm giá ${parseFloat(savedPromoAmount).toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n-       if (order) {\r\n-            setOrder(prevOrder => ({ ...prevOrder!, promoCode: savedPromoCode, promoAmount: parseFloat(savedPromoAmount) }));\r\n-          }\r\n+      try {\r\n+        const parsedPromoCode = JSON.parse(savedPromoCode);\r\n+        setAppliedPromoCode(parsedPromoCode);\r\n+        setPromoAmount(parseFloat(savedPromoAmount));\r\n+        setPromoMessage(`Mã giảm giá ${parseFloat(savedPromoAmount).toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n+        // Cập nhật order state nếu nó đã được load\r\n+        if (order) {\r\n+          setOrder(prevOrder => ({\r\n+            ...prevOrder!,\r\n+            promoCode: parsedPromoCode,\r\n+            promoAmount: parseFloat(savedPromoAmount)\r\n+          }));\r\n+        }\r\n+      } catch (e) {\r\n+        console.error(\"Error parsing saved promo code:\", e);\r\n+        // Xóa dữ liệu không hợp lệ nếu parsing thất bại\r\n+        localStorage.removeItem('appliedPromoCode');\r\n+        localStorage.removeItem('promoAmount');\r\n+      }\r\n     }\r\n+  }, [cartItems, order]); // Thêm order vào dependency array\r\n \r\n-  }, [cartItems]);\r\n+  const calculateTotal = () => {\r\n+    if (!order) return 0;\r\n+    const subtotal = order.items.reduce((total, item) => {\r\n+      const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n+      const price = parseFloat(priceStr as string) || 0;\r\n+      return total + (price * item.quantity);\r\n+    }, 0);\r\n+    // Sử dụng promoAmount từ state component hoặc từ order state nếu có\r\n+    const currentPromoAmount = order.promoAmount !== undefined ? order.promoAmount : promoAmount;\r\n+    return subtotal - currentPromoAmount;\r\n+  };\r\n \r\n   const handleApplyPromoCode = async () => {\r\n     setPromoMessage(\"\");\r\n+    setPromoAmount(0);\r\n+    setAppliedPromoCode(null);\r\n+\r\n     if (!promoCode.trim()) {\r\n-      setPromoMessage(\"Please enter a promo code\");\r\n+      setPromoMessage(\"Vui lòng nhập mã giảm giá\");\r\n       return;\r\n     }\r\n \r\n     try {\r\n-      const response = await fetch(\"/api/admin/notifications\");\r\n+      const response = await fetch(\"/api/apply-promo\", {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          code: promoCode.trim(),\r\n+          totalAmount: calculateTotal()\r\n+        }),\r\n+      });\r\n+\r\n       const data = await response.json();\r\n-      \r\n-      if (data.ok && data.promoCodes) {\r\n-        const foundPromo = data.promoCodes.find(\r\n-          (promo: any) => promo.code.toLowerCase() === promoCode.toLowerCase() && promo.isActive\r\n-        );\r\n-        \r\n-        if (foundPromo) {\r\n-          setPromoAmount(foundPromo.amount);\r\n-          setAppliedPromoCode(foundPromo.code);\r\n-          setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n-          setPromoCode(\"\");\r\n-          // Lưu vào localStorage\r\n-          localStorage.setItem('appliedPromoCode', foundPromo.code);\r\n-          localStorage.setItem('promoAmount', foundPromo.amount.toString());\r\n \r\n-          if (order) {\r\n-            setOrder(prevOrder => ({ ...prevOrder!, promoCode: foundPromo.code, promoAmount: foundPromo.amount }));\r\n-          }\r\n-        } else {\r\n-          setPromoMessage(\"Invalid or expired promo code\");\r\n+      if (!data.ok) {\r\n+        setPromoMessage(data.message);\r\n+        // Xóa mã giảm giá đã áp dụng nếu áp dụng mã mới thất bại\r\n+        localStorage.removeItem('appliedPromoCode');\r\n+        localStorage.removeItem('promoAmount');\r\n+        if (order) {\r\n+          setOrder(prevOrder => ({ ...prevOrder!, promoCode: undefined, promoAmount: undefined }));\r\n         }\r\n-      } else {\r\n-        setPromoMessage(\"Unable to check promo code\");\r\n+        return;\r\n       }\r\n+\r\n+      setPromoAmount(data.discountAmount);\r\n+      setAppliedPromoCode(data.promoCode);\r\n+      setPromoMessage(`Mã giảm giá ${data.discountAmount.toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n+      setPromoCode(\"\");\r\n+\r\n+      // Lưu vào localStorage\r\n+      localStorage.setItem('appliedPromoCode', JSON.stringify(data.promoCode));\r\n+      localStorage.setItem('promoAmount', data.discountAmount.toString());\r\n+\r\n+      // Cập nhật order state\r\n+      if (order) {\r\n+        setOrder(prevOrder => ({ ...prevOrder!, promoCode: data.promoCode, promoAmount: data.discountAmount }));\r\n+      }\r\n+\r\n     } catch (error) {\r\n       console.error(\"Error applying promo code:\", error);\r\n-      setPromoMessage(\"An error occurred while applying the promo code\");\r\n+      setPromoMessage(\"Có lỗi xảy ra khi áp dụng mã giảm giá\");\r\n+      // Xóa mã giảm giá đã áp dụng nếu có lỗi\r\n+      localStorage.removeItem('appliedPromoCode');\r\n+      localStorage.removeItem('promoAmount');\r\n+      if (order) {\r\n+        setOrder(prevOrder => ({ ...prevOrder!, promoCode: undefined, promoAmount: undefined }));\r\n+      }\r\n     }\r\n   };\r\n \r\n-  const calculateTotal = () => {\r\n-    if (!order) return 0;\r\n-    const subtotal = order.items.reduce((total, item) => {\r\n-      const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n-      const price = parseFloat(priceStr as string) || 0;\r\n-      return total + (price * item.quantity);\r\n-    }, 0);\r\n-    // Sử dụng promoAmount từ state component hoặc từ order state nếu có\r\n-    const currentPromoAmount = order.promoAmount !== undefined ? order.promoAmount : promoAmount;\r\n-    return subtotal - currentPromoAmount;\r\n-  };\r\n-\r\n   if (!isMounted || !order) return null;\r\n \r\n   return (\r\n     <div style={styles.rightSection}>\r\n@@ -165,18 +211,33 @@\n         <div style={styles.orderTotals}>\r\n           {(order.promoAmount !== undefined && order.promoAmount > 0) || promoAmount > 0 ? (\r\n             <>\r\n               <div style={styles.orderTotalRow}>\r\n-                <span>Promo Code</span>\r\n+                <span>Mã giảm giá</span>\r\n                 <span>- {(order.promoAmount !== undefined ? order.promoAmount : promoAmount).toLocaleString('vi-VN')} VND</span>\r\n               </div>\r\n               <div style={{ \r\n                 fontSize: \"0.7em\", \r\n                 color: \"#059669\",\r\n                 marginBottom: \"10px\",\r\n                 textAlign: \"right\"\r\n               }}>\r\n-                Promo code has been applied\r\n+                {/* Hiển thị thông tin chi tiết mã giảm giá nếu có */}\r\n+                {appliedPromoCode && (\r\n+                  <div>\r\n+                    <p>Mã: {appliedPromoCode.code}</p>\r\n+                    <p>\r\n+                      {appliedPromoCode.type === 'fixed' \r\n+                        ? `Giảm ${appliedPromoCode.value.toLocaleString('vi-VN')}₫`\r\n+                        : `Giảm ${appliedPromoCode.value}%${appliedPromoCode.maxAmount !== undefined && appliedPromoCode.maxAmount !== null ? ` (tối đa ${appliedPromoCode.maxAmount.toLocaleString('vi-VN')}₫)` : ''}`\r\n+                      }\r\n+                    </p>\r\n+                    {appliedPromoCode.isLoginRequired && <p>Yêu cầu đăng nhập</p>}\r\n+                    {appliedPromoCode.perUserLimit > 0 && <p>Giới hạn sử dụng: {appliedPromoCode.perUserLimit} lần/người</p>}\r\n+                    {appliedPromoCode.usedCount !== undefined && <p>Đã sử dụng: {appliedPromoCode.usedCount} lần</p>}\r\n+                    {appliedPromoCode.expiryDate && <p>Hết hạn: {new Date(appliedPromoCode.expiryDate).toLocaleDateString()}</p>}\r\n+                  </div>\r\n+                )}\r\n               </div>\r\n             </>\r\n           ) : (\r\n             <div style={{ marginBottom: \"15px\" }}>\r\n@@ -187,9 +248,9 @@\n                   onChange={(e) => {\r\n                     setPromoCode(e.target.value);\r\n                     if (promoMessage) setPromoMessage(\"\");\r\n                   }}\r\n-                  placeholder=\"Enter promo code\"\r\n+                  placeholder=\"Nhập mã giảm giá\"\r\n                   style={{\r\n                     flex: 1,\r\n                     padding: \"8px\",\r\n                     fontSize: \"0.7em\",\r\n@@ -206,9 +267,9 @@\n                     border: \"none\",\r\n                     cursor: \"pointer\",\r\n                   }}\r\n                 >\r\n-                  Apply\r\n+                  Áp dụng\r\n                 </button>\r\n               </div>\r\n               {promoMessage && (\r\n                 <p style={{\r\n"
                },
                {
                    "date": 1748620432758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,12 +230,8 @@\n                         ? `Giảm ${appliedPromoCode.value.toLocaleString('vi-VN')}₫`\r\n                         : `Giảm ${appliedPromoCode.value}%${appliedPromoCode.maxAmount !== undefined && appliedPromoCode.maxAmount !== null ? ` (tối đa ${appliedPromoCode.maxAmount.toLocaleString('vi-VN')}₫)` : ''}`\r\n                       }\r\n                     </p>\r\n-                    {appliedPromoCode.isLoginRequired && <p>Yêu cầu đăng nhập</p>}\r\n-                    {appliedPromoCode.perUserLimit > 0 && <p>Giới hạn sử dụng: {appliedPromoCode.perUserLimit} lần/người</p>}\r\n-                    {appliedPromoCode.usedCount !== undefined && <p>Đã sử dụng: {appliedPromoCode.usedCount} lần</p>}\r\n-                    {appliedPromoCode.expiryDate && <p>Hết hạn: {new Date(appliedPromoCode.expiryDate).toLocaleDateString()}</p>}\r\n                   </div>\r\n                 )}\r\n               </div>\r\n             </>\r\n"
                },
                {
                    "date": 1748621931531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,16 @@\n       }\r\n     }\r\n   }, [cartItems, order]); // Thêm order vào dependency array\r\n \r\n+  // Cleanup effect to remove promo code from localStorage when component unmounts\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      localStorage.removeItem('appliedPromoCode');\r\n+      localStorage.removeItem('promoAmount');\r\n+    };\r\n+  }, []); // Run effect only once on mount and cleanup on unmount\r\n+\r\n   const calculateTotal = () => {\r\n     if (!order) return 0;\r\n     const subtotal = order.items.reduce((total, item) => {\r\n       const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n"
                },
                {
                    "date": 1749540493971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,10 @@\n   quantity: number;\r\n   image: string;\r\n   color?: string;\r\n   size?: string;\r\n+  isPromoApplied: boolean;\r\n+  discount?: number;\r\n }\r\n \r\n interface PromoCode {\r\n   id: string;\r\n@@ -209,88 +211,99 @@\n                   <span>Expected 2-3 days</span>\r\n                 </div>\r\n                 <div style={styles.orderDetailRow}>\r\n                   <span>Price:</span>\r\n-                  <span>{(price * item.quantity).toLocaleString('vi-VN')} VND</span>\r\n+                  <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n+                    {item.isPromoApplied ? (\r\n+                      <>\r\n+                        <span style={{ textDecoration: 'line-through', color: '#666' }}>\r\n+                          {(price * item.quantity).toLocaleString('vi-VN')} VND\r\n+                        </span>\r\n+                        <span style={{ color: '#059669', fontWeight: 'bold' }}>\r\n+                          {((price * item.quantity) - (item.discount || 0)).toLocaleString('vi-VN')} VND\r\n+                        </span>\r\n+                        <span style={{ color: '#059669', fontSize: '0.8em' }}>\r\n+                          -{(item.discount || 0).toLocaleString('vi-VN')} VND\r\n+                        </span>\r\n+                      </>\r\n+                    ) : (\r\n+                      <span>{(price * item.quantity).toLocaleString('vi-VN')} VND</span>\r\n+                    )}\r\n+                  </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           );\r\n         })}\r\n         <div style={styles.orderTotals}>\r\n+          <div style={styles.orderTotalRow}>\r\n+            <span>Subtotal</span>\r\n+            <span>{order.items.reduce((total, item) => {\r\n+              const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n+              const price = parseFloat(priceStr as string) || 0;\r\n+              return total + (price * item.quantity);\r\n+            }, 0).toLocaleString('vi-VN')} VND</span>\r\n+          </div>\r\n           {(order.promoAmount !== undefined && order.promoAmount > 0) || promoAmount > 0 ? (\r\n             <>\r\n               <div style={styles.orderTotalRow}>\r\n                 <span>Mã giảm giá</span>\r\n-                <span>- {(order.promoAmount !== undefined ? order.promoAmount : promoAmount).toLocaleString('vi-VN')} VND</span>\r\n-              </div>\r\n-              <div style={{ \r\n-                fontSize: \"0.7em\", \r\n-                color: \"#059669\",\r\n-                marginBottom: \"10px\",\r\n-                textAlign: \"right\"\r\n-              }}>\r\n-                {/* Hiển thị thông tin chi tiết mã giảm giá nếu có */}\r\n-                {appliedPromoCode && (\r\n-                  <div>\r\n-                    <p>Mã: {appliedPromoCode.code}</p>\r\n-                    <p>\r\n+                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n+                  <span style={{ color: '#059669' }}>\r\n+                    - {(order.promoAmount !== undefined ? order.promoAmount : promoAmount).toLocaleString('vi-VN')} VND\r\n+                  </span>\r\n+                  {appliedPromoCode && (\r\n+                    <span style={{ fontSize: '0.8em', color: '#059669' }}>\r\n                       {appliedPromoCode.type === 'fixed' \r\n                         ? `Giảm ${appliedPromoCode.value.toLocaleString('vi-VN')}₫`\r\n                         : `Giảm ${appliedPromoCode.value}%${appliedPromoCode.maxAmount !== undefined && appliedPromoCode.maxAmount !== null ? ` (tối đa ${appliedPromoCode.maxAmount.toLocaleString('vi-VN')}₫)` : ''}`\r\n                       }\r\n-                    </p>\r\n-                  </div>\r\n-                )}\r\n+                    </span>\r\n+                  )}\r\n+                </div>\r\n               </div>\r\n             </>\r\n           ) : (\r\n             <div style={{ marginBottom: \"15px\" }}>\r\n               <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"10px\" }}>\r\n                 <input\r\n                   type=\"text\"\r\n                   value={promoCode}\r\n-                  onChange={(e) => {\r\n-                    setPromoCode(e.target.value);\r\n-                    if (promoMessage) setPromoMessage(\"\");\r\n-                  }}\r\n+                  onChange={(e) => setPromoCode(e.target.value)}\r\n                   placeholder=\"Nhập mã giảm giá\"\r\n                   style={{\r\n                     flex: 1,\r\n                     padding: \"8px\",\r\n-                    fontSize: \"0.7em\",\r\n-                    border: \"1px solid #000000\",\r\n+                    border: \"1px solid #000\",\r\n+                    fontSize: \"0.8em\"\r\n                   }}\r\n                 />\r\n                 <button\r\n                   onClick={handleApplyPromoCode}\r\n                   style={{\r\n-                    padding: \"8px 15px\",\r\n-                    fontSize: \"0.7em\",\r\n-                    backgroundColor: \"#000000\",\r\n-                    color: \"#ffffff\",\r\n+                    padding: \"8px 16px\",\r\n+                    backgroundColor: \"#000\",\r\n+                    color: \"#fff\",\r\n                     border: \"none\",\r\n                     cursor: \"pointer\",\r\n+                    fontSize: \"0.8em\"\r\n                   }}\r\n                 >\r\n                   Áp dụng\r\n                 </button>\r\n               </div>\r\n               {promoMessage && (\r\n-                <p style={{\r\n-                  fontSize: \"0.7em\",\r\n-                  color: promoMessage.includes(\"đã được áp dụng\") ? \"#059669\" : \"#dc2626\",\r\n+                <p style={{ \r\n+                  fontSize: \"0.8em\", \r\n+                  color: promoMessage.includes(\"thành công\") ? \"#059669\" : \"#dc2626\",\r\n+                  marginTop: \"5px\"\r\n                 }}>\r\n                   {promoMessage}\r\n                 </p>\r\n               )}\r\n             </div>\r\n           )}\r\n-          <div style={styles.orderTotalRow}>\r\n-            <span>Shipping</span>\r\n-            <span>Free (Express)</span>\r\n-          </div>\r\n-          <div style={styles.orderTotalRow}>\r\n+          <div style={{ ...styles.orderTotalRow, borderTop: \"1px solid #000\", paddingTop: \"10px\", marginTop: \"10px\" }}>\r\n             <span style={{ fontWeight: \"bold\" }}>Total</span>\r\n             <span style={{ fontWeight: \"bold\" }}>{calculateTotal().toLocaleString('vi-VN')} VND</span>\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1749540817931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,8 @@\n   quantity: number;\r\n   image: string;\r\n   color?: string;\r\n   size?: string;\r\n-  isPromoApplied: boolean;\r\n-  discount?: number;\r\n }\r\n \r\n interface PromoCode {\r\n   id: string;\r\n@@ -211,99 +209,88 @@\n                   <span>Expected 2-3 days</span>\r\n                 </div>\r\n                 <div style={styles.orderDetailRow}>\r\n                   <span>Price:</span>\r\n-                  <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n-                    {item.isPromoApplied ? (\r\n-                      <>\r\n-                        <span style={{ textDecoration: 'line-through', color: '#666' }}>\r\n-                          {(price * item.quantity).toLocaleString('vi-VN')} VND\r\n-                        </span>\r\n-                        <span style={{ color: '#059669', fontWeight: 'bold' }}>\r\n-                          {((price * item.quantity) - (item.discount || 0)).toLocaleString('vi-VN')} VND\r\n-                        </span>\r\n-                        <span style={{ color: '#059669', fontSize: '0.8em' }}>\r\n-                          -{(item.discount || 0).toLocaleString('vi-VN')} VND\r\n-                        </span>\r\n-                      </>\r\n-                    ) : (\r\n-                      <span>{(price * item.quantity).toLocaleString('vi-VN')} VND</span>\r\n-                    )}\r\n-                  </div>\r\n+                  <span>{(price * item.quantity).toLocaleString('vi-VN')} VND</span>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           );\r\n         })}\r\n         <div style={styles.orderTotals}>\r\n-          <div style={styles.orderTotalRow}>\r\n-            <span>Subtotal</span>\r\n-            <span>{order.items.reduce((total, item) => {\r\n-              const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n-              const price = parseFloat(priceStr as string) || 0;\r\n-              return total + (price * item.quantity);\r\n-            }, 0).toLocaleString('vi-VN')} VND</span>\r\n-          </div>\r\n           {(order.promoAmount !== undefined && order.promoAmount > 0) || promoAmount > 0 ? (\r\n             <>\r\n               <div style={styles.orderTotalRow}>\r\n                 <span>Mã giảm giá</span>\r\n-                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n-                  <span style={{ color: '#059669' }}>\r\n-                    - {(order.promoAmount !== undefined ? order.promoAmount : promoAmount).toLocaleString('vi-VN')} VND\r\n-                  </span>\r\n-                  {appliedPromoCode && (\r\n-                    <span style={{ fontSize: '0.8em', color: '#059669' }}>\r\n+                <span>- {(order.promoAmount !== undefined ? order.promoAmount : promoAmount).toLocaleString('vi-VN')} VND</span>\r\n+              </div>\r\n+              <div style={{ \r\n+                fontSize: \"0.7em\", \r\n+                color: \"#059669\",\r\n+                marginBottom: \"10px\",\r\n+                textAlign: \"right\"\r\n+              }}>\r\n+                {/* Hiển thị thông tin chi tiết mã giảm giá nếu có */}\r\n+                {appliedPromoCode && (\r\n+                  <div>\r\n+                    <p>Mã: {appliedPromoCode.code}</p>\r\n+                    <p>\r\n                       {appliedPromoCode.type === 'fixed' \r\n                         ? `Giảm ${appliedPromoCode.value.toLocaleString('vi-VN')}₫`\r\n                         : `Giảm ${appliedPromoCode.value}%${appliedPromoCode.maxAmount !== undefined && appliedPromoCode.maxAmount !== null ? ` (tối đa ${appliedPromoCode.maxAmount.toLocaleString('vi-VN')}₫)` : ''}`\r\n                       }\r\n-                    </span>\r\n-                  )}\r\n-                </div>\r\n+                    </p>\r\n+                  </div>\r\n+                )}\r\n               </div>\r\n             </>\r\n           ) : (\r\n             <div style={{ marginBottom: \"15px\" }}>\r\n               <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"10px\" }}>\r\n                 <input\r\n                   type=\"text\"\r\n                   value={promoCode}\r\n-                  onChange={(e) => setPromoCode(e.target.value)}\r\n+                  onChange={(e) => {\r\n+                    setPromoCode(e.target.value);\r\n+                    if (promoMessage) setPromoMessage(\"\");\r\n+                  }}\r\n                   placeholder=\"Nhập mã giảm giá\"\r\n                   style={{\r\n                     flex: 1,\r\n                     padding: \"8px\",\r\n-                    border: \"1px solid #000\",\r\n-                    fontSize: \"0.8em\"\r\n+                    fontSize: \"0.7em\",\r\n+                    border: \"1px solid #000000\",\r\n                   }}\r\n                 />\r\n                 <button\r\n                   onClick={handleApplyPromoCode}\r\n                   style={{\r\n-                    padding: \"8px 16px\",\r\n-                    backgroundColor: \"#000\",\r\n-                    color: \"#fff\",\r\n+                    padding: \"8px 15px\",\r\n+                    fontSize: \"0.7em\",\r\n+                    backgroundColor: \"#000000\",\r\n+                    color: \"#ffffff\",\r\n                     border: \"none\",\r\n                     cursor: \"pointer\",\r\n-                    fontSize: \"0.8em\"\r\n                   }}\r\n                 >\r\n                   Áp dụng\r\n                 </button>\r\n               </div>\r\n               {promoMessage && (\r\n-                <p style={{ \r\n-                  fontSize: \"0.8em\", \r\n-                  color: promoMessage.includes(\"thành công\") ? \"#059669\" : \"#dc2626\",\r\n-                  marginTop: \"5px\"\r\n+                <p style={{\r\n+                  fontSize: \"0.7em\",\r\n+                  color: promoMessage.includes(\"đã được áp dụng\") ? \"#059669\" : \"#dc2626\",\r\n                 }}>\r\n                   {promoMessage}\r\n                 </p>\r\n               )}\r\n             </div>\r\n           )}\r\n-          <div style={{ ...styles.orderTotalRow, borderTop: \"1px solid #000\", paddingTop: \"10px\", marginTop: \"10px\" }}>\r\n+          <div style={styles.orderTotalRow}>\r\n+            <span>Shipping</span>\r\n+            <span>Free (Express)</span>\r\n+          </div>\r\n+          <div style={styles.orderTotalRow}>\r\n             <span style={{ fontWeight: \"bold\" }}>Total</span>\r\n             <span style={{ fontWeight: \"bold\" }}>{calculateTotal().toLocaleString('vi-VN')} VND</span>\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1749548758426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,16 +124,16 @@\n       return;\r\n     }\r\n \r\n     try {\r\n-      const response = await fetch(\"/api/apply-promo\", {\r\n+      const response = await fetch(\"/api/cart/apply-promo\", {\r\n         method: 'POST',\r\n         headers: {\r\n           'Content-Type': 'application/json',\r\n         },\r\n         body: JSON.stringify({\r\n-          code: promoCode.trim(),\r\n-          totalAmount: calculateTotal()\r\n+          promoCode: promoCode.trim(),\r\n+          cartItems: order.items\r\n         }),\r\n       });\r\n \r\n       const data = await response.json();\r\n@@ -148,20 +148,20 @@\n         }\r\n         return;\r\n       }\r\n \r\n-      setPromoAmount(data.discountAmount);\r\n+      setPromoAmount(data.totalDiscount);\r\n       setAppliedPromoCode(data.promoCode);\r\n-      setPromoMessage(`Mã giảm giá ${data.discountAmount.toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n+      setPromoMessage(`Mã giảm giá ${data.totalDiscount.toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n       setPromoCode(\"\");\r\n \r\n       // Lưu vào localStorage\r\n       localStorage.setItem('appliedPromoCode', JSON.stringify(data.promoCode));\r\n-      localStorage.setItem('promoAmount', data.discountAmount.toString());\r\n+      localStorage.setItem('promoAmount', data.totalDiscount.toString());\r\n \r\n       // Cập nhật order state\r\n       if (order) {\r\n-        setOrder(prevOrder => ({ ...prevOrder!, promoCode: data.promoCode, promoAmount: data.discountAmount }));\r\n+        setOrder(prevOrder => ({ ...prevOrder!, promoCode: data.promoCode, promoAmount: data.totalDiscount }));\r\n       }\r\n \r\n     } catch (error) {\r\n       console.error(\"Error applying promo code:\", error);\r\n"
                },
                {
                    "date": 1749548806255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,16 +124,16 @@\n       return;\r\n     }\r\n \r\n     try {\r\n-      const response = await fetch(\"/api/cart/apply-promo\", {\r\n+      const response = await fetch(\"/api/apply-promo\", {\r\n         method: 'POST',\r\n         headers: {\r\n           'Content-Type': 'application/json',\r\n         },\r\n         body: JSON.stringify({\r\n-          promoCode: promoCode.trim(),\r\n-          cartItems: order.items\r\n+          code: promoCode.trim(),\r\n+          totalAmount: calculateTotal()\r\n         }),\r\n       });\r\n \r\n       const data = await response.json();\r\n@@ -148,20 +148,20 @@\n         }\r\n         return;\r\n       }\r\n \r\n-      setPromoAmount(data.totalDiscount);\r\n+      setPromoAmount(data.discountAmount);\r\n       setAppliedPromoCode(data.promoCode);\r\n-      setPromoMessage(`Mã giảm giá ${data.totalDiscount.toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n+      setPromoMessage(`Mã giảm giá ${data.discountAmount.toLocaleString('vi-VN')} VND đã được áp dụng!`);\r\n       setPromoCode(\"\");\r\n \r\n       // Lưu vào localStorage\r\n       localStorage.setItem('appliedPromoCode', JSON.stringify(data.promoCode));\r\n-      localStorage.setItem('promoAmount', data.totalDiscount.toString());\r\n+      localStorage.setItem('promoAmount', data.discountAmount.toString());\r\n \r\n       // Cập nhật order state\r\n       if (order) {\r\n-        setOrder(prevOrder => ({ ...prevOrder!, promoCode: data.promoCode, promoAmount: data.totalDiscount }));\r\n+        setOrder(prevOrder => ({ ...prevOrder!, promoCode: data.promoCode, promoAmount: data.discountAmount }));\r\n       }\r\n \r\n     } catch (error) {\r\n       console.error(\"Error applying promo code:\", error);\r\n"
                },
                {
                    "date": 1749550174950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,10 @@\n           'Content-Type': 'application/json',\r\n         },\r\n         body: JSON.stringify({\r\n           code: promoCode.trim(),\r\n-          totalAmount: calculateTotal()\r\n+          totalAmount: calculateTotal(),\r\n+          cartItems: order.items\r\n         }),\r\n       });\r\n \r\n       const data = await response.json();\r\n"
                },
                {
                    "date": 1749550247684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n         },\r\n         body: JSON.stringify({\r\n           code: promoCode.trim(),\r\n           totalAmount: calculateTotal(),\r\n-          cartItems: order.items\r\n+          cartItems: order ? order.items : []\r\n         }),\r\n       });\r\n \r\n       const data = await response.json();\r\n"
                }
            ],
            "date": 1747638254761,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useCart } from \"../../../context/CartContext\";\r\n\r\ninterface OrderItem {\r\n  name: string;\r\n  price: string | number;\r\n  quantity: number;\r\n  image: string;\r\n  color?: string;\r\n  size?: string;\r\n}\r\n\r\ninterface Order {\r\n  items: OrderItem[];\r\n  promoCode?: string;\r\n  promoAmount?: number;\r\n}\r\n\r\nexport default function OrderSummary() {\r\n  const { cartItems } = useCart();\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [promoCode, setPromoCode] = useState(\"\");\r\n  const [promoMessage, setPromoMessage] = useState(\"\");\r\n  const [promoAmount, setPromoAmount] = useState(0);\r\n  const [appliedPromoCode, setAppliedPromoCode] = useState(\"\");\r\n  const [order, setOrder] = useState<Order | null>(null);\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n    // Lấy order từ localStorage nếu có\r\n    const orderData = localStorage.getItem(\"order\");\r\n    if (orderData) {\r\n      setOrder(JSON.parse(orderData));\r\n    } else {\r\n      // Nếu không có order, tạo order từ cartItems\r\n      setOrder({ items: cartItems });\r\n    }\r\n  }, [cartItems]);\r\n\r\n  const handleApplyPromoCode = async () => {\r\n    setPromoMessage(\"\");\r\n    if (!promoCode.trim()) {\r\n      setPromoMessage(\"Please enter a promo code\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/admin/notifications\");\r\n      const data = await response.json();\r\n      \r\n      if (data.ok && data.promoCodes) {\r\n        const foundPromo = data.promoCodes.find(\r\n          (promo: any) => promo.code.toLowerCase() === promoCode.toLowerCase() && promo.isActive\r\n        );\r\n        \r\n        if (foundPromo) {\r\n          setPromoAmount(foundPromo.amount);\r\n          setAppliedPromoCode(foundPromo.code);\r\n          setPromoMessage(`Promo code ${foundPromo.amount.toLocaleString('vi-VN')} VND has been applied!`);\r\n          setPromoCode(\"\");\r\n          if (order) {\r\n            setOrder({ ...order, promoCode: foundPromo.code, promoAmount: foundPromo.amount });\r\n          }\r\n        } else {\r\n          setPromoMessage(\"Invalid or expired promo code\");\r\n        }\r\n      } else {\r\n        setPromoMessage(\"Unable to check promo code\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error applying promo code:\", error);\r\n      setPromoMessage(\"An error occurred while applying the promo code\");\r\n    }\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    if (!order) return 0;\r\n    const subtotal = order.items.reduce((total, item) => {\r\n      const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n      const price = parseFloat(priceStr as string) || 0;\r\n      return total + (price * item.quantity);\r\n    }, 0);\r\n    return subtotal - (order.promoAmount || promoAmount);\r\n  };\r\n\r\n  if (!isMounted || !order) return null;\r\n\r\n  return (\r\n    <div style={styles.rightSection}>\r\n      <div style={styles.orderSummary}>\r\n        <h2 style={{ ...styles.sectionTitle, textAlign: \"center\", borderBottom: \"1px solid #000000\", paddingBottom: \"10px\" }}>\r\n          ORDER SUMMARY\r\n        </h2>\r\n        {order.items.map((item, index) => {\r\n          const priceStr = typeof item.price === 'string' ? item.price.replace('AU$', '').trim() : item.price;\r\n          const price = parseFloat(priceStr as string) || 0;\r\n          const color = item.color || (cartItems && cartItems[index] && cartItems[index].color) || \"Không xác định\";\r\n          return (\r\n            <div key={index} style={styles.orderItem}>\r\n              <img src={item.image} alt={item.name} style={styles.orderImage} />\r\n              <div style={styles.orderItemDetails}>\r\n                <p style={{ fontWeight: \"bold\", marginBottom: \"8px\", fontSize: \"0.95em\" }}>{item.name}</p>\r\n                <div style={styles.orderDetailRow}>\r\n                  <span>Quantity:</span>\r\n                  <span>{item.quantity}</span>\r\n                </div>\r\n                <div style={styles.orderDetailRow}>\r\n                  <span>Color:</span>\r\n                  <span>{color}</span>\r\n                </div>\r\n                <div style={styles.orderDetailRow}>\r\n                  <span>Size:</span>\r\n                  <span>{item.size}</span>\r\n                </div>\r\n                <div style={styles.orderDetailRow}>\r\n                  <span>Time:</span>\r\n                  <span>Expected 2-3 days</span>\r\n                </div>\r\n                <div style={styles.orderDetailRow}>\r\n                  <span>Price:</span>\r\n                  <span>{(price * item.quantity).toLocaleString('vi-VN')} VND</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div style={styles.orderTotals}>\r\n          {(order.promoAmount || promoAmount) > 0 ? (\r\n            <>\r\n              <div style={styles.orderTotalRow}>\r\n                <span>Promo Code</span>\r\n                <span>- {(order.promoAmount || promoAmount).toLocaleString('vi-VN')} VND</span>\r\n              </div>\r\n              <div style={{ \r\n                fontSize: \"0.7em\", \r\n                color: \"#059669\",\r\n                marginBottom: \"10px\",\r\n                textAlign: \"right\"\r\n              }}>\r\n                Promo code has been applied\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div style={{ marginBottom: \"15px\" }}>\r\n              <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"10px\" }}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={promoCode}\r\n                  onChange={(e) => {\r\n                    setPromoCode(e.target.value);\r\n                    if (promoMessage) setPromoMessage(\"\");\r\n                  }}\r\n                  placeholder=\"Enter promo code\"\r\n                  style={{\r\n                    flex: 1,\r\n                    padding: \"8px\",\r\n                    fontSize: \"0.7em\",\r\n                    border: \"1px solid #000000\",\r\n                  }}\r\n                />\r\n                <button\r\n                  onClick={handleApplyPromoCode}\r\n                  style={{\r\n                    padding: \"8px 15px\",\r\n                    fontSize: \"0.7em\",\r\n                    backgroundColor: \"#000000\",\r\n                    color: \"#ffffff\",\r\n                    border: \"none\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Apply\r\n                </button>\r\n              </div>\r\n              {promoMessage && (\r\n                <p style={{\r\n                  fontSize: \"0.7em\",\r\n                  color: promoMessage.includes(\"đã được áp dụng\") ? \"#059669\" : \"#dc2626\",\r\n                }}>\r\n                  {promoMessage}\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div style={styles.orderTotalRow}>\r\n            <span>Shipping</span>\r\n            <span>Free (Express)</span>\r\n          </div>\r\n          <div style={styles.orderTotalRow}>\r\n            <span style={{ fontWeight: \"bold\" }}>Total</span>\r\n            <span style={{ fontWeight: \"bold\" }}>{calculateTotal().toLocaleString('vi-VN')} VND</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ ...styles.viewDetailsSection, borderTop: \"1px solid #000000\", paddingTop: \"10px\" }}>\r\n        <div style={styles.viewDetails}>VIEW DETAILS</div>\r\n        <div style={styles.billingNote}>\r\n          Please note that you can choose between two payment methods: Bank Transfer or Cash on Delivery (COD). For Bank Transfer, please complete the payment after placing your order to proceed with processing. For COD, you will pay in cash when the product is delivered to your address.\r\n        </div>\r\n      </div>\r\n      <div style={{ ...styles.helpSection, borderTop: \"1px solid #000000\", borderBottom: \"1px solid #000000\", paddingTop: \"10px\", paddingBottom: \"10px\" }}>\r\n        <p style={{ marginBottom: \"10px\", fontWeight: \"bold\" }}>MAY WE HELP?</p>\r\n        <p style={{ marginBottom: \"10px\" }}>0347272386</p>\r\n        <p style={{ marginBottom: \"10px\" }}>aish.aish.vn@gmail.com</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  rightSection: {\r\n    flex: 1,\r\n    backgroundColor: \"#ffffff\",\r\n    padding: \"15px\",\r\n    border: \"1px solid #e0e0e0\",\r\n    color: \"#000000\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"20px\",\r\n  },\r\n  orderSummary: {\r\n    color: \"#000000\",\r\n  },\r\n  sectionTitle: {\r\n    fontSize: \"1.1em\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"15px\",\r\n    color: \"#000000\",\r\n  },\r\n  orderItem: {\r\n    display: \"flex\",\r\n    gap: \"15px\",\r\n    marginBottom: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    borderBottom: \"1px solid #e0e0e0\",\r\n  },\r\n  orderImage: {\r\n    width: \"80px\",\r\n    height: \"80px\",\r\n    objectFit: \"cover\",\r\n  },\r\n  orderItemDetails: {\r\n    flex: 1,\r\n  },\r\n  orderDetailRow: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    fontSize: \"0.85em\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  orderTotals: {\r\n    marginTop: \"20px\",\r\n  },\r\n  orderTotalRow: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"10px\",\r\n    fontSize: \"0.9em\",\r\n  },\r\n  viewDetailsSection: {\r\n    marginTop: \"20px\",\r\n  },\r\n  viewDetails: {\r\n    fontSize: \"0.9em\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  billingNote: {\r\n    fontSize: \"0.8em\",\r\n    color: \"#666\",\r\n    lineHeight: \"1.5\",\r\n  },\r\n  helpSection: {\r\n    marginTop: \"20px\",\r\n  },\r\n};"
        }
    ]
}